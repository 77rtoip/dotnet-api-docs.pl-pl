<Type Name="Action&lt;T&gt;" FullName="System.Action&lt;T&gt;">
  <Metadata><Meta Name="ms.openlocfilehash" Value="8a2282810184f9346dadc33bd241406f3515f9fe" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69422067" /></Metadata><TypeSignature Language="C#" Value="public delegate void Action&lt;in T&gt;(T obj);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed Action`1&lt;- T&gt; extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.Action`1" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Sub Action(Of In T)(obj As T)" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T&gt;&#xA;public delegate void Action(T obj);" />
  <TypeSignature Language="F#" Value="type Action&lt;'T&gt; = delegate of 'T -&gt; unit" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T">
      <Constraints>
        <ParameterAttribute>Contravariant</ParameterAttribute>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Parameters>
    <Parameter Name="obj" Type="T" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Void</ReturnType>
  </ReturnValue>
  <Docs>
    <typeparam name="T"><span data-ttu-id="c7765-101">Typ parametru metody, który jest hermetyzowany przez ten delegat.</span><span class="sxs-lookup"><span data-stu-id="c7765-101">The type of the parameter of the method that this delegate encapsulates.</span></span></typeparam>
    <param name="obj"><span data-ttu-id="c7765-102">Parametr metody, która jest hermetyzowana przez ten delegat.</span><span class="sxs-lookup"><span data-stu-id="c7765-102">The parameter of the method that this delegate encapsulates.</span></span></param>
    <summary><span data-ttu-id="c7765-103">Hermetyzuje metodę, która ma jeden parametr i nie zwraca wartości.</span><span class="sxs-lookup"><span data-stu-id="c7765-103">Encapsulates a method that has a single parameter and does not return a value.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c7765-104">Można użyć <xref:System.Action%601> delegata, aby przekazać metodę jako parametr bez jawnego deklarowania niestandardowego delegata.</span><span class="sxs-lookup"><span data-stu-id="c7765-104">You can use the <xref:System.Action%601> delegate to pass a method as a parameter without explicitly declaring a custom delegate.</span></span> <span data-ttu-id="c7765-105">Metoda hermetyzowana musi odpowiadać sygnaturze metody zdefiniowanej przez tego delegata.</span><span class="sxs-lookup"><span data-stu-id="c7765-105">The encapsulated method must correspond to the method signature that is defined by this delegate.</span></span> <span data-ttu-id="c7765-106">Oznacza to, że metoda hermetyzowana musi mieć jeden parametr, który jest przesyłany do niego przez wartość i nie może zwracać wartości.</span><span class="sxs-lookup"><span data-stu-id="c7765-106">This means that the encapsulated method must have one parameter that is passed to it by value, and it must not return a value.</span></span> <span data-ttu-id="c7765-107">(W C#, metoda musi zwracać `void`.</span><span class="sxs-lookup"><span data-stu-id="c7765-107">(In C#, the method must return `void`.</span></span> <span data-ttu-id="c7765-108">W Visual Basic musi być zdefiniowana przez `Sub`...`End Sub`</span><span class="sxs-lookup"><span data-stu-id="c7765-108">In Visual Basic, it must be defined by the `Sub`…`End Sub`</span></span> <span data-ttu-id="c7765-109">Konstruuj.</span><span class="sxs-lookup"><span data-stu-id="c7765-109">construct.</span></span> <span data-ttu-id="c7765-110">Może być również metodą zwracającą wartość, która jest ignorowana.) Zazwyczaj taka metoda jest używana do wykonywania operacji.</span><span class="sxs-lookup"><span data-stu-id="c7765-110">It can also be a method that returns a value that is ignored.) Typically, such a method is used to perform an operation.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c7765-111">Aby odwołać się do metody, która ma jeden parametr i zwraca wartość, należy <xref:System.Func%602> zamiast tego użyć delegata generycznego.</span><span class="sxs-lookup"><span data-stu-id="c7765-111">To reference a method that has one parameter and returns a value, use the generic <xref:System.Func%602> delegate instead.</span></span>  
  
 <span data-ttu-id="c7765-112">Gdy używasz <xref:System.Action%601> delegata, nie musisz jawnie definiować delegata, który hermetyzuje metodę z pojedynczym parametrem.</span><span class="sxs-lookup"><span data-stu-id="c7765-112">When you use the <xref:System.Action%601> delegate, you do not have to explicitly define a delegate that encapsulates a method with a single parameter.</span></span> <span data-ttu-id="c7765-113">Na przykład poniższy kod jawnie deklaruje delegata o nazwie `DisplayMessage` i przypisuje odwołanie do <xref:System.Console.WriteLine%2A> metody lub `ShowWindowsMessage` metody do jego wystąpienia delegata.</span><span class="sxs-lookup"><span data-stu-id="c7765-113">For example, the following code explicitly declares a delegate named `DisplayMessage` and assigns a reference to either the <xref:System.Console.WriteLine%2A> method or the `ShowWindowsMessage` method to its delegate instance.</span></span>  
  
 [!code-cpp[System.Action~1#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Action~1/cpp/delegate.cpp#1)]
 [!code-csharp[System.Action~1#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Action~1/cs/Delegate.cs#1)]
 [!code-vb[System.Action~1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Action~1/vb/Delegate.vb#1)]  
  
 <span data-ttu-id="c7765-114">Poniższy przykład upraszcza ten kod przez utworzenie wystąpienia <xref:System.Action%601> delegata zamiast jawnego definiowania nowego delegata i przypisanie do niego nazwanej metody.</span><span class="sxs-lookup"><span data-stu-id="c7765-114">The following example simplifies this code by instantiating the <xref:System.Action%601> delegate instead of explicitly defining a new delegate and assigning a named method to it.</span></span>  
  
 [!code-cpp[System.Action~1#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Action~1/cpp/action`1.cpp#2)]
 [!code-csharp[System.Action~1#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Action~1/cs/Action1.cs#2)]
 [!code-vb[System.Action~1#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Action~1/vb/Action1.vb#2)]  
  
 <span data-ttu-id="c7765-115">Można również użyć <xref:System.Action%601> delegata z metodami anonimowymi C#w, jak pokazano w poniższym przykładzie.</span><span class="sxs-lookup"><span data-stu-id="c7765-115">You can also use the <xref:System.Action%601> delegate with anonymous methods in C#, as the following example illustrates.</span></span> <span data-ttu-id="c7765-116">(Aby uzyskać wprowadzenie do metod anonimowych, zobacz [metody anonimowe](~/docs/csharp/programming-guide/statements-expressions-operators/anonymous-methods.md)).</span><span class="sxs-lookup"><span data-stu-id="c7765-116">(For an introduction to anonymous methods, see [Anonymous Methods](~/docs/csharp/programming-guide/statements-expressions-operators/anonymous-methods.md).)</span></span>  
  
 [!code-csharp[System.Action~1#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Action~1/cs/Anon.cs#3)]  
  
 <span data-ttu-id="c7765-117">Można również przypisać wyrażenie lambda do <xref:System.Action%601> wystąpienia delegata, jak pokazano w poniższym przykładzie.</span><span class="sxs-lookup"><span data-stu-id="c7765-117">You can also assign a lambda expression to an <xref:System.Action%601> delegate instance, as the following example illustrates.</span></span> <span data-ttu-id="c7765-118">(Aby uzyskać wprowadzenie do wyrażeń lambda, zobacz [lambda Expressions](~/docs/csharp/programming-guide/statements-expressions-operators/lambda-expressions.md)).</span><span class="sxs-lookup"><span data-stu-id="c7765-118">(For an introduction to lambda expressions, see [Lambda Expressions](~/docs/csharp/programming-guide/statements-expressions-operators/lambda-expressions.md).)</span></span>  
  
 [!code-csharp[System.Action~1#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Action~1/cs/Lambda.cs#4)]
 [!code-vb[System.Action~1#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Action~1/vb/lambda.vb#4)]  
  
 <span data-ttu-id="c7765-119">Metody <xref:System.Collections.Generic.List%601.ForEach%2A> i <xref:System.Array.ForEach%2A> każdego z nich przyjmują <xref:System.Action%601> delegata jako parametr.</span><span class="sxs-lookup"><span data-stu-id="c7765-119">The <xref:System.Collections.Generic.List%601.ForEach%2A> and <xref:System.Array.ForEach%2A> methods each take an <xref:System.Action%601> delegate as a parameter.</span></span> <span data-ttu-id="c7765-120">Metoda hermetyzowana przez delegata umożliwia wykonywanie akcji dla każdego elementu w tablicy lub liście.</span><span class="sxs-lookup"><span data-stu-id="c7765-120">The method encapsulated by the delegate allows you to perform an action on each element in the array or list.</span></span> <span data-ttu-id="c7765-121">W przykładzie zastosowano <xref:System.Collections.Generic.List%601.ForEach%2A> metodę, aby dostarczyć ilustrację.</span><span class="sxs-lookup"><span data-stu-id="c7765-121">The example uses the <xref:System.Collections.Generic.List%601.ForEach%2A> method to provide an illustration.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c7765-122">Poniższy przykład ilustruje użycie <xref:System.Action%601> delegata do drukowania zawartości <xref:System.Collections.Generic.List%601> obiektu.</span><span class="sxs-lookup"><span data-stu-id="c7765-122">The following example demonstrates the use of the <xref:System.Action%601> delegate to print the contents of a <xref:System.Collections.Generic.List%601> object.</span></span> <span data-ttu-id="c7765-123">W tym przykładzie `Print` Metoda jest używana do wyświetlania zawartości listy w konsoli programu.</span><span class="sxs-lookup"><span data-stu-id="c7765-123">In this example, the `Print` method is used to display the contents of the list to the console.</span></span> <span data-ttu-id="c7765-124">Ponadto C# przykład ilustruje użycie anonimowych metod do wyświetlania zawartości w konsoli programu.</span><span class="sxs-lookup"><span data-stu-id="c7765-124">In addition, the C# example also demonstrates the use of anonymous methods to display the contents to the console.</span></span> <span data-ttu-id="c7765-125">Należy zauważyć, że przykład nie deklaruje <xref:System.Action%601> jawnie zmiennej.</span><span class="sxs-lookup"><span data-stu-id="c7765-125">Note that the example does not explicitly declare an <xref:System.Action%601> variable.</span></span> <span data-ttu-id="c7765-126">Zamiast tego przekazuje odwołanie do metody, która przyjmuje jeden parametr, która nie zwraca wartości do <xref:System.Collections.Generic.List%601.ForEach%2A?displayProperty=nameWithType> metody, której pojedynczy parametr <xref:System.Action%601> jest delegatem.</span><span class="sxs-lookup"><span data-stu-id="c7765-126">Instead, it passes a reference to a method that takes a single parameter and that does not return a value to the <xref:System.Collections.Generic.List%601.ForEach%2A?displayProperty=nameWithType> method, whose single parameter is an <xref:System.Action%601> delegate.</span></span> <span data-ttu-id="c7765-127">Podobnie, C# w przykładzie <xref:System.Action%601> delegat nie jest jawnie skonkretyzowany, ponieważ podpis metody anonimowej pasuje <xref:System.Action%601> do podpisu delegata, który jest oczekiwany przez <xref:System.Collections.Generic.List%601.ForEach%2A?displayProperty=nameWithType> metodę.</span><span class="sxs-lookup"><span data-stu-id="c7765-127">Similarly, in the C# example, an <xref:System.Action%601> delegate is not explicitly instantiated because the signature of the anonymous method matches the signature of the <xref:System.Action%601> delegate that is expected by the <xref:System.Collections.Generic.List%601.ForEach%2A?displayProperty=nameWithType> method.</span></span>  
  
 [!code-csharp[System.Action_PrintExample#01](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Action_PrintExample/cs/action.cs#01)]
 [!code-vb[System.Action_PrintExample#01](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Action_PrintExample/vb/action.vb#01)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Func`2" />
  </Docs>
</Type>
