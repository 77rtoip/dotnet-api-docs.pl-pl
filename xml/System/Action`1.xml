<Type Name="Action&lt;T&gt;" FullName="System.Action&lt;T&gt;">
  <TypeSignature Language="C#" Value="public delegate void Action&lt;in T&gt;(T obj);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed Action`1&lt;- T&gt; extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.Action`1" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Sub Action(Of In T)(obj As T)" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T&gt;&#xA;public delegate void Action(T obj);" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T">
      <Constraints>
        <ParameterAttribute>Contravariant</ParameterAttribute>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Parameters>
    <Parameter Name="obj" Type="T" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Void</ReturnType>
  </ReturnValue>
  <Docs>
    <typeparam name="T"><span data-ttu-id="febdf-101">Typ parametru metody, która hermetyzuje tego delegata.</span><span class="sxs-lookup"><span data-stu-id="febdf-101">The type of the parameter of the method that this delegate encapsulates.</span></span></typeparam>
    <param name="obj"><span data-ttu-id="febdf-102">Parametr metody, która hermetyzuje tego delegata.</span><span class="sxs-lookup"><span data-stu-id="febdf-102">The parameter of the method that this delegate encapsulates.</span></span></param>
    <summary><span data-ttu-id="febdf-103">Hermetyzuje metodę, która ma jeden parametr i zwracać wartości.</span><span class="sxs-lookup"><span data-stu-id="febdf-103">Encapsulates a method that has a single parameter and does not return a value.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="febdf-104">Można użyć <xref:System.Action%601> pełnomocnika, aby przekazać metody jako parametr bez jawnie deklarowanie niestandardowego obiektu delegowanego.</span><span class="sxs-lookup"><span data-stu-id="febdf-104">You can use the <xref:System.Action%601> delegate to pass a method as a parameter without explicitly declaring a custom delegate.</span></span> <span data-ttu-id="febdf-105">Metoda hermetyzowany musi odpowiadać podpis metody jest definiowana za pomocą tego delegata.</span><span class="sxs-lookup"><span data-stu-id="febdf-105">The encapsulated method must correspond to the method signature that is defined by this delegate.</span></span> <span data-ttu-id="febdf-106">Oznacza to, że metoda hermetyzowany musi mieć jeden parametr, który jest przekazywany do niej przez wartość i nie może zwracać wartości.</span><span class="sxs-lookup"><span data-stu-id="febdf-106">This means that the encapsulated method must have one parameter that is passed to it by value, and it must not return a value.</span></span> <span data-ttu-id="febdf-107">(W języku C#, metoda musi zwracać `void`.</span><span class="sxs-lookup"><span data-stu-id="febdf-107">(In C#, the method must return `void`.</span></span> <span data-ttu-id="febdf-108">W języku Visual Basic, musi być zdefiniowany przez `Sub`...`End Sub`</span><span class="sxs-lookup"><span data-stu-id="febdf-108">In Visual Basic, it must be defined by the `Sub`…`End Sub`</span></span> <span data-ttu-id="febdf-109">konstrukcja.</span><span class="sxs-lookup"><span data-stu-id="febdf-109">construct.</span></span> <span data-ttu-id="febdf-110">Może również być metodę, która zwraca wartość, która jest ignorowana.) Zazwyczaj taka metoda jest używany do wykonania operacji.</span><span class="sxs-lookup"><span data-stu-id="febdf-110">It can also be a method that returns a value that is ignored.) Typically, such a method is used to perform an operation.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="febdf-111">Aby odwołać się do metody, która ma jeden parametr i zwraca wartość używać ogólnych <xref:System.Func%602> zamiast tego delegata.</span><span class="sxs-lookup"><span data-stu-id="febdf-111">To reference a method that has one parameter and returns a value, use the generic <xref:System.Func%602> delegate instead.</span></span>  
  
 <span data-ttu-id="febdf-112">Jeśli używasz <xref:System.Action%601> delegata, nie trzeba jawnie definiować delegata, który hermetyzuje metody z pojedynczym parametrem.</span><span class="sxs-lookup"><span data-stu-id="febdf-112">When you use the <xref:System.Action%601> delegate, you do not have to explicitly define a delegate that encapsulates a method with a single parameter.</span></span> <span data-ttu-id="febdf-113">Na przykład następujący kod jawnie deklaruje delegata o nazwie `DisplayMessage` i odwołanie do każdego <xref:System.Console.WriteLine%2A> metody lub `ShowWindowsMessage` metodę, aby jego wystąpienie obiektu delegowanego.</span><span class="sxs-lookup"><span data-stu-id="febdf-113">For example, the following code explicitly declares a delegate named `DisplayMessage` and assigns a reference to either the <xref:System.Console.WriteLine%2A> method or the `ShowWindowsMessage` method to its delegate instance.</span></span>  
  
 [!code-cpp[System.Action~1#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Action~1/cpp/delegate.cpp#1)]
 [!code-csharp[System.Action~1#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Action~1/cs/Delegate.cs#1)]
 [!code-vb[System.Action~1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Action~1/vb/Delegate.vb#1)]  
  
 <span data-ttu-id="febdf-114">Poniższy przykład ułatwiają ten kod przy uruchamianiu <xref:System.Action%601> delegata zamiast jawnie nowe delegowanie definiowanie i przypisywanie metodę o nazwie.</span><span class="sxs-lookup"><span data-stu-id="febdf-114">The following example simplifies this code by instantiating the <xref:System.Action%601> delegate instead of explicitly defining a new delegate and assigning a named method to it.</span></span>  
  
 [!code-cpp[System.Action~1#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Action~1/cpp/action`1.cpp#2)]
 [!code-csharp[System.Action~1#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Action~1/cs/Action1.cs#2)]
 [!code-vb[System.Action~1#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Action~1/vb/Action1.vb#2)]  
  
 <span data-ttu-id="febdf-115">Można również użyć <xref:System.Action%601> delegata z metody anonimowe w języku C#, jak pokazano w poniższym przykładzie.</span><span class="sxs-lookup"><span data-stu-id="febdf-115">You can also use the <xref:System.Action%601> delegate with anonymous methods in C#, as the following example illustrates.</span></span> <span data-ttu-id="febdf-116">(Wprowadzenie do metod anonimowych, zobacz [metod anonimowych](~/docs/csharp/programming-guide/statements-expressions-operators/anonymous-methods.md).)</span><span class="sxs-lookup"><span data-stu-id="febdf-116">(For an introduction to anonymous methods, see [Anonymous Methods](~/docs/csharp/programming-guide/statements-expressions-operators/anonymous-methods.md).)</span></span>  
  
 [!code-csharp[System.Action~1#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Action~1/cs/Anon.cs#3)]  
  
 <span data-ttu-id="febdf-117">Można także przypisać wyrażenia lambda do <xref:System.Action%601> delegować wystąpienia, jak pokazano w poniższym przykładzie.</span><span class="sxs-lookup"><span data-stu-id="febdf-117">You can also assign a lambda expression to an <xref:System.Action%601> delegate instance, as the following example illustrates.</span></span> <span data-ttu-id="febdf-118">(Wprowadzenie do wyrażenia lambda, zobacz [wyrażenia Lambda](~/docs/csharp/programming-guide/statements-expressions-operators/lambda-expressions.md).)</span><span class="sxs-lookup"><span data-stu-id="febdf-118">(For an introduction to lambda expressions, see [Lambda Expressions](~/docs/csharp/programming-guide/statements-expressions-operators/lambda-expressions.md).)</span></span>  
  
 [!code-csharp[System.Action~1#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Action~1/cs/Lambda.cs#4)]
 [!code-vb[System.Action~1#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Action~1/vb/lambda.vb#4)]  
  
 <span data-ttu-id="febdf-119"><xref:System.Collections.Generic.List%601.ForEach%2A> i <xref:System.Array.ForEach%2A> każdej metody przyjmują <xref:System.Action%601> delegata jako parametr.</span><span class="sxs-lookup"><span data-stu-id="febdf-119">The <xref:System.Collections.Generic.List%601.ForEach%2A> and <xref:System.Array.ForEach%2A> methods each take an <xref:System.Action%601> delegate as a parameter.</span></span> <span data-ttu-id="febdf-120">Metody hermetyzowany na podstawie delegata służy do wykonywania akcji na każdy element tablicy lub z listy.</span><span class="sxs-lookup"><span data-stu-id="febdf-120">The method encapsulated by the delegate allows you to perform an action on each element in the array or list.</span></span> <span data-ttu-id="febdf-121">W przykładzie użyto <xref:System.Collections.Generic.List%601.ForEach%2A> metodę w celu zapewnienia ilustracji.</span><span class="sxs-lookup"><span data-stu-id="febdf-121">The example uses the <xref:System.Collections.Generic.List%601.ForEach%2A> method to provide an illustration.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="febdf-122">W poniższym przykładzie pokazano użycie <xref:System.Action%601> delegata do drukowania zawartości <xref:System.Collections.Generic.List%601> obiektu.</span><span class="sxs-lookup"><span data-stu-id="febdf-122">The following example demonstrates the use of the <xref:System.Action%601> delegate to print the contents of a <xref:System.Collections.Generic.List%601> object.</span></span> <span data-ttu-id="febdf-123">W tym przykładzie `Print` metoda jest używana do wyświetlania zawartości listy do konsoli.</span><span class="sxs-lookup"><span data-stu-id="febdf-123">In this example, the `Print` method is used to display the contents of the list to the console.</span></span> <span data-ttu-id="febdf-124">Ponadto w C# przykładzie pokazano także korzystanie z metod anonimowych do wyświetlenia zawartości do konsoli.</span><span class="sxs-lookup"><span data-stu-id="febdf-124">In addition, the C# example also demonstrates the use of anonymous methods to display the contents to the console.</span></span> <span data-ttu-id="febdf-125">Należy pamiętać, że przykładzie nie jawnie deklarować <xref:System.Action%601> zmiennej.</span><span class="sxs-lookup"><span data-stu-id="febdf-125">Note that the example does not explicitly declare an <xref:System.Action%601> variable.</span></span> <span data-ttu-id="febdf-126">Zamiast tego przechodzą odniesienie do metody, która przyjmuje jeden parametr i nie zwraca wartości do <xref:System.Collections.Generic.List%601.ForEach%2A?displayProperty=nameWithType> metody, w których pojedynczy parametr jest <xref:System.Action%601> delegowanie.</span><span class="sxs-lookup"><span data-stu-id="febdf-126">Instead, it passes a reference to a method that takes a single parameter and that does not return a value to the <xref:System.Collections.Generic.List%601.ForEach%2A?displayProperty=nameWithType> method, whose single parameter is an <xref:System.Action%601> delegate.</span></span> <span data-ttu-id="febdf-127">Podobnie, w przykładzie C# <xref:System.Action%601> delegata nie jest jawnie wystąpienia, ponieważ podpis metody anonimowej jest zgodna podpis <xref:System.Action%601> delegata, który jest oczekiwany przez <xref:System.Collections.Generic.List%601.ForEach%2A?displayProperty=nameWithType> metody.</span><span class="sxs-lookup"><span data-stu-id="febdf-127">Similarly, in the C# example, an <xref:System.Action%601> delegate is not explicitly instantiated because the signature of the anonymous method matches the signature of the <xref:System.Action%601> delegate that is expected by the <xref:System.Collections.Generic.List%601.ForEach%2A?displayProperty=nameWithType> method.</span></span>  
  
 [!code-csharp[System.Action_PrintExample#01](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Action_PrintExample/cs/action.cs#01)]
 [!code-vb[System.Action_PrintExample#01](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Action_PrintExample/vb/action.vb#01)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Func`2" />
  </Docs>
</Type>