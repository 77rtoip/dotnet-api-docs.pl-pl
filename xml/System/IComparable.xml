<Type Name="IComparable" FullName="System.IComparable">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="de45437685e7e2891c7f6e699cd8812bc393beca" />
    <Meta Name="ms.sourcegitcommit" Value="0ec122ee5f3681159b8460ab15b409fd6e3d3ae0" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="10/04/2018" />
    <Meta Name="ms.locfileid" Value="48589859" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IComparable" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IComparable" />
  <TypeSignature Language="DocId" Value="T:System.IComparable" />
  <TypeSignature Language="VB.NET" Value="Public Interface IComparable" />
  <TypeSignature Language="C++ CLI" Value="public interface class IComparable" />
  <TypeSignature Language="F#" Value="type IComparable = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Definiuje metodę uogólnionego porównania specyficznego dla typu implementującego do zamówienia lub sortować jego wystąpienia typu wartości lub klasy.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten interfejs jest implementowany przez typy, których wartości mogą być uporządkowane lub sortowania. Wymaga to, że typy implementujące definiują jedną metodę <xref:System.IComparable.CompareTo%28System.Object%29>, który wskazuje, czy bieżące wystąpienie w porządku sortowania znajdował się przed, po lub taka sama jak drugi obiekt tego samego typu. Wystąpienie programu <xref:System.IComparable> implementacja jest wywoływana automatycznie przez metody takie jak <xref:System.Array.Sort%2A?displayProperty=nameWithType> i <xref:System.Collections.ArrayList.Sort%2A?displayProperty=nameWithType>.  
  
 Implementacja <xref:System.IComparable.CompareTo%28System.Object%29> metoda musi zwracać <xref:System.Int32> zawierający jedną z trzech wartości, jak pokazano w poniższej tabeli.  
  
|Wartość|Znaczenie|  
|-----------|-------------|  
|Mniej niż zero|Bieżące wystąpienie poprzedza obiekt określony przez <xref:System.IComparable.CompareTo%2A> metody w porządku sortowania.|  
|Zero|Tego bieżącego wystąpienia odbywa się w tej samej pozycji w porządku sortowania, co obiekt określony przez <xref:System.IComparable.CompareTo%2A> metody.|  
|Większe od zera|Tego bieżącego wystąpienia następuje w obiekcie określonym przez <xref:System.IComparable.CompareTo%2A> metody w porządku sortowania.|  
  
 Wszystkie typy liczbowe (takich jak <xref:System.Int32> i <xref:System.Double>) implementuje <xref:System.IComparable>, tak jak <xref:System.String>, <xref:System.Char>, i <xref:System.DateTime>. Niestandardowe typy powinien również dostarczyć zapewniali własną implementację <xref:System.IComparable> umożliwiające wystąpienia obiektów, które mają być uporządkowane lub sortowania.  
  
   
  
## Examples  
 W poniższym przykładzie pokazano implementację <xref:System.IComparable> i wymagane <xref:System.IComparable.CompareTo%2A> metody.  
  
 [!code-cpp[IComparable Example#1](~/samples/snippets/cpp/VS_Snippets_CLR/IComparable Example/CPP/source.cpp#1)]
 [!code-csharp[IComparable Example#1](~/samples/snippets/csharp/VS_Snippets_CLR/IComparable Example/CS/source.cs#1)]
 [!code-vb[IComparable Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/IComparable Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="CompareTo">
      <MemberSignature Language="C#" Value="public int CompareTo (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 CompareTo(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IComparable.CompareTo(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function CompareTo (obj As Object) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int CompareTo(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="abstract member CompareTo : obj -&gt; int" Usage="iComparable.CompareTo obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">Obiekt, który ma zostać porównany z tym wystąpieniem.</param>
        <summary>Porównuje bieżące wystąpienie z innym obiektem tego samego typu i zwraca liczbę całkowitą, która wskazuje, czy bieżące wystąpienie poprzedza, następuje po lub występuje w tym samym położeniu, co inny obiekt w porządku sortowania.</summary>
        <returns>Wartość, która wskazuje względną kolejność obiektów, którą jest porównywany. Wartość zwracana ma znaczenie tych: 
 <list type="table"><listheader><term> Wartość 
 </term><description> Znaczenie 
 </description></listheader><item><term> Mniej niż zero 
 </term><description> To wystąpienie poprzedza <paramref name="obj" /> w porządku sortowania.  
  
 </description></item><item><term> Zero 
 </term><description> To wystąpienie odbywa się w tej samej pozycji w kolejności sortowania, co <paramref name="obj" />.  
  
 </description></item><item><term> Większe od zera 
 </term><description> To wystąpienie następuje po <paramref name="obj" /> w porządku sortowania.  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.IComparable.CompareTo%2A> Metoda jest implementowana według typów, których wartości mogą być uporządkowane lub sortowania. Jest ona wywoływana automatycznie za pomocą metod nieogólna kolekcja obiektów, takich jak <xref:System.Array.Sort%2A?displayProperty=nameWithType>, w celu uporządkowania każdego elementu członkowskiego tablicy. Jeśli nie zawiera implementacji niestandardowej klasy lub struktury <xref:System.IComparable>, jego składowych nie można porządkować i może zgłosić operacji sortowania <xref:System.InvalidOperationException>.  
  
 Ta metoda jest tylko definicję i muszą być zaimplementowane przez określonego typu klasy lub wartości efekty. Znaczenie porównania określony w wartości zwracać sekcję ("poprzedzający", "występuje w tym samym położeniu co" i "poniżej") jest zależna od określonej implementacji.  
  
 Zgodnie z definicją, każdy obiekt porównuje większa (lub następuje) `null`, a dwa odwołania zerowe są sobie równe do siebie nawzajem.  
  
 Parametr, `obj`, muszą być tego samego typu jak klasa lub wartość typu, który implementuje ten interfejs; w przeciwnym razie <xref:System.ArgumentException> zgłaszany.  
  
   
  
## Examples  
 Poniższy przykład ilustruje użycie <xref:System.IComparable.CompareTo%2A> do porównania `Temperature` implementacji obiektu <xref:System.IComparable> z innym obiektem. `Temperature` Obiekt implementuje <xref:System.IComparable.CompareTo%2A> opakowując po prostu wywołanie <xref:System.Int32.CompareTo%2A?displayProperty=nameWithType> metody.  
  
 [!code-cpp[IComparable Example#1](~/samples/snippets/cpp/VS_Snippets_CLR/IComparable Example/CPP/source.cpp#1)]
 [!code-csharp[IComparable Example#1](~/samples/snippets/csharp/VS_Snippets_CLR/IComparable Example/CS/source.cs#1)]
 [!code-vb[IComparable Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/IComparable Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="obj" /> nie jest tego samego typu jak to wystąpienie.</exception>
        <block subset="none" type="overrides">
          <para>Dla obiektów, A, B i C, wymaga spełnienia następujących warunków: 
 <c>A.CompareTo(A)</c> musi zwracać wartość zero.  
  
Jeśli <c>A.CompareTo(B)</c> zwraca zero, następnie <c>B.CompareTo(A)</c> musi zwracać wartość zero.  
  
Jeśli <c>A.CompareTo(B)</c> zwraca zero i <c>B.CompareTo(C)</c> zwraca zero, następnie <c>A.CompareTo(C)</c> musi zwracać wartość zero.  
  
Jeśli <c>A.CompareTo(B)</c> zwraca wartość różną od zera, następnie <c>B.CompareTo(A)</c> musi zwracać wartość przeciwną wartość.  
  
Jeśli <c>A.CompareTo(B)</c> zwraca wartość <paramref name="x" /> nie jest równa zero, a <c>B.CompareTo(C)</c> zwraca wartość <paramref name="y" /> o ten sam znak co <paramref name="x" />, następnie <c>A. CompareTo(C)</c> musi zwracać wartość ten sam znak co <paramref name="x" /> i <paramref name="y" />.</para>
        </block>
        <block subset="none" type="usage">
          <para>Użyj <see cref="M:System.IComparable.CompareTo(System.Object)" /> metodę pozwala ustalić kolejność wystąpienia klasy.</para>
        </block>
        <altmember cref="T:System.Object" />
      </Docs>
    </Member>
  </Members>
</Type>