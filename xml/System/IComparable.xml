<Type Name="IComparable" FullName="System.IComparable">
  <Metadata><Meta Name="ms.openlocfilehash" Value="b9b7eb562547d8625ed1e08d5d27d32219f7fa6d" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69420425" /></Metadata><TypeSignature Language="C#" Value="public interface IComparable" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IComparable" />
  <TypeSignature Language="DocId" Value="T:System.IComparable" />
  <TypeSignature Language="VB.NET" Value="Public Interface IComparable" />
  <TypeSignature Language="C++ CLI" Value="public interface class IComparable" />
  <TypeSignature Language="F#" Value="type IComparable = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Definiuje uogólnioną metodę porównywania typu, która jest implementowana przez typ wartości lub klasy w celu porządkowania lub sortowania wystąpień.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten interfejs jest implementowany przez typy, których wartości mogą być uporządkowane lub sortowane. Wymaga, aby implementacje typów definiują pojedynczą <xref:System.IComparable.CompareTo%28System.Object%29>metodę,, która wskazuje, czy pozycja bieżącego wystąpienia w kolejności sortowania jest wcześniejsza niż, po lub taka sama jak w przypadku drugiego obiektu tego samego typu. <xref:System.IComparable> Implementacja tego wystąpienia jest wywoływana automatycznie przy użyciu metod, takich <xref:System.Array.Sort%2A?displayProperty=nameWithType> jak <xref:System.Collections.ArrayList.Sort%2A?displayProperty=nameWithType>i.  
  
 Implementacja <xref:System.IComparable.CompareTo%28System.Object%29> metody musi <xref:System.Int32> zwracać, która ma jedną z trzech wartości, jak pokazano w poniższej tabeli.  
  
|Wartość|Znaczenie|  
|-----------|-------------|  
|Mniej niż zero|Bieżące wystąpienie poprzedza obiekt określony przez <xref:System.IComparable.CompareTo%2A> metodę w kolejności sortowania.|  
|Zero|To bieżące wystąpienie występuje w tym samym położeniu w porządku sortowania co obiekt określony przez <xref:System.IComparable.CompareTo%2A> metodę.|  
|Większe od zera|To bieżące wystąpienie następuje po obiekcie określonym przez <xref:System.IComparable.CompareTo%2A> metodę w kolejności sortowania.|  
  
 Wszystkie typy liczbowe (takie jak <xref:System.Int32> i <xref:System.Double> <xref:System.String>) <xref:System.IComparable> <xref:System.DateTime>implementują jako, i. <xref:System.Char> Typy niestandardowe powinny również zapewniać własną implementację <xref:System.IComparable> , aby umożliwić porządkowanie lub sortowanie wystąpień obiektów.  
  
   
  
## Examples  
 Poniższy przykład ilustruje implementację <xref:System.IComparable> i wymaganą <xref:System.IComparable.CompareTo%2A> metodę.  
  
 [!code-cpp[IComparable Example#1](~/samples/snippets/cpp/VS_Snippets_CLR/IComparable Example/CPP/source.cpp#1)]
 [!code-csharp[IComparable Example#1](~/samples/snippets/csharp/VS_Snippets_CLR/IComparable Example/CS/source.cs#1)]
 [!code-vb[IComparable Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/IComparable Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="CompareTo">
      <MemberSignature Language="C#" Value="public int CompareTo (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 CompareTo(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IComparable.CompareTo(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function CompareTo (obj As Object) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int CompareTo(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="abstract member CompareTo : obj -&gt; int" Usage="iComparable.CompareTo obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">Obiekt, który ma zostać porównany z tym wystąpieniem.</param>
        <summary>Porównuje bieżące wystąpienie z innym obiektem tego samego typu i zwraca liczbę całkowitą, która wskazuje, czy bieżące wystąpienie poprzedza, następuje po lub występuje w tym samym położeniu, co inny obiekt w porządku sortowania.</summary>
        <returns>Wartość, która wskazuje względną kolejność porównywanych obiektów. Wartość zwracana ma następujące znaczenie: 
 <list type="table"><listheader><term> Wartość 
 </term><description> Znaczenie 
 </description></listheader><item><term> Mniej niż zero 
 </term><description> To wystąpienie poprzedza <paramref name="obj" /> porządek sortowania.  
  
 </description></item><item><term> Zero 
 </term><description> To wystąpienie występuje w tym samym położeniu w kolejności sortowania, <paramref name="obj" />jak.  
  
 </description></item><item><term> Większe od zera 
 </term><description> To wystąpienie następuje <paramref name="obj" /> w kolejności sortowania.  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.IComparable.CompareTo%2A> Metoda jest implementowana przez typy, których wartości mogą być uporządkowane lub sortowane. Jest on wywoływany automatycznie przez metody obiektów kolekcji innych niż ogólne, takie jak <xref:System.Array.Sort%2A?displayProperty=nameWithType>, aby zamówić każdy element członkowski tablicy. Jeśli niestandardowa Klasa lub struktura nie implementuje <xref:System.IComparable>, jego składowe nie mogą być uporządkowane i operacja sortowania może <xref:System.InvalidOperationException>zgłosić.  
  
 Ta metoda jest tylko definicją i musi być implementowana przez określoną klasę lub typ wartości, aby mieć efekt. Znaczenie porównania określone w sekcji wartości zwracanej ("poprzedza", "występuje w tym samym położeniu co" i "dalej") zależy od określonej implementacji.  
  
 Według definicji, każdy obiekt porównuje więcej niż (lub następuje `null`), a dwa odwołania o wartości null są porównywane ze sobą.  
  
 Parametr, `obj`, musi być tego samego typu co Klasa lub typ wartości implementujący ten interfejs; w przeciwnym razie <xref:System.ArgumentException> jest zgłaszany.  
  
   
  
## Examples  
 Poniższy przykład ilustruje sposób użycia programu <xref:System.IComparable.CompareTo%2A> w celu `Temperature` porównania obiektu implementującego <xref:System.IComparable> z innym obiektem. Obiekt `Temperature` jest implementowany <xref:System.IComparable.CompareTo%2A> przez po prostu <xref:System.Int32.CompareTo%2A?displayProperty=nameWithType> zawija wywołanie metody.  
  
 [!code-cpp[IComparable Example#1](~/samples/snippets/cpp/VS_Snippets_CLR/IComparable Example/CPP/source.cpp#1)]
 [!code-csharp[IComparable Example#1](~/samples/snippets/csharp/VS_Snippets_CLR/IComparable Example/CS/source.cs#1)]
 [!code-vb[IComparable Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/IComparable Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="obj" />nie jest tym samym typem co to wystąpienie.</exception>
        <block subset="none" type="overrides"><para>Dla obiektów A, B i C, muszą być spełnione następujące wartości: 
 <c>A. CompareTo (a)</c> musi zwracać zero.  
  
Jeśli <c>A. CompareTo (B)</c> zwraca zero, wówczas <c>B. CompareTo (A)</c> musi zwracać zero.  
  
Jeśli <c>a. CompareTo (B)</c> zwraca zero i <c>B. CompareTo (c)</c> zwraca zero, a <c>a. CompareTo (C)</c> musi zwracać zero.  
  
Jeśli <c>A. CompareTo (B)</c> zwraca wartość inną niż zero, wówczas <c>B. CompareTo (A)</c> musi zwracać wartość przeciwległego znaku.  
  
Jeśli <c>CompareTo (b)</c> zwraca wartość <paramref name="x" /> różną od zera, a <c>B. CompareTo (c)</c> zwraca wartość <paramref name="y" /> tego samego znaku <paramref name="x" />co, a a <c>. CompareTo (c)</c> musi zwracać wartość tego samego znaku co <paramref name="x" /> i <paramref name="y" />.</para></block>
        <block subset="none" type="usage"><para><see cref="M:System.IComparable.CompareTo(System.Object)" /> Użyj metody, aby określić kolejność wystąpień klasy.</para></block>
        <altmember cref="T:System.Object" />
      </Docs>
    </Member>
  </Members>
</Type>
