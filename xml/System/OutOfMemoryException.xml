<Type Name="OutOfMemoryException" FullName="System.OutOfMemoryException">
  <Metadata><Meta Name="ms.openlocfilehash" Value="c574bc0aed3087f2fd50be00b99febeae9e3f711" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69419636" /></Metadata><TypeSignature Language="C#" Value="public class OutOfMemoryException : SystemException" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit OutOfMemoryException extends System.SystemException" />
  <TypeSignature Language="DocId" Value="T:System.OutOfMemoryException" />
  <TypeSignature Language="VB.NET" Value="Public Class OutOfMemoryException&#xA;Inherits SystemException" />
  <TypeSignature Language="C++ CLI" Value="public ref class OutOfMemoryException : SystemException" />
  <TypeSignature Language="F#" Value="type OutOfMemoryException = class&#xA;    inherit SystemException" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Exception</BaseTypeName>
    <BaseTypeName FrameworkAlternate="netframework-4.5">System.SystemException</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Wyjątek, który jest generowany, gdy nie ma wystarczającej ilości pamięci, aby kontynuować wykonywanie programu.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks

<xref:System.OutOfMemoryException>używa HRESULT `COR_E_OUTOFMEMORY`, która ma wartość 0x8007000E.  
  
Aby uzyskać listę początkowe wartości właściwości wystąpienia <xref:System.OutOfMemoryException>, zobacz <xref:System.OutOfMemoryException.%23ctor%2A> konstruktorów.  
  
> [!NOTE]
>  Wartość dziedziczonej <xref:System.Exception.Data%2A> właściwości jest zawsze `null`.  
  
<xref:System.OutOfMemoryException> Wyjątek ma dwie główne przyczyny:  
  
-   Próbujesz rozszerzyć <xref:System.Text.StringBuilder> obiekt poza długość zdefiniowaną przez jego <xref:System.Text.StringBuilder.MaxCapacity%2A?displayProperty=nameWithType> właściwość.  
  
-   Środowisko uruchomieniowe języka wspólnego nie może przydzielić wystarczającej ilości ciągłej pamięci, aby pomyślnie wykonać operację. Ten wyjątek może być zgłaszany przez przypisanie właściwości lub wywołanie metody wymagające alokacji pamięci. Aby uzyskać więcej informacji na temat przyczyny <xref:System.OutOfMemoryException> wyjątku, zobacz "za [mało pamięci" nie odwołuje się do pamięci fizycznej](https://blogs.msdn.com/b/ericlippert/archive/2009/06/08/out-of-memory-does-not-refer-to-physical-memory.aspx).  
  
     Ten typ <xref:System.OutOfMemoryException> wyjątku reprezentuje błąd krytyczny. W przypadku wybrania obsługi wyjątku należy uwzględnić `catch` blok, który <xref:System.Environment.FailFast%2A?displayProperty=nameWithType> wywołuje metodę, aby zakończyć działanie aplikacji, i dodać wpis do dziennika zdarzeń systemu, jak pokazano w poniższym przykładzie.  
  
     [!code-csharp[System.OutOfMemoryException#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.outofmemoryexception/cs/failfast1.cs#2)]
     [!code-vb[System.OutOfMemoryException#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.outofmemoryexception/vb/failfast1.vb#2)]  
  
 Niektóre warunki, w których wyjątek jest zgłaszany, oraz akcje, które można wykonać, aby wyeliminować, obejmują następujące elementy:  
  
**Wywoływana <xref:System.Text.StringBuilder.Insert%2A?displayProperty=nameWithType> jest metoda.**  

Próbujesz zwiększyć długość <xref:System.Text.StringBuilder> obiektu poza rozmiarem określonym przez jego <xref:System.Text.StringBuilder.MaxCapacity%2A?displayProperty=nameWithType> właściwość. Poniższy przykład ilustruje <xref:System.OutOfMemoryException> wyjątek zgłoszony przez wywołanie metody, <xref:System.Text.StringBuilder.Insert%28System.Int32%2CSystem.String%2CSystem.Int32%29?displayProperty=nameWithType> gdy przykład próbuje wstawić ciąg, który <xref:System.Text.StringBuilder.Length%2A> spowodowałoby przekroczenie maksymalnej pojemności właściwości obiektu.  
  
[!code-csharp[System.OutOfMemoryException#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.outofmemoryexception/cs/sb_example1.cs#1)]
[!code-vb[System.OutOfMemoryException#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.outofmemoryexception/vb/sb_example1.vb#1)]  
  
Aby rozwiązać ten problem, można wykonać jedną z następujących czynności:  
  
-   Zastąp wywołanie <xref:System.Text.StringBuilder.%23ctor%28System.Int32%2CSystem.Int32%29?displayProperty=nameWithType> konstruktora wywołaniem innego <xref:System.Text.StringBuilder> konstruktora. Maksymalna pojemność <xref:System.Text.StringBuilder> obiektu zostanie ustawiona na wartość domyślną, <xref:System.Int32.MaxValue?displayProperty=nameWithType>czyli.  

-   Wywołaj `maxCapacity` <xref:System.Text.StringBuilder> konstruktora z wartością, która jest wystarczająco duża, aby pomieścić wszystkie rozszerzenia do obiektu. <xref:System.Text.StringBuilder.%23ctor%28System.Int32%2CSystem.Int32%29?displayProperty=nameWithType>  
  
**Aplikacja działa jako proces 32-bitowy.**

32-bitowe procesy mogą przydzielić maksymalnie 2 GB pamięci wirtualnego trybu użytkownika w systemach 32-bitowych i 4 GB wirtualnej pamięci w trybie użytkownika w systemach 64-bitowych. Może to utrudnić, aby środowisko uruchomieniowe języka wspólnego przydzielić wystarczającą ilość pamięci ciągłej, gdy jest wymagana duża alokacja. Z kolei procesy 64-bitowe mogą przydzielić maksymalnie 8TB pamięci wirtualnej. Aby rozwiązać ten wyjątek, Skompiluj ponownie aplikację pod kątem platformy 64-bitowej. Aby uzyskać informacje na temat określania konkretnych platform w programie Visual [Studio, zobacz How to: Skonfiguruj projekty na platformach](https://msdn.microsoft.com/library/845302fc-273d-4f81-820a-7296ce91bd76)docelowych.  
  
**Twoja aplikacja wycieka niezarządzane zasoby** 

Mimo że moduł wyrzucania elementów bezużytecznych może zwolnić pamięć przydzieloną do typów zarządzanych, nie zarządza pamięcią przydzieloną do zasobów niezarządzanych, takich jak uchwyty systemu operacyjnego (w tym dojścia do plików, pliki mapowane w pamięci, potoki, klucze rejestru i dojścia oczekiwania) bloki pamięci przydzielone bezpośrednio przez wywołania interfejsu API systemu Windows lub wywołania funkcji alokacji pamięci, takich `malloc`jak. Typy korzystające z <xref:System.IDisposable> zasobów niezarządzanych implementują interfejs.  

W przypadku korzystania z typu, który korzysta z zasobów niezarządzanych, należy pamiętać, aby wywołać <xref:System.IDisposable.Dispose%2A?displayProperty=nameWithType> metodę, gdy zostanie ona ukończona. (Niektóre typy również implementują `Close` metodę, która jest identyczna w funkcji `Dispose` dla metody). Aby uzyskać więcej informacji, zobacz temat [Używanie obiektów, które implementują interfejs IDisposable](~/docs/standard/garbage-collection/using-objects.md) .  

Jeśli utworzono typ, który korzysta z zasobów niezarządzanych, upewnij się, że został zaimplementowany wzorzec usuwania i, w razie potrzeby, dostarczony finalizator. Aby uzyskać więcej informacji, zobacz [implementowanie metody Dispose](~/docs/standard/garbage-collection/implementing-dispose.md) i <xref:System.Object.Finalize%2A?displayProperty=nameWithType>.  
  
**Podjęto próbę utworzenia dużej macierzy w procesie 64-bitowym**

Domyślnie środowisko uruchomieniowe języka wspólnego w .NET Framework nie zezwala na użycie pojedynczych obiektów, których rozmiar przekracza 2 GB. Aby zastąpić to ustawienie domyślne, można użyć [ \<ustawienia gcAllowVeryLargeObjects >](~/docs/framework/configure-apps/file-schema/runtime/gcallowverylargeobjects-element.md) pliku konfiguracji, aby włączyć tablice, których rozmiar całkowity przekracza 2 GB. W przypadku platformy .NET Core obsługa tablic o wartości większej niż 2 GB jest domyślnie włączona. 
  
**Pracujesz z bardzo dużymi zestawami danych (takimi jak tablice, kolekcje lub zestawy danych bazy danych) w pamięci.**

Gdy struktury danych lub zestawy danych, które znajdują się w pamięci, stają się duże, że środowisko uruchomieniowe języka wspólnego nie jest w stanie przydzielić <xref:System.OutOfMemoryException> wystarczającej ilości pamięci ciągłej dla nich, zostanie użyty wyjątek.  

Aby zapobiec <xref:System.OutOfMemoryException> wyjątkom, należy zmodyfikować aplikację tak, aby mniejsza ilość danych była rezydentem pamięci, lub dane są dzielone na segmenty, które wymagają mniejszych alokacji pamięci. Na przykład:  

-   Jeśli pobierasz wszystkie dane z bazy danych, a następnie przefiltrusz ją w aplikacji, aby zminimalizować podróże do serwera, należy zmodyfikować zapytania, aby zwracały tylko podzbiór danych, których potrzebuje aplikacja. Podczas pracy z dużymi tabelami wiele zapytań jest prawie zawsze bardziej wydajne niż pobieranie wszystkich danych w pojedynczej tabeli, a następnie manipulowanie nimi.  

-   W przypadku wykonywania zapytań, które użytkownicy tworzą dynamicznie, należy upewnić się, że liczba rekordów zwracanych przez zapytanie jest ograniczona.  

-   Jeśli używasz dużych tablic lub innych obiektów kolekcji, których rozmiar powoduje <xref:System.OutOfMemoryException> wyjątek, należy zmodyfikować aplikację tak, aby działała w podzestawach, a nie do pracy z nią wszystkie jednocześnie.  
  
Poniższy przykład pobiera tablicę, która składa się z 200 000 000 wartości zmiennoprzecinkowych, a następnie oblicza ich średnią. Dane wyjściowe z przykładu pokazują, że ponieważ przykład zapisuje całą tablicę w pamięci przed obliczeniem średniej, <xref:System.OutOfMemoryException> zostanie zgłoszony.  

[!code-csharp[System.OutOfMemoryException#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.outofmemoryexception/cs/data1.cs#3)]
[!code-vb[System.OutOfMemoryException#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.outofmemoryexception/vb/data1.vb#3)]  
  
Poniższy przykład eliminuje <xref:System.OutOfMemoryException> wyjątek poprzez przetwarzanie danych przychodzących bez przechowywania całego zestawu danych w pamięci, serializacji danych do pliku, jeśli jest to konieczne, aby zezwolić na dalsze przetwarzanie (te wiersze są w tym przykładzie komentarzem, ponieważ w tym przypadku tworzy plik, którego rozmiar jest większy niż 1 GB, i zwraca obliczoną wartość średnią oraz liczbę przypadków do procedury wywołującej.  

[!code-csharp[System.OutOfMemoryException#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.outofmemoryexception/cs/data2.cs#4)]
[!code-vb[System.OutOfMemoryException#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.outofmemoryexception/vb/data2.vb#4)]  
  
**Często łączmy duże ciągi.** 

Ponieważ ciągi są niezmienne, każda operacja łączenia ciągów tworzy nowy ciąg. Wpływ małych ciągów lub niewielkiej liczby operacji łączenia jest nieznaczny. Jednak w przypadku dużych ciągów lub bardzo dużej liczby operacji łączenia ciąg łączenia może prowadzić do dużej liczby alokacji pamięci i fragmentacji pamięci, słabej wydajności i ewentualnych <xref:System.OutOfMemoryException> wyjątków.  

Podczas łączenia dużych ciągów lub wykonywania dużej liczby operacji łączenia należy użyć <xref:System.Text.StringBuilder> klasy zamiast <xref:System.String> klasy. Po zakończeniu manipulowania ciągiem, należy przekonwertować <xref:System.Text.StringBuilder> wystąpienie na ciąg, <xref:System.Text.StringBuilder.ToString%2A?displayProperty=nameWithType> wywołując metodę.  
  
**Przypinanie dużej liczby obiektów w pamięci.**  
 
Przypinanie dużej liczby obiektów w pamięci przez długie okresy może utrudnić wyrzucanie elementów bezużytecznych w celu przydzielenia ciągłych bloków pamięci. Jeśli przypięto dużą liczbę obiektów w pamięci, `fixed` na przykład przy użyciu instrukcji w C# <xref:System.Runtime.InteropServices.GCHandle.Alloc%28System.Object%2CSystem.Runtime.InteropServices.GCHandleType%29?displayProperty=nameWithType> lub przez wywołanie metody z typem <xref:System.Runtime.InteropServices.GCHandleType.Pinned?displayProperty=nameWithType>dojścia, można wykonać następujące czynności, aby rozwiązać <xref:System.OutOfMemoryException> wyjątek.  
  
-   Oceń, czy każdy obiekt naprawdę musi być przypięty,  

-   Upewnij się, że każdy obiekt nie jest przypięty tak szybko, jak to możliwe.  

-   Upewnij się, że każde wywołanie <xref:System.Runtime.InteropServices.GCHandle.Alloc%28System.Object%2CSystem.Runtime.InteropServices.GCHandleType%29?displayProperty=nameWithType> metody do przypięcia pamięci ma odpowiednie wywołanie <xref:System.Runtime.InteropServices.GCHandle.Free%2A?displayProperty=nameWithType> metody w celu odpinania tej pamięci.  

Następujące instrukcje <xref:System.OutOfMemoryException> pośrednika firmy Microsoft (MSIL) zgłaszają wyjątek:  
  
-   [box](https://msdn.microsoft.com/library/system.reflection.emit.opcodes.box.aspx)  
-   [newarr](https://msdn.microsoft.com/library/system.reflection.emit.opcodes.newarr.aspx)  

-   [newobj](https://msdn.microsoft.com/library/system.reflection.emit.opcodes.newobj.aspx)newobj  


 ]]></format>
    </remarks>
    <altmember cref="T:System.Exception" />
    <related type="Article" href="~/docs/standard/exceptions/index.md">Obsługa i zgłaszanie wyjątków</related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.OutOfMemoryException" /> klasy.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OutOfMemoryException ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.OutOfMemoryException.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OutOfMemoryException();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.OutOfMemoryException" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten konstruktor inicjuje <xref:System.Exception.Message%2A> właściwość nowego wystąpienia z komunikatem dostarczonym przez system, który opisuje błąd, na przykład "zbyt mało pamięci, aby kontynuować wykonywanie programu". Ten komunikat uwzględnia bieżącą kulturę systemu.  
  
 W poniższej tabeli przedstawiono początkowe wartości właściwości dla wystąpienia <xref:System.OutOfMemoryException>.  
  
|Właściwość|Wartość|  
|--------------|-----------|  
|<xref:System.Exception.InnerException%2A>|`null`.|  
|<xref:System.Exception.Message%2A>|Zlokalizowany ciąg komunikatu o błędzie.|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OutOfMemoryException (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.OutOfMemoryException.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OutOfMemoryException(System::String ^ message);" />
      <MemberSignature Language="F#" Value="new OutOfMemoryException : string -&gt; OutOfMemoryException" Usage="new System.OutOfMemoryException message" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">Komunikat, który opisuje błąd.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.OutOfMemoryException" /> klasy przy użyciu określonego komunikatu o błędzie.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zawartość `message` powinna być zrozumiała dla ludzi. Obiekt wywołujący tego konstruktora jest wymagany w celu zagwarantowania, że ten ciąg został zlokalizowany w bieżącej kulturze systemu.  
  
 W poniższej tabeli przedstawiono początkowe wartości właściwości dla wystąpienia <xref:System.OutOfMemoryException>.  
  
|Właściwość|Wartość|  
|--------------|-----------|  
|<xref:System.Exception.InnerException%2A>|Odwołanie o wartości null (`Nothing` w języku Visual Basic).|  
|<xref:System.Exception.Message%2A>|Ciąg komunikatu o błędzie.|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected OutOfMemoryException (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.OutOfMemoryException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; OutOfMemoryException(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="new OutOfMemoryException : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; OutOfMemoryException" Usage="new System.OutOfMemoryException (info, context)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="info">Obiekt zawierający dane serializowanego obiektu.</param>
        <param name="context">Informacje kontekstowe o źródłowego lub miejscu docelowym.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.OutOfMemoryException" /> klasy z serializowanych danych.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten konstruktor jest wywoływana podczas deserializacji do odtworzenia obiektu wyjątku przesyłanego za pomocą strumienia. Aby uzyskać więcej informacji, zobacz [XML oraz serializacji protokołu SOAP](~/docs/standard/serialization/xml-and-soap-serialization.md).  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/serialization/xml-and-soap-serialization.md">Serializacja XML i SOAP</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OutOfMemoryException (string message, Exception innerException);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message, class System.Exception innerException) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.OutOfMemoryException.#ctor(System.String,System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As String, innerException As Exception)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OutOfMemoryException(System::String ^ message, Exception ^ innerException);" />
      <MemberSignature Language="F#" Value="new OutOfMemoryException : string * Exception -&gt; OutOfMemoryException" Usage="new System.OutOfMemoryException (message, innerException)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="innerException" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="message">Komunikat o błędzie wyjaśniający przyczynę wyjątku.</param>
        <param name="innerException">Wyjątek, który jest przyczyną bieżącego wyjątku. Jeśli parametr nie jest odwołaniem null (<see langword="Nothing" /> w Visual Basic), bieżący <see langword="catch" /> wyjątek jest wywoływany w bloku, który obsługuje wyjątek wewnętrzny. <paramref name="innerException" /></param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.OutOfMemoryException" /> klasy przy użyciu określonego komunikatu o błędzie i odwołania do wewnętrznego wyjątku, który jest przyczyną tego wyjątku.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wyjątek, który jest generowany jako bezpośredni wynik poprzedniego wyjątku może zawierać odwołanie do poprzedniego wyjątku we <xref:System.Exception.InnerException%2A> właściwości. Właściwość zwraca tę samą wartość, która jest przenoszona do konstruktora lub odwołanie o wartości null (`Nothing` <xref:System.Exception.InnerException%2A> w Visual Basic), jeśli właściwość nie poda wewnętrznej wartości wyjątku do konstruktora. <xref:System.Exception.InnerException%2A>  
  
 W poniższej tabeli przedstawiono początkowe wartości właściwości dla wystąpienia <xref:System.OutOfMemoryException>.  
  
|Właściwość|Wartość|  
|--------------|-----------|  
|<xref:System.Exception.InnerException%2A>|Odwołanie do wewnętrznego wyjątku.|  
|<xref:System.Exception.Message%2A>|Ciąg komunikatu o błędzie.|  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Exception" />
        <related type="Article" href="~/docs/standard/exceptions/index.md">Obsługa i zgłaszanie wyjątków</related>
      </Docs>
    </Member>
  </Members>
</Type>
