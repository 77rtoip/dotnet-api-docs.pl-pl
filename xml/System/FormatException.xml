<Type Name="FormatException" FullName="System.FormatException">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="fee6bb31edfb1dcabb67191e11507f5914dbb0e2" />
    <Meta Name="ms.sourcegitcommit" Value="84c54c0c7d64827a5637d1f05e74e1f0598606a1" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="08/27/2018" />
    <Meta Name="ms.locfileid" Value="42986647" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class FormatException : SystemException" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit FormatException extends System.SystemException" />
  <TypeSignature Language="DocId" Value="T:System.FormatException" />
  <TypeSignature Language="VB.NET" Value="Public Class FormatException&#xA;Inherits SystemException" />
  <TypeSignature Language="C++ CLI" Value="public ref class FormatException : SystemException" />
  <TypeSignature Language="F#" Value="type FormatException = class&#xA;    inherit SystemException" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Exception</BaseTypeName>
    <BaseTypeName FrameworkAlternate="netframework-4.5">System.SystemException</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Wyjątek, który jest generowany, gdy format argumentu jest nieprawidłowy lub gdy [ciąg formatu złożonego](~/docs/standard/base-types/composite-formatting.md) został nieprawidłowo sformułowany.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A <xref:System.FormatException> wyjątku może zostać wygenerowany dla jednego z następujących powodów:  
  
-   W wywołaniu do metody, która konwertuje ciąg na inny typ danych ciągu nie jest zgodny z wymaganym wzorcem. Ten błąd zazwyczaj występuje podczas wywoływania niektóre metody <xref:System.Convert> klasy i `Parse` i `ParseExact` metody niektórych typów.  
  
     W większości przypadków, zwłaszcza, jeśli ciąg, który podczas konwertowania danych wejściowych przez użytkownika lub odczytu z pliku, należy użyć `try/catch` blokowania i obsługiwać <xref:System.FormatException> wyjątek, jeśli konwersja nie powiedzie się. Możesz również zastąpić wywołanie metody konwersji wywołanie `TryParse` lub `TryParseExact` metody, jeśli taka istnieje. Jednak <xref:System.FormatException> wyjątek, który jest zgłaszany, gdy próbujesz przeanalizować składni ciągu wstępnie zdefiniowanych lub zakodowane wskazuje na błąd programu. W takim przypadku należy Popraw błąd zamiast możesz obsłużyć wyjątek.  
  
     Konwersja ciągu na następujące typy w <xref:System> przestrzeni nazw może zgłosić <xref:System.FormatException> wyjątek:  
  
    -   <xref:System.Boolean>. <xref:System.Boolean.Parse%28System.String%29?displayProperty=nameWithType> i <xref:System.Convert.ToBoolean%28System.String%29?displayProperty=nameWithType> metody wymagają ciąg można przekonwertować na "True", "true", "False" lub "false". Dowolna inna wartość zgłasza <xref:System.FormatException> wyjątku.  
  
    -   <xref:System.DateTime> i <xref:System.DateTimeOffset>. Wszystkie dane daty i godziny jest interpretowany w zależności od Konwencji formatowania określonej kultury: Bieżąca kultura wątku (lub w niektórych przypadkach bieżącej kultury domeny aplikacji), niezmiennej kultury lub określonej kultury. Gdy wywołujesz <xref:System.DateTime.ParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=nameWithType> i <xref:System.DateTimeOffset.ParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=nameWithType> metod, dane daty i godziny również musi odpowiadać *dokładnie* do wzorca określonego przez co najmniej jeden [ciągi w standardowym formacie](~/docs/standard/base-types/standard-date-and-time-format-strings.md) lub [niestandardowe ciągi formatujące](~/docs/standard/base-types/custom-date-and-time-format-strings.md) są dostarczane jako argumentów w wywołaniu metody. Jeśli nie jest zgodny z oczekiwanym wzorcem specyficzne dla kultury <xref:System.FormatException> wyjątku. Oznacza to, że dane daty i godziny, które są zapisywane w formacie specyficzne dla kultury na jeden system nie może pomyślnie przeanalizować w innym systemie.  
  
         Aby uzyskać więcej informacji na temat analizowania daty i godziny, zobacz [ciągi analizy daty i godziny](~/docs/standard/base-types/parsing-datetime.md) i dokumentację dla metody, która zgłosiła wyjątek.  
  
    -   **GUIDs.** Reprezentacja ciągu identyfikatora GUID musi zawierać 32 cyfry szesnastkowe (0-F) i musi należeć do jednej z pięciu formaty danych wyjściowych przez <xref:System.Guid.ToString%2A?displayProperty=nameWithType> metody. Aby uzyskać więcej informacji, zobacz <xref:System.Guid.Parse%2A?displayProperty=nameWithType> metody.  
  
    -   **Typy liczbowe, w tym wszystko podpisane liczby całkowite, liczb całkowitych bez znaku i typów zmiennoprzecinkowych.** Ciąg, który ma być analizowany, musi składać się z alfabetu łacińskiego cyfry 0-9. Dodatnia lub ujemna znak separatora dziesiętnego, separatory grup i symbol waluty może być również dozwolony. Próby przeprowadzenia analizy ciąg, który zawiera inne znak zawsze zgłasza <xref:System.FormatException> wyjątku.  
  
         Wszystkie ciągi numeryczne są interpretowane w oparciu o Konwencji formatowania określonej kultury: Bieżąca kultura wątku (lub w niektórych przypadkach bieżącej kultury domeny aplikacji), niezmiennej kultury lub określonej kultury. W rezultacie ciągów liczbowych, który jest analizowany przy użyciu konwencji kultury jeden może zakończyć się niepowodzeniem przy użyciu konwencji innego.  
  
         Aby uzyskać więcej informacji na temat analizowanie ciągów numerycznych, zobacz [analizowanie ciągów liczbowych](~/docs/standard/base-types/parsing-numeric.md) i dokumentację dla określonej metody, która zgłosiła wyjątek.  
  
    -   **Przedziały czasowe.** Ciąg, który ma być analizowany, musi być w stałym formacie niewrażliwość na ustawienia kulturowe lub w formacie wrażliwość na ustawienia kulturowe, zdefiniowane przez bieżącą kulturę wątku (lub, w niektórych przypadkach bieżącej kultury domeny aplikacji), niezmiennej kultury lub określonej kultury. Jeśli ciąg nie znajduje się w odpowiednim formacie, lub w przypadku, w minimalnym, dni, godzin, minut składniki przedział czasu nie są dostępne, metoda analizowania zgłasza <xref:System.FormatException> wyjątku. Aby uzyskać więcej informacji, zobacz dokumentację dla <xref:System.TimeSpan> analizy metody, która zgłosiła wyjątek.  
  
-   Typ implementuje <xref:System.IFormattable> interfejs, który obsługuje ciągi formatu, które definiują, jak obiekt jest konwertowana na jego reprezentację ciągu i nieprawidłowy ciąg formatu jest używany. Jest to najbardziej rozpowszechnione w operacji formatowania. W poniższym przykładzie ciąg formatu standardowego "Q" jest używany w ciągu formatu złożonego numeru formatowania. Jednak "Q" nie jest prawidłowym [ciąg formatu standardowego](~/docs/standard/base-types/standard-numeric-format-strings.md).  
  
     [!code-csharp[System.FormatException#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.formatexception/cs/iformattable1.cs#7)]
     [!code-vb[System.FormatException#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.formatexception/vb/iformattable1.vb#7)]  
  
     Ten wyjątek jest wynikiem błędu w kodzie. Aby poprawić ten błąd, Usuń ciąg formatu lub Zastąp prawidłowa. Poniższy przykład naprawia ten błąd, zastępując ciąg formatu nieprawidłowy ciąg formatu "C" (currency).  
  
     [!code-csharp[System.FormatException#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.formatexception/cs/iformattable2.cs#8)]
     [!code-vb[System.FormatException#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.formatexception/vb/iformattable2.vb#8)]  
  
     A <xref:System.FormatException> również zgłoszony wyjątek analizując metod, takich jak <xref:System.DateTime.ParseExact%2A?displayProperty=nameWithType> i <xref:System.Guid.ParseExact%2A?displayProperty=nameWithType>, ciąg, który ma być analizowany, aby dokładnie pasował do wzorca określonego przez ciąg formatu, który wymaga. W poniższym przykładzie ciąg reprezentujący identyfikator GUID oczekuje się, aby były zgodne ze wzorcem określona przez ciąg formatu standardowego "G". Jednak <xref:System.Guid> implementacja struktury <xref:System.IFormattable> nie obsługuje ciąg formatu "G".  
  
     [!code-csharp[System.FormatException#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.formatexception/cs/iformattable3.cs#9)]
     [!code-vb[System.FormatException#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.formatexception/vb/iformattable3.vb#9)]  
  
     Ten wyjątek również jest wynikiem błędu w kodzie. Aby go rozwiązać, wywołanie metody analizy, która nie wymaga takich jak dokładny format <xref:System.DateTime.Parse%2A?displayProperty=nameWithType> lub <xref:System.Guid.Parse%2A?displayProperty=nameWithType>, lub Zastąp poprawny ciąg formatujący. Poniższy przykład naprawia błąd przez wywołanie metody <xref:System.Guid.Parse%2A?displayProperty=nameWithType> metody.  
  
     [!code-csharp[System.FormatException#10](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.formatexception/cs/iformattable4.cs#10)]
     [!code-vb[System.FormatException#10](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.formatexception/vb/iformattable4.vb#10)]  
  
-   Co najmniej jednym z indeksów pozycje formatu w [ciąg formatu złożonego](~/docs/standard/base-types/composite-formatting.md) jest większe niż indeksy elementów w tablicy listy lub parametr obiektu. W poniższym przykładzie największego indeksu elementu formatu w ciągu formatu jest 3. Ponieważ indeksy elementów na liście obiektów są oparte na zerze, ten ciąg formatowania wymagałoby lista obiektów ma cztery elementy. Zamiast tego ma tylko trzy `dat`, `temp`, i `scale`, dlatego ten kod powoduje <xref:System.FormatException> wyjątek w czasie wykonywania:.  
  
     [!code-csharp[System.FormatException#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.formatexception/cs/example1.cs#1)]
     [!code-vb[System.FormatException#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.formatexception/vb/example1.vb#1)]  
  
     W tym przypadku <xref:System.FormatException> wyjątek jest wynikiem błędu dla deweloperów. Jego powinny być poprawione, a nie obsługiwane w `try/catch` bloku, upewniając się, że każdy element na liście obiektów odpowiada indeks elementu formatu. Aby rozwiązać problem w tym przykładzie, Zmień indeks drugi element formatu do odwoływania się do `dat` zmienną i dekrementacji indeks każdy element formatu kolejnych o jeden.  
  
     [!code-csharp[System.FormatException#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.formatexception/cs/example2.cs#2)]
     [!code-vb[System.FormatException#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.formatexception/vb/example2.vb#2)]  
  
-   Ciąg formatu złożonego nie jest poprawnie sformułowany. W takim przypadku <xref:System.FormatException> wyjątek jest zawsze wynikiem błędu dla deweloperów. Jego powinny być poprawione, a nie obsługiwane w `try/catch` bloku.  
  
     Podjęcie próby, które mają zostać objęte nawiasów klamrowych literału ciągu, zgodnie z poniższym przykładzie jest, spowoduje zgłoszenie wyjątku.  
  
     [!code-csharp[System.String.Format#23](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.String.Format/cs/qa3.cs#23)]
     [!code-vb[System.String.Format#23](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.String.Format/vb/qa3.vb#23)]  
  
     To zalecana technika, w tym nawiasów klamrowych literału ciągu formatu złożonego jest umieszczone na liście obiektów i użyj elementów formatu, aby wstawić je do ciągu wynikowego. Na przykład można zmodyfikować poprzedni ciąg formatu złożonego, jak pokazano poniżej.  
  
     [!code-csharp[System.String.Format#24](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.String.Format/cs/qa3.cs#24)]
     [!code-vb[System.String.Format#24](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.String.Format/vb/qa3.vb#24)]  
  
     Wyjątek również jest generowany, jeśli Twoja ciąg formatu zawiera błąd pisowni. Następujące wywołanie do <xref:System.String.Format%2A?displayProperty=nameWithType> metoda pomija zamykającego nawiasu klamrowego i pary otwierający nawias klamrowy za pomocą nawias zamykający.  
  
     [!code-csharp[System.FormatException#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.formatexception/cs/example3.cs#3)]
     [!code-vb[System.FormatException#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.formatexception/vb/example3.vb#3)]  
  
     Popraw błąd, upewnij się, czy odpowiadają wszystkie otwierających i zamykających nawiasów klamrowych.  
  
     [!code-csharp[System.FormatException#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.formatexception/cs/example3.cs#4)]
     [!code-vb[System.FormatException#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.formatexception/vb/example3.vb#4)]  
  
-   Została podana lista obiektów w metoda jako tablicę silnie typizowany parametr formatowania złożonego i <xref:System.FormatException> wyjątku wskazuje, że indeks jeden lub więcej elementów formatu przekracza liczbę argumentów, na liście obiektów. Dzieje się tak, ponieważ istnieje nie jawnej konwersji między typami tablic, więc zamiast tego kompilator traktuje tablicy jako pojedynczy argument, a nie jako tablicy parametrów. Na przykład, następujące wywołanie do <xref:System.Console.WriteLine%28System.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType> metoda zgłasza wyjątek <xref:System.FormatException> wyjątku, mimo że najwyższy indeks elementów formatu 3 i tablicy parametrów typu <xref:System.Int32> ma cztery elementy.  
  
     [!code-csharp[System.FormatException#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.formatexception/cs/qa1.cs#5)]
     [!code-vb[System.FormatException#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.formatexception/vb/qa1.vb#5)]  
  
     Zamiast obsługi tego wyjątku, należy wyeliminować jego przyczyny. Ponieważ Visual Basic ani C# można przekonwertować tablicę liczb całkowitych na tablicę obiektów, należy dokonać konwersji, samodzielnie przed wywołaniem metody formatowania złożonego. W poniższym przykładzie przedstawiono jedna implementacja.  
  
     [!code-csharp[System.FormatException#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.formatexception/cs/qa2.cs#6)]
     [!code-vb[System.FormatException#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.formatexception/vb/qa2.vb#6)]  
  
 <xref:System.FormatException> używa COR_E_FORMAT HRESULT, która ma wartość 0x80131537.  
  
 <xref:System.FormatException> Klasa pochodzi od <xref:System.Exception> i dodaje nie unikatowych elementów członkowskich. Aby uzyskać listę początkowe wartości właściwości wystąpienia <xref:System.FormatException>, zobacz <xref:System.FormatException.%23ctor%2A> konstruktorów.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Exception" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.FormatException" /> klasy.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FormatException ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.FormatException.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FormatException();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.FormatException" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten konstruktor inicjuje <xref:System.Exception.Message%2A> właściwości nowego wystąpienia dostarczane przez system komunikatu, który opisuje błąd, takie jak "Nieprawidłowy format." Ten komunikat uwzględnia bieżącą kulturę systemu.  
  
 W poniższej tabeli przedstawiono początkowe wartości właściwości dla wystąpienia <xref:System.FormatException>.  
  
|Właściwość|Wartość|  
|--------------|-----------|  
|<xref:System.Exception.InnerException%2A>|Odwołanie o wartości null (`Nothing` w języku Visual Basic).|  
|<xref:System.Exception.Message%2A>|Zlokalizowany ciąg komunikatu o błędzie.|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FormatException (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.FormatException.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FormatException(System::String ^ message);" />
      <MemberSignature Language="F#" Value="new FormatException : string -&gt; FormatException" Usage="new System.FormatException message" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">Komunikat, który opisuje błąd.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.FormatException" /> klasy przy użyciu określonego komunikatu o błędzie.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten konstruktor inicjuje <xref:System.Exception.Message%2A?displayProperty=nameWithType> właściwości nowego wyjątku za pomocą `message` parametru. Zawartość `message` ma być zrozumiała dla ludzi. Obiekt wywołujący tego konstruktora jest wymagany w celu zagwarantowania, że ten ciąg został zlokalizowany w bieżącej kulturze systemu.  
  
 W poniższej tabeli przedstawiono początkowe wartości właściwości dla wystąpienia <xref:System.FormatException>.  
  
|Właściwość|Wartość|  
|--------------|-----------|  
|<xref:System.Exception.InnerException%2A>|Odwołanie o wartości null (`Nothing` w języku Visual Basic).|  
|<xref:System.Exception.Message%2A>|Ciąg komunikatu o błędzie.|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected FormatException (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.FormatException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; FormatException(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="new FormatException : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; FormatException" Usage="new System.FormatException (info, context)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info">Obiekt zawierający dane serializowanego obiektu.</param>
        <param name="context">Informacje kontekstowe o źródłowego lub miejscu docelowym.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.FormatException" /> klasy z serializowanych danych.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten konstruktor jest wywoływana podczas deserializacji do odtworzenia obiektu wyjątku przesyłanego za pomocą strumienia.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FormatException (string message, Exception innerException);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message, class System.Exception innerException) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.FormatException.#ctor(System.String,System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As String, innerException As Exception)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FormatException(System::String ^ message, Exception ^ innerException);" />
      <MemberSignature Language="F#" Value="new FormatException : string * Exception -&gt; FormatException" Usage="new System.FormatException (message, innerException)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="innerException" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="message">Komunikat o błędzie wyjaśniający przyczynę wyjątku.</param>
        <param name="innerException">Wyjątek, który jest przyczyną bieżącego wyjątku. Jeśli <c>innerException</c> parametr nie jest odwołanie o wartości null (<see langword="Nothing" /> w języku Visual Basic), bieżący wyjątek jest zgłaszany w <see langword="catch" /> blok, który obsługuje wyjątek wewnętrzny.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.FormatException" /> klasy przy użyciu określonego komunikatu o błędzie i odwołania do wewnętrznego wyjątku, który jest przyczyną tego wyjątku.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wyjątek generowany jako bezpośredni wynik poprzedniego wyjątku powinien zawierać odwołanie do poprzedniego wyjątku we <xref:System.Exception.InnerException%2A> właściwości. <xref:System.Exception.InnerException%2A> Właściwość zwraca taką samą wartość, która jest przekazywana do konstruktora, lub odwołanie o wartości null (`Nothing` w języku Visual Basic) jeżeli <xref:System.Exception.InnerException%2A> nie dostarcza wartości wewnętrznego wyjątku do konstruktora.  
  
 W poniższej tabeli przedstawiono początkowe wartości właściwości dla wystąpienia <xref:System.FormatException>.  
  
|Właściwość|Wartość|  
|--------------|-----------|  
|<xref:System.Exception.InnerException%2A>|Odwołanie do wewnętrznego wyjątku.|  
|<xref:System.Exception.Message%2A>|Ciąg komunikatu o błędzie.|  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Exception" />
      </Docs>
    </Member>
  </Members>
</Type>