<Type Name="FormatException" FullName="System.FormatException">
  <Metadata><Meta Name="ms.openlocfilehash" Value="fce5e2738ce27685d6dc449f1e8ad3fda4c6a23c" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69406362" /></Metadata><TypeSignature Language="C#" Value="public class FormatException : SystemException" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit FormatException extends System.SystemException" />
  <TypeSignature Language="DocId" Value="T:System.FormatException" />
  <TypeSignature Language="VB.NET" Value="Public Class FormatException&#xA;Inherits SystemException" />
  <TypeSignature Language="C++ CLI" Value="public ref class FormatException : SystemException" />
  <TypeSignature Language="F#" Value="type FormatException = class&#xA;    inherit SystemException" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Exception</BaseTypeName>
    <BaseTypeName FrameworkAlternate="netframework-4.5">System.SystemException</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Wyjątek, który jest generowany, gdy Format argumentu jest nieprawidłowy lub jeśli <see href="https://docs.microsoft.com/dotnet/standard/base-types/composite-formatting">ciąg formatu złożonego</see> nie jest poprawnie sformułowany.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.FormatException> Wyjątek może być zgłoszony z jednego z następujących powodów:  
  
-   W wywołaniu metody, która konwertuje ciąg na inny typ danych, ciąg nie jest zgodny z wymaganym wzorcem. Zwykle zdarza się to podczas wywoływania niektórych metod <xref:System.Convert> klasy `Parse` i metod i `ParseExact` .  
  
     W większości przypadków, szczególnie jeśli konwertowany ciąg jest wejściowy przez użytkownika lub odczytywany z pliku, należy użyć `try/catch` bloku i <xref:System.FormatException> obsłużyć wyjątek, jeśli konwersja nie powiedzie się. Możesz również zastąpić wywołanie metody konwersji wywołaniem `TryParse` metody lub `TryParseExact` , jeśli taka istnieje. <xref:System.FormatException> Jednak wyjątek, który jest generowany, gdy próbujesz przeanalizować wstępnie zdefiniowany lub trwale zakodowany ciąg wskazuje błąd programu. W takim przypadku należy poprawić błąd zamiast obsłużyć wyjątek.  
  
     Konwersja ciągu do następujących typów w <xref:System> przestrzeni nazw może <xref:System.FormatException> zgłosić wyjątek:  
  
    -   <xref:System.Boolean>. Metody <xref:System.Boolean.Parse%28System.String%29?displayProperty=nameWithType> i<xref:System.Convert.ToBoolean%28System.String%29?displayProperty=nameWithType> wymagają przekonwertowania ciągu na wartość "true", "true", "false" lub "false". Każda inna wartość zgłasza <xref:System.FormatException> wyjątek.  
  
    -   <xref:System.DateTime>i <xref:System.DateTimeOffset>. Wszystkie dane daty i godziny są interpretowane na podstawie Konwencji formatowania określonej kultury: bieżącą kulturą wątku (lub w niektórych przypadkach, kultury domeny bieżącej aplikacji), kultury niezmiennej lub określonej kultury. Po wywołaniu <xref:System.DateTime.ParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=nameWithType> metody i <xref:System.DateTimeOffset.ParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=nameWithType> dane daty i godziny muszą również być zgodne z wzorcem określonym przez co najmniej jeden [ciąg formatu standardowego](~/docs/standard/base-types/standard-date-and-time-format-strings.md) lub ** [ciągi formatu niestandardowego](~/docs/standard/base-types/custom-date-and-time-format-strings.md) , które są podane jako argumenty w wywołanie metody. Jeśli nie jest zgodny z oczekiwanym wzorcem specyficznym dla kultury <xref:System.FormatException> , zgłaszany jest wyjątek. Oznacza to, że dane daty i godziny zapisane w formacie specyficznym dla kultury w jednym systemie mogą nie zostać przeanalizowane pomyślnie w innym systemie.  
  
         Aby uzyskać więcej informacji na temat analizowania dat i godzin, zobacz [Analizowanie ciągów daty i godziny](~/docs/standard/base-types/parsing-datetime.md) oraz dokumentację metody, która wywołała wyjątek.  
  
    -   **GUIDs.** Ciąg reprezentujący identyfikator GUID musi zawierać 32 cyfr szesnastkowych (0-F) i musi znajdować się w jednym z pięciu formatów danych wyjściowych przez <xref:System.Guid.ToString%2A?displayProperty=nameWithType> metodę. Aby uzyskać więcej informacji, zobacz <xref:System.Guid.Parse%2A?displayProperty=nameWithType> metodę.  
  
    -   **Typy liczbowe, w tym wszystkie podpisane liczby całkowite, liczby całkowite bez znaku i typy zmiennoprzecinkowe.** Ciąg, który ma być analizowany, musi zawierać cyfry łacińskie 0-9. Dozwolony może być również znak dodatni lub ujemny, separator dziesiętny, separatory grup i symbol waluty. Próba przeanalizowania ciągu zawierającego jakikolwiek inny znak zawsze zgłasza <xref:System.FormatException> wyjątek.  
  
         Wszystkie ciągi liczbowe są interpretowane na podstawie Konwencji formatowania określonej kultury: bieżącą kulturą wątku (lub, w niektórych przypadkach, kultury domeny bieżącej aplikacji), niezmiennej kultury lub określonej kultury. W związku z tym, ciąg liczbowy, który jest analizowany przy użyciu konwencji z jednej kultury może zakończyć się niepowodzeniem w przypadku korzystania z Konwencji innej.  
  
         Aby uzyskać więcej informacji na temat analizowania ciągów liczbowych, zobacz [Analizowanie ciągów liczbowych](~/docs/standard/base-types/parsing-numeric.md) i dokumentację dla konkretnej metody, która wywołała wyjątek.  
  
    -   **Przedziały czasu.** Ciąg, który ma być analizowany, musi być w stałym formacie niezależnym od kultury lub w formacie wrażliwym na kulturę zdefiniowanym przez bieżącą kulturę wątku (lub w niektórych przypadkach, kulturę domeny bieżącej aplikacji), kulturę niezmienną lub określoną kulturę. Jeśli ciąg nie jest w odpowiednim formacie lub w przypadku, gdy nie są używane składniki czasu, dni, godziny i minuty interwału czasowego, metoda analizy zgłasza <xref:System.FormatException> wyjątek. Aby uzyskać więcej informacji, zobacz dokumentację <xref:System.TimeSpan> metody analizy, która wywołała wyjątek.  
  
-   Typ implementuje <xref:System.IFormattable> interfejs, który obsługuje ciągi formatowania, które definiują sposób konwersji obiektu na jego reprezentację w postaci ciągu, a używany jest nieprawidłowy ciąg formatu. Jest to najbardziej typowe w operacji formatowania. W poniższym przykładzie ciąg formatu standardowego "Q" jest używany w ciągu formatu złożonego do formatowania liczby. Jednak "Q" nie jest prawidłowym [ciągiem formatu standardowego](~/docs/standard/base-types/standard-numeric-format-strings.md).  
  
     [!code-csharp[System.FormatException#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.formatexception/cs/iformattable1.cs#7)]
     [!code-vb[System.FormatException#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.formatexception/vb/iformattable1.vb#7)]  
  
     Ten wyjątek jest wynikiem błędu kodowania. Aby poprawić błąd, usuń ciąg formatu lub Zastąp prawidłowy. Poniższy przykład koryguje błąd przez zastąpienie nieprawidłowego ciągu formatu ciągiem formatu "C" (waluta).  
  
     [!code-csharp[System.FormatException#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.formatexception/cs/iformattable2.cs#8)]
     [!code-vb[System.FormatException#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.formatexception/vb/iformattable2.vb#8)]  
  
     Wyjątek może być również generowany przez metody analizy, takie jak <xref:System.DateTime.ParseExact%2A?displayProperty=nameWithType> i <xref:System.Guid.ParseExact%2A?displayProperty=nameWithType>, które wymagają, aby ciąg został przeanalizowany w celu zapewnienia zgodności dokładnie ze wzorcem określonym przez ciąg formatu. <xref:System.FormatException> W poniższym przykładzie ciąg reprezentujący identyfikator GUID powinien być zgodny ze wzorcem określonym przez ciąg formatu standardowego "G". <xref:System.Guid> Jednakże<xref:System.IFormattable> implementacja struktury nie obsługuje ciągu formatu "G".  
  
     [!code-csharp[System.FormatException#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.formatexception/cs/iformattable3.cs#9)]
     [!code-vb[System.FormatException#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.formatexception/vb/iformattable3.vb#9)]  
  
     Przyczyną tego wyjątku jest również błąd kodowania. Aby rozwiązać ten problem, wywołaj metodę analizy, która nie wymaga dokładnego formatu, <xref:System.DateTime.Parse%2A?displayProperty=nameWithType> takiego <xref:System.Guid.Parse%2A?displayProperty=nameWithType>jak lub, lub Zastąp prawidłowy ciąg formatu. Poniższy przykład koryguje błąd przez wywołanie <xref:System.Guid.Parse%2A?displayProperty=nameWithType> metody.  
  
     [!code-csharp[System.FormatException#10](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.formatexception/cs/iformattable4.cs#10)]
     [!code-vb[System.FormatException#10](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.formatexception/vb/iformattable4.vb#10)]  
  
-   Jeden lub więcej indeksów elementów formatu w [ciągu formatu złożonego](~/docs/standard/base-types/composite-formatting.md) jest większy niż indeksy elementów na liście obiektów lub w tablicy parametrów. W poniższym przykładzie największy indeks elementu formatu w ciągu formatu to 3. Ponieważ indeksy elementów na liście obiektów są oparte na zero, ten ciąg formatu wymaga, aby lista obiektów zawierała cztery elementy. Zamiast tego ma tylko trzy `dat`,, `temp`, i `scale`, więc kod powoduje <xref:System.FormatException> wyjątek w czasie wykonywania:.  
  
     [!code-csharp[System.FormatException#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.formatexception/cs/example1.cs#1)]
     [!code-vb[System.FormatException#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.formatexception/vb/example1.vb#1)]  
  
     W tym przypadku <xref:System.FormatException> wyjątek jest wynikiem błędu dewelopera. Należy je skorygować zamiast obsługiwać w `try/catch` bloku przez upewnienie się, że każdy element na liście obiektów odpowiada indeksowi elementu formatu. Aby skorygować ten przykład, należy zmienić indeks drugiego elementu formatu, aby odwołać się do `dat` zmiennej, i zmniejszyć indeks każdego kolejnego elementu formatu o jeden.  
  
     [!code-csharp[System.FormatException#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.formatexception/cs/example2.cs#2)]
     [!code-vb[System.FormatException#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.formatexception/vb/example2.vb#2)]  
  
-   Ciąg formatu złożonego nie jest poprawnie sformułowany. W <xref:System.FormatException> takim przypadku wyjątek jest zawsze wynikiem błędu dewelopera. Należy je skorygować zamiast obsługiwać w `try/catch` bloku.  
  
     Próba dołączenia nawiasów klamrowych w ciągu, jak pokazano w poniższym przykładzie, spowoduje zgłoszenie wyjątku.  
  
     [!code-csharp[System.String.Format#23](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.String.Format/cs/qa3.cs#23)]
     [!code-vb[System.String.Format#23](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.String.Format/vb/qa3.vb#23)]  
  
     Zalecaną techniką dołączenia nawiasów klamrowych w ciągu formatu złożonego jest umieszczenie ich na liście obiektów i użycie elementów formatu do wstawienia do ciągu wynikowego. Na przykład można zmodyfikować poprzedni ciąg formatu złożonego, jak pokazano poniżej.  
  
     [!code-csharp[System.String.Format#24](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.String.Format/cs/qa3.cs#24)]
     [!code-vb[System.String.Format#24](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.String.Format/vb/qa3.vb#24)]  
  
     Wyjątek jest zgłaszany również, jeśli ciąg formatu zawiera literówki. Następujące wywołanie <xref:System.String.Format%2A?displayProperty=nameWithType> metody pomija zamykający nawias klamrowy i par otwierającego nawiasu klamrowego z nawiasem zamykającym.  
  
     [!code-csharp[System.FormatException#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.formatexception/cs/example3.cs#3)]
     [!code-vb[System.FormatException#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.formatexception/vb/example3.vb#3)]  
  
     Aby poprawić ten błąd, upewnij się, że wszystkie otwierające i zamykające nawiasy klamrowe odpowiadają.  
  
     [!code-csharp[System.FormatException#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.formatexception/cs/example3.cs#4)]
     [!code-vb[System.FormatException#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.formatexception/vb/example3.vb#4)]  
  
-   Podano listę obiektów w złożonej metodzie formatowania jako tablicę parametrów o jednoznacznie określonym typie, a <xref:System.FormatException> wyjątek wskazuje, że indeks jednego lub większej liczby elementów formatowania przekracza liczbę argumentów na liście obiektów. Dzieje się tak, ponieważ nie istnieje jawna konwersja między typami tablic, dlatego zamiast tego kompilator traktuje tablicę jako pojedynczy argument, a nie jako tablicę parametrów. Na przykład następujące wywołanie <xref:System.Console.WriteLine%28System.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType> metody <xref:System.FormatException> zgłasza wyjątek, chociaż najwyższy indeks elementów formatu to 3, a tablica parametrów typu <xref:System.Int32> ma cztery elementy.  
  
     [!code-csharp[System.FormatException#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.formatexception/cs/qa1.cs#5)]
     [!code-vb[System.FormatException#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.formatexception/vb/qa1.vb#5)]  
  
     Zamiast obsłużyć ten wyjątek, należy wyeliminować jego przyczynę. Ponieważ ani nie Visual Basic C# ani nie można skonwertować tablicy typu Integer na tablicę obiektów, należy wykonać konwersję samodzielnie przed wywołaniem metody formatowania złożonego. Poniższy przykład zawiera jedną implementację.  
  
     [!code-csharp[System.FormatException#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.formatexception/cs/qa2.cs#6)]
     [!code-vb[System.FormatException#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.formatexception/vb/qa2.vb#6)]  
  
 <xref:System.FormatException>używa HRESULT COR_E_FORMAT o wartości 0x80131537.  
  
 Klasa pochodzi od <xref:System.Exception> i nie dodaje żadnych unikatowych elementów członkowskich. <xref:System.FormatException> Aby uzyskać listę początkowe wartości właściwości wystąpienia <xref:System.FormatException>, zobacz <xref:System.FormatException.%23ctor%2A> konstruktorów.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Exception" />
    <related type="Article" href="~/docs/standard/exceptions/index.md">Obsługa i zgłaszanie wyjątków</related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.FormatException" /> klasy.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FormatException ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.FormatException.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FormatException();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.FormatException" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten konstruktor inicjuje <xref:System.Exception.Message%2A> właściwość nowego wystąpienia do komunikatu dostarczonego przez system, który opisuje błąd, taki jak "nieprawidłowy format". Ten komunikat uwzględnia bieżącą kulturę systemu.  
  
 W poniższej tabeli przedstawiono początkowe wartości właściwości dla wystąpienia <xref:System.FormatException>.  
  
|Właściwość|Wartość|  
|--------------|-----------|  
|<xref:System.Exception.InnerException%2A>|Odwołanie o wartości null (`Nothing` w języku Visual Basic).|  
|<xref:System.Exception.Message%2A>|Zlokalizowany ciąg komunikatu o błędzie.|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FormatException (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.FormatException.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FormatException(System::String ^ message);" />
      <MemberSignature Language="F#" Value="new FormatException : string -&gt; FormatException" Usage="new System.FormatException message" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">Komunikat, który opisuje błąd.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.FormatException" /> klasy przy użyciu określonego komunikatu o błędzie.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten konstruktor inicjuje <xref:System.Exception.Message%2A?displayProperty=nameWithType> właściwość nowego wyjątku `message` przy użyciu parametru. Zawartość `message` ma być zrozumiała dla ludzi. Obiekt wywołujący tego konstruktora jest wymagany w celu zagwarantowania, że ten ciąg został zlokalizowany w bieżącej kulturze systemu.  
  
 W poniższej tabeli przedstawiono początkowe wartości właściwości dla wystąpienia <xref:System.FormatException>.  
  
|Właściwość|Wartość|  
|--------------|-----------|  
|<xref:System.Exception.InnerException%2A>|Odwołanie o wartości null (`Nothing` w języku Visual Basic).|  
|<xref:System.Exception.Message%2A>|Ciąg komunikatu o błędzie.|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected FormatException (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.FormatException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; FormatException(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="new FormatException : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; FormatException" Usage="new System.FormatException (info, context)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="info">Obiekt zawierający dane serializowanego obiektu.</param>
        <param name="context">Informacje kontekstowe o źródłowego lub miejscu docelowym.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.FormatException" /> klasy z serializowanych danych.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten konstruktor jest wywoływana podczas deserializacji do odtworzenia obiektu wyjątku przesyłanego za pomocą strumienia.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FormatException (string message, Exception innerException);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message, class System.Exception innerException) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.FormatException.#ctor(System.String,System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As String, innerException As Exception)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FormatException(System::String ^ message, Exception ^ innerException);" />
      <MemberSignature Language="F#" Value="new FormatException : string * Exception -&gt; FormatException" Usage="new System.FormatException (message, innerException)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="innerException" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="message">Komunikat o błędzie wyjaśniający przyczynę wyjątku.</param>
        <param name="innerException">Wyjątek, który jest przyczyną bieżącego wyjątku. Jeśli parametr nie jest odwołaniem null (<see langword="Nothing" /> w Visual Basic), bieżący <see langword="catch" /> wyjątek jest wywoływany w bloku, który obsługuje wyjątek wewnętrzny. <paramref name="innerException" /></param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.FormatException" /> klasy przy użyciu określonego komunikatu o błędzie i odwołania do wewnętrznego wyjątku, który jest przyczyną tego wyjątku.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wyjątek generowany jako bezpośredni wynik poprzedniego wyjątku powinien zawierać odwołanie do poprzedniego wyjątku we <xref:System.Exception.InnerException%2A> właściwości. Właściwość zwraca tę samą wartość, która jest przenoszona do konstruktora lub odwołanie o wartości null (`Nothing` <xref:System.Exception.InnerException%2A> w Visual Basic), jeśli właściwość nie poda wewnętrznej wartości wyjątku do konstruktora. <xref:System.Exception.InnerException%2A>  
  
 W poniższej tabeli przedstawiono początkowe wartości właściwości dla wystąpienia <xref:System.FormatException>.  
  
|Właściwość|Wartość|  
|--------------|-----------|  
|<xref:System.Exception.InnerException%2A>|Odwołanie do wewnętrznego wyjątku.|  
|<xref:System.Exception.Message%2A>|Ciąg komunikatu o błędzie.|  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Exception" />
        <related type="Article" href="~/docs/standard/exceptions/index.md">Obsługa i zgłaszanie wyjątków</related>
      </Docs>
    </Member>
  </Members>
</Type>
