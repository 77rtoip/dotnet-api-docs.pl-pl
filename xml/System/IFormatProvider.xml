<Type Name="IFormatProvider" FullName="System.IFormatProvider">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="380cd37c1402c4dcf42f0e57f7d4df8be500b69c" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36430877" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IFormatProvider" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IFormatProvider" />
  <TypeSignature Language="DocId" Value="T:System.IFormatProvider" />
  <TypeSignature Language="VB.NET" Value="Public Interface IFormatProvider" />
  <TypeSignature Language="C++ CLI" Value="public interface class IFormatProvider" />
  <TypeSignature Language="F#" Value="type IFormatProvider = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Udostępnia mechanizm dla obiekt, aby kontrolować sposób formatowania pobierania.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.IFormatProvider> Interfejsu dostarcza obiekt, który zawiera informacje dotyczące formatowania do formatowania ani do analizowania operacji. Operacji formatowania skonwertować wartości typu reprezentację ciągu tej wartości. Typowe metody formatowania `ToString` metod typu, a także <xref:System.String.Format%2A>. Operacje przetwarzania przekonwertować reprezentacja ciągu wartości do typu z daną wartością. Typowe metody analizy `Parse` i `TryParse`.  
  
 <xref:System.IFormatProvider> Interfejs zawiera jedną metodę <xref:System.IFormatProvider.GetFormat%2A?displayProperty=nameWithType>. <xref:System.IFormatProvider.GetFormat%2A> jest to metoda wywołania zwrotnego: analizy lub formatowania metoda wywołuje ona i przekazuje je <xref:System.Type> obiekt, który reprezentuje typ obiektu, który formatowanie lub analizy metody oczekuje będzie zawierał informacje formatowania. <xref:System.IFormatProvider.GetFormat%2A> Metoda jest odpowiedzialna za zwracając obiekt tego typu.  
  
 <xref:System.IFormatProvider> implementacje są często używane niejawnie przez formatowania ani do analizowania metody. Na przykład <xref:System.DateTime.ToString%28System.String%29?displayProperty=nameWithType> metoda niejawnie używa <xref:System.IFormatProvider> implementację, która reprezentuje systemu bieżącej kultury. <xref:System.IFormatProvider> implementacje można również określić jawnie za pomocą metod, które ma parametr typu <xref:System.IFormatProvider>, takich jak <xref:System.Int32.Parse%28System.String%2CSystem.IFormatProvider%29?displayProperty=nameWithType> i <xref:System.String.Format%28System.IFormatProvider%2CSystem.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType>.  
  
 .NET Framework obejmuje następujące trzy wstępnie zdefiniowane <xref:System.IFormatProvider> implementacji, aby podać informacje specyficzne dla kultury, który jest używany podczas formatowania lub analizowania wartości liczbowe oraz Data i godzina:  
  
-   <xref:System.Globalization.NumberFormatInfo> Klasy, która zawiera informacje, które jest używany do formatowania liczb, takich jak waluty tysięcy separator i symbole separatora dziesiętnego dla określonej kultury. Informacji o ciągi formatu wstępnie zdefiniowanego rozpoznał <xref:System.Globalization.NumberFormatInfo> obiektu i używany w operacji formatowanie liczbowe, zobacz [standardowe ciągi formatu liczbowego](~/docs/standard/base-types/standard-numeric-format-strings.md) i [niestandardowe ciągi formatów liczbowych](~/docs/standard/base-types/custom-numeric-format-strings.md).  
  
-   <xref:System.Globalization.DateTimeFormatInfo> Klasy, która zawiera informacje, które jest używany do formatowania daty i godziny, takie jak symbole separatora daty i godziny dla określonej kultury lub kolejność i format rok, miesiąc i dzień składników typu date. Informacji o ciągi formatu wstępnie zdefiniowanego rozpoznał <xref:System.Globalization.DateTimeFormatInfo> obiektu i używany w operacji formatowanie liczbowe, zobacz [standardowe ciągi daty i godziny Format](~/docs/standard/base-types/standard-date-and-time-format-strings.md) i [niestandardowe ciągi daty i godziny formatu ](~/docs/standard/base-types/custom-date-and-time-format-strings.md).  
  
-   <xref:System.Globalization.CultureInfo> Klasy, która reprezentuje określonej kultury. Jego <xref:System.IFormatProvider.GetFormat%2A> metoda zwraca wartość określonej kultury <xref:System.Globalization.NumberFormatInfo> lub <xref:System.Globalization.DateTimeFormatInfo> obiektu, w zależności od tego, czy <xref:System.Globalization.CultureInfo> obiekt jest używany w formatowanie lub analizowania operacja, która obejmuje liczby lub daty i godziny.  
  
 .NET Framework obsługuje również formatowania niestandardowego. Obejmuje to zwykle tworzenia formatowania klasy, która implementuje zarówno <xref:System.IFormatProvider> i <xref:System.ICustomFormatter>. Wystąpienie tej klasy są następnie przekazywane jako parametr do metody, która wykonuje operację formatowania niestandardowych, takich jak <xref:System.String.Format%28System.IFormatProvider%2CSystem.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType> w przykładzie przedstawiono ilustrację takie implementacja Niestandardowa wartość jako liczbę konta 12-cyfrowy do sformatowania.  
  
   
  
## Examples  
 Poniższy przykład przedstawia sposób <xref:System.IFormatProvider> implementacji można zmienić reprezentację wartości daty i godziny. W takim przypadku pojedyncza Data jest wyświetlany za pomocą <xref:System.Globalization.CultureInfo> obiektów, które reprezentują czterech różnych kultur.  
  
 [!code-csharp[System.IFormatProvider.Class#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IFormatProvider.Class/cs/provider2.cs#3)]
 [!code-vb[System.IFormatProvider.Class#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IFormatProvider.Class/vb/provider2.vb#3)]  
  
 Poniższy przykład przedstawia użycie klasy, która implementuje <xref:System.IFormatProvider> interfejsu i <xref:System.IFormatProvider.GetFormat%2A> metody. `AcctNumberFormat` Klasy konwertuje <xref:System.Int64> wartość, która reprezentuje liczbę sformatowany konta 12-cyfrowy numer konta. Jego `GetFormat` metoda zwraca odwołanie do bieżącego `AcctNumberFormat` wystąpienia, jeśli `formatType` parametr odnosi się do klasy, która implementuje <xref:System.ICustomFormatter>; w przeciwnym razie `GetFormat` zwraca `null`.  
  
 [!code-csharp[System.IFormatProvider.Class#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IFormatProvider.Class/cs/Provider.cs#2)]
 [!code-vb[System.IFormatProvider.Class#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IFormatProvider.Class/vb/Provider.vb#2)]  
  
 Klasa implementująca <xref:System.IFormatProvider> mogą posłużyć w wywołaniu do formatowania ani do analizowania operacji. Na przykład poniższy kod wywołania <xref:System.String.Format%28System.IFormatProvider%2CSystem.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType> metody można wygenerować ciągu, która zawiera sformatowany konta 12-cyfrowy numer.  
  
 [!code-csharp[System.IFormatProvider.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IFormatProvider.Class/cs/Provider.cs#1)]
 [!code-vb[System.IFormatProvider.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IFormatProvider.Class/vb/Provider.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ICustomFormatter" />
    <altmember cref="T:System.IFormattable" />
  </Docs>
  <Members>
    <Member MemberName="GetFormat">
      <MemberSignature Language="C#" Value="public object GetFormat (Type formatType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetFormat(class System.Type formatType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IFormatProvider.GetFormat(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetFormat (formatType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetFormat(Type ^ formatType);" />
      <MemberSignature Language="F#" Value="abstract member GetFormat : Type -&gt; obj" Usage="iFormatProvider.GetFormat formatType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="formatType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="formatType">Obiekt, który określa typ formatu obiektu do zwrócenia.</param>
        <summary>Zwraca obiekt, który udostępnia usługi formatowania dla określonego typu.</summary>
        <returns>Wystąpienie obiektu określonego przez <paramref name="formatType" />, jeśli <see cref="T:System.IFormatProvider" /> implementacji można dostarczyć tego typu obiektu; w przeciwnym razie <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.IFormatProvider.GetFormat%2A> jest to metoda wywołania zwrotnego, która formatowania ani do analizowania metody invoke można pobrać informacji na temat formatu ciągu wejściowego podczas analizy formatu ciągu wyjściowego w formatowaniu operacje lub operacje. W `formatType` parametr, formatowanie lub analizy metody przekazuje typ obiektu wymagane do wykonania tej operacji. Jeśli <xref:System.IFormatProvider> implementacja może dostarczyć to formatowanie lub podczas analizowania obiektu, zwraca ten obiekt. Jeśli nie, zwraca `null`.  
  
 Na przykład w wywołaniu <xref:System.Int32.ToString%28System.IFormatProvider%29?displayProperty=nameWithType> jest argument metody metody <xref:System.IFormatProvider> obiektu, który zawiera informacje o jak może być sformatowany reprezentację ciągu bieżącego wystąpienia liczba całkowita. Jeżeli środowisko uruchomieniowe wykonuje metodę, wywołuje <xref:System.IFormatProvider> obiektu <xref:System.IFormatProvider.GetFormat%2A> — metoda i przekazuje je <xref:System.Type> obiekt, który reprezentuje <xref:System.Globalization.NumberFormatInfo> typu. Jeśli <xref:System.IFormatProvider> obiektu można podać <xref:System.Globalization.NumberFormatInfo> obiektu, zwraca ten obiekt. Jeśli go nie można przekazać tego typu obiektu, zwraca `null`.  
  
 Można zaimplementować <xref:System.IFormatProvider> interfejsu i <xref:System.IFormatProvider.GetFormat%2A> metody klas, które zapewniają niestandardowe formatowanie lub analizowania usług. <xref:System.IFormatProvider> Wdrożenia są następnie przekazywane jako argument do dowolnego przeciążenia analizy lub formatowania metodę, która ma parametr typu <xref:System.IFormatProvider>, takich jak <xref:System.String.Format%28System.IFormatProvider%2CSystem.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType>, <xref:System.Int32.ToString%28System.String%2CSystem.IFormatProvider%29?displayProperty=nameWithType>, lub <xref:System.DateTime.Parse%28System.String%2CSystem.IFormatProvider%29?displayProperty=nameWithType>.  
  
   
  
## Examples  
 Poniższy przykład przedstawia użycie klasy, która implementuje <xref:System.IFormatProvider> interfejsu i <xref:System.IFormatProvider.GetFormat%2A> metody. `AcctNumberFormat` Klasy konwertuje <xref:System.Int64> wartość, która reprezentuje liczbę sformatowany konta 12-cyfrowy numer konta. Jego `GetFormat` metoda zwraca odwołanie do samej siebie, jeśli `formatType` parametr odnosi się do klasy, która implementuje <xref:System.ICustomFormatter>; w przeciwnym razie `GetFormat` zwraca `null`.  
  
 [!code-csharp[System.IFormatProvider.Class#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IFormatProvider.Class/cs/Provider.cs#2)]
 [!code-vb[System.IFormatProvider.Class#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IFormatProvider.Class/vb/Provider.vb#2)]  
  
 Wystąpienie `AcctNumberFormat` klasy można następnie przekazać jako argument do metody, która zapewnia formatowania lub analizowania usług. Na przykład poniższy kod przekazuje `AcctNumberFormat` klasy do <xref:System.String.Format%28System.IFormatProvider%2CSystem.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType> metody do wygenerowania liczby sformatowany konta 12 cyfr.  
  
 [!code-csharp[System.IFormatProvider.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IFormatProvider.Class/cs/Provider.cs#1)]
 [!code-vb[System.IFormatProvider.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IFormatProvider.Class/vb/Provider.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>