<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="Tuple`5.xml" source-language="en-US" target-language="pl-PL">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac52bd6fcdfbecc0ab95c64d6c8c2550070fd64052d.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">2bd6fcdfbecc0ab95c64d6c8c2550070fd64052d</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.0,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.5,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Tuple`5">
          <source>The type of the tuple's first component.</source>
          <target state="translated">Typ pierwszego składnika spójnej kolekcji.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Tuple`5">
          <source>The type of the tuple's second component.</source>
          <target state="translated">Typ drugiego składnika spójnej kolekcji.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Tuple`5">
          <source>The type of the tuple's third component.</source>
          <target state="translated">Typ trzeciego składnika spójnej kolekcji.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Tuple`5">
          <source>The type of the tuple's fourth component.</source>
          <target state="translated">Typ czwartego składnika spójnej kolekcji.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Tuple`5">
          <source>The type of the tuple's fifth component.</source>
          <target state="translated">Typ piątego składnika spójnej kolekcji.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="T:System.Tuple`5">
          <source>Represents a 5-tuple, or quintuple.</source>
          <target state="translated">Reprezentuje 5-elementowej lub pięciokrotnie.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Tuple`5">
          <source>A tuple is a data structure that has a specific number and sequence of values.</source>
          <target state="translated">Spójna kolekcja to struktura danych, która ma określoną liczbę i kolejność wartości.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Tuple`5">
          <source>The <ph id="ph1">&lt;xref:System.Tuple%605&gt;</ph> class represents a 5-tuple, or quintuple, which is a tuple that has five components.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Tuple%605&gt;</ph> Klasa reprezentuje krotka 5 lub quintuple, czyli krotka zawiera pięć składniki.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Tuple`5">
          <source>You can instantiate a <ph id="ph1">&lt;xref:System.Tuple%605&gt;</ph> object by calling either the <ph id="ph2">&lt;xref:System.Tuple%605.%23ctor%2A&gt;</ph> constructor or the static <ph id="ph3">&lt;xref:System.Tuple.Create%60%605%28%60%600%2C%60%601%2C%60%602%2C%60%603%2C%60%604%29?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">Można utworzyć wystąpienia <ph id="ph1">&lt;xref:System.Tuple%605&gt;</ph> obiektu, wywołując jedną <ph id="ph2">&lt;xref:System.Tuple%605.%23ctor%2A&gt;</ph> konstruktora lub statycznych <ph id="ph3">&lt;xref:System.Tuple.Create%60%605%28%60%600%2C%60%601%2C%60%602%2C%60%603%2C%60%604%29?displayProperty=nameWithType&gt;</ph> metody.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Tuple`5">
          <source>You can retrieve the value of the tuple's components by using the read-only <ph id="ph1">&lt;xref:System.Tuple%605.Item1%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Tuple%605.Item2%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Tuple%605.Item3%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Tuple%605.Item4%2A&gt;</ph>, and <ph id="ph5">&lt;xref:System.Tuple%605.Item5%2A&gt;</ph> instance properties.</source>
          <target state="translated">Wartość krotki składniki można pobrać przy użyciu tylko do odczytu <ph id="ph1">&lt;xref:System.Tuple%605.Item1%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Tuple%605.Item2%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Tuple%605.Item3%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Tuple%605.Item4%2A&gt;</ph>, i <ph id="ph5">&lt;xref:System.Tuple%605.Item5%2A&gt;</ph> wystąpienia właściwości.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Tuple`5">
          <source>Tuples are commonly used in four different ways:</source>
          <target state="translated">Spójne kolekcje są powszechnie wykorzystywane na cztery różne sposoby:</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Tuple`5">
          <source>To represent a single set of data.</source>
          <target state="translated">Reprezentowanie jednego zestawu danych.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Tuple`5">
          <source>For example, a tuple can represent a database record, and its components can represent individual fields of the record.</source>
          <target state="translated">Na przykład spójna kolekcja może reprezentować rekord bazy danych, a jej składniki mogą reprezentować poszczególne pola rekordu.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Tuple`5">
          <source>To provide easy access to, and manipulation of, a data set.</source>
          <target state="translated">Zapewnienie łatwego dostępu do zestawu danych i możliwości wykonywania w nim różnych operacji.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Tuple`5">
          <source>The following example defines an array of <ph id="ph1">&lt;xref:System.Tuple%605&gt;</ph> objects that contain the names of running backs in American football, the number of games in which they played, and the number of carries, total yards gained, and touchdowns scored during those games.</source>
          <target state="translated">W poniższym przykładzie zdefiniowano tablicę <ph id="ph1">&lt;xref:System.Tuple%605&gt;</ph> obiektów, które zawierają nazwy tworzy kopię uruchomiona w American football liczba gry, w których są odtwarzane, oraz numer wykonuje, łączna liczba metry uzyskane i liczbą przyłożeń oceniane podczas tych gier.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Tuple`5">
          <source>The array is passed to the <ph id="ph1">`ComputeStatistics`</ph> method, which calculates each running back's number of carries per game, average yards per game, average yards per carry, and average number of touchdowns per attempt.</source>
          <target state="translated">Tablica jest przekazywana do <ph id="ph1">`ComputeStatistics`</ph> metodę, która oblicza liczbę posiada na metry gier, średni na metry gier, średni na przeniesienie kopii każdego uruchomiona i średnia liczba liczbą przyłożeń na próby.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Tuple`5">
          <source>To return multiple values from a method without the use of <ph id="ph1">`out`</ph> parameters (in C#) or <ph id="ph2">`ByRef`</ph> parameters (in Visual Basic).</source>
          <target state="translated">Aby zwrócić wartości wielu z metody bez użycia <ph id="ph1">`out`</ph> parametrów (C#) lub <ph id="ph2">`ByRef`</ph> parametry (w języku Visual Basic).</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Tuple`5">
          <source>For example, the previous example returns its computed statistics, along with the name of the player, in an array of <ph id="ph1">&lt;xref:System.Tuple%605&gt;</ph> objects.</source>
          <target state="translated">Na przykład poprzednim przykładzie zwraca jego obliczona statystyki, wraz z nazwą odtwarzacza w tablicy <ph id="ph1">&lt;xref:System.Tuple%605&gt;</ph> obiektów.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Tuple`5">
          <source>To pass multiple values to a method through a single parameter.</source>
          <target state="translated">Przekazywanie wielu wartości do metody za pomocą jednego parametru.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Tuple`5">
          <source>For example, the <ph id="ph1">&lt;xref:System.Threading.Thread.Start%28System.Object%29?displayProperty=nameWithType&gt;</ph> method has a single parameter that lets you supply one value to the method that the thread executes at startup.</source>
          <target state="translated">Na przykład <ph id="ph1">&lt;xref:System.Threading.Thread.Start%28System.Object%29?displayProperty=nameWithType&gt;</ph> metoda ma jeden parametr, który pozwala na określanie jedną wartość do metody, która wykonuje wątek przy uruchamianiu.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Tuple`5">
          <source>If you supply a <ph id="ph1">&lt;xref:System.Tuple%605&gt;</ph> object as the method argument, you can supply the thread’s startup routine with five items of data.</source>
          <target state="translated">Jeśli podasz <ph id="ph1">&lt;xref:System.Tuple%605&gt;</ph> obiekt jako argument metody, możesz podać procedury uruchomienia wątku z pięciu elementów danych.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Tuple`5.#ctor(`0,`1,`2,`3,`4)">
          <source>The value of the tuple's first component.</source>
          <target state="translated">Wartość pierwszego składnika spójnej kolekcji.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Tuple`5.#ctor(`0,`1,`2,`3,`4)">
          <source>The value of the tuple's second component.</source>
          <target state="translated">Wartość drugiego składnika spójnej kolekcji.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Tuple`5.#ctor(`0,`1,`2,`3,`4)">
          <source>The value of the tuple's third component.</source>
          <target state="translated">Wartość trzeciego składnika spójnej kolekcji.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Tuple`5.#ctor(`0,`1,`2,`3,`4)">
          <source>The value of the tuple's fourth component</source>
          <target state="translated">Wartość czwartego składnika spójnej kolekcji.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Tuple`5.#ctor(`0,`1,`2,`3,`4)">
          <source>The value of the tuple's fifth component.</source>
          <target state="translated">Wartość piątego składnika spójnej kolekcji.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.Tuple`5.#ctor(`0,`1,`2,`3,`4)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Tuple`5" /&gt;</ph> class.</source>
          <target state="translated">Inicjuje nowe wystąpienie klasy <ph id="ph1">&lt;see cref="T:System.Tuple`5" /&gt;</ph> klasy.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`5.#ctor(`0,`1,`2,`3,`4)">
          <source>You can also use the static <ph id="ph1">&lt;xref:System.Tuple.Create%60%605%28%60%600%2C%60%601%2C%60%602%2C%60%603%2C%60%604%29?displayProperty=nameWithType&gt;</ph> method to instantiate a 5-tuple object without having to explicitly specify the types of its components.</source>
          <target state="translated">Można również użyć statycznych <ph id="ph1">&lt;xref:System.Tuple.Create%60%605%28%60%600%2C%60%601%2C%60%602%2C%60%603%2C%60%604%29?displayProperty=nameWithType&gt;</ph> metody do tworzenia wystąpienia obiektu 5-elementowej bez konieczności jawnego określania typów jego składniki.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`5.#ctor(`0,`1,`2,`3,`4)">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Tuple.Create%60%605%28%60%600%2C%60%601%2C%60%602%2C%60%603%2C%60%604%29?displayProperty=nameWithType&gt;</ph> method to instantiate a 5-tuple whose first component is of type <ph id="ph2">&lt;xref:System.String&gt;</ph> and its remaining four components are of type <ph id="ph3">&lt;xref:System.Int32&gt;</ph>.</source>
          <target state="translated">W poniższym przykładzie użyto <ph id="ph1">&lt;xref:System.Tuple.Create%60%605%28%60%600%2C%60%601%2C%60%602%2C%60%603%2C%60%604%29?displayProperty=nameWithType&gt;</ph> metody tworzenia wystąpienia których pierwszy składnik jest typu krotki 5 <ph id="ph2">&lt;xref:System.String&gt;</ph> i jego pozostałych czterech składników są typu <ph id="ph3">&lt;xref:System.Int32&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`5.#ctor(`0,`1,`2,`3,`4)">
          <source>This is equivalent to the following call to the <ph id="ph1">&lt;xref:System.Tuple%605.%23ctor%2A&gt;</ph> class constructor.</source>
          <target state="translated">Jest to równoważne następujące wywołanie do <ph id="ph1">&lt;xref:System.Tuple%605.%23ctor%2A&gt;</ph> konstruktora klasy.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Tuple`5.Equals(System.Object)">
          <source>The object to compare with this instance.</source>
          <target state="translated">Obiekt, który ma zostać porównany z tym wystąpieniem.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Tuple`5.Equals(System.Object)">
          <source>Returns a value that indicates whether the current <ph id="ph1">&lt;see cref="T:System.Tuple`5" /&gt;</ph> object is equal to a specified object.</source>
          <target state="translated">Zwraca wartość wskazującą, czy bieżący <ph id="ph1">&lt;see cref="T:System.Tuple`5" /&gt;</ph> obiekt jest taki sam jak określony obiekt.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Tuple`5.Equals(System.Object)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the current instance is equal to the specified object; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> Jeśli bieżące wystąpienie jest taki sam jak określony obiekt; w przeciwnym razie <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`5.Equals(System.Object)">
          <source>The <ph id="ph1">`obj`</ph> parameter is considered to be equal to the current instance under the following conditions:</source>
          <target state="translated"><ph id="ph1">`obj`</ph> Parametr jest uznawany za taki sam jak bieżące wystąpienie w następujących warunkach:</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`5.Equals(System.Object)">
          <source>It is a <ph id="ph1">&lt;xref:System.Tuple%605&gt;</ph> object.</source>
          <target state="translated">Jest <ph id="ph1">&lt;xref:System.Tuple%605&gt;</ph> obiektu.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`5.Equals(System.Object)">
          <source>Its five components are of the same types as the current instance.</source>
          <target state="translated">Jego pięć składniki mają ten sam typ jak bieżące wystąpienie.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`5.Equals(System.Object)">
          <source>Its five components are equal to those of the current instance.</source>
          <target state="translated">Jego pięć składniki są takie same jak bieżące wystąpienie.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`5.Equals(System.Object)">
          <source>Equality is determined by the default object equality comparer for each component.</source>
          <target state="translated">Równość jest określana przez domyślny moduł porównywania równości obiektów dla każdego składnika.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`5.Equals(System.Object)">
          <source>The following example defines an array of 5-tuple objects that contain data about the temperatures of patients in two test groups.</source>
          <target state="translated">W poniższym przykładzie zdefiniowano tablicę obiektów 5-elementowej, które zawierają dane dotyczące temperatury pacjentów w dwóch grup testowych.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`5.Equals(System.Object)">
          <source>The first component of the array provides the number of the test group, and the second through fifth components provide the temperatures of a patient at hourly intervals.</source>
          <target state="translated">Pierwszy składnik tablicy zapewnia numer grupy testowej i drugiego do składników piątej udostępniać temperatury pacjenta co godzinę.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`5.Equals(System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.Tuple%605.Equals%28System.Object%29?displayProperty=nameWithType&gt;</ph> method is called to compare every <ph id="ph2">&lt;xref:System.Tuple%605&gt;</ph> object with every other <ph id="ph3">&lt;xref:System.Tuple%605&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Tuple%605.Equals%28System.Object%29?displayProperty=nameWithType&gt;</ph> Metoda jest wywoływana w celu porównania co <ph id="ph2">&lt;xref:System.Tuple%605&gt;</ph> obiektu z każdym innym <ph id="ph3">&lt;xref:System.Tuple%605&gt;</ph> obiektu.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`5.Equals(System.Object)">
          <source>The output illustrates that the <ph id="ph1">&lt;xref:System.Tuple%605.Equals%2A&gt;</ph> method returns <ph id="ph2">`true`</ph> only when all five components of the <ph id="ph3">&lt;xref:System.Tuple%605&gt;</ph> objects have equal values.</source>
          <target state="translated">Przedstawia dane wyjściowe, które <ph id="ph1">&lt;xref:System.Tuple%605.Equals%2A&gt;</ph> metoda zwraca <ph id="ph2">`true`</ph> tylko wtedy, gdy wszystkie składniki pięć <ph id="ph3">&lt;xref:System.Tuple%605&gt;</ph> obiekty mają takie same wartości.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Tuple`5.GetHashCode">
          <source>Returns the hash code for the current <ph id="ph1">&lt;see cref="T:System.Tuple`5" /&gt;</ph> object.</source>
          <target state="translated">Zwraca wartość skrótu dla bieżącego <ph id="ph1">&lt;see cref="T:System.Tuple`5" /&gt;</ph> obiektu.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.Tuple`5.GetHashCode">
          <source>A 32-bit signed integer hash code.</source>
          <target state="translated">Kod skrótu 32-bitowej liczby całkowitej ze znakiem.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="P:System.Tuple`5.Item1">
          <source>Gets the value of the current <ph id="ph1">&lt;see cref="T:System.Tuple`5" /&gt;</ph> object's first component.</source>
          <target state="translated">Pobiera wartość bieżącego <ph id="ph1">&lt;see cref="T:System.Tuple`5" /&gt;</ph> pierwszy składnik obiektu.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Tuple`5.Item1">
          <source>The value of the current <ph id="ph1">&lt;see cref="T:System.Tuple`5" /&gt;</ph> object's first component.</source>
          <target state="translated">Wartość bieżącego <ph id="ph1">&lt;see cref="T:System.Tuple`5" /&gt;</ph> pierwszy składnik obiektu.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Tuple`5.Item1">
          <source>You can dynamically determine the type of the <ph id="ph1">&lt;xref:System.Tuple%605.Item1%2A&gt;</ph> component in one of two ways:</source>
          <target state="translated">Dynamiczne można określić typu <ph id="ph1">&lt;xref:System.Tuple%605.Item1%2A&gt;</ph> składnika w jeden z dwóch sposobów:</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Tuple`5.Item1">
          <source>By calling the <ph id="ph1">`GetType`</ph> method on the value that is returned by the <ph id="ph2">&lt;xref:System.Tuple%605.Item1%2A&gt;</ph> property.</source>
          <target state="translated">Wywołując <ph id="ph1">`GetType`</ph> metody na wartość, która jest zwracana w wyniku <ph id="ph2">&lt;xref:System.Tuple%605.Item1%2A&gt;</ph> właściwości.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Tuple`5.Item1">
          <source>By retrieving the <ph id="ph1">&lt;xref:System.Type&gt;</ph> object that represents the <ph id="ph2">&lt;xref:System.Tuple%605&gt;</ph> object, and retrieving the first element from the array that is returned by its <ph id="ph3">&lt;xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">Pobierając <ph id="ph1">&lt;xref:System.Type&gt;</ph> obiekt, który reprezentuje <ph id="ph2">&lt;xref:System.Tuple%605&gt;</ph> obiektu i pobierania pierwszego elementu z tablicy, która jest zwracana przez jego <ph id="ph3">&lt;xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType&gt;</ph> metody.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Tuple`5.Item1">
          <source>The following example defines an array of <ph id="ph1">&lt;xref:System.Tuple%605&gt;</ph> objects whose components contain the name of a state in the United States, its population in 1990 and 2000, its population change in this 10-year period, and the percentage change in its population.</source>
          <target state="translated">W poniższym przykładzie zdefiniowano tablicę <ph id="ph1">&lt;xref:System.Tuple%605&gt;</ph> obiektów, których elementy zawierają nazwę stanu w Stanach Zjednoczonych, jego wypełniania 1990 i 2000 populacji zmian w tym okresie 10 lat i wartość procentową zmiany w jego wypełniania.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Tuple`5.Item1">
          <source>It then iterates through the array and displays the value of each component in a tuple.</source>
          <target state="translated">Następnie dokonuje iteracji tablicy i wyświetla wartość każdego składnika w krotce.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="P:System.Tuple`5.Item2">
          <source>Gets the value of the current <ph id="ph1">&lt;see cref="T:System.Tuple`5" /&gt;</ph> object's second component.</source>
          <target state="translated">Pobiera wartość bieżącego <ph id="ph1">&lt;see cref="T:System.Tuple`5" /&gt;</ph> drugi składnik obiektu.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Tuple`5.Item2">
          <source>The value of the current <ph id="ph1">&lt;see cref="T:System.Tuple`5" /&gt;</ph> object's second component.</source>
          <target state="translated">Wartość bieżącego <ph id="ph1">&lt;see cref="T:System.Tuple`5" /&gt;</ph> drugi składnik obiektu.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Tuple`5.Item2">
          <source>You can dynamically determine the type of the <ph id="ph1">&lt;xref:System.Tuple%604.Item2%2A&gt;</ph> component in one of two ways:</source>
          <target state="translated">Dynamiczne można określić typu <ph id="ph1">&lt;xref:System.Tuple%604.Item2%2A&gt;</ph> składnika w jeden z dwóch sposobów:</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Tuple`5.Item2">
          <source>By calling the <ph id="ph1">`GetType`</ph> method on the value that is returned by the <ph id="ph2">&lt;xref:System.Tuple%604.Item2%2A&gt;</ph> property.</source>
          <target state="translated">Wywołując <ph id="ph1">`GetType`</ph> metody na wartość, która jest zwracana w wyniku <ph id="ph2">&lt;xref:System.Tuple%604.Item2%2A&gt;</ph> właściwości.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Tuple`5.Item2">
          <source>By retrieving the <ph id="ph1">&lt;xref:System.Type&gt;</ph> object that represents the <ph id="ph2">&lt;xref:System.Tuple%604&gt;</ph> object, and retrieving the second element from the array that is returned by its <ph id="ph3">&lt;xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">Pobierając <ph id="ph1">&lt;xref:System.Type&gt;</ph> obiekt, który reprezentuje <ph id="ph2">&lt;xref:System.Tuple%604&gt;</ph> obiektu i pobierania drugiego elementu z tablicy, która jest zwracana przez jego <ph id="ph3">&lt;xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType&gt;</ph> metody.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Tuple`5.Item2">
          <source>The following example defines an array of <ph id="ph1">&lt;xref:System.Tuple%605&gt;</ph> objects whose components contain the name of a state in the United States, its population in 1990 and 2000, its population change in this 10-year period, and the percentage change in its population.</source>
          <target state="translated">W poniższym przykładzie zdefiniowano tablicę <ph id="ph1">&lt;xref:System.Tuple%605&gt;</ph> obiektów, których elementy zawierają nazwę stanu w Stanach Zjednoczonych, jego wypełniania 1990 i 2000 populacji zmian w tym okresie 10 lat i wartość procentową zmiany w jego wypełniania.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Tuple`5.Item2">
          <source>It then iterates through the array and displays the value of each component in a tuple.</source>
          <target state="translated">Następnie dokonuje iteracji tablicy i wyświetla wartość każdego składnika w krotce.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="P:System.Tuple`5.Item3">
          <source>Gets the value of the current <ph id="ph1">&lt;see cref="T:System.Tuple`5" /&gt;</ph> object's third component.</source>
          <target state="translated">Pobiera wartość bieżącego <ph id="ph1">&lt;see cref="T:System.Tuple`5" /&gt;</ph> trzecim składnikiem obiektu.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Tuple`5.Item3">
          <source>The value of the current <ph id="ph1">&lt;see cref="T:System.Tuple`5" /&gt;</ph> object's third component.</source>
          <target state="translated">Wartość bieżącego <ph id="ph1">&lt;see cref="T:System.Tuple`5" /&gt;</ph> trzecim składnikiem obiektu.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Tuple`5.Item3">
          <source>You can dynamically determine the type of the <ph id="ph1">&lt;xref:System.Tuple%604.Item2%2A&gt;</ph> component in one of two ways:</source>
          <target state="translated">Dynamiczne można określić typu <ph id="ph1">&lt;xref:System.Tuple%604.Item2%2A&gt;</ph> składnika w jeden z dwóch sposobów:</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Tuple`5.Item3">
          <source>By calling the <ph id="ph1">`GetType`</ph> method on the value that is returned by the <ph id="ph2">&lt;xref:System.Tuple%604.Item2%2A&gt;</ph> property.</source>
          <target state="translated">Wywołując <ph id="ph1">`GetType`</ph> metody na wartość, która jest zwracana w wyniku <ph id="ph2">&lt;xref:System.Tuple%604.Item2%2A&gt;</ph> właściwości.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Tuple`5.Item3">
          <source>By retrieving the <ph id="ph1">&lt;xref:System.Type&gt;</ph> object that represents the <ph id="ph2">&lt;xref:System.Tuple%604&gt;</ph> object, and retrieving the second element from the array that is returned by its <ph id="ph3">&lt;xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">Pobierając <ph id="ph1">&lt;xref:System.Type&gt;</ph> obiekt, który reprezentuje <ph id="ph2">&lt;xref:System.Tuple%604&gt;</ph> obiektu i pobierania drugiego elementu z tablicy, która jest zwracana przez jego <ph id="ph3">&lt;xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType&gt;</ph> metody.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Tuple`5.Item3">
          <source>The following example defines an array of <ph id="ph1">&lt;xref:System.Tuple%605&gt;</ph> objects whose components contain the name of a state in the United States, its population in 1990 and 2000, its population change in this 10-year period, and the percentage change in its population.</source>
          <target state="translated">W poniższym przykładzie zdefiniowano tablicę <ph id="ph1">&lt;xref:System.Tuple%605&gt;</ph> obiektów, których elementy zawierają nazwę stanu w Stanach Zjednoczonych, jego wypełniania 1990 i 2000 populacji zmian w tym okresie 10 lat i wartość procentową zmiany w jego wypełniania.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Tuple`5.Item3">
          <source>It then iterates through the array and displays the value of each component in a tuple.</source>
          <target state="translated">Następnie dokonuje iteracji tablicy i wyświetla wartość każdego składnika w krotce.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="P:System.Tuple`5.Item4">
          <source>Gets the value of the current <ph id="ph1">&lt;see cref="T:System.Tuple`5" /&gt;</ph> object's fourth component.</source>
          <target state="translated">Pobiera wartość bieżącego <ph id="ph1">&lt;see cref="T:System.Tuple`5" /&gt;</ph> czwartym składnikiem obiektu.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Tuple`5.Item4">
          <source>The value of the current <ph id="ph1">&lt;see cref="T:System.Tuple`5" /&gt;</ph> object's fourth component.</source>
          <target state="translated">Wartość bieżącego <ph id="ph1">&lt;see cref="T:System.Tuple`5" /&gt;</ph> czwartym składnikiem obiektu.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Tuple`5.Item4">
          <source>You can dynamically determine the type of the <ph id="ph1">&lt;xref:System.Tuple%604.Item2%2A&gt;</ph> component in one of two ways:</source>
          <target state="translated">Dynamiczne można określić typu <ph id="ph1">&lt;xref:System.Tuple%604.Item2%2A&gt;</ph> składnika w jeden z dwóch sposobów:</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Tuple`5.Item4">
          <source>By calling the <ph id="ph1">`GetType`</ph> method on the value that is returned by the <ph id="ph2">&lt;xref:System.Tuple%604.Item2%2A&gt;</ph> property.</source>
          <target state="translated">Wywołując <ph id="ph1">`GetType`</ph> metody na wartość, która jest zwracana w wyniku <ph id="ph2">&lt;xref:System.Tuple%604.Item2%2A&gt;</ph> właściwości.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Tuple`5.Item4">
          <source>By retrieving the <ph id="ph1">&lt;xref:System.Type&gt;</ph> object that represents the <ph id="ph2">&lt;xref:System.Tuple%604&gt;</ph> object, and retrieving the second element from the array that is returned by its <ph id="ph3">&lt;xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">Pobierając <ph id="ph1">&lt;xref:System.Type&gt;</ph> obiekt, który reprezentuje <ph id="ph2">&lt;xref:System.Tuple%604&gt;</ph> obiektu i pobierania drugiego elementu z tablicy, która jest zwracana przez jego <ph id="ph3">&lt;xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType&gt;</ph> metody.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Tuple`5.Item4">
          <source>The following example defines an array of <ph id="ph1">&lt;xref:System.Tuple%605&gt;</ph> objects whose components contain the name of a state in the United States, its population in 1990 and 2000, its population change in this 10-year period, and the percentage change in its population.</source>
          <target state="translated">W poniższym przykładzie zdefiniowano tablicę <ph id="ph1">&lt;xref:System.Tuple%605&gt;</ph> obiektów, których elementy zawierają nazwę stanu w Stanach Zjednoczonych, jego wypełniania 1990 i 2000 populacji zmian w tym okresie 10 lat i wartość procentową zmiany w jego wypełniania.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Tuple`5.Item4">
          <source>It then iterates through the array and displays the value of each component in a tuple.</source>
          <target state="translated">Następnie dokonuje iteracji tablicy i wyświetla wartość każdego składnika w krotce.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="P:System.Tuple`5.Item5">
          <source>Gets the value of the current <ph id="ph1">&lt;see cref="T:System.Tuple`5" /&gt;</ph> object's fifth component.</source>
          <target state="translated">Pobiera wartość bieżącego <ph id="ph1">&lt;see cref="T:System.Tuple`5" /&gt;</ph> piątym składnikiem obiektu.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Tuple`5.Item5">
          <source>The value of the current <ph id="ph1">&lt;see cref="T:System.Tuple`5" /&gt;</ph> object's fifth component.</source>
          <target state="translated">Wartość bieżącego <ph id="ph1">&lt;see cref="T:System.Tuple`5" /&gt;</ph> piątym składnikiem obiektu.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Tuple`5.Item5">
          <source>You can dynamically determine the type of the <ph id="ph1">&lt;xref:System.Tuple%604.Item2%2A&gt;</ph> component in one of two ways:</source>
          <target state="translated">Dynamiczne można określić typu <ph id="ph1">&lt;xref:System.Tuple%604.Item2%2A&gt;</ph> składnika w jeden z dwóch sposobów:</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Tuple`5.Item5">
          <source>By calling the <ph id="ph1">`GetType`</ph> method on the value that is returned by the <ph id="ph2">&lt;xref:System.Tuple%604.Item2%2A&gt;</ph> property.</source>
          <target state="translated">Wywołując <ph id="ph1">`GetType`</ph> metody na wartość, która jest zwracana w wyniku <ph id="ph2">&lt;xref:System.Tuple%604.Item2%2A&gt;</ph> właściwości.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Tuple`5.Item5">
          <source>By retrieving the <ph id="ph1">&lt;xref:System.Type&gt;</ph> object that represents the <ph id="ph2">&lt;xref:System.Tuple%604&gt;</ph> object, and retrieving the second element from the array that is returned by its <ph id="ph3">&lt;xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">Pobierając <ph id="ph1">&lt;xref:System.Type&gt;</ph> obiekt, który reprezentuje <ph id="ph2">&lt;xref:System.Tuple%604&gt;</ph> obiektu i pobierania drugiego elementu z tablicy, która jest zwracana przez jego <ph id="ph3">&lt;xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType&gt;</ph> metody.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Tuple`5.Item5">
          <source>The following example defines an array of <ph id="ph1">&lt;xref:System.Tuple%605&gt;</ph> objects whose components contain the name of a state in the United Dates, its population in 1990 and 2000, its population change in this 10-year period, and the percentage change in its population.</source>
          <target state="translated">W poniższym przykładzie zdefiniowano tablicę <ph id="ph1">&lt;xref:System.Tuple%605&gt;</ph> obiektów, których elementy zawierają nazwę stanu w Zjednoczone daty, jego wypełniania 1990 i 2000 populacji zmian w tym okresie 10 lat i wartość procentową zmiany w jego wypełniania.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Tuple`5.Item5">
          <source>It then iterates through the array and displays the value of each component in a tuple.</source>
          <target state="translated">Następnie dokonuje iteracji tablicy i wyświetla wartość każdego składnika w krotce.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="M:System.Tuple`5.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
          <source>An object to compare with the current instance.</source>
          <target state="translated">Obiekt, który ma zostać porównany z bieżącym wystąpieniem.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="M:System.Tuple`5.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
          <source>An object that provides custom rules for comparison.</source>
          <target state="translated">Obiekt dostarczający niestandardowe reguły na potrzeby porównania.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="M:System.Tuple`5.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
          <source>Compares the current <ph id="ph1">&lt;see cref="T:System.Tuple`5" /&gt;</ph> object to a specified object by using a specified comparer and returns an integer that indicates whether the current object is before, after, or in the same position as the specified object in the sort order.</source>
          <target state="translated">Porównuje bieżący <ph id="ph1">&lt;see cref="T:System.Tuple`5" /&gt;</ph> obiektu określony obiekt przy użyciu określona funkcja porównująca i zwraca liczbę całkowitą, która wskazuje, czy bieżący obiekt jest przed, po lub w tym samym miejscu określony obiekt w kolejności sortowania.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="M:System.Tuple`5.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
          <source>A signed integer that indicates the relative position of this instance and <ph id="ph1">&lt;paramref name="other" /&gt;</ph> in the sort order, as shown in the following table.</source>
          <target state="translated">Całkowita wskazująca pozycję tego wystąpienia i <ph id="ph1">&lt;paramref name="other" /&gt;</ph> w porządku sortowania, jak pokazano w poniższej tabeli.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="M:System.Tuple`5.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
          <source><ph id="ph1">&lt;list type="table"&gt;</ph><ph id="ph2">&lt;listheader&gt;</ph><ph id="ph3">&lt;term&gt;</ph> Value</source>
          <target state="translated"><ph id="ph1">&lt;list type="table"&gt;</ph><ph id="ph2">&lt;listheader&gt;</ph><ph id="ph3">&lt;term&gt;</ph> Wartość</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="M:System.Tuple`5.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Description</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Opis elementu</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" uid="M:System.Tuple`5.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/listheader&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> A negative integer</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/listheader&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Ujemna liczba całkowita</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" uid="M:System.Tuple`5.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> This instance precedes <ph id="ph3">&lt;paramref name="other" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> To wystąpienie poprzedza <ph id="ph3">&lt;paramref name="other" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="M:System.Tuple`5.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Zero</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Zero</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" uid="M:System.Tuple`5.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> This instance and <ph id="ph3">&lt;paramref name="other" /&gt;</ph> have the same position in the sort order.</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> To wystąpienie i <ph id="ph3">&lt;paramref name="other" /&gt;</ph> mieć to samo położenie w kolejności sortowania.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" uid="M:System.Tuple`5.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> A positive integer</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Dodatnia liczba całkowita</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="M:System.Tuple`5.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> This instance follows <ph id="ph3">&lt;paramref name="other" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Następuje to wystąpienie <ph id="ph3">&lt;paramref name="other" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`5.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">Ten element jest jawną implementacją członków.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`5.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Tuple%605&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Collections.IStructuralComparable&gt;</ph> interface.</source>
          <target state="translated">Można go używać tylko wtedy, gdy <ph id="ph1">&lt;xref:System.Tuple%605&gt;</ph> wystąpienia jest rzutowane na <ph id="ph2">&lt;xref:System.Collections.IStructuralComparable&gt;</ph> interfejsu.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`5.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
          <source>Although this method can be called directly, it is most commonly called by collection-sorting methods that include <ph id="ph1">&lt;xref:System.Collections.IComparer&gt;</ph> parameters to order the members of a collection.</source>
          <target state="translated">Mimo że tę metodę można wywołać bezpośrednio, najczęściej jest wywoływana przez sortowanie kolekcji metod, które obejmują <ph id="ph1">&lt;xref:System.Collections.IComparer&gt;</ph> parametry porządkowania elementów członkowskich kolekcji.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`5.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
          <source>For example, it is called by the <ph id="ph1">&lt;xref:System.Array.Sort%28System.Array%2CSystem.Collections.IComparer%29?displayProperty=nameWithType&gt;</ph> method and the <ph id="ph2">&lt;xref:System.Collections.SortedList.Add%2A&gt;</ph> method of a <ph id="ph3">&lt;xref:System.Collections.SortedList&gt;</ph> object that is instantiated by using the <ph id="ph4">&lt;xref:System.Collections.SortedList.%23ctor%28System.Collections.IComparer%29?displayProperty=nameWithType&gt;</ph> constructor.</source>
          <target state="translated">Na przykład jest wywoływana przez <ph id="ph1">&lt;xref:System.Array.Sort%28System.Array%2CSystem.Collections.IComparer%29?displayProperty=nameWithType&gt;</ph> — metoda i <ph id="ph2">&lt;xref:System.Collections.SortedList.Add%2A&gt;</ph> metody <ph id="ph3">&lt;xref:System.Collections.SortedList&gt;</ph> obiekt, który zostanie uruchomiony przy użyciu <ph id="ph4">&lt;xref:System.Collections.SortedList.%23ctor%28System.Collections.IComparer%29?displayProperty=nameWithType&gt;</ph> konstruktora.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`5.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
          <source>The <ph id="ph1">&lt;xref:System.Tuple%605.System%23Collections%23IStructuralComparable%23CompareTo%2A&gt;</ph> method is intended for use in sorting operations.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Tuple%605.System%23Collections%23IStructuralComparable%23CompareTo%2A&gt;</ph> Metoda jest przeznaczona do użycia w operacji sortowania.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`5.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
          <source>It should not be used when the primary purpose of a comparison is to determine whether two objects are equal.</source>
          <target state="translated">Nie należy jej używać, gdy głównym celem porównania jest ustalenie, czy dwa obiekty są sobie równe.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`5.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
          <source>To determine whether two objects are equal, call the <ph id="ph1">&lt;xref:System.Tuple%605.System%23Collections%23IStructuralEquatable%23Equals%28System.Object%2CSystem.Collections.IEqualityComparer%29&gt;</ph> method.</source>
          <target state="translated">Aby ustalić, czy dwa obiekty są takie same, należy wywołać <ph id="ph1">&lt;xref:System.Tuple%605.System%23Collections%23IStructuralEquatable%23Equals%28System.Object%2CSystem.Collections.IEqualityComparer%29&gt;</ph> metody.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`5.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
          <source>The following example creates an array of <ph id="ph1">&lt;xref:System.Tuple%605&gt;</ph> objects that contain career statistical data for running backs in American professional football.</source>
          <target state="translated">Poniższy przykład tworzy tablicę <ph id="ph1">&lt;xref:System.Tuple%605&gt;</ph> obiektów, które zawierają dane statystyczne zawodowych tworzy kopię uruchomiona w American professional football.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`5.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
          <source>The 5-tuple's components consist of the player's name, the number of games in which he played, the number of carries or attempts, the total number of yards gained, and the number of touchdowns scored.</source>
          <target state="translated">Składniki krotka 5 składają się z nazwy odtwarzacza, liczba gry, w którym on odtwarzane, liczba posiada lub prób, liczba metry uzyskane, a liczba liczbą przyłożeń.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`5.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
          <source>The example displays the components of each tuple in the array in unsorted order, sorts the array, and then calls <ph id="ph1">&lt;xref:System.Tuple%605.ToString%2A&gt;</ph> to display each tuple in sorted order.</source>
          <target state="translated">Przykład wyświetla składniki każda krotka w tablicy w kolejności nieposortowane sortuje tablicy, a następnie wywołuje <ph id="ph1">&lt;xref:System.Tuple%605.ToString%2A&gt;</ph> Aby wyświetlić poszczególne krotki posortowane.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`5.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
          <source>To sort the array, the example defines a generic <ph id="ph1">`YardsGained`</ph> class that implements the <ph id="ph2">&lt;xref:System.Collections.IComparer&gt;</ph> interface and sorts the <ph id="ph3">&lt;xref:System.Tuple%605&gt;</ph> objects in descending order by the value of their fourth component (yards gained) rather than by their first component.</source>
          <target state="translated">Aby posortować tablicy, w przykładzie zdefiniowano ogólnego <ph id="ph1">`YardsGained`</ph> klasa implementująca <ph id="ph2">&lt;xref:System.Collections.IComparer&gt;</ph> interfejsu i sortowanie <ph id="ph3">&lt;xref:System.Tuple%605&gt;</ph> obiektów w kolejności malejącej, wartość ich czwartym składnikiem (metry zdobytych), a nie ich pierwszym składnikiem.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`5.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
          <source>Note that the example does not directly call the <ph id="ph1">&lt;xref:System.Tuple%605.System%23Collections%23IStructuralComparable%23CompareTo%2A&gt;</ph> method.</source>
          <target state="translated">Należy pamiętać, że przykładzie nie mogą bezpośrednio wywoływać <ph id="ph1">&lt;xref:System.Tuple%605.System%23Collections%23IStructuralComparable%23CompareTo%2A&gt;</ph> metody.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`5.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
          <source>This method is called implicitly by the <ph id="ph1">&lt;xref:System.Array.Sort%28System.Array%2CSystem.Collections.IComparer%29?displayProperty=nameWithType&gt;</ph> method for each element in the array.</source>
          <target state="translated">Ta metoda jest wywoływana przez niejawnie <ph id="ph1">&lt;xref:System.Array.Sort%28System.Array%2CSystem.Collections.IComparer%29?displayProperty=nameWithType&gt;</ph> metody dla każdego elementu w tablicy.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="M:System.Tuple`5.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
          <source><ph id="ph1">&lt;paramref name="other" /&gt;</ph> is not a <ph id="ph2">&lt;see cref="T:System.Tuple`5" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="other" /&gt;</ph> nie jest <ph id="ph2">&lt;see cref="T:System.Tuple`5" /&gt;</ph> obiektu.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" uid="M:System.Tuple`5.System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)">
          <source>The object to compare with this instance.</source>
          <target state="translated">Obiekt, który ma zostać porównany z tym wystąpieniem.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" uid="M:System.Tuple`5.System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)">
          <source>An object that defines the method to use to evaluate whether the two objects are equal.</source>
          <target state="translated">Obiekt definiujący metodę służącą ocenie, czy dwa obiekty są sobie równe.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" uid="M:System.Tuple`5.System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)">
          <source>Returns a value that indicates whether the current <ph id="ph1">&lt;see cref="T:System.Tuple`5" /&gt;</ph> object is equal to a specified object based on a specified comparison method.</source>
          <target state="translated">Zwraca wartość wskazującą, czy bieżący <ph id="ph1">&lt;see cref="T:System.Tuple`5" /&gt;</ph> obiekt jest taki sam jak określony obiekt na podstawie metody porównania określony.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" uid="M:System.Tuple`5.System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the current instance is equal to the specified object; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> Jeśli bieżące wystąpienie jest taki sam jak określony obiekt; w przeciwnym razie <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`5.System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">Ten element jest jawną implementacją członków.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`5.System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Tuple%605&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Collections.IStructuralEquatable&gt;</ph> interface.</source>
          <target state="translated">Można go używać tylko wtedy, gdy <ph id="ph1">&lt;xref:System.Tuple%605&gt;</ph> wystąpienia jest rzutowane na <ph id="ph2">&lt;xref:System.Collections.IStructuralEquatable&gt;</ph> interfejsu.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`5.System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)">
          <source>The <ph id="ph1">&lt;xref:System.Collections.IEqualityComparer.Equals%2A?displayProperty=nameWithType&gt;</ph> implementation is called only if <ph id="ph2">`other`</ph> is not <ph id="ph3">`null`</ph>, and if it can be successfully cast (in C#) or converted (in Visual Basic) to a <ph id="ph4">&lt;xref:System.Tuple%605&gt;</ph> object whose components are of the same types as the current instance.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.IEqualityComparer.Equals%2A?displayProperty=nameWithType&gt;</ph> Implementacji jest wywoływana tylko wtedy, gdy <ph id="ph2">`other`</ph> nie jest <ph id="ph3">`null`</ph>, jeśli można pomyślnie rzutowanie (C#) i przekonwertować (w języku Visual Basic) <ph id="ph4">&lt;xref:System.Tuple%605&gt;</ph> obiektów, których elementy mają ten sam typ jak bieżące wystąpienie.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`5.System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)">
          <source>The <ph id="ph1">&lt;xref:System.Tuple%605.System%23Collections%23IStructuralEquatable%23Equals%28System.Object%2CSystem.Collections.IEqualityComparer%29&gt;</ph> method first passes the <ph id="ph2">&lt;xref:System.Tuple%605.Item1%2A&gt;</ph> values of the <ph id="ph3">&lt;xref:System.Tuple%605&gt;</ph> objects to be compared to the <ph id="ph4">&lt;xref:System.Collections.IEqualityComparer.Equals%2A?displayProperty=nameWithType&gt;</ph> implementation.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Tuple%605.System%23Collections%23IStructuralEquatable%23Equals%28System.Object%2CSystem.Collections.IEqualityComparer%29&gt;</ph> Metoda przekazuje pierwszy <ph id="ph2">&lt;xref:System.Tuple%605.Item1%2A&gt;</ph> wartości <ph id="ph3">&lt;xref:System.Tuple%605&gt;</ph> obiekty do porównania z <ph id="ph4">&lt;xref:System.Collections.IEqualityComparer.Equals%2A?displayProperty=nameWithType&gt;</ph> implementacji.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`5.System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)">
          <source>If this method call returns <ph id="ph1">`true`</ph>, the method is called again and passed the <ph id="ph2">&lt;xref:System.Tuple%605.Item2%2A&gt;</ph> values of the two <ph id="ph3">&lt;xref:System.Tuple%605&gt;</ph> objects.</source>
          <target state="translated">Jeśli wywołanie tej metody zwraca <ph id="ph1">`true`</ph>, metoda jest wywoływana ponownie i przekazany <ph id="ph2">&lt;xref:System.Tuple%605.Item2%2A&gt;</ph> wartości dwa <ph id="ph3">&lt;xref:System.Tuple%605&gt;</ph> obiektów.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`5.System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)">
          <source>This continues until the method call returns <ph id="ph1">`false`</ph> when it compares a specific pair of <ph id="ph2">`Item`</ph> values, or the two <ph id="ph3">&lt;xref:System.Tuple%605.Item5%2A&gt;</ph> values are passed to the method.</source>
          <target state="translated">Ten proces jest kontynuowany do momentu wywołania metody, które zwraca <ph id="ph1">`false`</ph> podczas porównywania dwoma określonymi <ph id="ph2">`Item`</ph> wartości lub dwa <ph id="ph3">&lt;xref:System.Tuple%605.Item5%2A&gt;</ph> wartości są przekazywane do metody.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`5.System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)">
          <source>The following example defines a <ph id="ph1">`DoubleComparer`</ph> class that implements the <ph id="ph2">&lt;xref:System.Collections.IEqualityComparer&gt;</ph> interface.</source>
          <target state="translated">W poniższym przykładzie zdefiniowano <ph id="ph1">`DoubleComparer`</ph> klasa implementująca <ph id="ph2">&lt;xref:System.Collections.IEqualityComparer&gt;</ph> interfejsu.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`5.System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)">
          <source>The example instantiates two <ph id="ph1">&lt;xref:System.Tuple%605&gt;</ph> objects by using a random number generator to populate their second through fifth components, casts the first instance to an <ph id="ph2">&lt;xref:System.Collections.IStructuralEquatable&gt;</ph> interface, and then uses a <ph id="ph3">`DoubleComparer`</ph> object to test the two <ph id="ph4">&lt;xref:System.Tuple%605&gt;</ph> objects for approximate equality.</source>
          <target state="translated">Przykład tworzy dwa <ph id="ph1">&lt;xref:System.Tuple%605&gt;</ph> obiektów za pomocą generatora liczb losowych do wypełnienia ich drugiego do piątego składniki rzutuje przede wszystkim <ph id="ph2">&lt;xref:System.Collections.IStructuralEquatable&gt;</ph> interfejs, a następnie używa <ph id="ph3">`DoubleComparer`</ph> obiektu do testu dwa <ph id="ph4">&lt;xref:System.Tuple%605&gt;</ph>obiektów przybliżonej pod kątem równości.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" uid="M:System.Tuple`5.System#Collections#IStructuralEquatable#GetHashCode(System.Collections.IEqualityComparer)">
          <source>An object whose <ph id="ph1">&lt;see cref="M:System.Collections.IEqualityComparer.GetHashCode(System.Object)" /&gt;</ph> method calculates the hash code of the current <ph id="ph2">&lt;see cref="T:System.Tuple`5" /&gt;</ph> object.</source>
          <target state="translated">Obiekt których <ph id="ph1">&lt;see cref="M:System.Collections.IEqualityComparer.GetHashCode(System.Object)" /&gt;</ph> metody oblicza wartość skrótu bieżącego <ph id="ph2">&lt;see cref="T:System.Tuple`5" /&gt;</ph> obiektu.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" uid="M:System.Tuple`5.System#Collections#IStructuralEquatable#GetHashCode(System.Collections.IEqualityComparer)">
          <source>Calculates the hash code for the current <ph id="ph1">&lt;see cref="T:System.Tuple`5" /&gt;</ph> object by using a specified computation method.</source>
          <target state="translated">Oblicza wartość skrótu dla bieżącego <ph id="ph1">&lt;see cref="T:System.Tuple`5" /&gt;</ph> obiektu za pomocą metody określonej obliczeń.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" uid="M:System.Tuple`5.System#Collections#IStructuralEquatable#GetHashCode(System.Collections.IEqualityComparer)">
          <source>A 32-bit signed integer hash code.</source>
          <target state="translated">Kod skrótu 32-bitowej liczby całkowitej ze znakiem.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`5.System#Collections#IStructuralEquatable#GetHashCode(System.Collections.IEqualityComparer)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">Ten element jest jawną implementacją członków.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`5.System#Collections#IStructuralEquatable#GetHashCode(System.Collections.IEqualityComparer)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Tuple%605&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Collections.IStructuralEquatable&gt;</ph> interface.</source>
          <target state="translated">Można go używać tylko wtedy, gdy <ph id="ph1">&lt;xref:System.Tuple%605&gt;</ph> wystąpienia jest rzutowane na <ph id="ph2">&lt;xref:System.Collections.IStructuralEquatable&gt;</ph> interfejsu.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`5.System#Collections#IStructuralEquatable#GetHashCode(System.Collections.IEqualityComparer)">
          <source>The method simply wraps a call to the <ph id="ph1">`comparer`</ph> object's <ph id="ph2">&lt;xref:System.Collections.IEqualityComparer.GetHashCode%2A?displayProperty=nameWithType&gt;</ph> implementation.</source>
          <target state="translated">Metoda opakowuje po prostu wywołanie <ph id="ph1">`comparer`</ph> obiektu <ph id="ph2">&lt;xref:System.Collections.IEqualityComparer.GetHashCode%2A?displayProperty=nameWithType&gt;</ph> implementacji.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`5.System#Collections#IStructuralEquatable#GetHashCode(System.Collections.IEqualityComparer)">
          <source>The algorithm used to compute the hash code should return the same hash code for two <ph id="ph1">&lt;xref:System.Tuple%605&gt;</ph> objects that are considered to be equal.</source>
          <target state="translated">Algorytm używany do obliczania skrótu ma zwracać taki sam skrót dla dwóch <ph id="ph1">&lt;xref:System.Tuple%605&gt;</ph> obiektów, które są traktowane jako równe.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" uid="M:System.Tuple`5.System#IComparable#CompareTo(System.Object)">
          <source>An object to compare with the current instance.</source>
          <target state="translated">Obiekt, który ma zostać porównany z bieżącym wystąpieniem.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" uid="M:System.Tuple`5.System#IComparable#CompareTo(System.Object)">
          <source>Compares the current <ph id="ph1">&lt;see cref="T:System.Tuple`5" /&gt;</ph> object to a specified object and returns an integer that indicates whether the current object is before, after, or in the same position as the specified object in the sort order.</source>
          <target state="translated">Porównuje bieżący <ph id="ph1">&lt;see cref="T:System.Tuple`5" /&gt;</ph> obiekt do określonego obiektu i zwraca liczbę całkowitą, która wskazuje, czy bieżący obiekt jest przed, po lub w tym samym miejscu określony obiekt w kolejności sortowania.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" uid="M:System.Tuple`5.System#IComparable#CompareTo(System.Object)">
          <source>A signed integer that indicates the relative position of this instance and <ph id="ph1">&lt;paramref name="obj" /&gt;</ph> in the sort order, as shown in the following table.</source>
          <target state="translated">Całkowita wskazująca pozycję tego wystąpienia i <ph id="ph1">&lt;paramref name="obj" /&gt;</ph> w porządku sortowania, jak pokazano w poniższej tabeli.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" uid="M:System.Tuple`5.System#IComparable#CompareTo(System.Object)">
          <source><ph id="ph1">&lt;list type="table"&gt;</ph><ph id="ph2">&lt;listheader&gt;</ph><ph id="ph3">&lt;term&gt;</ph> Value</source>
          <target state="translated"><ph id="ph1">&lt;list type="table"&gt;</ph><ph id="ph2">&lt;listheader&gt;</ph><ph id="ph3">&lt;term&gt;</ph> Wartość</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" uid="M:System.Tuple`5.System#IComparable#CompareTo(System.Object)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Description</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Opis elementu</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" uid="M:System.Tuple`5.System#IComparable#CompareTo(System.Object)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/listheader&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> A negative integer</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/listheader&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Ujemna liczba całkowita</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" uid="M:System.Tuple`5.System#IComparable#CompareTo(System.Object)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> This instance precedes <ph id="ph3">&lt;paramref name="obj" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> To wystąpienie poprzedza <ph id="ph3">&lt;paramref name="obj" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" uid="M:System.Tuple`5.System#IComparable#CompareTo(System.Object)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Zero</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Zero</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" uid="M:System.Tuple`5.System#IComparable#CompareTo(System.Object)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> This instance and <ph id="ph3">&lt;paramref name="obj" /&gt;</ph> have the same position in the sort order.</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> To wystąpienie i <ph id="ph3">&lt;paramref name="obj" /&gt;</ph> mieć to samo położenie w kolejności sortowania.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" uid="M:System.Tuple`5.System#IComparable#CompareTo(System.Object)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> A positive integer</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Dodatnia liczba całkowita</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" uid="M:System.Tuple`5.System#IComparable#CompareTo(System.Object)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> This instance follows <ph id="ph3">&lt;paramref name="obj" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Następuje to wystąpienie <ph id="ph3">&lt;paramref name="obj" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`5.System#IComparable#CompareTo(System.Object)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">Ten element jest jawną implementacją członków.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`5.System#IComparable#CompareTo(System.Object)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Tuple%605&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.IComparable&gt;</ph> interface.</source>
          <target state="translated">Można go używać tylko wtedy, gdy <ph id="ph1">&lt;xref:System.Tuple%605&gt;</ph> wystąpienia jest rzutowane na <ph id="ph2">&lt;xref:System.IComparable&gt;</ph> interfejsu.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`5.System#IComparable#CompareTo(System.Object)">
          <source>This method provides the <ph id="ph1">&lt;xref:System.IComparable.CompareTo%2A?displayProperty=nameWithType&gt;</ph> implementation for the <ph id="ph2">&lt;xref:System.Tuple%605&gt;</ph> class.</source>
          <target state="translated">Ta metoda zapewnia <ph id="ph1">&lt;xref:System.IComparable.CompareTo%2A?displayProperty=nameWithType&gt;</ph> implementację <ph id="ph2">&lt;xref:System.Tuple%605&gt;</ph> klasy.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`5.System#IComparable#CompareTo(System.Object)">
          <source>Although the method can be called directly, it is most commonly called by the default overloads of collection-sorting methods, such as <ph id="ph1">&lt;xref:System.Array.Sort%28System.Array%29?displayProperty=nameWithType&gt;</ph> and <ph id="ph2">&lt;xref:System.Collections.SortedList.Add%2A?displayProperty=nameWithType&gt;</ph>, to order the members of a collection.</source>
          <target state="translated">Mimo że można bezpośrednio wywołać metody, najczęściej jest wywoływana przez przeciążeń domyślne sortowanie kolekcji metod, takich jak <ph id="ph1">&lt;xref:System.Array.Sort%28System.Array%29?displayProperty=nameWithType&gt;</ph> i <ph id="ph2">&lt;xref:System.Collections.SortedList.Add%2A?displayProperty=nameWithType&gt;</ph>, porządkowania elementów członkowskich kolekcji.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`5.System#IComparable#CompareTo(System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.Tuple%605.System%23IComparable%23CompareTo%2A&gt;</ph> method is intended for use in sorting operations.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Tuple%605.System%23IComparable%23CompareTo%2A&gt;</ph> Metoda jest przeznaczona do użycia w operacji sortowania.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`5.System#IComparable#CompareTo(System.Object)">
          <source>It should not be used when the primary purpose of a comparison is to determine whether two objects are equal.</source>
          <target state="translated">Nie należy jej używać, gdy głównym celem porównania jest ustalenie, czy dwa obiekty są sobie równe.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`5.System#IComparable#CompareTo(System.Object)">
          <source>To determine whether two objects are equal, call the <ph id="ph1">&lt;xref:System.Tuple%605.Equals%28System.Object%29?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">Aby ustalić, czy dwa obiekty są takie same, należy wywołać <ph id="ph1">&lt;xref:System.Tuple%605.Equals%28System.Object%29?displayProperty=nameWithType&gt;</ph> metody.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`5.System#IComparable#CompareTo(System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.Tuple%605.System%23IComparable%23CompareTo%28System.Object%29&gt;</ph> method uses the default object  comparer to compare each component.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Tuple%605.System%23IComparable%23CompareTo%28System.Object%29&gt;</ph> Metoda używa domyślna funkcja porównująca obiekt do porównania poszczególnych składników.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`5.System#IComparable#CompareTo(System.Object)">
          <source>The following example creates an array of <ph id="ph1">&lt;xref:System.Tuple%605&gt;</ph> objects that contain career statistics for running backs in American professional football.</source>
          <target state="translated">Poniższy przykład tworzy tablicę <ph id="ph1">&lt;xref:System.Tuple%605&gt;</ph> obiektów zawierających zawodowych statystyki dotyczące kopii uruchomiona w American professional football.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`5.System#IComparable#CompareTo(System.Object)">
          <source>The five components consist of the player's name, the number of games in which he played, the number of carries or attempts, the total number of yards gained, and the number of touchdowns scored.</source>
          <target state="translated">Składniki pięć składają się z nazwy odtwarzacza, liczba gry, w którym on odtwarzane, liczba posiada lub prób, liczba metry uzyskane, a liczba liczbą przyłożeń.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`5.System#IComparable#CompareTo(System.Object)">
          <source>The example displays the components of each tuple in the array in unsorted order, sorts the array, and then calls <ph id="ph1">&lt;xref:System.Tuple%605.ToString%2A&gt;</ph> to display each tuple in sorted order.</source>
          <target state="translated">Przykład wyświetla składniki każda krotka w tablicy w kolejności nieposortowane sortuje tablicy, a następnie wywołuje <ph id="ph1">&lt;xref:System.Tuple%605.ToString%2A&gt;</ph> Aby wyświetlić poszczególne krotki posortowane.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`5.System#IComparable#CompareTo(System.Object)">
          <source>The output shows that the array has been sorted by name, which is the first component.</source>
          <target state="translated">Dane wyjściowe pokazują, że tablica jest posortowana według nazw i który element jest pierwszy.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`5.System#IComparable#CompareTo(System.Object)">
          <source>Note that the example does not directly call the <ph id="ph1">&lt;xref:System.Tuple%605.System%23IComparable%23CompareTo%2A&gt;</ph> method.</source>
          <target state="translated">Należy pamiętać, że przykładzie nie mogą bezpośrednio wywoływać <ph id="ph1">&lt;xref:System.Tuple%605.System%23IComparable%23CompareTo%2A&gt;</ph> metody.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`5.System#IComparable#CompareTo(System.Object)">
          <source>This method is called implicitly by the <ph id="ph1">&lt;xref:System.Array.Sort%28System.Array%29&gt;</ph> method for each element in the array.</source>
          <target state="translated">Ta metoda jest wywoływana przez niejawnie <ph id="ph1">&lt;xref:System.Array.Sort%28System.Array%29&gt;</ph> metody dla każdego elementu w tablicy.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" uid="M:System.Tuple`5.System#IComparable#CompareTo(System.Object)">
          <source><ph id="ph1">&lt;paramref name="obj" /&gt;</ph> is not a <ph id="ph2">&lt;see cref="T:System.Tuple`5" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="obj" /&gt;</ph> nie jest <ph id="ph2">&lt;see cref="T:System.Tuple`5" /&gt;</ph> obiektu.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" uid="P:System.Tuple`5.System#Runtime#CompilerServices#ITuple#Item(System.Int32)">
          <source>The index of the specified <ph id="ph1">&lt;see langword="Tuple" /&gt;</ph> element.</source>
          <target state="translated">Określony indeks <ph id="ph1">&lt;see langword="Tuple" /&gt;</ph> elementu.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" uid="P:System.Tuple`5.System#Runtime#CompilerServices#ITuple#Item(System.Int32)">
          <source><bpt id="p1">&lt;c&gt;</bpt>index<ept id="p1">&lt;/c&gt;</ept> can range from 0 to 4.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>Indeks<ept id="p1">&lt;/c&gt;</ept> można z zakresu od 0 do 4.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" uid="P:System.Tuple`5.System#Runtime#CompilerServices#ITuple#Item(System.Int32)">
          <source>Gets the value of the specified <ph id="ph1">&lt;see langword="Tuple" /&gt;</ph> element.</source>
          <target state="translated">Pobiera wartość określonego <ph id="ph1">&lt;see langword="Tuple" /&gt;</ph> elementu.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Tuple`5.System#Runtime#CompilerServices#ITuple#Item(System.Int32)">
          <source>The value of the <ph id="ph1">&lt;see langword="Tuple" /&gt;</ph> element at the specified position.</source>
          <target state="translated">Wartość <ph id="ph1">&lt;see langword="Tuple" /&gt;</ph> elementu w określonej pozycji.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Tuple`5.System#Runtime#CompilerServices#ITuple#Item(System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Tuple%605.System%23Runtime%23CompilerServices%23ITuple%23Item%2A?displayProperty=nameWithType&gt;</ph> property is an explicit interface implementation.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Tuple%605.System%23Runtime%23CompilerServices%23ITuple%23Item%2A?displayProperty=nameWithType&gt;</ph> Właściwość jest jawnej implementacji interfejsu.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Tuple`5.System#Runtime#CompilerServices#ITuple#Item(System.Int32)">
          <source>To call it, you must cast or convert the <ph id="ph1">&lt;xref:System.Tuple%605&gt;</ph> object to an <ph id="ph2">&lt;xref:System.Runtime.CompilerServices.ITuple&gt;</ph> interface object.</source>
          <target state="translated">Aby wywołać go, należy rzutowania lub konwersji <ph id="ph1">&lt;xref:System.Tuple%605&gt;</ph> do obiektu <ph id="ph2">&lt;xref:System.Runtime.CompilerServices.ITuple&gt;</ph> obiektu interfejsu.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" uid="P:System.Tuple`5.System#Runtime#CompilerServices#ITuple#Item(System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is less than 0 or greater than 4.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> jest mniejsza niż 0 lub większą niż 4.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" uid="P:System.Tuple`5.System#Runtime#CompilerServices#ITuple#Length">
          <source>Gets the number of elements in the <ph id="ph1">&lt;see langword="Tuple" /&gt;</ph>.</source>
          <target state="translated">Pobiera liczbę elementów w <ph id="ph1">&lt;see langword="Tuple" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Tuple`5.System#Runtime#CompilerServices#ITuple#Length">
          <source>5, the number of elements in a <ph id="ph1">&lt;see cref="T:System.Tuple`5" /&gt;</ph> object.</source>
          <target state="translated">5, liczba elementów w <ph id="ph1">&lt;see cref="T:System.Tuple`5" /&gt;</ph> obiektu.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Tuple`5.System#Runtime#CompilerServices#ITuple#Length">
          <source>The <ph id="ph1">&lt;xref:System.Tuple%605.System%23Runtime%23CompilerServices%23ITuple%23Length%2A&gt;</ph> property is an explicit interface implementation.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Tuple%605.System%23Runtime%23CompilerServices%23ITuple%23Length%2A&gt;</ph> Właściwość jest jawnej implementacji interfejsu.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Tuple`5.System#Runtime#CompilerServices#ITuple#Length">
          <source>To call it, you must cast or convert the <ph id="ph1">&lt;xref:System.Tuple%605&gt;</ph> object to an <ph id="ph2">&lt;xref:System.Runtime.CompilerServices.ITuple&gt;</ph> interface object.</source>
          <target state="translated">Aby wywołać go, należy rzutowania lub konwersji <ph id="ph1">&lt;xref:System.Tuple%605&gt;</ph> do obiektu <ph id="ph2">&lt;xref:System.Runtime.CompilerServices.ITuple&gt;</ph> obiektu interfejsu.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" uid="M:System.Tuple`5.ToString">
          <source>Returns a string that represents the value of this <ph id="ph1">&lt;see cref="T:System.Tuple`5" /&gt;</ph> instance.</source>
          <target state="translated">Zwraca ciąg reprezentujący wartość to <ph id="ph1">&lt;see cref="T:System.Tuple`5" /&gt;</ph> wystąpienia.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" uid="M:System.Tuple`5.ToString">
          <source>The string representation of this <ph id="ph1">&lt;see cref="T:System.Tuple`5" /&gt;</ph> object.</source>
          <target state="translated">Reprezentacja ciągu <ph id="ph1">&lt;see cref="T:System.Tuple`5" /&gt;</ph> obiektu.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`5.ToString">
          <source>The string returned by this method takes the form (<bpt id="p1">*</bpt>Item1<ept id="p1">*</ept>, <bpt id="p2">*</bpt>Item2<ept id="p2">*</ept>, <bpt id="p3">*</bpt>Item3<ept id="p3">*</ept>, <bpt id="p4">*</bpt>Item4<ept id="p4">*</ept>, <ph id="ph1">`Item5`</ph>), where <bpt id="p5">*</bpt>Item1<ept id="p5">*</ept>, <bpt id="p6">*</bpt>Item2<ept id="p6">*</ept>, <bpt id="p7">*</bpt>Item3<ept id="p7">*</ept>, <bpt id="p8">*</bpt>Item4<ept id="p8">*</ept>, and <ph id="ph2">`Item5`</ph> represent the values of the <ph id="ph3">&lt;xref:System.Tuple%605.Item1%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Tuple%605.Item2%2A&gt;</ph>, <ph id="ph5">&lt;xref:System.Tuple%605.Item3%2A&gt;</ph>, <ph id="ph6">&lt;xref:System.Tuple%605.Item4%2A&gt;</ph>, and <ph id="ph7">&lt;xref:System.Tuple%605.Item5%2A&gt;</ph> properties, respectively.</source>
          <target state="translated">Długość ciągu zwróconego przez tę metodę ma postać (<bpt id="p1">*</bpt>Item1<ept id="p1">*</ept>, <bpt id="p2">*</bpt>Item2<ept id="p2">*</ept>, <bpt id="p3">*</bpt>Item3<ept id="p3">*</ept>, <bpt id="p4">*</bpt>Item4<ept id="p4">*</ept>, <ph id="ph1">`Item5`</ph>), gdzie <bpt id="p5">*</bpt>Item1<ept id="p5">*</ept>, <bpt id="p6">*</bpt>Item2<ept id="p6">*</ept>, <bpt id="p7">*</bpt>Item3<ept id="p7">*</ept>, <bpt id="p8">*</bpt>Item4<ept id="p8">*</ept>, i <ph id="ph2">`Item5`</ph> reprezentują wartości <ph id="ph3">&lt;xref:System.Tuple%605.Item1%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Tuple%605.Item2%2A&gt;</ph>, <ph id="ph5">&lt;xref:System.Tuple%605.Item3%2A&gt;</ph>, <ph id="ph6">&lt;xref:System.Tuple%605.Item4%2A&gt;</ph>, i <ph id="ph7">&lt;xref:System.Tuple%605.Item5%2A&gt;</ph> właściwości, odpowiednio.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`5.ToString">
          <source>If any of the property values is <ph id="ph1">`null`</ph>, it is represented as <ph id="ph2">&lt;xref:System.String.Empty?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Jeśli dowolna z wartości właściwości jest <ph id="ph1">`null`</ph>, jest reprezentowany jako <ph id="ph2">&lt;xref:System.String.Empty?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`5.ToString">
          <source>The following example illustrates the <ph id="ph1">&lt;xref:System.Tuple%605.ToString%2A&gt;</ph> method.</source>
          <target state="translated">Poniższy przykład przedstawia <ph id="ph1">&lt;xref:System.Tuple%605.ToString%2A&gt;</ph> metody.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`5.ToString">
          <source>It displays an array of 5-tuple objects that contain the name of a state in the United States, its population in 1990 and 2000, its population change in this 10-year period, and the annual rate of population change.</source>
          <target state="translated">Wyświetla tablicę obiektów 5-elementowej, które zawierają nazwę stanu w Stanach Zjednoczonych, jego wypełniania 1990 i 2000, populacji zmian w tym okresie 10 lat i roczne szybkość zmian populacji.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>