<Type Name="WebApplicationLifetimeEvent" FullName="System.Web.Management.WebApplicationLifetimeEvent">
  <Metadata><Meta Name="ms.openlocfilehash" Value="9dec4539e083e1e13543ddc121a16aea14f5417d" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69138534" /></Metadata><TypeSignature Language="C#" Value="public class WebApplicationLifetimeEvent : System.Web.Management.WebManagementEvent" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit WebApplicationLifetimeEvent extends System.Web.Management.WebManagementEvent" />
  <TypeSignature Language="DocId" Value="T:System.Web.Management.WebApplicationLifetimeEvent" />
  <TypeSignature Language="VB.NET" Value="Public Class WebApplicationLifetimeEvent&#xA;Inherits WebManagementEvent" />
  <TypeSignature Language="C++ CLI" Value="public ref class WebApplicationLifetimeEvent : System::Web::Management::WebManagementEvent" />
  <TypeSignature Language="F#" Value="type WebApplicationLifetimeEvent = class&#xA;    inherit WebManagementEvent" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.Management.WebManagementEvent</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Reprezentuje istotne zdarzenie w okresie istnienia aplikacji.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Monitorowanie kondycji ASP.NET umożliwia personelowi produkcyjnemu i operacyjnemu zarządzanie wdrożonymi aplikacjami sieci Web. <xref:System.Web.Management> Przestrzeń nazw zawiera typy zdarzeń kondycji odpowiedzialne za pakowanie danych kondycji aplikacji oraz typy dostawców odpowiedzialne za przetwarzanie tych danych. Zawiera również typy pomocnicze, które ułatwiają zarządzanie zdarzeniami kondycji.  
  
 Zdarzenia dotyczące okresu istnienia aplikacji obejmują zdarzenia, takie jak zdarzenia uruchamiania i zamykania aplikacji. Jeśli aplikacja zostanie zakończona, możesz określić przyczynę wyświetlania pola powiązanego komunikatu o zdarzeniu.  
  
 Gdy wystąpi <xref:System.Web.Management.WebApplicationLifetimeEvent> wystąpienie, ASP.NET Health Monitor aktualizuje licznik wydajności zdarzenia okresu istnienia aplikacji. Te zdarzenia można rejestrować przez dodanie <xref:System.Web.Management.WebApplicationLifetimeEvent> obiektu `rules` do podsekcji `healthMonitoring` sekcji w pliku konfiguracji, jak pokazano w poniższym przykładzie.  
  
```  
<rules>  
  <add name="Application Events"  
    eventName="Application Lifetime Events"  
    provider="EventLogProvider"  
    profile="Default"  
    minInterval="00:01:00" />  
</rules>  
  
```  
  
 Licznik wydajności zdarzenia okresu istnienia aplikacji zawiera łączną sumę wszystkich zdarzeń okresu istnienia ASP.NET. Aby wyświetlić ten licznik wydajności w monitorze systemu (PerfMon), w oknie **Dodawanie liczników** wybierz pozycję **ASP.NET** z listy rozwijanej **obiekt wydajności** . Wybierz licznik wydajności **zdarzenia okresu istnienia aplikacji** , a następnie kliknij przycisk **Dodaj** . Aby uzyskać więcej informacji, zobacz "Używanie monitora systemu (PerfMon) z aplikacjami ASP.NET" w [witrynie MSDN](https://go.microsoft.com/fwlink/?linkid=37118). Jeśli zezwolisz na rejestrowanie zdarzeń przez standard <xref:System.Web.Management.EventLogWebEventProvider>, możesz je wyświetlić w [Podgląd zdarzeń](https://docs.microsoft.com/previous-versions/windows/it-pro/windows-server-2003/cc756915\(v=ws.10\)) , wybierając dziennik **aplikacji** .
  
> [!CAUTION]
>  <xref:System.Web.Management.WebApplicationLifetimeEvent> Ponieważ obiekt jest wydarzeniem o dużej objętości, rejestrowanie jest czasochłonne i może spowolnić system. Może również spowodować zastąpienie innych zdarzeń w przypadku <xref:System.Web.Management.EventLogWebEventProvider> klasy z powodu dużej ilości zdarzeń i sposobu działania rejestrowania zdarzeń.  
  
> [!NOTE]
>  W większości przypadków można używać typów monitorowania kondycji ASP.NET zgodnie z implementacją i kontrolować system monitorowania kondycji, określając wartości w `healthMonitoring` sekcji Konfiguracja. Można również tworzyć własne niestandardowe zdarzenia i dostawców za pomocą typów monitorowania kondycji. Przykład wyprowadzania z <xref:System.Web.Management.WebApplicationLifetimeEvent> klasy można znaleźć w przykładach podanych w tym temacie.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje, <xref:System.Web.Management.WebApplicationLifetimeEvent> jak dziedziczyć z klasy w celu utworzenia niestandardowego zdarzenia.  
  
 [!code-csharp[System.Web.Management.WebApplicationLifetimeEvent#1](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.management.WebApplicationLifetimeEvent/CS/webapplicationlifetimeevent.cs#1)]
 [!code-vb[System.Web.Management.WebApplicationLifetimeEvent#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.management.WebApplicationLifetimeEvent/VB/webapplicationlifetimeevent.vb#1)]  
  
 Poniższy fragment pliku konfiguracji przedstawia sposób konfigurowania `healthMonitoring` sekcji pliku konfiguracji w celu `SampleWebApplicationLifetimeEvent` dodania kodu zdefiniowanego powyżej do systemu monitorowania kondycji ASP.NET. Aby dodać zdarzenie do systemu, należy zdefiniować zdarzenie, dodając nowy wpis do `eventMappings` sekcji i mapując zdarzenie do dostawcy, dodając nowy wpis `rules` do sekcji.  
  
```  
<healthMonitoring  
  enabled="true"  
  heartBeatInterval="0">  
  
    <eventMappings>  
       <clear />  
       <!-- Configure the application lifetime event -->  
       <!-- object to handle the Web application events. -->  
       <add name="SampleApplicationLifetimeEvents"  
         type="System.Web.Management.SampleWebApplicationLifetimeEvent,  
         System.Web,Version=2.0.3600.0,  
         Culture=neutral,PublicKeyToken=b03f5f7f11d50a3a" />  
     </eventMappings>  
  
    <rules>  
      <clear/>  
       // Configure the connection between the   
       // application lifetime event object   
       // and the provider that must process it.  
       <add name="Custom Application Events"  
         eventName="SampleApplicationLifetimeEvents"  
         provider="EventLogProvider"  
         profile="Default"  
         minInterval="00:01:00" />  
    </rules>  
  
</healthMonitoring>  
```  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides"><para>Podczas formatowania informacji o zdarzeniu niestandardowym na potrzeby <see cref="M:System.Web.Management.WebBaseEvent.FormatCustomEventDetails(System.Web.Management.WebEventFormatter)" /> wyświetlania Zastąp metodę <see cref="Overload:System.Web.Management.WebBaseEvent.ToString" /> zamiast metody. Pozwoli to uniknąć zastąpienia lub naruszenia poufnych informacji o systemie.</para></block>
    <related type="Article" href="https://msdn.microsoft.com/library/e003f224-70fe-4cd8-a71a-2dc81e2d7e4c">Monitorowanie kondycji ASP.NET — Omówienie</related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Management.WebApplicationLifetimeEvent" /> klasy.</summary>
        <related type="Article" href="https://msdn.microsoft.com/library/e003f224-70fe-4cd8-a71a-2dc81e2d7e4c">Monitorowanie kondycji ASP.NET — Omówienie</related>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected internal WebApplicationLifetimeEvent (string message, object eventSource, int eventCode);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig specialname rtspecialname instance void .ctor(string message, object eventSource, int32 eventCode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Management.WebApplicationLifetimeEvent.#ctor(System.String,System.Object,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Sub New (message As String, eventSource As Object, eventCode As Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; WebApplicationLifetimeEvent(System::String ^ message, System::Object ^ eventSource, int eventCode);" />
      <MemberSignature Language="F#" Value="new System.Web.Management.WebApplicationLifetimeEvent : string * obj * int -&gt; System.Web.Management.WebApplicationLifetimeEvent" Usage="new System.Web.Management.WebApplicationLifetimeEvent (message, eventSource, eventCode)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="eventSource" Type="System.Object" />
        <Parameter Name="eventCode" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="message">Wiadomość skojarzona ze zdarzeniem.</param>
        <param name="eventSource">Obiekt, który jest źródłem zdarzenia.</param>
        <param name="eventCode">Kod skojarzony ze zdarzeniem. W przypadku zaimplementowania niestandardowego zdarzenia kod zdarzenia musi być większy niż <see cref="F:System.Web.Management.WebEventCodes.WebExtendedBase" />.</param>
        <summary><see cref="T:System.Web.Management.WebApplicationLifetimeEvent" /> Inicjuje klasę przy użyciu podanych parametrów.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten konstruktor jest używany wewnętrznie przez system monitorowania kondycji ASP.NET. Nigdy nie będzie on używany do tworzenia wystąpienia <xref:System.Web.Management.WebApplicationLifetimeEvent> klasy, ale można wywołać tego konstruktora podczas implementowania własnego typu zdarzenia, który dziedziczy z tej klasy.  
  
> [!NOTE]
>  <xref:System.Web.Management.WebApplicationLifetimeEvent.%23ctor%2A> Konstruktor nie jest przeznaczony do użycia bezpośrednio w kodzie. Jest on wywoływany przez ASP.NET. Można wywołać <xref:System.Web.Management.WebApplicationLifetimeEvent.%23ctor%2A> konstruktora podczas wyprowadzania <xref:System.Web.Management.WebApplicationLifetimeEvent> z klasy.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje, <xref:System.Web.Management.WebApplicationLifetimeEvent.%23ctor%2A> jak używać w niestandardowym zdarzeniu ASP.NET. Ten przykład kodu jest przeznaczony głównie do wyświetlania poprawnej składni.  
  
 [!code-csharp[System.Web.Management.WebApplicationLifetimeEvent#2](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.management.WebApplicationLifetimeEvent/CS/webapplicationlifetimeevent.cs#2)]
 [!code-vb[System.Web.Management.WebApplicationLifetimeEvent#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.management.WebApplicationLifetimeEvent/VB/webapplicationlifetimeevent.vb#2)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/e003f224-70fe-4cd8-a71a-2dc81e2d7e4c">Monitorowanie kondycji ASP.NET — Omówienie</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected internal WebApplicationLifetimeEvent (string message, object eventSource, int eventCode, int eventDetailCode);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig specialname rtspecialname instance void .ctor(string message, object eventSource, int32 eventCode, int32 eventDetailCode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Management.WebApplicationLifetimeEvent.#ctor(System.String,System.Object,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Sub New (message As String, eventSource As Object, eventCode As Integer, eventDetailCode As Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; WebApplicationLifetimeEvent(System::String ^ message, System::Object ^ eventSource, int eventCode, int eventDetailCode);" />
      <MemberSignature Language="F#" Value="new System.Web.Management.WebApplicationLifetimeEvent : string * obj * int * int -&gt; System.Web.Management.WebApplicationLifetimeEvent" Usage="new System.Web.Management.WebApplicationLifetimeEvent (message, eventSource, eventCode, eventDetailCode)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="eventSource" Type="System.Object" />
        <Parameter Name="eventCode" Type="System.Int32" />
        <Parameter Name="eventDetailCode" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="message">Wiadomość skojarzona ze zdarzeniem.</param>
        <param name="eventSource">Obiekt, który jest źródłem zdarzenia.</param>
        <param name="eventCode">Kod skojarzony ze zdarzeniem. W przypadku zaimplementowania niestandardowego zdarzenia kod zdarzenia musi być większy niż <see cref="F:System.Web.Management.WebEventCodes.WebExtendedBase" />.</param>
        <param name="eventDetailCode"><see cref="T:System.Web.Management.WebEventCodes" /> Wartość, która określa szczegółowy identyfikator zdarzenia.</param>
        <summary><see cref="T:System.Web.Management.WebApplicationLifetimeEvent" /> Inicjuje klasę przy użyciu podanych parametrów.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten konstruktor jest używany wewnętrznie przez system monitorowania kondycji ASP.NET. Nigdy nie będzie on używany do tworzenia wystąpienia <xref:System.Web.Management.WebApplicationLifetimeEvent> klasy, ale można wywołać tego konstruktora podczas implementowania własnego typu zdarzenia, który dziedziczy z tej klasy.  
  
> [!NOTE]
>  <xref:System.Web.Management.WebApplicationLifetimeEvent.%23ctor%2A> Konstruktor nie jest przeznaczony do użycia bezpośrednio w kodzie. Jest on wywoływany przez ASP.NET. Można wywołać <xref:System.Web.Management.WebApplicationLifetimeEvent.%23ctor%2A> konstruktora podczas wyprowadzania <xref:System.Web.Management.WebApplicationLifetimeEvent> z klasy.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje, <xref:System.Web.Management.WebApplicationLifetimeEvent.%23ctor%2A> jak używać w niestandardowym zdarzeniu ASP.NET. Ten przykład kodu jest przeznaczony głównie do wyświetlania poprawnej składni.  
  
 [!code-csharp[System.Web.Management.WebApplicationLifetimeEvent#3](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.management.WebApplicationLifetimeEvent/CS/webapplicationlifetimeevent.cs#3)]
 [!code-vb[System.Web.Management.WebApplicationLifetimeEvent#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.management.WebApplicationLifetimeEvent/VB/webapplicationlifetimeevent.vb#3)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/e003f224-70fe-4cd8-a71a-2dc81e2d7e4c">Monitorowanie kondycji ASP.NET — Omówienie</related>
      </Docs>
    </Member>
    <Member MemberName="IncrementPerfCounters">
      <MemberSignature Language="C#" Value="protected internal override void IncrementPerfCounters ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void IncrementPerfCounters() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Management.WebApplicationLifetimeEvent.IncrementPerfCounters" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub IncrementPerfCounters ()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void IncrementPerfCounters();" />
      <MemberSignature Language="F#" Value="override this.IncrementPerfCounters : unit -&gt; unit" Usage="webApplicationLifetimeEvent.IncrementPerfCounters " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Używane wewnętrznie do zwiększania liczników wydajności.</summary>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/e003f224-70fe-4cd8-a71a-2dc81e2d7e4c">Monitorowanie kondycji ASP.NET — Omówienie</related>
      </Docs>
    </Member>
  </Members>
</Type>
