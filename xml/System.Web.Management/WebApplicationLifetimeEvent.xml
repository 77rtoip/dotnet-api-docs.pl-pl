<Type Name="WebApplicationLifetimeEvent" FullName="System.Web.Management.WebApplicationLifetimeEvent">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="2920d534df4f6017cd4f35b2adc3d72c79803308" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39895138" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class WebApplicationLifetimeEvent : System.Web.Management.WebManagementEvent" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit WebApplicationLifetimeEvent extends System.Web.Management.WebManagementEvent" />
  <TypeSignature Language="DocId" Value="T:System.Web.Management.WebApplicationLifetimeEvent" />
  <TypeSignature Language="VB.NET" Value="Public Class WebApplicationLifetimeEvent&#xA;Inherits WebManagementEvent" />
  <TypeSignature Language="C++ CLI" Value="public ref class WebApplicationLifetimeEvent : System::Web::Management::WebManagementEvent" />
  <TypeSignature Language="F#" Value="type WebApplicationLifetimeEvent = class&#xA;    inherit WebManagementEvent" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.Management.WebManagementEvent</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Reprezentuje istotnego zdarzenia w okresie istnienia aplikacji.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Monitorowanie kondycji ASP.NET umożliwia produkcyjnym i operacjami personelu do zarządzania wdrożonej aplikacji sieci Web. <xref:System.Web.Management> Przestrzeń nazw zawiera typy zdarzenie kondycji odpowiedzialny za pakowania danych stanu kondycji aplikacji i typów dostawców odpowiedzialna za przetwarzanie tych danych. Zawiera ona także pomocnicze typy, które mogą pomóc podczas zarządzania zdarzenia dotyczące kondycji.  
  
 Zdarzenia okresu istnienia aplikacji obejmują zdarzenia, takie jak uruchamianie aplikacji i zdarzeń zamknięcia. Jeśli aplikacja zostanie zakończona, można określić dlaczego przez wyświetlanie pola komunikatu związane zdarzenie.  
  
 Gdy <xref:System.Web.Management.WebApplicationLifetimeEvent> wystąpi wystąpienia, monitorowania kondycji ASP.NET aktualizuje wartość licznika wydajności zdarzenia okresu istnienia aplikacji. Zdarzenia te można rejestrować, dodając <xref:System.Web.Management.WebApplicationLifetimeEvent> obiekt `rules` podsekcję `healthMonitoring` sekcję pliku konfiguracji, jak pokazano w poniższym przykładzie.  
  
```  
<rules>  
  <add name="Application Events"  
    eventName="Application Lifetime Events"  
    provider="EventLogProvider"  
    profile="Default"  
    minInterval="00:01:00" />  
</rules>  
  
```  
  
 Licznik wydajności zdarzenia okresu istnienia aplikacji zawiera łączną sumę wszystkich zdarzeń okresu istnienia ASP.NET. Aby wyświetlić ten licznik wydajności w Monitorze systemu (PerfMon) w **Dodaj liczniki** wybierz okno **ASP.NET** z **obiekt wydajności** listy rozwijanej. Wybierz **zdarzenia okresu istnienia aplikacji** licznika wydajności, a następnie kliknij przycisk **Dodaj** przycisku. Aby uzyskać więcej informacji, zobacz "Za pomocą Monitora systemu (PerfMon) z aplikacjami ASP.NET" na [MSDN](http://go.microsoft.com/fwlink/?linkid=37118). Jeśli zezwolisz na zdarzenia, które mają być rejestrowane przez standard <xref:System.Web.Management.EventLogWebEventProvider>, wyświetlać w Podglądzie zdarzeń, wybierając **aplikacji** dziennika. Aby uzyskać więcej informacji, zobacz [Podgląd zdarzeń](http://go.microsoft.com/fwlink/?linkid=24845&clcid=0x409) w dokumentacji systemu Windows Server 2003 w witrynie TechNet.  
  
> [!CAUTION]
>  Ponieważ <xref:System.Web.Management.WebApplicationLifetimeEvent> obiekt jest dużej liczby zdarzeń, rejestrowanie go jest dużej ilości zasobów i może spowolnić system. Inne zdarzenia zostaną zastąpione w przypadku właściwości może być przyczyną <xref:System.Web.Management.EventLogWebEventProvider> klasy z powodu dużej liczby zdarzeń i sposób rejestrowania działania zdarzeń.  
  
> [!NOTE]
>  W większości przypadków można używać typów monitorowania kondycji ASP.NET zaimplementowanego i monitorowanie kondycji systemu będzie kontrolować, określając wartości w `healthMonitoring` sekcji konfiguracji. Można również dziedziczyć typów monitorowanie kondycji i tworzyć własne niestandardowe zdarzenia i dostawców. Na przykład pochodząca od <xref:System.Web.Management.WebApplicationLifetimeEvent> klasy, zobacz przykład podane w tym temacie.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje, jak dziedziczyć <xref:System.Web.Management.WebApplicationLifetimeEvent> klasy, aby utworzyć niestandardowe zdarzenie.  
  
 [!code-csharp[System.Web.Management.WebApplicationLifetimeEvent#1](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.management.WebApplicationLifetimeEvent/CS/webapplicationlifetimeevent.cs#1)]
 [!code-vb[System.Web.Management.WebApplicationLifetimeEvent#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.management.WebApplicationLifetimeEvent/VB/webapplicationlifetimeevent.vb#1)]  
  
 Poniższy fragment pliku konfiguracji przedstawia sposób konfigurowania `healthMonitoring` sekcję pliku konfiguracji, aby dodać `SampleWebApplicationLifetimeEvent` kodu zdefiniowanych powyżej systemowi monitorowania kondycji ASP.NET. Aby dodać zdarzenie do systemu, należy zdefiniować zdarzenia przez dodanie nowego wpisu do `eventMappings` sekcji i mapowania zdarzenia dostawcy przez dodanie nowego wpisu do `rules` sekcji.  
  
```  
<healthMonitoring  
  enabled="true"  
  heartBeatInterval="0">  
  
    <eventMappings>  
       <clear />  
       <!-- Configure the application lifetime event -->  
       <!-- object to handle the Web application events. -->  
       <add name="SampleApplicationLifetimeEvents"  
         type="System.Web.Management.SampleWebApplicationLifetimeEvent,  
         System.Web,Version=2.0.3600.0,  
         Culture=neutral,PublicKeyToken=b03f5f7f11d50a3a" />  
     </eventMappings>  
  
    <rules>  
      <clear/>  
       // Configure the connection between the   
       // application lifetime event object   
       // and the provider that must process it.  
       <add name="Custom Application Events"  
         eventName="SampleApplicationLifetimeEvents"  
         provider="EventLogProvider"  
         profile="Default"  
         minInterval="00:01:00" />  
    </rules>  
  
</healthMonitoring>  
```  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <para>Podczas formatowania zdarzenie niestandardowe informacje do wyświetlania, Zastąp <see cref="M:System.Web.Management.WebBaseEvent.FormatCustomEventDetails(System.Web.Management.WebEventFormatter)" /> metody zamiast <see cref="Overload:System.Web.Management.WebBaseEvent.ToString" /> metody. Zapobiegnie to zastąpienia lub naruszeniu systemu poufnych informacji.</para>
    </block>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Management.WebApplicationLifetimeEvent" /> klasy.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected internal WebApplicationLifetimeEvent (string message, object eventSource, int eventCode);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig specialname rtspecialname instance void .ctor(string message, object eventSource, int32 eventCode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Management.WebApplicationLifetimeEvent.#ctor(System.String,System.Object,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Sub New (message As String, eventSource As Object, eventCode As Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; WebApplicationLifetimeEvent(System::String ^ message, System::Object ^ eventSource, int eventCode);" />
      <MemberSignature Language="F#" Value="new System.Web.Management.WebApplicationLifetimeEvent : string * obj * int -&gt; System.Web.Management.WebApplicationLifetimeEvent" Usage="new System.Web.Management.WebApplicationLifetimeEvent (message, eventSource, eventCode)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="eventSource" Type="System.Object" />
        <Parameter Name="eventCode" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="message">Komunikat skojarzony ze zdarzeniem.</param>
        <param name="eventSource">Obiekt, który jest źródłem zdarzeń.</param>
        <param name="eventCode">Kod skojarzony ze zdarzeniem. Podczas implementowania zdarzenia niestandardowego kodu zdarzenia musi być większa niż <see cref="F:System.Web.Management.WebEventCodes.WebExtendedBase" />.</param>
        <summary>Inicjuje <see cref="T:System.Web.Management.WebApplicationLifetimeEvent" /> przy użyciu podanych parametrów.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten konstruktor jest używana wewnętrznie przez system monitorowania kondycji ASP.NET. Nigdy nie użyje go do utworzenia wystąpienia <xref:System.Web.Management.WebApplicationLifetimeEvent> klasy, ale można wywołać ten konstruktor podczas implementowania swój własny typ zdarzenia, która dziedziczy z tej klasy.  
  
> [!NOTE]
>  <xref:System.Web.Management.WebApplicationLifetimeEvent.%23ctor%2A> Konstruktor nie jest przeznaczona do użycia bezpośrednio w kodzie. Jest ona wywoływana przez platformę ASP.NET. Możesz wywołać <xref:System.Web.Management.WebApplicationLifetimeEvent.%23ctor%2A> Konstruktor podczas wyprowadzania z <xref:System.Web.Management.WebApplicationLifetimeEvent> klasy.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje sposób użycia <xref:System.Web.Management.WebApplicationLifetimeEvent.%23ctor%2A> w zdarzeniu kondycji niestandardowych platformy ASP.NET. Ten przykład kodu jest przede wszystkim przeznaczony do pokazania poprawnej składni do użycia.  
  
 [!code-csharp[System.Web.Management.WebApplicationLifetimeEvent#2](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.management.WebApplicationLifetimeEvent/CS/webapplicationlifetimeevent.cs#2)]
 [!code-vb[System.Web.Management.WebApplicationLifetimeEvent#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.management.WebApplicationLifetimeEvent/VB/webapplicationlifetimeevent.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected internal WebApplicationLifetimeEvent (string message, object eventSource, int eventCode, int eventDetailCode);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig specialname rtspecialname instance void .ctor(string message, object eventSource, int32 eventCode, int32 eventDetailCode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Management.WebApplicationLifetimeEvent.#ctor(System.String,System.Object,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Sub New (message As String, eventSource As Object, eventCode As Integer, eventDetailCode As Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; WebApplicationLifetimeEvent(System::String ^ message, System::Object ^ eventSource, int eventCode, int eventDetailCode);" />
      <MemberSignature Language="F#" Value="new System.Web.Management.WebApplicationLifetimeEvent : string * obj * int * int -&gt; System.Web.Management.WebApplicationLifetimeEvent" Usage="new System.Web.Management.WebApplicationLifetimeEvent (message, eventSource, eventCode, eventDetailCode)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="eventSource" Type="System.Object" />
        <Parameter Name="eventCode" Type="System.Int32" />
        <Parameter Name="eventDetailCode" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="message">Komunikat skojarzony ze zdarzeniem.</param>
        <param name="eventSource">Obiekt, który jest źródłem zdarzeń.</param>
        <param name="eventCode">Kod skojarzony ze zdarzeniem. Podczas implementowania zdarzenia niestandardowego kodu zdarzenia musi być większa niż <see cref="F:System.Web.Management.WebEventCodes.WebExtendedBase" />.</param>
        <param name="eventDetailCode">
          <see cref="T:System.Web.Management.WebEventCodes" /> Wartość, która określa szczegółowe identyfikator zdarzenia.</param>
        <summary>Inicjuje <see cref="T:System.Web.Management.WebApplicationLifetimeEvent" /> przy użyciu podanych parametrów.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten konstruktor jest używana wewnętrznie przez system monitorowania kondycji ASP.NET. Nigdy nie użyje go do utworzenia wystąpienia <xref:System.Web.Management.WebApplicationLifetimeEvent> klasy, ale można wywołać ten konstruktor podczas implementowania swój własny typ zdarzenia, która dziedziczy z tej klasy.  
  
> [!NOTE]
>  <xref:System.Web.Management.WebApplicationLifetimeEvent.%23ctor%2A> Konstruktor nie jest przeznaczona do użycia bezpośrednio w kodzie. Jest ona wywoływana przez platformę ASP.NET. Możesz wywołać <xref:System.Web.Management.WebApplicationLifetimeEvent.%23ctor%2A> Konstruktor podczas wyprowadzania z <xref:System.Web.Management.WebApplicationLifetimeEvent> klasy.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje sposób użycia <xref:System.Web.Management.WebApplicationLifetimeEvent.%23ctor%2A> w zdarzeniu kondycji niestandardowych platformy ASP.NET. Ten przykład kodu jest przede wszystkim przeznaczony do pokazania poprawnej składni do użycia.  
  
 [!code-csharp[System.Web.Management.WebApplicationLifetimeEvent#3](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.management.WebApplicationLifetimeEvent/CS/webapplicationlifetimeevent.cs#3)]
 [!code-vb[System.Web.Management.WebApplicationLifetimeEvent#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.management.WebApplicationLifetimeEvent/VB/webapplicationlifetimeevent.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IncrementPerfCounters">
      <MemberSignature Language="C#" Value="protected internal override void IncrementPerfCounters ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void IncrementPerfCounters() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Management.WebApplicationLifetimeEvent.IncrementPerfCounters" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub IncrementPerfCounters ()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void IncrementPerfCounters();" />
      <MemberSignature Language="F#" Value="override this.IncrementPerfCounters : unit -&gt; unit" Usage="webApplicationLifetimeEvent.IncrementPerfCounters " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Używane wewnętrznie, aby zwiększyć liczniki wydajności.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>