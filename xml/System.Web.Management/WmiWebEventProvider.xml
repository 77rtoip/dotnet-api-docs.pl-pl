<Type Name="WmiWebEventProvider" FullName="System.Web.Management.WmiWebEventProvider">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="0fe6c2b6a8bd86062450114ee4fdae294aa75a02" />
    <Meta Name="ms.sourcegitcommit" Value="9dda17222b9f7d3edf130133bfb1370d5b410a4b" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="09/22/2018" />
    <Meta Name="ms.locfileid" Value="46630568" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class WmiWebEventProvider : System.Web.Management.WebEventProvider" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit WmiWebEventProvider extends System.Web.Management.WebEventProvider" />
  <TypeSignature Language="DocId" Value="T:System.Web.Management.WmiWebEventProvider" />
  <TypeSignature Language="VB.NET" Value="Public Class WmiWebEventProvider&#xA;Inherits WebEventProvider" />
  <TypeSignature Language="C++ CLI" Value="public ref class WmiWebEventProvider : System::Web::Management::WebEventProvider" />
  <TypeSignature Language="F#" Value="type WmiWebEventProvider = class&#xA;    inherit WebEventProvider" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.Management.WebEventProvider</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Implementuje dostawcę zdarzeń, który mapuje zdarzeń monitorowania kondycji ASP.NET zdarzeń Instrumentacji zarządzania Windows (WMI).</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Monitorowanie kondycji ASP.NET umożliwia produkcyjnym i operacjami personelu do zarządzania wdrożonej aplikacji sieci Web. <xref:System.Web.Management> Przestrzeń nazw zawiera typy zdarzenie kondycji odpowiedzialny za pakowania danych stanu kondycji aplikacji i typów dostawców odpowiedzialna za przetwarzanie tych danych. Zawiera ona także pomocnicze typy, które mogą pomóc podczas zarządzania zdarzenia dotyczące kondycji.  
  
 Do mapowania zdarzeń WMI zdarzeń monitorowania kondycji ASP.NET korzysta z tej klasy. Aby włączyć dostarczanie zdarzeń monitorowania kondycji ASP.NET do podsystemu WMI, należy skonfigurować <xref:System.Web.Management.WmiWebEventProvider> klasy, dodając odpowiednie ustawienia w `<healthMonitoring>` sekcję pliku konfiguracji.  
  
 Informacje zawarte w pliku Aspnet.mof opisano parametry zdarzeń WMI zgłaszane w przypadku zdarzeń monitorowania kondycji ASP.NET są kierowane do <xref:System.Web.Management.WmiWebEventProvider> klasy i mapowany do uzyskania zdarzeń WMI. Plik Aspnet.mof jest przechowywany w katalogu kompilacji platformy .NET Framework, na przykład %windir%\Microsoft.NET\Framework\\*BuildNumber*. Aby uzyskać więcej informacji na temat monitorowania kondycji zdarzeń jako zdarzenia WMI do raportowania, zobacz [NIB: przy użyciu usługi WMI do dostarczania zdarzeń monitorowania kondycji ASP.NET](http://msdn.microsoft.com/library/e57fea2f-610f-4432-9dd6-dd10a6c5bd10).  
  
> [!NOTE]
>  W większości przypadków można używać typów monitorowania kondycji ASP.NET zaimplementowanego i monitorowanie kondycji systemu będzie kontrolować, określając wartości w `<healthMonitoring>` sekcji konfiguracji. Można również dziedziczyć typów monitorowanie kondycji i tworzyć własne niestandardowe zdarzenia i dostawców. Aby uzyskać przykład tworzenia niestandardowego dostawcy, zobacz [jak: zaimplementować kondycji monitorowania niestandardowego dostawcy przykład](http://msdn.microsoft.com/library/bbb1c959-e6e4-42b2-be62-49b7ca5ab72c).  
  
   
  
## Examples  
 Poniższy przykład pokazuje, jak utworzyć odbiorcę zdarzeń WMI wystawiony przez monitorowanie wyniku zdarzenia dotyczące kondycji aplikacji sieci Web kondycji programu ASP.NET.  
  
> [!NOTE]
>  <xref:System.Web.Management.WmiWebEventProvider> Klasy i typy zdarzeń kondycji, aby monitorować zostały już skonfigurowane domyślnie. Jedyną czynnością, którą należy wykonać, jest do zdefiniowania reguły dla wszystkich zdarzeń kondycji. Należy pamiętać, że zdarzenia kondycji nie są wysyłane do <xref:System.Web.Management.WmiWebEventProvider> dostawcy domyślnie.  
  
 [!code-csharp[System.Web.Management.WmiWebEventProvider#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Management.WmiWebEventProvider/CS/WmiWebEventListener.cs#1)]
 [!code-vb[System.Web.Management.WmiWebEventProvider#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Management.WmiWebEventProvider/VB/WmiWebEventListener.vb#1)]  
  
 Poniższy przykład to fragment pliku konfiguracji, który pokazuje `<healthMonitoring>` sekcji konfiguracji, która umożliwia platformę ASP.NET w celu użycia <xref:System.Web.Management.WmiWebEventProvider> dostawcę, aby przetworzyć wszystkie zdarzenia monitorowania kondycji.  
  
```  
<healthMonitoring>  
  <rules>  
    <add   
      name="Using Wmi"  
      eventName="All Events"   
      provider="WmiWebEventProvider"   
      profile="Critical"/>  
  </rules>  
</healthMonitoring>  
```  
  
 ]]></format>
    </remarks>
    <related type="Article" href="http://msdn.microsoft.com/library/e003f224-70fe-4cd8-a71a-2dc81e2d7e4c">Omówienie monitorowania kondycji ASP.NET</related>
    <related type="Article" href="http://msdn.microsoft.com/library/bbb1c959-e6e4-42b2-be62-49b7ca5ab72c">Monitorowanie kondycji ASP.NET niestandardowego dostawcy próbki</related>
    <related type="Article" href="http://msdn.microsoft.com/library/ab894e83-7e2f-4af8-a116-b1bff8f815b2">Instalowanie i Konfigurowanie dostawcy ASP.NET</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WmiWebEventProvider ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Management.WmiWebEventProvider.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WmiWebEventProvider();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Management.WmiWebEventProvider" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten konstruktor jest używana wewnętrznie przez system monitorowania kondycji ASP.NET. Nigdy nie użyje go do utworzenia wystąpienia <xref:System.Web.Management.TraceWebEventProvider> klasy, ale można wywołać ten konstruktor podczas implementowania swój własny typ dostawcy, która dziedziczy z tej klasy.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Flush">
      <MemberSignature Language="C#" Value="public override void Flush ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Flush() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Management.WmiWebEventProvider.Flush" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Flush ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Flush();" />
      <MemberSignature Language="F#" Value="override this.Flush : unit -&gt; unit" Usage="wmiWebEventProvider.Flush " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Usuwa wszystkie zdarzenia z buforu dostawcy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Gdy ta metoda jest wywoływana, wszystkie zdarzenia w buforze dostawcy są usuwane natychmiast, niezależnie od tego, ile czasu upłynęło od momentu ostatniego zapisu lub ile zdarzeń znajdują się w buforze. Czas ostatniego zapisu jest resetowany do czasu opróżniania akcji. Wywołanie tej metody, jeśli nie włączono mechanizm buforowania nie ma znaczenia.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public override void Initialize (string name, System.Collections.Specialized.NameValueCollection config);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Initialize(string name, class System.Collections.Specialized.NameValueCollection config) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Management.WmiWebEventProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Initialize (name As String, config As NameValueCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Initialize(System::String ^ name, System::Collections::Specialized::NameValueCollection ^ config);" />
      <MemberSignature Language="F#" Value="override this.Initialize : string * System.Collections.Specialized.NameValueCollection -&gt; unit" Usage="wmiWebEventProvider.Initialize (name, config)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="config" Type="System.Collections.Specialized.NameValueCollection" />
      </Parameters>
      <Docs>
        <param name="name">Nazwa używana w pliku konfiguracji do identyfikacji tego dostawcy.</param>
        <param name="config">A <see cref="T:System.Collections.Specialized.NameValueCollection" /> obiekt, który określa atrybuty przypisane do tego dostawcy, w pliku konfiguracji.</param>
        <summary>Ustawia wartość początkową dla tego obiektu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wywołania ASP.NET <xref:System.Web.Management.WmiWebEventProvider.Initialize%2A> metoda po wywołaniu <xref:System.Web.Management.WmiWebEventProvider.%23ctor%2A> konstruktora. Ta metoda jest wywoływana w celu zainicjowania <xref:System.Web.Management.WmiWebEventProvider> klasy przy użyciu ustawień konfiguracji i nazwa określona w pliku konfiguracji.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ProcessEvent">
      <MemberSignature Language="C#" Value="public override void ProcessEvent (System.Web.Management.WebBaseEvent eventRaised);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void ProcessEvent(class System.Web.Management.WebBaseEvent eventRaised) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Management.WmiWebEventProvider.ProcessEvent(System.Web.Management.WebBaseEvent)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub ProcessEvent (eventRaised As WebBaseEvent)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void ProcessEvent(System::Web::Management::WebBaseEvent ^ eventRaised);" />
      <MemberSignature Language="F#" Value="override this.ProcessEvent : System.Web.Management.WebBaseEvent -&gt; unit" Usage="wmiWebEventProvider.ProcessEvent eventRaised" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventRaised" Type="System.Web.Management.WebBaseEvent" />
      </Parameters>
      <Docs>
        <param name="eventRaised">
          <see cref="T:System.Web.Management.WebBaseEvent" /> Obiektu do procesu.</param>
        <summary>Przetwarza zdarzenia przekazywane do dostawcy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jest to metoda, że monitorowania kondycji ASP.NET wymaga aby rozpocząć przetwarzanie zdarzenia.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">Nie można podniesione zdarzenia.</exception>
      </Docs>
    </Member>
    <Member MemberName="Shutdown">
      <MemberSignature Language="C#" Value="public override void Shutdown ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Shutdown() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Management.WmiWebEventProvider.Shutdown" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Shutdown ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Shutdown();" />
      <MemberSignature Language="F#" Value="override this.Shutdown : unit -&gt; unit" Usage="wmiWebEventProvider.Shutdown " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Wykonuje zadania związane z zamykanie dostawcy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wywołania ASP.NET <xref:System.Web.Management.EventLogWebEventProvider.Shutdown%2A> metody, gdy kończy się domeny aplikacji, który jest hostem aplikacji sieci Web. Metoda jest wywoływana, aby wykonywać zadania, które umożliwią aplikacji zakończyć bez problemu zmieniała.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>