<Type Name="WebFailureAuditEvent" FullName="System.Web.Management.WebFailureAuditEvent">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="6b496e9d7a0ad3eb6c5ce6c6c8a57ba650ca6bf4" />
    <Meta Name="ms.sourcegitcommit" Value="d877ae76e9e11799bf919379507239e2c4072742" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="08/09/2018" />
    <Meta Name="ms.locfileid" Value="39902889" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class WebFailureAuditEvent : System.Web.Management.WebAuditEvent" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit WebFailureAuditEvent extends System.Web.Management.WebAuditEvent" />
  <TypeSignature Language="DocId" Value="T:System.Web.Management.WebFailureAuditEvent" />
  <TypeSignature Language="VB.NET" Value="Public Class WebFailureAuditEvent&#xA;Inherits WebAuditEvent" />
  <TypeSignature Language="C++ CLI" Value="public ref class WebFailureAuditEvent : System::Web::Management::WebAuditEvent" />
  <TypeSignature Language="F#" Value="type WebFailureAuditEvent = class&#xA;    inherit WebAuditEvent" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.Management.WebAuditEvent</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Zawiera informacje o błędach zabezpieczeń.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Monitorowanie kondycji ASP.NET umożliwia produkcyjnym i operacjami personelu do zarządzania wdrożonej aplikacji sieci Web. <xref:System.Web.Management?displayProperty=nameWithType> Przestrzeń nazw zawiera typy zdarzeń kondycji odpowiedzialny za pakowania danych stanu kondycji aplikacji i typów dostawców odpowiedzialna za przetwarzanie tych danych. Zawiera ona także pomocnicze typy, które mogą pomóc podczas zarządzania zdarzenia dotyczące kondycji.  
  
 <xref:System.Web.Management.WebFailureAuditEvent> Klasa jest używana w przypadku niepowodzenia operacji zabezpieczeń. Na przykład jest Niepowodzenie autoryzacji adresów URL dla żądania sieci Web.  
  
 Domyślnie program ASP.NET jest skonfigurowany do podniesienia <xref:System.Web.Management.WebFailureAuditEvent> zdarzenia dla następujących funkcji:  
  
-   Plik autoryzacji. ASP.NET próbuje autoryzacji plików tylko wtedy, gdy tożsamość Windows jest skojarzony z żądaniem. Kod związane zdarzenie inspekcji: <xref:System.Web.Management.WebEventCodes.AuditFileAuthorizationFailure>.  
  
-   Autoryzacja adresów URL. Kontroluje to próby nieautoryzowanego dostępu do zasobu adresu URL. Nieudanych prób przez użytkownika anonimowego nie są poddawane inspekcji, ponieważ wystąpił błąd uwierzytelniania anonimowego jest dopuszczalna w większości przypadków. Kod związane zdarzenie inspekcji: <xref:System.Web.Management.WebEventCodes.AuditUrlAuthorizationFailure>.  
  
-   Nieobsługiwany ogólny lub zabezpieczeń nieobsługiwany warunków. Oto lista kodów zdarzenia związane z tych warunków:  
  
    -   <xref:System.Web.Management.WebEventCodes.AuditFormsAuthenticationFailure>  
  
    -   <xref:System.Web.Management.WebEventCodes.AuditMembershipAuthenticationFailure>  
  
    -   <xref:System.Web.Management.WebEventCodes.AuditInvalidViewStateFailure>  
  
    -   <xref:System.Web.Management.WebEventCodes.AuditUnhandledSecurityException>  
  
    -   <xref:System.Web.Management.WebEventCodes.AuditUnhandledAccessException>  
  
 Gdy <xref:System.Web.Management.WebFailureAuditEvent> zdarzenie jest zgłaszane, monitorowania kondycji ASP.NET zwiększa powiązane inspekcji niepowodzenie zdarzenia wywoływane licznika wydajności i następnie `healthMonitoring` sekcji konfiguracji, aby określić, czy żadnego dostawcy subskrybować zdarzenia. Jeśli dostawcy subskrybować zdarzenie, ASP.NET wywołuje zdarzenia w celu ich przetwarzania.  
  
> [!NOTE]
>  Aby wyświetlić licznika wydajności inspekcji niepowodzenie zdarzenia wywoływane w Monitorze systemu (PerfMon) w **Dodaj liczniki** wybierz **ASP.NET** z **obiekt wydajności** listy rozwijanej wybierz **inspekcji niepowodzenie zdarzenia wywoływane** licznika wydajności, a następnie kliknij przycisk **Dodaj** przycisku. Aby uzyskać więcej informacji, zobacz [przy użyciu Monitora systemu (PerfMon) z aplikacjami ASP.NET](http://go.microsoft.com/fwlink/?linkid=36882) w dokumentacji usług IIS w witrynie MSDN.  
  
> [!NOTE]
>  W większości przypadków można używać typów monitorowania kondycji ASP.NET zaimplementowanego i monitorowanie kondycji systemu będzie kontrolować, określając wartości w `healthMonitoring` sekcji konfiguracji. Można również dziedziczyć typów monitorowanie kondycji i tworzyć własne niestandardowe zdarzenia i dostawców. Na przykład pochodząca od <xref:System.Web.Management.WebFailureAuditEvent> klasy, w sekcji przykład.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje, jak dziedziczyć <xref:System.Web.Management.WebFailureAuditEvent> klasy w celu utworzenia zdarzenia inspekcji niestandardowych.  
  
 [!code-csharp[System.Web.Management.WebFailureAuditEvent#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Management.WebFailureAuditEvent/CS/webfailureauditevent.cs#1)]
 [!code-vb[System.Web.Management.WebFailureAuditEvent#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Management.WebFailureAuditEvent/VB/webfailureauditevent.vb#1)]  
  
 Poniższy fragment konfiguracji pokazuje, jak włączyć platformę ASP.NET w celu użycia <xref:System.Web.Management.WebFailureAuditEvent> zdarzeń.  
  
```  
<healthMonitoring   
enabled="true"  
heartBeatInterval="0">   
<providers>  
<add name="EventLogProvider"   
type="System.Web.Management.EventLogWebEventProvider,  
System.Web,Version=2.0.3600.0,Culture=neutral,  
PublicKeyToken=b03f5f7f11d50a3a"/>  
</providers>  
  
<eventMappings>  
<add  name="SampleWebFailureAuditEvent"   
type="SamplesAspNet.SampleWebFailureAuditEvent,  
webfailureauditevent,Version=1.0.1663.31140,   
Culture=neutral,   
PublicKeyToken=0d1fa0f69d94de96,   
processorArchitecture=MSIL"/>  
</eventMappings>  
  
<rules>  
<add name="Custom Failure Audit Default"  
eventName=" SampleWebFailureAuditEvent "  
provider="EventLogProvider"  
profile="Default"/>    
</rules>  
  
</healthMonitoring>  
```  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <para>Podczas formatowania zdarzenie niestandardowe informacje do wyświetlania, Zastąp <see cref="M:System.Web.Management.WebBaseEvent.FormatCustomEventDetails(System.Web.Management.WebEventFormatter)" /> metody zamiast <see cref="Overload:System.Web.Management.WebBaseEvent.ToString" /> metody. Zapobiegnie to zastąpienia lub naruszeniu systemu poufnych informacji.</para>
    </block>
    <altmember cref="T:System.Web.Management.WebAuditEvent" />
    <altmember cref="T:System.Web.Management.WebSuccessAuditEvent" />
    <altmember cref="T:System.Web.Management.WebEventCodes" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Management.WebFailureAuditEvent" /> klasy.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected internal WebFailureAuditEvent (string message, object eventSource, int eventCode);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig specialname rtspecialname instance void .ctor(string message, object eventSource, int32 eventCode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Management.WebFailureAuditEvent.#ctor(System.String,System.Object,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Sub New (message As String, eventSource As Object, eventCode As Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; WebFailureAuditEvent(System::String ^ message, System::Object ^ eventSource, int eventCode);" />
      <MemberSignature Language="F#" Value="new System.Web.Management.WebFailureAuditEvent : string * obj * int -&gt; System.Web.Management.WebFailureAuditEvent" Usage="new System.Web.Management.WebFailureAuditEvent (message, eventSource, eventCode)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="eventSource" Type="System.Object" />
        <Parameter Name="eventCode" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="message">Opis zdarzenia.</param>
        <param name="eventSource">Obiekt, który jest źródłem zdarzeń.</param>
        <param name="eventCode">Kod skojarzony ze zdarzeniem. Podczas implementowania zdarzenia niestandardowego kodu zdarzenia musi być większa niż <see cref="F:System.Web.Management.WebEventCodes.WebExtendedBase" />.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Management.WebFailureAuditEvent" /> przy użyciu podanych parametrów.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten konstruktor jest używana wewnętrznie przez system monitorowania kondycji ASP.NET. Nigdy nie użyje go do utworzenia wystąpienia <xref:System.Web.Management.WebFailureAuditEvent>, ale podczas implementowania swój własny typ zdarzenia, która dziedziczy z tej klasy, można wywołać tego konstruktora.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje sposób wywoływania tego konstruktora `SampleWebFailureAuditEvent` klasy. Ten przykład kodu jest częścią większego przykładu przewidzianego dla <xref:System.Web.Management.WebFailureAuditEvent> klasa — Przegląd.  
  
 [!code-csharp[System.Web.Management.WebFailureAuditEvent#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Management.WebFailureAuditEvent/CS/webfailureauditevent.cs#2)]
 [!code-vb[System.Web.Management.WebFailureAuditEvent#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Management.WebFailureAuditEvent/VB/webfailureauditevent.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected internal WebFailureAuditEvent (string message, object eventSource, int eventCode, int eventDetailCode);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig specialname rtspecialname instance void .ctor(string message, object eventSource, int32 eventCode, int32 eventDetailCode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Management.WebFailureAuditEvent.#ctor(System.String,System.Object,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Sub New (message As String, eventSource As Object, eventCode As Integer, eventDetailCode As Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; WebFailureAuditEvent(System::String ^ message, System::Object ^ eventSource, int eventCode, int eventDetailCode);" />
      <MemberSignature Language="F#" Value="new System.Web.Management.WebFailureAuditEvent : string * obj * int * int -&gt; System.Web.Management.WebFailureAuditEvent" Usage="new System.Web.Management.WebFailureAuditEvent (message, eventSource, eventCode, eventDetailCode)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="eventSource" Type="System.Object" />
        <Parameter Name="eventCode" Type="System.Int32" />
        <Parameter Name="eventDetailCode" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="message">Opis zdarzenia.</param>
        <param name="eventSource">Obiekt, który jest źródłem zdarzeń.</param>
        <param name="eventCode">Kod skojarzony ze zdarzeniem. Podczas implementowania zdarzenia niestandardowego kodu zdarzenia musi być większa niż <see cref="F:System.Web.Management.WebEventCodes.WebExtendedBase" />.</param>
        <param name="eventDetailCode">
          <see cref="T:System.Web.Management.WebEventCodes" /> Wartość, która określa szczegółowe identyfikator zdarzenia.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Management.WebFailureAuditEvent" /> przy użyciu podanych parametrów.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten konstruktor jest używana wewnętrznie przez system monitorowania kondycji ASP.NET. Nigdy nie użyje go do utworzenia wystąpienia <xref:System.Web.Management.WebFailureAuditEvent>, ale podczas implementowania swój własny typ zdarzenia, która dziedziczy z tej klasy, można wywołać tego konstruktora.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje sposób wywoływania tego konstruktora `SampleWebFailureAuditEvent` klasy. Ten przykład kodu jest częścią większego przykładu przewidzianego dla <xref:System.Web.Management.WebFailureAuditEvent> klasa — Przegląd.  
  
 [!code-csharp[System.Web.Management.WebFailureAuditEvent#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Management.WebFailureAuditEvent/CS/webfailureauditevent.cs#3)]
 [!code-vb[System.Web.Management.WebFailureAuditEvent#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Management.WebFailureAuditEvent/VB/webfailureauditevent.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IncrementPerfCounters">
      <MemberSignature Language="C#" Value="protected internal override void IncrementPerfCounters ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void IncrementPerfCounters() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Management.WebFailureAuditEvent.IncrementPerfCounters" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub IncrementPerfCounters ()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void IncrementPerfCounters();" />
      <MemberSignature Language="F#" Value="override this.IncrementPerfCounters : unit -&gt; unit" Usage="webFailureAuditEvent.IncrementPerfCounters " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zwiększa licznik wydajności inspekcji niepowodzenie zdarzenia wywoływane.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Licznik wydajności inspekcji niepowodzenie zdarzenia wywoływane śledzi liczbę zdarzeń inspekcji nie powiodło się zgłoszone od czasu uruchomienia aplikacji. Ta metoda wywołuje również nadrzędnego <xref:System.Web.Management.WebBaseEvent.IncrementPerfCounters%2A> metody, która zwiększa licznik zdarzenia wywoływane. Ten licznik śledzi całkowita liczba zdarzeń zgłaszanych.  
  
 Aby wyświetlić te liczniki wydajności w Monitorze systemu (PerfMon) w **Dodaj liczniki** wybierz okno **ASP.NET** z **obiekt wydajności** listy rozwijanej wybierz opcję Licznik wydajności, które chcesz wyświetlić, a następnie kliknij pozycję **Dodaj** przycisku. Aby uzyskać więcej informacji, zobacz [przy użyciu Monitora systemu (PerfMon) z aplikacjami ASP.NET](http://go.microsoft.com/fwlink/?linkid=36882) w dokumentacji usług IIS w witrynie MSDN.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>