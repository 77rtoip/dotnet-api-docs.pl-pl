<Type Name="IWebEventCustomEvaluator" FullName="System.Web.Management.IWebEventCustomEvaluator">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="b8429d40f3704b498b1f47bd4a91fde38c98be3c" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36400857" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IWebEventCustomEvaluator" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IWebEventCustomEvaluator" />
  <TypeSignature Language="DocId" Value="T:System.Web.Management.IWebEventCustomEvaluator" />
  <TypeSignature Language="VB.NET" Value="Public Interface IWebEventCustomEvaluator" />
  <TypeSignature Language="C++ CLI" Value="public interface class IWebEventCustomEvaluator" />
  <TypeSignature Language="F#" Value="type IWebEventCustomEvaluator = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>Określa, czy zdarzenia mają być wysyłane do dostawcy powiązane do przetwarzania.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Monitorowanie kondycji ASP.NET umożliwia pracownikom produkcyjnego i operacji zarządzania wdrożonej aplikacji sieci Web. <xref:System.Web.Management> Przestrzeń nazw zawiera typy kondycji zdarzenie odpowiedzialnych za tworzenie pakietów danych stanu kondycji aplikacji i typów dostawcy odpowiedzialna za przetwarzanie tych danych. Zawiera ona także pomocnicze typy, które pomagają w trakcie zarządzania zdarzenia kondycji.  
  
 Ten interfejs umożliwia włączanie lub wyłączanie uruchamiania określonego zdarzenia. Jest to szczególnie przydatne podczas implementowania własne niestandardowe zdarzenie, a chcesz kontrolować szybkość, z jaką wysłaniem do powiązanych dostawcy do przetwarzania.  
  
> [!NOTE]
>  Ten interfejs nie kontroluje częstotliwość zdarzenia. Określa tylko, jak często informacje dotyczące zdarzenia są wysyłane do dostawcy do przetwarzania.  
  
   
  
## Examples  
 Poniższy przykładowy kod przedstawia sposób pochodzi od <xref:System.Web.Management.IWebEventCustomEvaluator> interfejsu podczas tworzenia niestandardowego zdarzenia.  
  
 [!code-csharp[System.Web.Management.WebBaseEvent#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Management.WebBaseEvent/CS/webbaseevent.cs#1)]
 [!code-vb[System.Web.Management.WebBaseEvent#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Management.WebBaseEvent/VB/webbaseevent.vb#1)]  
  
 Poniżej przedstawiono fragment pliku konfiguracji, który umożliwia platformę ASP.NET do użycia <xref:System.Web.Management.IWebEventCustomEvaluator.CanFire%2A> metodę, aby zdecydować, czy zgłoszono zdarzeń muszą być wysyłane do dostawcy do przetwarzania.  
  
```  
<healthMonitoring   
  heartBeatInterval="0" enabled="true">  
  
    <providers>  
      <add name="SampleWebEventProvider"   
        type="SamplesAspNet.SampleEventProvider, webeventprovider, Version=1.0.1741.20369, Culture=neutral, PublicKeyToken=cf85aa6c978d9dea, processorArchitecture=MSIL" />  
    </providers>  
  
    <profiles>  
      <add   
        name="Custom"   
        minInstances="1"   
        maxLimit="Infinite"   
        minInterval="00:00:00"   
        custom ="SamplesAspNet.SampleWebRequestEvent,webrequestevent"   
        />  
    </profiles>  
  
    <eventMappings>  
  
      <add name="SampleWebRequestEvent" type="SamplesAspNet.SampleWebRequestEvent,webrequestevent, Version=1.0.1759.20533, Culture=neutral, PublicKeyToken=0d72899b07049076, processorArchitecture=MSIL" />  
  
    </eventMappings>  
  
    <rules>  
      <clear />  
  
        <add name="Custom Web Request Event"   
          eventName="SampleWebRequestEvent"  
          provider="SampleWebEventProvider" profile="Custom" />  
    </rules>  
  
</healthMonitoring>  
```  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.Management.RuleFiringRecord" />
  </Docs>
  <Members>
    <Member MemberName="CanFire">
      <MemberSignature Language="C#" Value="public bool CanFire (System.Web.Management.WebBaseEvent raisedEvent, System.Web.Management.RuleFiringRecord record);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanFire(class System.Web.Management.WebBaseEvent raisedEvent, class System.Web.Management.RuleFiringRecord record) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Management.IWebEventCustomEvaluator.CanFire(System.Web.Management.WebBaseEvent,System.Web.Management.RuleFiringRecord)" />
      <MemberSignature Language="VB.NET" Value="Public Function CanFire (raisedEvent As WebBaseEvent, record As RuleFiringRecord) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool CanFire(System::Web::Management::WebBaseEvent ^ raisedEvent, System::Web::Management::RuleFiringRecord ^ record);" />
      <MemberSignature Language="F#" Value="abstract member CanFire : System.Web.Management.WebBaseEvent * System.Web.Management.RuleFiringRecord -&gt; bool" Usage="iWebEventCustomEvaluator.CanFire (raisedEvent, record)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="raisedEvent" Type="System.Web.Management.WebBaseEvent" />
        <Parameter Name="record" Type="System.Web.Management.RuleFiringRecord" />
      </Parameters>
      <Docs>
        <param name="raisedEvent">Zdarzenie, aby wywołać.</param>
        <param name="record">
          <see cref="T:System.Web.Management.RuleFiringRecord" /> Zawierający informacje o zdarzeniu.</param>
        <summary>Określa, czy powinien być wywoływany zdarzenia.</summary>
        <returns>
          <see langword="true" /> Jeśli powinny zostać wywołane zdarzenie; w przeciwnym razie <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli zdarzenie niestandardowe ewaluatora zwraca `true`, zdarzenie jest zgłaszane, a następnie przetwarzany przez dostawcę skojarzone.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje niestandardowej implementacji <xref:System.Web.Management.IWebEventCustomEvaluator.CanFire%2A> metody.  
  
 [!code-csharp[System.Web.Management.WebBaseEvent#22](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Management.WebBaseEvent/CS/webbaseevent.cs#22)]
 [!code-vb[System.Web.Management.WebBaseEvent#22](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Management.WebBaseEvent/VB/webbaseevent.vb#22)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>