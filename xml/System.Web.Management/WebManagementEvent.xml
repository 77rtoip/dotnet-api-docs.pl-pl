<Type Name="WebManagementEvent" FullName="System.Web.Management.WebManagementEvent">
  <Metadata><Meta Name="ms.openlocfilehash" Value="62aadef812f7852688f2fa5138d202f7ade1e7e2" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69138328" /></Metadata><TypeSignature Language="C#" Value="public class WebManagementEvent : System.Web.Management.WebBaseEvent" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit WebManagementEvent extends System.Web.Management.WebBaseEvent" />
  <TypeSignature Language="DocId" Value="T:System.Web.Management.WebManagementEvent" />
  <TypeSignature Language="VB.NET" Value="Public Class WebManagementEvent&#xA;Inherits WebBaseEvent" />
  <TypeSignature Language="C++ CLI" Value="public ref class WebManagementEvent : System::Web::Management::WebBaseEvent" />
  <TypeSignature Language="F#" Value="type WebManagementEvent = class&#xA;    inherit WebBaseEvent" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.Management.WebBaseEvent</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Definiuje klasę bazową dla zdarzeń, które zawierają informacje o aplikacji i procesie.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Monitorowanie kondycji ASP.NET umożliwia personelowi produkcyjnemu i operacyjnemu zarządzanie wdrożonymi aplikacjami sieci Web. <xref:System.Web.Management?displayProperty=nameWithType> Przestrzeń nazw zawiera typy zdarzeń kondycji odpowiedzialne za pakowanie danych kondycji aplikacji oraz typy dostawców odpowiedzialne za przetwarzanie tych danych. Zawiera również typy pomocnicze, które ułatwiają zarządzanie zdarzeniami kondycji.  
  
 <xref:System.Web.Management.WebManagementEvent> Jest klasą bazową dla wszystkich typów zdarzeń monitorowania kondycji ASP.NET. Używa <xref:System.Web.Management.WebProcessInformation> klasy do uzyskiwania informacji o procesie, które są dostępne dla klas pochodnych.  
  
> [!NOTE]
>  W większości przypadków można używać typów monitorowania kondycji ASP.NET zgodnie z implementacją i kontrolować system monitorowania kondycji, określając wartości w `healthMonitoring` sekcji Konfiguracja. Można również tworzyć własne niestandardowe zdarzenia i dostawców za pomocą typów monitorowania kondycji. Przykład wyprowadzania z <xref:System.Web.Management.WebManagementEvent> klasy można znaleźć w przykładach podanych w tym temacie.  
  
   
  
## Examples  
 Poniższy przykład przedstawia sposób implementacji zdarzenia niestandardowego poprzez wytworzenie go z <xref:System.Web.Management.WebManagementEvent> klasy.  
  
 [!code-csharp[System.Web.Management.WebManagementEvent#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Management.WebManagementEvent/CS/webmanagementevent.cs#1)]
 [!code-vb[System.Web.Management.WebManagementEvent#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Management.WebManagementEvent/VB/webmanagementevent.vb#1)]  
  
 Poniżej znajduje się fragment pliku konfiguracji, który umożliwia ASP.NET użycie niestandardowego zdarzenia.  
  
```  
<healthMonitoring enabled="true"   
  heartBeatInterval="0">  
  <eventMappings>  
  
    <add  name="SampleWebManagementEvent" type="SamplesAspNet.SampleWebManagementEvent,webmanagementevent,Version=1.0.1573.24438, Culture=neutral, PublicKeyToken=2f5f337ae5c9bdaa, processorArchitecture=MSIL"/>  
  
  </eventMappings>  
  <rules>  
    <add   
      name="Custom WebManagementEvent"  
      eventName="SampleWebManagementEvent"  
      provider="EventLogProvider"  
      profile="Critical"/>  
  </rules>  
</healthMonitoring>  
```  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides"><para>Podczas formatowania informacji o zdarzeniu niestandardowym na potrzeby <see cref="M:System.Web.Management.WebBaseEvent.FormatCustomEventDetails(System.Web.Management.WebEventFormatter)" /> wyświetlania Zastąp metodę <see cref="Overload:System.Web.Management.WebBaseEvent.ToString" /> zamiast metody. Pozwoli to uniknąć zastąpienia lub naruszenia poufnych informacji o systemie.  
  
Kod zdarzenia określony dla zdarzenia niestandardowego musi być większy niż <see cref="F:System.Web.Management.WebEventCodes.WebExtendedBase" />.</para></block>
    <altmember cref="T:System.Web.Management.WebAuditEvent" />
    <related type="Article" href="https://msdn.microsoft.com/library/e003f224-70fe-4cd8-a71a-2dc81e2d7e4c">Monitorowanie kondycji ASP.NET — Omówienie</related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Management.WebManagementEvent" /> klasy.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected internal WebManagementEvent (string message, object eventSource, int eventCode);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig specialname rtspecialname instance void .ctor(string message, object eventSource, int32 eventCode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Management.WebManagementEvent.#ctor(System.String,System.Object,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Sub New (message As String, eventSource As Object, eventCode As Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; WebManagementEvent(System::String ^ message, System::Object ^ eventSource, int eventCode);" />
      <MemberSignature Language="F#" Value="new System.Web.Management.WebManagementEvent : string * obj * int -&gt; System.Web.Management.WebManagementEvent" Usage="new System.Web.Management.WebManagementEvent (message, eventSource, eventCode)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="eventSource" Type="System.Object" />
        <Parameter Name="eventCode" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="message">Opis zdarzenia.</param>
        <param name="eventSource">Obiekt, który jest źródłem zdarzenia.</param>
        <param name="eventCode">Kod skojarzony ze zdarzeniem. W przypadku zaimplementowania niestandardowego zdarzenia kod zdarzenia musi być większy niż <see cref="F:System.Web.Management.WebEventCodes.WebExtendedBase" />.</param>
        <summary>Inicjuje nowe wystąpienie <see cref="T:System.Web.Management.WebManagementEvent" /> klasy przy użyciu podanych parametrów.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Management.WebManagementEvent.%23ctor%2A> Konstruktor nie jest przeznaczony do użycia bezpośrednio w kodzie. Jest on wywoływany przez ASP.NET. Można wywołać <xref:System.Web.Management.WebManagementEvent.%23ctor%2A> konstruktora podczas wyprowadzania <xref:System.Web.Management.WebManagementEvent> z klasy.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected internal WebManagementEvent (string message, object eventSource, int eventCode, int eventDetailCode);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig specialname rtspecialname instance void .ctor(string message, object eventSource, int32 eventCode, int32 eventDetailCode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Management.WebManagementEvent.#ctor(System.String,System.Object,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Sub New (message As String, eventSource As Object, eventCode As Integer, eventDetailCode As Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; WebManagementEvent(System::String ^ message, System::Object ^ eventSource, int eventCode, int eventDetailCode);" />
      <MemberSignature Language="F#" Value="new System.Web.Management.WebManagementEvent : string * obj * int * int -&gt; System.Web.Management.WebManagementEvent" Usage="new System.Web.Management.WebManagementEvent (message, eventSource, eventCode, eventDetailCode)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="eventSource" Type="System.Object" />
        <Parameter Name="eventCode" Type="System.Int32" />
        <Parameter Name="eventDetailCode" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="message">Opis zdarzenia.</param>
        <param name="eventSource">Obiekt, który jest źródłem zdarzenia.</param>
        <param name="eventCode">Kod skojarzony ze zdarzeniem. W przypadku zaimplementowania niestandardowego zdarzenia kod zdarzenia musi być większy niż <see cref="F:System.Web.Management.WebEventCodes.WebExtendedBase" />.</param>
        <param name="eventDetailCode"><see cref="T:System.Web.Management.WebEventCodes" /> Wartość, która określa szczegółowy identyfikator zdarzenia.</param>
        <summary>Inicjuje nowe wystąpienie <see cref="T:System.Web.Management.WebManagementEvent" /> klasy przy użyciu podanych parametrów.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Management.WebManagementEvent.%23ctor%2A> Konstruktor nie jest przeznaczony do użycia bezpośrednio w kodzie. Jest on wywoływany przez ASP.NET. Można wywołać <xref:System.Web.Management.WebManagementEvent.%23ctor%2A> konstruktora podczas wyprowadzania <xref:System.Web.Management.WebManagementEvent> z klasy.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ProcessInformation">
      <MemberSignature Language="C#" Value="public System.Web.Management.WebProcessInformation ProcessInformation { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.Management.WebProcessInformation ProcessInformation" />
      <MemberSignature Language="DocId" Value="P:System.Web.Management.WebManagementEvent.ProcessInformation" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ProcessInformation As WebProcessInformation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::Management::WebProcessInformation ^ ProcessInformation { System::Web::Management::WebProcessInformation ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ProcessInformation : System.Web.Management.WebProcessInformation" Usage="System.Web.Management.WebManagementEvent.ProcessInformation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.Management.WebProcessInformation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera informacje o procesie hostingu aplikacji ASP.NET.</summary>
        <value><see cref="T:System.Web.Management.WebProcessInformation" /> Obiekt, który zawiera informacje o procesie.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład kodu pokazuje, <xref:System.Web.Management.WebManagementEvent.ProcessInformation%2A> jak uzyskać wartość.  
  
 [!code-csharp[System.Web.Management.WebManagementEvent#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Management.WebManagementEvent/CS/webmanagementevent.cs#5)]
 [!code-vb[System.Web.Management.WebManagementEvent#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Management.WebManagementEvent/VB/webmanagementevent.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Management.WebProcessInformation" />
      </Docs>
    </Member>
  </Members>
</Type>
