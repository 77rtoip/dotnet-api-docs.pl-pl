<Type Name="WebAuthenticationFailureAuditEvent" FullName="System.Web.Management.WebAuthenticationFailureAuditEvent">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="f24f8f699d1ac2e9b963847d36745805c9676320" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37545610" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class WebAuthenticationFailureAuditEvent : System.Web.Management.WebFailureAuditEvent" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit WebAuthenticationFailureAuditEvent extends System.Web.Management.WebFailureAuditEvent" />
  <TypeSignature Language="DocId" Value="T:System.Web.Management.WebAuthenticationFailureAuditEvent" />
  <TypeSignature Language="VB.NET" Value="Public Class WebAuthenticationFailureAuditEvent&#xA;Inherits WebFailureAuditEvent" />
  <TypeSignature Language="C++ CLI" Value="public ref class WebAuthenticationFailureAuditEvent : System::Web::Management::WebFailureAuditEvent" />
  <TypeSignature Language="F#" Value="type WebAuthenticationFailureAuditEvent = class&#xA;    inherit WebFailureAuditEvent" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.Management.WebFailureAuditEvent</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Zawiera informacje o niepowodzeniach uwierzytelniania platformy ASP.NET.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Na poniższej liście opisano funkcje, dla którego <xref:System.Web.Management.WebAuthenticationFailureAuditEvent> zdarzenia są wywoływane domyślnie przez platformę ASP.NET.  
  
> [!NOTE]
>  Domyślnie, platformy ASP.NET jest skonfigurowana do dziennika inspekcji warunków błędów sukces tylko wtedy, jak rejestrowanie warunki mogą poważnie wyczerpać zasobów systemowych. Zawsze można skonfigurować system do logowania się warunki powodzenia.  
  
-   Uwierzytelnianie formularzy. Gdy inspekcje zakończone sukcesem zawiera nazwę użytkownika, który został uwierzytelniony; Niepowodzenie inspekcji nie dołączaj nazwy użytkownika, ponieważ są one zazwyczaj wynikiem bilet, który uległ awarii, odszyfrowywania lub sprawdzania poprawności. Oba zawierają adresu IP klienta. Kod związane zdarzenie inspekcji: <xref:System.Web.Management.WebEventCodes.AuditFormsAuthenticationFailure>.  
  
-   Członkostwo. Inspekcji sukcesów i niepowodzeń zawierać nazwy użytkownika, który próbowano wykonać. Ani formularz inspekcji będzie zawierać hasło, które próbowano wykonać, ponieważ, ryzyka, utrwalanie prawidłowe hasło w dzienniku. Kod związane zdarzenie inspekcji: <xref:System.Web.Management.WebEventCodes.AuditMembershipAuthenticationFailure>.  
  
 Gdy <xref:System.Web.Management.WebAuthenticationFailureAuditEvent> jest wywoływane, domyślnie powoduje zaktualizowanie licznika wydajności inspekcji uwierzytelniania niepowodzenie zdarzenia wywoływane. Aby wyświetlić ten licznik wydajności w Monitorze systemu (PerfMon) w **Dodaj liczniki** wybierz okno `ASP.NET` w **wydajności** obiekt listy rozwijanej wybierz pozycję ** Niepowodzenie uwierzytelniania zdarzenia wywoływane** licznika wydajności, a następnie kliknij przycisk **Dodaj** przycisku. Aby uzyskać więcej informacji, zobacz [przy użyciu Monitora systemu (PerfMon) z aplikacjami ASP.NET](http://go.microsoft.com/fwlink/?linkid=36882&clcid=0x409) w witrynie MSDN.  
  
> [!NOTE]
>  W większości przypadków można używać typów monitorowania kondycji ASP.NET zaimplementowanego i monitorowanie kondycji systemu będzie kontrolować, określając wartości w `healthMonitoring` sekcji konfiguracji. Można również dziedziczyć typów monitorowanie kondycji i tworzyć własne niestandardowe zdarzenia i dostawców. Na przykład pochodząca od <xref:System.Web.Management.WebAuthenticationFailureAuditEvent> klasy, zobacz przykład podane w tym temacie.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje sposób użycia <xref:System.Web.Management.WebAuthenticationFailureAuditEvent> klasy.  
  
 [!code-csharp[System.Web.Management.WebAuthenticationFailureAuditEvent#1](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.management.WebAuthenticationFailureAuditEvent/CS/WebAuthenticationFailureAuditEvent.cs#1)]
 [!code-vb[System.Web.Management.WebAuthenticationFailureAuditEvent#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.management.WebAuthenticationFailureAuditEvent/VB/WebAuthenticationFailureAuditEvent.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.Management.WebAuthenticationSuccessAuditEvent" />
    <altmember cref="T:System.Web.Management.WebEventCodes" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Management.WebAuthenticationFailureAuditEvent" /> klasy.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected internal WebAuthenticationFailureAuditEvent (string message, object eventSource, int eventCode, string nameToAuthenticate);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig specialname rtspecialname instance void .ctor(string message, object eventSource, int32 eventCode, string nameToAuthenticate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Management.WebAuthenticationFailureAuditEvent.#ctor(System.String,System.Object,System.Int32,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Sub New (message As String, eventSource As Object, eventCode As Integer, nameToAuthenticate As String)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; WebAuthenticationFailureAuditEvent(System::String ^ message, System::Object ^ eventSource, int eventCode, System::String ^ nameToAuthenticate);" />
      <MemberSignature Language="F#" Value="new System.Web.Management.WebAuthenticationFailureAuditEvent : string * obj * int * string -&gt; System.Web.Management.WebAuthenticationFailureAuditEvent" Usage="new System.Web.Management.WebAuthenticationFailureAuditEvent (message, eventSource, eventCode, nameToAuthenticate)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="eventSource" Type="System.Object" />
        <Parameter Name="eventCode" Type="System.Int32" />
        <Parameter Name="nameToAuthenticate" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">Opis zdarzenia.</param>
        <param name="eventSource">Obiekt, który jest źródłem zdarzeń.</param>
        <param name="eventCode">
          <see cref="T:System.Web.Management.WebEventCodes" /> Wartość skojarzona ze zdarzeniem.</param>
        <param name="nameToAuthenticate">Nazwa użytkownika do uwierzytelniania.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Management.WebAuthenticationFailureAuditEvent" /> klas z parametrami określonego zdarzenia.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Management.WebAuthenticationFailureAuditEvent.%23ctor%2A> Konstruktor nie jest przeznaczona do użycia bezpośrednio w kodzie. Jest ona wywoływana przez platformę ASP.NET. Możesz wywołać <xref:System.Web.Management.WebAuthenticationFailureAuditEvent.%23ctor%2A> Konstruktor podczas wyprowadzania z <xref:System.Web.Management.WebAuthenticationFailureAuditEvent> klasy.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje sposób dostosowywania tego konstruktora.  
  
 [!code-csharp[System.Web.Management.WebAuthenticationFailureAuditEvent#2](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.management.WebAuthenticationFailureAuditEvent/CS/WebAuthenticationFailureAuditEvent.cs#2)]
 [!code-vb[System.Web.Management.WebAuthenticationFailureAuditEvent#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.management.WebAuthenticationFailureAuditEvent/VB/WebAuthenticationFailureAuditEvent.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected internal WebAuthenticationFailureAuditEvent (string message, object eventSource, int eventCode, int eventDetailCode, string nameToAuthenticate);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig specialname rtspecialname instance void .ctor(string message, object eventSource, int32 eventCode, int32 eventDetailCode, string nameToAuthenticate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Management.WebAuthenticationFailureAuditEvent.#ctor(System.String,System.Object,System.Int32,System.Int32,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Sub New (message As String, eventSource As Object, eventCode As Integer, eventDetailCode As Integer, nameToAuthenticate As String)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; WebAuthenticationFailureAuditEvent(System::String ^ message, System::Object ^ eventSource, int eventCode, int eventDetailCode, System::String ^ nameToAuthenticate);" />
      <MemberSignature Language="F#" Value="new System.Web.Management.WebAuthenticationFailureAuditEvent : string * obj * int * int * string -&gt; System.Web.Management.WebAuthenticationFailureAuditEvent" Usage="new System.Web.Management.WebAuthenticationFailureAuditEvent (message, eventSource, eventCode, eventDetailCode, nameToAuthenticate)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="eventSource" Type="System.Object" />
        <Parameter Name="eventCode" Type="System.Int32" />
        <Parameter Name="eventDetailCode" Type="System.Int32" />
        <Parameter Name="nameToAuthenticate" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">Opis zdarzenia.</param>
        <param name="eventSource">Obiekt, który jest źródłem zdarzeń.</param>
        <param name="eventCode">Kod skojarzony ze zdarzeniem. Podczas implementowania zdarzenia niestandardowego kodu zdarzenia musi być większa niż <see cref="F:System.Web.Management.WebEventCodes.WebExtendedBase" />.</param>
        <param name="eventDetailCode">
          <see cref="T:System.Web.Management.WebEventCodes" /> Wartość, która określa szczegółowe identyfikator zdarzenia.</param>
        <param name="nameToAuthenticate">Nazwa użytkownika do uwierzytelniania.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Management.WebAuthenticationFailureAuditEvent" /> klas z parametrami określonego zdarzenia.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Management.WebAuthenticationFailureAuditEvent.%23ctor%2A> Konstruktor nie jest przeznaczona do użycia bezpośrednio w kodzie. Jest ona wywoływana przez platformę ASP.NET. Możesz wywołać <xref:System.Web.Management.WebAuthenticationFailureAuditEvent.%23ctor%2A> Konstruktor podczas wyprowadzania z <xref:System.Web.Management.WebAuthenticationFailureAuditEvent> klasy.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje sposób dostosowywania tego konstruktora.  
  
 [!code-csharp[System.Web.Management.WebAuthenticationFailureAuditEvent#3](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.management.WebAuthenticationFailureAuditEvent/CS/WebAuthenticationFailureAuditEvent.cs#3)]
 [!code-vb[System.Web.Management.WebAuthenticationFailureAuditEvent#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.management.WebAuthenticationFailureAuditEvent/VB/WebAuthenticationFailureAuditEvent.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NameToAuthenticate">
      <MemberSignature Language="C#" Value="public string NameToAuthenticate { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string NameToAuthenticate" />
      <MemberSignature Language="DocId" Value="P:System.Web.Management.WebAuthenticationFailureAuditEvent.NameToAuthenticate" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NameToAuthenticate As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ NameToAuthenticate { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.NameToAuthenticate : string" Usage="System.Web.Management.WebAuthenticationFailureAuditEvent.NameToAuthenticate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera nazwę użytkownika do uwierzytelniania.</summary>
        <value>Nazwa użytkownika do uwierzytelniania.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Tylko do inspekcji sukcesów powinien zawierać nazwę uwierzytelnionego użytkownika. Inspekcje nie powinien zawierać nazwę użytkownika, ponieważ są one zazwyczaj wynikiem odszyfrowanie nie powiodło się lub sprawdzania poprawności.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje sposób użycia <xref:System.Web.Management.WebAuthenticationFailureAuditEvent.NameToAuthenticate%2A> właściwości.  
  
 [!code-csharp[System.Web.Management.WebAuthenticationFailureAuditEvent#3](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.management.WebAuthenticationFailureAuditEvent/CS/WebAuthenticationFailureAuditEvent.cs#3)]
 [!code-vb[System.Web.Management.WebAuthenticationFailureAuditEvent#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.management.WebAuthenticationFailureAuditEvent/VB/WebAuthenticationFailureAuditEvent.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Management.WebAuthenticationFailureAuditEvent" />
        <altmember cref="T:System.Web.Management.WebEventCodes" />
      </Docs>
    </Member>
  </Members>
</Type>