<Type Name="Utf8Parser" FullName="System.Buffers.Text.Utf8Parser">
  <Metadata><Meta Name="ms.openlocfilehash" Value="5d78780112fafda36f9e5cefd47832fcb7b0879e" /><Meta Name="ms.sourcegitcommit" Value="cfc0e4215fd0d259582ada2141878befd7c3c8c6" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="07/12/2019" /><Meta Name="ms.locfileid" Value="67854584" /></Metadata><TypeSignature Language="C#" Value="public static class Utf8Parser" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit Utf8Parser extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Buffers.Text.Utf8Parser" />
  <TypeSignature Language="VB.NET" Value="Public Class Utf8Parser" />
  <TypeSignature Language="C++ CLI" Value="public ref class Utf8Parser abstract sealed" />
  <TypeSignature Language="F#" Value="type Utf8Parser = class" />
  <AssemblyInfo>
    <AssemblyName>System.Memory</AssemblyName>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="bcb93-101">Zawiera metody statyczne służące do analizowania ciągów Utf8 do typowych typów danych.</span><span class="sxs-lookup"><span data-stu-id="bcb93-101">Provides static methods to parse Utf8 strings to common data types.</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (ReadOnlySpan&lt;byte&gt; source, out bool value, out int bytesConsumed, char standardFormat = '\0');" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; source, [out] bool&amp; value, [out] int32&amp; bytesConsumed, char standardFormat) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.Text.Utf8Parser.TryParse(System.ReadOnlySpan{System.Byte},System.Boolean@,System.Int32@,System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (source As ReadOnlySpan(Of Byte), ByRef value As Boolean, ByRef bytesConsumed As Integer, Optional standardFormat As Char = '\0') As Boolean" />
      <MemberSignature Language="F#" Value="static member TryParse : ReadOnlySpan&lt;byte&gt; *  *  * char -&gt; bool" Usage="System.Buffers.Text.Utf8Parser.TryParse (source, value, bytesConsumed, standardFormat)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="value" Type="System.Boolean" RefType="out" />
        <Parameter Name="bytesConsumed" Type="System.Int32" RefType="out" />
        <Parameter Name="standardFormat" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="bcb93-102">Ciąg Utf8 do analizy.</span><span class="sxs-lookup"><span data-stu-id="bcb93-102">The Utf8 string to parse.</span></span></param>
        <param name="value"><span data-ttu-id="bcb93-103">Gdy metoda zwróci wartość, zawiera wartość pochodzącą z analizy <paramref name="source" />, jeśli operacja analizowania zakończyła się pomyślnie.</span><span class="sxs-lookup"><span data-stu-id="bcb93-103">When the method returns, contains the value parsed from <paramref name="source" />, if the parsing operation succeeded.</span></span></param>
        <param name="bytesConsumed"><span data-ttu-id="bcb93-104">Jeśli operacji analizowania zakończyło się pomyślnie, zawiera długość w bajtach przeanalizowany podciągu w przypadku zwrotu metody.</span><span class="sxs-lookup"><span data-stu-id="bcb93-104">If the parsing operation was successful, contains the length in bytes of the parsed substring when the method returns.</span></span> <span data-ttu-id="bcb93-105">Jeśli metoda nie powiedzie się, <paramref name="bytesConsumed" /> jest równa 0.</span><span class="sxs-lookup"><span data-stu-id="bcb93-105">If the method fails, <paramref name="bytesConsumed" /> is set to 0.</span></span></param>
        <param name="standardFormat"><span data-ttu-id="bcb93-106">Oczekiwany format ciągu Utf8.</span><span class="sxs-lookup"><span data-stu-id="bcb93-106">The expected format of the Utf8 string.</span></span></param>
        <summary><span data-ttu-id="bcb93-107">Analizuje <see cref="T:System.Boolean" /> na początku ciągu Utf8.</span><span class="sxs-lookup"><span data-stu-id="bcb93-107">Parses a <see cref="T:System.Boolean" /> at the start of a Utf8 string.</span></span></summary>
        <returns><span data-ttu-id="bcb93-108"><see langword="true" /> w celu osiągnięcia sukcesu; <see langword="false" /> Jeśli ciąg nie jest syntaktycznie prawidłowy lub przepełnienie lub niedopełnienie wystąpił.</span><span class="sxs-lookup"><span data-stu-id="bcb93-108"><see langword="true" /> for success; <see langword="false" /> if the string was not syntactically valid or an overflow or underflow occurred.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

<span data-ttu-id="bcb93-109">Obsługiwane formaty:</span><span class="sxs-lookup"><span data-stu-id="bcb93-109">Formats supported:</span></span> 

|<span data-ttu-id="bcb93-110">Ciąg formatu</span><span class="sxs-lookup"><span data-stu-id="bcb93-110">Format string</span></span>|<span data-ttu-id="bcb93-111">Przykład oczekiwanego formatu.</span><span class="sxs-lookup"><span data-stu-id="bcb93-111">Example expected format</span></span>|
|--|--|
|<span data-ttu-id="bcb93-112">G (ustawienie domyślne)</span><span class="sxs-lookup"><span data-stu-id="bcb93-112">G (default)</span></span>|<span data-ttu-id="bcb93-113">PRAWDA/FAŁSZ</span><span class="sxs-lookup"><span data-stu-id="bcb93-113">True/False</span></span>|
|<span data-ttu-id="bcb93-114">l</span><span class="sxs-lookup"><span data-stu-id="bcb93-114">l</span></span>|<span data-ttu-id="bcb93-115">PRAWDA/FAŁSZ</span><span class="sxs-lookup"><span data-stu-id="bcb93-115">true/false</span></span>|

]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (ReadOnlySpan&lt;byte&gt; source, out byte value, out int bytesConsumed, char standardFormat = '\0');" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; source, [out] unsigned int8&amp; value, [out] int32&amp; bytesConsumed, char standardFormat) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.Text.Utf8Parser.TryParse(System.ReadOnlySpan{System.Byte},System.Byte@,System.Int32@,System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (source As ReadOnlySpan(Of Byte), ByRef value As Byte, ByRef bytesConsumed As Integer, Optional standardFormat As Char = '\0') As Boolean" />
      <MemberSignature Language="F#" Value="static member TryParse : ReadOnlySpan&lt;byte&gt; *  *  * char -&gt; bool" Usage="System.Buffers.Text.Utf8Parser.TryParse (source, value, bytesConsumed, standardFormat)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="value" Type="System.Byte" RefType="out" />
        <Parameter Name="bytesConsumed" Type="System.Int32" RefType="out" />
        <Parameter Name="standardFormat" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="bcb93-116">Ciąg Utf8 do analizy.</span><span class="sxs-lookup"><span data-stu-id="bcb93-116">The Utf8 string to parse.</span></span></param>
        <param name="value"><span data-ttu-id="bcb93-117">Gdy metoda zwróci wartość, zawiera wartość pochodzącą z analizy <paramref name="source" />, jeśli operacja analizowania zakończyła się pomyślnie.</span><span class="sxs-lookup"><span data-stu-id="bcb93-117">When the method returns, contains the value parsed from <paramref name="source" />, if the parsing operation succeeded.</span></span></param>
        <param name="bytesConsumed"><span data-ttu-id="bcb93-118">Jeśli operacji analizowania zakończyło się pomyślnie, zawiera długość w bajtach przeanalizowany podciągu w przypadku zwrotu metody.</span><span class="sxs-lookup"><span data-stu-id="bcb93-118">If the parsing operation was successful, contains the length in bytes of the parsed substring when the method returns.</span></span> <span data-ttu-id="bcb93-119">Jeśli metoda nie powiedzie się, <paramref name="bytesConsumed" /> jest równa 0.</span><span class="sxs-lookup"><span data-stu-id="bcb93-119">If the method fails, <paramref name="bytesConsumed" /> is set to 0.</span></span></param>
        <param name="standardFormat"><span data-ttu-id="bcb93-120">Oczekiwany format ciągu Utf8.</span><span class="sxs-lookup"><span data-stu-id="bcb93-120">The expected format of the Utf8 string.</span></span></param>
        <summary><span data-ttu-id="bcb93-121">Analizuje <see cref="T:System.Byte" /> na początku ciągu Utf8.</span><span class="sxs-lookup"><span data-stu-id="bcb93-121">Parses a <see cref="T:System.Byte" /> at the start of a Utf8 string.</span></span></summary>
        <returns><span data-ttu-id="bcb93-122"><see langword="true" /> w celu osiągnięcia sukcesu; <see langword="false" /> Jeśli ciąg nie jest syntaktycznie prawidłowy lub przepełnienie lub niedopełnienie wystąpił.</span><span class="sxs-lookup"><span data-stu-id="bcb93-122"><see langword="true" /> for success; <see langword="false" /> if the string was not syntactically valid or an overflow or underflow occurred.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

<span data-ttu-id="bcb93-123">Obsługiwane formaty:</span><span class="sxs-lookup"><span data-stu-id="bcb93-123">Formats supported:</span></span> 

|<span data-ttu-id="bcb93-124">Ciąg formatu</span><span class="sxs-lookup"><span data-stu-id="bcb93-124">Format string</span></span>|<span data-ttu-id="bcb93-125">Przykład oczekiwanego formatu.</span><span class="sxs-lookup"><span data-stu-id="bcb93-125">Example expected format</span></span>|
|--|--|
|<span data-ttu-id="bcb93-126">G/g (ustawienie domyślne)</span><span class="sxs-lookup"><span data-stu-id="bcb93-126">G/g (default)</span></span>| |
|<span data-ttu-id="bcb93-127">D/d</span><span class="sxs-lookup"><span data-stu-id="bcb93-127">D/d</span></span>|<span data-ttu-id="bcb93-128">122</span><span class="sxs-lookup"><span data-stu-id="bcb93-128">122</span></span>|
|<span data-ttu-id="bcb93-129">N/n</span><span class="sxs-lookup"><span data-stu-id="bcb93-129">N/n</span></span>|<span data-ttu-id="bcb93-130">122</span><span class="sxs-lookup"><span data-stu-id="bcb93-130">122</span></span>|       
|<span data-ttu-id="bcb93-131">X/x</span><span class="sxs-lookup"><span data-stu-id="bcb93-131">X/x</span></span>|<span data-ttu-id="bcb93-132">7a</span><span class="sxs-lookup"><span data-stu-id="bcb93-132">7a</span></span>|

]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (ReadOnlySpan&lt;byte&gt; source, out DateTime value, out int bytesConsumed, char standardFormat = '\0');" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; source, [out] valuetype System.DateTime&amp; value, [out] int32&amp; bytesConsumed, char standardFormat) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.Text.Utf8Parser.TryParse(System.ReadOnlySpan{System.Byte},System.DateTime@,System.Int32@,System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (source As ReadOnlySpan(Of Byte), ByRef value As DateTime, ByRef bytesConsumed As Integer, Optional standardFormat As Char = '\0') As Boolean" />
      <MemberSignature Language="F#" Value="static member TryParse : ReadOnlySpan&lt;byte&gt; *  *  * char -&gt; bool" Usage="System.Buffers.Text.Utf8Parser.TryParse (source, value, bytesConsumed, standardFormat)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="value" Type="System.DateTime" RefType="out" />
        <Parameter Name="bytesConsumed" Type="System.Int32" RefType="out" />
        <Parameter Name="standardFormat" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="bcb93-133">Ciąg Utf8 do analizy.</span><span class="sxs-lookup"><span data-stu-id="bcb93-133">The Utf8 string to parse.</span></span></param>
        <param name="value"><span data-ttu-id="bcb93-134">Gdy metoda zwróci wartość, zawiera wartość pochodzącą z analizy <paramref name="source" />, jeśli operacja analizowania zakończyła się pomyślnie.</span><span class="sxs-lookup"><span data-stu-id="bcb93-134">When the method returns, contains the value parsed from <paramref name="source" />, if the parsing operation succeeded.</span></span></param>
        <param name="bytesConsumed"><span data-ttu-id="bcb93-135">Jeśli operacji analizowania zakończyło się pomyślnie, zawiera długość w bajtach przeanalizowany podciągu w przypadku zwrotu metody.</span><span class="sxs-lookup"><span data-stu-id="bcb93-135">If the parsing operation was successful, contains the length in bytes of the parsed substring when the method returns.</span></span> <span data-ttu-id="bcb93-136">Jeśli metoda nie powiedzie się, <paramref name="bytesConsumed" /> jest równa 0.</span><span class="sxs-lookup"><span data-stu-id="bcb93-136">If the method fails, <paramref name="bytesConsumed" /> is set to 0.</span></span></param>
        <param name="standardFormat"><span data-ttu-id="bcb93-137">Oczekiwany format ciągu Utf8.</span><span class="sxs-lookup"><span data-stu-id="bcb93-137">The expected format of the Utf8 string.</span></span></param>
        <summary><span data-ttu-id="bcb93-138">Analizuje <see cref="T:System.DateTime" /> na początku ciągu Utf8.</span><span class="sxs-lookup"><span data-stu-id="bcb93-138">Parses a <see cref="T:System.DateTime" /> at the start of a Utf8 string.</span></span></summary>
        <returns><span data-ttu-id="bcb93-139"><see langword="true" /> w celu osiągnięcia sukcesu; <see langword="false" /> Jeśli ciąg nie jest syntaktycznie prawidłowy lub przepełnienie lub niedopełnienie wystąpił.</span><span class="sxs-lookup"><span data-stu-id="bcb93-139"><see langword="true" /> for success; <see langword="false" /> if the string was not syntactically valid or an overflow or underflow occurred.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

<span data-ttu-id="bcb93-140">Obsługiwane formaty:</span><span class="sxs-lookup"><span data-stu-id="bcb93-140">Formats supported:</span></span>

|<span data-ttu-id="bcb93-141">Ciąg formatu</span><span class="sxs-lookup"><span data-stu-id="bcb93-141">Format string</span></span>|<span data-ttu-id="bcb93-142">Przykład oczekiwanego formatu.</span><span class="sxs-lookup"><span data-stu-id="bcb93-142">Example expected format</span></span>|<span data-ttu-id="bcb93-143">Komentarze</span><span class="sxs-lookup"><span data-stu-id="bcb93-143">Comments</span></span>|
|--|--|--|
|<span data-ttu-id="bcb93-144">G (ustawienie domyślne)</span><span class="sxs-lookup"><span data-stu-id="bcb93-144">G  (default)</span></span>|<span data-ttu-id="bcb93-145">05/25/2017 10:30:15</span><span class="sxs-lookup"><span data-stu-id="bcb93-145">05/25/2017 10:30:15</span></span>| |
|<span data-ttu-id="bcb93-146">R</span><span class="sxs-lookup"><span data-stu-id="bcb93-146">R</span></span>|<span data-ttu-id="bcb93-147">Wt 03 stycznia 2017 r. 08:08:05 GMT</span><span class="sxs-lookup"><span data-stu-id="bcb93-147">Tue, 03 Jan 2017 08:08:05 GMT</span></span>|<span data-ttu-id="bcb93-148">(RFC 1123)</span><span class="sxs-lookup"><span data-stu-id="bcb93-148">(RFC 1123)</span></span>|
|<span data-ttu-id="bcb93-149">l</span><span class="sxs-lookup"><span data-stu-id="bcb93-149">l</span></span>|<span data-ttu-id="bcb93-150">Wt 03 stycznia 2017 r. 08:08:05 gmt</span><span class="sxs-lookup"><span data-stu-id="bcb93-150">tue, 03 jan 2017 08:08:05 gmt</span></span>|<span data-ttu-id="bcb93-151">(Małe RFC 1123)</span><span class="sxs-lookup"><span data-stu-id="bcb93-151">(Lowercase RFC 1123)</span></span>|
|<span data-ttu-id="bcb93-152">O</span><span class="sxs-lookup"><span data-stu-id="bcb93-152">O</span></span>|<span data-ttu-id="bcb93-153">2017-06-12T05:30:45.7680000-07:00</span><span class="sxs-lookup"><span data-stu-id="bcb93-153">2017-06-12T05:30:45.7680000-07:00</span></span>|<span data-ttu-id="bcb93-154">(Wysyłanych)</span><span class="sxs-lookup"><span data-stu-id="bcb93-154">(Round-trippable)</span></span>|

]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (ReadOnlySpan&lt;byte&gt; source, out DateTimeOffset value, out int bytesConsumed, char standardFormat = '\0');" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; source, [out] valuetype System.DateTimeOffset&amp; value, [out] int32&amp; bytesConsumed, char standardFormat) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.Text.Utf8Parser.TryParse(System.ReadOnlySpan{System.Byte},System.DateTimeOffset@,System.Int32@,System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (source As ReadOnlySpan(Of Byte), ByRef value As DateTimeOffset, ByRef bytesConsumed As Integer, Optional standardFormat As Char = '\0') As Boolean" />
      <MemberSignature Language="F#" Value="static member TryParse : ReadOnlySpan&lt;byte&gt; *  *  * char -&gt; bool" Usage="System.Buffers.Text.Utf8Parser.TryParse (source, value, bytesConsumed, standardFormat)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="value" Type="System.DateTimeOffset" RefType="out" />
        <Parameter Name="bytesConsumed" Type="System.Int32" RefType="out" />
        <Parameter Name="standardFormat" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="bcb93-155">Ciąg Utf8 do analizy.</span><span class="sxs-lookup"><span data-stu-id="bcb93-155">The Utf8 string to parse.</span></span></param>
        <param name="value"><span data-ttu-id="bcb93-156">Gdy metoda zwróci wartość, zawiera wartość pochodzącą z analizy <paramref name="source" />, jeśli operacja analizowania zakończyła się pomyślnie.</span><span class="sxs-lookup"><span data-stu-id="bcb93-156">When the method returns, contains the value parsed from <paramref name="source" />, if the parsing operation succeeded.</span></span></param>
        <param name="bytesConsumed"><span data-ttu-id="bcb93-157">Jeśli operacji analizowania zakończyło się pomyślnie, zawiera długość w bajtach przeanalizowany podciągu w przypadku zwrotu metody.</span><span class="sxs-lookup"><span data-stu-id="bcb93-157">If the parsing operation was successful, contains the length in bytes of the parsed substring when the method returns.</span></span> <span data-ttu-id="bcb93-158">Jeśli metoda nie powiedzie się, <paramref name="bytesConsumed" /> jest równa 0.</span><span class="sxs-lookup"><span data-stu-id="bcb93-158">If the method fails, <paramref name="bytesConsumed" /> is set to 0.</span></span></param>
        <param name="standardFormat"><span data-ttu-id="bcb93-159">Oczekiwany format ciągu Utf8.</span><span class="sxs-lookup"><span data-stu-id="bcb93-159">The expected format of the Utf8 string.</span></span></param>
        <summary><span data-ttu-id="bcb93-160">Analizuje <see cref="T:System.DateTimeOffset" /> na początku ciągu Utf8.</span><span class="sxs-lookup"><span data-stu-id="bcb93-160">Parses a <see cref="T:System.DateTimeOffset" /> at the start of a Utf8 string.</span></span></summary>
        <returns><span data-ttu-id="bcb93-161"><see langword="true" /> w celu osiągnięcia sukcesu; <see langword="false" /> Jeśli ciąg nie jest syntaktycznie prawidłowy lub przepełnienie lub niedopełnienie wystąpił.</span><span class="sxs-lookup"><span data-stu-id="bcb93-161"><see langword="true" /> for success; <see langword="false" /> if the string was not syntactically valid or an overflow or underflow occurred.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

<span data-ttu-id="bcb93-162">Obsługiwane formaty:</span><span class="sxs-lookup"><span data-stu-id="bcb93-162">Formats supported:</span></span>

|<span data-ttu-id="bcb93-163">Ciąg formatu</span><span class="sxs-lookup"><span data-stu-id="bcb93-163">Format string</span></span>|<span data-ttu-id="bcb93-164">Przykład oczekiwanego formatu.</span><span class="sxs-lookup"><span data-stu-id="bcb93-164">Example expected format</span></span>|<span data-ttu-id="bcb93-165">Komentarze</span><span class="sxs-lookup"><span data-stu-id="bcb93-165">Comments</span></span>|
|--|--|--|
|<span data-ttu-id="bcb93-166">G (ustawienie domyślne)</span><span class="sxs-lookup"><span data-stu-id="bcb93-166">G  (default)</span></span>|<span data-ttu-id="bcb93-167">05/25/2017 10:30:15</span><span class="sxs-lookup"><span data-stu-id="bcb93-167">05/25/2017 10:30:15</span></span>| |
|<span data-ttu-id="bcb93-168">R</span><span class="sxs-lookup"><span data-stu-id="bcb93-168">R</span></span>|<span data-ttu-id="bcb93-169">Wt 03 stycznia 2017 r. 08:08:05 GMT</span><span class="sxs-lookup"><span data-stu-id="bcb93-169">Tue, 03 Jan 2017 08:08:05 GMT</span></span>|<span data-ttu-id="bcb93-170">(RFC 1123)</span><span class="sxs-lookup"><span data-stu-id="bcb93-170">(RFC 1123)</span></span>|
|<span data-ttu-id="bcb93-171">l</span><span class="sxs-lookup"><span data-stu-id="bcb93-171">l</span></span>|<span data-ttu-id="bcb93-172">Wt 03 stycznia 2017 r. 08:08:05 gmt</span><span class="sxs-lookup"><span data-stu-id="bcb93-172">tue, 03 jan 2017 08:08:05 gmt</span></span>|<span data-ttu-id="bcb93-173">(Małe RFC 1123)</span><span class="sxs-lookup"><span data-stu-id="bcb93-173">(Lowercase RFC 1123)</span></span>|
|<span data-ttu-id="bcb93-174">O</span><span class="sxs-lookup"><span data-stu-id="bcb93-174">O</span></span>|<span data-ttu-id="bcb93-175">2017-06-12T05:30:45.7680000-07:00</span><span class="sxs-lookup"><span data-stu-id="bcb93-175">2017-06-12T05:30:45.7680000-07:00</span></span>|<span data-ttu-id="bcb93-176">(Wysyłanych)</span><span class="sxs-lookup"><span data-stu-id="bcb93-176">(Round-trippable)</span></span>|

]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (ReadOnlySpan&lt;byte&gt; source, out decimal value, out int bytesConsumed, char standardFormat = '\0');" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; source, [out] valuetype System.Decimal&amp; value, [out] int32&amp; bytesConsumed, char standardFormat) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.Text.Utf8Parser.TryParse(System.ReadOnlySpan{System.Byte},System.Decimal@,System.Int32@,System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (source As ReadOnlySpan(Of Byte), ByRef value As Decimal, ByRef bytesConsumed As Integer, Optional standardFormat As Char = '\0') As Boolean" />
      <MemberSignature Language="F#" Value="static member TryParse : ReadOnlySpan&lt;byte&gt; *  *  * char -&gt; bool" Usage="System.Buffers.Text.Utf8Parser.TryParse (source, value, bytesConsumed, standardFormat)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="value" Type="System.Decimal" RefType="out" />
        <Parameter Name="bytesConsumed" Type="System.Int32" RefType="out" />
        <Parameter Name="standardFormat" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="bcb93-177">Ciąg Utf8 do analizy.</span><span class="sxs-lookup"><span data-stu-id="bcb93-177">The Utf8 string to parse.</span></span></param>
        <param name="value"><span data-ttu-id="bcb93-178">Gdy metoda zwróci wartość, zawiera wartość pochodzącą z analizy <paramref name="source" />, jeśli operacja analizowania zakończyła się pomyślnie.</span><span class="sxs-lookup"><span data-stu-id="bcb93-178">When the method returns, contains the value parsed from <paramref name="source" />, if the parsing operation succeeded.</span></span></param>
        <param name="bytesConsumed"><span data-ttu-id="bcb93-179">Jeśli operacji analizowania zakończyło się pomyślnie, zawiera długość w bajtach przeanalizowany podciągu w przypadku zwrotu metody.</span><span class="sxs-lookup"><span data-stu-id="bcb93-179">If the parsing operation was successful, contains the length in bytes of the parsed substring when the method returns.</span></span> <span data-ttu-id="bcb93-180">Jeśli metoda nie powiedzie się, <paramref name="bytesConsumed" /> jest równa 0.</span><span class="sxs-lookup"><span data-stu-id="bcb93-180">If the method fails, <paramref name="bytesConsumed" /> is set to 0.</span></span></param>
        <param name="standardFormat"><span data-ttu-id="bcb93-181">Oczekiwany format ciągu Utf8.</span><span class="sxs-lookup"><span data-stu-id="bcb93-181">The expected format of the Utf8 string.</span></span></param>
        <summary><span data-ttu-id="bcb93-182">Analizuje <see cref="T:System.Decimal" /> na początku ciągu Utf8.</span><span class="sxs-lookup"><span data-stu-id="bcb93-182">Parses a <see cref="T:System.Decimal" /> at the start of a Utf8 string.</span></span></summary>
        <returns><span data-ttu-id="bcb93-183"><see langword="true" /> w celu osiągnięcia sukcesu; <see langword="false" /> Jeśli ciąg nie jest syntaktycznie prawidłowy lub przepełnienie lub niedopełnienie wystąpił.</span><span class="sxs-lookup"><span data-stu-id="bcb93-183"><see langword="true" /> for success; <see langword="false" /> if the string was not syntactically valid or an overflow or underflow occurred.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

<span data-ttu-id="bcb93-184">Obsługiwane formaty:</span><span class="sxs-lookup"><span data-stu-id="bcb93-184">Formats supported:</span></span>

|<span data-ttu-id="bcb93-185">Ciąg formatu</span><span class="sxs-lookup"><span data-stu-id="bcb93-185">Format string</span></span>|<span data-ttu-id="bcb93-186">Przykład oczekiwanego formatu.</span><span class="sxs-lookup"><span data-stu-id="bcb93-186">Example expected format</span></span>|<span data-ttu-id="bcb93-187">Komentarze</span><span class="sxs-lookup"><span data-stu-id="bcb93-187">Comments</span></span>|
|--|--|--|
|<span data-ttu-id="bcb93-188">G/g (ustawienie domyślne)</span><span class="sxs-lookup"><span data-stu-id="bcb93-188">G/g  (default)</span></span>| |  
|<span data-ttu-id="bcb93-189">F/f</span><span class="sxs-lookup"><span data-stu-id="bcb93-189">F/f</span></span>|<span data-ttu-id="bcb93-190">12.45</span><span class="sxs-lookup"><span data-stu-id="bcb93-190">12.45</span></span>|<span data-ttu-id="bcb93-191">Stały punktu</span><span class="sxs-lookup"><span data-stu-id="bcb93-191">Fixed point</span></span>|
|<span data-ttu-id="bcb93-192">E/e</span><span class="sxs-lookup"><span data-stu-id="bcb93-192">E/e</span></span>|<span data-ttu-id="bcb93-193">1.245000e1</span><span class="sxs-lookup"><span data-stu-id="bcb93-193">1.245000e1</span></span>|<span data-ttu-id="bcb93-194">Wykładnicza</span><span class="sxs-lookup"><span data-stu-id="bcb93-194">Exponential</span></span>|

]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (ReadOnlySpan&lt;byte&gt; source, out double value, out int bytesConsumed, char standardFormat = '\0');" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; source, [out] float64&amp; value, [out] int32&amp; bytesConsumed, char standardFormat) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.Text.Utf8Parser.TryParse(System.ReadOnlySpan{System.Byte},System.Double@,System.Int32@,System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (source As ReadOnlySpan(Of Byte), ByRef value As Double, ByRef bytesConsumed As Integer, Optional standardFormat As Char = '\0') As Boolean" />
      <MemberSignature Language="F#" Value="static member TryParse : ReadOnlySpan&lt;byte&gt; *  *  * char -&gt; bool" Usage="System.Buffers.Text.Utf8Parser.TryParse (source, value, bytesConsumed, standardFormat)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="value" Type="System.Double" RefType="out" />
        <Parameter Name="bytesConsumed" Type="System.Int32" RefType="out" />
        <Parameter Name="standardFormat" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="bcb93-195">Ciąg Utf8 do analizy.</span><span class="sxs-lookup"><span data-stu-id="bcb93-195">The Utf8 string to parse.</span></span></param>
        <param name="value"><span data-ttu-id="bcb93-196">Gdy metoda zwróci wartość, zawiera wartość pochodzącą z analizy <paramref name="source" />, jeśli operacja analizowania zakończyła się pomyślnie.</span><span class="sxs-lookup"><span data-stu-id="bcb93-196">When the method returns, contains the value parsed from <paramref name="source" />, if the parsing operation succeeded.</span></span></param>
        <param name="bytesConsumed"><span data-ttu-id="bcb93-197">Jeśli operacji analizowania zakończyło się pomyślnie, zawiera długość w bajtach przeanalizowany podciągu w przypadku zwrotu metody.</span><span class="sxs-lookup"><span data-stu-id="bcb93-197">If the parsing operation was successful, contains the length in bytes of the parsed substring when the method returns.</span></span> <span data-ttu-id="bcb93-198">Jeśli metoda nie powiedzie się, <paramref name="bytesConsumed" /> jest równa 0.</span><span class="sxs-lookup"><span data-stu-id="bcb93-198">If the method fails, <paramref name="bytesConsumed" /> is set to 0.</span></span></param>
        <param name="standardFormat"><span data-ttu-id="bcb93-199">Oczekiwany format ciągu Utf8.</span><span class="sxs-lookup"><span data-stu-id="bcb93-199">The expected format of the Utf8 string.</span></span></param>
        <summary><span data-ttu-id="bcb93-200">Analizuje <see cref="T:System.Double" /> na początku ciągu Utf8.</span><span class="sxs-lookup"><span data-stu-id="bcb93-200">Parses a <see cref="T:System.Double" /> at the start of a Utf8 string.</span></span></summary>
        <returns><span data-ttu-id="bcb93-201"><see langword="true" /> w celu osiągnięcia sukcesu; <see langword="false" /> Jeśli ciąg nie jest syntaktycznie prawidłowy lub przepełnienie lub niedopełnienie wystąpił.</span><span class="sxs-lookup"><span data-stu-id="bcb93-201"><see langword="true" /> for success; <see langword="false" /> if the string was not syntactically valid or an overflow or underflow occurred.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

<span data-ttu-id="bcb93-202">Obsługiwane formaty:</span><span class="sxs-lookup"><span data-stu-id="bcb93-202">Formats supported:</span></span>

|<span data-ttu-id="bcb93-203">Ciąg formatu</span><span class="sxs-lookup"><span data-stu-id="bcb93-203">Format string</span></span>|<span data-ttu-id="bcb93-204">Przykład oczekiwanego formatu.</span><span class="sxs-lookup"><span data-stu-id="bcb93-204">Example expected format</span></span>|<span data-ttu-id="bcb93-205">Komentarze</span><span class="sxs-lookup"><span data-stu-id="bcb93-205">Comments</span></span>|
|--|--|--|
|<span data-ttu-id="bcb93-206">G/g (ustawienie domyślne)</span><span class="sxs-lookup"><span data-stu-id="bcb93-206">G/g  (default)</span></span>| |  
|<span data-ttu-id="bcb93-207">F/f</span><span class="sxs-lookup"><span data-stu-id="bcb93-207">F/f</span></span>|<span data-ttu-id="bcb93-208">12.45</span><span class="sxs-lookup"><span data-stu-id="bcb93-208">12.45</span></span>|<span data-ttu-id="bcb93-209">Stały punktu</span><span class="sxs-lookup"><span data-stu-id="bcb93-209">Fixed point</span></span>|
|<span data-ttu-id="bcb93-210">E/e</span><span class="sxs-lookup"><span data-stu-id="bcb93-210">E/e</span></span>|<span data-ttu-id="bcb93-211">1.245000e1</span><span class="sxs-lookup"><span data-stu-id="bcb93-211">1.245000e1</span></span>|<span data-ttu-id="bcb93-212">Wykładnicza</span><span class="sxs-lookup"><span data-stu-id="bcb93-212">Exponential</span></span>|

]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (ReadOnlySpan&lt;byte&gt; source, out Guid value, out int bytesConsumed, char standardFormat = '\0');" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; source, [out] valuetype System.Guid&amp; value, [out] int32&amp; bytesConsumed, char standardFormat) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.Text.Utf8Parser.TryParse(System.ReadOnlySpan{System.Byte},System.Guid@,System.Int32@,System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (source As ReadOnlySpan(Of Byte), ByRef value As Guid, ByRef bytesConsumed As Integer, Optional standardFormat As Char = '\0') As Boolean" />
      <MemberSignature Language="F#" Value="static member TryParse : ReadOnlySpan&lt;byte&gt; *  *  * char -&gt; bool" Usage="System.Buffers.Text.Utf8Parser.TryParse (source, value, bytesConsumed, standardFormat)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="value" Type="System.Guid" RefType="out" />
        <Parameter Name="bytesConsumed" Type="System.Int32" RefType="out" />
        <Parameter Name="standardFormat" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="bcb93-213">Ciąg Utf8 do analizy.</span><span class="sxs-lookup"><span data-stu-id="bcb93-213">The Utf8 string to parse.</span></span></param>
        <param name="value"><span data-ttu-id="bcb93-214">Gdy metoda zwróci wartość, zawiera wartość pochodzącą z analizy <paramref name="source" />, jeśli operacja analizowania zakończyła się pomyślnie.</span><span class="sxs-lookup"><span data-stu-id="bcb93-214">When the method returns, contains the value parsed from <paramref name="source" />, if the parsing operation succeeded.</span></span></param>
        <param name="bytesConsumed"><span data-ttu-id="bcb93-215">Jeśli operacji analizowania zakończyło się pomyślnie, zawiera długość w bajtach przeanalizowany podciągu w przypadku zwrotu metody.</span><span class="sxs-lookup"><span data-stu-id="bcb93-215">If the parsing operation was successful, contains the length in bytes of the parsed substring when the method returns.</span></span> <span data-ttu-id="bcb93-216">Jeśli metoda nie powiedzie się, <paramref name="bytesConsumed" /> jest równa 0.</span><span class="sxs-lookup"><span data-stu-id="bcb93-216">If the method fails, <paramref name="bytesConsumed" /> is set to 0.</span></span></param>
        <param name="standardFormat"><span data-ttu-id="bcb93-217">Oczekiwany format ciągu Utf8.</span><span class="sxs-lookup"><span data-stu-id="bcb93-217">The expected format of the Utf8 string.</span></span></param>
        <summary><span data-ttu-id="bcb93-218">Analizuje <see cref="T:System.Guid" /> na początku ciągu Utf8.</span><span class="sxs-lookup"><span data-stu-id="bcb93-218">Parses a <see cref="T:System.Guid" /> at the start of a Utf8 string.</span></span></summary>
        <returns><span data-ttu-id="bcb93-219"><see langword="true" /> w celu osiągnięcia sukcesu; <see langword="false" /> Jeśli ciąg nie jest syntaktycznie prawidłowy lub przepełnienie lub niedopełnienie wystąpił.</span><span class="sxs-lookup"><span data-stu-id="bcb93-219"><see langword="true" /> for success; <see langword="false" /> if the string was not syntactically valid or an overflow or underflow occurred.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

<span data-ttu-id="bcb93-220">Obsługiwane formaty:</span><span class="sxs-lookup"><span data-stu-id="bcb93-220">Formats supported:</span></span>

|<span data-ttu-id="bcb93-221">Ciąg formatu</span><span class="sxs-lookup"><span data-stu-id="bcb93-221">Format string</span></span>|<span data-ttu-id="bcb93-222">Oczekiwany format</span><span class="sxs-lookup"><span data-stu-id="bcb93-222">Expected format</span></span>|
|--|--|
|<span data-ttu-id="bcb93-223">D (ustawienie domyślne)</span><span class="sxs-lookup"><span data-stu-id="bcb93-223">D (default)</span></span>|<span data-ttu-id="bcb93-224">nnnnnnnn-nnnn-nnnn-nnnn-nnnnnnnnnnnn</span><span class="sxs-lookup"><span data-stu-id="bcb93-224">nnnnnnnn-nnnn-nnnn-nnnn-nnnnnnnnnnnn</span></span>|
|<span data-ttu-id="bcb93-225">B</span><span class="sxs-lookup"><span data-stu-id="bcb93-225">B</span></span>|<span data-ttu-id="bcb93-226">{nnnnnnnn-nnnn-nnnn-nnnn-nnnnnnnnnnnn}</span><span class="sxs-lookup"><span data-stu-id="bcb93-226">{nnnnnnnn-nnnn-nnnn-nnnn-nnnnnnnnnnnn}</span></span>|
|<span data-ttu-id="bcb93-227">P</span><span class="sxs-lookup"><span data-stu-id="bcb93-227">P</span></span>|<span data-ttu-id="bcb93-228">(nnnnnnnn-nnnn-nnnn-nnnn-nnnnnnnnnnnn)</span><span class="sxs-lookup"><span data-stu-id="bcb93-228">(nnnnnnnn-nnnn-nnnn-nnnn-nnnnnnnnnnnn)</span></span>|
|<span data-ttu-id="bcb93-229">N</span><span class="sxs-lookup"><span data-stu-id="bcb93-229">N</span></span>|<span data-ttu-id="bcb93-230">nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn</span><span class="sxs-lookup"><span data-stu-id="bcb93-230">nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn</span></span>|

]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (ReadOnlySpan&lt;byte&gt; source, out short value, out int bytesConsumed, char standardFormat = '\0');" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; source, [out] int16&amp; value, [out] int32&amp; bytesConsumed, char standardFormat) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.Text.Utf8Parser.TryParse(System.ReadOnlySpan{System.Byte},System.Int16@,System.Int32@,System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (source As ReadOnlySpan(Of Byte), ByRef value As Short, ByRef bytesConsumed As Integer, Optional standardFormat As Char = '\0') As Boolean" />
      <MemberSignature Language="F#" Value="static member TryParse : ReadOnlySpan&lt;byte&gt; *  *  * char -&gt; bool" Usage="System.Buffers.Text.Utf8Parser.TryParse (source, value, bytesConsumed, standardFormat)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="value" Type="System.Int16" RefType="out" />
        <Parameter Name="bytesConsumed" Type="System.Int32" RefType="out" />
        <Parameter Name="standardFormat" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="bcb93-231">Ciąg Utf8 do analizy.</span><span class="sxs-lookup"><span data-stu-id="bcb93-231">The Utf8 string to parse.</span></span></param>
        <param name="value"><span data-ttu-id="bcb93-232">Gdy metoda zwróci wartość, zawiera wartość pochodzącą z analizy <paramref name="source" />, jeśli operacja analizowania zakończyła się pomyślnie.</span><span class="sxs-lookup"><span data-stu-id="bcb93-232">When the method returns, contains the value parsed from <paramref name="source" />, if the parsing operation succeeded.</span></span></param>
        <param name="bytesConsumed"><span data-ttu-id="bcb93-233">Jeśli operacji analizowania zakończyło się pomyślnie, zawiera długość w bajtach przeanalizowany podciągu w przypadku zwrotu metody.</span><span class="sxs-lookup"><span data-stu-id="bcb93-233">If the parsing operation was successful, contains the length in bytes of the parsed substring when the method returns.</span></span> <span data-ttu-id="bcb93-234">Jeśli metoda nie powiedzie się, <paramref name="bytesConsumed" /> jest równa 0.</span><span class="sxs-lookup"><span data-stu-id="bcb93-234">If the method fails, <paramref name="bytesConsumed" /> is set to 0.</span></span></param>
        <param name="standardFormat"><span data-ttu-id="bcb93-235">Oczekiwany format ciągu Utf8.</span><span class="sxs-lookup"><span data-stu-id="bcb93-235">The expected format of the Utf8 string.</span></span></param>
        <summary><span data-ttu-id="bcb93-236">Analizuje <see cref="T:System.Int16" /> na początku ciągu Utf8.</span><span class="sxs-lookup"><span data-stu-id="bcb93-236">Parses an <see cref="T:System.Int16" /> at the start of a Utf8 string.</span></span></summary>
        <returns><span data-ttu-id="bcb93-237"><see langword="true" /> w celu osiągnięcia sukcesu; <see langword="false" /> Jeśli ciąg nie jest syntaktycznie prawidłowy lub przepełnienie lub niedopełnienie wystąpił.</span><span class="sxs-lookup"><span data-stu-id="bcb93-237"><see langword="true" /> for success; <see langword="false" /> if the string was not syntactically valid or an overflow or underflow occurred.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

<span data-ttu-id="bcb93-238">Obsługiwane formaty:</span><span class="sxs-lookup"><span data-stu-id="bcb93-238">Formats supported:</span></span>

|<span data-ttu-id="bcb93-239">Ciąg formatu</span><span class="sxs-lookup"><span data-stu-id="bcb93-239">Format string</span></span>|<span data-ttu-id="bcb93-240">Przykład oczekiwanego formatu.</span><span class="sxs-lookup"><span data-stu-id="bcb93-240">Example expected format</span></span>|
|--|--|
|<span data-ttu-id="bcb93-241">G/g (ustawienie domyślne)</span><span class="sxs-lookup"><span data-stu-id="bcb93-241">G/g (default)</span></span>| |
|<span data-ttu-id="bcb93-242">D/d</span><span class="sxs-lookup"><span data-stu-id="bcb93-242">D/d</span></span>|<span data-ttu-id="bcb93-243">32767</span><span class="sxs-lookup"><span data-stu-id="bcb93-243">32767</span></span>|
|<span data-ttu-id="bcb93-244">N/n</span><span class="sxs-lookup"><span data-stu-id="bcb93-244">N/n</span></span>|<span data-ttu-id="bcb93-245">32,767</span><span class="sxs-lookup"><span data-stu-id="bcb93-245">32,767</span></span>|       
|<span data-ttu-id="bcb93-246">X/x</span><span class="sxs-lookup"><span data-stu-id="bcb93-246">X/x</span></span>|<span data-ttu-id="bcb93-247">7fff</span><span class="sxs-lookup"><span data-stu-id="bcb93-247">7fff</span></span>|

]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (ReadOnlySpan&lt;byte&gt; source, out int value, out int bytesConsumed, char standardFormat = '\0');" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; source, [out] int32&amp; value, [out] int32&amp; bytesConsumed, char standardFormat) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.Text.Utf8Parser.TryParse(System.ReadOnlySpan{System.Byte},System.Int32@,System.Int32@,System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (source As ReadOnlySpan(Of Byte), ByRef value As Integer, ByRef bytesConsumed As Integer, Optional standardFormat As Char = '\0') As Boolean" />
      <MemberSignature Language="F#" Value="static member TryParse : ReadOnlySpan&lt;byte&gt; *  *  * char -&gt; bool" Usage="System.Buffers.Text.Utf8Parser.TryParse (source, value, bytesConsumed, standardFormat)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="value" Type="System.Int32" RefType="out" />
        <Parameter Name="bytesConsumed" Type="System.Int32" RefType="out" />
        <Parameter Name="standardFormat" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="bcb93-248">Ciąg Utf8 do analizy.</span><span class="sxs-lookup"><span data-stu-id="bcb93-248">The Utf8 string to parse.</span></span></param>
        <param name="value"><span data-ttu-id="bcb93-249">Gdy metoda zwróci wartość, zawiera wartość pochodzącą z analizy <paramref name="source" />, jeśli operacja analizowania zakończyła się pomyślnie.</span><span class="sxs-lookup"><span data-stu-id="bcb93-249">When the method returns, contains the value parsed from <paramref name="source" />, if the parsing operation succeeded.</span></span></param>
        <param name="bytesConsumed"><span data-ttu-id="bcb93-250">Jeśli operacji analizowania zakończyło się pomyślnie, zawiera długość w bajtach przeanalizowany podciągu w przypadku zwrotu metody.</span><span class="sxs-lookup"><span data-stu-id="bcb93-250">If the parsing operation was successful, contains the length in bytes of the parsed substring when the method returns.</span></span> <span data-ttu-id="bcb93-251">Jeśli metoda nie powiedzie się, <paramref name="bytesConsumed" /> jest równa 0.</span><span class="sxs-lookup"><span data-stu-id="bcb93-251">If the method fails, <paramref name="bytesConsumed" /> is set to 0.</span></span></param>
        <param name="standardFormat"><span data-ttu-id="bcb93-252">Oczekiwany format ciągu Utf8.</span><span class="sxs-lookup"><span data-stu-id="bcb93-252">The expected format of the Utf8 string.</span></span></param>
        <summary><span data-ttu-id="bcb93-253">Analizuje <see cref="T:System.Int32" /> na początku ciągu Utf8.</span><span class="sxs-lookup"><span data-stu-id="bcb93-253">Parses an <see cref="T:System.Int32" /> at the start of a Utf8 string.</span></span></summary>
        <returns><span data-ttu-id="bcb93-254"><see langword="true" /> w celu osiągnięcia sukcesu; <see langword="false" /> Jeśli ciąg nie jest syntaktycznie prawidłowy lub przepełnienie lub niedopełnienie wystąpił.</span><span class="sxs-lookup"><span data-stu-id="bcb93-254"><see langword="true" /> for success; <see langword="false" /> if the string was not syntactically valid or an overflow or underflow occurred.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

<span data-ttu-id="bcb93-255">Obsługiwane formaty:</span><span class="sxs-lookup"><span data-stu-id="bcb93-255">Formats supported:</span></span>

|<span data-ttu-id="bcb93-256">Ciąg formatu</span><span class="sxs-lookup"><span data-stu-id="bcb93-256">Format string</span></span>|<span data-ttu-id="bcb93-257">Przykład oczekiwanego formatu.</span><span class="sxs-lookup"><span data-stu-id="bcb93-257">Example expected format</span></span>|
|--|--|
|<span data-ttu-id="bcb93-258">G/g (ustawienie domyślne)</span><span class="sxs-lookup"><span data-stu-id="bcb93-258">G/g (default)</span></span>| |
|<span data-ttu-id="bcb93-259">D/d</span><span class="sxs-lookup"><span data-stu-id="bcb93-259">D/d</span></span>|<span data-ttu-id="bcb93-260">32767</span><span class="sxs-lookup"><span data-stu-id="bcb93-260">32767</span></span>|
|<span data-ttu-id="bcb93-261">N/n</span><span class="sxs-lookup"><span data-stu-id="bcb93-261">N/n</span></span>|<span data-ttu-id="bcb93-262">32,767</span><span class="sxs-lookup"><span data-stu-id="bcb93-262">32,767</span></span>|       
|<span data-ttu-id="bcb93-263">X/x</span><span class="sxs-lookup"><span data-stu-id="bcb93-263">X/x</span></span>|<span data-ttu-id="bcb93-264">7fff</span><span class="sxs-lookup"><span data-stu-id="bcb93-264">7fff</span></span>|

]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (ReadOnlySpan&lt;byte&gt; source, out long value, out int bytesConsumed, char standardFormat = '\0');" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; source, [out] int64&amp; value, [out] int32&amp; bytesConsumed, char standardFormat) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.Text.Utf8Parser.TryParse(System.ReadOnlySpan{System.Byte},System.Int64@,System.Int32@,System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (source As ReadOnlySpan(Of Byte), ByRef value As Long, ByRef bytesConsumed As Integer, Optional standardFormat As Char = '\0') As Boolean" />
      <MemberSignature Language="F#" Value="static member TryParse : ReadOnlySpan&lt;byte&gt; *  *  * char -&gt; bool" Usage="System.Buffers.Text.Utf8Parser.TryParse (source, value, bytesConsumed, standardFormat)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="value" Type="System.Int64" RefType="out" />
        <Parameter Name="bytesConsumed" Type="System.Int32" RefType="out" />
        <Parameter Name="standardFormat" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="bcb93-265">Ciąg Utf8 do analizy.</span><span class="sxs-lookup"><span data-stu-id="bcb93-265">The Utf8 string to parse.</span></span></param>
        <param name="value"><span data-ttu-id="bcb93-266">Gdy metoda zwróci wartość, zawiera wartość pochodzącą z analizy <paramref name="source" />, jeśli operacja analizowania zakończyła się pomyślnie.</span><span class="sxs-lookup"><span data-stu-id="bcb93-266">When the method returns, contains the value parsed from <paramref name="source" />, if the parsing operation succeeded.</span></span></param>
        <param name="bytesConsumed"><span data-ttu-id="bcb93-267">Jeśli operacji analizowania zakończyło się pomyślnie, zawiera długość w bajtach przeanalizowany podciągu w przypadku zwrotu metody.</span><span class="sxs-lookup"><span data-stu-id="bcb93-267">If the parsing operation was successful, contains the length in bytes of the parsed substring when the method returns.</span></span> <span data-ttu-id="bcb93-268">Jeśli metoda nie powiedzie się, <paramref name="bytesConsumed" /> jest równa 0.</span><span class="sxs-lookup"><span data-stu-id="bcb93-268">If the method fails, <paramref name="bytesConsumed" /> is set to 0.</span></span></param>
        <param name="standardFormat"><span data-ttu-id="bcb93-269">Oczekiwany format ciągu Utf8.</span><span class="sxs-lookup"><span data-stu-id="bcb93-269">The expected format of the Utf8 string.</span></span></param>
        <summary><span data-ttu-id="bcb93-270">Analizuje <see cref="T:System.Int64" /> na początku ciągu Utf8.</span><span class="sxs-lookup"><span data-stu-id="bcb93-270">Parses an <see cref="T:System.Int64" /> at the start of a Utf8 string.</span></span></summary>
        <returns><span data-ttu-id="bcb93-271"><see langword="true" /> w celu osiągnięcia sukcesu; <see langword="false" /> Jeśli ciąg nie jest syntaktycznie prawidłowy lub przepełnienie lub niedopełnienie wystąpił.</span><span class="sxs-lookup"><span data-stu-id="bcb93-271"><see langword="true" /> for success; <see langword="false" /> if the string was not syntactically valid or an overflow or underflow occurred.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

<span data-ttu-id="bcb93-272">Obsługiwane formaty:</span><span class="sxs-lookup"><span data-stu-id="bcb93-272">Formats supported:</span></span>

|<span data-ttu-id="bcb93-273">Ciąg formatu</span><span class="sxs-lookup"><span data-stu-id="bcb93-273">Format string</span></span>|<span data-ttu-id="bcb93-274">Przykład oczekiwanego formatu.</span><span class="sxs-lookup"><span data-stu-id="bcb93-274">Example expected format</span></span>|
|--|--|
|<span data-ttu-id="bcb93-275">G/g (ustawienie domyślne)</span><span class="sxs-lookup"><span data-stu-id="bcb93-275">G/g (default)</span></span>| |
|<span data-ttu-id="bcb93-276">D/d</span><span class="sxs-lookup"><span data-stu-id="bcb93-276">D/d</span></span>|<span data-ttu-id="bcb93-277">32767</span><span class="sxs-lookup"><span data-stu-id="bcb93-277">32767</span></span>|
|<span data-ttu-id="bcb93-278">N/n</span><span class="sxs-lookup"><span data-stu-id="bcb93-278">N/n</span></span>|<span data-ttu-id="bcb93-279">32,767</span><span class="sxs-lookup"><span data-stu-id="bcb93-279">32,767</span></span>|       
|<span data-ttu-id="bcb93-280">X/x</span><span class="sxs-lookup"><span data-stu-id="bcb93-280">X/x</span></span>|<span data-ttu-id="bcb93-281">7fff</span><span class="sxs-lookup"><span data-stu-id="bcb93-281">7fff</span></span>|

]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (ReadOnlySpan&lt;byte&gt; source, out sbyte value, out int bytesConsumed, char standardFormat = '\0');" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; source, [out] int8&amp; value, [out] int32&amp; bytesConsumed, char standardFormat) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.Text.Utf8Parser.TryParse(System.ReadOnlySpan{System.Byte},System.SByte@,System.Int32@,System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (source As ReadOnlySpan(Of Byte), ByRef value As SByte, ByRef bytesConsumed As Integer, Optional standardFormat As Char = '\0') As Boolean" />
      <MemberSignature Language="F#" Value="static member TryParse : ReadOnlySpan&lt;byte&gt; *  *  * char -&gt; bool" Usage="System.Buffers.Text.Utf8Parser.TryParse (source, value, bytesConsumed, standardFormat)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-3.0;netcore-2.1;netcore-2.2;netstandard-2.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="value" Type="System.SByte" RefType="out" />
        <Parameter Name="bytesConsumed" Type="System.Int32" RefType="out" />
        <Parameter Name="standardFormat" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="bcb93-282">Ciąg Utf8 do analizy.</span><span class="sxs-lookup"><span data-stu-id="bcb93-282">The Utf8 string to parse.</span></span></param>
        <param name="value"><span data-ttu-id="bcb93-283">Gdy metoda zwróci wartość, zawiera wartość pochodzącą z analizy <paramref name="source" />, jeśli operacja analizowania zakończyła się pomyślnie.</span><span class="sxs-lookup"><span data-stu-id="bcb93-283">When the method returns, contains the value parsed from <paramref name="source" />, if the parsing operation succeeded.</span></span></param>
        <param name="bytesConsumed"><span data-ttu-id="bcb93-284">Jeśli operacji analizowania zakończyło się pomyślnie, zawiera długość w bajtach przeanalizowany podciągu w przypadku zwrotu metody.</span><span class="sxs-lookup"><span data-stu-id="bcb93-284">If the parsing operation was successful, contains the length in bytes of the parsed substring when the method returns.</span></span> <span data-ttu-id="bcb93-285">Jeśli metoda nie powiedzie się, <paramref name="bytesConsumed" /> jest równa 0.</span><span class="sxs-lookup"><span data-stu-id="bcb93-285">If the method fails, <paramref name="bytesConsumed" /> is set to 0.</span></span></param>
        <param name="standardFormat"><span data-ttu-id="bcb93-286">Oczekiwany format ciągu Utf8.</span><span class="sxs-lookup"><span data-stu-id="bcb93-286">The expected format of the Utf8 string.</span></span></param>
        <summary><span data-ttu-id="bcb93-287">Analizuje <see cref="T:System.SByte" /> na początku ciągu Utf8.</span><span class="sxs-lookup"><span data-stu-id="bcb93-287">Parses an <see cref="T:System.SByte" /> at the start of a Utf8 string.</span></span></summary>
        <returns><span data-ttu-id="bcb93-288"><see langword="true" /> w celu osiągnięcia sukcesu; <see langword="false" /> Jeśli ciąg nie jest syntaktycznie prawidłowy lub przepełnienie lub niedopełnienie wystąpił.</span><span class="sxs-lookup"><span data-stu-id="bcb93-288"><see langword="true" /> for success; <see langword="false" /> if the string was not syntactically valid or an overflow or underflow occurred.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

<span data-ttu-id="bcb93-289">Obsługiwane formaty:</span><span class="sxs-lookup"><span data-stu-id="bcb93-289">Formats supported:</span></span> 

|<span data-ttu-id="bcb93-290">Ciąg formatu</span><span class="sxs-lookup"><span data-stu-id="bcb93-290">Format string</span></span>|<span data-ttu-id="bcb93-291">Przykład oczekiwanego formatu.</span><span class="sxs-lookup"><span data-stu-id="bcb93-291">Example expected format</span></span>|
|--|--|
|<span data-ttu-id="bcb93-292">G/g (ustawienie domyślne)</span><span class="sxs-lookup"><span data-stu-id="bcb93-292">G/g (default)</span></span>| |
|<span data-ttu-id="bcb93-293">D/d</span><span class="sxs-lookup"><span data-stu-id="bcb93-293">D/d</span></span>|<span data-ttu-id="bcb93-294">122</span><span class="sxs-lookup"><span data-stu-id="bcb93-294">122</span></span>|
|<span data-ttu-id="bcb93-295">N/n</span><span class="sxs-lookup"><span data-stu-id="bcb93-295">N/n</span></span>|<span data-ttu-id="bcb93-296">122</span><span class="sxs-lookup"><span data-stu-id="bcb93-296">122</span></span>|       
|<span data-ttu-id="bcb93-297">X/x</span><span class="sxs-lookup"><span data-stu-id="bcb93-297">X/x</span></span>|<span data-ttu-id="bcb93-298">7a</span><span class="sxs-lookup"><span data-stu-id="bcb93-298">7a</span></span>|

]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (ReadOnlySpan&lt;byte&gt; source, out float value, out int bytesConsumed, char standardFormat = '\0');" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; source, [out] float32&amp; value, [out] int32&amp; bytesConsumed, char standardFormat) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.Text.Utf8Parser.TryParse(System.ReadOnlySpan{System.Byte},System.Single@,System.Int32@,System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (source As ReadOnlySpan(Of Byte), ByRef value As Single, ByRef bytesConsumed As Integer, Optional standardFormat As Char = '\0') As Boolean" />
      <MemberSignature Language="F#" Value="static member TryParse : ReadOnlySpan&lt;byte&gt; *  *  * char -&gt; bool" Usage="System.Buffers.Text.Utf8Parser.TryParse (source, value, bytesConsumed, standardFormat)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="value" Type="System.Single" RefType="out" />
        <Parameter Name="bytesConsumed" Type="System.Int32" RefType="out" />
        <Parameter Name="standardFormat" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="bcb93-299">Ciąg Utf8 do analizy.</span><span class="sxs-lookup"><span data-stu-id="bcb93-299">The Utf8 string to parse.</span></span></param>
        <param name="value"><span data-ttu-id="bcb93-300">Gdy metoda zwróci wartość, zawiera wartość pochodzącą z analizy <paramref name="source" />, jeśli operacja analizowania zakończyła się pomyślnie.</span><span class="sxs-lookup"><span data-stu-id="bcb93-300">When the method returns, contains the value parsed from <paramref name="source" />, if the parsing operation succeeded.</span></span></param>
        <param name="bytesConsumed"><span data-ttu-id="bcb93-301">Jeśli operacji analizowania zakończyło się pomyślnie, zawiera długość w bajtach przeanalizowany podciągu w przypadku zwrotu metody.</span><span class="sxs-lookup"><span data-stu-id="bcb93-301">If the parsing operation was successful, contains the length in bytes of the parsed substring when the method returns.</span></span> <span data-ttu-id="bcb93-302">Jeśli metoda nie powiedzie się, <paramref name="bytesConsumed" /> jest równa 0.</span><span class="sxs-lookup"><span data-stu-id="bcb93-302">If the method fails, <paramref name="bytesConsumed" /> is set to 0.</span></span></param>
        <param name="standardFormat"><span data-ttu-id="bcb93-303">Oczekiwany format ciągu Utf8.</span><span class="sxs-lookup"><span data-stu-id="bcb93-303">The expected format of the Utf8 string.</span></span></param>
        <summary><span data-ttu-id="bcb93-304">Analizuje <see cref="T:System.Single" /> na początku ciągu Utf8.</span><span class="sxs-lookup"><span data-stu-id="bcb93-304">Parses a <see cref="T:System.Single" /> at the start of a Utf8 string.</span></span></summary>
        <returns><span data-ttu-id="bcb93-305"><see langword="true" /> w celu osiągnięcia sukcesu; <see langword="false" /> Jeśli ciąg nie jest syntaktycznie prawidłowy lub przepełnienie lub niedopełnienie wystąpił.</span><span class="sxs-lookup"><span data-stu-id="bcb93-305"><see langword="true" /> for success; <see langword="false" /> if the string was not syntactically valid or an overflow or underflow occurred.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

<span data-ttu-id="bcb93-306">Obsługiwane formaty:</span><span class="sxs-lookup"><span data-stu-id="bcb93-306">Formats supported:</span></span> 

<span data-ttu-id="bcb93-307">Ciąg formatu</span><span class="sxs-lookup"><span data-stu-id="bcb93-307">Format string</span></span>|<span data-ttu-id="bcb93-308">Przykład oczekiwano fornmat</span><span class="sxs-lookup"><span data-stu-id="bcb93-308">Example expected fornmat</span></span>|<span data-ttu-id="bcb93-309">Komentarze</span><span class="sxs-lookup"><span data-stu-id="bcb93-309">Comments</span></span>|
|--|--|--|
|<span data-ttu-id="bcb93-310">G/g (ustawienie domyślne)</span><span class="sxs-lookup"><span data-stu-id="bcb93-310">G/g  (default)</span></span>| |  
|<span data-ttu-id="bcb93-311">F/f</span><span class="sxs-lookup"><span data-stu-id="bcb93-311">F/f</span></span>|<span data-ttu-id="bcb93-312">12.45</span><span class="sxs-lookup"><span data-stu-id="bcb93-312">12.45</span></span>|<span data-ttu-id="bcb93-313">Stały punktu</span><span class="sxs-lookup"><span data-stu-id="bcb93-313">Fixed point</span></span>|
|<span data-ttu-id="bcb93-314">E/e</span><span class="sxs-lookup"><span data-stu-id="bcb93-314">E/e</span></span>|<span data-ttu-id="bcb93-315">1.245000e1</span><span class="sxs-lookup"><span data-stu-id="bcb93-315">1.245000e1</span></span>|<span data-ttu-id="bcb93-316">Wykładnicza</span><span class="sxs-lookup"><span data-stu-id="bcb93-316">Exponential</span></span>|

]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (ReadOnlySpan&lt;byte&gt; source, out TimeSpan value, out int bytesConsumed, char standardFormat = '\0');" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; source, [out] valuetype System.TimeSpan&amp; value, [out] int32&amp; bytesConsumed, char standardFormat) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.Text.Utf8Parser.TryParse(System.ReadOnlySpan{System.Byte},System.TimeSpan@,System.Int32@,System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (source As ReadOnlySpan(Of Byte), ByRef value As TimeSpan, ByRef bytesConsumed As Integer, Optional standardFormat As Char = '\0') As Boolean" />
      <MemberSignature Language="F#" Value="static member TryParse : ReadOnlySpan&lt;byte&gt; *  *  * char -&gt; bool" Usage="System.Buffers.Text.Utf8Parser.TryParse (source, value, bytesConsumed, standardFormat)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="value" Type="System.TimeSpan" RefType="out" />
        <Parameter Name="bytesConsumed" Type="System.Int32" RefType="out" />
        <Parameter Name="standardFormat" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="bcb93-317">Ciąg Utf8 do analizy.</span><span class="sxs-lookup"><span data-stu-id="bcb93-317">The Utf8 string to parse.</span></span></param>
        <param name="value"><span data-ttu-id="bcb93-318">Gdy metoda zwróci wartość, zawiera wartość pochodzącą z analizy <paramref name="source" />, jeśli operacja analizowania zakończyła się pomyślnie.</span><span class="sxs-lookup"><span data-stu-id="bcb93-318">When the method returns, contains the value parsed from <paramref name="source" />, if the parsing operation succeeded.</span></span></param>
        <param name="bytesConsumed"><span data-ttu-id="bcb93-319">Jeśli operacji analizowania zakończyło się pomyślnie, zawiera długość w bajtach przeanalizowany podciągu w przypadku zwrotu metody.</span><span class="sxs-lookup"><span data-stu-id="bcb93-319">If the parsing operation was successful, contains the length in bytes of the parsed substring when the method returns.</span></span> <span data-ttu-id="bcb93-320">Jeśli metoda nie powiedzie się, <paramref name="bytesConsumed" /> jest równa 0.</span><span class="sxs-lookup"><span data-stu-id="bcb93-320">If the method fails, <paramref name="bytesConsumed" /> is set to 0.</span></span></param>
        <param name="standardFormat"><span data-ttu-id="bcb93-321">Oczekiwany format ciągu Utf8.</span><span class="sxs-lookup"><span data-stu-id="bcb93-321">The expected format of the Utf8 string.</span></span></param>
        <summary><span data-ttu-id="bcb93-322">Analizuje <see cref="T:System.TimeSpan" /> na początku ciągu Utf8.</span><span class="sxs-lookup"><span data-stu-id="bcb93-322">Parses a <see cref="T:System.TimeSpan" /> at the start of a Utf8 string.</span></span></summary>
        <returns><span data-ttu-id="bcb93-323"><see langword="true" /> w celu osiągnięcia sukcesu; <see langword="false" /> Jeśli ciąg nie jest syntaktycznie prawidłowy lub przepełnienie lub niedopełnienie wystąpił.</span><span class="sxs-lookup"><span data-stu-id="bcb93-323"><see langword="true" /> for success; <see langword="false" /> if the string was not syntactically valid or an overflow or underflow occurred.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

<span data-ttu-id="bcb93-324">Obsługiwane formaty:</span><span class="sxs-lookup"><span data-stu-id="bcb93-324">Formats supported:</span></span> 

|<span data-ttu-id="bcb93-325">Ciąg formatu</span><span class="sxs-lookup"><span data-stu-id="bcb93-325">Format string</span></span>|<span data-ttu-id="bcb93-326">Oczekiwany format</span><span class="sxs-lookup"><span data-stu-id="bcb93-326">Expected format</span></span>|<span data-ttu-id="bcb93-327">Komentarze</span><span class="sxs-lookup"><span data-stu-id="bcb93-327">Comments</span></span>|
|--|--|--|
|<span data-ttu-id="bcb93-328">t-c-T (ustawienie domyślne)</span><span class="sxs-lookup"><span data-stu-id="bcb93-328">c/t/T (default)</span></span>|<span data-ttu-id="bcb93-329">[-] [d]. : mm: ss [.fffffff]</span><span class="sxs-lookup"><span data-stu-id="bcb93-329">[-][d.]hh:mm:ss[.fffffff]</span></span>|<span data-ttu-id="bcb93-330">(format stałe)</span><span class="sxs-lookup"><span data-stu-id="bcb93-330">(constant format)</span></span>|
|<span data-ttu-id="bcb93-331">G</span><span class="sxs-lookup"><span data-stu-id="bcb93-331">G</span></span>|<span data-ttu-id="bcb93-332">[-]d:hh:mm:ss.fffffff</span><span class="sxs-lookup"><span data-stu-id="bcb93-332">[-]d:hh:mm:ss.fffffff</span></span>||<span data-ttu-id="bcb93-333">(Ogólne long)</span><span class="sxs-lookup"><span data-stu-id="bcb93-333">(general long)</span></span>|
|<span data-ttu-id="bcb93-334">g</span><span class="sxs-lookup"><span data-stu-id="bcb93-334">g</span></span>|<span data-ttu-id="bcb93-335">[-] [d:] [h] ss [.f [f [f [f [f [f [f]]]</span><span class="sxs-lookup"><span data-stu-id="bcb93-335">[-][d:][h]h:mm:ss[.f[f[f[f[f[f[f]]]]]]</span></span>|<span data-ttu-id="bcb93-336">(skrócona ogólne)</span><span class="sxs-lookup"><span data-stu-id="bcb93-336">(general short)</span></span>|

]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (ReadOnlySpan&lt;byte&gt; source, out ushort value, out int bytesConsumed, char standardFormat = '\0');" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; source, [out] unsigned int16&amp; value, [out] int32&amp; bytesConsumed, char standardFormat) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.Text.Utf8Parser.TryParse(System.ReadOnlySpan{System.Byte},System.UInt16@,System.Int32@,System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (source As ReadOnlySpan(Of Byte), ByRef value As UShort, ByRef bytesConsumed As Integer, Optional standardFormat As Char = '\0') As Boolean" />
      <MemberSignature Language="F#" Value="static member TryParse : ReadOnlySpan&lt;byte&gt; *  *  * char -&gt; bool" Usage="System.Buffers.Text.Utf8Parser.TryParse (source, value, bytesConsumed, standardFormat)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-3.0;netcore-2.1;netcore-2.2;netstandard-2.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="value" Type="System.UInt16" RefType="out" />
        <Parameter Name="bytesConsumed" Type="System.Int32" RefType="out" />
        <Parameter Name="standardFormat" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="bcb93-337">Ciąg Utf8 do analizy.</span><span class="sxs-lookup"><span data-stu-id="bcb93-337">The Utf8 string to parse.</span></span></param>
        <param name="value"><span data-ttu-id="bcb93-338">Gdy metoda zwróci wartość, zawiera wartość pochodzącą z analizy <paramref name="source" />, jeśli operacja analizowania zakończyła się pomyślnie.</span><span class="sxs-lookup"><span data-stu-id="bcb93-338">When the method returns, contains the value parsed from <paramref name="source" />, if the parsing operation succeeded.</span></span></param>
        <param name="bytesConsumed"><span data-ttu-id="bcb93-339">Jeśli operacji analizowania zakończyło się pomyślnie, zawiera długość w bajtach przeanalizowany podciągu w przypadku zwrotu metody.</span><span class="sxs-lookup"><span data-stu-id="bcb93-339">If the parsing operation was successful, contains the length in bytes of the parsed substring when the method returns.</span></span> <span data-ttu-id="bcb93-340">Jeśli metoda nie powiedzie się, <paramref name="bytesConsumed" /> jest równa 0.</span><span class="sxs-lookup"><span data-stu-id="bcb93-340">If the method fails, <paramref name="bytesConsumed" /> is set to 0.</span></span></param>
        <param name="standardFormat"><span data-ttu-id="bcb93-341">Oczekiwany format ciągu Utf8.</span><span class="sxs-lookup"><span data-stu-id="bcb93-341">The expected format of the Utf8 string.</span></span></param>
        <summary><span data-ttu-id="bcb93-342">Analizuje <see cref="T:System.UInt16" /> na początku ciągu Utf8.</span><span class="sxs-lookup"><span data-stu-id="bcb93-342">Parses a <see cref="T:System.UInt16" /> at the start of a Utf8 string.</span></span></summary>
        <returns><span data-ttu-id="bcb93-343"><see langword="true" /> w celu osiągnięcia sukcesu; <see langword="false" /> Jeśli ciąg nie jest syntaktycznie prawidłowy lub przepełnienie lub niedopełnienie wystąpił.</span><span class="sxs-lookup"><span data-stu-id="bcb93-343"><see langword="true" /> for success; <see langword="false" /> if the string was not syntactically valid or an overflow or underflow occurred.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

<span data-ttu-id="bcb93-344">Obsługiwane formaty:</span><span class="sxs-lookup"><span data-stu-id="bcb93-344">Formats supported:</span></span>

|<span data-ttu-id="bcb93-345">Ciąg formatu</span><span class="sxs-lookup"><span data-stu-id="bcb93-345">Format string</span></span>|<span data-ttu-id="bcb93-346">Przykład oczekiwanego formatu.</span><span class="sxs-lookup"><span data-stu-id="bcb93-346">Example expected format</span></span>|
|--|--|
|<span data-ttu-id="bcb93-347">G/g (ustawienie domyślne)</span><span class="sxs-lookup"><span data-stu-id="bcb93-347">G/g (default)</span></span>| |
|<span data-ttu-id="bcb93-348">D/d</span><span class="sxs-lookup"><span data-stu-id="bcb93-348">D/d</span></span>|<span data-ttu-id="bcb93-349">32767</span><span class="sxs-lookup"><span data-stu-id="bcb93-349">32767</span></span>|
|<span data-ttu-id="bcb93-350">N/n</span><span class="sxs-lookup"><span data-stu-id="bcb93-350">N/n</span></span>|<span data-ttu-id="bcb93-351">32,767</span><span class="sxs-lookup"><span data-stu-id="bcb93-351">32,767</span></span>|       
|<span data-ttu-id="bcb93-352">X/x</span><span class="sxs-lookup"><span data-stu-id="bcb93-352">X/x</span></span>|<span data-ttu-id="bcb93-353">7fff</span><span class="sxs-lookup"><span data-stu-id="bcb93-353">7fff</span></span>|

]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (ReadOnlySpan&lt;byte&gt; source, out uint value, out int bytesConsumed, char standardFormat = '\0');" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; source, [out] unsigned int32&amp; value, [out] int32&amp; bytesConsumed, char standardFormat) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.Text.Utf8Parser.TryParse(System.ReadOnlySpan{System.Byte},System.UInt32@,System.Int32@,System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (source As ReadOnlySpan(Of Byte), ByRef value As UInteger, ByRef bytesConsumed As Integer, Optional standardFormat As Char = '\0') As Boolean" />
      <MemberSignature Language="F#" Value="static member TryParse : ReadOnlySpan&lt;byte&gt; *  *  * char -&gt; bool" Usage="System.Buffers.Text.Utf8Parser.TryParse (source, value, bytesConsumed, standardFormat)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-3.0;netcore-2.1;netcore-2.2;netstandard-2.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="value" Type="System.UInt32" RefType="out" />
        <Parameter Name="bytesConsumed" Type="System.Int32" RefType="out" />
        <Parameter Name="standardFormat" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="bcb93-354">Ciąg Utf8 do analizy.</span><span class="sxs-lookup"><span data-stu-id="bcb93-354">The Utf8 string to parse.</span></span></param>
        <param name="value"><span data-ttu-id="bcb93-355">Gdy metoda zwróci wartość, zawiera wartość pochodzącą z analizy <paramref name="source" />, jeśli operacja analizowania zakończyła się pomyślnie.</span><span class="sxs-lookup"><span data-stu-id="bcb93-355">When the method returns, contains the value parsed from <paramref name="source" />, if the parsing operation succeeded.</span></span></param>
        <param name="bytesConsumed"><span data-ttu-id="bcb93-356">Jeśli operacji analizowania zakończyło się pomyślnie, zawiera długość w bajtach przeanalizowany podciągu w przypadku zwrotu metody.</span><span class="sxs-lookup"><span data-stu-id="bcb93-356">If the parsing operation was successful, contains the length in bytes of the parsed substring when the method returns.</span></span> <span data-ttu-id="bcb93-357">Jeśli metoda nie powiedzie się, <paramref name="bytesConsumed" /> jest równa 0.</span><span class="sxs-lookup"><span data-stu-id="bcb93-357">If the method fails, <paramref name="bytesConsumed" /> is set to 0.</span></span></param>
        <param name="standardFormat"><span data-ttu-id="bcb93-358">Oczekiwany format ciągu Utf8.</span><span class="sxs-lookup"><span data-stu-id="bcb93-358">The expected format of the Utf8 string.</span></span></param>
        <summary><span data-ttu-id="bcb93-359">Analizuje <see cref="T:System.UInt32" /> na początku ciągu Utf8.</span><span class="sxs-lookup"><span data-stu-id="bcb93-359">Parses a <see cref="T:System.UInt32" /> at the start of a Utf8 string.</span></span></summary>
        <returns><span data-ttu-id="bcb93-360"><see langword="true" /> w celu osiągnięcia sukcesu; <see langword="false" /> Jeśli ciąg nie jest syntaktycznie prawidłowy lub przepełnienie lub niedopełnienie wystąpił.</span><span class="sxs-lookup"><span data-stu-id="bcb93-360"><see langword="true" /> for success; <see langword="false" /> if the string was not syntactically valid or an overflow or underflow occurred.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

<span data-ttu-id="bcb93-361">Obsługiwane formaty:</span><span class="sxs-lookup"><span data-stu-id="bcb93-361">Formats supported:</span></span>

|<span data-ttu-id="bcb93-362">Ciąg formatu</span><span class="sxs-lookup"><span data-stu-id="bcb93-362">Format string</span></span>|<span data-ttu-id="bcb93-363">Przykład oczekiwanego formatu.</span><span class="sxs-lookup"><span data-stu-id="bcb93-363">Example expected format</span></span>|
|--|--|
|<span data-ttu-id="bcb93-364">G/g (ustawienie domyślne)</span><span class="sxs-lookup"><span data-stu-id="bcb93-364">G/g (default)</span></span>| |
|<span data-ttu-id="bcb93-365">D/d</span><span class="sxs-lookup"><span data-stu-id="bcb93-365">D/d</span></span>|<span data-ttu-id="bcb93-366">32767</span><span class="sxs-lookup"><span data-stu-id="bcb93-366">32767</span></span>|
|<span data-ttu-id="bcb93-367">N/n</span><span class="sxs-lookup"><span data-stu-id="bcb93-367">N/n</span></span>|<span data-ttu-id="bcb93-368">32,767</span><span class="sxs-lookup"><span data-stu-id="bcb93-368">32,767</span></span>|       
|<span data-ttu-id="bcb93-369">X/x</span><span class="sxs-lookup"><span data-stu-id="bcb93-369">X/x</span></span>|<span data-ttu-id="bcb93-370">7fff</span><span class="sxs-lookup"><span data-stu-id="bcb93-370">7fff</span></span>|

]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (ReadOnlySpan&lt;byte&gt; source, out ulong value, out int bytesConsumed, char standardFormat = '\0');" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; source, [out] unsigned int64&amp; value, [out] int32&amp; bytesConsumed, char standardFormat) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.Text.Utf8Parser.TryParse(System.ReadOnlySpan{System.Byte},System.UInt64@,System.Int32@,System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (source As ReadOnlySpan(Of Byte), ByRef value As ULong, ByRef bytesConsumed As Integer, Optional standardFormat As Char = '\0') As Boolean" />
      <MemberSignature Language="F#" Value="static member TryParse : ReadOnlySpan&lt;byte&gt; *  *  * char -&gt; bool" Usage="System.Buffers.Text.Utf8Parser.TryParse (source, value, bytesConsumed, standardFormat)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-3.0;netcore-2.1;netcore-2.2;netstandard-2.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="value" Type="System.UInt64" RefType="out" />
        <Parameter Name="bytesConsumed" Type="System.Int32" RefType="out" />
        <Parameter Name="standardFormat" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="bcb93-371">Ciąg Utf8 do analizy.</span><span class="sxs-lookup"><span data-stu-id="bcb93-371">The Utf8 string to parse.</span></span></param>
        <param name="value"><span data-ttu-id="bcb93-372">Gdy metoda zwróci wartość, zawiera wartość pochodzącą z analizy <paramref name="source" />, jeśli operacja analizowania zakończyła się pomyślnie.</span><span class="sxs-lookup"><span data-stu-id="bcb93-372">When the method returns, contains the value parsed from <paramref name="source" />, if the parsing operation succeeded.</span></span></param>
        <param name="bytesConsumed"><span data-ttu-id="bcb93-373">Jeśli operacji analizowania zakończyło się pomyślnie, zawiera długość w bajtach przeanalizowany podciągu w przypadku zwrotu metody.</span><span class="sxs-lookup"><span data-stu-id="bcb93-373">If the parsing operation was successful, contains the length in bytes of the parsed substring when the method returns.</span></span> <span data-ttu-id="bcb93-374">Jeśli metoda nie powiedzie się, <paramref name="bytesConsumed" /> jest równa 0.</span><span class="sxs-lookup"><span data-stu-id="bcb93-374">If the method fails, <paramref name="bytesConsumed" /> is set to 0.</span></span></param>
        <param name="standardFormat"><span data-ttu-id="bcb93-375">Oczekiwany format ciągu Utf8.</span><span class="sxs-lookup"><span data-stu-id="bcb93-375">The expected format of the Utf8 string.</span></span></param>
        <summary><span data-ttu-id="bcb93-376">Analizuje <see cref="T:System.UInt64" /> na początku ciągu Utf8.</span><span class="sxs-lookup"><span data-stu-id="bcb93-376">Parses a <see cref="T:System.UInt64" /> at the start of a Utf8 string.</span></span></summary>
        <returns><span data-ttu-id="bcb93-377"><see langword="true" /> w celu osiągnięcia sukcesu; <see langword="false" /> Jeśli ciąg nie jest syntaktycznie prawidłowy lub przepełnienie lub niedopełnienie wystąpił.</span><span class="sxs-lookup"><span data-stu-id="bcb93-377"><see langword="true" /> for success; <see langword="false" /> if the string was not syntactically valid or an overflow or underflow occurred.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

<span data-ttu-id="bcb93-378">Obsługiwane formaty:</span><span class="sxs-lookup"><span data-stu-id="bcb93-378">Formats supported:</span></span>

|<span data-ttu-id="bcb93-379">Ciąg formatu</span><span class="sxs-lookup"><span data-stu-id="bcb93-379">Format string</span></span>|<span data-ttu-id="bcb93-380">Przykład oczekiwanego formatu.</span><span class="sxs-lookup"><span data-stu-id="bcb93-380">Example expected format</span></span>|
|--|--|
|<span data-ttu-id="bcb93-381">G/g (ustawienie domyślne)</span><span class="sxs-lookup"><span data-stu-id="bcb93-381">G/g (default)</span></span>| |
|<span data-ttu-id="bcb93-382">D/d</span><span class="sxs-lookup"><span data-stu-id="bcb93-382">D/d</span></span>|<span data-ttu-id="bcb93-383">32767</span><span class="sxs-lookup"><span data-stu-id="bcb93-383">32767</span></span>|
|<span data-ttu-id="bcb93-384">N/n</span><span class="sxs-lookup"><span data-stu-id="bcb93-384">N/n</span></span>|<span data-ttu-id="bcb93-385">32,767</span><span class="sxs-lookup"><span data-stu-id="bcb93-385">32,767</span></span>|       
|<span data-ttu-id="bcb93-386">X/x</span><span class="sxs-lookup"><span data-stu-id="bcb93-386">X/x</span></span>|<span data-ttu-id="bcb93-387">7fff</span><span class="sxs-lookup"><span data-stu-id="bcb93-387">7fff</span></span>|

]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
