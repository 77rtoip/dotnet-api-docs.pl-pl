<Type Name="Utf8Parser" FullName="System.Buffers.Text.Utf8Parser">
  <Metadata><Meta Name="ms.openlocfilehash" Value="9d46ffc198524bd466f660e29a8831cb5128a44c" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69342508" /></Metadata><TypeSignature Language="C#" Value="public static class Utf8Parser" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit Utf8Parser extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Buffers.Text.Utf8Parser" />
  <TypeSignature Language="VB.NET" Value="Public Class Utf8Parser" />
  <TypeSignature Language="C++ CLI" Value="public ref class Utf8Parser abstract sealed" />
  <TypeSignature Language="F#" Value="type Utf8Parser = class" />
  <AssemblyInfo>
    <AssemblyName>System.Memory</AssemblyName>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="99c39-101">Oferuje statyczne metody do analizowania ciągów Utf8 do wspólnych typów danych.</span><span class="sxs-lookup"><span data-stu-id="99c39-101">Provides static methods to parse Utf8 strings to common data types.</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (ReadOnlySpan&lt;byte&gt; source, out bool value, out int bytesConsumed, char standardFormat = '\0');" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; source, [out] bool&amp; value, [out] int32&amp; bytesConsumed, char standardFormat) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.Text.Utf8Parser.TryParse(System.ReadOnlySpan{System.Byte},System.Boolean@,System.Int32@,System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (source As ReadOnlySpan(Of Byte), ByRef value As Boolean, ByRef bytesConsumed As Integer, Optional standardFormat As Char = '\0') As Boolean" />
      <MemberSignature Language="F#" Value="static member TryParse : ReadOnlySpan&lt;byte&gt; *  *  * char -&gt; bool" Usage="System.Buffers.Text.Utf8Parser.TryParse (source, value, bytesConsumed, standardFormat)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="value" Type="System.Boolean" RefType="out" />
        <Parameter Name="bytesConsumed" Type="System.Int32" RefType="out" />
        <Parameter Name="standardFormat" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="99c39-102">Ciąg Utf8 do analizy.</span><span class="sxs-lookup"><span data-stu-id="99c39-102">The Utf8 string to parse.</span></span></param>
        <param name="value"><span data-ttu-id="99c39-103">Gdy metoda zwraca, zawiera wartość przeanalizowane z <paramref name="source" />, jeśli operacja analizowania zakończyła się pomyślnie.</span><span class="sxs-lookup"><span data-stu-id="99c39-103">When the method returns, contains the value parsed from <paramref name="source" />, if the parsing operation succeeded.</span></span></param>
        <param name="bytesConsumed"><span data-ttu-id="99c39-104">Jeśli operacja analizowania zakończyła się pomyślnie, zawiera długość w bajtach przeanalizowanego podciągu, gdy metoda zwraca.</span><span class="sxs-lookup"><span data-stu-id="99c39-104">If the parsing operation was successful, contains the length in bytes of the parsed substring when the method returns.</span></span> <span data-ttu-id="99c39-105">Jeśli metoda zakończy się <paramref name="bytesConsumed" /> niepowodzeniem, jest ustawiona na 0.</span><span class="sxs-lookup"><span data-stu-id="99c39-105">If the method fails, <paramref name="bytesConsumed" /> is set to 0.</span></span></param>
        <param name="standardFormat"><span data-ttu-id="99c39-106">Oczekiwany format ciągu Utf8.</span><span class="sxs-lookup"><span data-stu-id="99c39-106">The expected format of the Utf8 string.</span></span></param>
        <summary><span data-ttu-id="99c39-107"><see cref="T:System.Boolean" /> Analizuje na początku ciągu Utf8.</span><span class="sxs-lookup"><span data-stu-id="99c39-107">Parses a <see cref="T:System.Boolean" /> at the start of a Utf8 string.</span></span></summary>
        <returns><span data-ttu-id="99c39-108"><see langword="true" />dla sukcesu; <see langword="false" /> Jeśli ciąg nie jest syntaktycznie prawidłowy lub przepełnienie lub niedoszło.</span><span class="sxs-lookup"><span data-stu-id="99c39-108"><see langword="true" /> for success; <see langword="false" /> if the string was not syntactically valid or an overflow or underflow occurred.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

<span data-ttu-id="99c39-109">Obsługiwane formaty:</span><span class="sxs-lookup"><span data-stu-id="99c39-109">Formats supported:</span></span> 

|<span data-ttu-id="99c39-110">Ciąg formatu</span><span class="sxs-lookup"><span data-stu-id="99c39-110">Format string</span></span>|<span data-ttu-id="99c39-111">Przykładowy format oczekiwany</span><span class="sxs-lookup"><span data-stu-id="99c39-111">Example expected format</span></span>|
|--|--|
|<span data-ttu-id="99c39-112">G (domyślnie)</span><span class="sxs-lookup"><span data-stu-id="99c39-112">G (default)</span></span>|<span data-ttu-id="99c39-113">PRAWDA/FAŁSZ</span><span class="sxs-lookup"><span data-stu-id="99c39-113">True/False</span></span>|
|<span data-ttu-id="99c39-114">l</span><span class="sxs-lookup"><span data-stu-id="99c39-114">l</span></span>|<span data-ttu-id="99c39-115">PRAWDA/FAŁSZ</span><span class="sxs-lookup"><span data-stu-id="99c39-115">true/false</span></span>|

]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (ReadOnlySpan&lt;byte&gt; source, out byte value, out int bytesConsumed, char standardFormat = '\0');" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; source, [out] unsigned int8&amp; value, [out] int32&amp; bytesConsumed, char standardFormat) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.Text.Utf8Parser.TryParse(System.ReadOnlySpan{System.Byte},System.Byte@,System.Int32@,System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (source As ReadOnlySpan(Of Byte), ByRef value As Byte, ByRef bytesConsumed As Integer, Optional standardFormat As Char = '\0') As Boolean" />
      <MemberSignature Language="F#" Value="static member TryParse : ReadOnlySpan&lt;byte&gt; *  *  * char -&gt; bool" Usage="System.Buffers.Text.Utf8Parser.TryParse (source, value, bytesConsumed, standardFormat)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="value" Type="System.Byte" RefType="out" />
        <Parameter Name="bytesConsumed" Type="System.Int32" RefType="out" />
        <Parameter Name="standardFormat" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="99c39-116">Ciąg Utf8 do analizy.</span><span class="sxs-lookup"><span data-stu-id="99c39-116">The Utf8 string to parse.</span></span></param>
        <param name="value"><span data-ttu-id="99c39-117">Gdy metoda zwraca, zawiera wartość przeanalizowane z <paramref name="source" />, jeśli operacja analizowania zakończyła się pomyślnie.</span><span class="sxs-lookup"><span data-stu-id="99c39-117">When the method returns, contains the value parsed from <paramref name="source" />, if the parsing operation succeeded.</span></span></param>
        <param name="bytesConsumed"><span data-ttu-id="99c39-118">Jeśli operacja analizowania zakończyła się pomyślnie, zawiera długość w bajtach przeanalizowanego podciągu, gdy metoda zwraca.</span><span class="sxs-lookup"><span data-stu-id="99c39-118">If the parsing operation was successful, contains the length in bytes of the parsed substring when the method returns.</span></span> <span data-ttu-id="99c39-119">Jeśli metoda zakończy się <paramref name="bytesConsumed" /> niepowodzeniem, jest ustawiona na 0.</span><span class="sxs-lookup"><span data-stu-id="99c39-119">If the method fails, <paramref name="bytesConsumed" /> is set to 0.</span></span></param>
        <param name="standardFormat"><span data-ttu-id="99c39-120">Oczekiwany format ciągu Utf8.</span><span class="sxs-lookup"><span data-stu-id="99c39-120">The expected format of the Utf8 string.</span></span></param>
        <summary><span data-ttu-id="99c39-121"><see cref="T:System.Byte" /> Analizuje na początku ciągu Utf8.</span><span class="sxs-lookup"><span data-stu-id="99c39-121">Parses a <see cref="T:System.Byte" /> at the start of a Utf8 string.</span></span></summary>
        <returns><span data-ttu-id="99c39-122"><see langword="true" />dla sukcesu; <see langword="false" /> Jeśli ciąg nie jest syntaktycznie prawidłowy lub przepełnienie lub niedoszło.</span><span class="sxs-lookup"><span data-stu-id="99c39-122"><see langword="true" /> for success; <see langword="false" /> if the string was not syntactically valid or an overflow or underflow occurred.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

<span data-ttu-id="99c39-123">Obsługiwane formaty:</span><span class="sxs-lookup"><span data-stu-id="99c39-123">Formats supported:</span></span> 

|<span data-ttu-id="99c39-124">Ciąg formatu</span><span class="sxs-lookup"><span data-stu-id="99c39-124">Format string</span></span>|<span data-ttu-id="99c39-125">Przykładowy format oczekiwany</span><span class="sxs-lookup"><span data-stu-id="99c39-125">Example expected format</span></span>|
|--|--|
|<span data-ttu-id="99c39-126">G/g (wartość domyślna)</span><span class="sxs-lookup"><span data-stu-id="99c39-126">G/g (default)</span></span>| |
|<span data-ttu-id="99c39-127">D/d</span><span class="sxs-lookup"><span data-stu-id="99c39-127">D/d</span></span>|<span data-ttu-id="99c39-128">122</span><span class="sxs-lookup"><span data-stu-id="99c39-128">122</span></span>|
|<span data-ttu-id="99c39-129">N/n</span><span class="sxs-lookup"><span data-stu-id="99c39-129">N/n</span></span>|<span data-ttu-id="99c39-130">122</span><span class="sxs-lookup"><span data-stu-id="99c39-130">122</span></span>|       
|<span data-ttu-id="99c39-131">X/x</span><span class="sxs-lookup"><span data-stu-id="99c39-131">X/x</span></span>|<span data-ttu-id="99c39-132">pozycja</span><span class="sxs-lookup"><span data-stu-id="99c39-132">7a</span></span>|

]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (ReadOnlySpan&lt;byte&gt; source, out DateTime value, out int bytesConsumed, char standardFormat = '\0');" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; source, [out] valuetype System.DateTime&amp; value, [out] int32&amp; bytesConsumed, char standardFormat) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.Text.Utf8Parser.TryParse(System.ReadOnlySpan{System.Byte},System.DateTime@,System.Int32@,System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (source As ReadOnlySpan(Of Byte), ByRef value As DateTime, ByRef bytesConsumed As Integer, Optional standardFormat As Char = '\0') As Boolean" />
      <MemberSignature Language="F#" Value="static member TryParse : ReadOnlySpan&lt;byte&gt; *  *  * char -&gt; bool" Usage="System.Buffers.Text.Utf8Parser.TryParse (source, value, bytesConsumed, standardFormat)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="value" Type="System.DateTime" RefType="out" />
        <Parameter Name="bytesConsumed" Type="System.Int32" RefType="out" />
        <Parameter Name="standardFormat" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="99c39-133">Ciąg Utf8 do analizy.</span><span class="sxs-lookup"><span data-stu-id="99c39-133">The Utf8 string to parse.</span></span></param>
        <param name="value"><span data-ttu-id="99c39-134">Gdy metoda zwraca, zawiera wartość przeanalizowane z <paramref name="source" />, jeśli operacja analizowania zakończyła się pomyślnie.</span><span class="sxs-lookup"><span data-stu-id="99c39-134">When the method returns, contains the value parsed from <paramref name="source" />, if the parsing operation succeeded.</span></span></param>
        <param name="bytesConsumed"><span data-ttu-id="99c39-135">Jeśli operacja analizowania zakończyła się pomyślnie, zawiera długość w bajtach przeanalizowanego podciągu, gdy metoda zwraca.</span><span class="sxs-lookup"><span data-stu-id="99c39-135">If the parsing operation was successful, contains the length in bytes of the parsed substring when the method returns.</span></span> <span data-ttu-id="99c39-136">Jeśli metoda zakończy się <paramref name="bytesConsumed" /> niepowodzeniem, jest ustawiona na 0.</span><span class="sxs-lookup"><span data-stu-id="99c39-136">If the method fails, <paramref name="bytesConsumed" /> is set to 0.</span></span></param>
        <param name="standardFormat"><span data-ttu-id="99c39-137">Oczekiwany format ciągu Utf8.</span><span class="sxs-lookup"><span data-stu-id="99c39-137">The expected format of the Utf8 string.</span></span></param>
        <summary><span data-ttu-id="99c39-138"><see cref="T:System.DateTime" /> Analizuje na początku ciągu Utf8.</span><span class="sxs-lookup"><span data-stu-id="99c39-138">Parses a <see cref="T:System.DateTime" /> at the start of a Utf8 string.</span></span></summary>
        <returns><span data-ttu-id="99c39-139"><see langword="true" />dla sukcesu; <see langword="false" /> Jeśli ciąg nie jest syntaktycznie prawidłowy lub przepełnienie lub niedoszło.</span><span class="sxs-lookup"><span data-stu-id="99c39-139"><see langword="true" /> for success; <see langword="false" /> if the string was not syntactically valid or an overflow or underflow occurred.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

<span data-ttu-id="99c39-140">Obsługiwane formaty:</span><span class="sxs-lookup"><span data-stu-id="99c39-140">Formats supported:</span></span>

|<span data-ttu-id="99c39-141">Ciąg formatu</span><span class="sxs-lookup"><span data-stu-id="99c39-141">Format string</span></span>|<span data-ttu-id="99c39-142">Przykładowy format oczekiwany</span><span class="sxs-lookup"><span data-stu-id="99c39-142">Example expected format</span></span>|<span data-ttu-id="99c39-143">Komentarze</span><span class="sxs-lookup"><span data-stu-id="99c39-143">Comments</span></span>|
|--|--|--|
|<span data-ttu-id="99c39-144">G (domyślnie)</span><span class="sxs-lookup"><span data-stu-id="99c39-144">G  (default)</span></span>|<span data-ttu-id="99c39-145">05/25/2017 10:30:15</span><span class="sxs-lookup"><span data-stu-id="99c39-145">05/25/2017 10:30:15</span></span>| |
|<span data-ttu-id="99c39-146">R</span><span class="sxs-lookup"><span data-stu-id="99c39-146">R</span></span>|<span data-ttu-id="99c39-147">WT, 03 sty 2017 08:08:05 GMT</span><span class="sxs-lookup"><span data-stu-id="99c39-147">Tue, 03 Jan 2017 08:08:05 GMT</span></span>|<span data-ttu-id="99c39-148">(RFC 1123)</span><span class="sxs-lookup"><span data-stu-id="99c39-148">(RFC 1123)</span></span>|
|<span data-ttu-id="99c39-149">l</span><span class="sxs-lookup"><span data-stu-id="99c39-149">l</span></span>|<span data-ttu-id="99c39-150">WT, 03 sty 2017 08:08:05 GMT</span><span class="sxs-lookup"><span data-stu-id="99c39-150">tue, 03 jan 2017 08:08:05 gmt</span></span>|<span data-ttu-id="99c39-151">(Małe litery RFC 1123)</span><span class="sxs-lookup"><span data-stu-id="99c39-151">(Lowercase RFC 1123)</span></span>|
|<span data-ttu-id="99c39-152">O</span><span class="sxs-lookup"><span data-stu-id="99c39-152">O</span></span>|<span data-ttu-id="99c39-153">2017-06-12T05:30:45.7680000-07:00</span><span class="sxs-lookup"><span data-stu-id="99c39-153">2017-06-12T05:30:45.7680000-07:00</span></span>|<span data-ttu-id="99c39-154">(Round-wyłącznik)</span><span class="sxs-lookup"><span data-stu-id="99c39-154">(Round-trippable)</span></span>|

]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (ReadOnlySpan&lt;byte&gt; source, out DateTimeOffset value, out int bytesConsumed, char standardFormat = '\0');" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; source, [out] valuetype System.DateTimeOffset&amp; value, [out] int32&amp; bytesConsumed, char standardFormat) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.Text.Utf8Parser.TryParse(System.ReadOnlySpan{System.Byte},System.DateTimeOffset@,System.Int32@,System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (source As ReadOnlySpan(Of Byte), ByRef value As DateTimeOffset, ByRef bytesConsumed As Integer, Optional standardFormat As Char = '\0') As Boolean" />
      <MemberSignature Language="F#" Value="static member TryParse : ReadOnlySpan&lt;byte&gt; *  *  * char -&gt; bool" Usage="System.Buffers.Text.Utf8Parser.TryParse (source, value, bytesConsumed, standardFormat)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="value" Type="System.DateTimeOffset" RefType="out" />
        <Parameter Name="bytesConsumed" Type="System.Int32" RefType="out" />
        <Parameter Name="standardFormat" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="99c39-155">Ciąg Utf8 do analizy.</span><span class="sxs-lookup"><span data-stu-id="99c39-155">The Utf8 string to parse.</span></span></param>
        <param name="value"><span data-ttu-id="99c39-156">Gdy metoda zwraca, zawiera wartość przeanalizowane z <paramref name="source" />, jeśli operacja analizowania zakończyła się pomyślnie.</span><span class="sxs-lookup"><span data-stu-id="99c39-156">When the method returns, contains the value parsed from <paramref name="source" />, if the parsing operation succeeded.</span></span></param>
        <param name="bytesConsumed"><span data-ttu-id="99c39-157">Jeśli operacja analizowania zakończyła się pomyślnie, zawiera długość w bajtach przeanalizowanego podciągu, gdy metoda zwraca.</span><span class="sxs-lookup"><span data-stu-id="99c39-157">If the parsing operation was successful, contains the length in bytes of the parsed substring when the method returns.</span></span> <span data-ttu-id="99c39-158">Jeśli metoda zakończy się <paramref name="bytesConsumed" /> niepowodzeniem, jest ustawiona na 0.</span><span class="sxs-lookup"><span data-stu-id="99c39-158">If the method fails, <paramref name="bytesConsumed" /> is set to 0.</span></span></param>
        <param name="standardFormat"><span data-ttu-id="99c39-159">Oczekiwany format ciągu Utf8.</span><span class="sxs-lookup"><span data-stu-id="99c39-159">The expected format of the Utf8 string.</span></span></param>
        <summary><span data-ttu-id="99c39-160"><see cref="T:System.DateTimeOffset" /> Analizuje na początku ciągu Utf8.</span><span class="sxs-lookup"><span data-stu-id="99c39-160">Parses a <see cref="T:System.DateTimeOffset" /> at the start of a Utf8 string.</span></span></summary>
        <returns><span data-ttu-id="99c39-161"><see langword="true" />dla sukcesu; <see langword="false" /> Jeśli ciąg nie jest syntaktycznie prawidłowy lub przepełnienie lub niedoszło.</span><span class="sxs-lookup"><span data-stu-id="99c39-161"><see langword="true" /> for success; <see langword="false" /> if the string was not syntactically valid or an overflow or underflow occurred.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

<span data-ttu-id="99c39-162">Obsługiwane formaty:</span><span class="sxs-lookup"><span data-stu-id="99c39-162">Formats supported:</span></span>

|<span data-ttu-id="99c39-163">Ciąg formatu</span><span class="sxs-lookup"><span data-stu-id="99c39-163">Format string</span></span>|<span data-ttu-id="99c39-164">Przykładowy format oczekiwany</span><span class="sxs-lookup"><span data-stu-id="99c39-164">Example expected format</span></span>|<span data-ttu-id="99c39-165">Komentarze</span><span class="sxs-lookup"><span data-stu-id="99c39-165">Comments</span></span>|
|--|--|--|
|<span data-ttu-id="99c39-166">G (domyślnie)</span><span class="sxs-lookup"><span data-stu-id="99c39-166">G  (default)</span></span>|<span data-ttu-id="99c39-167">05/25/2017 10:30:15</span><span class="sxs-lookup"><span data-stu-id="99c39-167">05/25/2017 10:30:15</span></span>| |
|<span data-ttu-id="99c39-168">R</span><span class="sxs-lookup"><span data-stu-id="99c39-168">R</span></span>|<span data-ttu-id="99c39-169">WT, 03 sty 2017 08:08:05 GMT</span><span class="sxs-lookup"><span data-stu-id="99c39-169">Tue, 03 Jan 2017 08:08:05 GMT</span></span>|<span data-ttu-id="99c39-170">(RFC 1123)</span><span class="sxs-lookup"><span data-stu-id="99c39-170">(RFC 1123)</span></span>|
|<span data-ttu-id="99c39-171">l</span><span class="sxs-lookup"><span data-stu-id="99c39-171">l</span></span>|<span data-ttu-id="99c39-172">WT, 03 sty 2017 08:08:05 GMT</span><span class="sxs-lookup"><span data-stu-id="99c39-172">tue, 03 jan 2017 08:08:05 gmt</span></span>|<span data-ttu-id="99c39-173">(Małe litery RFC 1123)</span><span class="sxs-lookup"><span data-stu-id="99c39-173">(Lowercase RFC 1123)</span></span>|
|<span data-ttu-id="99c39-174">O</span><span class="sxs-lookup"><span data-stu-id="99c39-174">O</span></span>|<span data-ttu-id="99c39-175">2017-06-12T05:30:45.7680000-07:00</span><span class="sxs-lookup"><span data-stu-id="99c39-175">2017-06-12T05:30:45.7680000-07:00</span></span>|<span data-ttu-id="99c39-176">(Round-wyłącznik)</span><span class="sxs-lookup"><span data-stu-id="99c39-176">(Round-trippable)</span></span>|

]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (ReadOnlySpan&lt;byte&gt; source, out decimal value, out int bytesConsumed, char standardFormat = '\0');" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; source, [out] valuetype System.Decimal&amp; value, [out] int32&amp; bytesConsumed, char standardFormat) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.Text.Utf8Parser.TryParse(System.ReadOnlySpan{System.Byte},System.Decimal@,System.Int32@,System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (source As ReadOnlySpan(Of Byte), ByRef value As Decimal, ByRef bytesConsumed As Integer, Optional standardFormat As Char = '\0') As Boolean" />
      <MemberSignature Language="F#" Value="static member TryParse : ReadOnlySpan&lt;byte&gt; *  *  * char -&gt; bool" Usage="System.Buffers.Text.Utf8Parser.TryParse (source, value, bytesConsumed, standardFormat)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="value" Type="System.Decimal" RefType="out" />
        <Parameter Name="bytesConsumed" Type="System.Int32" RefType="out" />
        <Parameter Name="standardFormat" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="99c39-177">Ciąg Utf8 do analizy.</span><span class="sxs-lookup"><span data-stu-id="99c39-177">The Utf8 string to parse.</span></span></param>
        <param name="value"><span data-ttu-id="99c39-178">Gdy metoda zwraca, zawiera wartość przeanalizowane z <paramref name="source" />, jeśli operacja analizowania zakończyła się pomyślnie.</span><span class="sxs-lookup"><span data-stu-id="99c39-178">When the method returns, contains the value parsed from <paramref name="source" />, if the parsing operation succeeded.</span></span></param>
        <param name="bytesConsumed"><span data-ttu-id="99c39-179">Jeśli operacja analizowania zakończyła się pomyślnie, zawiera długość w bajtach przeanalizowanego podciągu, gdy metoda zwraca.</span><span class="sxs-lookup"><span data-stu-id="99c39-179">If the parsing operation was successful, contains the length in bytes of the parsed substring when the method returns.</span></span> <span data-ttu-id="99c39-180">Jeśli metoda zakończy się <paramref name="bytesConsumed" /> niepowodzeniem, jest ustawiona na 0.</span><span class="sxs-lookup"><span data-stu-id="99c39-180">If the method fails, <paramref name="bytesConsumed" /> is set to 0.</span></span></param>
        <param name="standardFormat"><span data-ttu-id="99c39-181">Oczekiwany format ciągu Utf8.</span><span class="sxs-lookup"><span data-stu-id="99c39-181">The expected format of the Utf8 string.</span></span></param>
        <summary><span data-ttu-id="99c39-182"><see cref="T:System.Decimal" /> Analizuje na początku ciągu Utf8.</span><span class="sxs-lookup"><span data-stu-id="99c39-182">Parses a <see cref="T:System.Decimal" /> at the start of a Utf8 string.</span></span></summary>
        <returns><span data-ttu-id="99c39-183"><see langword="true" />dla sukcesu; <see langword="false" /> Jeśli ciąg nie jest syntaktycznie prawidłowy lub przepełnienie lub niedoszło.</span><span class="sxs-lookup"><span data-stu-id="99c39-183"><see langword="true" /> for success; <see langword="false" /> if the string was not syntactically valid or an overflow or underflow occurred.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

<span data-ttu-id="99c39-184">Obsługiwane formaty:</span><span class="sxs-lookup"><span data-stu-id="99c39-184">Formats supported:</span></span>

|<span data-ttu-id="99c39-185">Ciąg formatu</span><span class="sxs-lookup"><span data-stu-id="99c39-185">Format string</span></span>|<span data-ttu-id="99c39-186">Przykładowy format oczekiwany</span><span class="sxs-lookup"><span data-stu-id="99c39-186">Example expected format</span></span>|<span data-ttu-id="99c39-187">Komentarze</span><span class="sxs-lookup"><span data-stu-id="99c39-187">Comments</span></span>|
|--|--|--|
|<span data-ttu-id="99c39-188">G/g (wartość domyślna)</span><span class="sxs-lookup"><span data-stu-id="99c39-188">G/g  (default)</span></span>| |  
|<span data-ttu-id="99c39-189">F/f</span><span class="sxs-lookup"><span data-stu-id="99c39-189">F/f</span></span>|<span data-ttu-id="99c39-190">12,45</span><span class="sxs-lookup"><span data-stu-id="99c39-190">12.45</span></span>|<span data-ttu-id="99c39-191">Stały punkt</span><span class="sxs-lookup"><span data-stu-id="99c39-191">Fixed point</span></span>|
|<span data-ttu-id="99c39-192">E/e</span><span class="sxs-lookup"><span data-stu-id="99c39-192">E/e</span></span>|<span data-ttu-id="99c39-193">1.245000 E1</span><span class="sxs-lookup"><span data-stu-id="99c39-193">1.245000e1</span></span>|<span data-ttu-id="99c39-194">Wykładniczego</span><span class="sxs-lookup"><span data-stu-id="99c39-194">Exponential</span></span>|

]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (ReadOnlySpan&lt;byte&gt; source, out double value, out int bytesConsumed, char standardFormat = '\0');" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; source, [out] float64&amp; value, [out] int32&amp; bytesConsumed, char standardFormat) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.Text.Utf8Parser.TryParse(System.ReadOnlySpan{System.Byte},System.Double@,System.Int32@,System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (source As ReadOnlySpan(Of Byte), ByRef value As Double, ByRef bytesConsumed As Integer, Optional standardFormat As Char = '\0') As Boolean" />
      <MemberSignature Language="F#" Value="static member TryParse : ReadOnlySpan&lt;byte&gt; *  *  * char -&gt; bool" Usage="System.Buffers.Text.Utf8Parser.TryParse (source, value, bytesConsumed, standardFormat)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="value" Type="System.Double" RefType="out" />
        <Parameter Name="bytesConsumed" Type="System.Int32" RefType="out" />
        <Parameter Name="standardFormat" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="99c39-195">Ciąg Utf8 do analizy.</span><span class="sxs-lookup"><span data-stu-id="99c39-195">The Utf8 string to parse.</span></span></param>
        <param name="value"><span data-ttu-id="99c39-196">Gdy metoda zwraca, zawiera wartość przeanalizowane z <paramref name="source" />, jeśli operacja analizowania zakończyła się pomyślnie.</span><span class="sxs-lookup"><span data-stu-id="99c39-196">When the method returns, contains the value parsed from <paramref name="source" />, if the parsing operation succeeded.</span></span></param>
        <param name="bytesConsumed"><span data-ttu-id="99c39-197">Jeśli operacja analizowania zakończyła się pomyślnie, zawiera długość w bajtach przeanalizowanego podciągu, gdy metoda zwraca.</span><span class="sxs-lookup"><span data-stu-id="99c39-197">If the parsing operation was successful, contains the length in bytes of the parsed substring when the method returns.</span></span> <span data-ttu-id="99c39-198">Jeśli metoda zakończy się <paramref name="bytesConsumed" /> niepowodzeniem, jest ustawiona na 0.</span><span class="sxs-lookup"><span data-stu-id="99c39-198">If the method fails, <paramref name="bytesConsumed" /> is set to 0.</span></span></param>
        <param name="standardFormat"><span data-ttu-id="99c39-199">Oczekiwany format ciągu Utf8.</span><span class="sxs-lookup"><span data-stu-id="99c39-199">The expected format of the Utf8 string.</span></span></param>
        <summary><span data-ttu-id="99c39-200"><see cref="T:System.Double" /> Analizuje na początku ciągu Utf8.</span><span class="sxs-lookup"><span data-stu-id="99c39-200">Parses a <see cref="T:System.Double" /> at the start of a Utf8 string.</span></span></summary>
        <returns><span data-ttu-id="99c39-201"><see langword="true" />dla sukcesu; <see langword="false" /> Jeśli ciąg nie jest syntaktycznie prawidłowy lub przepełnienie lub niedoszło.</span><span class="sxs-lookup"><span data-stu-id="99c39-201"><see langword="true" /> for success; <see langword="false" /> if the string was not syntactically valid or an overflow or underflow occurred.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

<span data-ttu-id="99c39-202">Obsługiwane formaty:</span><span class="sxs-lookup"><span data-stu-id="99c39-202">Formats supported:</span></span>

|<span data-ttu-id="99c39-203">Ciąg formatu</span><span class="sxs-lookup"><span data-stu-id="99c39-203">Format string</span></span>|<span data-ttu-id="99c39-204">Przykładowy format oczekiwany</span><span class="sxs-lookup"><span data-stu-id="99c39-204">Example expected format</span></span>|<span data-ttu-id="99c39-205">Komentarze</span><span class="sxs-lookup"><span data-stu-id="99c39-205">Comments</span></span>|
|--|--|--|
|<span data-ttu-id="99c39-206">G/g (wartość domyślna)</span><span class="sxs-lookup"><span data-stu-id="99c39-206">G/g  (default)</span></span>| |  
|<span data-ttu-id="99c39-207">F/f</span><span class="sxs-lookup"><span data-stu-id="99c39-207">F/f</span></span>|<span data-ttu-id="99c39-208">12,45</span><span class="sxs-lookup"><span data-stu-id="99c39-208">12.45</span></span>|<span data-ttu-id="99c39-209">Stały punkt</span><span class="sxs-lookup"><span data-stu-id="99c39-209">Fixed point</span></span>|
|<span data-ttu-id="99c39-210">E/e</span><span class="sxs-lookup"><span data-stu-id="99c39-210">E/e</span></span>|<span data-ttu-id="99c39-211">1.245000 E1</span><span class="sxs-lookup"><span data-stu-id="99c39-211">1.245000e1</span></span>|<span data-ttu-id="99c39-212">Wykładniczego</span><span class="sxs-lookup"><span data-stu-id="99c39-212">Exponential</span></span>|

]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (ReadOnlySpan&lt;byte&gt; source, out Guid value, out int bytesConsumed, char standardFormat = '\0');" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; source, [out] valuetype System.Guid&amp; value, [out] int32&amp; bytesConsumed, char standardFormat) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.Text.Utf8Parser.TryParse(System.ReadOnlySpan{System.Byte},System.Guid@,System.Int32@,System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (source As ReadOnlySpan(Of Byte), ByRef value As Guid, ByRef bytesConsumed As Integer, Optional standardFormat As Char = '\0') As Boolean" />
      <MemberSignature Language="F#" Value="static member TryParse : ReadOnlySpan&lt;byte&gt; *  *  * char -&gt; bool" Usage="System.Buffers.Text.Utf8Parser.TryParse (source, value, bytesConsumed, standardFormat)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="value" Type="System.Guid" RefType="out" />
        <Parameter Name="bytesConsumed" Type="System.Int32" RefType="out" />
        <Parameter Name="standardFormat" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="99c39-213">Ciąg Utf8 do analizy.</span><span class="sxs-lookup"><span data-stu-id="99c39-213">The Utf8 string to parse.</span></span></param>
        <param name="value"><span data-ttu-id="99c39-214">Gdy metoda zwraca, zawiera wartość przeanalizowane z <paramref name="source" />, jeśli operacja analizowania zakończyła się pomyślnie.</span><span class="sxs-lookup"><span data-stu-id="99c39-214">When the method returns, contains the value parsed from <paramref name="source" />, if the parsing operation succeeded.</span></span></param>
        <param name="bytesConsumed"><span data-ttu-id="99c39-215">Jeśli operacja analizowania zakończyła się pomyślnie, zawiera długość w bajtach przeanalizowanego podciągu, gdy metoda zwraca.</span><span class="sxs-lookup"><span data-stu-id="99c39-215">If the parsing operation was successful, contains the length in bytes of the parsed substring when the method returns.</span></span> <span data-ttu-id="99c39-216">Jeśli metoda zakończy się <paramref name="bytesConsumed" /> niepowodzeniem, jest ustawiona na 0.</span><span class="sxs-lookup"><span data-stu-id="99c39-216">If the method fails, <paramref name="bytesConsumed" /> is set to 0.</span></span></param>
        <param name="standardFormat"><span data-ttu-id="99c39-217">Oczekiwany format ciągu Utf8.</span><span class="sxs-lookup"><span data-stu-id="99c39-217">The expected format of the Utf8 string.</span></span></param>
        <summary><span data-ttu-id="99c39-218"><see cref="T:System.Guid" /> Analizuje na początku ciągu Utf8.</span><span class="sxs-lookup"><span data-stu-id="99c39-218">Parses a <see cref="T:System.Guid" /> at the start of a Utf8 string.</span></span></summary>
        <returns><span data-ttu-id="99c39-219"><see langword="true" />dla sukcesu; <see langword="false" /> Jeśli ciąg nie jest syntaktycznie prawidłowy lub przepełnienie lub niedoszło.</span><span class="sxs-lookup"><span data-stu-id="99c39-219"><see langword="true" /> for success; <see langword="false" /> if the string was not syntactically valid or an overflow or underflow occurred.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

<span data-ttu-id="99c39-220">Obsługiwane formaty:</span><span class="sxs-lookup"><span data-stu-id="99c39-220">Formats supported:</span></span>

|<span data-ttu-id="99c39-221">Ciąg formatu</span><span class="sxs-lookup"><span data-stu-id="99c39-221">Format string</span></span>|<span data-ttu-id="99c39-222">Oczekiwany format</span><span class="sxs-lookup"><span data-stu-id="99c39-222">Expected format</span></span>|
|--|--|
|<span data-ttu-id="99c39-223">D (domyślnie)</span><span class="sxs-lookup"><span data-stu-id="99c39-223">D (default)</span></span>|<span data-ttu-id="99c39-224">nnnnnnnn-nnnn-nnnn-nnnn-nnnnnnnnnnnn</span><span class="sxs-lookup"><span data-stu-id="99c39-224">nnnnnnnn-nnnn-nnnn-nnnn-nnnnnnnnnnnn</span></span>|
|<span data-ttu-id="99c39-225">B</span><span class="sxs-lookup"><span data-stu-id="99c39-225">B</span></span>|<span data-ttu-id="99c39-226">{nnnnnnnn-nnnn-nnnn-nnnn-nnnnnnnnnnnn}</span><span class="sxs-lookup"><span data-stu-id="99c39-226">{nnnnnnnn-nnnn-nnnn-nnnn-nnnnnnnnnnnn}</span></span>|
|<span data-ttu-id="99c39-227">P</span><span class="sxs-lookup"><span data-stu-id="99c39-227">P</span></span>|<span data-ttu-id="99c39-228">(nnnnnnnn-nnnn-nnnn-nnnn-nnnnnnnnnnnn)</span><span class="sxs-lookup"><span data-stu-id="99c39-228">(nnnnnnnn-nnnn-nnnn-nnnn-nnnnnnnnnnnn)</span></span>|
|<span data-ttu-id="99c39-229">N</span><span class="sxs-lookup"><span data-stu-id="99c39-229">N</span></span>|<span data-ttu-id="99c39-230">nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn</span><span class="sxs-lookup"><span data-stu-id="99c39-230">nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn</span></span>|

]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (ReadOnlySpan&lt;byte&gt; source, out short value, out int bytesConsumed, char standardFormat = '\0');" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; source, [out] int16&amp; value, [out] int32&amp; bytesConsumed, char standardFormat) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.Text.Utf8Parser.TryParse(System.ReadOnlySpan{System.Byte},System.Int16@,System.Int32@,System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (source As ReadOnlySpan(Of Byte), ByRef value As Short, ByRef bytesConsumed As Integer, Optional standardFormat As Char = '\0') As Boolean" />
      <MemberSignature Language="F#" Value="static member TryParse : ReadOnlySpan&lt;byte&gt; *  *  * char -&gt; bool" Usage="System.Buffers.Text.Utf8Parser.TryParse (source, value, bytesConsumed, standardFormat)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="value" Type="System.Int16" RefType="out" />
        <Parameter Name="bytesConsumed" Type="System.Int32" RefType="out" />
        <Parameter Name="standardFormat" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="99c39-231">Ciąg Utf8 do analizy.</span><span class="sxs-lookup"><span data-stu-id="99c39-231">The Utf8 string to parse.</span></span></param>
        <param name="value"><span data-ttu-id="99c39-232">Gdy metoda zwraca, zawiera wartość przeanalizowane z <paramref name="source" />, jeśli operacja analizowania zakończyła się pomyślnie.</span><span class="sxs-lookup"><span data-stu-id="99c39-232">When the method returns, contains the value parsed from <paramref name="source" />, if the parsing operation succeeded.</span></span></param>
        <param name="bytesConsumed"><span data-ttu-id="99c39-233">Jeśli operacja analizowania zakończyła się pomyślnie, zawiera długość w bajtach przeanalizowanego podciągu, gdy metoda zwraca.</span><span class="sxs-lookup"><span data-stu-id="99c39-233">If the parsing operation was successful, contains the length in bytes of the parsed substring when the method returns.</span></span> <span data-ttu-id="99c39-234">Jeśli metoda zakończy się <paramref name="bytesConsumed" /> niepowodzeniem, jest ustawiona na 0.</span><span class="sxs-lookup"><span data-stu-id="99c39-234">If the method fails, <paramref name="bytesConsumed" /> is set to 0.</span></span></param>
        <param name="standardFormat"><span data-ttu-id="99c39-235">Oczekiwany format ciągu Utf8.</span><span class="sxs-lookup"><span data-stu-id="99c39-235">The expected format of the Utf8 string.</span></span></param>
        <summary><span data-ttu-id="99c39-236"><see cref="T:System.Int16" /> Analizuje na początku ciągu Utf8.</span><span class="sxs-lookup"><span data-stu-id="99c39-236">Parses an <see cref="T:System.Int16" /> at the start of a Utf8 string.</span></span></summary>
        <returns><span data-ttu-id="99c39-237"><see langword="true" />dla sukcesu; <see langword="false" /> Jeśli ciąg nie jest syntaktycznie prawidłowy lub przepełnienie lub niedoszło.</span><span class="sxs-lookup"><span data-stu-id="99c39-237"><see langword="true" /> for success; <see langword="false" /> if the string was not syntactically valid or an overflow or underflow occurred.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

<span data-ttu-id="99c39-238">Obsługiwane formaty:</span><span class="sxs-lookup"><span data-stu-id="99c39-238">Formats supported:</span></span>

|<span data-ttu-id="99c39-239">Ciąg formatu</span><span class="sxs-lookup"><span data-stu-id="99c39-239">Format string</span></span>|<span data-ttu-id="99c39-240">Przykładowy format oczekiwany</span><span class="sxs-lookup"><span data-stu-id="99c39-240">Example expected format</span></span>|
|--|--|
|<span data-ttu-id="99c39-241">G/g (wartość domyślna)</span><span class="sxs-lookup"><span data-stu-id="99c39-241">G/g (default)</span></span>| |
|<span data-ttu-id="99c39-242">D/d</span><span class="sxs-lookup"><span data-stu-id="99c39-242">D/d</span></span>|<span data-ttu-id="99c39-243">32767</span><span class="sxs-lookup"><span data-stu-id="99c39-243">32767</span></span>|
|<span data-ttu-id="99c39-244">N/n</span><span class="sxs-lookup"><span data-stu-id="99c39-244">N/n</span></span>|<span data-ttu-id="99c39-245">32,767</span><span class="sxs-lookup"><span data-stu-id="99c39-245">32,767</span></span>|       
|<span data-ttu-id="99c39-246">X/x</span><span class="sxs-lookup"><span data-stu-id="99c39-246">X/x</span></span>|<span data-ttu-id="99c39-247">7fff</span><span class="sxs-lookup"><span data-stu-id="99c39-247">7fff</span></span>|

]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (ReadOnlySpan&lt;byte&gt; source, out int value, out int bytesConsumed, char standardFormat = '\0');" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; source, [out] int32&amp; value, [out] int32&amp; bytesConsumed, char standardFormat) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.Text.Utf8Parser.TryParse(System.ReadOnlySpan{System.Byte},System.Int32@,System.Int32@,System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (source As ReadOnlySpan(Of Byte), ByRef value As Integer, ByRef bytesConsumed As Integer, Optional standardFormat As Char = '\0') As Boolean" />
      <MemberSignature Language="F#" Value="static member TryParse : ReadOnlySpan&lt;byte&gt; *  *  * char -&gt; bool" Usage="System.Buffers.Text.Utf8Parser.TryParse (source, value, bytesConsumed, standardFormat)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="value" Type="System.Int32" RefType="out" />
        <Parameter Name="bytesConsumed" Type="System.Int32" RefType="out" />
        <Parameter Name="standardFormat" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="99c39-248">Ciąg Utf8 do analizy.</span><span class="sxs-lookup"><span data-stu-id="99c39-248">The Utf8 string to parse.</span></span></param>
        <param name="value"><span data-ttu-id="99c39-249">Gdy metoda zwraca, zawiera wartość przeanalizowane z <paramref name="source" />, jeśli operacja analizowania zakończyła się pomyślnie.</span><span class="sxs-lookup"><span data-stu-id="99c39-249">When the method returns, contains the value parsed from <paramref name="source" />, if the parsing operation succeeded.</span></span></param>
        <param name="bytesConsumed"><span data-ttu-id="99c39-250">Jeśli operacja analizowania zakończyła się pomyślnie, zawiera długość w bajtach przeanalizowanego podciągu, gdy metoda zwraca.</span><span class="sxs-lookup"><span data-stu-id="99c39-250">If the parsing operation was successful, contains the length in bytes of the parsed substring when the method returns.</span></span> <span data-ttu-id="99c39-251">Jeśli metoda zakończy się <paramref name="bytesConsumed" /> niepowodzeniem, jest ustawiona na 0.</span><span class="sxs-lookup"><span data-stu-id="99c39-251">If the method fails, <paramref name="bytesConsumed" /> is set to 0.</span></span></param>
        <param name="standardFormat"><span data-ttu-id="99c39-252">Oczekiwany format ciągu Utf8.</span><span class="sxs-lookup"><span data-stu-id="99c39-252">The expected format of the Utf8 string.</span></span></param>
        <summary><span data-ttu-id="99c39-253"><see cref="T:System.Int32" /> Analizuje na początku ciągu Utf8.</span><span class="sxs-lookup"><span data-stu-id="99c39-253">Parses an <see cref="T:System.Int32" /> at the start of a Utf8 string.</span></span></summary>
        <returns><span data-ttu-id="99c39-254"><see langword="true" />dla sukcesu; <see langword="false" /> Jeśli ciąg nie jest syntaktycznie prawidłowy lub przepełnienie lub niedoszło.</span><span class="sxs-lookup"><span data-stu-id="99c39-254"><see langword="true" /> for success; <see langword="false" /> if the string was not syntactically valid or an overflow or underflow occurred.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

<span data-ttu-id="99c39-255">Obsługiwane formaty:</span><span class="sxs-lookup"><span data-stu-id="99c39-255">Formats supported:</span></span>

|<span data-ttu-id="99c39-256">Ciąg formatu</span><span class="sxs-lookup"><span data-stu-id="99c39-256">Format string</span></span>|<span data-ttu-id="99c39-257">Przykładowy format oczekiwany</span><span class="sxs-lookup"><span data-stu-id="99c39-257">Example expected format</span></span>|
|--|--|
|<span data-ttu-id="99c39-258">G/g (wartość domyślna)</span><span class="sxs-lookup"><span data-stu-id="99c39-258">G/g (default)</span></span>| |
|<span data-ttu-id="99c39-259">D/d</span><span class="sxs-lookup"><span data-stu-id="99c39-259">D/d</span></span>|<span data-ttu-id="99c39-260">32767</span><span class="sxs-lookup"><span data-stu-id="99c39-260">32767</span></span>|
|<span data-ttu-id="99c39-261">N/n</span><span class="sxs-lookup"><span data-stu-id="99c39-261">N/n</span></span>|<span data-ttu-id="99c39-262">32,767</span><span class="sxs-lookup"><span data-stu-id="99c39-262">32,767</span></span>|       
|<span data-ttu-id="99c39-263">X/x</span><span class="sxs-lookup"><span data-stu-id="99c39-263">X/x</span></span>|<span data-ttu-id="99c39-264">7fff</span><span class="sxs-lookup"><span data-stu-id="99c39-264">7fff</span></span>|

]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (ReadOnlySpan&lt;byte&gt; source, out long value, out int bytesConsumed, char standardFormat = '\0');" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; source, [out] int64&amp; value, [out] int32&amp; bytesConsumed, char standardFormat) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.Text.Utf8Parser.TryParse(System.ReadOnlySpan{System.Byte},System.Int64@,System.Int32@,System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (source As ReadOnlySpan(Of Byte), ByRef value As Long, ByRef bytesConsumed As Integer, Optional standardFormat As Char = '\0') As Boolean" />
      <MemberSignature Language="F#" Value="static member TryParse : ReadOnlySpan&lt;byte&gt; *  *  * char -&gt; bool" Usage="System.Buffers.Text.Utf8Parser.TryParse (source, value, bytesConsumed, standardFormat)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="value" Type="System.Int64" RefType="out" />
        <Parameter Name="bytesConsumed" Type="System.Int32" RefType="out" />
        <Parameter Name="standardFormat" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="99c39-265">Ciąg Utf8 do analizy.</span><span class="sxs-lookup"><span data-stu-id="99c39-265">The Utf8 string to parse.</span></span></param>
        <param name="value"><span data-ttu-id="99c39-266">Gdy metoda zwraca, zawiera wartość przeanalizowane z <paramref name="source" />, jeśli operacja analizowania zakończyła się pomyślnie.</span><span class="sxs-lookup"><span data-stu-id="99c39-266">When the method returns, contains the value parsed from <paramref name="source" />, if the parsing operation succeeded.</span></span></param>
        <param name="bytesConsumed"><span data-ttu-id="99c39-267">Jeśli operacja analizowania zakończyła się pomyślnie, zawiera długość w bajtach przeanalizowanego podciągu, gdy metoda zwraca.</span><span class="sxs-lookup"><span data-stu-id="99c39-267">If the parsing operation was successful, contains the length in bytes of the parsed substring when the method returns.</span></span> <span data-ttu-id="99c39-268">Jeśli metoda zakończy się <paramref name="bytesConsumed" /> niepowodzeniem, jest ustawiona na 0.</span><span class="sxs-lookup"><span data-stu-id="99c39-268">If the method fails, <paramref name="bytesConsumed" /> is set to 0.</span></span></param>
        <param name="standardFormat"><span data-ttu-id="99c39-269">Oczekiwany format ciągu Utf8.</span><span class="sxs-lookup"><span data-stu-id="99c39-269">The expected format of the Utf8 string.</span></span></param>
        <summary><span data-ttu-id="99c39-270"><see cref="T:System.Int64" /> Analizuje na początku ciągu Utf8.</span><span class="sxs-lookup"><span data-stu-id="99c39-270">Parses an <see cref="T:System.Int64" /> at the start of a Utf8 string.</span></span></summary>
        <returns><span data-ttu-id="99c39-271"><see langword="true" />dla sukcesu; <see langword="false" /> Jeśli ciąg nie jest syntaktycznie prawidłowy lub przepełnienie lub niedoszło.</span><span class="sxs-lookup"><span data-stu-id="99c39-271"><see langword="true" /> for success; <see langword="false" /> if the string was not syntactically valid or an overflow or underflow occurred.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

<span data-ttu-id="99c39-272">Obsługiwane formaty:</span><span class="sxs-lookup"><span data-stu-id="99c39-272">Formats supported:</span></span>

|<span data-ttu-id="99c39-273">Ciąg formatu</span><span class="sxs-lookup"><span data-stu-id="99c39-273">Format string</span></span>|<span data-ttu-id="99c39-274">Przykładowy format oczekiwany</span><span class="sxs-lookup"><span data-stu-id="99c39-274">Example expected format</span></span>|
|--|--|
|<span data-ttu-id="99c39-275">G/g (wartość domyślna)</span><span class="sxs-lookup"><span data-stu-id="99c39-275">G/g (default)</span></span>| |
|<span data-ttu-id="99c39-276">D/d</span><span class="sxs-lookup"><span data-stu-id="99c39-276">D/d</span></span>|<span data-ttu-id="99c39-277">32767</span><span class="sxs-lookup"><span data-stu-id="99c39-277">32767</span></span>|
|<span data-ttu-id="99c39-278">N/n</span><span class="sxs-lookup"><span data-stu-id="99c39-278">N/n</span></span>|<span data-ttu-id="99c39-279">32,767</span><span class="sxs-lookup"><span data-stu-id="99c39-279">32,767</span></span>|       
|<span data-ttu-id="99c39-280">X/x</span><span class="sxs-lookup"><span data-stu-id="99c39-280">X/x</span></span>|<span data-ttu-id="99c39-281">7fff</span><span class="sxs-lookup"><span data-stu-id="99c39-281">7fff</span></span>|

]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (ReadOnlySpan&lt;byte&gt; source, out sbyte value, out int bytesConsumed, char standardFormat = '\0');" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; source, [out] int8&amp; value, [out] int32&amp; bytesConsumed, char standardFormat) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.Text.Utf8Parser.TryParse(System.ReadOnlySpan{System.Byte},System.SByte@,System.Int32@,System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (source As ReadOnlySpan(Of Byte), ByRef value As SByte, ByRef bytesConsumed As Integer, Optional standardFormat As Char = '\0') As Boolean" />
      <MemberSignature Language="F#" Value="static member TryParse : ReadOnlySpan&lt;byte&gt; *  *  * char -&gt; bool" Usage="System.Buffers.Text.Utf8Parser.TryParse (source, value, bytesConsumed, standardFormat)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-3.0;netcore-2.1;netcore-2.2;netstandard-2.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="value" Type="System.SByte" RefType="out" />
        <Parameter Name="bytesConsumed" Type="System.Int32" RefType="out" />
        <Parameter Name="standardFormat" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="99c39-282">Ciąg Utf8 do analizy.</span><span class="sxs-lookup"><span data-stu-id="99c39-282">The Utf8 string to parse.</span></span></param>
        <param name="value"><span data-ttu-id="99c39-283">Gdy metoda zwraca, zawiera wartość przeanalizowane z <paramref name="source" />, jeśli operacja analizowania zakończyła się pomyślnie.</span><span class="sxs-lookup"><span data-stu-id="99c39-283">When the method returns, contains the value parsed from <paramref name="source" />, if the parsing operation succeeded.</span></span></param>
        <param name="bytesConsumed"><span data-ttu-id="99c39-284">Jeśli operacja analizowania zakończyła się pomyślnie, zawiera długość w bajtach przeanalizowanego podciągu, gdy metoda zwraca.</span><span class="sxs-lookup"><span data-stu-id="99c39-284">If the parsing operation was successful, contains the length in bytes of the parsed substring when the method returns.</span></span> <span data-ttu-id="99c39-285">Jeśli metoda zakończy się <paramref name="bytesConsumed" /> niepowodzeniem, jest ustawiona na 0.</span><span class="sxs-lookup"><span data-stu-id="99c39-285">If the method fails, <paramref name="bytesConsumed" /> is set to 0.</span></span></param>
        <param name="standardFormat"><span data-ttu-id="99c39-286">Oczekiwany format ciągu Utf8.</span><span class="sxs-lookup"><span data-stu-id="99c39-286">The expected format of the Utf8 string.</span></span></param>
        <summary><span data-ttu-id="99c39-287"><see cref="T:System.SByte" /> Analizuje na początku ciągu Utf8.</span><span class="sxs-lookup"><span data-stu-id="99c39-287">Parses an <see cref="T:System.SByte" /> at the start of a Utf8 string.</span></span></summary>
        <returns><span data-ttu-id="99c39-288"><see langword="true" />dla sukcesu; <see langword="false" /> Jeśli ciąg nie jest syntaktycznie prawidłowy lub przepełnienie lub niedoszło.</span><span class="sxs-lookup"><span data-stu-id="99c39-288"><see langword="true" /> for success; <see langword="false" /> if the string was not syntactically valid or an overflow or underflow occurred.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

<span data-ttu-id="99c39-289">Obsługiwane formaty:</span><span class="sxs-lookup"><span data-stu-id="99c39-289">Formats supported:</span></span> 

|<span data-ttu-id="99c39-290">Ciąg formatu</span><span class="sxs-lookup"><span data-stu-id="99c39-290">Format string</span></span>|<span data-ttu-id="99c39-291">Przykładowy format oczekiwany</span><span class="sxs-lookup"><span data-stu-id="99c39-291">Example expected format</span></span>|
|--|--|
|<span data-ttu-id="99c39-292">G/g (wartość domyślna)</span><span class="sxs-lookup"><span data-stu-id="99c39-292">G/g (default)</span></span>| |
|<span data-ttu-id="99c39-293">D/d</span><span class="sxs-lookup"><span data-stu-id="99c39-293">D/d</span></span>|<span data-ttu-id="99c39-294">122</span><span class="sxs-lookup"><span data-stu-id="99c39-294">122</span></span>|
|<span data-ttu-id="99c39-295">N/n</span><span class="sxs-lookup"><span data-stu-id="99c39-295">N/n</span></span>|<span data-ttu-id="99c39-296">122</span><span class="sxs-lookup"><span data-stu-id="99c39-296">122</span></span>|       
|<span data-ttu-id="99c39-297">X/x</span><span class="sxs-lookup"><span data-stu-id="99c39-297">X/x</span></span>|<span data-ttu-id="99c39-298">pozycja</span><span class="sxs-lookup"><span data-stu-id="99c39-298">7a</span></span>|

]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (ReadOnlySpan&lt;byte&gt; source, out float value, out int bytesConsumed, char standardFormat = '\0');" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; source, [out] float32&amp; value, [out] int32&amp; bytesConsumed, char standardFormat) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.Text.Utf8Parser.TryParse(System.ReadOnlySpan{System.Byte},System.Single@,System.Int32@,System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (source As ReadOnlySpan(Of Byte), ByRef value As Single, ByRef bytesConsumed As Integer, Optional standardFormat As Char = '\0') As Boolean" />
      <MemberSignature Language="F#" Value="static member TryParse : ReadOnlySpan&lt;byte&gt; *  *  * char -&gt; bool" Usage="System.Buffers.Text.Utf8Parser.TryParse (source, value, bytesConsumed, standardFormat)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="value" Type="System.Single" RefType="out" />
        <Parameter Name="bytesConsumed" Type="System.Int32" RefType="out" />
        <Parameter Name="standardFormat" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="99c39-299">Ciąg Utf8 do analizy.</span><span class="sxs-lookup"><span data-stu-id="99c39-299">The Utf8 string to parse.</span></span></param>
        <param name="value"><span data-ttu-id="99c39-300">Gdy metoda zwraca, zawiera wartość przeanalizowane z <paramref name="source" />, jeśli operacja analizowania zakończyła się pomyślnie.</span><span class="sxs-lookup"><span data-stu-id="99c39-300">When the method returns, contains the value parsed from <paramref name="source" />, if the parsing operation succeeded.</span></span></param>
        <param name="bytesConsumed"><span data-ttu-id="99c39-301">Jeśli operacja analizowania zakończyła się pomyślnie, zawiera długość w bajtach przeanalizowanego podciągu, gdy metoda zwraca.</span><span class="sxs-lookup"><span data-stu-id="99c39-301">If the parsing operation was successful, contains the length in bytes of the parsed substring when the method returns.</span></span> <span data-ttu-id="99c39-302">Jeśli metoda zakończy się <paramref name="bytesConsumed" /> niepowodzeniem, jest ustawiona na 0.</span><span class="sxs-lookup"><span data-stu-id="99c39-302">If the method fails, <paramref name="bytesConsumed" /> is set to 0.</span></span></param>
        <param name="standardFormat"><span data-ttu-id="99c39-303">Oczekiwany format ciągu Utf8.</span><span class="sxs-lookup"><span data-stu-id="99c39-303">The expected format of the Utf8 string.</span></span></param>
        <summary><span data-ttu-id="99c39-304"><see cref="T:System.Single" /> Analizuje na początku ciągu Utf8.</span><span class="sxs-lookup"><span data-stu-id="99c39-304">Parses a <see cref="T:System.Single" /> at the start of a Utf8 string.</span></span></summary>
        <returns><span data-ttu-id="99c39-305"><see langword="true" />dla sukcesu; <see langword="false" /> Jeśli ciąg nie jest syntaktycznie prawidłowy lub przepełnienie lub niedoszło.</span><span class="sxs-lookup"><span data-stu-id="99c39-305"><see langword="true" /> for success; <see langword="false" /> if the string was not syntactically valid or an overflow or underflow occurred.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

<span data-ttu-id="99c39-306">Obsługiwane formaty:</span><span class="sxs-lookup"><span data-stu-id="99c39-306">Formats supported:</span></span> 

<span data-ttu-id="99c39-307">Ciąg formatu</span><span class="sxs-lookup"><span data-stu-id="99c39-307">Format string</span></span>|<span data-ttu-id="99c39-308">Przykład oczekiwany fornmat</span><span class="sxs-lookup"><span data-stu-id="99c39-308">Example expected fornmat</span></span>|<span data-ttu-id="99c39-309">Komentarze</span><span class="sxs-lookup"><span data-stu-id="99c39-309">Comments</span></span>|
|--|--|--|
|<span data-ttu-id="99c39-310">G/g (wartość domyślna)</span><span class="sxs-lookup"><span data-stu-id="99c39-310">G/g  (default)</span></span>| |  
|<span data-ttu-id="99c39-311">F/f</span><span class="sxs-lookup"><span data-stu-id="99c39-311">F/f</span></span>|<span data-ttu-id="99c39-312">12,45</span><span class="sxs-lookup"><span data-stu-id="99c39-312">12.45</span></span>|<span data-ttu-id="99c39-313">Stały punkt</span><span class="sxs-lookup"><span data-stu-id="99c39-313">Fixed point</span></span>|
|<span data-ttu-id="99c39-314">E/e</span><span class="sxs-lookup"><span data-stu-id="99c39-314">E/e</span></span>|<span data-ttu-id="99c39-315">1.245000 E1</span><span class="sxs-lookup"><span data-stu-id="99c39-315">1.245000e1</span></span>|<span data-ttu-id="99c39-316">Wykładniczego</span><span class="sxs-lookup"><span data-stu-id="99c39-316">Exponential</span></span>|

]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (ReadOnlySpan&lt;byte&gt; source, out TimeSpan value, out int bytesConsumed, char standardFormat = '\0');" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; source, [out] valuetype System.TimeSpan&amp; value, [out] int32&amp; bytesConsumed, char standardFormat) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.Text.Utf8Parser.TryParse(System.ReadOnlySpan{System.Byte},System.TimeSpan@,System.Int32@,System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (source As ReadOnlySpan(Of Byte), ByRef value As TimeSpan, ByRef bytesConsumed As Integer, Optional standardFormat As Char = '\0') As Boolean" />
      <MemberSignature Language="F#" Value="static member TryParse : ReadOnlySpan&lt;byte&gt; *  *  * char -&gt; bool" Usage="System.Buffers.Text.Utf8Parser.TryParse (source, value, bytesConsumed, standardFormat)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="value" Type="System.TimeSpan" RefType="out" />
        <Parameter Name="bytesConsumed" Type="System.Int32" RefType="out" />
        <Parameter Name="standardFormat" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="99c39-317">Ciąg Utf8 do analizy.</span><span class="sxs-lookup"><span data-stu-id="99c39-317">The Utf8 string to parse.</span></span></param>
        <param name="value"><span data-ttu-id="99c39-318">Gdy metoda zwraca, zawiera wartość przeanalizowane z <paramref name="source" />, jeśli operacja analizowania zakończyła się pomyślnie.</span><span class="sxs-lookup"><span data-stu-id="99c39-318">When the method returns, contains the value parsed from <paramref name="source" />, if the parsing operation succeeded.</span></span></param>
        <param name="bytesConsumed"><span data-ttu-id="99c39-319">Jeśli operacja analizowania zakończyła się pomyślnie, zawiera długość w bajtach przeanalizowanego podciągu, gdy metoda zwraca.</span><span class="sxs-lookup"><span data-stu-id="99c39-319">If the parsing operation was successful, contains the length in bytes of the parsed substring when the method returns.</span></span> <span data-ttu-id="99c39-320">Jeśli metoda zakończy się <paramref name="bytesConsumed" /> niepowodzeniem, jest ustawiona na 0.</span><span class="sxs-lookup"><span data-stu-id="99c39-320">If the method fails, <paramref name="bytesConsumed" /> is set to 0.</span></span></param>
        <param name="standardFormat"><span data-ttu-id="99c39-321">Oczekiwany format ciągu Utf8.</span><span class="sxs-lookup"><span data-stu-id="99c39-321">The expected format of the Utf8 string.</span></span></param>
        <summary><span data-ttu-id="99c39-322"><see cref="T:System.TimeSpan" /> Analizuje na początku ciągu Utf8.</span><span class="sxs-lookup"><span data-stu-id="99c39-322">Parses a <see cref="T:System.TimeSpan" /> at the start of a Utf8 string.</span></span></summary>
        <returns><span data-ttu-id="99c39-323"><see langword="true" />dla sukcesu; <see langword="false" /> Jeśli ciąg nie jest syntaktycznie prawidłowy lub przepełnienie lub niedoszło.</span><span class="sxs-lookup"><span data-stu-id="99c39-323"><see langword="true" /> for success; <see langword="false" /> if the string was not syntactically valid or an overflow or underflow occurred.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

<span data-ttu-id="99c39-324">Obsługiwane formaty:</span><span class="sxs-lookup"><span data-stu-id="99c39-324">Formats supported:</span></span> 

|<span data-ttu-id="99c39-325">Ciąg formatu</span><span class="sxs-lookup"><span data-stu-id="99c39-325">Format string</span></span>|<span data-ttu-id="99c39-326">Oczekiwany format</span><span class="sxs-lookup"><span data-stu-id="99c39-326">Expected format</span></span>|<span data-ttu-id="99c39-327">Komentarze</span><span class="sxs-lookup"><span data-stu-id="99c39-327">Comments</span></span>|
|--|--|--|
|<span data-ttu-id="99c39-328">c/t/T (domyślnie)</span><span class="sxs-lookup"><span data-stu-id="99c39-328">c/t/T (default)</span></span>|<span data-ttu-id="99c39-329">[-] [d.] hh: mm: SS [. fffffff]</span><span class="sxs-lookup"><span data-stu-id="99c39-329">[-][d.]hh:mm:ss[.fffffff]</span></span>|<span data-ttu-id="99c39-330">(format stały)</span><span class="sxs-lookup"><span data-stu-id="99c39-330">(constant format)</span></span>|
|<span data-ttu-id="99c39-331">G</span><span class="sxs-lookup"><span data-stu-id="99c39-331">G</span></span>|<span data-ttu-id="99c39-332">[-] d:hh: mm: SS. fffffff</span><span class="sxs-lookup"><span data-stu-id="99c39-332">[-]d:hh:mm:ss.fffffff</span></span>||<span data-ttu-id="99c39-333">(ogólnie długi)</span><span class="sxs-lookup"><span data-stu-id="99c39-333">(general long)</span></span>|
|<span data-ttu-id="99c39-334">g</span><span class="sxs-lookup"><span data-stu-id="99c39-334">g</span></span>|<span data-ttu-id="99c39-335">[-] [d:] [h] h:mm: SS [. f [f [f [f [f [f]]]]]]</span><span class="sxs-lookup"><span data-stu-id="99c39-335">[-][d:][h]h:mm:ss[.f[f[f[f[f[f[f]]]]]]</span></span>|<span data-ttu-id="99c39-336">(ogólne krótkie)</span><span class="sxs-lookup"><span data-stu-id="99c39-336">(general short)</span></span>|

]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (ReadOnlySpan&lt;byte&gt; source, out ushort value, out int bytesConsumed, char standardFormat = '\0');" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; source, [out] unsigned int16&amp; value, [out] int32&amp; bytesConsumed, char standardFormat) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.Text.Utf8Parser.TryParse(System.ReadOnlySpan{System.Byte},System.UInt16@,System.Int32@,System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (source As ReadOnlySpan(Of Byte), ByRef value As UShort, ByRef bytesConsumed As Integer, Optional standardFormat As Char = '\0') As Boolean" />
      <MemberSignature Language="F#" Value="static member TryParse : ReadOnlySpan&lt;byte&gt; *  *  * char -&gt; bool" Usage="System.Buffers.Text.Utf8Parser.TryParse (source, value, bytesConsumed, standardFormat)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-3.0;netcore-2.1;netcore-2.2;netstandard-2.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="value" Type="System.UInt16" RefType="out" />
        <Parameter Name="bytesConsumed" Type="System.Int32" RefType="out" />
        <Parameter Name="standardFormat" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="99c39-337">Ciąg Utf8 do analizy.</span><span class="sxs-lookup"><span data-stu-id="99c39-337">The Utf8 string to parse.</span></span></param>
        <param name="value"><span data-ttu-id="99c39-338">Gdy metoda zwraca, zawiera wartość przeanalizowane z <paramref name="source" />, jeśli operacja analizowania zakończyła się pomyślnie.</span><span class="sxs-lookup"><span data-stu-id="99c39-338">When the method returns, contains the value parsed from <paramref name="source" />, if the parsing operation succeeded.</span></span></param>
        <param name="bytesConsumed"><span data-ttu-id="99c39-339">Jeśli operacja analizowania zakończyła się pomyślnie, zawiera długość w bajtach przeanalizowanego podciągu, gdy metoda zwraca.</span><span class="sxs-lookup"><span data-stu-id="99c39-339">If the parsing operation was successful, contains the length in bytes of the parsed substring when the method returns.</span></span> <span data-ttu-id="99c39-340">Jeśli metoda zakończy się <paramref name="bytesConsumed" /> niepowodzeniem, jest ustawiona na 0.</span><span class="sxs-lookup"><span data-stu-id="99c39-340">If the method fails, <paramref name="bytesConsumed" /> is set to 0.</span></span></param>
        <param name="standardFormat"><span data-ttu-id="99c39-341">Oczekiwany format ciągu Utf8.</span><span class="sxs-lookup"><span data-stu-id="99c39-341">The expected format of the Utf8 string.</span></span></param>
        <summary><span data-ttu-id="99c39-342"><see cref="T:System.UInt16" /> Analizuje na początku ciągu Utf8.</span><span class="sxs-lookup"><span data-stu-id="99c39-342">Parses a <see cref="T:System.UInt16" /> at the start of a Utf8 string.</span></span></summary>
        <returns><span data-ttu-id="99c39-343"><see langword="true" />dla sukcesu; <see langword="false" /> Jeśli ciąg nie jest syntaktycznie prawidłowy lub przepełnienie lub niedoszło.</span><span class="sxs-lookup"><span data-stu-id="99c39-343"><see langword="true" /> for success; <see langword="false" /> if the string was not syntactically valid or an overflow or underflow occurred.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

<span data-ttu-id="99c39-344">Obsługiwane formaty:</span><span class="sxs-lookup"><span data-stu-id="99c39-344">Formats supported:</span></span>

|<span data-ttu-id="99c39-345">Ciąg formatu</span><span class="sxs-lookup"><span data-stu-id="99c39-345">Format string</span></span>|<span data-ttu-id="99c39-346">Przykładowy format oczekiwany</span><span class="sxs-lookup"><span data-stu-id="99c39-346">Example expected format</span></span>|
|--|--|
|<span data-ttu-id="99c39-347">G/g (wartość domyślna)</span><span class="sxs-lookup"><span data-stu-id="99c39-347">G/g (default)</span></span>| |
|<span data-ttu-id="99c39-348">D/d</span><span class="sxs-lookup"><span data-stu-id="99c39-348">D/d</span></span>|<span data-ttu-id="99c39-349">32767</span><span class="sxs-lookup"><span data-stu-id="99c39-349">32767</span></span>|
|<span data-ttu-id="99c39-350">N/n</span><span class="sxs-lookup"><span data-stu-id="99c39-350">N/n</span></span>|<span data-ttu-id="99c39-351">32,767</span><span class="sxs-lookup"><span data-stu-id="99c39-351">32,767</span></span>|       
|<span data-ttu-id="99c39-352">X/x</span><span class="sxs-lookup"><span data-stu-id="99c39-352">X/x</span></span>|<span data-ttu-id="99c39-353">7fff</span><span class="sxs-lookup"><span data-stu-id="99c39-353">7fff</span></span>|

]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (ReadOnlySpan&lt;byte&gt; source, out uint value, out int bytesConsumed, char standardFormat = '\0');" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; source, [out] unsigned int32&amp; value, [out] int32&amp; bytesConsumed, char standardFormat) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.Text.Utf8Parser.TryParse(System.ReadOnlySpan{System.Byte},System.UInt32@,System.Int32@,System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (source As ReadOnlySpan(Of Byte), ByRef value As UInteger, ByRef bytesConsumed As Integer, Optional standardFormat As Char = '\0') As Boolean" />
      <MemberSignature Language="F#" Value="static member TryParse : ReadOnlySpan&lt;byte&gt; *  *  * char -&gt; bool" Usage="System.Buffers.Text.Utf8Parser.TryParse (source, value, bytesConsumed, standardFormat)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-3.0;netcore-2.1;netcore-2.2;netstandard-2.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="value" Type="System.UInt32" RefType="out" />
        <Parameter Name="bytesConsumed" Type="System.Int32" RefType="out" />
        <Parameter Name="standardFormat" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="99c39-354">Ciąg Utf8 do analizy.</span><span class="sxs-lookup"><span data-stu-id="99c39-354">The Utf8 string to parse.</span></span></param>
        <param name="value"><span data-ttu-id="99c39-355">Gdy metoda zwraca, zawiera wartość przeanalizowane z <paramref name="source" />, jeśli operacja analizowania zakończyła się pomyślnie.</span><span class="sxs-lookup"><span data-stu-id="99c39-355">When the method returns, contains the value parsed from <paramref name="source" />, if the parsing operation succeeded.</span></span></param>
        <param name="bytesConsumed"><span data-ttu-id="99c39-356">Jeśli operacja analizowania zakończyła się pomyślnie, zawiera długość w bajtach przeanalizowanego podciągu, gdy metoda zwraca.</span><span class="sxs-lookup"><span data-stu-id="99c39-356">If the parsing operation was successful, contains the length in bytes of the parsed substring when the method returns.</span></span> <span data-ttu-id="99c39-357">Jeśli metoda zakończy się <paramref name="bytesConsumed" /> niepowodzeniem, jest ustawiona na 0.</span><span class="sxs-lookup"><span data-stu-id="99c39-357">If the method fails, <paramref name="bytesConsumed" /> is set to 0.</span></span></param>
        <param name="standardFormat"><span data-ttu-id="99c39-358">Oczekiwany format ciągu Utf8.</span><span class="sxs-lookup"><span data-stu-id="99c39-358">The expected format of the Utf8 string.</span></span></param>
        <summary><span data-ttu-id="99c39-359"><see cref="T:System.UInt32" /> Analizuje na początku ciągu Utf8.</span><span class="sxs-lookup"><span data-stu-id="99c39-359">Parses a <see cref="T:System.UInt32" /> at the start of a Utf8 string.</span></span></summary>
        <returns><span data-ttu-id="99c39-360"><see langword="true" />dla sukcesu; <see langword="false" /> Jeśli ciąg nie jest syntaktycznie prawidłowy lub przepełnienie lub niedoszło.</span><span class="sxs-lookup"><span data-stu-id="99c39-360"><see langword="true" /> for success; <see langword="false" /> if the string was not syntactically valid or an overflow or underflow occurred.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

<span data-ttu-id="99c39-361">Obsługiwane formaty:</span><span class="sxs-lookup"><span data-stu-id="99c39-361">Formats supported:</span></span>

|<span data-ttu-id="99c39-362">Ciąg formatu</span><span class="sxs-lookup"><span data-stu-id="99c39-362">Format string</span></span>|<span data-ttu-id="99c39-363">Przykładowy format oczekiwany</span><span class="sxs-lookup"><span data-stu-id="99c39-363">Example expected format</span></span>|
|--|--|
|<span data-ttu-id="99c39-364">G/g (wartość domyślna)</span><span class="sxs-lookup"><span data-stu-id="99c39-364">G/g (default)</span></span>| |
|<span data-ttu-id="99c39-365">D/d</span><span class="sxs-lookup"><span data-stu-id="99c39-365">D/d</span></span>|<span data-ttu-id="99c39-366">32767</span><span class="sxs-lookup"><span data-stu-id="99c39-366">32767</span></span>|
|<span data-ttu-id="99c39-367">N/n</span><span class="sxs-lookup"><span data-stu-id="99c39-367">N/n</span></span>|<span data-ttu-id="99c39-368">32,767</span><span class="sxs-lookup"><span data-stu-id="99c39-368">32,767</span></span>|       
|<span data-ttu-id="99c39-369">X/x</span><span class="sxs-lookup"><span data-stu-id="99c39-369">X/x</span></span>|<span data-ttu-id="99c39-370">7fff</span><span class="sxs-lookup"><span data-stu-id="99c39-370">7fff</span></span>|

]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (ReadOnlySpan&lt;byte&gt; source, out ulong value, out int bytesConsumed, char standardFormat = '\0');" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; source, [out] unsigned int64&amp; value, [out] int32&amp; bytesConsumed, char standardFormat) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.Text.Utf8Parser.TryParse(System.ReadOnlySpan{System.Byte},System.UInt64@,System.Int32@,System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (source As ReadOnlySpan(Of Byte), ByRef value As ULong, ByRef bytesConsumed As Integer, Optional standardFormat As Char = '\0') As Boolean" />
      <MemberSignature Language="F#" Value="static member TryParse : ReadOnlySpan&lt;byte&gt; *  *  * char -&gt; bool" Usage="System.Buffers.Text.Utf8Parser.TryParse (source, value, bytesConsumed, standardFormat)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-3.0;netcore-2.1;netcore-2.2;netstandard-2.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="value" Type="System.UInt64" RefType="out" />
        <Parameter Name="bytesConsumed" Type="System.Int32" RefType="out" />
        <Parameter Name="standardFormat" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="99c39-371">Ciąg Utf8 do analizy.</span><span class="sxs-lookup"><span data-stu-id="99c39-371">The Utf8 string to parse.</span></span></param>
        <param name="value"><span data-ttu-id="99c39-372">Gdy metoda zwraca, zawiera wartość przeanalizowane z <paramref name="source" />, jeśli operacja analizowania zakończyła się pomyślnie.</span><span class="sxs-lookup"><span data-stu-id="99c39-372">When the method returns, contains the value parsed from <paramref name="source" />, if the parsing operation succeeded.</span></span></param>
        <param name="bytesConsumed"><span data-ttu-id="99c39-373">Jeśli operacja analizowania zakończyła się pomyślnie, zawiera długość w bajtach przeanalizowanego podciągu, gdy metoda zwraca.</span><span class="sxs-lookup"><span data-stu-id="99c39-373">If the parsing operation was successful, contains the length in bytes of the parsed substring when the method returns.</span></span> <span data-ttu-id="99c39-374">Jeśli metoda zakończy się <paramref name="bytesConsumed" /> niepowodzeniem, jest ustawiona na 0.</span><span class="sxs-lookup"><span data-stu-id="99c39-374">If the method fails, <paramref name="bytesConsumed" /> is set to 0.</span></span></param>
        <param name="standardFormat"><span data-ttu-id="99c39-375">Oczekiwany format ciągu Utf8.</span><span class="sxs-lookup"><span data-stu-id="99c39-375">The expected format of the Utf8 string.</span></span></param>
        <summary><span data-ttu-id="99c39-376"><see cref="T:System.UInt64" /> Analizuje na początku ciągu Utf8.</span><span class="sxs-lookup"><span data-stu-id="99c39-376">Parses a <see cref="T:System.UInt64" /> at the start of a Utf8 string.</span></span></summary>
        <returns><span data-ttu-id="99c39-377"><see langword="true" />dla sukcesu; <see langword="false" /> Jeśli ciąg nie jest syntaktycznie prawidłowy lub przepełnienie lub niedoszło.</span><span class="sxs-lookup"><span data-stu-id="99c39-377"><see langword="true" /> for success; <see langword="false" /> if the string was not syntactically valid or an overflow or underflow occurred.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

<span data-ttu-id="99c39-378">Obsługiwane formaty:</span><span class="sxs-lookup"><span data-stu-id="99c39-378">Formats supported:</span></span>

|<span data-ttu-id="99c39-379">Ciąg formatu</span><span class="sxs-lookup"><span data-stu-id="99c39-379">Format string</span></span>|<span data-ttu-id="99c39-380">Przykładowy format oczekiwany</span><span class="sxs-lookup"><span data-stu-id="99c39-380">Example expected format</span></span>|
|--|--|
|<span data-ttu-id="99c39-381">G/g (wartość domyślna)</span><span class="sxs-lookup"><span data-stu-id="99c39-381">G/g (default)</span></span>| |
|<span data-ttu-id="99c39-382">D/d</span><span class="sxs-lookup"><span data-stu-id="99c39-382">D/d</span></span>|<span data-ttu-id="99c39-383">32767</span><span class="sxs-lookup"><span data-stu-id="99c39-383">32767</span></span>|
|<span data-ttu-id="99c39-384">N/n</span><span class="sxs-lookup"><span data-stu-id="99c39-384">N/n</span></span>|<span data-ttu-id="99c39-385">32,767</span><span class="sxs-lookup"><span data-stu-id="99c39-385">32,767</span></span>|       
|<span data-ttu-id="99c39-386">X/x</span><span class="sxs-lookup"><span data-stu-id="99c39-386">X/x</span></span>|<span data-ttu-id="99c39-387">7fff</span><span class="sxs-lookup"><span data-stu-id="99c39-387">7fff</span></span>|

]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
