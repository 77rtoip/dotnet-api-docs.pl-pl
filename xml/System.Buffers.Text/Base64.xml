<Type Name="Base64" FullName="System.Buffers.Text.Base64">
  <Metadata><Meta Name="ms.openlocfilehash" Value="479b18e6f811f02564c6d12b4fc05fb88881eff3" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69342466" /></Metadata><TypeSignature Language="C#" Value="public static class Base64" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit Base64 extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Buffers.Text.Base64" />
  <TypeSignature Language="VB.NET" Value="Public Class Base64" />
  <TypeSignature Language="C++ CLI" Value="public ref class Base64 abstract sealed" />
  <TypeSignature Language="F#" Value="type Base64 = class" />
  <AssemblyInfo>
    <AssemblyName>System.Memory</AssemblyName>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="5d8ec-101">Konwertuje dane binarne i tekst zakodowany w formacie UTF-8, który jest reprezentowany w podstawowej 64.</span><span class="sxs-lookup"><span data-stu-id="5d8ec-101">Converts between binary data and UTF-8 encoded text that is represented in base 64.</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="DecodeFromUtf8">
      <MemberSignature Language="C#" Value="public static System.Buffers.OperationStatus DecodeFromUtf8 (ReadOnlySpan&lt;byte&gt; utf8, Span&lt;byte&gt; bytes, out int bytesConsumed, out int bytesWritten, bool isFinalBlock = true);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Buffers.OperationStatus DecodeFromUtf8(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; utf8, valuetype System.Span`1&lt;unsigned int8&gt; bytes, [out] int32&amp; bytesConsumed, [out] int32&amp; bytesWritten, bool isFinalBlock) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.Text.Base64.DecodeFromUtf8(System.ReadOnlySpan{System.Byte},System.Span{System.Byte},System.Int32@,System.Int32@,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DecodeFromUtf8 (utf8 As ReadOnlySpan(Of Byte), bytes As Span(Of Byte), ByRef bytesConsumed As Integer, ByRef bytesWritten As Integer, Optional isFinalBlock As Boolean = true) As OperationStatus" />
      <MemberSignature Language="F#" Value="static member DecodeFromUtf8 : ReadOnlySpan&lt;byte&gt; * Span&lt;byte&gt; *  *  * bool -&gt; System.Buffers.OperationStatus" Usage="System.Buffers.Text.Base64.DecodeFromUtf8 (utf8, bytes, bytesConsumed, bytesWritten, isFinalBlock)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Buffers.OperationStatus</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="utf8" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="bytes" Type="System.Span&lt;System.Byte&gt;" />
        <Parameter Name="bytesConsumed" Type="System.Int32" RefType="out" />
        <Parameter Name="bytesWritten" Type="System.Int32" RefType="out" />
        <Parameter Name="isFinalBlock" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="utf8"><span data-ttu-id="5d8ec-102">Zakres wejściowy zawierający tekst zakodowany w formacie UTF-8 w podstawowym 64, który musi zostać zdekodowany.</span><span class="sxs-lookup"><span data-stu-id="5d8ec-102">The input span that contains UTF-8 encoded text in base 64 that needs to be decoded.</span></span></param>
        <param name="bytes"><span data-ttu-id="5d8ec-103">Zakres danych wyjściowych zawierający wynik operacji, czyli zdekodowane dane binarne.</span><span class="sxs-lookup"><span data-stu-id="5d8ec-103">The output span that contains the result of the operation, that is, the decoded binary data.</span></span></param>
        <param name="bytesConsumed"><span data-ttu-id="5d8ec-104">Liczba bajtów wejściowych zużytych podczas operacji.</span><span class="sxs-lookup"><span data-stu-id="5d8ec-104">The number of input bytes consumed during the operation.</span></span> <span data-ttu-id="5d8ec-105">Może to służyć do wycinania danych wejściowych dla kolejnych wywołań, w razie potrzeby.</span><span class="sxs-lookup"><span data-stu-id="5d8ec-105">This can be used to slice the input for subsequent calls, if necessary.</span></span></param>
        <param name="bytesWritten"><span data-ttu-id="5d8ec-106">Liczba bajtów zapisywana w przedziale danych wyjściowych.</span><span class="sxs-lookup"><span data-stu-id="5d8ec-106">The number of bytes written into the output span.</span></span> <span data-ttu-id="5d8ec-107">Może to służyć do wycinania danych wyjściowych dla kolejnych wywołań, w razie potrzeby.</span><span class="sxs-lookup"><span data-stu-id="5d8ec-107">This can be used to slice the output for subsequent calls, if necessary.</span></span></param>
        <param name="isFinalBlock"><span data-ttu-id="5d8ec-108"><see langword="true" />(wartość domyślna), jeśli zakres wejściowy zawiera wszystkie dane do zdekodowania.</span><span class="sxs-lookup"><span data-stu-id="5d8ec-108"><see langword="true" /> (default) if the input span contains the entire data to decode.</span></span> <span data-ttu-id="5d8ec-109"><see langword="false" />Jeśli zakres wejściowy zawiera dane częściowe zawierające więcej danych do wykonania.</span><span class="sxs-lookup"><span data-stu-id="5d8ec-109"><see langword="false" /> if the input span contains partial data with more data to follow.</span></span></param>
        <summary><span data-ttu-id="5d8ec-110">Dekoduje zakres tekstu zakodowanego w formacie UTF-8 reprezentowanego jako Base 64 do danych binarnych.</span><span class="sxs-lookup"><span data-stu-id="5d8ec-110">Decodes the span of UTF-8 encoded text represented as base 64 into binary data.</span></span> <span data-ttu-id="5d8ec-111">Jeśli dane wejściowe nie są wielokrotnością 4, będzie zdekodować tyle, ile to możliwe, do najbliższej wielokrotności 4.</span><span class="sxs-lookup"><span data-stu-id="5d8ec-111">If the input is not a multiple of 4, it will decode as much as it can, to the closest multiple of 4.</span></span></summary>
        <returns><span data-ttu-id="5d8ec-112">Jedna z wartości wyliczenia, która wskazuje stan operacji dekodowania.</span><span class="sxs-lookup"><span data-stu-id="5d8ec-112">One of the enumeration values that indicates the status of the decoding operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

<span data-ttu-id="5d8ec-113">Wartość zwracana może być następująca:</span><span class="sxs-lookup"><span data-stu-id="5d8ec-113">The return value can be as follows:</span></span>

- <span data-ttu-id="5d8ec-114"><xref:System.Buffers.OperationStatus.Done?displayProperty=nameWithType>: Przetwarzanie całego zakresu danych wejściowych zakończyło się pomyślnie.</span><span class="sxs-lookup"><span data-stu-id="5d8ec-114"><xref:System.Buffers.OperationStatus.Done?displayProperty=nameWithType>: Processing of the entire input span succeeded.</span></span>
- <span data-ttu-id="5d8ec-115"><xref:System.Buffers.OperationStatus.DestinationTooSmall?displayProperty=nameWithType>: Za mało miejsca w przedziale wyjściowym, aby zapisać zdekodowane dane wejściowe.</span><span class="sxs-lookup"><span data-stu-id="5d8ec-115"><xref:System.Buffers.OperationStatus.DestinationTooSmall?displayProperty=nameWithType>: There is not enough space in the output span to write the decoded input.</span></span>
- <span data-ttu-id="5d8ec-116"><xref:System.Buffers.OperationStatus.NeedMoreData?displayProperty=nameWithType>: `isFinalBlock` is`false` i wartość wejściowa nie jest wielokrotnością 4.</span><span class="sxs-lookup"><span data-stu-id="5d8ec-116"><xref:System.Buffers.OperationStatus.NeedMoreData?displayProperty=nameWithType>: `isFinalBlock` is `false` and the input is not a multiple of 4.</span></span> <span data-ttu-id="5d8ec-117">W przeciwnym razie częściowe dane wejściowe <xref:System.Buffers.OperationStatus.InvalidData>są brane pod uwagę.</span><span class="sxs-lookup"><span data-stu-id="5d8ec-117">Otherwise, the partial input is considered <xref:System.Buffers.OperationStatus.InvalidData>.</span></span>
- <span data-ttu-id="5d8ec-118"><xref:System.Buffers.OperationStatus.InvalidData?displayProperty=nameWithType>: Dane wejściowe zawierają bajty poza oczekiwanym zakresem bazowym 64, mają nieprawidłowe lub więcej niż dwa znaki uzupełniania lub są niekompletne (to nie jest wielokrotność 4) i `isFinalBlock` jest `true`.</span><span class="sxs-lookup"><span data-stu-id="5d8ec-118"><xref:System.Buffers.OperationStatus.InvalidData?displayProperty=nameWithType>: The input contains bytes outside of the expected base 64 range, has invalid or more than two padding characters, or is incomplete (that is, not a multiple of 4) and `isFinalBlock` is `true`.</span></span>

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DecodeFromUtf8InPlace">
      <MemberSignature Language="C#" Value="public static System.Buffers.OperationStatus DecodeFromUtf8InPlace (Span&lt;byte&gt; buffer, out int bytesWritten);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Buffers.OperationStatus DecodeFromUtf8InPlace(valuetype System.Span`1&lt;unsigned int8&gt; buffer, [out] int32&amp; bytesWritten) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.Text.Base64.DecodeFromUtf8InPlace(System.Span{System.Byte},System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DecodeFromUtf8InPlace (buffer As Span(Of Byte), ByRef bytesWritten As Integer) As OperationStatus" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Buffers::OperationStatus DecodeFromUtf8InPlace(Span&lt;System::Byte&gt; buffer, [Runtime::InteropServices::Out] int % bytesWritten);" />
      <MemberSignature Language="F#" Value="static member DecodeFromUtf8InPlace : Span&lt;byte&gt; *  -&gt; System.Buffers.OperationStatus" Usage="System.Buffers.Text.Base64.DecodeFromUtf8InPlace (buffer, bytesWritten)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Buffers.OperationStatus</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Span&lt;System.Byte&gt;" />
        <Parameter Name="bytesWritten" Type="System.Int32" RefType="out" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="5d8ec-119">Zakres wejściowy, który zawiera dane tekstowe Base-64, które muszą zostać zdekodowane.</span><span class="sxs-lookup"><span data-stu-id="5d8ec-119">The input span that contains the base-64 text data that needs to be decoded.</span></span></param>
        <param name="bytesWritten"><span data-ttu-id="5d8ec-120">Liczba bajtów zapisywana w buforze.</span><span class="sxs-lookup"><span data-stu-id="5d8ec-120">The number of bytes written into the buffer.</span></span></param>
        <summary><span data-ttu-id="5d8ec-121">Dekoduje zakres tekstu zakodowanego w formacie UTF-8 w Base 64 (w miejscu) do danych binarnych.</span><span class="sxs-lookup"><span data-stu-id="5d8ec-121">Decodes the span of UTF-8 encoded text in base 64 (in-place) into binary data.</span></span> <span data-ttu-id="5d8ec-122">Zdekodowane dane wyjściowe binarne są mniejsze niż dane tekstowe zawarte w danych wejściowych (operacja deflatuje dane).</span><span class="sxs-lookup"><span data-stu-id="5d8ec-122">The decoded binary output is smaller than the text data contained in the input (the operation deflates the data).</span></span> <span data-ttu-id="5d8ec-123">Jeśli dane wejściowe nie są wielokrotnością 4, metoda nie będzie zdekodować żadnych danych.</span><span class="sxs-lookup"><span data-stu-id="5d8ec-123">If the input is not a multiple of 4, the method will not decode any data.</span></span></summary>
        <returns><span data-ttu-id="5d8ec-124">Jedna z wartości wyliczenia, która wskazuje stan operacji dekodowania.</span><span class="sxs-lookup"><span data-stu-id="5d8ec-124">One of the enumeration values that indicates the status of the decoding operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

<span data-ttu-id="5d8ec-125">Wartość zwracana może być następująca:</span><span class="sxs-lookup"><span data-stu-id="5d8ec-125">The return value can be as follows:</span></span>

- <span data-ttu-id="5d8ec-126"><xref:System.Buffers.OperationStatus.Done?displayProperty=nameWithType>: Przetwarzanie całego zakresu danych wejściowych zakończyło się pomyślnie.</span><span class="sxs-lookup"><span data-stu-id="5d8ec-126"><xref:System.Buffers.OperationStatus.Done?displayProperty=nameWithType>: Processing of the entire input span succeeded.</span></span>
- <span data-ttu-id="5d8ec-127"><xref:System.Buffers.OperationStatus.InvalidData?displayProperty=nameWithType>: Dane wejściowe zawierają bajty poza oczekiwanym zakresem bazowym 64, mają nieprawidłowe lub więcej niż dwa znaki uzupełnienia lub są niekompletne (to nie jest wielokrotność 4).</span><span class="sxs-lookup"><span data-stu-id="5d8ec-127"><xref:System.Buffers.OperationStatus.InvalidData?displayProperty=nameWithType>: The input contains bytes outside of the expected base 64 range, has invalid or more than two padding characters, or is incomplete (that is, not a multiple of 4).</span></span>

<span data-ttu-id="5d8ec-128">Ta metoda nie może zwracać <xref:System.Buffers.OperationStatus.DestinationTooSmall?displayProperty=nameWithType> wartości <xref:System.Buffers.OperationStatus.NeedMoreData?displayProperty=nameWithType> i.</span><span class="sxs-lookup"><span data-stu-id="5d8ec-128">This method cannot return the <xref:System.Buffers.OperationStatus.DestinationTooSmall?displayProperty=nameWithType> and <xref:System.Buffers.OperationStatus.NeedMoreData?displayProperty=nameWithType> values.</span></span>

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EncodeToUtf8">
      <MemberSignature Language="C#" Value="public static System.Buffers.OperationStatus EncodeToUtf8 (ReadOnlySpan&lt;byte&gt; bytes, Span&lt;byte&gt; utf8, out int bytesConsumed, out int bytesWritten, bool isFinalBlock = true);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Buffers.OperationStatus EncodeToUtf8(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; bytes, valuetype System.Span`1&lt;unsigned int8&gt; utf8, [out] int32&amp; bytesConsumed, [out] int32&amp; bytesWritten, bool isFinalBlock) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.Text.Base64.EncodeToUtf8(System.ReadOnlySpan{System.Byte},System.Span{System.Byte},System.Int32@,System.Int32@,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function EncodeToUtf8 (bytes As ReadOnlySpan(Of Byte), utf8 As Span(Of Byte), ByRef bytesConsumed As Integer, ByRef bytesWritten As Integer, Optional isFinalBlock As Boolean = true) As OperationStatus" />
      <MemberSignature Language="F#" Value="static member EncodeToUtf8 : ReadOnlySpan&lt;byte&gt; * Span&lt;byte&gt; *  *  * bool -&gt; System.Buffers.OperationStatus" Usage="System.Buffers.Text.Base64.EncodeToUtf8 (bytes, utf8, bytesConsumed, bytesWritten, isFinalBlock)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Buffers.OperationStatus</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="utf8" Type="System.Span&lt;System.Byte&gt;" />
        <Parameter Name="bytesConsumed" Type="System.Int32" RefType="out" />
        <Parameter Name="bytesWritten" Type="System.Int32" RefType="out" />
        <Parameter Name="isFinalBlock" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="bytes"><span data-ttu-id="5d8ec-129">Zakres wejściowy, który zawiera dane binarne, które należy zakodować.</span><span class="sxs-lookup"><span data-stu-id="5d8ec-129">The input span that contains binary data that needs to be encoded.</span></span></param>
        <param name="utf8"><span data-ttu-id="5d8ec-130">Zakres danych wyjściowych zawierający wynik operacji, czyli tekst zakodowany w formacie UTF-8 w podstawowej 64.</span><span class="sxs-lookup"><span data-stu-id="5d8ec-130">The output span that contains the result of the operation, that is, the UTF-8 encoded text in base 64.</span></span></param>
        <param name="bytesConsumed"><span data-ttu-id="5d8ec-131">Liczba bajtów wejściowych zużytych podczas operacji.</span><span class="sxs-lookup"><span data-stu-id="5d8ec-131">The number of input bytes consumed during the operation.</span></span> <span data-ttu-id="5d8ec-132">Może to służyć do wycinania danych wejściowych dla kolejnych wywołań, w razie potrzeby.</span><span class="sxs-lookup"><span data-stu-id="5d8ec-132">This can be used to slice the input for subsequent calls, if necessary.</span></span></param>
        <param name="bytesWritten"><span data-ttu-id="5d8ec-133">Liczba bajtów zapisywana w przedziale danych wyjściowych.</span><span class="sxs-lookup"><span data-stu-id="5d8ec-133">The number of bytes written into the output span.</span></span> <span data-ttu-id="5d8ec-134">Może to służyć do wycinania danych wyjściowych dla kolejnych wywołań, w razie potrzeby.</span><span class="sxs-lookup"><span data-stu-id="5d8ec-134">This can be used to slice the output for subsequent calls, if necessary.</span></span></param>
        <param name="isFinalBlock"><span data-ttu-id="5d8ec-135"><see langword="true" />(wartość domyślna), jeśli zakres wejściowy zawiera wszystkie dane do zakodowania.</span><span class="sxs-lookup"><span data-stu-id="5d8ec-135"><see langword="true" /> (the default) if the input span contains the entire data to encode.</span></span> <span data-ttu-id="5d8ec-136"><see langword="false" />Jeśli zakres wejściowy zawiera dane częściowe zawierające więcej danych do wykonania.</span><span class="sxs-lookup"><span data-stu-id="5d8ec-136"><see langword="false" /> if the input span contains partial data with more data to follow.</span></span></param>
        <summary><span data-ttu-id="5d8ec-137">Koduje zakres danych binarnych na tekst zakodowany UTF-8 reprezentowanego jako Base 64.</span><span class="sxs-lookup"><span data-stu-id="5d8ec-137">Encodes the span of binary data into UTF-8 encoded text represented as base 64.</span></span></summary>
        <returns><span data-ttu-id="5d8ec-138">Jedna z wartości wyliczenia, która wskazuje stan operacji kodowania.</span><span class="sxs-lookup"><span data-stu-id="5d8ec-138">One of the enumeration values that indicates the status of the encoding operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

<span data-ttu-id="5d8ec-139">Wartość zwracana może być następująca:</span><span class="sxs-lookup"><span data-stu-id="5d8ec-139">The return value can be as follows:</span></span>

- <span data-ttu-id="5d8ec-140"><xref:System.Buffers.OperationStatus.Done?displayProperty=nameWithType>: Przetwarzanie całego zakresu danych wejściowych zakończyło się pomyślnie.</span><span class="sxs-lookup"><span data-stu-id="5d8ec-140"><xref:System.Buffers.OperationStatus.Done?displayProperty=nameWithType>: Processing of the entire input span succeeded.</span></span>
- <span data-ttu-id="5d8ec-141"><xref:System.Buffers.OperationStatus.DestinationTooSmall?displayProperty=nameWithType>: Brak wystarczającej ilości miejsca w przedziale wyjściowym, aby dopasować zakodowane dane wejściowe.</span><span class="sxs-lookup"><span data-stu-id="5d8ec-141"><xref:System.Buffers.OperationStatus.DestinationTooSmall?displayProperty=nameWithType>: There isn't enough space in the output span to fit the encoded input.</span></span>
- <span data-ttu-id="5d8ec-142"><xref:System.Buffers.OperationStatus.NeedMoreData?displayProperty=nameWithType>: `isFinalBlock` is `false`.</span><span class="sxs-lookup"><span data-stu-id="5d8ec-142"><xref:System.Buffers.OperationStatus.NeedMoreData?displayProperty=nameWithType>: `isFinalBlock` is `false`.</span></span> <span data-ttu-id="5d8ec-143">W przeciwnym razie `isFinalBlock` , `true`jeśli jest, dane wyjściowe są uzupełniane, jeśli dane wejściowe nie są wielokrotnością 3.</span><span class="sxs-lookup"><span data-stu-id="5d8ec-143">Otherwise, if `isFinalBlock` is `true`, the output is padded if the input is not a multiple of 3.</span></span>

<span data-ttu-id="5d8ec-144">Ta metoda nie może <xref:System.Buffers.OperationStatus.InvalidData?displayProperty=nameWithType> zwrócić, ponieważ nie jest to możliwe w przypadku kodowania Base-64.</span><span class="sxs-lookup"><span data-stu-id="5d8ec-144">This method cannot return <xref:System.Buffers.OperationStatus.InvalidData?displayProperty=nameWithType> since that is not possible for base-64 encoding.</span></span>

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EncodeToUtf8InPlace">
      <MemberSignature Language="C#" Value="public static System.Buffers.OperationStatus EncodeToUtf8InPlace (Span&lt;byte&gt; buffer, int dataLength, out int bytesWritten);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Buffers.OperationStatus EncodeToUtf8InPlace(valuetype System.Span`1&lt;unsigned int8&gt; buffer, int32 dataLength, [out] int32&amp; bytesWritten) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.Text.Base64.EncodeToUtf8InPlace(System.Span{System.Byte},System.Int32,System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function EncodeToUtf8InPlace (buffer As Span(Of Byte), dataLength As Integer, ByRef bytesWritten As Integer) As OperationStatus" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Buffers::OperationStatus EncodeToUtf8InPlace(Span&lt;System::Byte&gt; buffer, int dataLength, [Runtime::InteropServices::Out] int % bytesWritten);" />
      <MemberSignature Language="F#" Value="static member EncodeToUtf8InPlace : Span&lt;byte&gt; * int *  -&gt; System.Buffers.OperationStatus" Usage="System.Buffers.Text.Base64.EncodeToUtf8InPlace (buffer, dataLength, bytesWritten)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Buffers.OperationStatus</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Span&lt;System.Byte&gt;" />
        <Parameter Name="dataLength" Type="System.Int32" />
        <Parameter Name="bytesWritten" Type="System.Int32" RefType="out" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="5d8ec-145">Zakres wejściowy, który zawiera dane binarne, które należy zakodować.</span><span class="sxs-lookup"><span data-stu-id="5d8ec-145">The input span that contains binary data that needs to be encoded.</span></span> <span data-ttu-id="5d8ec-146">Ponieważ metoda wykonuje konwersję w miejscu, musi być wystarczająco duża, aby można było przechowywać wyniki operacji.</span><span class="sxs-lookup"><span data-stu-id="5d8ec-146">Because the method performs an in-place conversion, it needs to be large enough to store the result of the operation.</span></span></param>
        <param name="dataLength"><span data-ttu-id="5d8ec-147">Liczba bajtów danych binarnych zawartych w buforze, które należy zakodować.</span><span class="sxs-lookup"><span data-stu-id="5d8ec-147">The number of bytes of binary data contained within the buffer that needs to be encoded.</span></span> <span data-ttu-id="5d8ec-148">Ta wartość musi być mniejsza niż długość buforu.</span><span class="sxs-lookup"><span data-stu-id="5d8ec-148">This value must be smaller than the buffer length.</span></span></param>
        <param name="bytesWritten"><span data-ttu-id="5d8ec-149">Liczba bajtów zapisywana w buforze.</span><span class="sxs-lookup"><span data-stu-id="5d8ec-149">The number of bytes written into the buffer.</span></span></param>
        <summary><span data-ttu-id="5d8ec-150">Koduje zakres danych binarnych (w miejscu) do tekstu zakodowanego UTF-8 reprezentowanego jako Base 64.</span><span class="sxs-lookup"><span data-stu-id="5d8ec-150">Encodes the span of binary data (in-place) into UTF-8 encoded text represented as base 64.</span></span> <span data-ttu-id="5d8ec-151">Zakodowane dane wyjściowe tekstu są większe niż dane binarne zawarte w danych wejściowych (operacja jest płaska w przypadku danych).</span><span class="sxs-lookup"><span data-stu-id="5d8ec-151">The encoded text output is larger than the binary data contained in the input (the operation inflates the data).</span></span></summary>
        <returns><span data-ttu-id="5d8ec-152">Jedna z wartości wyliczenia, która wskazuje stan operacji kodowania.</span><span class="sxs-lookup"><span data-stu-id="5d8ec-152">One of the enumeration values that indicates the status of the encoding operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

<span data-ttu-id="5d8ec-153">Wartość zwracana może być następująca:</span><span class="sxs-lookup"><span data-stu-id="5d8ec-153">The return value can be as follows:</span></span>

- <span data-ttu-id="5d8ec-154"><xref:System.Buffers.OperationStatus.Done?displayProperty=nameWithType>: Przetwarzanie całego buforu zakończyło się pomyślnie.</span><span class="sxs-lookup"><span data-stu-id="5d8ec-154"><xref:System.Buffers.OperationStatus.Done?displayProperty=nameWithType>: Processing of the entire buffer succeeded.</span></span>
- <span data-ttu-id="5d8ec-155"><xref:System.Buffers.OperationStatus.DestinationTooSmall?displayProperty=nameWithType>: Nie ma wystarczającej ilości miejsca w buforze `dataLength` , aby dopasować wynik kodowania danych wejściowych.</span><span class="sxs-lookup"><span data-stu-id="5d8ec-155"><xref:System.Buffers.OperationStatus.DestinationTooSmall?displayProperty=nameWithType>: There isn't enough space in the buffer beyond `dataLength` to fit the result of encoding the input.</span></span>

<span data-ttu-id="5d8ec-156">Ta metoda nie może <xref:System.Buffers.OperationStatus.NeedMoreData?displayProperty=nameWithType> zwracać <xref:System.Buffers.OperationStatus.InvalidData?displayProperty=nameWithType>i.</span><span class="sxs-lookup"><span data-stu-id="5d8ec-156">This method cannot return <xref:System.Buffers.OperationStatus.NeedMoreData?displayProperty=nameWithType> and <xref:System.Buffers.OperationStatus.InvalidData?displayProperty=nameWithType>.</span></span>

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMaxDecodedFromUtf8Length">
      <MemberSignature Language="C#" Value="public static int GetMaxDecodedFromUtf8Length (int length);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 GetMaxDecodedFromUtf8Length(int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.Text.Base64.GetMaxDecodedFromUtf8Length(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetMaxDecodedFromUtf8Length (length As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int GetMaxDecodedFromUtf8Length(int length);" />
      <MemberSignature Language="F#" Value="static member GetMaxDecodedFromUtf8Length : int -&gt; int" Usage="System.Buffers.Text.Base64.GetMaxDecodedFromUtf8Length length" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="length">To be added.</param>
        <summary><span data-ttu-id="5d8ec-157">Zwraca maksymalną długość (w bajtach) wynik, jeśli zakodować tekst zakodowany w formacie Base-64 w rozmiarze <paramref name="length" />bajtów.</span><span class="sxs-lookup"><span data-stu-id="5d8ec-157">Returns the maximum length (in bytes) of the result if you were to decode base-64 encoded text within a byte span of size <paramref name="length" />.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="5d8ec-158"><paramref name="length" />jest mniejsza niż 0.</span><span class="sxs-lookup"><span data-stu-id="5d8ec-158"><paramref name="length" /> is less than 0.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetMaxEncodedToUtf8Length">
      <MemberSignature Language="C#" Value="public static int GetMaxEncodedToUtf8Length (int length);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 GetMaxEncodedToUtf8Length(int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.Text.Base64.GetMaxEncodedToUtf8Length(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetMaxEncodedToUtf8Length (length As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int GetMaxEncodedToUtf8Length(int length);" />
      <MemberSignature Language="F#" Value="static member GetMaxEncodedToUtf8Length : int -&gt; int" Usage="System.Buffers.Text.Base64.GetMaxEncodedToUtf8Length length" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="length">To be added.</param>
        <summary><span data-ttu-id="5d8ec-159">Zwraca maksymalną długość (w bajtach) wynik, jeśli dane binarne były zakodowane w rozmiarze <paramref name="length" />bajtów.</span><span class="sxs-lookup"><span data-stu-id="5d8ec-159">Returns the maximum length (in bytes) of the result if you were to encode binary data within a byte span of size <paramref name="length" />.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="5d8ec-160"><paramref name="length" />jest mniejsza niż 0 lub większa niż 1610612733 (ponieważ kodowanie powoduje, że dane są napompowane o 4/3).</span><span class="sxs-lookup"><span data-stu-id="5d8ec-160"><paramref name="length" /> is less than 0 or larger than 1610612733 (since encode inflates the data by 4/3).</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>
