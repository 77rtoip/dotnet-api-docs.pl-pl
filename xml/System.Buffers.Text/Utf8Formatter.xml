<Type Name="Utf8Formatter" FullName="System.Buffers.Text.Utf8Formatter">
  <TypeSignature Language="C#" Value="public static class Utf8Formatter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit Utf8Formatter extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Buffers.Text.Utf8Formatter" />
  <TypeSignature Language="VB.NET" Value="Public Class Utf8Formatter" />
  <TypeSignature Language="C++ CLI" Value="public ref class Utf8Formatter abstract sealed" />
  <TypeSignature Language="F#" Value="type Utf8Formatter = class" />
  <AssemblyInfo>
    <AssemblyName>System.Memory</AssemblyName>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="bd882-101">Zawiera statyczny mthods do formatowania popularnych typów danych jako ciągi Utf8.</span><span class="sxs-lookup"><span data-stu-id="bd882-101">Provides static mthods to format common data types as Utf8 strings.</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="TryFormat">
      <MemberSignature Language="C#" Value="public static bool TryFormat (bool value, Span&lt;byte&gt; destination, out int bytesWritten, System.Buffers.StandardFormat format = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryFormat(bool value, valuetype System.Span`1&lt;unsigned int8&gt; destination, [out] int32&amp; bytesWritten, valuetype System.Buffers.StandardFormat format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.Text.Utf8Formatter.TryFormat(System.Boolean,System.Span{System.Byte},System.Int32@,System.Buffers.StandardFormat)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryFormat (value As Boolean, destination As Span(Of Byte), ByRef bytesWritten As Integer, Optional format As StandardFormat = null) As Boolean" />
      <MemberSignature Language="F#" Value="static member TryFormat : bool * Span&lt;byte&gt; *  * System.Buffers.StandardFormat -&gt; bool" Usage="System.Buffers.Text.Utf8Formatter.TryFormat (value, destination, bytesWritten, format)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Boolean" />
        <Parameter Name="destination" Type="System.Span&lt;System.Byte&gt;" />
        <Parameter Name="bytesWritten" Type="System.Int32" RefType="out" />
        <Parameter Name="format" Type="System.Buffers.StandardFormat" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="bd882-102">Wartość do sformatowania.</span><span class="sxs-lookup"><span data-stu-id="bd882-102">The value to format.</span></span></param>
        <param name="destination"><span data-ttu-id="bd882-103">Bufor do zapisu wartości formacie UTF8 do.</span><span class="sxs-lookup"><span data-stu-id="bd882-103">The buffer to write the UTF8-formatted value to.</span></span></param>
        <param name="bytesWritten"><span data-ttu-id="bd882-104">Gdy metoda zwróci wartość, zawiera długość tekstu sformatowanego w bajtach.</span><span class="sxs-lookup"><span data-stu-id="bd882-104">When the method returns, contains the length of the formatted text in bytes.</span></span></param>
        <param name="format"><span data-ttu-id="bd882-105">Standardowy format do użycia.</span><span class="sxs-lookup"><span data-stu-id="bd882-105">The standard format to use.</span></span></param>
        <summary><span data-ttu-id="bd882-106">Formatuje <see cref="T:System.Boolean" /> jako ciągu UTF8.</span><span class="sxs-lookup"><span data-stu-id="bd882-106">Formats a <see cref="T:System.Boolean" /> as a UTF8 string.</span></span></summary>
        <returns><span data-ttu-id="bd882-107"><see langword="true" /> w przypadku powodzenia operacji formatowania <see langword="false" /> Jeśli <paramref name="buffer" /> jest za mały.</span><span class="sxs-lookup"><span data-stu-id="bd882-107"><see langword="true" /> if the formatting operation succeeds; <see langword="false" /> if <paramref name="buffer" /> is too small.</span></span></returns>
        <remarks>
          <format type="text/markdown">
        

<span data-ttu-id="bd882-108">Obsługiwane formaty:</span><span class="sxs-lookup"><span data-stu-id="bd882-108">Formats supported:</span></span>

|<span data-ttu-id="bd882-109">Ciąg formatu</span><span class="sxs-lookup"><span data-stu-id="bd882-109">Format string</span></span>|<span data-ttu-id="bd882-110">Przykładowy ciąg wynikowy</span><span class="sxs-lookup"><span data-stu-id="bd882-110">Example result string</span></span>|
|--|--|
|<span data-ttu-id="bd882-111">G (ustawienie domyślne)</span><span class="sxs-lookup"><span data-stu-id="bd882-111">G (default)</span></span>|<span data-ttu-id="bd882-112">PRAWDA/FAŁSZ</span><span class="sxs-lookup"><span data-stu-id="bd882-112">True/False</span></span>|
|<span data-ttu-id="bd882-113">l</span><span class="sxs-lookup"><span data-stu-id="bd882-113">l</span></span>|<span data-ttu-id="bd882-114">PRAWDA/FAŁSZ</span><span class="sxs-lookup"><span data-stu-id="bd882-114">true/false</span></span>|

<span data-ttu-id="bd882-115">Jeśli metoda nie powiedzie się, iteracyjne zwiększyć rozmiar buforu i ponów próbę, aż do skutku.</span><span class="sxs-lookup"><span data-stu-id="bd882-115">If the method fails, iteratively increase the size of the buffer and retry until it succeeds.</span></span>

        ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryFormat">
      <MemberSignature Language="C#" Value="public static bool TryFormat (byte value, Span&lt;byte&gt; destination, out int bytesWritten, System.Buffers.StandardFormat format = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryFormat(unsigned int8 value, valuetype System.Span`1&lt;unsigned int8&gt; destination, [out] int32&amp; bytesWritten, valuetype System.Buffers.StandardFormat format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.Text.Utf8Formatter.TryFormat(System.Byte,System.Span{System.Byte},System.Int32@,System.Buffers.StandardFormat)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryFormat (value As Byte, destination As Span(Of Byte), ByRef bytesWritten As Integer, Optional format As StandardFormat = null) As Boolean" />
      <MemberSignature Language="F#" Value="static member TryFormat : byte * Span&lt;byte&gt; *  * System.Buffers.StandardFormat -&gt; bool" Usage="System.Buffers.Text.Utf8Formatter.TryFormat (value, destination, bytesWritten, format)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Byte" />
        <Parameter Name="destination" Type="System.Span&lt;System.Byte&gt;" />
        <Parameter Name="bytesWritten" Type="System.Int32" RefType="out" />
        <Parameter Name="format" Type="System.Buffers.StandardFormat" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="bd882-116">Wartość do sformatowania.</span><span class="sxs-lookup"><span data-stu-id="bd882-116">The value to format.</span></span></param>
        <param name="destination"><span data-ttu-id="bd882-117">Bufor do zapisu wartości formacie UTF8 do.</span><span class="sxs-lookup"><span data-stu-id="bd882-117">The buffer to write the UTF8-formatted value to.</span></span></param>
        <param name="bytesWritten"><span data-ttu-id="bd882-118">Gdy metoda zwróci wartość, zawiera długość tekstu sformatowanego w bajtach.</span><span class="sxs-lookup"><span data-stu-id="bd882-118">When the method returns, contains the length of the formatted text in bytes.</span></span></param>
        <param name="format"><span data-ttu-id="bd882-119">Standardowy format do użycia.</span><span class="sxs-lookup"><span data-stu-id="bd882-119">The standard format to use.</span></span></param>
        <summary><span data-ttu-id="bd882-120">Formatuje <see cref="T:System.Byte" /> jako ciągu UTF8.</span><span class="sxs-lookup"><span data-stu-id="bd882-120">Formats a <see cref="T:System.Byte" /> as a UTF8 string.</span></span></summary>
        <returns><span data-ttu-id="bd882-121"><see langword="true" /> w przypadku powodzenia operacji formatowania <see langword="false" /> Jeśli <paramref name="buffer" /> jest za mały.</span><span class="sxs-lookup"><span data-stu-id="bd882-121"><see langword="true" /> if the formatting operation succeeds; <see langword="false" /> if <paramref name="buffer" /> is too small.</span></span></returns>
        <remarks>
          <format type="text/markdown">
        

<span data-ttu-id="bd882-122">Obsługiwane formaty:</span><span class="sxs-lookup"><span data-stu-id="bd882-122">Formats supported:</span></span>

|<span data-ttu-id="bd882-123">Ciąg formatu</span><span class="sxs-lookup"><span data-stu-id="bd882-123">Format string</span></span>|<span data-ttu-id="bd882-124">Przykładowy ciąg wynikowy</span><span class="sxs-lookup"><span data-stu-id="bd882-124">Example result string</span></span>|
|--|--|
|<span data-ttu-id="bd882-125">G/g (ustawienie domyślne)</span><span class="sxs-lookup"><span data-stu-id="bd882-125">G/g (default)</span></span>| |
|<span data-ttu-id="bd882-126">D/d</span><span class="sxs-lookup"><span data-stu-id="bd882-126">D/d</span></span>|<span data-ttu-id="bd882-127">122</span><span class="sxs-lookup"><span data-stu-id="bd882-127">122</span></span>|
|<span data-ttu-id="bd882-128">N/n</span><span class="sxs-lookup"><span data-stu-id="bd882-128">N/n</span></span>|<span data-ttu-id="bd882-129">122</span><span class="sxs-lookup"><span data-stu-id="bd882-129">122</span></span>|       
|<span data-ttu-id="bd882-130">X/x</span><span class="sxs-lookup"><span data-stu-id="bd882-130">X/x</span></span>|<span data-ttu-id="bd882-131">7a</span><span class="sxs-lookup"><span data-stu-id="bd882-131">7a</span></span>|

<span data-ttu-id="bd882-132">Jeśli metoda nie powiedzie się, iteracyjne zwiększyć rozmiar buforu i ponów próbę, aż do skutku.</span><span class="sxs-lookup"><span data-stu-id="bd882-132">If the method fails, iteratively increase the size of the buffer and retry until it succeeds.</span></span>

        ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryFormat">
      <MemberSignature Language="C#" Value="public static bool TryFormat (DateTime value, Span&lt;byte&gt; destination, out int bytesWritten, System.Buffers.StandardFormat format = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryFormat(valuetype System.DateTime value, valuetype System.Span`1&lt;unsigned int8&gt; destination, [out] int32&amp; bytesWritten, valuetype System.Buffers.StandardFormat format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.Text.Utf8Formatter.TryFormat(System.DateTime,System.Span{System.Byte},System.Int32@,System.Buffers.StandardFormat)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryFormat (value As DateTime, destination As Span(Of Byte), ByRef bytesWritten As Integer, Optional format As StandardFormat = null) As Boolean" />
      <MemberSignature Language="F#" Value="static member TryFormat : DateTime * Span&lt;byte&gt; *  * System.Buffers.StandardFormat -&gt; bool" Usage="System.Buffers.Text.Utf8Formatter.TryFormat (value, destination, bytesWritten, format)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.DateTime" />
        <Parameter Name="destination" Type="System.Span&lt;System.Byte&gt;" />
        <Parameter Name="bytesWritten" Type="System.Int32" RefType="out" />
        <Parameter Name="format" Type="System.Buffers.StandardFormat" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="bd882-133">Wartość do sformatowania.</span><span class="sxs-lookup"><span data-stu-id="bd882-133">The value to format.</span></span></param>
        <param name="destination"><span data-ttu-id="bd882-134">Bufor do zapisu wartości formacie UTF8 do.</span><span class="sxs-lookup"><span data-stu-id="bd882-134">The buffer to write the UTF8-formatted value to.</span></span></param>
        <param name="bytesWritten"><span data-ttu-id="bd882-135">Gdy metoda zwróci wartość, zawiera długość tekstu sformatowanego w bajtach.</span><span class="sxs-lookup"><span data-stu-id="bd882-135">When the method returns, contains the length of the formatted text in bytes.</span></span></param>
        <param name="format"><span data-ttu-id="bd882-136">Standardowy format do użycia.</span><span class="sxs-lookup"><span data-stu-id="bd882-136">The standard format to use.</span></span></param>
        <summary><span data-ttu-id="bd882-137">Formatuje <see cref="T:System.DateTime" /> jako ciągu UTF8.</span><span class="sxs-lookup"><span data-stu-id="bd882-137">Formats a <see cref="T:System.DateTime" /> as a UTF8 string.</span></span></summary>
        <returns><span data-ttu-id="bd882-138"><see langword="true" /> w przypadku powodzenia operacji formatowania <see langword="false" /> Jeśli <paramref name="buffer" /> jest za mały.</span><span class="sxs-lookup"><span data-stu-id="bd882-138"><see langword="true" /> if the formatting operation succeeds; <see langword="false" /> if <paramref name="buffer" /> is too small.</span></span></returns>
        <remarks>
          <format type="text/markdown">
        
            
<span data-ttu-id="bd882-139">Obsługiwane formaty:</span><span class="sxs-lookup"><span data-stu-id="bd882-139">Formats supported:</span></span>

|<span data-ttu-id="bd882-140">Ciąg formatu</span><span class="sxs-lookup"><span data-stu-id="bd882-140">Format string</span></span>|<span data-ttu-id="bd882-141">Przykładowy ciąg wynikowy</span><span class="sxs-lookup"><span data-stu-id="bd882-141">Example result string</span></span>|<span data-ttu-id="bd882-142">Komentarze</span><span class="sxs-lookup"><span data-stu-id="bd882-142">Comments</span></span>|
|--|--|--|
|<span data-ttu-id="bd882-143">G (ustawienie domyślne)</span><span class="sxs-lookup"><span data-stu-id="bd882-143">G  (default)</span></span>|<span data-ttu-id="bd882-144">05/25/2017 10:30:15</span><span class="sxs-lookup"><span data-stu-id="bd882-144">05/25/2017 10:30:15</span></span>| |
|<span data-ttu-id="bd882-145">R</span><span class="sxs-lookup"><span data-stu-id="bd882-145">R</span></span>|<span data-ttu-id="bd882-146">Wt 03 stycznia 2017 r. 08:08:05 GMT</span><span class="sxs-lookup"><span data-stu-id="bd882-146">Tue, 03 Jan 2017 08:08:05 GMT</span></span>|<span data-ttu-id="bd882-147">(RFC 1123)</span><span class="sxs-lookup"><span data-stu-id="bd882-147">(RFC 1123)</span></span>|
|<span data-ttu-id="bd882-148">l</span><span class="sxs-lookup"><span data-stu-id="bd882-148">l</span></span>|<span data-ttu-id="bd882-149">Wt 03 stycznia 2017 r. 08:08:05 gmt</span><span class="sxs-lookup"><span data-stu-id="bd882-149">tue, 03 jan 2017 08:08:05 gmt</span></span>|<span data-ttu-id="bd882-150">(Małe RFC 1123)</span><span class="sxs-lookup"><span data-stu-id="bd882-150">(Lowercase RFC 1123)</span></span>|
|<span data-ttu-id="bd882-151">O</span><span class="sxs-lookup"><span data-stu-id="bd882-151">O</span></span>|<span data-ttu-id="bd882-152">2017-06-12T05:30:45.7680000-07:00</span><span class="sxs-lookup"><span data-stu-id="bd882-152">2017-06-12T05:30:45.7680000-07:00</span></span>|<span data-ttu-id="bd882-153">(Wysyłanych)</span><span class="sxs-lookup"><span data-stu-id="bd882-153">(Round-trippable)</span></span>|

<span data-ttu-id="bd882-154">Jeśli metoda nie powiedzie się, iteracyjne zwiększyć rozmiar buforu i ponów próbę, aż do skutku.</span><span class="sxs-lookup"><span data-stu-id="bd882-154">If the method fails, iteratively increase the size of the buffer and retry until it succeeds.</span></span>

        ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryFormat">
      <MemberSignature Language="C#" Value="public static bool TryFormat (DateTimeOffset value, Span&lt;byte&gt; destination, out int bytesWritten, System.Buffers.StandardFormat format = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryFormat(valuetype System.DateTimeOffset value, valuetype System.Span`1&lt;unsigned int8&gt; destination, [out] int32&amp; bytesWritten, valuetype System.Buffers.StandardFormat format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.Text.Utf8Formatter.TryFormat(System.DateTimeOffset,System.Span{System.Byte},System.Int32@,System.Buffers.StandardFormat)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryFormat (value As DateTimeOffset, destination As Span(Of Byte), ByRef bytesWritten As Integer, Optional format As StandardFormat = null) As Boolean" />
      <MemberSignature Language="F#" Value="static member TryFormat : DateTimeOffset * Span&lt;byte&gt; *  * System.Buffers.StandardFormat -&gt; bool" Usage="System.Buffers.Text.Utf8Formatter.TryFormat (value, destination, bytesWritten, format)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.DateTimeOffset" />
        <Parameter Name="destination" Type="System.Span&lt;System.Byte&gt;" />
        <Parameter Name="bytesWritten" Type="System.Int32" RefType="out" />
        <Parameter Name="format" Type="System.Buffers.StandardFormat" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="bd882-155">Wartość do sformatowania.</span><span class="sxs-lookup"><span data-stu-id="bd882-155">The value to format.</span></span></param>
        <param name="destination"><span data-ttu-id="bd882-156">Bufor do zapisu wartości formacie UTF8 do.</span><span class="sxs-lookup"><span data-stu-id="bd882-156">The buffer to write the UTF8-formatted value to.</span></span></param>
        <param name="bytesWritten"><span data-ttu-id="bd882-157">Gdy metoda zwróci wartość, zawiera długość tekstu sformatowanego w bajtach.</span><span class="sxs-lookup"><span data-stu-id="bd882-157">When the method returns, contains the length of the formatted text in bytes.</span></span></param>
        <param name="format"><span data-ttu-id="bd882-158">Standardowy format do użycia.</span><span class="sxs-lookup"><span data-stu-id="bd882-158">The standard format to use.</span></span></param>
        <summary><span data-ttu-id="bd882-159">Formatuje <see cref="T:System.DateTimeOffset" /> jako ciągu UTF8.</span><span class="sxs-lookup"><span data-stu-id="bd882-159">Formats a <see cref="T:System.DateTimeOffset" /> as a UTF8 string.</span></span></summary>
        <returns><span data-ttu-id="bd882-160"><see langword="true" /> w przypadku powodzenia operacji formatowania <see langword="false" /> Jeśli <paramref name="buffer" /> jest za mały.</span><span class="sxs-lookup"><span data-stu-id="bd882-160"><see langword="true" /> if the formatting operation succeeds; <see langword="false" /> if <paramref name="buffer" /> is too small.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryFormat">
      <MemberSignature Language="C#" Value="public static bool TryFormat (decimal value, Span&lt;byte&gt; destination, out int bytesWritten, System.Buffers.StandardFormat format = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryFormat(valuetype System.Decimal value, valuetype System.Span`1&lt;unsigned int8&gt; destination, [out] int32&amp; bytesWritten, valuetype System.Buffers.StandardFormat format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.Text.Utf8Formatter.TryFormat(System.Decimal,System.Span{System.Byte},System.Int32@,System.Buffers.StandardFormat)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryFormat (value As Decimal, destination As Span(Of Byte), ByRef bytesWritten As Integer, Optional format As StandardFormat = null) As Boolean" />
      <MemberSignature Language="F#" Value="static member TryFormat : decimal * Span&lt;byte&gt; *  * System.Buffers.StandardFormat -&gt; bool" Usage="System.Buffers.Text.Utf8Formatter.TryFormat (value, destination, bytesWritten, format)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Decimal" />
        <Parameter Name="destination" Type="System.Span&lt;System.Byte&gt;" />
        <Parameter Name="bytesWritten" Type="System.Int32" RefType="out" />
        <Parameter Name="format" Type="System.Buffers.StandardFormat" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="bd882-161">Wartość do sformatowania.</span><span class="sxs-lookup"><span data-stu-id="bd882-161">The value to format.</span></span></param>
        <param name="destination"><span data-ttu-id="bd882-162">Bufor do zapisu wartości formacie UTF8 do.</span><span class="sxs-lookup"><span data-stu-id="bd882-162">The buffer to write the UTF8-formatted value to.</span></span></param>
        <param name="bytesWritten"><span data-ttu-id="bd882-163">Gdy metoda zwróci wartość, zawiera długość tekstu sformatowanego w bajtach.</span><span class="sxs-lookup"><span data-stu-id="bd882-163">When the method returns, contains the length of the formatted text in bytes.</span></span></param>
        <param name="format"><span data-ttu-id="bd882-164">Standardowy format do użycia.</span><span class="sxs-lookup"><span data-stu-id="bd882-164">The standard format to use.</span></span></param>
        <summary><span data-ttu-id="bd882-165">Formatuje <see cref="T:System.Decimal" /> jako ciągu UTF8.</span><span class="sxs-lookup"><span data-stu-id="bd882-165">Formats a <see cref="T:System.Decimal" /> as a UTF8 string.</span></span></summary>
        <returns><span data-ttu-id="bd882-166"><see langword="true" /> w przypadku powodzenia operacji formatowania <see langword="false" /> Jeśli <paramref name="buffer" /> jest za mały.</span><span class="sxs-lookup"><span data-stu-id="bd882-166"><see langword="true" /> if the formatting operation succeeds; <see langword="false" /> if <paramref name="buffer" /> is too small.</span></span></returns>
        <remarks>
          <format type="text/markdown">
        
            
<span data-ttu-id="bd882-167">Obsługiwane formaty:</span><span class="sxs-lookup"><span data-stu-id="bd882-167">Formats supported:</span></span>

|<span data-ttu-id="bd882-168">Ciąg formatu</span><span class="sxs-lookup"><span data-stu-id="bd882-168">Format string</span></span>|<span data-ttu-id="bd882-169">Przykładowy ciąg wynikowy</span><span class="sxs-lookup"><span data-stu-id="bd882-169">Example result string</span></span>|<span data-ttu-id="bd882-170">Komentarze</span><span class="sxs-lookup"><span data-stu-id="bd882-170">Comments</span></span>|
|--|--|--|
|<span data-ttu-id="bd882-171">G/g (ustawienie domyślne)</span><span class="sxs-lookup"><span data-stu-id="bd882-171">G/g  (default)</span></span>| |  
|<span data-ttu-id="bd882-172">F/f</span><span class="sxs-lookup"><span data-stu-id="bd882-172">F/f</span></span>|<span data-ttu-id="bd882-173">12.45</span><span class="sxs-lookup"><span data-stu-id="bd882-173">12.45</span></span>|<span data-ttu-id="bd882-174">Stały punktu</span><span class="sxs-lookup"><span data-stu-id="bd882-174">Fixed point</span></span>|
|<span data-ttu-id="bd882-175">E/e</span><span class="sxs-lookup"><span data-stu-id="bd882-175">E/e</span></span>|<span data-ttu-id="bd882-176">1.245000e1</span><span class="sxs-lookup"><span data-stu-id="bd882-176">1.245000e1</span></span>|<span data-ttu-id="bd882-177">Wykładnicza</span><span class="sxs-lookup"><span data-stu-id="bd882-177">Exponential</span></span>|

<span data-ttu-id="bd882-178">Jeśli metoda nie powiedzie się, iteracyjne zwiększyć rozmiar buforu i ponów próbę, aż do skutku.</span><span class="sxs-lookup"><span data-stu-id="bd882-178">If the method fails, iteratively increase the size of the buffer and retry until it succeeds.</span></span>

        ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryFormat">
      <MemberSignature Language="C#" Value="public static bool TryFormat (double value, Span&lt;byte&gt; destination, out int bytesWritten, System.Buffers.StandardFormat format = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryFormat(float64 value, valuetype System.Span`1&lt;unsigned int8&gt; destination, [out] int32&amp; bytesWritten, valuetype System.Buffers.StandardFormat format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.Text.Utf8Formatter.TryFormat(System.Double,System.Span{System.Byte},System.Int32@,System.Buffers.StandardFormat)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryFormat (value As Double, destination As Span(Of Byte), ByRef bytesWritten As Integer, Optional format As StandardFormat = null) As Boolean" />
      <MemberSignature Language="F#" Value="static member TryFormat : double * Span&lt;byte&gt; *  * System.Buffers.StandardFormat -&gt; bool" Usage="System.Buffers.Text.Utf8Formatter.TryFormat (value, destination, bytesWritten, format)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
        <Parameter Name="destination" Type="System.Span&lt;System.Byte&gt;" />
        <Parameter Name="bytesWritten" Type="System.Int32" RefType="out" />
        <Parameter Name="format" Type="System.Buffers.StandardFormat" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="bd882-179">Wartość do sformatowania.</span><span class="sxs-lookup"><span data-stu-id="bd882-179">The value to format.</span></span></param>
        <param name="destination"><span data-ttu-id="bd882-180">Bufor do zapisu wartości formacie UTF8 do.</span><span class="sxs-lookup"><span data-stu-id="bd882-180">The buffer to write the UTF8-formatted value to.</span></span></param>
        <param name="bytesWritten"><span data-ttu-id="bd882-181">Gdy metoda zwróci wartość, zawiera długość tekstu sformatowanego w bajtach.</span><span class="sxs-lookup"><span data-stu-id="bd882-181">When the method returns, contains the length of the formatted text in bytes.</span></span></param>
        <param name="format"><span data-ttu-id="bd882-182">Standardowy format do użycia.</span><span class="sxs-lookup"><span data-stu-id="bd882-182">The standard format to use.</span></span></param>
        <summary><span data-ttu-id="bd882-183">Formatuje <see cref="T:System.Double" /> jako ciągu UTF8.</span><span class="sxs-lookup"><span data-stu-id="bd882-183">Formats a <see cref="T:System.Double" /> as a UTF8 string.</span></span></summary>
        <returns><span data-ttu-id="bd882-184"><see langword="true" /> w przypadku powodzenia operacji formatowania <see langword="false" /> Jeśli <paramref name="buffer" /> jest za mały.</span><span class="sxs-lookup"><span data-stu-id="bd882-184"><see langword="true" /> if the formatting operation succeeds; <see langword="false" /> if <paramref name="buffer" /> is too small.</span></span></returns>
        <remarks>
          <format type="text/markdown">
        
            
<span data-ttu-id="bd882-185">Obsługiwane formaty:</span><span class="sxs-lookup"><span data-stu-id="bd882-185">Formats supported:</span></span>

|<span data-ttu-id="bd882-186">Ciąg formatu</span><span class="sxs-lookup"><span data-stu-id="bd882-186">Format string</span></span>|<span data-ttu-id="bd882-187">Przykładowy ciąg wynikowy</span><span class="sxs-lookup"><span data-stu-id="bd882-187">Example result string</span></span>|<span data-ttu-id="bd882-188">Komentarze</span><span class="sxs-lookup"><span data-stu-id="bd882-188">Comments</span></span>|
|--|--|--|
|<span data-ttu-id="bd882-189">G/g (ustawienie domyślne)</span><span class="sxs-lookup"><span data-stu-id="bd882-189">G/g  (default)</span></span>| |  
|<span data-ttu-id="bd882-190">F/f</span><span class="sxs-lookup"><span data-stu-id="bd882-190">F/f</span></span>|<span data-ttu-id="bd882-191">12.45</span><span class="sxs-lookup"><span data-stu-id="bd882-191">12.45</span></span>|<span data-ttu-id="bd882-192">Stały punktu</span><span class="sxs-lookup"><span data-stu-id="bd882-192">Fixed point</span></span>|
|<span data-ttu-id="bd882-193">E/e</span><span class="sxs-lookup"><span data-stu-id="bd882-193">E/e</span></span>|<span data-ttu-id="bd882-194">1.245000e1</span><span class="sxs-lookup"><span data-stu-id="bd882-194">1.245000e1</span></span>|<span data-ttu-id="bd882-195">Wykładnicza</span><span class="sxs-lookup"><span data-stu-id="bd882-195">Exponential</span></span>|

<span data-ttu-id="bd882-196">Jeśli metoda nie powiedzie się, iteracyjne zwiększyć rozmiar buforu i ponów próbę, aż do skutku.</span><span class="sxs-lookup"><span data-stu-id="bd882-196">If the method fails, iteratively increase the size of the buffer and retry until it succeeds.</span></span>
 
        ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryFormat">
      <MemberSignature Language="C#" Value="public static bool TryFormat (Guid value, Span&lt;byte&gt; destination, out int bytesWritten, System.Buffers.StandardFormat format = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryFormat(valuetype System.Guid value, valuetype System.Span`1&lt;unsigned int8&gt; destination, [out] int32&amp; bytesWritten, valuetype System.Buffers.StandardFormat format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.Text.Utf8Formatter.TryFormat(System.Guid,System.Span{System.Byte},System.Int32@,System.Buffers.StandardFormat)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryFormat (value As Guid, destination As Span(Of Byte), ByRef bytesWritten As Integer, Optional format As StandardFormat = null) As Boolean" />
      <MemberSignature Language="F#" Value="static member TryFormat : Guid * Span&lt;byte&gt; *  * System.Buffers.StandardFormat -&gt; bool" Usage="System.Buffers.Text.Utf8Formatter.TryFormat (value, destination, bytesWritten, format)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Guid" />
        <Parameter Name="destination" Type="System.Span&lt;System.Byte&gt;" />
        <Parameter Name="bytesWritten" Type="System.Int32" RefType="out" />
        <Parameter Name="format" Type="System.Buffers.StandardFormat" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="bd882-197">Wartość do sformatowania.</span><span class="sxs-lookup"><span data-stu-id="bd882-197">The value to format.</span></span></param>
        <param name="destination"><span data-ttu-id="bd882-198">Bufor do zapisu wartości formacie UTF8 do.</span><span class="sxs-lookup"><span data-stu-id="bd882-198">The buffer to write the UTF8-formatted value to.</span></span></param>
        <param name="bytesWritten"><span data-ttu-id="bd882-199">Gdy metoda zwróci wartość, zawiera długość tekstu sformatowanego w bajtach.</span><span class="sxs-lookup"><span data-stu-id="bd882-199">When the method returns, contains the length of the formatted text in bytes.</span></span></param>
        <param name="format"><span data-ttu-id="bd882-200">Standardowy format do użycia.</span><span class="sxs-lookup"><span data-stu-id="bd882-200">The standard format to use.</span></span></param>
        <summary><span data-ttu-id="bd882-201">Formatuje <see cref="T:System.Guid" /> jako ciągu UTF8.</span><span class="sxs-lookup"><span data-stu-id="bd882-201">Formats a <see cref="T:System.Guid" /> as a UTF8 string.</span></span></summary>
        <returns><span data-ttu-id="bd882-202"><see langword="true" /> w przypadku powodzenia operacji formatowania <see langword="false" /> Jeśli <paramref name="buffer" /> jest za mały.</span><span class="sxs-lookup"><span data-stu-id="bd882-202"><see langword="true" /> if the formatting operation succeeds; <see langword="false" /> if <paramref name="buffer" /> is too small.</span></span></returns>
        <remarks>
          <format type="text/markdown">
        
            
<span data-ttu-id="bd882-203">Obsługiwane formaty:</span><span class="sxs-lookup"><span data-stu-id="bd882-203">Formats supported:</span></span>

|<span data-ttu-id="bd882-204">Ciąg formatu</span><span class="sxs-lookup"><span data-stu-id="bd882-204">Format string</span></span>|<span data-ttu-id="bd882-205">Ciąg wynikowy</span><span class="sxs-lookup"><span data-stu-id="bd882-205">Result string</span></span>|
|--|--|
|<span data-ttu-id="bd882-206">D (ustawienie domyślne)</span><span class="sxs-lookup"><span data-stu-id="bd882-206">D (default)</span></span>|<span data-ttu-id="bd882-207">nnnnnnnn-nnnn-nnnn-nnnn-nnnnnnnnnnnn</span><span class="sxs-lookup"><span data-stu-id="bd882-207">nnnnnnnn-nnnn-nnnn-nnnn-nnnnnnnnnnnn</span></span>|
|<span data-ttu-id="bd882-208">B</span><span class="sxs-lookup"><span data-stu-id="bd882-208">B</span></span>|<span data-ttu-id="bd882-209">{nnnnnnnn-nnnn-nnnn-nnnn-nnnnnnnnnnnn}</span><span class="sxs-lookup"><span data-stu-id="bd882-209">{nnnnnnnn-nnnn-nnnn-nnnn-nnnnnnnnnnnn}</span></span>|
|<span data-ttu-id="bd882-210">P</span><span class="sxs-lookup"><span data-stu-id="bd882-210">P</span></span>|<span data-ttu-id="bd882-211">(nnnnnnnn-nnnn-nnnn-nnnn-nnnnnnnnnnnn)</span><span class="sxs-lookup"><span data-stu-id="bd882-211">(nnnnnnnn-nnnn-nnnn-nnnn-nnnnnnnnnnnn)</span></span>|
|<span data-ttu-id="bd882-212">N</span><span class="sxs-lookup"><span data-stu-id="bd882-212">N</span></span>|<span data-ttu-id="bd882-213">nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn</span><span class="sxs-lookup"><span data-stu-id="bd882-213">nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn</span></span>|

<span data-ttu-id="bd882-214">Jeśli metoda nie powiedzie się, iteracyjne zwiększyć rozmiar buforu i ponów próbę, aż do skutku.</span><span class="sxs-lookup"><span data-stu-id="bd882-214">If the method fails, iteratively increase the size of the buffer and retry until it succeeds.</span></span>
               
        ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryFormat">
      <MemberSignature Language="C#" Value="public static bool TryFormat (short value, Span&lt;byte&gt; destination, out int bytesWritten, System.Buffers.StandardFormat format = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryFormat(int16 value, valuetype System.Span`1&lt;unsigned int8&gt; destination, [out] int32&amp; bytesWritten, valuetype System.Buffers.StandardFormat format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.Text.Utf8Formatter.TryFormat(System.Int16,System.Span{System.Byte},System.Int32@,System.Buffers.StandardFormat)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryFormat (value As Short, destination As Span(Of Byte), ByRef bytesWritten As Integer, Optional format As StandardFormat = null) As Boolean" />
      <MemberSignature Language="F#" Value="static member TryFormat : int16 * Span&lt;byte&gt; *  * System.Buffers.StandardFormat -&gt; bool" Usage="System.Buffers.Text.Utf8Formatter.TryFormat (value, destination, bytesWritten, format)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int16" />
        <Parameter Name="destination" Type="System.Span&lt;System.Byte&gt;" />
        <Parameter Name="bytesWritten" Type="System.Int32" RefType="out" />
        <Parameter Name="format" Type="System.Buffers.StandardFormat" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="bd882-215">Wartość do sformatowania.</span><span class="sxs-lookup"><span data-stu-id="bd882-215">The value to format.</span></span></param>
        <param name="destination"><span data-ttu-id="bd882-216">Bufor do zapisu wartości formacie UTF8 do.</span><span class="sxs-lookup"><span data-stu-id="bd882-216">The buffer to write the UTF8-formatted value to.</span></span></param>
        <param name="bytesWritten"><span data-ttu-id="bd882-217">Gdy metoda zwróci wartość, zawiera długość tekstu sformatowanego w bajtach.</span><span class="sxs-lookup"><span data-stu-id="bd882-217">When the method returns, contains the length of the formatted text in bytes.</span></span></param>
        <param name="format"><span data-ttu-id="bd882-218">Standardowy format do użycia.</span><span class="sxs-lookup"><span data-stu-id="bd882-218">The standard format to use.</span></span></param>
        <summary><span data-ttu-id="bd882-219">Formatuje <see cref="T:System.Int16" /> jako ciągu UTF8.</span><span class="sxs-lookup"><span data-stu-id="bd882-219">Formats an <see cref="T:System.Int16" /> as a UTF8 string.</span></span></summary>
        <returns><span data-ttu-id="bd882-220"><see langword="true" /> w przypadku powodzenia operacji formatowania <see langword="false" /> Jeśli <paramref name="buffer" /> jest za mały.</span><span class="sxs-lookup"><span data-stu-id="bd882-220"><see langword="true" /> if the formatting operation succeeds; <see langword="false" /> if <paramref name="buffer" /> is too small.</span></span></returns>
        <remarks>
          <format type="text/markdown">
        
            
<span data-ttu-id="bd882-221">Obsługiwane formaty:</span><span class="sxs-lookup"><span data-stu-id="bd882-221">Formats supported:</span></span>

|<span data-ttu-id="bd882-222">Ciąg formatu</span><span class="sxs-lookup"><span data-stu-id="bd882-222">Format string</span></span>|<span data-ttu-id="bd882-223">Przykładowy ciąg wynikowy</span><span class="sxs-lookup"><span data-stu-id="bd882-223">Example result string</span></span>|
|--|--|
|<span data-ttu-id="bd882-224">G/g (ustawienie domyślne)</span><span class="sxs-lookup"><span data-stu-id="bd882-224">G/g (default)</span></span>| |
|<span data-ttu-id="bd882-225">D/d</span><span class="sxs-lookup"><span data-stu-id="bd882-225">D/d</span></span>|<span data-ttu-id="bd882-226">32767</span><span class="sxs-lookup"><span data-stu-id="bd882-226">32767</span></span>|
|<span data-ttu-id="bd882-227">N/n</span><span class="sxs-lookup"><span data-stu-id="bd882-227">N/n</span></span>|<span data-ttu-id="bd882-228">32,767</span><span class="sxs-lookup"><span data-stu-id="bd882-228">32,767</span></span>|       
|<span data-ttu-id="bd882-229">X/x</span><span class="sxs-lookup"><span data-stu-id="bd882-229">X/x</span></span>|<span data-ttu-id="bd882-230">7fff</span><span class="sxs-lookup"><span data-stu-id="bd882-230">7fff</span></span>|

<span data-ttu-id="bd882-231">Jeśli metoda nie powiedzie się, iteracyjne zwiększyć rozmiar buforu i ponów próbę, aż do skutku.</span><span class="sxs-lookup"><span data-stu-id="bd882-231">If the method fails, iteratively increase the size of the buffer and retry until it succeeds.</span></span>
 
        ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryFormat">
      <MemberSignature Language="C#" Value="public static bool TryFormat (int value, Span&lt;byte&gt; destination, out int bytesWritten, System.Buffers.StandardFormat format = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryFormat(int32 value, valuetype System.Span`1&lt;unsigned int8&gt; destination, [out] int32&amp; bytesWritten, valuetype System.Buffers.StandardFormat format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.Text.Utf8Formatter.TryFormat(System.Int32,System.Span{System.Byte},System.Int32@,System.Buffers.StandardFormat)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryFormat (value As Integer, destination As Span(Of Byte), ByRef bytesWritten As Integer, Optional format As StandardFormat = null) As Boolean" />
      <MemberSignature Language="F#" Value="static member TryFormat : int * Span&lt;byte&gt; *  * System.Buffers.StandardFormat -&gt; bool" Usage="System.Buffers.Text.Utf8Formatter.TryFormat (value, destination, bytesWritten, format)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int32" />
        <Parameter Name="destination" Type="System.Span&lt;System.Byte&gt;" />
        <Parameter Name="bytesWritten" Type="System.Int32" RefType="out" />
        <Parameter Name="format" Type="System.Buffers.StandardFormat" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="bd882-232">Wartość do sformatowania.</span><span class="sxs-lookup"><span data-stu-id="bd882-232">The value to format.</span></span></param>
        <param name="destination"><span data-ttu-id="bd882-233">Bufor do zapisu wartości formacie UTF8 do.</span><span class="sxs-lookup"><span data-stu-id="bd882-233">The buffer to write the UTF8-formatted value to.</span></span></param>
        <param name="bytesWritten"><span data-ttu-id="bd882-234">Gdy metoda zwróci wartość, zawiera długość tekstu sformatowanego w bajtach.</span><span class="sxs-lookup"><span data-stu-id="bd882-234">When the method returns, contains the length of the formatted text in bytes.</span></span></param>
        <param name="format"><span data-ttu-id="bd882-235">Standardowy format do użycia.</span><span class="sxs-lookup"><span data-stu-id="bd882-235">The standard format to use.</span></span></param>
        <summary><span data-ttu-id="bd882-236">Formatuje <see cref="T:System.Int32" /> jako ciągu UTF8.</span><span class="sxs-lookup"><span data-stu-id="bd882-236">Formats an <see cref="T:System.Int32" /> as a UTF8 string.</span></span></summary>
        <returns><span data-ttu-id="bd882-237"><see langword="true" /> w przypadku powodzenia operacji formatowania <see langword="false" /> Jeśli <paramref name="buffer" /> jest za mały.</span><span class="sxs-lookup"><span data-stu-id="bd882-237"><see langword="true" /> if the formatting operation succeeds; <see langword="false" /> if <paramref name="buffer" /> is too small.</span></span></returns>
        <remarks>
          <format type="text/markdown">
        
            
<span data-ttu-id="bd882-238">Obsługiwane formaty:</span><span class="sxs-lookup"><span data-stu-id="bd882-238">Formats supported:</span></span>

|<span data-ttu-id="bd882-239">Ciąg formatu</span><span class="sxs-lookup"><span data-stu-id="bd882-239">Format string</span></span>|<span data-ttu-id="bd882-240">Przykładowy ciąg wynikowy</span><span class="sxs-lookup"><span data-stu-id="bd882-240">Example result string</span></span>|
|--|--|
|<span data-ttu-id="bd882-241">G/g (ustawienie domyślne)</span><span class="sxs-lookup"><span data-stu-id="bd882-241">G/g (default)</span></span>| |
|<span data-ttu-id="bd882-242">D/d</span><span class="sxs-lookup"><span data-stu-id="bd882-242">D/d</span></span>|<span data-ttu-id="bd882-243">32767</span><span class="sxs-lookup"><span data-stu-id="bd882-243">32767</span></span>|
|<span data-ttu-id="bd882-244">N/n</span><span class="sxs-lookup"><span data-stu-id="bd882-244">N/n</span></span>|<span data-ttu-id="bd882-245">32,767</span><span class="sxs-lookup"><span data-stu-id="bd882-245">32,767</span></span>|       
|<span data-ttu-id="bd882-246">X/x</span><span class="sxs-lookup"><span data-stu-id="bd882-246">X/x</span></span>|<span data-ttu-id="bd882-247">7fff</span><span class="sxs-lookup"><span data-stu-id="bd882-247">7fff</span></span>|
              
<span data-ttu-id="bd882-248">Jeśli metoda nie powiedzie się, iteracyjne zwiększyć rozmiar buforu i ponów próbę, aż do skutku.</span><span class="sxs-lookup"><span data-stu-id="bd882-248">If the method fails, iteratively increase the size of the buffer and retry until it succeeds.</span></span>

        ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryFormat">
      <MemberSignature Language="C#" Value="public static bool TryFormat (long value, Span&lt;byte&gt; destination, out int bytesWritten, System.Buffers.StandardFormat format = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryFormat(int64 value, valuetype System.Span`1&lt;unsigned int8&gt; destination, [out] int32&amp; bytesWritten, valuetype System.Buffers.StandardFormat format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.Text.Utf8Formatter.TryFormat(System.Int64,System.Span{System.Byte},System.Int32@,System.Buffers.StandardFormat)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryFormat (value As Long, destination As Span(Of Byte), ByRef bytesWritten As Integer, Optional format As StandardFormat = null) As Boolean" />
      <MemberSignature Language="F#" Value="static member TryFormat : int64 * Span&lt;byte&gt; *  * System.Buffers.StandardFormat -&gt; bool" Usage="System.Buffers.Text.Utf8Formatter.TryFormat (value, destination, bytesWritten, format)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
        <Parameter Name="destination" Type="System.Span&lt;System.Byte&gt;" />
        <Parameter Name="bytesWritten" Type="System.Int32" RefType="out" />
        <Parameter Name="format" Type="System.Buffers.StandardFormat" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="bd882-249">Wartość do sformatowania.</span><span class="sxs-lookup"><span data-stu-id="bd882-249">The value to format.</span></span></param>
        <param name="destination"><span data-ttu-id="bd882-250">Bufor do zapisu wartości formacie UTF8 do.</span><span class="sxs-lookup"><span data-stu-id="bd882-250">The buffer to write the UTF8-formatted value to.</span></span></param>
        <param name="bytesWritten"><span data-ttu-id="bd882-251">Gdy metoda zwróci wartość, zawiera długość tekstu sformatowanego w bajtach.</span><span class="sxs-lookup"><span data-stu-id="bd882-251">When the method returns, contains the length of the formatted text in bytes.</span></span></param>
        <param name="format"><span data-ttu-id="bd882-252">Standardowy format do użycia.</span><span class="sxs-lookup"><span data-stu-id="bd882-252">The standard format to use.</span></span></param>
        <summary><span data-ttu-id="bd882-253">Formatuje <see cref="T:System.Int64" /> jako ciągu UTF8.</span><span class="sxs-lookup"><span data-stu-id="bd882-253">Formats an <see cref="T:System.Int64" /> as a UTF8 string.</span></span></summary>
        <returns><span data-ttu-id="bd882-254"><see langword="true" /> w przypadku powodzenia operacji formatowania <see langword="false" /> Jeśli <paramref name="buffer" /> jest za mały.</span><span class="sxs-lookup"><span data-stu-id="bd882-254"><see langword="true" /> if the formatting operation succeeds; <see langword="false" /> if <paramref name="buffer" /> is too small.</span></span></returns>
        <remarks>
          <format type="text/markdown">
        
            
<span data-ttu-id="bd882-255">Obsługiwane formaty:</span><span class="sxs-lookup"><span data-stu-id="bd882-255">Formats supported:</span></span>

|<span data-ttu-id="bd882-256">Ciąg formatu</span><span class="sxs-lookup"><span data-stu-id="bd882-256">Format string</span></span>|<span data-ttu-id="bd882-257">Przykładowy ciąg wynikowy</span><span class="sxs-lookup"><span data-stu-id="bd882-257">Example result string</span></span>|
|--|--|
|<span data-ttu-id="bd882-258">G/g (ustawienie domyślne)</span><span class="sxs-lookup"><span data-stu-id="bd882-258">G/g (default)</span></span>| |
|<span data-ttu-id="bd882-259">D/d</span><span class="sxs-lookup"><span data-stu-id="bd882-259">D/d</span></span>|<span data-ttu-id="bd882-260">32767</span><span class="sxs-lookup"><span data-stu-id="bd882-260">32767</span></span>|
|<span data-ttu-id="bd882-261">N/n</span><span class="sxs-lookup"><span data-stu-id="bd882-261">N/n</span></span>|<span data-ttu-id="bd882-262">32,767</span><span class="sxs-lookup"><span data-stu-id="bd882-262">32,767</span></span>|       
|<span data-ttu-id="bd882-263">X/x</span><span class="sxs-lookup"><span data-stu-id="bd882-263">X/x</span></span>|<span data-ttu-id="bd882-264">7fff</span><span class="sxs-lookup"><span data-stu-id="bd882-264">7fff</span></span>|
              
<span data-ttu-id="bd882-265">Jeśli metoda nie powiedzie się, iteracyjne zwiększyć rozmiar buforu i ponów próbę, aż do skutku.</span><span class="sxs-lookup"><span data-stu-id="bd882-265">If the method fails, iteratively increase the size of the buffer and retry until it succeeds.</span></span>
 
        ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryFormat">
      <MemberSignature Language="C#" Value="public static bool TryFormat (sbyte value, Span&lt;byte&gt; destination, out int bytesWritten, System.Buffers.StandardFormat format = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryFormat(int8 value, valuetype System.Span`1&lt;unsigned int8&gt; destination, [out] int32&amp; bytesWritten, valuetype System.Buffers.StandardFormat format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.Text.Utf8Formatter.TryFormat(System.SByte,System.Span{System.Byte},System.Int32@,System.Buffers.StandardFormat)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryFormat (value As SByte, destination As Span(Of Byte), ByRef bytesWritten As Integer, Optional format As StandardFormat = null) As Boolean" />
      <MemberSignature Language="F#" Value="static member TryFormat : sbyte * Span&lt;byte&gt; *  * System.Buffers.StandardFormat -&gt; bool" Usage="System.Buffers.Text.Utf8Formatter.TryFormat (value, destination, bytesWritten, format)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-3.0;netcore-2.1;netcore-2.2;netstandard-2.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.SByte" />
        <Parameter Name="destination" Type="System.Span&lt;System.Byte&gt;" />
        <Parameter Name="bytesWritten" Type="System.Int32" RefType="out" />
        <Parameter Name="format" Type="System.Buffers.StandardFormat" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="bd882-266">Wartość do sformatowania.</span><span class="sxs-lookup"><span data-stu-id="bd882-266">The value to format.</span></span></param>
        <param name="destination"><span data-ttu-id="bd882-267">Bufor do zapisu wartości formacie UTF8 do.</span><span class="sxs-lookup"><span data-stu-id="bd882-267">The buffer to write the UTF8-formatted value to.</span></span></param>
        <param name="bytesWritten"><span data-ttu-id="bd882-268">Gdy metoda zwróci wartość, zawiera długość tekstu sformatowanego w bajtach.</span><span class="sxs-lookup"><span data-stu-id="bd882-268">When the method returns, contains the length of the formatted text in bytes.</span></span></param>
        <param name="format"><span data-ttu-id="bd882-269">Standardowy format do użycia.</span><span class="sxs-lookup"><span data-stu-id="bd882-269">The standard format to use.</span></span></param>
        <summary><span data-ttu-id="bd882-270">Formatuje <see cref="T:System.SByte" /> jako ciągu UTF8.</span><span class="sxs-lookup"><span data-stu-id="bd882-270">Formats an <see cref="T:System.SByte" /> as a UTF8 string.</span></span></summary>
        <returns><span data-ttu-id="bd882-271"><see langword="true" /> w przypadku powodzenia operacji formatowania <see langword="false" /> Jeśli <paramref name="buffer" /> jest za mały.</span><span class="sxs-lookup"><span data-stu-id="bd882-271"><see langword="true" /> if the formatting operation succeeds; <see langword="false" /> if <paramref name="buffer" /> is too small.</span></span></returns>
        <remarks>
          <format type="text/markdown">
        
            
<span data-ttu-id="bd882-272">Obsługiwane formaty:</span><span class="sxs-lookup"><span data-stu-id="bd882-272">Formats supported:</span></span>

|<span data-ttu-id="bd882-273">Ciąg formatu</span><span class="sxs-lookup"><span data-stu-id="bd882-273">Format string</span></span>|<span data-ttu-id="bd882-274">Przykładowy ciąg wynikowy</span><span class="sxs-lookup"><span data-stu-id="bd882-274">Example result string</span></span>|
|--|--|
|<span data-ttu-id="bd882-275">G/g (ustawienie domyślne)</span><span class="sxs-lookup"><span data-stu-id="bd882-275">G/g (default)</span></span>| |
|<span data-ttu-id="bd882-276">D/d</span><span class="sxs-lookup"><span data-stu-id="bd882-276">D/d</span></span>|<span data-ttu-id="bd882-277">122</span><span class="sxs-lookup"><span data-stu-id="bd882-277">122</span></span>|
|<span data-ttu-id="bd882-278">N/n</span><span class="sxs-lookup"><span data-stu-id="bd882-278">N/n</span></span>|<span data-ttu-id="bd882-279">122</span><span class="sxs-lookup"><span data-stu-id="bd882-279">122</span></span>|       
|<span data-ttu-id="bd882-280">X/x</span><span class="sxs-lookup"><span data-stu-id="bd882-280">X/x</span></span>|<span data-ttu-id="bd882-281">7a</span><span class="sxs-lookup"><span data-stu-id="bd882-281">7a</span></span>|

<span data-ttu-id="bd882-282">Jeśli metoda nie powiedzie się, iteracyjne zwiększyć rozmiar buforu i ponów próbę, aż do skutku.</span><span class="sxs-lookup"><span data-stu-id="bd882-282">If the method fails, iteratively increase the size of the buffer and retry until it succeeds.</span></span>
               
        ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryFormat">
      <MemberSignature Language="C#" Value="public static bool TryFormat (float value, Span&lt;byte&gt; destination, out int bytesWritten, System.Buffers.StandardFormat format = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryFormat(float32 value, valuetype System.Span`1&lt;unsigned int8&gt; destination, [out] int32&amp; bytesWritten, valuetype System.Buffers.StandardFormat format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.Text.Utf8Formatter.TryFormat(System.Single,System.Span{System.Byte},System.Int32@,System.Buffers.StandardFormat)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryFormat (value As Single, destination As Span(Of Byte), ByRef bytesWritten As Integer, Optional format As StandardFormat = null) As Boolean" />
      <MemberSignature Language="F#" Value="static member TryFormat : single * Span&lt;byte&gt; *  * System.Buffers.StandardFormat -&gt; bool" Usage="System.Buffers.Text.Utf8Formatter.TryFormat (value, destination, bytesWritten, format)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Single" />
        <Parameter Name="destination" Type="System.Span&lt;System.Byte&gt;" />
        <Parameter Name="bytesWritten" Type="System.Int32" RefType="out" />
        <Parameter Name="format" Type="System.Buffers.StandardFormat" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="bd882-283">Wartość do sformatowania.</span><span class="sxs-lookup"><span data-stu-id="bd882-283">The value to format.</span></span></param>
        <param name="destination"><span data-ttu-id="bd882-284">Bufor do zapisu wartości formacie UTF8 do.</span><span class="sxs-lookup"><span data-stu-id="bd882-284">The buffer to write the UTF8-formatted value to.</span></span></param>
        <param name="bytesWritten"><span data-ttu-id="bd882-285">Gdy metoda zwróci wartość, zawiera długość tekstu sformatowanego w bajtach.</span><span class="sxs-lookup"><span data-stu-id="bd882-285">When the method returns, contains the length of the formatted text in bytes.</span></span></param>
        <param name="format"><span data-ttu-id="bd882-286">Standardowy format do użycia.</span><span class="sxs-lookup"><span data-stu-id="bd882-286">The standard format to use.</span></span></param>
        <summary><span data-ttu-id="bd882-287">Formatuje <see cref="T:System.Single" /> jako ciągu UTF8.</span><span class="sxs-lookup"><span data-stu-id="bd882-287">Formats a <see cref="T:System.Single" /> as a UTF8 string.</span></span></summary>
        <returns><span data-ttu-id="bd882-288"><see langword="true" /> w przypadku powodzenia operacji formatowania <see langword="false" /> Jeśli <paramref name="buffer" /> jest za mały.</span><span class="sxs-lookup"><span data-stu-id="bd882-288"><see langword="true" /> if the formatting operation succeeds; <see langword="false" /> if <paramref name="buffer" /> is too small.</span></span></returns>
        <remarks>
          <format type="text/markdown">
        
            
<span data-ttu-id="bd882-289">Obsługiwane formaty:</span><span class="sxs-lookup"><span data-stu-id="bd882-289">Formats supported:</span></span>

|<span data-ttu-id="bd882-290">Ciąg formatu</span><span class="sxs-lookup"><span data-stu-id="bd882-290">Format string</span></span>|<span data-ttu-id="bd882-291">Przykładowy ciąg wynikowy</span><span class="sxs-lookup"><span data-stu-id="bd882-291">Example result string</span></span>|<span data-ttu-id="bd882-292">Komentarze</span><span class="sxs-lookup"><span data-stu-id="bd882-292">Comments</span></span>|
|--|--|--|
|<span data-ttu-id="bd882-293">G/g (ustawienie domyślne)</span><span class="sxs-lookup"><span data-stu-id="bd882-293">G/g  (default)</span></span>| |  
|<span data-ttu-id="bd882-294">F/f</span><span class="sxs-lookup"><span data-stu-id="bd882-294">F/f</span></span>|<span data-ttu-id="bd882-295">12.45</span><span class="sxs-lookup"><span data-stu-id="bd882-295">12.45</span></span>|<span data-ttu-id="bd882-296">Stały punktu</span><span class="sxs-lookup"><span data-stu-id="bd882-296">Fixed point</span></span>|
|<span data-ttu-id="bd882-297">E/e</span><span class="sxs-lookup"><span data-stu-id="bd882-297">E/e</span></span>|<span data-ttu-id="bd882-298">1.245000e1</span><span class="sxs-lookup"><span data-stu-id="bd882-298">1.245000e1</span></span>|<span data-ttu-id="bd882-299">Wykładnicza</span><span class="sxs-lookup"><span data-stu-id="bd882-299">Exponential</span></span>|

<span data-ttu-id="bd882-300">Jeśli metoda nie powiedzie się, iteracyjne zwiększyć rozmiar buforu i ponów próbę, aż do skutku.</span><span class="sxs-lookup"><span data-stu-id="bd882-300">If the method fails, iteratively increase the size of the buffer and retry until it succeeds.</span></span>
 
        ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryFormat">
      <MemberSignature Language="C#" Value="public static bool TryFormat (TimeSpan value, Span&lt;byte&gt; destination, out int bytesWritten, System.Buffers.StandardFormat format = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryFormat(valuetype System.TimeSpan value, valuetype System.Span`1&lt;unsigned int8&gt; destination, [out] int32&amp; bytesWritten, valuetype System.Buffers.StandardFormat format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.Text.Utf8Formatter.TryFormat(System.TimeSpan,System.Span{System.Byte},System.Int32@,System.Buffers.StandardFormat)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryFormat (value As TimeSpan, destination As Span(Of Byte), ByRef bytesWritten As Integer, Optional format As StandardFormat = null) As Boolean" />
      <MemberSignature Language="F#" Value="static member TryFormat : TimeSpan * Span&lt;byte&gt; *  * System.Buffers.StandardFormat -&gt; bool" Usage="System.Buffers.Text.Utf8Formatter.TryFormat (value, destination, bytesWritten, format)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.TimeSpan" />
        <Parameter Name="destination" Type="System.Span&lt;System.Byte&gt;" />
        <Parameter Name="bytesWritten" Type="System.Int32" RefType="out" />
        <Parameter Name="format" Type="System.Buffers.StandardFormat" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="bd882-301">Wartość do sformatowania.</span><span class="sxs-lookup"><span data-stu-id="bd882-301">The value to format.</span></span></param>
        <param name="destination"><span data-ttu-id="bd882-302">Bufor do zapisu wartości formacie UTF8 do.</span><span class="sxs-lookup"><span data-stu-id="bd882-302">The buffer to write the UTF8-formatted value to.</span></span></param>
        <param name="bytesWritten"><span data-ttu-id="bd882-303">Gdy metoda zwróci wartość, zawiera długość tekstu sformatowanego w bajtach.</span><span class="sxs-lookup"><span data-stu-id="bd882-303">When the method returns, contains the length of the formatted text in bytes.</span></span></param>
        <param name="format"><span data-ttu-id="bd882-304">Standardowy format do użycia.</span><span class="sxs-lookup"><span data-stu-id="bd882-304">The standard format to use.</span></span></param>
        <summary><span data-ttu-id="bd882-305">Formatuje <see cref="T:System.TimeSpan" /> jako ciągu UTF8.</span><span class="sxs-lookup"><span data-stu-id="bd882-305">Formats a <see cref="T:System.TimeSpan" /> as a UTF8 string.</span></span></summary>
        <returns><span data-ttu-id="bd882-306"><see langword="true" /> w przypadku powodzenia operacji formatowania <see langword="false" /> Jeśli <paramref name="buffer" /> jest za mały.</span><span class="sxs-lookup"><span data-stu-id="bd882-306"><see langword="true" /> if the formatting operation succeeds; <see langword="false" /> if <paramref name="buffer" /> is too small.</span></span></returns>
        <remarks>
          <format type="text/markdown">
        
            
<span data-ttu-id="bd882-307">Obsługiwane formaty:</span><span class="sxs-lookup"><span data-stu-id="bd882-307">Formats supported:</span></span>

|<span data-ttu-id="bd882-308">Ciąg formatu</span><span class="sxs-lookup"><span data-stu-id="bd882-308">Format string</span></span>|<span data-ttu-id="bd882-309">Ciąg wynikowy</span><span class="sxs-lookup"><span data-stu-id="bd882-309">Result string</span></span>|<span data-ttu-id="bd882-310">Komentarze</span><span class="sxs-lookup"><span data-stu-id="bd882-310">Comments</span></span>|
|--|--|--|
|<span data-ttu-id="bd882-311">t-c-T (ustawienie domyślne)</span><span class="sxs-lookup"><span data-stu-id="bd882-311">c/t/T (default)</span></span>|<span data-ttu-id="bd882-312">[-] [d]. : mm: ss [.fffffff]</span><span class="sxs-lookup"><span data-stu-id="bd882-312">[-][d.]hh:mm:ss[.fffffff]</span></span>|<span data-ttu-id="bd882-313">(format stałe)</span><span class="sxs-lookup"><span data-stu-id="bd882-313">(constant format)</span></span>|
|<span data-ttu-id="bd882-314">G</span><span class="sxs-lookup"><span data-stu-id="bd882-314">G</span></span>|<span data-ttu-id="bd882-315">[-]d:hh:mm:ss.fffffff</span><span class="sxs-lookup"><span data-stu-id="bd882-315">[-]d:hh:mm:ss.fffffff</span></span>||<span data-ttu-id="bd882-316">(Ogólne long)</span><span class="sxs-lookup"><span data-stu-id="bd882-316">(general long)</span></span>|
|<span data-ttu-id="bd882-317">g</span><span class="sxs-lookup"><span data-stu-id="bd882-317">g</span></span>|<span data-ttu-id="bd882-318">[-] [d:] [h] ss [.f [f [f [f [f [f [f]]]</span><span class="sxs-lookup"><span data-stu-id="bd882-318">[-][d:][h]h:mm:ss[.f[f[f[f[f[f[f]]]]]]</span></span>|<span data-ttu-id="bd882-319">(skrócona ogólne)</span><span class="sxs-lookup"><span data-stu-id="bd882-319">(general short)</span></span>|

<span data-ttu-id="bd882-320">Jeśli metoda nie powiedzie się, iteracyjne zwiększyć rozmiar buforu i ponów próbę, aż do skutku.</span><span class="sxs-lookup"><span data-stu-id="bd882-320">If the method fails, iteratively increase the size of the buffer and retry until it succeeds.</span></span>

        ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryFormat">
      <MemberSignature Language="C#" Value="public static bool TryFormat (ushort value, Span&lt;byte&gt; destination, out int bytesWritten, System.Buffers.StandardFormat format = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryFormat(unsigned int16 value, valuetype System.Span`1&lt;unsigned int8&gt; destination, [out] int32&amp; bytesWritten, valuetype System.Buffers.StandardFormat format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.Text.Utf8Formatter.TryFormat(System.UInt16,System.Span{System.Byte},System.Int32@,System.Buffers.StandardFormat)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryFormat (value As UShort, destination As Span(Of Byte), ByRef bytesWritten As Integer, Optional format As StandardFormat = null) As Boolean" />
      <MemberSignature Language="F#" Value="static member TryFormat : uint16 * Span&lt;byte&gt; *  * System.Buffers.StandardFormat -&gt; bool" Usage="System.Buffers.Text.Utf8Formatter.TryFormat (value, destination, bytesWritten, format)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-3.0;netcore-2.1;netcore-2.2;netstandard-2.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt16" />
        <Parameter Name="destination" Type="System.Span&lt;System.Byte&gt;" />
        <Parameter Name="bytesWritten" Type="System.Int32" RefType="out" />
        <Parameter Name="format" Type="System.Buffers.StandardFormat" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="bd882-321">Wartość do sformatowania.</span><span class="sxs-lookup"><span data-stu-id="bd882-321">The value to format.</span></span></param>
        <param name="destination"><span data-ttu-id="bd882-322">Bufor do zapisu wartości formacie UTF8 do.</span><span class="sxs-lookup"><span data-stu-id="bd882-322">The buffer to write the UTF8-formatted value to.</span></span></param>
        <param name="bytesWritten"><span data-ttu-id="bd882-323">Gdy metoda zwróci wartość, zawiera długość tekstu sformatowanego w bajtach.</span><span class="sxs-lookup"><span data-stu-id="bd882-323">When the method returns, contains the length of the formatted text in bytes.</span></span></param>
        <param name="format"><span data-ttu-id="bd882-324">Standardowy format do użycia.</span><span class="sxs-lookup"><span data-stu-id="bd882-324">The standard format to use.</span></span></param>
        <summary><span data-ttu-id="bd882-325">Formatuje <see cref="T:System.UInt16" /> jako ciągu UTF8.</span><span class="sxs-lookup"><span data-stu-id="bd882-325">Formats a <see cref="T:System.UInt16" /> as a UTF8 string.</span></span></summary>
        <returns><span data-ttu-id="bd882-326"><see langword="true" /> w przypadku powodzenia operacji formatowania <see langword="false" /> Jeśli <paramref name="buffer" /> jest za mały.</span><span class="sxs-lookup"><span data-stu-id="bd882-326"><see langword="true" /> if the formatting operation succeeds; <see langword="false" /> if <paramref name="buffer" /> is too small.</span></span></returns>
        <remarks>
          <format type="text/markdown">
        
            
<span data-ttu-id="bd882-327">Obsługiwane formaty:</span><span class="sxs-lookup"><span data-stu-id="bd882-327">Formats supported:</span></span>

|<span data-ttu-id="bd882-328">Ciąg formatu</span><span class="sxs-lookup"><span data-stu-id="bd882-328">Format string</span></span>|<span data-ttu-id="bd882-329">Przykładowy ciąg wynikowy</span><span class="sxs-lookup"><span data-stu-id="bd882-329">Example result string</span></span>|
|--|--|
|<span data-ttu-id="bd882-330">G/g (ustawienie domyślne)</span><span class="sxs-lookup"><span data-stu-id="bd882-330">G/g (default)</span></span>| |
|<span data-ttu-id="bd882-331">D/d</span><span class="sxs-lookup"><span data-stu-id="bd882-331">D/d</span></span>|<span data-ttu-id="bd882-332">32767</span><span class="sxs-lookup"><span data-stu-id="bd882-332">32767</span></span>|
|<span data-ttu-id="bd882-333">N/n</span><span class="sxs-lookup"><span data-stu-id="bd882-333">N/n</span></span>|<span data-ttu-id="bd882-334">32,767</span><span class="sxs-lookup"><span data-stu-id="bd882-334">32,767</span></span>|       
|<span data-ttu-id="bd882-335">X/x</span><span class="sxs-lookup"><span data-stu-id="bd882-335">X/x</span></span>|<span data-ttu-id="bd882-336">7fff</span><span class="sxs-lookup"><span data-stu-id="bd882-336">7fff</span></span>|

<span data-ttu-id="bd882-337">Jeśli metoda nie powiedzie się, iteracyjne zwiększyć rozmiar buforu i ponów próbę, aż do skutku.</span><span class="sxs-lookup"><span data-stu-id="bd882-337">If the method fails, iteratively increase the size of the buffer and retry until it succeeds.</span></span>
 
        ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryFormat">
      <MemberSignature Language="C#" Value="public static bool TryFormat (uint value, Span&lt;byte&gt; destination, out int bytesWritten, System.Buffers.StandardFormat format = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryFormat(unsigned int32 value, valuetype System.Span`1&lt;unsigned int8&gt; destination, [out] int32&amp; bytesWritten, valuetype System.Buffers.StandardFormat format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.Text.Utf8Formatter.TryFormat(System.UInt32,System.Span{System.Byte},System.Int32@,System.Buffers.StandardFormat)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryFormat (value As UInteger, destination As Span(Of Byte), ByRef bytesWritten As Integer, Optional format As StandardFormat = null) As Boolean" />
      <MemberSignature Language="F#" Value="static member TryFormat : uint32 * Span&lt;byte&gt; *  * System.Buffers.StandardFormat -&gt; bool" Usage="System.Buffers.Text.Utf8Formatter.TryFormat (value, destination, bytesWritten, format)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-3.0;netcore-2.1;netcore-2.2;netstandard-2.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt32" />
        <Parameter Name="destination" Type="System.Span&lt;System.Byte&gt;" />
        <Parameter Name="bytesWritten" Type="System.Int32" RefType="out" />
        <Parameter Name="format" Type="System.Buffers.StandardFormat" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="bd882-338">Wartość do sformatowania.</span><span class="sxs-lookup"><span data-stu-id="bd882-338">The value to format.</span></span></param>
        <param name="destination"><span data-ttu-id="bd882-339">Bufor do zapisu wartości formacie UTF8 do.</span><span class="sxs-lookup"><span data-stu-id="bd882-339">The buffer to write the UTF8-formatted value to.</span></span></param>
        <param name="bytesWritten"><span data-ttu-id="bd882-340">Gdy metoda zwróci wartość, zawiera długość tekstu sformatowanego w bajtach.</span><span class="sxs-lookup"><span data-stu-id="bd882-340">When the method returns, contains the length of the formatted text in bytes.</span></span></param>
        <param name="format"><span data-ttu-id="bd882-341">Standardowy format do użycia.</span><span class="sxs-lookup"><span data-stu-id="bd882-341">The standard format to use.</span></span></param>
        <summary><span data-ttu-id="bd882-342">Formatuje <see cref="T:System.UInt32" /> jako ciągu UTF8.</span><span class="sxs-lookup"><span data-stu-id="bd882-342">Formats a <see cref="T:System.UInt32" /> as a UTF8 string.</span></span></summary>
        <returns><span data-ttu-id="bd882-343"><see langword="true" /> w przypadku powodzenia operacji formatowania <see langword="false" /> Jeśli <paramref name="buffer" /> jest za mały.</span><span class="sxs-lookup"><span data-stu-id="bd882-343"><see langword="true" /> if the formatting operation succeeds; <see langword="false" /> if <paramref name="buffer" /> is too small.</span></span></returns>
        <remarks>
          <format type="text/markdown">
        

<span data-ttu-id="bd882-344">Obsługiwane formaty:</span><span class="sxs-lookup"><span data-stu-id="bd882-344">Formats supported:</span></span>

|<span data-ttu-id="bd882-345">Ciąg formatu</span><span class="sxs-lookup"><span data-stu-id="bd882-345">Format string</span></span>|<span data-ttu-id="bd882-346">Przykładowy ciąg wynikowy</span><span class="sxs-lookup"><span data-stu-id="bd882-346">Example result string</span></span>|
|--|--|
|<span data-ttu-id="bd882-347">G/g (ustawienie domyślne)</span><span class="sxs-lookup"><span data-stu-id="bd882-347">G/g (default)</span></span>| |
|<span data-ttu-id="bd882-348">D/d</span><span class="sxs-lookup"><span data-stu-id="bd882-348">D/d</span></span>|<span data-ttu-id="bd882-349">32767</span><span class="sxs-lookup"><span data-stu-id="bd882-349">32767</span></span>|
|<span data-ttu-id="bd882-350">N/n</span><span class="sxs-lookup"><span data-stu-id="bd882-350">N/n</span></span>|<span data-ttu-id="bd882-351">32,767</span><span class="sxs-lookup"><span data-stu-id="bd882-351">32,767</span></span>|       
|<span data-ttu-id="bd882-352">X/x</span><span class="sxs-lookup"><span data-stu-id="bd882-352">X/x</span></span>|<span data-ttu-id="bd882-353">7fff</span><span class="sxs-lookup"><span data-stu-id="bd882-353">7fff</span></span>|

<span data-ttu-id="bd882-354">Jeśli metoda nie powiedzie się, iteracyjne zwiększyć rozmiar buforu i ponów próbę, aż do skutku.</span><span class="sxs-lookup"><span data-stu-id="bd882-354">If the method fails, iteratively increase the size of the buffer and retry until it succeeds.</span></span>
 
        ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryFormat">
      <MemberSignature Language="C#" Value="public static bool TryFormat (ulong value, Span&lt;byte&gt; destination, out int bytesWritten, System.Buffers.StandardFormat format = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryFormat(unsigned int64 value, valuetype System.Span`1&lt;unsigned int8&gt; destination, [out] int32&amp; bytesWritten, valuetype System.Buffers.StandardFormat format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.Text.Utf8Formatter.TryFormat(System.UInt64,System.Span{System.Byte},System.Int32@,System.Buffers.StandardFormat)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryFormat (value As ULong, destination As Span(Of Byte), ByRef bytesWritten As Integer, Optional format As StandardFormat = null) As Boolean" />
      <MemberSignature Language="F#" Value="static member TryFormat : uint64 * Span&lt;byte&gt; *  * System.Buffers.StandardFormat -&gt; bool" Usage="System.Buffers.Text.Utf8Formatter.TryFormat (value, destination, bytesWritten, format)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-3.0;netcore-2.1;netcore-2.2;netstandard-2.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt64" />
        <Parameter Name="destination" Type="System.Span&lt;System.Byte&gt;" />
        <Parameter Name="bytesWritten" Type="System.Int32" RefType="out" />
        <Parameter Name="format" Type="System.Buffers.StandardFormat" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="bd882-355">Wartość do sformatowania.</span><span class="sxs-lookup"><span data-stu-id="bd882-355">The value to format.</span></span></param>
        <param name="destination"><span data-ttu-id="bd882-356">Bufor do zapisu wartości formacie UTF8 do.</span><span class="sxs-lookup"><span data-stu-id="bd882-356">The buffer to write the UTF8-formatted value to.</span></span></param>
        <param name="bytesWritten"><span data-ttu-id="bd882-357">Gdy metoda zwróci wartość, zawiera długość tekstu sformatowanego w bajtach.</span><span class="sxs-lookup"><span data-stu-id="bd882-357">When the method returns, contains the length of the formatted text in bytes.</span></span></param>
        <param name="format"><span data-ttu-id="bd882-358">Standardowy format do użycia.</span><span class="sxs-lookup"><span data-stu-id="bd882-358">The standard format to use.</span></span></param>
        <summary><span data-ttu-id="bd882-359">Formatuje <see cref="T:System.UInt64" /> jako ciągu UTF8.</span><span class="sxs-lookup"><span data-stu-id="bd882-359">Formats a <see cref="T:System.UInt64" /> as a UTF8 string.</span></span></summary>
        <returns><span data-ttu-id="bd882-360"><see langword="true" /> w przypadku powodzenia operacji formatowania <see langword="false" /> Jeśli <paramref name="buffer" /> jest za mały.</span><span class="sxs-lookup"><span data-stu-id="bd882-360"><see langword="true" /> if the formatting operation succeeds; <see langword="false" /> if <paramref name="buffer" /> is too small.</span></span></returns>
        <remarks>
          <format type="text/markdown">
        
            
<span data-ttu-id="bd882-361">Obsługiwane formaty:</span><span class="sxs-lookup"><span data-stu-id="bd882-361">Formats supported:</span></span>

|<span data-ttu-id="bd882-362">Ciąg formatu</span><span class="sxs-lookup"><span data-stu-id="bd882-362">Format string</span></span>|<span data-ttu-id="bd882-363">Przykładowy ciąg wynikowy</span><span class="sxs-lookup"><span data-stu-id="bd882-363">Example result string</span></span>|
|--|--|
|<span data-ttu-id="bd882-364">G/g (ustawienie domyślne)</span><span class="sxs-lookup"><span data-stu-id="bd882-364">G/g (default)</span></span>| |
|<span data-ttu-id="bd882-365">D/d</span><span class="sxs-lookup"><span data-stu-id="bd882-365">D/d</span></span>|<span data-ttu-id="bd882-366">32767</span><span class="sxs-lookup"><span data-stu-id="bd882-366">32767</span></span>|
|<span data-ttu-id="bd882-367">N/n</span><span class="sxs-lookup"><span data-stu-id="bd882-367">N/n</span></span>|<span data-ttu-id="bd882-368">32,767</span><span class="sxs-lookup"><span data-stu-id="bd882-368">32,767</span></span>|       
|<span data-ttu-id="bd882-369">X/x</span><span class="sxs-lookup"><span data-stu-id="bd882-369">X/x</span></span>|<span data-ttu-id="bd882-370">7fff</span><span class="sxs-lookup"><span data-stu-id="bd882-370">7fff</span></span>|

<span data-ttu-id="bd882-371">Jeśli metoda nie powiedzie się, iteracyjne zwiększyć rozmiar buforu i ponów próbę, aż do skutku.</span><span class="sxs-lookup"><span data-stu-id="bd882-371">If the method fails, iteratively increase the size of the buffer and retry until it succeeds.</span></span>
 
        ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
