<Type Name="Utf8Formatter" FullName="System.Buffers.Text.Utf8Formatter">
  <Metadata><Meta Name="ms.openlocfilehash" Value="5e6c369754396981a4e386cd6e027b937ef2958c" /><Meta Name="ms.sourcegitcommit" Value="634678f7ccd2928c6b2cf792a301b079b63639af" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="07/26/2019" /><Meta Name="ms.locfileid" Value="68542786" /></Metadata><TypeSignature Language="C#" Value="public static class Utf8Formatter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit Utf8Formatter extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Buffers.Text.Utf8Formatter" />
  <TypeSignature Language="VB.NET" Value="Public Class Utf8Formatter" />
  <TypeSignature Language="C++ CLI" Value="public ref class Utf8Formatter abstract sealed" />
  <TypeSignature Language="F#" Value="type Utf8Formatter = class" />
  <AssemblyInfo>
    <AssemblyName>System.Memory</AssemblyName>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="b732c-101">Udostępnia statyczne mthods do formatowania wspólnych typów danych jako ciągi Utf8.</span><span class="sxs-lookup"><span data-stu-id="b732c-101">Provides static mthods to format common data types as Utf8 strings.</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="TryFormat">
      <MemberSignature Language="C#" Value="public static bool TryFormat (bool value, Span&lt;byte&gt; destination, out int bytesWritten, System.Buffers.StandardFormat format = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryFormat(bool value, valuetype System.Span`1&lt;unsigned int8&gt; destination, [out] int32&amp; bytesWritten, valuetype System.Buffers.StandardFormat format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.Text.Utf8Formatter.TryFormat(System.Boolean,System.Span{System.Byte},System.Int32@,System.Buffers.StandardFormat)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryFormat (value As Boolean, destination As Span(Of Byte), ByRef bytesWritten As Integer, Optional format As StandardFormat = null) As Boolean" />
      <MemberSignature Language="F#" Value="static member TryFormat : bool * Span&lt;byte&gt; *  * System.Buffers.StandardFormat -&gt; bool" Usage="System.Buffers.Text.Utf8Formatter.TryFormat (value, destination, bytesWritten, format)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Boolean" />
        <Parameter Name="destination" Type="System.Span&lt;System.Byte&gt;" />
        <Parameter Name="bytesWritten" Type="System.Int32" RefType="out" />
        <Parameter Name="format" Type="System.Buffers.StandardFormat" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="b732c-102">Wartość do sformatowania.</span><span class="sxs-lookup"><span data-stu-id="b732c-102">The value to format.</span></span></param>
        <param name="destination"><span data-ttu-id="b732c-103">Bufor, do którego ma zostać zapisana wartość sformatowana w formacie UTF8.</span><span class="sxs-lookup"><span data-stu-id="b732c-103">The buffer to write the UTF8-formatted value to.</span></span></param>
        <param name="bytesWritten"><span data-ttu-id="b732c-104">Gdy metoda zwraca, zawiera długość sformatowanego tekstu w bajtach.</span><span class="sxs-lookup"><span data-stu-id="b732c-104">When the method returns, contains the length of the formatted text in bytes.</span></span></param>
        <param name="format"><span data-ttu-id="b732c-105">Standardowy format do użycia.</span><span class="sxs-lookup"><span data-stu-id="b732c-105">The standard format to use.</span></span></param>
        <summary><span data-ttu-id="b732c-106">Formatuje <see cref="T:System.Boolean" /> jako ciąg w formacie UTF8.</span><span class="sxs-lookup"><span data-stu-id="b732c-106">Formats a <see cref="T:System.Boolean" /> as a UTF8 string.</span></span></summary>
        <returns><span data-ttu-id="b732c-107"><see langword="true" />w przypadku pomyślnego wykonania operacji formatowania; <see langword="false" /> Jeśli<paramref name="buffer" /> jest za mała.</span><span class="sxs-lookup"><span data-stu-id="b732c-107"><see langword="true" /> if the formatting operation succeeds; <see langword="false" /> if <paramref name="buffer" /> is too small.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

<span data-ttu-id="b732c-108">Obsługiwane formaty:</span><span class="sxs-lookup"><span data-stu-id="b732c-108">Formats supported:</span></span>

|<span data-ttu-id="b732c-109">Ciąg formatu</span><span class="sxs-lookup"><span data-stu-id="b732c-109">Format string</span></span>|<span data-ttu-id="b732c-110">Przykładowy ciąg wyniku</span><span class="sxs-lookup"><span data-stu-id="b732c-110">Example result string</span></span>|
|--|--|
|<span data-ttu-id="b732c-111">G (domyślnie)</span><span class="sxs-lookup"><span data-stu-id="b732c-111">G (default)</span></span>|<span data-ttu-id="b732c-112">PRAWDA/FAŁSZ</span><span class="sxs-lookup"><span data-stu-id="b732c-112">True/False</span></span>|
|<span data-ttu-id="b732c-113">l</span><span class="sxs-lookup"><span data-stu-id="b732c-113">l</span></span>|<span data-ttu-id="b732c-114">PRAWDA/FAŁSZ</span><span class="sxs-lookup"><span data-stu-id="b732c-114">true/false</span></span>|

<span data-ttu-id="b732c-115">Jeśli metoda zakończy się niepowodzeniem, można iteracyjnie zwiększyć rozmiar buforu i ponowić próbę, aż zakończy się pomyślnie.</span><span class="sxs-lookup"><span data-stu-id="b732c-115">If the method fails, iteratively increase the size of the buffer and retry until it succeeds.</span></span>

        ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryFormat">
      <MemberSignature Language="C#" Value="public static bool TryFormat (byte value, Span&lt;byte&gt; destination, out int bytesWritten, System.Buffers.StandardFormat format = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryFormat(unsigned int8 value, valuetype System.Span`1&lt;unsigned int8&gt; destination, [out] int32&amp; bytesWritten, valuetype System.Buffers.StandardFormat format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.Text.Utf8Formatter.TryFormat(System.Byte,System.Span{System.Byte},System.Int32@,System.Buffers.StandardFormat)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryFormat (value As Byte, destination As Span(Of Byte), ByRef bytesWritten As Integer, Optional format As StandardFormat = null) As Boolean" />
      <MemberSignature Language="F#" Value="static member TryFormat : byte * Span&lt;byte&gt; *  * System.Buffers.StandardFormat -&gt; bool" Usage="System.Buffers.Text.Utf8Formatter.TryFormat (value, destination, bytesWritten, format)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Byte" />
        <Parameter Name="destination" Type="System.Span&lt;System.Byte&gt;" />
        <Parameter Name="bytesWritten" Type="System.Int32" RefType="out" />
        <Parameter Name="format" Type="System.Buffers.StandardFormat" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="b732c-116">Wartość do sformatowania.</span><span class="sxs-lookup"><span data-stu-id="b732c-116">The value to format.</span></span></param>
        <param name="destination"><span data-ttu-id="b732c-117">Bufor, do którego ma zostać zapisana wartość sformatowana w formacie UTF8.</span><span class="sxs-lookup"><span data-stu-id="b732c-117">The buffer to write the UTF8-formatted value to.</span></span></param>
        <param name="bytesWritten"><span data-ttu-id="b732c-118">Gdy metoda zwraca, zawiera długość sformatowanego tekstu w bajtach.</span><span class="sxs-lookup"><span data-stu-id="b732c-118">When the method returns, contains the length of the formatted text in bytes.</span></span></param>
        <param name="format"><span data-ttu-id="b732c-119">Standardowy format do użycia.</span><span class="sxs-lookup"><span data-stu-id="b732c-119">The standard format to use.</span></span></param>
        <summary><span data-ttu-id="b732c-120">Formatuje <see cref="T:System.Byte" /> jako ciąg w formacie UTF8.</span><span class="sxs-lookup"><span data-stu-id="b732c-120">Formats a <see cref="T:System.Byte" /> as a UTF8 string.</span></span></summary>
        <returns><span data-ttu-id="b732c-121"><see langword="true" />w przypadku pomyślnego wykonania operacji formatowania; <see langword="false" /> Jeśli<paramref name="buffer" /> jest za mała.</span><span class="sxs-lookup"><span data-stu-id="b732c-121"><see langword="true" /> if the formatting operation succeeds; <see langword="false" /> if <paramref name="buffer" /> is too small.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

<span data-ttu-id="b732c-122">Obsługiwane formaty:</span><span class="sxs-lookup"><span data-stu-id="b732c-122">Formats supported:</span></span>

|<span data-ttu-id="b732c-123">Ciąg formatu</span><span class="sxs-lookup"><span data-stu-id="b732c-123">Format string</span></span>|<span data-ttu-id="b732c-124">Przykładowy ciąg wyniku</span><span class="sxs-lookup"><span data-stu-id="b732c-124">Example result string</span></span>|
|--|--|
|<span data-ttu-id="b732c-125">G/g (wartość domyślna)</span><span class="sxs-lookup"><span data-stu-id="b732c-125">G/g (default)</span></span>| |
|<span data-ttu-id="b732c-126">D/d</span><span class="sxs-lookup"><span data-stu-id="b732c-126">D/d</span></span>|<span data-ttu-id="b732c-127">122</span><span class="sxs-lookup"><span data-stu-id="b732c-127">122</span></span>|
|<span data-ttu-id="b732c-128">N/n</span><span class="sxs-lookup"><span data-stu-id="b732c-128">N/n</span></span>|<span data-ttu-id="b732c-129">122</span><span class="sxs-lookup"><span data-stu-id="b732c-129">122</span></span>|       
|<span data-ttu-id="b732c-130">X/x</span><span class="sxs-lookup"><span data-stu-id="b732c-130">X/x</span></span>|<span data-ttu-id="b732c-131">pozycja</span><span class="sxs-lookup"><span data-stu-id="b732c-131">7a</span></span>|

<span data-ttu-id="b732c-132">Jeśli metoda zakończy się niepowodzeniem, można iteracyjnie zwiększyć rozmiar buforu i ponowić próbę, aż zakończy się pomyślnie.</span><span class="sxs-lookup"><span data-stu-id="b732c-132">If the method fails, iteratively increase the size of the buffer and retry until it succeeds.</span></span>

        ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryFormat">
      <MemberSignature Language="C#" Value="public static bool TryFormat (DateTime value, Span&lt;byte&gt; destination, out int bytesWritten, System.Buffers.StandardFormat format = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryFormat(valuetype System.DateTime value, valuetype System.Span`1&lt;unsigned int8&gt; destination, [out] int32&amp; bytesWritten, valuetype System.Buffers.StandardFormat format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.Text.Utf8Formatter.TryFormat(System.DateTime,System.Span{System.Byte},System.Int32@,System.Buffers.StandardFormat)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryFormat (value As DateTime, destination As Span(Of Byte), ByRef bytesWritten As Integer, Optional format As StandardFormat = null) As Boolean" />
      <MemberSignature Language="F#" Value="static member TryFormat : DateTime * Span&lt;byte&gt; *  * System.Buffers.StandardFormat -&gt; bool" Usage="System.Buffers.Text.Utf8Formatter.TryFormat (value, destination, bytesWritten, format)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.DateTime" />
        <Parameter Name="destination" Type="System.Span&lt;System.Byte&gt;" />
        <Parameter Name="bytesWritten" Type="System.Int32" RefType="out" />
        <Parameter Name="format" Type="System.Buffers.StandardFormat" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="b732c-133">Wartość do sformatowania.</span><span class="sxs-lookup"><span data-stu-id="b732c-133">The value to format.</span></span></param>
        <param name="destination"><span data-ttu-id="b732c-134">Bufor, do którego ma zostać zapisana wartość sformatowana w formacie UTF8.</span><span class="sxs-lookup"><span data-stu-id="b732c-134">The buffer to write the UTF8-formatted value to.</span></span></param>
        <param name="bytesWritten"><span data-ttu-id="b732c-135">Gdy metoda zwraca, zawiera długość sformatowanego tekstu w bajtach.</span><span class="sxs-lookup"><span data-stu-id="b732c-135">When the method returns, contains the length of the formatted text in bytes.</span></span></param>
        <param name="format"><span data-ttu-id="b732c-136">Standardowy format do użycia.</span><span class="sxs-lookup"><span data-stu-id="b732c-136">The standard format to use.</span></span></param>
        <summary><span data-ttu-id="b732c-137">Formatuje <see cref="T:System.DateTime" /> jako ciąg w formacie UTF8.</span><span class="sxs-lookup"><span data-stu-id="b732c-137">Formats a <see cref="T:System.DateTime" /> as a UTF8 string.</span></span></summary>
        <returns><span data-ttu-id="b732c-138"><see langword="true" />w przypadku pomyślnego wykonania operacji formatowania; <see langword="false" /> Jeśli<paramref name="buffer" /> jest za mała.</span><span class="sxs-lookup"><span data-stu-id="b732c-138"><see langword="true" /> if the formatting operation succeeds; <see langword="false" /> if <paramref name="buffer" /> is too small.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[
            
<span data-ttu-id="b732c-139">Obsługiwane formaty:</span><span class="sxs-lookup"><span data-stu-id="b732c-139">Formats supported:</span></span>

|<span data-ttu-id="b732c-140">Ciąg formatu</span><span class="sxs-lookup"><span data-stu-id="b732c-140">Format string</span></span>|<span data-ttu-id="b732c-141">Przykładowy ciąg wyniku</span><span class="sxs-lookup"><span data-stu-id="b732c-141">Example result string</span></span>|<span data-ttu-id="b732c-142">Komentarze</span><span class="sxs-lookup"><span data-stu-id="b732c-142">Comments</span></span>|
|--|--|--|
|<span data-ttu-id="b732c-143">G (domyślnie)</span><span class="sxs-lookup"><span data-stu-id="b732c-143">G  (default)</span></span>|<span data-ttu-id="b732c-144">05/25/2017 10:30:15</span><span class="sxs-lookup"><span data-stu-id="b732c-144">05/25/2017 10:30:15</span></span>| |
|<span data-ttu-id="b732c-145">R</span><span class="sxs-lookup"><span data-stu-id="b732c-145">R</span></span>|<span data-ttu-id="b732c-146">WT, 03 sty 2017 08:08:05 GMT</span><span class="sxs-lookup"><span data-stu-id="b732c-146">Tue, 03 Jan 2017 08:08:05 GMT</span></span>|<span data-ttu-id="b732c-147">(RFC 1123)</span><span class="sxs-lookup"><span data-stu-id="b732c-147">(RFC 1123)</span></span>|
|<span data-ttu-id="b732c-148">l</span><span class="sxs-lookup"><span data-stu-id="b732c-148">l</span></span>|<span data-ttu-id="b732c-149">WT, 03 sty 2017 08:08:05 GMT</span><span class="sxs-lookup"><span data-stu-id="b732c-149">tue, 03 jan 2017 08:08:05 gmt</span></span>|<span data-ttu-id="b732c-150">(Małe litery RFC 1123)</span><span class="sxs-lookup"><span data-stu-id="b732c-150">(Lowercase RFC 1123)</span></span>|
|<span data-ttu-id="b732c-151">O</span><span class="sxs-lookup"><span data-stu-id="b732c-151">O</span></span>|<span data-ttu-id="b732c-152">2017-06-12T05:30:45.7680000-07:00</span><span class="sxs-lookup"><span data-stu-id="b732c-152">2017-06-12T05:30:45.7680000-07:00</span></span>|<span data-ttu-id="b732c-153">(Round-wyłącznik)</span><span class="sxs-lookup"><span data-stu-id="b732c-153">(Round-trippable)</span></span>|

<span data-ttu-id="b732c-154">Jeśli metoda zakończy się niepowodzeniem, można iteracyjnie zwiększyć rozmiar buforu i ponowić próbę, aż zakończy się pomyślnie.</span><span class="sxs-lookup"><span data-stu-id="b732c-154">If the method fails, iteratively increase the size of the buffer and retry until it succeeds.</span></span>

        ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryFormat">
      <MemberSignature Language="C#" Value="public static bool TryFormat (DateTimeOffset value, Span&lt;byte&gt; destination, out int bytesWritten, System.Buffers.StandardFormat format = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryFormat(valuetype System.DateTimeOffset value, valuetype System.Span`1&lt;unsigned int8&gt; destination, [out] int32&amp; bytesWritten, valuetype System.Buffers.StandardFormat format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.Text.Utf8Formatter.TryFormat(System.DateTimeOffset,System.Span{System.Byte},System.Int32@,System.Buffers.StandardFormat)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryFormat (value As DateTimeOffset, destination As Span(Of Byte), ByRef bytesWritten As Integer, Optional format As StandardFormat = null) As Boolean" />
      <MemberSignature Language="F#" Value="static member TryFormat : DateTimeOffset * Span&lt;byte&gt; *  * System.Buffers.StandardFormat -&gt; bool" Usage="System.Buffers.Text.Utf8Formatter.TryFormat (value, destination, bytesWritten, format)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.DateTimeOffset" />
        <Parameter Name="destination" Type="System.Span&lt;System.Byte&gt;" />
        <Parameter Name="bytesWritten" Type="System.Int32" RefType="out" />
        <Parameter Name="format" Type="System.Buffers.StandardFormat" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="b732c-155">Wartość do sformatowania.</span><span class="sxs-lookup"><span data-stu-id="b732c-155">The value to format.</span></span></param>
        <param name="destination"><span data-ttu-id="b732c-156">Bufor, do którego ma zostać zapisana wartość sformatowana w formacie UTF8.</span><span class="sxs-lookup"><span data-stu-id="b732c-156">The buffer to write the UTF8-formatted value to.</span></span></param>
        <param name="bytesWritten"><span data-ttu-id="b732c-157">Gdy metoda zwraca, zawiera długość sformatowanego tekstu w bajtach.</span><span class="sxs-lookup"><span data-stu-id="b732c-157">When the method returns, contains the length of the formatted text in bytes.</span></span></param>
        <param name="format"><span data-ttu-id="b732c-158">Standardowy format do użycia.</span><span class="sxs-lookup"><span data-stu-id="b732c-158">The standard format to use.</span></span></param>
        <summary><span data-ttu-id="b732c-159">Formatuje <see cref="T:System.DateTimeOffset" /> jako ciąg w formacie UTF8.</span><span class="sxs-lookup"><span data-stu-id="b732c-159">Formats a <see cref="T:System.DateTimeOffset" /> as a UTF8 string.</span></span></summary>
        <returns><span data-ttu-id="b732c-160"><see langword="true" />w przypadku pomyślnego wykonania operacji formatowania; <see langword="false" /> Jeśli<paramref name="buffer" /> jest za mała.</span><span class="sxs-lookup"><span data-stu-id="b732c-160"><see langword="true" /> if the formatting operation succeeds; <see langword="false" /> if <paramref name="buffer" /> is too small.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryFormat">
      <MemberSignature Language="C#" Value="public static bool TryFormat (decimal value, Span&lt;byte&gt; destination, out int bytesWritten, System.Buffers.StandardFormat format = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryFormat(valuetype System.Decimal value, valuetype System.Span`1&lt;unsigned int8&gt; destination, [out] int32&amp; bytesWritten, valuetype System.Buffers.StandardFormat format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.Text.Utf8Formatter.TryFormat(System.Decimal,System.Span{System.Byte},System.Int32@,System.Buffers.StandardFormat)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryFormat (value As Decimal, destination As Span(Of Byte), ByRef bytesWritten As Integer, Optional format As StandardFormat = null) As Boolean" />
      <MemberSignature Language="F#" Value="static member TryFormat : decimal * Span&lt;byte&gt; *  * System.Buffers.StandardFormat -&gt; bool" Usage="System.Buffers.Text.Utf8Formatter.TryFormat (value, destination, bytesWritten, format)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Decimal" />
        <Parameter Name="destination" Type="System.Span&lt;System.Byte&gt;" />
        <Parameter Name="bytesWritten" Type="System.Int32" RefType="out" />
        <Parameter Name="format" Type="System.Buffers.StandardFormat" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="b732c-161">Wartość do sformatowania.</span><span class="sxs-lookup"><span data-stu-id="b732c-161">The value to format.</span></span></param>
        <param name="destination"><span data-ttu-id="b732c-162">Bufor, do którego ma zostać zapisana wartość sformatowana w formacie UTF8.</span><span class="sxs-lookup"><span data-stu-id="b732c-162">The buffer to write the UTF8-formatted value to.</span></span></param>
        <param name="bytesWritten"><span data-ttu-id="b732c-163">Gdy metoda zwraca, zawiera długość sformatowanego tekstu w bajtach.</span><span class="sxs-lookup"><span data-stu-id="b732c-163">When the method returns, contains the length of the formatted text in bytes.</span></span></param>
        <param name="format"><span data-ttu-id="b732c-164">Standardowy format do użycia.</span><span class="sxs-lookup"><span data-stu-id="b732c-164">The standard format to use.</span></span></param>
        <summary><span data-ttu-id="b732c-165">Formatuje <see cref="T:System.Decimal" /> jako ciąg w formacie UTF8.</span><span class="sxs-lookup"><span data-stu-id="b732c-165">Formats a <see cref="T:System.Decimal" /> as a UTF8 string.</span></span></summary>
        <returns><span data-ttu-id="b732c-166"><see langword="true" />w przypadku pomyślnego wykonania operacji formatowania; <see langword="false" /> Jeśli<paramref name="buffer" /> jest za mała.</span><span class="sxs-lookup"><span data-stu-id="b732c-166"><see langword="true" /> if the formatting operation succeeds; <see langword="false" /> if <paramref name="buffer" /> is too small.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[
            
<span data-ttu-id="b732c-167">Obsługiwane formaty:</span><span class="sxs-lookup"><span data-stu-id="b732c-167">Formats supported:</span></span>

|<span data-ttu-id="b732c-168">Ciąg formatu</span><span class="sxs-lookup"><span data-stu-id="b732c-168">Format string</span></span>|<span data-ttu-id="b732c-169">Przykładowy ciąg wyniku</span><span class="sxs-lookup"><span data-stu-id="b732c-169">Example result string</span></span>|<span data-ttu-id="b732c-170">Komentarze</span><span class="sxs-lookup"><span data-stu-id="b732c-170">Comments</span></span>|
|--|--|--|
|<span data-ttu-id="b732c-171">G/g (wartość domyślna)</span><span class="sxs-lookup"><span data-stu-id="b732c-171">G/g  (default)</span></span>| |  
|<span data-ttu-id="b732c-172">F/f</span><span class="sxs-lookup"><span data-stu-id="b732c-172">F/f</span></span>|<span data-ttu-id="b732c-173">12,45</span><span class="sxs-lookup"><span data-stu-id="b732c-173">12.45</span></span>|<span data-ttu-id="b732c-174">Stały punkt</span><span class="sxs-lookup"><span data-stu-id="b732c-174">Fixed point</span></span>|
|<span data-ttu-id="b732c-175">E/e</span><span class="sxs-lookup"><span data-stu-id="b732c-175">E/e</span></span>|<span data-ttu-id="b732c-176">1.245000 E1</span><span class="sxs-lookup"><span data-stu-id="b732c-176">1.245000e1</span></span>|<span data-ttu-id="b732c-177">Wykładniczego</span><span class="sxs-lookup"><span data-stu-id="b732c-177">Exponential</span></span>|

<span data-ttu-id="b732c-178">Jeśli metoda zakończy się niepowodzeniem, można iteracyjnie zwiększyć rozmiar buforu i ponowić próbę, aż zakończy się pomyślnie.</span><span class="sxs-lookup"><span data-stu-id="b732c-178">If the method fails, iteratively increase the size of the buffer and retry until it succeeds.</span></span>

        ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryFormat">
      <MemberSignature Language="C#" Value="public static bool TryFormat (double value, Span&lt;byte&gt; destination, out int bytesWritten, System.Buffers.StandardFormat format = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryFormat(float64 value, valuetype System.Span`1&lt;unsigned int8&gt; destination, [out] int32&amp; bytesWritten, valuetype System.Buffers.StandardFormat format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.Text.Utf8Formatter.TryFormat(System.Double,System.Span{System.Byte},System.Int32@,System.Buffers.StandardFormat)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryFormat (value As Double, destination As Span(Of Byte), ByRef bytesWritten As Integer, Optional format As StandardFormat = null) As Boolean" />
      <MemberSignature Language="F#" Value="static member TryFormat : double * Span&lt;byte&gt; *  * System.Buffers.StandardFormat -&gt; bool" Usage="System.Buffers.Text.Utf8Formatter.TryFormat (value, destination, bytesWritten, format)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
        <Parameter Name="destination" Type="System.Span&lt;System.Byte&gt;" />
        <Parameter Name="bytesWritten" Type="System.Int32" RefType="out" />
        <Parameter Name="format" Type="System.Buffers.StandardFormat" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="b732c-179">Wartość do sformatowania.</span><span class="sxs-lookup"><span data-stu-id="b732c-179">The value to format.</span></span></param>
        <param name="destination"><span data-ttu-id="b732c-180">Bufor, do którego ma zostać zapisana wartość sformatowana w formacie UTF8.</span><span class="sxs-lookup"><span data-stu-id="b732c-180">The buffer to write the UTF8-formatted value to.</span></span></param>
        <param name="bytesWritten"><span data-ttu-id="b732c-181">Gdy metoda zwraca, zawiera długość sformatowanego tekstu w bajtach.</span><span class="sxs-lookup"><span data-stu-id="b732c-181">When the method returns, contains the length of the formatted text in bytes.</span></span></param>
        <param name="format"><span data-ttu-id="b732c-182">Standardowy format do użycia.</span><span class="sxs-lookup"><span data-stu-id="b732c-182">The standard format to use.</span></span></param>
        <summary><span data-ttu-id="b732c-183">Formatuje <see cref="T:System.Double" /> jako ciąg w formacie UTF8.</span><span class="sxs-lookup"><span data-stu-id="b732c-183">Formats a <see cref="T:System.Double" /> as a UTF8 string.</span></span></summary>
        <returns><span data-ttu-id="b732c-184"><see langword="true" />w przypadku pomyślnego wykonania operacji formatowania; <see langword="false" /> Jeśli<paramref name="buffer" /> jest za mała.</span><span class="sxs-lookup"><span data-stu-id="b732c-184"><see langword="true" /> if the formatting operation succeeds; <see langword="false" /> if <paramref name="buffer" /> is too small.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[
            
<span data-ttu-id="b732c-185">Obsługiwane formaty:</span><span class="sxs-lookup"><span data-stu-id="b732c-185">Formats supported:</span></span>

|<span data-ttu-id="b732c-186">Ciąg formatu</span><span class="sxs-lookup"><span data-stu-id="b732c-186">Format string</span></span>|<span data-ttu-id="b732c-187">Przykładowy ciąg wyniku</span><span class="sxs-lookup"><span data-stu-id="b732c-187">Example result string</span></span>|<span data-ttu-id="b732c-188">Komentarze</span><span class="sxs-lookup"><span data-stu-id="b732c-188">Comments</span></span>|
|--|--|--|
|<span data-ttu-id="b732c-189">G/g (wartość domyślna)</span><span class="sxs-lookup"><span data-stu-id="b732c-189">G/g  (default)</span></span>| |  
|<span data-ttu-id="b732c-190">F/f</span><span class="sxs-lookup"><span data-stu-id="b732c-190">F/f</span></span>|<span data-ttu-id="b732c-191">12,45</span><span class="sxs-lookup"><span data-stu-id="b732c-191">12.45</span></span>|<span data-ttu-id="b732c-192">Stały punkt</span><span class="sxs-lookup"><span data-stu-id="b732c-192">Fixed point</span></span>|
|<span data-ttu-id="b732c-193">E/e</span><span class="sxs-lookup"><span data-stu-id="b732c-193">E/e</span></span>|<span data-ttu-id="b732c-194">1.245000 E1</span><span class="sxs-lookup"><span data-stu-id="b732c-194">1.245000e1</span></span>|<span data-ttu-id="b732c-195">Wykładniczego</span><span class="sxs-lookup"><span data-stu-id="b732c-195">Exponential</span></span>|

<span data-ttu-id="b732c-196">Jeśli metoda zakończy się niepowodzeniem, można iteracyjnie zwiększyć rozmiar buforu i ponowić próbę, aż zakończy się pomyślnie.</span><span class="sxs-lookup"><span data-stu-id="b732c-196">If the method fails, iteratively increase the size of the buffer and retry until it succeeds.</span></span>
 
        ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryFormat">
      <MemberSignature Language="C#" Value="public static bool TryFormat (Guid value, Span&lt;byte&gt; destination, out int bytesWritten, System.Buffers.StandardFormat format = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryFormat(valuetype System.Guid value, valuetype System.Span`1&lt;unsigned int8&gt; destination, [out] int32&amp; bytesWritten, valuetype System.Buffers.StandardFormat format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.Text.Utf8Formatter.TryFormat(System.Guid,System.Span{System.Byte},System.Int32@,System.Buffers.StandardFormat)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryFormat (value As Guid, destination As Span(Of Byte), ByRef bytesWritten As Integer, Optional format As StandardFormat = null) As Boolean" />
      <MemberSignature Language="F#" Value="static member TryFormat : Guid * Span&lt;byte&gt; *  * System.Buffers.StandardFormat -&gt; bool" Usage="System.Buffers.Text.Utf8Formatter.TryFormat (value, destination, bytesWritten, format)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Guid" />
        <Parameter Name="destination" Type="System.Span&lt;System.Byte&gt;" />
        <Parameter Name="bytesWritten" Type="System.Int32" RefType="out" />
        <Parameter Name="format" Type="System.Buffers.StandardFormat" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="b732c-197">Wartość do sformatowania.</span><span class="sxs-lookup"><span data-stu-id="b732c-197">The value to format.</span></span></param>
        <param name="destination"><span data-ttu-id="b732c-198">Bufor, do którego ma zostać zapisana wartość sformatowana w formacie UTF8.</span><span class="sxs-lookup"><span data-stu-id="b732c-198">The buffer to write the UTF8-formatted value to.</span></span></param>
        <param name="bytesWritten"><span data-ttu-id="b732c-199">Gdy metoda zwraca, zawiera długość sformatowanego tekstu w bajtach.</span><span class="sxs-lookup"><span data-stu-id="b732c-199">When the method returns, contains the length of the formatted text in bytes.</span></span></param>
        <param name="format"><span data-ttu-id="b732c-200">Standardowy format do użycia.</span><span class="sxs-lookup"><span data-stu-id="b732c-200">The standard format to use.</span></span></param>
        <summary><span data-ttu-id="b732c-201">Formatuje <see cref="T:System.Guid" /> jako ciąg w formacie UTF8.</span><span class="sxs-lookup"><span data-stu-id="b732c-201">Formats a <see cref="T:System.Guid" /> as a UTF8 string.</span></span></summary>
        <returns><span data-ttu-id="b732c-202"><see langword="true" />w przypadku pomyślnego wykonania operacji formatowania; <see langword="false" /> Jeśli<paramref name="buffer" /> jest za mała.</span><span class="sxs-lookup"><span data-stu-id="b732c-202"><see langword="true" /> if the formatting operation succeeds; <see langword="false" /> if <paramref name="buffer" /> is too small.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[
            
<span data-ttu-id="b732c-203">Obsługiwane formaty:</span><span class="sxs-lookup"><span data-stu-id="b732c-203">Formats supported:</span></span>

|<span data-ttu-id="b732c-204">Ciąg formatu</span><span class="sxs-lookup"><span data-stu-id="b732c-204">Format string</span></span>|<span data-ttu-id="b732c-205">Ciąg wynikowy</span><span class="sxs-lookup"><span data-stu-id="b732c-205">Result string</span></span>|
|--|--|
|<span data-ttu-id="b732c-206">D (domyślnie)</span><span class="sxs-lookup"><span data-stu-id="b732c-206">D (default)</span></span>|<span data-ttu-id="b732c-207">nnnnnnnn-nnnn-nnnn-nnnn-nnnnnnnnnnnn</span><span class="sxs-lookup"><span data-stu-id="b732c-207">nnnnnnnn-nnnn-nnnn-nnnn-nnnnnnnnnnnn</span></span>|
|<span data-ttu-id="b732c-208">B</span><span class="sxs-lookup"><span data-stu-id="b732c-208">B</span></span>|<span data-ttu-id="b732c-209">{nnnnnnnn-nnnn-nnnn-nnnn-nnnnnnnnnnnn}</span><span class="sxs-lookup"><span data-stu-id="b732c-209">{nnnnnnnn-nnnn-nnnn-nnnn-nnnnnnnnnnnn}</span></span>|
|<span data-ttu-id="b732c-210">P</span><span class="sxs-lookup"><span data-stu-id="b732c-210">P</span></span>|<span data-ttu-id="b732c-211">(nnnnnnnn-nnnn-nnnn-nnnn-nnnnnnnnnnnn)</span><span class="sxs-lookup"><span data-stu-id="b732c-211">(nnnnnnnn-nnnn-nnnn-nnnn-nnnnnnnnnnnn)</span></span>|
|<span data-ttu-id="b732c-212">N</span><span class="sxs-lookup"><span data-stu-id="b732c-212">N</span></span>|<span data-ttu-id="b732c-213">nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn</span><span class="sxs-lookup"><span data-stu-id="b732c-213">nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn</span></span>|

<span data-ttu-id="b732c-214">Jeśli metoda zakończy się niepowodzeniem, można iteracyjnie zwiększyć rozmiar buforu i ponowić próbę, aż zakończy się pomyślnie.</span><span class="sxs-lookup"><span data-stu-id="b732c-214">If the method fails, iteratively increase the size of the buffer and retry until it succeeds.</span></span>
               
        ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryFormat">
      <MemberSignature Language="C#" Value="public static bool TryFormat (short value, Span&lt;byte&gt; destination, out int bytesWritten, System.Buffers.StandardFormat format = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryFormat(int16 value, valuetype System.Span`1&lt;unsigned int8&gt; destination, [out] int32&amp; bytesWritten, valuetype System.Buffers.StandardFormat format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.Text.Utf8Formatter.TryFormat(System.Int16,System.Span{System.Byte},System.Int32@,System.Buffers.StandardFormat)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryFormat (value As Short, destination As Span(Of Byte), ByRef bytesWritten As Integer, Optional format As StandardFormat = null) As Boolean" />
      <MemberSignature Language="F#" Value="static member TryFormat : int16 * Span&lt;byte&gt; *  * System.Buffers.StandardFormat -&gt; bool" Usage="System.Buffers.Text.Utf8Formatter.TryFormat (value, destination, bytesWritten, format)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int16" />
        <Parameter Name="destination" Type="System.Span&lt;System.Byte&gt;" />
        <Parameter Name="bytesWritten" Type="System.Int32" RefType="out" />
        <Parameter Name="format" Type="System.Buffers.StandardFormat" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="b732c-215">Wartość do sformatowania.</span><span class="sxs-lookup"><span data-stu-id="b732c-215">The value to format.</span></span></param>
        <param name="destination"><span data-ttu-id="b732c-216">Bufor, do którego ma zostać zapisana wartość sformatowana w formacie UTF8.</span><span class="sxs-lookup"><span data-stu-id="b732c-216">The buffer to write the UTF8-formatted value to.</span></span></param>
        <param name="bytesWritten"><span data-ttu-id="b732c-217">Gdy metoda zwraca, zawiera długość sformatowanego tekstu w bajtach.</span><span class="sxs-lookup"><span data-stu-id="b732c-217">When the method returns, contains the length of the formatted text in bytes.</span></span></param>
        <param name="format"><span data-ttu-id="b732c-218">Standardowy format do użycia.</span><span class="sxs-lookup"><span data-stu-id="b732c-218">The standard format to use.</span></span></param>
        <summary><span data-ttu-id="b732c-219">Formatuje <see cref="T:System.Int16" /> jako ciąg w formacie UTF8.</span><span class="sxs-lookup"><span data-stu-id="b732c-219">Formats an <see cref="T:System.Int16" /> as a UTF8 string.</span></span></summary>
        <returns><span data-ttu-id="b732c-220"><see langword="true" />w przypadku pomyślnego wykonania operacji formatowania; <see langword="false" /> Jeśli<paramref name="buffer" /> jest za mała.</span><span class="sxs-lookup"><span data-stu-id="b732c-220"><see langword="true" /> if the formatting operation succeeds; <see langword="false" /> if <paramref name="buffer" /> is too small.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[
            
<span data-ttu-id="b732c-221">Obsługiwane formaty:</span><span class="sxs-lookup"><span data-stu-id="b732c-221">Formats supported:</span></span>

|<span data-ttu-id="b732c-222">Ciąg formatu</span><span class="sxs-lookup"><span data-stu-id="b732c-222">Format string</span></span>|<span data-ttu-id="b732c-223">Przykładowy ciąg wyniku</span><span class="sxs-lookup"><span data-stu-id="b732c-223">Example result string</span></span>|
|--|--|
|<span data-ttu-id="b732c-224">G/g (wartość domyślna)</span><span class="sxs-lookup"><span data-stu-id="b732c-224">G/g (default)</span></span>| |
|<span data-ttu-id="b732c-225">D/d</span><span class="sxs-lookup"><span data-stu-id="b732c-225">D/d</span></span>|<span data-ttu-id="b732c-226">32767</span><span class="sxs-lookup"><span data-stu-id="b732c-226">32767</span></span>|
|<span data-ttu-id="b732c-227">N/n</span><span class="sxs-lookup"><span data-stu-id="b732c-227">N/n</span></span>|<span data-ttu-id="b732c-228">32,767</span><span class="sxs-lookup"><span data-stu-id="b732c-228">32,767</span></span>|       
|<span data-ttu-id="b732c-229">X/x</span><span class="sxs-lookup"><span data-stu-id="b732c-229">X/x</span></span>|<span data-ttu-id="b732c-230">7fff</span><span class="sxs-lookup"><span data-stu-id="b732c-230">7fff</span></span>|

<span data-ttu-id="b732c-231">Jeśli metoda zakończy się niepowodzeniem, można iteracyjnie zwiększyć rozmiar buforu i ponowić próbę, aż zakończy się pomyślnie.</span><span class="sxs-lookup"><span data-stu-id="b732c-231">If the method fails, iteratively increase the size of the buffer and retry until it succeeds.</span></span>
 
        ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryFormat">
      <MemberSignature Language="C#" Value="public static bool TryFormat (int value, Span&lt;byte&gt; destination, out int bytesWritten, System.Buffers.StandardFormat format = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryFormat(int32 value, valuetype System.Span`1&lt;unsigned int8&gt; destination, [out] int32&amp; bytesWritten, valuetype System.Buffers.StandardFormat format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.Text.Utf8Formatter.TryFormat(System.Int32,System.Span{System.Byte},System.Int32@,System.Buffers.StandardFormat)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryFormat (value As Integer, destination As Span(Of Byte), ByRef bytesWritten As Integer, Optional format As StandardFormat = null) As Boolean" />
      <MemberSignature Language="F#" Value="static member TryFormat : int * Span&lt;byte&gt; *  * System.Buffers.StandardFormat -&gt; bool" Usage="System.Buffers.Text.Utf8Formatter.TryFormat (value, destination, bytesWritten, format)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int32" />
        <Parameter Name="destination" Type="System.Span&lt;System.Byte&gt;" />
        <Parameter Name="bytesWritten" Type="System.Int32" RefType="out" />
        <Parameter Name="format" Type="System.Buffers.StandardFormat" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="b732c-232">Wartość do sformatowania.</span><span class="sxs-lookup"><span data-stu-id="b732c-232">The value to format.</span></span></param>
        <param name="destination"><span data-ttu-id="b732c-233">Bufor, do którego ma zostać zapisana wartość sformatowana w formacie UTF8.</span><span class="sxs-lookup"><span data-stu-id="b732c-233">The buffer to write the UTF8-formatted value to.</span></span></param>
        <param name="bytesWritten"><span data-ttu-id="b732c-234">Gdy metoda zwraca, zawiera długość sformatowanego tekstu w bajtach.</span><span class="sxs-lookup"><span data-stu-id="b732c-234">When the method returns, contains the length of the formatted text in bytes.</span></span></param>
        <param name="format"><span data-ttu-id="b732c-235">Standardowy format do użycia.</span><span class="sxs-lookup"><span data-stu-id="b732c-235">The standard format to use.</span></span></param>
        <summary><span data-ttu-id="b732c-236">Formatuje <see cref="T:System.Int32" /> jako ciąg w formacie UTF8.</span><span class="sxs-lookup"><span data-stu-id="b732c-236">Formats an <see cref="T:System.Int32" /> as a UTF8 string.</span></span></summary>
        <returns><span data-ttu-id="b732c-237"><see langword="true" />w przypadku pomyślnego wykonania operacji formatowania; <see langword="false" /> Jeśli<paramref name="buffer" /> jest za mała.</span><span class="sxs-lookup"><span data-stu-id="b732c-237"><see langword="true" /> if the formatting operation succeeds; <see langword="false" /> if <paramref name="buffer" /> is too small.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[
            
<span data-ttu-id="b732c-238">Obsługiwane formaty:</span><span class="sxs-lookup"><span data-stu-id="b732c-238">Formats supported:</span></span>

|<span data-ttu-id="b732c-239">Ciąg formatu</span><span class="sxs-lookup"><span data-stu-id="b732c-239">Format string</span></span>|<span data-ttu-id="b732c-240">Przykładowy ciąg wyniku</span><span class="sxs-lookup"><span data-stu-id="b732c-240">Example result string</span></span>|
|--|--|
|<span data-ttu-id="b732c-241">G/g (wartość domyślna)</span><span class="sxs-lookup"><span data-stu-id="b732c-241">G/g (default)</span></span>| |
|<span data-ttu-id="b732c-242">D/d</span><span class="sxs-lookup"><span data-stu-id="b732c-242">D/d</span></span>|<span data-ttu-id="b732c-243">32767</span><span class="sxs-lookup"><span data-stu-id="b732c-243">32767</span></span>|
|<span data-ttu-id="b732c-244">N/n</span><span class="sxs-lookup"><span data-stu-id="b732c-244">N/n</span></span>|<span data-ttu-id="b732c-245">32,767</span><span class="sxs-lookup"><span data-stu-id="b732c-245">32,767</span></span>|       
|<span data-ttu-id="b732c-246">X/x</span><span class="sxs-lookup"><span data-stu-id="b732c-246">X/x</span></span>|<span data-ttu-id="b732c-247">7fff</span><span class="sxs-lookup"><span data-stu-id="b732c-247">7fff</span></span>|
              
<span data-ttu-id="b732c-248">Jeśli metoda zakończy się niepowodzeniem, można iteracyjnie zwiększyć rozmiar buforu i ponowić próbę, aż zakończy się pomyślnie.</span><span class="sxs-lookup"><span data-stu-id="b732c-248">If the method fails, iteratively increase the size of the buffer and retry until it succeeds.</span></span>

        ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryFormat">
      <MemberSignature Language="C#" Value="public static bool TryFormat (long value, Span&lt;byte&gt; destination, out int bytesWritten, System.Buffers.StandardFormat format = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryFormat(int64 value, valuetype System.Span`1&lt;unsigned int8&gt; destination, [out] int32&amp; bytesWritten, valuetype System.Buffers.StandardFormat format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.Text.Utf8Formatter.TryFormat(System.Int64,System.Span{System.Byte},System.Int32@,System.Buffers.StandardFormat)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryFormat (value As Long, destination As Span(Of Byte), ByRef bytesWritten As Integer, Optional format As StandardFormat = null) As Boolean" />
      <MemberSignature Language="F#" Value="static member TryFormat : int64 * Span&lt;byte&gt; *  * System.Buffers.StandardFormat -&gt; bool" Usage="System.Buffers.Text.Utf8Formatter.TryFormat (value, destination, bytesWritten, format)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
        <Parameter Name="destination" Type="System.Span&lt;System.Byte&gt;" />
        <Parameter Name="bytesWritten" Type="System.Int32" RefType="out" />
        <Parameter Name="format" Type="System.Buffers.StandardFormat" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="b732c-249">Wartość do sformatowania.</span><span class="sxs-lookup"><span data-stu-id="b732c-249">The value to format.</span></span></param>
        <param name="destination"><span data-ttu-id="b732c-250">Bufor, do którego ma zostać zapisana wartość sformatowana w formacie UTF8.</span><span class="sxs-lookup"><span data-stu-id="b732c-250">The buffer to write the UTF8-formatted value to.</span></span></param>
        <param name="bytesWritten"><span data-ttu-id="b732c-251">Gdy metoda zwraca, zawiera długość sformatowanego tekstu w bajtach.</span><span class="sxs-lookup"><span data-stu-id="b732c-251">When the method returns, contains the length of the formatted text in bytes.</span></span></param>
        <param name="format"><span data-ttu-id="b732c-252">Standardowy format do użycia.</span><span class="sxs-lookup"><span data-stu-id="b732c-252">The standard format to use.</span></span></param>
        <summary><span data-ttu-id="b732c-253">Formatuje <see cref="T:System.Int64" /> jako ciąg w formacie UTF8.</span><span class="sxs-lookup"><span data-stu-id="b732c-253">Formats an <see cref="T:System.Int64" /> as a UTF8 string.</span></span></summary>
        <returns><span data-ttu-id="b732c-254"><see langword="true" />w przypadku pomyślnego wykonania operacji formatowania; <see langword="false" /> Jeśli<paramref name="buffer" /> jest za mała.</span><span class="sxs-lookup"><span data-stu-id="b732c-254"><see langword="true" /> if the formatting operation succeeds; <see langword="false" /> if <paramref name="buffer" /> is too small.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[
            
<span data-ttu-id="b732c-255">Obsługiwane formaty:</span><span class="sxs-lookup"><span data-stu-id="b732c-255">Formats supported:</span></span>

|<span data-ttu-id="b732c-256">Ciąg formatu</span><span class="sxs-lookup"><span data-stu-id="b732c-256">Format string</span></span>|<span data-ttu-id="b732c-257">Przykładowy ciąg wyniku</span><span class="sxs-lookup"><span data-stu-id="b732c-257">Example result string</span></span>|
|--|--|
|<span data-ttu-id="b732c-258">G/g (wartość domyślna)</span><span class="sxs-lookup"><span data-stu-id="b732c-258">G/g (default)</span></span>| |
|<span data-ttu-id="b732c-259">D/d</span><span class="sxs-lookup"><span data-stu-id="b732c-259">D/d</span></span>|<span data-ttu-id="b732c-260">32767</span><span class="sxs-lookup"><span data-stu-id="b732c-260">32767</span></span>|
|<span data-ttu-id="b732c-261">N/n</span><span class="sxs-lookup"><span data-stu-id="b732c-261">N/n</span></span>|<span data-ttu-id="b732c-262">32,767</span><span class="sxs-lookup"><span data-stu-id="b732c-262">32,767</span></span>|       
|<span data-ttu-id="b732c-263">X/x</span><span class="sxs-lookup"><span data-stu-id="b732c-263">X/x</span></span>|<span data-ttu-id="b732c-264">7fff</span><span class="sxs-lookup"><span data-stu-id="b732c-264">7fff</span></span>|
              
<span data-ttu-id="b732c-265">Jeśli metoda zakończy się niepowodzeniem, można iteracyjnie zwiększyć rozmiar buforu i ponowić próbę, aż zakończy się pomyślnie.</span><span class="sxs-lookup"><span data-stu-id="b732c-265">If the method fails, iteratively increase the size of the buffer and retry until it succeeds.</span></span>
 
        ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryFormat">
      <MemberSignature Language="C#" Value="public static bool TryFormat (sbyte value, Span&lt;byte&gt; destination, out int bytesWritten, System.Buffers.StandardFormat format = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryFormat(int8 value, valuetype System.Span`1&lt;unsigned int8&gt; destination, [out] int32&amp; bytesWritten, valuetype System.Buffers.StandardFormat format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.Text.Utf8Formatter.TryFormat(System.SByte,System.Span{System.Byte},System.Int32@,System.Buffers.StandardFormat)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryFormat (value As SByte, destination As Span(Of Byte), ByRef bytesWritten As Integer, Optional format As StandardFormat = null) As Boolean" />
      <MemberSignature Language="F#" Value="static member TryFormat : sbyte * Span&lt;byte&gt; *  * System.Buffers.StandardFormat -&gt; bool" Usage="System.Buffers.Text.Utf8Formatter.TryFormat (value, destination, bytesWritten, format)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-3.0;netcore-2.1;netcore-2.2;netstandard-2.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.SByte" />
        <Parameter Name="destination" Type="System.Span&lt;System.Byte&gt;" />
        <Parameter Name="bytesWritten" Type="System.Int32" RefType="out" />
        <Parameter Name="format" Type="System.Buffers.StandardFormat" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="b732c-266">Wartość do sformatowania.</span><span class="sxs-lookup"><span data-stu-id="b732c-266">The value to format.</span></span></param>
        <param name="destination"><span data-ttu-id="b732c-267">Bufor, do którego ma zostać zapisana wartość sformatowana w formacie UTF8.</span><span class="sxs-lookup"><span data-stu-id="b732c-267">The buffer to write the UTF8-formatted value to.</span></span></param>
        <param name="bytesWritten"><span data-ttu-id="b732c-268">Gdy metoda zwraca, zawiera długość sformatowanego tekstu w bajtach.</span><span class="sxs-lookup"><span data-stu-id="b732c-268">When the method returns, contains the length of the formatted text in bytes.</span></span></param>
        <param name="format"><span data-ttu-id="b732c-269">Standardowy format do użycia.</span><span class="sxs-lookup"><span data-stu-id="b732c-269">The standard format to use.</span></span></param>
        <summary><span data-ttu-id="b732c-270">Formatuje <see cref="T:System.SByte" /> jako ciąg w formacie UTF8.</span><span class="sxs-lookup"><span data-stu-id="b732c-270">Formats an <see cref="T:System.SByte" /> as a UTF8 string.</span></span></summary>
        <returns><span data-ttu-id="b732c-271"><see langword="true" />w przypadku pomyślnego wykonania operacji formatowania; <see langword="false" /> Jeśli<paramref name="buffer" /> jest za mała.</span><span class="sxs-lookup"><span data-stu-id="b732c-271"><see langword="true" /> if the formatting operation succeeds; <see langword="false" /> if <paramref name="buffer" /> is too small.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[
            
<span data-ttu-id="b732c-272">Obsługiwane formaty:</span><span class="sxs-lookup"><span data-stu-id="b732c-272">Formats supported:</span></span>

|<span data-ttu-id="b732c-273">Ciąg formatu</span><span class="sxs-lookup"><span data-stu-id="b732c-273">Format string</span></span>|<span data-ttu-id="b732c-274">Przykładowy ciąg wyniku</span><span class="sxs-lookup"><span data-stu-id="b732c-274">Example result string</span></span>|
|--|--|
|<span data-ttu-id="b732c-275">G/g (wartość domyślna)</span><span class="sxs-lookup"><span data-stu-id="b732c-275">G/g (default)</span></span>| |
|<span data-ttu-id="b732c-276">D/d</span><span class="sxs-lookup"><span data-stu-id="b732c-276">D/d</span></span>|<span data-ttu-id="b732c-277">122</span><span class="sxs-lookup"><span data-stu-id="b732c-277">122</span></span>|
|<span data-ttu-id="b732c-278">N/n</span><span class="sxs-lookup"><span data-stu-id="b732c-278">N/n</span></span>|<span data-ttu-id="b732c-279">122</span><span class="sxs-lookup"><span data-stu-id="b732c-279">122</span></span>|       
|<span data-ttu-id="b732c-280">X/x</span><span class="sxs-lookup"><span data-stu-id="b732c-280">X/x</span></span>|<span data-ttu-id="b732c-281">pozycja</span><span class="sxs-lookup"><span data-stu-id="b732c-281">7a</span></span>|

<span data-ttu-id="b732c-282">Jeśli metoda zakończy się niepowodzeniem, można iteracyjnie zwiększyć rozmiar buforu i ponowić próbę, aż zakończy się pomyślnie.</span><span class="sxs-lookup"><span data-stu-id="b732c-282">If the method fails, iteratively increase the size of the buffer and retry until it succeeds.</span></span>
               
        ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryFormat">
      <MemberSignature Language="C#" Value="public static bool TryFormat (float value, Span&lt;byte&gt; destination, out int bytesWritten, System.Buffers.StandardFormat format = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryFormat(float32 value, valuetype System.Span`1&lt;unsigned int8&gt; destination, [out] int32&amp; bytesWritten, valuetype System.Buffers.StandardFormat format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.Text.Utf8Formatter.TryFormat(System.Single,System.Span{System.Byte},System.Int32@,System.Buffers.StandardFormat)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryFormat (value As Single, destination As Span(Of Byte), ByRef bytesWritten As Integer, Optional format As StandardFormat = null) As Boolean" />
      <MemberSignature Language="F#" Value="static member TryFormat : single * Span&lt;byte&gt; *  * System.Buffers.StandardFormat -&gt; bool" Usage="System.Buffers.Text.Utf8Formatter.TryFormat (value, destination, bytesWritten, format)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Single" />
        <Parameter Name="destination" Type="System.Span&lt;System.Byte&gt;" />
        <Parameter Name="bytesWritten" Type="System.Int32" RefType="out" />
        <Parameter Name="format" Type="System.Buffers.StandardFormat" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="b732c-283">Wartość do sformatowania.</span><span class="sxs-lookup"><span data-stu-id="b732c-283">The value to format.</span></span></param>
        <param name="destination"><span data-ttu-id="b732c-284">Bufor, do którego ma zostać zapisana wartość sformatowana w formacie UTF8.</span><span class="sxs-lookup"><span data-stu-id="b732c-284">The buffer to write the UTF8-formatted value to.</span></span></param>
        <param name="bytesWritten"><span data-ttu-id="b732c-285">Gdy metoda zwraca, zawiera długość sformatowanego tekstu w bajtach.</span><span class="sxs-lookup"><span data-stu-id="b732c-285">When the method returns, contains the length of the formatted text in bytes.</span></span></param>
        <param name="format"><span data-ttu-id="b732c-286">Standardowy format do użycia.</span><span class="sxs-lookup"><span data-stu-id="b732c-286">The standard format to use.</span></span></param>
        <summary><span data-ttu-id="b732c-287">Formatuje <see cref="T:System.Single" /> jako ciąg w formacie UTF8.</span><span class="sxs-lookup"><span data-stu-id="b732c-287">Formats a <see cref="T:System.Single" /> as a UTF8 string.</span></span></summary>
        <returns><span data-ttu-id="b732c-288"><see langword="true" />w przypadku pomyślnego wykonania operacji formatowania; <see langword="false" /> Jeśli<paramref name="buffer" /> jest za mała.</span><span class="sxs-lookup"><span data-stu-id="b732c-288"><see langword="true" /> if the formatting operation succeeds; <see langword="false" /> if <paramref name="buffer" /> is too small.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[
            
<span data-ttu-id="b732c-289">Obsługiwane formaty:</span><span class="sxs-lookup"><span data-stu-id="b732c-289">Formats supported:</span></span>

|<span data-ttu-id="b732c-290">Ciąg formatu</span><span class="sxs-lookup"><span data-stu-id="b732c-290">Format string</span></span>|<span data-ttu-id="b732c-291">Przykładowy ciąg wyniku</span><span class="sxs-lookup"><span data-stu-id="b732c-291">Example result string</span></span>|<span data-ttu-id="b732c-292">Komentarze</span><span class="sxs-lookup"><span data-stu-id="b732c-292">Comments</span></span>|
|--|--|--|
|<span data-ttu-id="b732c-293">G/g (wartość domyślna)</span><span class="sxs-lookup"><span data-stu-id="b732c-293">G/g  (default)</span></span>| |  
|<span data-ttu-id="b732c-294">F/f</span><span class="sxs-lookup"><span data-stu-id="b732c-294">F/f</span></span>|<span data-ttu-id="b732c-295">12,45</span><span class="sxs-lookup"><span data-stu-id="b732c-295">12.45</span></span>|<span data-ttu-id="b732c-296">Stały punkt</span><span class="sxs-lookup"><span data-stu-id="b732c-296">Fixed point</span></span>|
|<span data-ttu-id="b732c-297">E/e</span><span class="sxs-lookup"><span data-stu-id="b732c-297">E/e</span></span>|<span data-ttu-id="b732c-298">1.245000 E1</span><span class="sxs-lookup"><span data-stu-id="b732c-298">1.245000e1</span></span>|<span data-ttu-id="b732c-299">Wykładniczego</span><span class="sxs-lookup"><span data-stu-id="b732c-299">Exponential</span></span>|

<span data-ttu-id="b732c-300">Jeśli metoda zakończy się niepowodzeniem, można iteracyjnie zwiększyć rozmiar buforu i ponowić próbę, aż zakończy się pomyślnie.</span><span class="sxs-lookup"><span data-stu-id="b732c-300">If the method fails, iteratively increase the size of the buffer and retry until it succeeds.</span></span>
 
        ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryFormat">
      <MemberSignature Language="C#" Value="public static bool TryFormat (TimeSpan value, Span&lt;byte&gt; destination, out int bytesWritten, System.Buffers.StandardFormat format = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryFormat(valuetype System.TimeSpan value, valuetype System.Span`1&lt;unsigned int8&gt; destination, [out] int32&amp; bytesWritten, valuetype System.Buffers.StandardFormat format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.Text.Utf8Formatter.TryFormat(System.TimeSpan,System.Span{System.Byte},System.Int32@,System.Buffers.StandardFormat)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryFormat (value As TimeSpan, destination As Span(Of Byte), ByRef bytesWritten As Integer, Optional format As StandardFormat = null) As Boolean" />
      <MemberSignature Language="F#" Value="static member TryFormat : TimeSpan * Span&lt;byte&gt; *  * System.Buffers.StandardFormat -&gt; bool" Usage="System.Buffers.Text.Utf8Formatter.TryFormat (value, destination, bytesWritten, format)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.TimeSpan" />
        <Parameter Name="destination" Type="System.Span&lt;System.Byte&gt;" />
        <Parameter Name="bytesWritten" Type="System.Int32" RefType="out" />
        <Parameter Name="format" Type="System.Buffers.StandardFormat" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="b732c-301">Wartość do sformatowania.</span><span class="sxs-lookup"><span data-stu-id="b732c-301">The value to format.</span></span></param>
        <param name="destination"><span data-ttu-id="b732c-302">Bufor, do którego ma zostać zapisana wartość sformatowana w formacie UTF8.</span><span class="sxs-lookup"><span data-stu-id="b732c-302">The buffer to write the UTF8-formatted value to.</span></span></param>
        <param name="bytesWritten"><span data-ttu-id="b732c-303">Gdy metoda zwraca, zawiera długość sformatowanego tekstu w bajtach.</span><span class="sxs-lookup"><span data-stu-id="b732c-303">When the method returns, contains the length of the formatted text in bytes.</span></span></param>
        <param name="format"><span data-ttu-id="b732c-304">Standardowy format do użycia.</span><span class="sxs-lookup"><span data-stu-id="b732c-304">The standard format to use.</span></span></param>
        <summary><span data-ttu-id="b732c-305">Formatuje <see cref="T:System.TimeSpan" /> jako ciąg w formacie UTF8.</span><span class="sxs-lookup"><span data-stu-id="b732c-305">Formats a <see cref="T:System.TimeSpan" /> as a UTF8 string.</span></span></summary>
        <returns><span data-ttu-id="b732c-306"><see langword="true" />w przypadku pomyślnego wykonania operacji formatowania; <see langword="false" /> Jeśli<paramref name="buffer" /> jest za mała.</span><span class="sxs-lookup"><span data-stu-id="b732c-306"><see langword="true" /> if the formatting operation succeeds; <see langword="false" /> if <paramref name="buffer" /> is too small.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[
            
<span data-ttu-id="b732c-307">Obsługiwane formaty:</span><span class="sxs-lookup"><span data-stu-id="b732c-307">Formats supported:</span></span>

|<span data-ttu-id="b732c-308">Ciąg formatu</span><span class="sxs-lookup"><span data-stu-id="b732c-308">Format string</span></span>|<span data-ttu-id="b732c-309">Ciąg wynikowy</span><span class="sxs-lookup"><span data-stu-id="b732c-309">Result string</span></span>|<span data-ttu-id="b732c-310">Komentarze</span><span class="sxs-lookup"><span data-stu-id="b732c-310">Comments</span></span>|
|--|--|--|
|<span data-ttu-id="b732c-311">c/t/T (domyślnie)</span><span class="sxs-lookup"><span data-stu-id="b732c-311">c/t/T (default)</span></span>|<span data-ttu-id="b732c-312">[-] [d.] hh: mm: SS [. fffffff]</span><span class="sxs-lookup"><span data-stu-id="b732c-312">[-][d.]hh:mm:ss[.fffffff]</span></span>|<span data-ttu-id="b732c-313">(format stały)</span><span class="sxs-lookup"><span data-stu-id="b732c-313">(constant format)</span></span>|
|<span data-ttu-id="b732c-314">G</span><span class="sxs-lookup"><span data-stu-id="b732c-314">G</span></span>|<span data-ttu-id="b732c-315">[-] d:hh: mm: SS. fffffff</span><span class="sxs-lookup"><span data-stu-id="b732c-315">[-]d:hh:mm:ss.fffffff</span></span>||<span data-ttu-id="b732c-316">(ogólnie długi)</span><span class="sxs-lookup"><span data-stu-id="b732c-316">(general long)</span></span>|
|<span data-ttu-id="b732c-317">g</span><span class="sxs-lookup"><span data-stu-id="b732c-317">g</span></span>|<span data-ttu-id="b732c-318">[-] [d:] [h] h:mm: SS [. f [f [f [f [f [f]]]]]]</span><span class="sxs-lookup"><span data-stu-id="b732c-318">[-][d:][h]h:mm:ss[.f[f[f[f[f[f[f]]]]]]</span></span>|<span data-ttu-id="b732c-319">(ogólne krótkie)</span><span class="sxs-lookup"><span data-stu-id="b732c-319">(general short)</span></span>|

<span data-ttu-id="b732c-320">Jeśli metoda zakończy się niepowodzeniem, można iteracyjnie zwiększyć rozmiar buforu i ponowić próbę, aż zakończy się pomyślnie.</span><span class="sxs-lookup"><span data-stu-id="b732c-320">If the method fails, iteratively increase the size of the buffer and retry until it succeeds.</span></span>

        ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryFormat">
      <MemberSignature Language="C#" Value="public static bool TryFormat (ushort value, Span&lt;byte&gt; destination, out int bytesWritten, System.Buffers.StandardFormat format = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryFormat(unsigned int16 value, valuetype System.Span`1&lt;unsigned int8&gt; destination, [out] int32&amp; bytesWritten, valuetype System.Buffers.StandardFormat format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.Text.Utf8Formatter.TryFormat(System.UInt16,System.Span{System.Byte},System.Int32@,System.Buffers.StandardFormat)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryFormat (value As UShort, destination As Span(Of Byte), ByRef bytesWritten As Integer, Optional format As StandardFormat = null) As Boolean" />
      <MemberSignature Language="F#" Value="static member TryFormat : uint16 * Span&lt;byte&gt; *  * System.Buffers.StandardFormat -&gt; bool" Usage="System.Buffers.Text.Utf8Formatter.TryFormat (value, destination, bytesWritten, format)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-3.0;netcore-2.1;netcore-2.2;netstandard-2.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt16" />
        <Parameter Name="destination" Type="System.Span&lt;System.Byte&gt;" />
        <Parameter Name="bytesWritten" Type="System.Int32" RefType="out" />
        <Parameter Name="format" Type="System.Buffers.StandardFormat" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="b732c-321">Wartość do sformatowania.</span><span class="sxs-lookup"><span data-stu-id="b732c-321">The value to format.</span></span></param>
        <param name="destination"><span data-ttu-id="b732c-322">Bufor, do którego ma zostać zapisana wartość sformatowana w formacie UTF8.</span><span class="sxs-lookup"><span data-stu-id="b732c-322">The buffer to write the UTF8-formatted value to.</span></span></param>
        <param name="bytesWritten"><span data-ttu-id="b732c-323">Gdy metoda zwraca, zawiera długość sformatowanego tekstu w bajtach.</span><span class="sxs-lookup"><span data-stu-id="b732c-323">When the method returns, contains the length of the formatted text in bytes.</span></span></param>
        <param name="format"><span data-ttu-id="b732c-324">Standardowy format do użycia.</span><span class="sxs-lookup"><span data-stu-id="b732c-324">The standard format to use.</span></span></param>
        <summary><span data-ttu-id="b732c-325">Formatuje <see cref="T:System.UInt16" /> jako ciąg w formacie UTF8.</span><span class="sxs-lookup"><span data-stu-id="b732c-325">Formats a <see cref="T:System.UInt16" /> as a UTF8 string.</span></span></summary>
        <returns><span data-ttu-id="b732c-326"><see langword="true" />w przypadku pomyślnego wykonania operacji formatowania; <see langword="false" /> Jeśli<paramref name="buffer" /> jest za mała.</span><span class="sxs-lookup"><span data-stu-id="b732c-326"><see langword="true" /> if the formatting operation succeeds; <see langword="false" /> if <paramref name="buffer" /> is too small.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[
            
<span data-ttu-id="b732c-327">Obsługiwane formaty:</span><span class="sxs-lookup"><span data-stu-id="b732c-327">Formats supported:</span></span>

|<span data-ttu-id="b732c-328">Ciąg formatu</span><span class="sxs-lookup"><span data-stu-id="b732c-328">Format string</span></span>|<span data-ttu-id="b732c-329">Przykładowy ciąg wyniku</span><span class="sxs-lookup"><span data-stu-id="b732c-329">Example result string</span></span>|
|--|--|
|<span data-ttu-id="b732c-330">G/g (wartość domyślna)</span><span class="sxs-lookup"><span data-stu-id="b732c-330">G/g (default)</span></span>| |
|<span data-ttu-id="b732c-331">D/d</span><span class="sxs-lookup"><span data-stu-id="b732c-331">D/d</span></span>|<span data-ttu-id="b732c-332">32767</span><span class="sxs-lookup"><span data-stu-id="b732c-332">32767</span></span>|
|<span data-ttu-id="b732c-333">N/n</span><span class="sxs-lookup"><span data-stu-id="b732c-333">N/n</span></span>|<span data-ttu-id="b732c-334">32,767</span><span class="sxs-lookup"><span data-stu-id="b732c-334">32,767</span></span>|       
|<span data-ttu-id="b732c-335">X/x</span><span class="sxs-lookup"><span data-stu-id="b732c-335">X/x</span></span>|<span data-ttu-id="b732c-336">7fff</span><span class="sxs-lookup"><span data-stu-id="b732c-336">7fff</span></span>|

<span data-ttu-id="b732c-337">Jeśli metoda zakończy się niepowodzeniem, można iteracyjnie zwiększyć rozmiar buforu i ponowić próbę, aż zakończy się pomyślnie.</span><span class="sxs-lookup"><span data-stu-id="b732c-337">If the method fails, iteratively increase the size of the buffer and retry until it succeeds.</span></span>
 
        ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryFormat">
      <MemberSignature Language="C#" Value="public static bool TryFormat (uint value, Span&lt;byte&gt; destination, out int bytesWritten, System.Buffers.StandardFormat format = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryFormat(unsigned int32 value, valuetype System.Span`1&lt;unsigned int8&gt; destination, [out] int32&amp; bytesWritten, valuetype System.Buffers.StandardFormat format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.Text.Utf8Formatter.TryFormat(System.UInt32,System.Span{System.Byte},System.Int32@,System.Buffers.StandardFormat)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryFormat (value As UInteger, destination As Span(Of Byte), ByRef bytesWritten As Integer, Optional format As StandardFormat = null) As Boolean" />
      <MemberSignature Language="F#" Value="static member TryFormat : uint32 * Span&lt;byte&gt; *  * System.Buffers.StandardFormat -&gt; bool" Usage="System.Buffers.Text.Utf8Formatter.TryFormat (value, destination, bytesWritten, format)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-3.0;netcore-2.1;netcore-2.2;netstandard-2.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt32" />
        <Parameter Name="destination" Type="System.Span&lt;System.Byte&gt;" />
        <Parameter Name="bytesWritten" Type="System.Int32" RefType="out" />
        <Parameter Name="format" Type="System.Buffers.StandardFormat" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="b732c-338">Wartość do sformatowania.</span><span class="sxs-lookup"><span data-stu-id="b732c-338">The value to format.</span></span></param>
        <param name="destination"><span data-ttu-id="b732c-339">Bufor, do którego ma zostać zapisana wartość sformatowana w formacie UTF8.</span><span class="sxs-lookup"><span data-stu-id="b732c-339">The buffer to write the UTF8-formatted value to.</span></span></param>
        <param name="bytesWritten"><span data-ttu-id="b732c-340">Gdy metoda zwraca, zawiera długość sformatowanego tekstu w bajtach.</span><span class="sxs-lookup"><span data-stu-id="b732c-340">When the method returns, contains the length of the formatted text in bytes.</span></span></param>
        <param name="format"><span data-ttu-id="b732c-341">Standardowy format do użycia.</span><span class="sxs-lookup"><span data-stu-id="b732c-341">The standard format to use.</span></span></param>
        <summary><span data-ttu-id="b732c-342">Formatuje <see cref="T:System.UInt32" /> jako ciąg w formacie UTF8.</span><span class="sxs-lookup"><span data-stu-id="b732c-342">Formats a <see cref="T:System.UInt32" /> as a UTF8 string.</span></span></summary>
        <returns><span data-ttu-id="b732c-343"><see langword="true" />w przypadku pomyślnego wykonania operacji formatowania; <see langword="false" /> Jeśli<paramref name="buffer" /> jest za mała.</span><span class="sxs-lookup"><span data-stu-id="b732c-343"><see langword="true" /> if the formatting operation succeeds; <see langword="false" /> if <paramref name="buffer" /> is too small.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

<span data-ttu-id="b732c-344">Obsługiwane formaty:</span><span class="sxs-lookup"><span data-stu-id="b732c-344">Formats supported:</span></span>

|<span data-ttu-id="b732c-345">Ciąg formatu</span><span class="sxs-lookup"><span data-stu-id="b732c-345">Format string</span></span>|<span data-ttu-id="b732c-346">Przykładowy ciąg wyniku</span><span class="sxs-lookup"><span data-stu-id="b732c-346">Example result string</span></span>|
|--|--|
|<span data-ttu-id="b732c-347">G/g (wartość domyślna)</span><span class="sxs-lookup"><span data-stu-id="b732c-347">G/g (default)</span></span>| |
|<span data-ttu-id="b732c-348">D/d</span><span class="sxs-lookup"><span data-stu-id="b732c-348">D/d</span></span>|<span data-ttu-id="b732c-349">32767</span><span class="sxs-lookup"><span data-stu-id="b732c-349">32767</span></span>|
|<span data-ttu-id="b732c-350">N/n</span><span class="sxs-lookup"><span data-stu-id="b732c-350">N/n</span></span>|<span data-ttu-id="b732c-351">32,767</span><span class="sxs-lookup"><span data-stu-id="b732c-351">32,767</span></span>|       
|<span data-ttu-id="b732c-352">X/x</span><span class="sxs-lookup"><span data-stu-id="b732c-352">X/x</span></span>|<span data-ttu-id="b732c-353">7fff</span><span class="sxs-lookup"><span data-stu-id="b732c-353">7fff</span></span>|

<span data-ttu-id="b732c-354">Jeśli metoda zakończy się niepowodzeniem, można iteracyjnie zwiększyć rozmiar buforu i ponowić próbę, aż zakończy się pomyślnie.</span><span class="sxs-lookup"><span data-stu-id="b732c-354">If the method fails, iteratively increase the size of the buffer and retry until it succeeds.</span></span>
 
        ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryFormat">
      <MemberSignature Language="C#" Value="public static bool TryFormat (ulong value, Span&lt;byte&gt; destination, out int bytesWritten, System.Buffers.StandardFormat format = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryFormat(unsigned int64 value, valuetype System.Span`1&lt;unsigned int8&gt; destination, [out] int32&amp; bytesWritten, valuetype System.Buffers.StandardFormat format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.Text.Utf8Formatter.TryFormat(System.UInt64,System.Span{System.Byte},System.Int32@,System.Buffers.StandardFormat)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryFormat (value As ULong, destination As Span(Of Byte), ByRef bytesWritten As Integer, Optional format As StandardFormat = null) As Boolean" />
      <MemberSignature Language="F#" Value="static member TryFormat : uint64 * Span&lt;byte&gt; *  * System.Buffers.StandardFormat -&gt; bool" Usage="System.Buffers.Text.Utf8Formatter.TryFormat (value, destination, bytesWritten, format)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-3.0;netcore-2.1;netcore-2.2;netstandard-2.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt64" />
        <Parameter Name="destination" Type="System.Span&lt;System.Byte&gt;" />
        <Parameter Name="bytesWritten" Type="System.Int32" RefType="out" />
        <Parameter Name="format" Type="System.Buffers.StandardFormat" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="b732c-355">Wartość do sformatowania.</span><span class="sxs-lookup"><span data-stu-id="b732c-355">The value to format.</span></span></param>
        <param name="destination"><span data-ttu-id="b732c-356">Bufor, do którego ma zostać zapisana wartość sformatowana w formacie UTF8.</span><span class="sxs-lookup"><span data-stu-id="b732c-356">The buffer to write the UTF8-formatted value to.</span></span></param>
        <param name="bytesWritten"><span data-ttu-id="b732c-357">Gdy metoda zwraca, zawiera długość sformatowanego tekstu w bajtach.</span><span class="sxs-lookup"><span data-stu-id="b732c-357">When the method returns, contains the length of the formatted text in bytes.</span></span></param>
        <param name="format"><span data-ttu-id="b732c-358">Standardowy format do użycia.</span><span class="sxs-lookup"><span data-stu-id="b732c-358">The standard format to use.</span></span></param>
        <summary><span data-ttu-id="b732c-359">Formatuje <see cref="T:System.UInt64" /> jako ciąg w formacie UTF8.</span><span class="sxs-lookup"><span data-stu-id="b732c-359">Formats a <see cref="T:System.UInt64" /> as a UTF8 string.</span></span></summary>
        <returns><span data-ttu-id="b732c-360"><see langword="true" />w przypadku pomyślnego wykonania operacji formatowania; <see langword="false" /> Jeśli<paramref name="buffer" /> jest za mała.</span><span class="sxs-lookup"><span data-stu-id="b732c-360"><see langword="true" /> if the formatting operation succeeds; <see langword="false" /> if <paramref name="buffer" /> is too small.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[
            
<span data-ttu-id="b732c-361">Obsługiwane formaty:</span><span class="sxs-lookup"><span data-stu-id="b732c-361">Formats supported:</span></span>

|<span data-ttu-id="b732c-362">Ciąg formatu</span><span class="sxs-lookup"><span data-stu-id="b732c-362">Format string</span></span>|<span data-ttu-id="b732c-363">Przykładowy ciąg wyniku</span><span class="sxs-lookup"><span data-stu-id="b732c-363">Example result string</span></span>|
|--|--|
|<span data-ttu-id="b732c-364">G/g (wartość domyślna)</span><span class="sxs-lookup"><span data-stu-id="b732c-364">G/g (default)</span></span>| |
|<span data-ttu-id="b732c-365">D/d</span><span class="sxs-lookup"><span data-stu-id="b732c-365">D/d</span></span>|<span data-ttu-id="b732c-366">32767</span><span class="sxs-lookup"><span data-stu-id="b732c-366">32767</span></span>|
|<span data-ttu-id="b732c-367">N/n</span><span class="sxs-lookup"><span data-stu-id="b732c-367">N/n</span></span>|<span data-ttu-id="b732c-368">32,767</span><span class="sxs-lookup"><span data-stu-id="b732c-368">32,767</span></span>|       
|<span data-ttu-id="b732c-369">X/x</span><span class="sxs-lookup"><span data-stu-id="b732c-369">X/x</span></span>|<span data-ttu-id="b732c-370">7fff</span><span class="sxs-lookup"><span data-stu-id="b732c-370">7fff</span></span>|

<span data-ttu-id="b732c-371">Jeśli metoda zakończy się niepowodzeniem, można iteracyjnie zwiększyć rozmiar buforu i ponowić próbę, aż zakończy się pomyślnie.</span><span class="sxs-lookup"><span data-stu-id="b732c-371">If the method fails, iteratively increase the size of the buffer and retry until it succeeds.</span></span>
 
        ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>