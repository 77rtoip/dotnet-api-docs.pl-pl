<Type Name="IRegisterMetadata" FullName="System.Activities.Presentation.Metadata.IRegisterMetadata">
  <Metadata><Meta Name="ms.openlocfilehash" Value="68f507f17d80dd8b26d3a9dadfdeb22f4d8bb6a5" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69324166" /></Metadata><TypeSignature Language="C#" Value="public interface IRegisterMetadata" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IRegisterMetadata" />
  <TypeSignature Language="DocId" Value="T:System.Activities.Presentation.Metadata.IRegisterMetadata" />
  <TypeSignature Language="VB.NET" Value="Public Interface IRegisterMetadata" />
  <TypeSignature Language="C++ CLI" Value="public interface class IRegisterMetadata" />
  <TypeSignature Language="F#" Value="type IRegisterMetadata = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Activities.Presentation</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>Określa klasę, która będzie dodawać dodatkowe atrybuty do magazynu metadanych.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Activities.Presentation.Metadata.IRegisterMetadata>typy umożliwiają hermetyzację skojarzenia atrybutów czasu projektowania z typami czasu wykonywania w sposób luźny połączony. Aplikacja obsługująca [!INCLUDE[wfd1](~/includes/wfd1-md.md)] <xref:System.Activities.Presentation.Metadata.IRegisterMetadata> interfejs może używać interfejsu do rejestrowania atrybutów dla działania. Na przykład program [!INCLUDE[vs2010](~/includes/vs2010-md.md)] wyszukuje typy, które <xref:System.Activities.Presentation.Metadata.IRegisterMetadata> implementują podczas ładowania zestawów zawierających te typy, a także wyszukiwanie typów w zestawach *. Design.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Register">
      <MemberSignature Language="C#" Value="public void Register ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Register() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Metadata.IRegisterMetadata.Register" />
      <MemberSignature Language="VB.NET" Value="Public Sub Register ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Register();" />
      <MemberSignature Language="F#" Value="abstract member Register : unit -&gt; unit" Usage="iRegisterMetadata.Register " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Dodaje dodatkowe metadane do magazynu metadanych po zainicjowaniu projektanta.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Implementacje powinny <xref:System.Activities.Presentation.Metadata.MetadataStore.AddAttributeTable%2A> być wywoływane, aby można było dodać dane do magazynu metadanych.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
