<Type Name="XamlObjectWriter" FullName="System.Xaml.XamlObjectWriter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="6720f48f336d7e06208b95d78d36a6b2418aa404" />
    <Meta Name="ms.sourcegitcommit" Value="9e06b87bcfa4347dbbaaa4b3cc36b43b93b5badb" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="11/20/2018" />
    <Meta Name="ms.locfileid" Value="52209675" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class XamlObjectWriter : System.Xaml.XamlWriter, System.Xaml.IXamlLineInfoConsumer" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XamlObjectWriter extends System.Xaml.XamlWriter implements class System.Xaml.IXamlLineInfoConsumer" />
  <TypeSignature Language="DocId" Value="T:System.Xaml.XamlObjectWriter" />
  <TypeSignature Language="VB.NET" Value="Public Class XamlObjectWriter&#xA;Inherits XamlWriter&#xA;Implements IXamlLineInfoConsumer" />
  <TypeSignature Language="C++ CLI" Value="public ref class XamlObjectWriter : System::Xaml::XamlWriter, System::Xaml::IXamlLineInfoConsumer" />
  <TypeSignature Language="F#" Value="type XamlObjectWriter = class&#xA;    inherit XamlWriter&#xA;    interface IXamlLineInfoConsumer" />
  <AssemblyInfo>
    <AssemblyName>System.Xaml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Xaml.XamlWriter</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Xaml.IXamlLineInfoConsumer</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Tworzy wykresu obiektu ze strumienia węzłów XAML źródła.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `Write` Metody <xref:System.Xaml.XamlObjectWriter> Implementowanie wzorca, aby <xref:System.Xaml.XamlObjectWriter> używa <xref:System.Xaml.XamlWriter> zdefiniowanego przez <xref:System.Xaml.XamlWriter.WriteNode%2A> metody. <xref:System.Xaml.XamlWriter.WriteNode%2A> Logika stan zmieni się między `Write` metod, w zależności od tego, który węzeł typu jest w bieżącym położeniu w czytniku.  
  
## <a name="scope"></a>Zakres  
 A <xref:System.Xaml.XamlObjectWriter> utworzono według koncepcji zakresie, który jest, <xref:System.Xaml.XamlObjectWriter> przechowuje koncepcyjny punkt odniesienia w jego dane wyjściowe obiektu wykresu. Dla określonego zakresu niektóre operacje mogą być prawidłowy lub nieprawidłowy lub uzyskania wyniku operacji nie. Na przykład, jeśli wywołasz <xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A> pisać dyrektyw dla inicjowania obiektu już istnieje jako wystąpienie Domyślna implementacja zwraca wyjątek.  
  
 Technika możliwe do śledzenia zakresu w niestandardowym <xref:System.Xaml.XamlObjectWriter> jest dopasowanie akcje węzła z klasą stosu lub ramki. Stos lub ramki można zachować informacje o wypychania i pop dla poszczególnych poziomów głębokość modelu obiektów, który wprowadzaniem lub został zakończony podczas <xref:System.Xaml.XamlObjectWriter> zapisuje wykres obiektu.  
  
## <a name="callbacks"></a>Wywołania zwrotne  
 Do obsługi pośrednich i zaawansowane <xref:System.Xaml.XamlObjectWriter> scenariuszy, mechanizm zapisywania wykresu obiektu zawiera wywołanie zwrotne punkty wejścia, które występują podczas <xref:System.Xaml.XamlObjectWriter> zatwierdzenia lub ma zatwierdzić pewne akcje. Niektóre wywołania zwrotne są włączone w ustawieniach i nie są specyficzne dla typu obiektu lub elementu członkowskiego zapisywana; jednak informacji wywołania zwrotnego jest często dostępne w kontekście lub zdarzeń danych przesyłanych za pośrednictwem wywołania zwrotnego. Oto lista odpowiednich wywołań zwrotnych:  
  
-   Wywołania zwrotnego, która jest zadeklarowana za <xref:System.Xaml.XamlObjectWriterSettings.AfterBeginInitHandler%2A> jest wywoływane, gdy zakres przechodzi do nowego obiektu i na <xref:System.ComponentModel.ISupportInitialize.BeginInit%2A> fazy okres istnienia obiektów dla każdego utworzonego obiektu.  
  
-   Wywołania zwrotnego, która jest zadeklarowana za <xref:System.Xaml.XamlObjectWriterSettings.AfterEndInitHandler%2A> jest wywoływane, gdy zakres przechodzi do nowego obiektu i na <xref:System.ComponentModel.ISupportInitialize.EndInit%2A> fazy okres istnienia obiektów dla każdego utworzonego obiektu.  
  
-   Wywołania zwrotnego, która jest zadeklarowana za <xref:System.Xaml.XamlObjectWriterSettings.BeforePropertiesHandler%2A> jest wywoływane, gdy zakres rozpoczyna się w obiekcie i występuje, gdy pierwszy <xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A> wywołania do tego zakresu obiektu jest wykonywane, ale nie zostały jeszcze zatwierdzone.  
  
-   Wywołania zwrotnego, która jest zadeklarowana za <xref:System.Xaml.XamlObjectWriterSettings.AfterPropertiesHandler%2A> jest wywoływane, gdy zakres rozpoczyna się w obiekcie i się dzieje w przypadku <xref:System.Xaml.XamlObjectWriter.WriteEndObject%2A> wywołania do tego zakresu obiektu jest wykonywane, ale nie zostały jeszcze zatwierdzone.  
  
-   Wywołania zwrotnego, która jest zadeklarowana za <xref:System.Xaml.XamlObjectWriterSettings.XamlSetValueHandler%2A> jest wywoływana po <xref:System.Xaml.XamlObjectWriter.OnSetValue%2A> jest wywoływana.  
  
## <a name="writing-dictionary-keys"></a>Klucze słownikowe zapisu  
 Domyślna implementacja klasy <xref:System.Xaml.XamlObjectWriter> obsługuje konwersja typu na ograniczenia <xref:System.Collections.Generic.Dictionary%602> przed słownik zawartości są dodawane do wykresu obiektu. W ten sposób generyczny słownik trzeba wprowadzić w czasie wykonywania przez obiekty, a może odnosić się do odpowiednich ogólny `Add` i zachowanie indeksatora. Jednak, tak jak zaimplementowany dla podstawy <xref:System.Xaml.XamlObjectWriter>, ta funkcja istnieje tylko w przypadku tworzenia wykresu obiektu od podstawy <xref:System.Collections.Generic.Dictionary%602> klasy, a nie do klas pochodnych <xref:System.Collections.Generic.Dictionary%602>.  
  
## <a name="checks-for-disposed"></a>Sprawdza, czy usunięty  
 Autorzy XAML potencjalnie są używane dla operacji opóźnieniem lub w którym wykonywane jest wywołanie, wobec wystąpienia składnika zapisywania XAML, który został usunięty w międzyczasie. Różne interfejsy API z <xref:System.Xaml.XamlObjectWriter> może zgłosić <xref:System.ObjectDisposedException> w tych przypadkach.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Xaml.XamlWriter" />
    <altmember cref="T:System.Xaml.XamlObjectReader" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Xaml.XamlObjectWriter" /> klasy.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlObjectWriter (System.Xaml.XamlSchemaContext schemaContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xaml.XamlSchemaContext schemaContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlObjectWriter.#ctor(System.Xaml.XamlSchemaContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (schemaContext As XamlSchemaContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlObjectWriter(System::Xaml::XamlSchemaContext ^ schemaContext);" />
      <MemberSignature Language="F#" Value="new System.Xaml.XamlObjectWriter : System.Xaml.XamlSchemaContext -&gt; System.Xaml.XamlObjectWriter" Usage="new System.Xaml.XamlObjectWriter schemaContext" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="schemaContext" Type="System.Xaml.XamlSchemaContext" />
      </Parameters>
      <Docs>
        <param name="schemaContext">Kontekst schematu XAML, który jest udostępniany przy użyciu czytnika zawartości XAML, który zawiera węzły do zapisu.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Xaml.XamlObjectWriter" /> przy użyciu kontekst schematu XAML, który jest używany przez <see cref="T:System.Xaml.XamlReader" />.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="schemaContext" /> jest <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlObjectWriter (System.Xaml.XamlSchemaContext schemaContext, System.Xaml.XamlObjectWriterSettings settings);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xaml.XamlSchemaContext schemaContext, class System.Xaml.XamlObjectWriterSettings settings) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlObjectWriter.#ctor(System.Xaml.XamlSchemaContext,System.Xaml.XamlObjectWriterSettings)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (schemaContext As XamlSchemaContext, settings As XamlObjectWriterSettings)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlObjectWriter(System::Xaml::XamlSchemaContext ^ schemaContext, System::Xaml::XamlObjectWriterSettings ^ settings);" />
      <MemberSignature Language="F#" Value="new System.Xaml.XamlObjectWriter : System.Xaml.XamlSchemaContext * System.Xaml.XamlObjectWriterSettings -&gt; System.Xaml.XamlObjectWriter" Usage="new System.Xaml.XamlObjectWriter (schemaContext, settings)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="schemaContext" Type="System.Xaml.XamlSchemaContext" />
        <Parameter Name="settings" Type="System.Xaml.XamlObjectWriterSettings" />
      </Parameters>
      <Docs>
        <param name="schemaContext">Kontekst schematu XAML, który jest udostępniany przy użyciu czytnika zawartości XAML, który zawiera węzły do zapisu.</param>
        <param name="settings">Obiekt ustawień, który określa pewne opcje <see cref="T:System.Xaml.XamlObjectWriter" /> zachowanie i dane wyjściowe.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Xaml.XamlObjectWriter" /> klasy przy użyciu tego kontekstu, który jest używany przez <see cref="T:System.Xaml.XamlReader" /> i jego ustawień.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="schemaContext" /> jest <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlObjectWriter.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Clear();" />
      <MemberSignature Language="F#" Value="member this.Clear : unit -&gt; unit" Usage="xamlObjectWriter.Clear " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Resetuje wszystkie możliwe ramki i czyści wykresu obiektu.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlObjectWriter.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="xamlObjectWriter.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <see langword="true" /> Aby zwolnić zasoby zarządzane. w przeciwnym razie <see langword="false" />.</param>
        <summary>Zwalnia zasoby niezarządzane używane przez <see cref="T:System.Xaml.XamlObjectWriter" />i opcjonalnie zwalnia zasoby zarządzane.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnAfterBeginInit">
      <MemberSignature Language="C#" Value="protected virtual void OnAfterBeginInit (object value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnAfterBeginInit(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlObjectWriter.OnAfterBeginInit(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnAfterBeginInit (value As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnAfterBeginInit(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member OnAfterBeginInit : obj -&gt; unit&#xA;override this.OnAfterBeginInit : obj -&gt; unit" Usage="xamlObjectWriter.OnAfterBeginInit value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">Obiekt do raportowania. Obiekt znajduje się w pakiecie <see cref="T:System.Xaml.XamlObjectEventArgs" /> gdy zostanie wywołana procedura obsługi.</param>
        <summary>Wywołuje żadnego <see cref="P:System.Xaml.XamlObjectWriterSettings.AfterBeginInitHandler" /> metodę, która jest skojarzona z <see cref="T:System.Xaml.XamlObjectWriterSettings" /> tego <see cref="T:System.Xaml.XamlObjectWriter" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnAfterEndInit">
      <MemberSignature Language="C#" Value="protected virtual void OnAfterEndInit (object value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnAfterEndInit(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlObjectWriter.OnAfterEndInit(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnAfterEndInit (value As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnAfterEndInit(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member OnAfterEndInit : obj -&gt; unit&#xA;override this.OnAfterEndInit : obj -&gt; unit" Usage="xamlObjectWriter.OnAfterEndInit value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">Obiekt do raportowania. Wartość znajduje się w pakiecie <see cref="T:System.Xaml.XamlObjectEventArgs" /> gdy zostanie wywołana procedura obsługi.</param>
        <summary>Wywołuje żadnego <see cref="P:System.Xaml.XamlObjectWriterSettings.AfterEndInitHandler" /> metodę, która jest skojarzona z <see cref="T:System.Xaml.XamlObjectWriterSettings" /> tego <see cref="T:System.Xaml.XamlObjectWriter" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnAfterProperties">
      <MemberSignature Language="C#" Value="protected virtual void OnAfterProperties (object value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnAfterProperties(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlObjectWriter.OnAfterProperties(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnAfterProperties (value As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnAfterProperties(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member OnAfterProperties : obj -&gt; unit&#xA;override this.OnAfterProperties : obj -&gt; unit" Usage="xamlObjectWriter.OnAfterProperties value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">Obiekt do raportowania. To znajduje się w pakiecie <see cref="T:System.Xaml.XamlObjectEventArgs" /> gdy zostanie wywołana procedura obsługi.</param>
        <summary>Wywołuje żadnego <see cref="P:System.Xaml.XamlObjectWriterSettings.AfterPropertiesHandler" /> odwołanie do metody, która jest skojarzona z <see cref="T:System.Xaml.XamlObjectWriterSettings" /> tego <see cref="T:System.Xaml.XamlObjectWriter" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnBeforeProperties">
      <MemberSignature Language="C#" Value="protected virtual void OnBeforeProperties (object value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnBeforeProperties(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlObjectWriter.OnBeforeProperties(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnBeforeProperties (value As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnBeforeProperties(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member OnBeforeProperties : obj -&gt; unit&#xA;override this.OnBeforeProperties : obj -&gt; unit" Usage="xamlObjectWriter.OnBeforeProperties value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">Wartość do przekazywania <see cref="T:System.Xaml.XamlObjectEventArgs" /> gdy zostanie wywołana procedura obsługi.</param>
        <summary>Wywołuje żadnego <see cref="P:System.Xaml.XamlObjectWriterSettings.BeforePropertiesHandler" /> odwołanie do metody, która jest skojarzona z <see cref="T:System.Xaml.XamlObjectWriterSettings" /> tego <see cref="T:System.Xaml.XamlObjectWriter" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnSetValue">
      <MemberSignature Language="C#" Value="protected virtual bool OnSetValue (object eventSender, System.Xaml.XamlMember member, object value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool OnSetValue(object eventSender, class System.Xaml.XamlMember member, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlObjectWriter.OnSetValue(System.Object,System.Xaml.XamlMember,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function OnSetValue (eventSender As Object, member As XamlMember, value As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool OnSetValue(System::Object ^ eventSender, System::Xaml::XamlMember ^ member, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member OnSetValue : obj * System.Xaml.XamlMember * obj -&gt; bool&#xA;override this.OnSetValue : obj * System.Xaml.XamlMember * obj -&gt; bool" Usage="xamlObjectWriter.OnSetValue (eventSender, member, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventSender" Type="System.Object" />
        <Parameter Name="member" Type="System.Xaml.XamlMember" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="eventSender">Obiekt do raportu jako źródła do programu obsługi.</param>
        <param name="member">Nazwa właściwości do ustawienia, który jest przekazywany do obsługi w ramach <see cref="T:System.Windows.Markup.XamlSetValueEventArgs" />.</param>
        <param name="value">Wartość do dostarczenia dla właściwości, który jest nazwany przez <paramref name="property" />. Wartość jest przekazywana do programu obsługi w ramach <see cref="T:System.Windows.Markup.XamlSetValueEventArgs" />.</param>
        <summary>Wywołuje żadnego <see cref="P:System.Xaml.XamlObjectWriterSettings.XamlSetValueHandler" /> odwołanie do metody, która jest skojarzona z <see cref="T:System.Xaml.XamlObjectWriterSettings" /> dla tego modułu zapisującego, tak długo, jak <paramref name="handled" /> w <see cref="T:System.Windows.Markup.XamlSetValueEventArgs" /> dane zdarzeń są <see langword="true" />.</summary>
        <returns>Wartość logiczna, która została ustawiona przez dowolnego skojarzony program obsługi; w przeciwnym razie <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli `SetValue` operacji dla tego edytora XAML jest skojarzony program obsługi ( <xref:System.Xaml.XamlObjectWriterSettings.XamlSetValueHandler%2A> jest zadeklarowana w <xref:System.Xaml.XamlObjectWriterSettings>), ta metoda tworzy nowy <xref:System.Windows.Markup.XamlSetValueEventArgs> i przekazuje je do programu obsługi. Zwracana wartość jest ustawiona, czytając <xref:System.Windows.Markup.XamlSetValueEventArgs.Handled%2A> wartość, która jest przekazywana dane zdarzenia. Jeśli żadna procedura obsługi nie istnieje, a ta metoda jest wywoływana, wywołanie zwraca `false`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Result">
      <MemberSignature Language="C#" Value="public virtual object Result { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Result" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlObjectWriter.Result" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Result As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Object ^ Result { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Result : obj" Usage="System.Xaml.XamlObjectWriter.Result" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera ostatni obiekt, który został zapisany. Zazwyczaj wywoływana wyłącznie po strumień węzłów znajduje się na jej końcu i wykres obiektu zostało zakończone.</summary>
        <value>Ostatni obiekt zapisanych, lub <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Najczęściej spotykaną użycie <xref:System.Xaml.XamlObjectWriter.Result%2A> jest wywołanie go tylko wtedy, gdy wiadomo, że strumień węzłów na koniec i wykres obiektu zostanie zakończone. W przeciwnym razie wykresu obiektu może być niekompletna i nie jest przydatne w przypadku większości scenariuszy platformy.  
  
 <xref:System.Xaml.XamlObjectWriter.Result%2A> zazwyczaj zawiera tylko wartości innej niż null, jeśli jest ona wywoływana natychmiast po wywołaniu <xref:System.Xaml.XamlObjectWriter.WriteEndObject%2A>, i jeśli elementu członkowskiego, w którym obiekt zawiera wartość bieżącego zakresu.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RootNameScope">
      <MemberSignature Language="C#" Value="public System.Windows.Markup.INameScope RootNameScope { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Markup.INameScope RootNameScope" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlObjectWriter.RootNameScope" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RootNameScope As INameScope" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Markup::INameScope ^ RootNameScope { System::Windows::Markup::INameScope ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.RootNameScope : System.Windows.Markup.INameScope" Usage="System.Xaml.XamlObjectWriter.RootNameScope" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Markup.INameScope</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera <see cref="T:System.Windows.Markup.INameScope" /> usługa, która utrzymuje namescope XAML dla głównego węzła bezwzględne składnika zapisywania obiektu XAML.</summary>
        <value>
          <see cref="T:System.Windows.Markup.INameScope" /> Usługa, która utrzymuje namescope XAML dla bieżącego katalogu głównego modułu zapisywania obiektu.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wartość tej właściwości może pochodzić z kontekstu zapisywania obiektów.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SchemaContext">
      <MemberSignature Language="C#" Value="public override System.Xaml.XamlSchemaContext SchemaContext { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xaml.XamlSchemaContext SchemaContext" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlObjectWriter.SchemaContext" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property SchemaContext As XamlSchemaContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xaml::XamlSchemaContext ^ SchemaContext { System::Xaml::XamlSchemaContext ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SchemaContext : System.Xaml.XamlSchemaContext" Usage="System.Xaml.XamlObjectWriter.SchemaContext" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlSchemaContext</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera aktywny kontekst schematu XAML.</summary>
        <value>Kontekst schematu XAML.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Kontekst schematu XAML jest źródłem niezbędne informacje w najbardziej praktycznych scenariuszach zapisu obiektu. Kontekst schematu XAML ma wpływ na wyszukiwanie typu dla typów kopii i przechowuje informacje dotyczące zestawów, jeśli istnieją typy zapasowy. Domyślny kontekst schematu XAML jest oparty na zasady mapowania typów CLR. Struktury zwykle zapewniają własne kontekst schematu XAML w celu zapewnienia, że mechanizmy ładowania zestawu są takie same struktury programowania amd modeli aplikacji.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetLineInfo">
      <MemberSignature Language="C#" Value="public void SetLineInfo (int lineNumber, int linePosition);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetLineInfo(int32 lineNumber, int32 linePosition) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlObjectWriter.SetLineInfo(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetLineInfo (lineNumber As Integer, linePosition As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetLineInfo(int lineNumber, int linePosition);" />
      <MemberSignature Language="F#" Value="abstract member SetLineInfo : int * int -&gt; unit&#xA;override this.SetLineInfo : int * int -&gt; unit" Usage="xamlObjectWriter.SetLineInfo (lineNumber, linePosition)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Xaml.IXamlLineInfoConsumer.SetLineInfo(System.Int32,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="lineNumber" Type="System.Int32" />
        <Parameter Name="linePosition" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="lineNumber">Numer wiersza z czytnika.</param>
        <param name="linePosition">Położenie wiersza z czytnika.</param>
        <summary>Implementuje <see cref="M:System.Xaml.IXamlLineInfoConsumer.SetLineInfo(System.Int32,System.Int32)" /> i udostępnia informacje wiersza do obsługi wyjątków.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metoda ta usługa nie jest przeznaczona do należy wywoływać bezpośrednio w kodzie. Jednak w przypadku tworzenia klasy pochodnej od <xref:System.Xaml.XamlObjectWriter> i chcą raportu w kontekście gdzie numery wierszy są niedostępne lub nie są użyteczne, ta metoda może być wywoływana.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldProvideLineInfo">
      <MemberSignature Language="C#" Value="public bool ShouldProvideLineInfo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShouldProvideLineInfo" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlObjectWriter.ShouldProvideLineInfo" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ShouldProvideLineInfo As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShouldProvideLineInfo { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.ShouldProvideLineInfo : bool" Usage="System.Xaml.XamlObjectWriter.ShouldProvideLineInfo" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Xaml.IXamlLineInfoConsumer.ShouldProvideLineInfo</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość, która informuje, czy usługi informacje wiersza należy podać wartości, a więc także wywołać <see cref="M:System.Xaml.IXamlLineInfoConsumer.SetLineInfo(System.Int32,System.Int32)" /> metody, gdy jest to potrzebne.</summary>
        <value>
          <see langword="true" /> Jeśli informacje są używane przez moduł zapisujący; w przeciwnym razie <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta implementacja zawsze zwraca `true`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteEndMember">
      <MemberSignature Language="C#" Value="public override void WriteEndMember ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteEndMember() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlObjectWriter.WriteEndMember" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteEndMember ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteEndMember();" />
      <MemberSignature Language="F#" Value="override this.WriteEndMember : unit -&gt; unit" Usage="xamlObjectWriter.WriteEndMember " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zamyka bieżący zakres elementu członkowskiego i mogą zapisywać wartość zakresu elementu członkowskiego, natomiast na zamknięcie. Nowy zakres staje się zakresu obiektu nadrzędnego elementu członkowskiego.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Xaml.XamlObjectWriterException">Nie można utworzyć wartość elementu członkowskiego w węźle wartości, które zostanie osiągnięty między to wywołanie i poprzedniej <see langword="StartMember" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteEndObject">
      <MemberSignature Language="C#" Value="public override void WriteEndObject ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteEndObject() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlObjectWriter.WriteEndObject" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteEndObject ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteEndObject();" />
      <MemberSignature Language="F#" Value="override this.WriteEndObject : unit -&gt; unit" Usage="xamlObjectWriter.WriteEndObject " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zamyka bieżący zakres obiektów w moduł zapisujący. Nowy zakres obiektów staje się zakresu nadrzędnego elementu członkowskiego.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli ten `EndObject` zakres pozycji dobiega końca obiektu głównego, nowy zakres obiektów staje się zakres głównego.  
  
 Wywołanie <xref:System.Xaml.XamlObjectWriter.WriteStartObject%2A> może nie utworzono jeszcze obiektu ponieważ elemencie członkowskim obiektu może być ścieżkę niezbędne inicjowania, takich jak inicjowanie tekstowe lub parametry inicjacji. W takich przypadkach wywołanie <xref:System.Xaml.XamlObjectWriter.WriteEndObject%2A> faktycznie zapisuje obiekt.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteGetObject">
      <MemberSignature Language="C#" Value="public override void WriteGetObject ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteGetObject() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlObjectWriter.WriteGetObject" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteGetObject ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteGetObject();" />
      <MemberSignature Language="F#" Value="override this.WriteGetObject : unit -&gt; unit" Usage="xamlObjectWriter.WriteGetObject " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zapisuje koncepcyjnej <see langword="StartObject" /> na wykresie obiektu, jeśli określony obiekt jest domyślne lub niejawne wartości właściwości nadrzędnej. Niejawne wartość pochodzi z informacje, które są uzyskiwane z kontekst schematu XAML i informacje o typie zapasowy, a nie jest określony jako wartość obiektu w zestawie węzłów wejściowych XAML.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Różnica między zapisu z <xref:System.Xaml.XamlObjectWriter.WriteGetObject%2A> i zapisywania z <xref:System.Xaml.XamlObjectWriter.WriteStartObject%2A> można zobaczyć w wynikowy wykres obiektu. <xref:System.Xaml.XamlObjectWriter.WriteGetObject%2A> nie skonstruować wystąpienia typu, ponieważ <xref:System.Xaml.XamlObjectWriter.WriteGetObject%2A> interfejsu API nie ma informacji o poinformowanie wykres obiektu, co do konstruowania. Zamiast tego należy obiekt został utworzony, gdy właściwość nadrzędna została zainicjowana; Dlatego <xref:System.Xaml.XamlObjectWriter> , nie trzeba go utworzyć. Z kolei <xref:System.Xaml.XamlObjectWriter.WriteStartObject%2A> Określa, że wykonane i wstawione do wykresu obiektu wystąpienia tego typu.  
  
 Jeśli Twoim zdaniem strumienia węzłów XAML jako serię ramki, <xref:System.Xaml.XamlObjectWriter.WriteGetObject%2A> jest równoważone do <xref:System.Xaml.XamlObjectWriter.WriteEndObject%2A> wywołania. W związku z tym, liczba <xref:System.Xaml.XamlObjectWriter.WriteGetObject%2A> oraz <xref:System.Xaml.XamlObjectWriter.WriteStartObject%2A> wywołania powinna być równa liczbie <xref:System.Xaml.XamlObjectWriter.WriteEndObject%2A> wywołania jako część kompletnej oceny zapisu obiektu strumienia węzłów XAML.  
  
 Koncepcyjnej `StartObject` położenie obiektu niejawne na grafie obiektu jest niezbędne, ponieważ mimo że sama wartość obiektu niejawnego domyślnego, ten obiekt może nadal mieć elementy członkowskie, które należy do zapisania na podstawie strumienia węzłów XAML. Jest to typowy scenariusz, w którym występuje, gdy <xref:System.Xaml.XamlObjectWriter> węzłami Członkowskimi operacje zapisu dla właściwości kolekcji i Inicjowanie kolekcji jest niejawne Tworzenie obiektu, który jest właścicielem właściwości kolekcji.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteNamespace">
      <MemberSignature Language="C#" Value="public override void WriteNamespace (System.Xaml.NamespaceDeclaration namespaceDeclaration);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteNamespace(class System.Xaml.NamespaceDeclaration namespaceDeclaration) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlObjectWriter.WriteNamespace(System.Xaml.NamespaceDeclaration)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteNamespace(System::Xaml::NamespaceDeclaration ^ namespaceDeclaration);" />
      <MemberSignature Language="F#" Value="override this.WriteNamespace : System.Xaml.NamespaceDeclaration -&gt; unit" Usage="xamlObjectWriter.WriteNamespace namespaceDeclaration" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="namespaceDeclaration" Type="System.Xaml.NamespaceDeclaration" />
      </Parameters>
      <Docs>
        <param name="namespaceDeclaration">Deklaracja przestrzeni nazw do zapisania.</param>
        <summary>Określa deklarację przestrzeni nazw, która ma zastosowanie do następnego obiektu zakresu lub zakresu elementu członkowskiego.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Deklarację przestrzeni nazw mogą być zapisywane, jeśli bieżący zakres jest zakres głównego, zakres obiektów lub element członkowski zakresu. Jednak <xref:System.Xaml.XamlObjectWriter.WriteNamespace%2A> lze volat pouze tuż przed wywołaniem do jednej z następujących czynności: <xref:System.Xaml.XamlObjectWriter.WriteNamespace%2A>, <xref:System.Xaml.XamlObjectWriter.WriteStartObject%2A>, lub <xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A>. Kolejne <xref:System.Xaml.XamlObjectWriter.WriteNamespace%2A> przypadek jest za zapisywanie wielu deklaracji przestrzeni nazw w tym samym węźle. Po pewnym czasie albo <xref:System.Xaml.XamlObjectWriter.WriteStartObject%2A> lub <xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A> musi zostać wywołana.  
  
 <xref:System.Xaml.XamlObjectWriter.WriteNamespace%2A> nie używa `Start` / `End` metaphor. Mimo że przestrzeń nazw XAML ma elementy członkowskie, w tym sensie, reprezentacja CLR, elementy członkowskie są znane i nie muszą być reprezentowana jako specjalny rodzaj <xref:System.Xaml.XamlMember> rozszerzalności. Aby uzyskać dostęp do wartości <xref:System.Xaml.NamespaceDeclaration>, możesz uzyskać dostęp do jego <xref:System.Xaml.NamespaceDeclaration.Namespace%2A> i <xref:System.Xaml.NamespaceDeclaration.Prefix%2A> właściwości.  
  
 Deklaracja przestrzeni nazw może mieć <xref:System.String.Empty?displayProperty=nameWithType> wartość prefiksu. A <xref:System.String.Empty?displayProperty=nameWithType> prefiks reprezentuje deklarację domyślnej przestrzeni nazw XAML. Nie należy próbować użyć wartości null do reprezentowania domyślny prefiks;  zgłasza wyjątek, w tym interfejsie API. Aby uzyskać więcej informacji, zobacz <xref:System.Xaml.NamespaceDeclaration>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="namespaceDeclaration" /> Jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">Składnik <paramref name="namespaceDeclaration" /> jest <see langword="null" />.</exception>
        <exception cref="T:System.Xaml.XamlObjectReaderException">Podjęto próbę zapisu węzeł przestrzeni nazw XAML w nieprawidłowy zakres.</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteStartMember">
      <MemberSignature Language="C#" Value="public override void WriteStartMember (System.Xaml.XamlMember property);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteStartMember(class System.Xaml.XamlMember property) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlObjectWriter.WriteStartMember(System.Xaml.XamlMember)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteStartMember (property As XamlMember)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteStartMember(System::Xaml::XamlMember ^ property);" />
      <MemberSignature Language="F#" Value="override this.WriteStartMember : System.Xaml.XamlMember -&gt; unit" Usage="xamlObjectWriter.WriteStartMember property" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="System.Xaml.XamlMember" />
      </Parameters>
      <Docs>
        <param name="property">Właściwość XAML do zapisania. Zazwyczaj można uzyskać tę wartość z czytnika XAML za pośrednictwem strumień węzłów XAML pośrednich.</param>
        <summary>Zapisuje nowy węzeł elementu członkowskiego w bieżącym zakresie obiektu i zakres staje się nowy zakres elementu członkowskiego.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!TIP]
>  Poszukaj <xref:System.Xaml.XamlDuplicateMemberException>, który występuje, gdy ustawiono tę samą właściwość XAML dwa razy w XAML, danych wejściowych. W prostych przypadkach, takich jak podczas tę samą właściwość jest ustawiona w składni atrybutów i składnia elementu właściwości można łatwo Zobacz tego wyjątku w danych wejściowych znaczników. Jednak więcej przypadków subtelne może wystąpić, które są trudne do dodatkowego. Na przykład ten wyjątek może wystąpić, jeśli zostanie ustawiona właściwość zawartości XAML, jeśli wymagają właściwości otoczenia XAML i właściwości umożliwia użycie wystąpień i użycie można dołączyć. W fazach debugowania, rozwoju często można zlokalizować ten wyjątek, wyświetlając reprezentacji pośredniej węzłów XAML, łączącej znaczników, Odczyt i zapis wykresu obiektu.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xaml.XamlObjectWriterException">
          <paramref name="property" /> ma <see cref="P:System.Xaml.XamlMember.IsUnknown" /> równa <see langword="true" />.  
  
—lub— 
 <see cref="P:System.Xaml.XamlLanguage.UnknownContent" /> zakończonych powodzeniem, co oznacza, że strumień węzłów XAML zawiera zawartość dla obiektu, który nie obsługuje zawartości.  
  
—lub— 
Podjęto próbę zapisu składowej start w nieprawidłowy zakres.</exception>
        <exception cref="T:System.Xaml.XamlDuplicateMemberException">
          <paramref name="property" /> Określa właściwość, która jest już jawnie ustawić w zakresie obiektu nadrzędnego.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="property" /> jest <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteStartObject">
      <MemberSignature Language="C#" Value="public override void WriteStartObject (System.Xaml.XamlType xamlType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteStartObject(class System.Xaml.XamlType xamlType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlObjectWriter.WriteStartObject(System.Xaml.XamlType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteStartObject(System::Xaml::XamlType ^ xamlType);" />
      <MemberSignature Language="F#" Value="override this.WriteStartObject : System.Xaml.XamlType -&gt; unit" Usage="xamlObjectWriter.WriteStartObject xamlType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xamlType" Type="System.Xaml.XamlType" />
      </Parameters>
      <Docs>
        <param name="xamlType">Typ do zapisania. Zazwyczaj można uzyskać tę wartość z czytnika XAML.</param>
        <summary>Zapisuje węzeł obiektu w bieżącym zakresie i ustawia zakres do nowego obiektu.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Xaml.XamlObjectWriterException">Przetwarzanie <see cref="P:System.Xaml.XamlType.IsUnknown" /> wpisz i nie można utworzyć obiektu.  
  
—lub— 
Podjęto próbę zapisu obiektu start w nieprawidłowy zakres.</exception>
        <exception cref="T:System.Xaml.XamlParseException">Podjęto próbę zapisania obiektu głównego w przypadku, gdy głównego obiektu zostało już podane w ustawieniach.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="xamlType" /> jest <see langword="null" />.</exception>
        <block subset="none" type="overrides">
          <para>Jeśli bieżący zakres znajduje się wewnątrz kolekcji, słownika lub tablicy, nowe wystąpienie należy dodać do kolekcji, słownika lub tablicy przy użyciu <see langword="Add" /> metoda odpowiedniego typu. W przeciwnym razie element członkowski, należy je przypisywać do nowego wystąpienia.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="WriteValue">
      <MemberSignature Language="C#" Value="public override void WriteValue (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteValue(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlObjectWriter.WriteValue(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteValue (value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteValue(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="override this.WriteValue : obj -&gt; unit" Usage="xamlObjectWriter.WriteValue value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">Wartość do zapisu.</param>
        <summary>Zapisuje wartości z bieżących zakresem elementu członkowskiego. Jeśli bieżący zakres znajduje się wewnątrz kolekcji, słownika lub obiektu array, wartość należy dodać do kolekcji, słownika lub tablicy.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Xaml.XamlObjectWriterException">Podjęto próbę zapisu wartości w nieprawidłowy zakres.</exception>
      </Docs>
    </Member>
  </Members>
</Type>