<Type Name="XamlObjectWriter" FullName="System.Xaml.XamlObjectWriter">
  <Metadata><Meta Name="ms.openlocfilehash" Value="31f36e0757a0ec127b5ff19e37dca6c8a490d0de" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69427203" /></Metadata><TypeSignature Language="C#" Value="public class XamlObjectWriter : System.Xaml.XamlWriter, System.Xaml.IXamlLineInfoConsumer" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XamlObjectWriter extends System.Xaml.XamlWriter implements class System.Xaml.IXamlLineInfoConsumer" />
  <TypeSignature Language="DocId" Value="T:System.Xaml.XamlObjectWriter" />
  <TypeSignature Language="VB.NET" Value="Public Class XamlObjectWriter&#xA;Inherits XamlWriter&#xA;Implements IXamlLineInfoConsumer" />
  <TypeSignature Language="C++ CLI" Value="public ref class XamlObjectWriter : System::Xaml::XamlWriter, System::Xaml::IXamlLineInfoConsumer" />
  <TypeSignature Language="F#" Value="type XamlObjectWriter = class&#xA;    inherit XamlWriter&#xA;    interface IXamlLineInfoConsumer" />
  <AssemblyInfo>
    <AssemblyName>System.Xaml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Xaml.XamlWriter</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Xaml.IXamlLineInfoConsumer</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="65940-101">Tworzy Graf obiektu na podstawie strumienia źródłowego węzła XAML.</span><span class="sxs-lookup"><span data-stu-id="65940-101">Creates an object graph from a source XAML node stream.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="65940-102"><xref:System.Xaml.XamlWriter.WriteNode%2A> Metodyimplementacjiwzorca<xref:System.Xaml.XamlWriter> tak, <xref:System.Xaml.XamlObjectWriter> aby używały, który jest zdefiniowany przez metodę. <xref:System.Xaml.XamlObjectWriter> `Write`</span><span class="sxs-lookup"><span data-stu-id="65940-102">The `Write` methods of <xref:System.Xaml.XamlObjectWriter> implement a pattern so that the <xref:System.Xaml.XamlObjectWriter> uses the <xref:System.Xaml.XamlWriter> that is defined by the <xref:System.Xaml.XamlWriter.WriteNode%2A> method.</span></span> <span data-ttu-id="65940-103"><xref:System.Xaml.XamlWriter.WriteNode%2A>przełączenia logiki `Write` między metodami, w zależności od tego, który typ węzła znajduje się na bieżącym miejscu w czytniku.</span><span class="sxs-lookup"><span data-stu-id="65940-103"><xref:System.Xaml.XamlWriter.WriteNode%2A> logic switches between the `Write` methods, depending on which node type is at the current position in the reader.</span></span>  
  
## <a name="scope"></a><span data-ttu-id="65940-104">Scope</span><span class="sxs-lookup"><span data-stu-id="65940-104">Scope</span></span>  
 <span data-ttu-id="65940-105">A <xref:System.Xaml.XamlObjectWriter> ma koncepcję zakresu <xref:System.Xaml.XamlObjectWriter> , czyli utrzymuje punkt koncepcyjny odwołania w jego grafie obiektów wyjściowych.</span><span class="sxs-lookup"><span data-stu-id="65940-105">A <xref:System.Xaml.XamlObjectWriter> has a concept of scope; that is, the <xref:System.Xaml.XamlObjectWriter> maintains a conceptual point of reference in its output object graph.</span></span> <span data-ttu-id="65940-106">W przypadku konkretnego zakresu niektóre operacje mogą być prawidłowe lub nieprawidłowe lub generować wynik braku operacji.</span><span class="sxs-lookup"><span data-stu-id="65940-106">For a particular scope, certain operations might be valid or invalid, or produce a no-operation result.</span></span> <span data-ttu-id="65940-107">Na przykład w przypadku wywołania <xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A> do dyrektywy Write w celu zainicjowania obiektu, który już istnieje jako wystąpienie, domyślna implementacja zgłasza wyjątek.</span><span class="sxs-lookup"><span data-stu-id="65940-107">For example, if you call <xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A> to write directives for initialization on an object that already exists as an instance, the default implementation throws an exception.</span></span>  
  
 <span data-ttu-id="65940-108">Możliwa metoda śledzenia zakresu w niestandardowym <xref:System.Xaml.XamlObjectWriter> polega na wyrównaniu akcji węzła z klasą stosu lub ramki.</span><span class="sxs-lookup"><span data-stu-id="65940-108">A possible technique for tracking scope in a custom <xref:System.Xaml.XamlObjectWriter> is to align the node actions with a stack or frame class.</span></span> <span data-ttu-id="65940-109">Stos lub ramka może śledzić wypchnięcie i wyskakujące dla każdego poziomu głębokości modelu obiektów, który jest wprowadzany lub zakończony podczas <xref:System.Xaml.XamlObjectWriter> zapisywania grafu obiektów.</span><span class="sxs-lookup"><span data-stu-id="65940-109">The stack or frame can keep track of push and pop for each level of object-model depth that is entered or exited while the <xref:System.Xaml.XamlObjectWriter> writes the object graph.</span></span>  
  
## <a name="callbacks"></a><span data-ttu-id="65940-110">Wywołania zwrotne</span><span class="sxs-lookup"><span data-stu-id="65940-110">Callbacks</span></span>  
 <span data-ttu-id="65940-111">Aby zapewnić obsługę pośrednich i zaawansowanych <xref:System.Xaml.XamlObjectWriter> scenariuszy, mechanizm pisania grafu obiektów zapewnia punkty wejścia wywołania zwrotnego, które występują <xref:System.Xaml.XamlObjectWriter> podczas zatwierdzania lub ma zatwierdzić pewne akcje.</span><span class="sxs-lookup"><span data-stu-id="65940-111">To support intermediate and advanced <xref:System.Xaml.XamlObjectWriter> scenarios, the mechanism of writing an object graph provides callback entry points that occur when a <xref:System.Xaml.XamlObjectWriter> commits or is about to commit certain actions.</span></span> <span data-ttu-id="65940-112">Niektóre wywołania zwrotne są włączone w ustawieniach i nie są specyficzne dla typu obiektu lub elementu członkowskiego, który jest zapisywany; informacje dotyczące wywołania zwrotnego są jednak często dostępne w kontekście lub są danymi zdarzeń wysyłanych za pomocą wywołania zwrotnego.</span><span class="sxs-lookup"><span data-stu-id="65940-112">Some callbacks are enabled in the settings and are not specific to the object type or the member being written; however, callback information is often available in context or is in the event data that is sent through the callback.</span></span> <span data-ttu-id="65940-113">Poniżej znajduje się lista odpowiednich wywołań zwrotnych:</span><span class="sxs-lookup"><span data-stu-id="65940-113">The following is a list of relevant callbacks:</span></span>  
  
-   <span data-ttu-id="65940-114">Wywołanie zwrotne zadeklarowane przez <xref:System.Xaml.XamlObjectWriterSettings.AfterBeginInitHandler%2A> jest wywoływane, gdy zakres przechodzi do nowego obiektu i <xref:System.ComponentModel.ISupportInitialize.BeginInit%2A> w fazie okresu istnienia obiektu dla każdego utworzonego obiektu.</span><span class="sxs-lookup"><span data-stu-id="65940-114">The callback that is declared by <xref:System.Xaml.XamlObjectWriterSettings.AfterBeginInitHandler%2A> is invoked when the scope goes to a new object and at the <xref:System.ComponentModel.ISupportInitialize.BeginInit%2A> phase of object lifetime for each created object.</span></span>  
  
-   <span data-ttu-id="65940-115">Wywołanie zwrotne zadeklarowane przez <xref:System.Xaml.XamlObjectWriterSettings.AfterEndInitHandler%2A> jest wywoływane, gdy zakres przechodzi do nowego obiektu i <xref:System.ComponentModel.ISupportInitialize.EndInit%2A> w fazie okresu istnienia obiektu dla każdego utworzonego obiektu.</span><span class="sxs-lookup"><span data-stu-id="65940-115">The callback that is declared by <xref:System.Xaml.XamlObjectWriterSettings.AfterEndInitHandler%2A> is invoked when the scope goes to a new object and at the <xref:System.ComponentModel.ISupportInitialize.EndInit%2A> phase of object lifetime for each created object.</span></span>  
  
-   <span data-ttu-id="65940-116">Wywołanie zwrotne zadeklarowane przez <xref:System.Xaml.XamlObjectWriterSettings.BeforePropertiesHandler%2A> jest wywoływane, gdy zakres zaczyna się w obiekcie i występuje, gdy pierwsze <xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A> wywołanie do tego zakresu obiektu jest wykonane, ale jeszcze nie zostało zatwierdzone.</span><span class="sxs-lookup"><span data-stu-id="65940-116">The callback that is declared by <xref:System.Xaml.XamlObjectWriterSettings.BeforePropertiesHandler%2A> is invoked when the scope starts in an object, and occurs when the first <xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A> call to that object scope is made but not yet committed.</span></span>  
  
-   <span data-ttu-id="65940-117">Wywołanie zwrotne zadeklarowane przez <xref:System.Xaml.XamlObjectWriterSettings.AfterPropertiesHandler%2A> jest wywoływane, gdy zakres zaczyna się w obiekcie i występuje, <xref:System.Xaml.XamlObjectWriter.WriteEndObject%2A> gdy zostanie wykonane wywołanie do tego zakresu obiektu, ale jeszcze nie zostało zatwierdzone.</span><span class="sxs-lookup"><span data-stu-id="65940-117">The callback that is declared by <xref:System.Xaml.XamlObjectWriterSettings.AfterPropertiesHandler%2A> is invoked when the scope starts in an object, and happens when the <xref:System.Xaml.XamlObjectWriter.WriteEndObject%2A> call to that object scope is made but not yet committed.</span></span>  
  
-   <span data-ttu-id="65940-118">Wywołanie zwrotne zadeklarowane przez <xref:System.Xaml.XamlObjectWriterSettings.XamlSetValueHandler%2A> jest wywoływane, <xref:System.Xaml.XamlObjectWriter.OnSetValue%2A> gdy jest wywoływana.</span><span class="sxs-lookup"><span data-stu-id="65940-118">The callback that is declared by <xref:System.Xaml.XamlObjectWriterSettings.XamlSetValueHandler%2A> is invoked when <xref:System.Xaml.XamlObjectWriter.OnSetValue%2A> is called.</span></span>  
  
## <a name="writing-dictionary-keys"></a><span data-ttu-id="65940-119">Pisanie kluczy słownika</span><span class="sxs-lookup"><span data-stu-id="65940-119">Writing Dictionary Keys</span></span>  
 <span data-ttu-id="65940-120">Domyślna implementacja programu <xref:System.Xaml.XamlObjectWriter> obsługuje konwersję typu w ograniczeniach <xref:System.Collections.Generic.Dictionary%602> , zanim zawartość słownika zostanie dodana do grafu obiektów.</span><span class="sxs-lookup"><span data-stu-id="65940-120">The default implementation of <xref:System.Xaml.XamlObjectWriter> supports type conversion on the constraints of a <xref:System.Collections.Generic.Dictionary%602> before the dictionary contents are added to the object graph.</span></span> <span data-ttu-id="65940-121">W ten sposób słownik ogólny może być konfigurowany w czasie wykonywania według obiektów i może być zgodny z odpowiednim zachowaniem `Add` ogólnym i indeksatorem.</span><span class="sxs-lookup"><span data-stu-id="65940-121">In this manner, a generic dictionary can be keyed at run time by objects and can match the relevant generic `Add` and indexer behavior.</span></span> <span data-ttu-id="65940-122">Jednak zgodnie z implementacją dla podstawy <xref:System.Xaml.XamlObjectWriter>, ta funkcja istnieje tylko dla tworzenia grafów obiektów z klasy <xref:System.Collections.Generic.Dictionary%602> bazowej, a <xref:System.Collections.Generic.Dictionary%602>nie dla klas pochodnych.</span><span class="sxs-lookup"><span data-stu-id="65940-122">However, as implemented for the base <xref:System.Xaml.XamlObjectWriter>, this capability exists only for object graph creation from the base <xref:System.Collections.Generic.Dictionary%602> class and not for derived classes of <xref:System.Collections.Generic.Dictionary%602>.</span></span>  
  
## <a name="checks-for-disposed"></a><span data-ttu-id="65940-123">Sprawdza, czy usunięto</span><span class="sxs-lookup"><span data-stu-id="65940-123">Checks for Disposed</span></span>  
 <span data-ttu-id="65940-124">Moduły zapisujące XAML są potencjalnie używane dla operacji odroczonych lub w przypadku, gdy wywołanie zostało wykonane względem wystąpienia składnika zapisywania języka XAML, które zostało usunięte w tymczasowym elemencie.</span><span class="sxs-lookup"><span data-stu-id="65940-124">XAML writers are potentially used for deferred operations or where a call is made against a XAML writer instance that has been disposed in the interim.</span></span> <span data-ttu-id="65940-125">Różne interfejsy API <xref:System.Xaml.XamlObjectWriter> programu <xref:System.ObjectDisposedException> mogą zgłaszać w takich przypadkach.</span><span class="sxs-lookup"><span data-stu-id="65940-125">Various APIs of <xref:System.Xaml.XamlObjectWriter> might throw <xref:System.ObjectDisposedException> in these cases.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Xaml.XamlWriter" />
    <altmember cref="T:System.Xaml.XamlObjectReader" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="65940-126">Inicjuje nowe wystąpienie klasy <see cref="T:System.Xaml.XamlObjectWriter" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="65940-126">Initializes a new instance of the <see cref="T:System.Xaml.XamlObjectWriter" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlObjectWriter (System.Xaml.XamlSchemaContext schemaContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xaml.XamlSchemaContext schemaContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlObjectWriter.#ctor(System.Xaml.XamlSchemaContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (schemaContext As XamlSchemaContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlObjectWriter(System::Xaml::XamlSchemaContext ^ schemaContext);" />
      <MemberSignature Language="F#" Value="new System.Xaml.XamlObjectWriter : System.Xaml.XamlSchemaContext -&gt; System.Xaml.XamlObjectWriter" Usage="new System.Xaml.XamlObjectWriter schemaContext" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="schemaContext" Type="System.Xaml.XamlSchemaContext" />
      </Parameters>
      <Docs>
        <param name="schemaContext"><span data-ttu-id="65940-127">Kontekst schematu XAML, który jest współużytkowany z czytnikiem XAML, który zawiera węzły do zapisu.</span><span class="sxs-lookup"><span data-stu-id="65940-127">A XAML schema context that is shared with the XAML reader that provides nodes for writing.</span></span></param>
        <summary><span data-ttu-id="65940-128">Inicjuje nowe wystąpienie <see cref="T:System.Xaml.XamlObjectWriter" /> klasy przy użyciu kontekstu schematu XAML, który jest używany <see cref="T:System.Xaml.XamlReader" />przez.</span><span class="sxs-lookup"><span data-stu-id="65940-128">Initializes a new instance of the <see cref="T:System.Xaml.XamlObjectWriter" /> class using  the XAML schema context that is used by a <see cref="T:System.Xaml.XamlReader" />.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="65940-129"><paramref name="schemaContext" />jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="65940-129"><paramref name="schemaContext" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlObjectWriter (System.Xaml.XamlSchemaContext schemaContext, System.Xaml.XamlObjectWriterSettings settings);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xaml.XamlSchemaContext schemaContext, class System.Xaml.XamlObjectWriterSettings settings) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlObjectWriter.#ctor(System.Xaml.XamlSchemaContext,System.Xaml.XamlObjectWriterSettings)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (schemaContext As XamlSchemaContext, settings As XamlObjectWriterSettings)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlObjectWriter(System::Xaml::XamlSchemaContext ^ schemaContext, System::Xaml::XamlObjectWriterSettings ^ settings);" />
      <MemberSignature Language="F#" Value="new System.Xaml.XamlObjectWriter : System.Xaml.XamlSchemaContext * System.Xaml.XamlObjectWriterSettings -&gt; System.Xaml.XamlObjectWriter" Usage="new System.Xaml.XamlObjectWriter (schemaContext, settings)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="schemaContext" Type="System.Xaml.XamlSchemaContext" />
        <Parameter Name="settings" Type="System.Xaml.XamlObjectWriterSettings" />
      </Parameters>
      <Docs>
        <param name="schemaContext"><span data-ttu-id="65940-130">Kontekst schematu XAML, który jest współużytkowany z czytnikiem XAML, który zawiera węzły do zapisu.</span><span class="sxs-lookup"><span data-stu-id="65940-130">A XAML schema context that is shared with the XAML reader that provides nodes for writing.</span></span></param>
        <param name="settings"><span data-ttu-id="65940-131">Obiekt ustawień, który określa niektóre opcje <see cref="T:System.Xaml.XamlObjectWriter" /> zachowania i danych wyjściowych.</span><span class="sxs-lookup"><span data-stu-id="65940-131">A settings object that specifies certain options for <see cref="T:System.Xaml.XamlObjectWriter" /> behavior and output.</span></span></param>
        <summary><span data-ttu-id="65940-132">Inicjuje nowe wystąpienie <see cref="T:System.Xaml.XamlObjectWriter" /> klasy przy użyciu kontekstu, który jest używany <see cref="T:System.Xaml.XamlReader" /> przez i jego ustawienia.</span><span class="sxs-lookup"><span data-stu-id="65940-132">Initializes a new instance of the <see cref="T:System.Xaml.XamlObjectWriter" /> class using the context that is used by a <see cref="T:System.Xaml.XamlReader" /> and its settings.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="65940-133"><paramref name="schemaContext" />jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="65940-133"><paramref name="schemaContext" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlObjectWriter.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Clear();" />
      <MemberSignature Language="F#" Value="member this.Clear : unit -&gt; unit" Usage="xamlObjectWriter.Clear " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="65940-134">Resetuje wszystkie możliwe ramki i czyści wykres obiektu.</span><span class="sxs-lookup"><span data-stu-id="65940-134">Resets all possible frames and clears the object graph.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlObjectWriter.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="xamlObjectWriter.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing"><span data-ttu-id="65940-135"><see langword="true" />Aby zwolnić zarządzane zasoby; w przeciwnym razie. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="65940-135"><see langword="true" /> to release the managed resources; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="65940-136">Zwalnia zasoby niezarządzane używane przez <see cref="T:System.Xaml.XamlObjectWriter" />program, a opcjonalnie zwalnia zarządzane zasoby.</span><span class="sxs-lookup"><span data-stu-id="65940-136">Releases the unmanaged resources used by the <see cref="T:System.Xaml.XamlObjectWriter" />, and optionally, releases the managed resources.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnAfterBeginInit">
      <MemberSignature Language="C#" Value="protected virtual void OnAfterBeginInit (object value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnAfterBeginInit(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlObjectWriter.OnAfterBeginInit(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnAfterBeginInit (value As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnAfterBeginInit(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member OnAfterBeginInit : obj -&gt; unit&#xA;override this.OnAfterBeginInit : obj -&gt; unit" Usage="xamlObjectWriter.OnAfterBeginInit value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="65940-137">Obiekt, na którym ma być zgłaszane.</span><span class="sxs-lookup"><span data-stu-id="65940-137">The object to report on.</span></span> <span data-ttu-id="65940-138">Obiekt jest spakowany do <see cref="T:System.Xaml.XamlObjectEventArgs" /> momentu wywołania programu obsługi.</span><span class="sxs-lookup"><span data-stu-id="65940-138">The object is packaged into <see cref="T:System.Xaml.XamlObjectEventArgs" /> when the handler is invoked.</span></span></param>
        <summary><span data-ttu-id="65940-139">Wywołuje każdą <see cref="P:System.Xaml.XamlObjectWriterSettings.AfterBeginInitHandler" /> metodę, która jest skojarzona z <see cref="T:System.Xaml.XamlObjectWriter" />tym elementem <see cref="T:System.Xaml.XamlObjectWriterSettings" /> .</span><span class="sxs-lookup"><span data-stu-id="65940-139">Invokes any <see cref="P:System.Xaml.XamlObjectWriterSettings.AfterBeginInitHandler" /> method that is associated with <see cref="T:System.Xaml.XamlObjectWriterSettings" /> for this <see cref="T:System.Xaml.XamlObjectWriter" />.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnAfterEndInit">
      <MemberSignature Language="C#" Value="protected virtual void OnAfterEndInit (object value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnAfterEndInit(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlObjectWriter.OnAfterEndInit(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnAfterEndInit (value As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnAfterEndInit(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member OnAfterEndInit : obj -&gt; unit&#xA;override this.OnAfterEndInit : obj -&gt; unit" Usage="xamlObjectWriter.OnAfterEndInit value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="65940-140">Obiekt, na którym ma być zgłaszane.</span><span class="sxs-lookup"><span data-stu-id="65940-140">The object to report on.</span></span> <span data-ttu-id="65940-141">Wartość jest pakowana do <see cref="T:System.Xaml.XamlObjectEventArgs" /> momentu wywołania programu obsługi.</span><span class="sxs-lookup"><span data-stu-id="65940-141">The value  is packaged into <see cref="T:System.Xaml.XamlObjectEventArgs" /> when the handler is invoked.</span></span></param>
        <summary><span data-ttu-id="65940-142">Wywołuje każdą <see cref="P:System.Xaml.XamlObjectWriterSettings.AfterEndInitHandler" /> metodę, która jest skojarzona z <see cref="T:System.Xaml.XamlObjectWriter" />tym elementem <see cref="T:System.Xaml.XamlObjectWriterSettings" /> .</span><span class="sxs-lookup"><span data-stu-id="65940-142">Invokes any <see cref="P:System.Xaml.XamlObjectWriterSettings.AfterEndInitHandler" /> method that is associated with <see cref="T:System.Xaml.XamlObjectWriterSettings" /> for this <see cref="T:System.Xaml.XamlObjectWriter" />.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnAfterProperties">
      <MemberSignature Language="C#" Value="protected virtual void OnAfterProperties (object value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnAfterProperties(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlObjectWriter.OnAfterProperties(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnAfterProperties (value As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnAfterProperties(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member OnAfterProperties : obj -&gt; unit&#xA;override this.OnAfterProperties : obj -&gt; unit" Usage="xamlObjectWriter.OnAfterProperties value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="65940-143">Obiekt, na którym ma być zgłaszane.</span><span class="sxs-lookup"><span data-stu-id="65940-143">The object to report on.</span></span> <span data-ttu-id="65940-144">Jest to spakowane do <see cref="T:System.Xaml.XamlObjectEventArgs" /> momentu wywołania programu obsługi.</span><span class="sxs-lookup"><span data-stu-id="65940-144">This is packaged into <see cref="T:System.Xaml.XamlObjectEventArgs" /> when the handler is invoked.</span></span></param>
        <summary><span data-ttu-id="65940-145">Wywołuje każdą <see cref="P:System.Xaml.XamlObjectWriterSettings.AfterPropertiesHandler" /> metodę, do której istnieje odwołanie <see cref="T:System.Xaml.XamlObjectWriterSettings" /> , która <see cref="T:System.Xaml.XamlObjectWriter" />jest skojarzona z tym elementem.</span><span class="sxs-lookup"><span data-stu-id="65940-145">Invokes any <see cref="P:System.Xaml.XamlObjectWriterSettings.AfterPropertiesHandler" /> referenced method that is associated with <see cref="T:System.Xaml.XamlObjectWriterSettings" /> for this <see cref="T:System.Xaml.XamlObjectWriter" />.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnBeforeProperties">
      <MemberSignature Language="C#" Value="protected virtual void OnBeforeProperties (object value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnBeforeProperties(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlObjectWriter.OnBeforeProperties(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnBeforeProperties (value As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnBeforeProperties(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member OnBeforeProperties : obj -&gt; unit&#xA;override this.OnBeforeProperties : obj -&gt; unit" Usage="xamlObjectWriter.OnBeforeProperties value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="65940-146">Wartość, która ma zostać <see cref="T:System.Xaml.XamlObjectEventArgs" /> przekazana po wywołaniu procedury obsługi.</span><span class="sxs-lookup"><span data-stu-id="65940-146">The value to pass through <see cref="T:System.Xaml.XamlObjectEventArgs" /> when the handler is invoked.</span></span></param>
        <summary><span data-ttu-id="65940-147">Wywołuje każdą <see cref="P:System.Xaml.XamlObjectWriterSettings.BeforePropertiesHandler" /> metodę, do której istnieje odwołanie <see cref="T:System.Xaml.XamlObjectWriterSettings" /> , która <see cref="T:System.Xaml.XamlObjectWriter" />jest skojarzona z tym elementem.</span><span class="sxs-lookup"><span data-stu-id="65940-147">Invokes any <see cref="P:System.Xaml.XamlObjectWriterSettings.BeforePropertiesHandler" /> referenced method that is associated with <see cref="T:System.Xaml.XamlObjectWriterSettings" /> for this <see cref="T:System.Xaml.XamlObjectWriter" />.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnSetValue">
      <MemberSignature Language="C#" Value="protected virtual bool OnSetValue (object eventSender, System.Xaml.XamlMember member, object value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool OnSetValue(object eventSender, class System.Xaml.XamlMember member, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlObjectWriter.OnSetValue(System.Object,System.Xaml.XamlMember,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function OnSetValue (eventSender As Object, member As XamlMember, value As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool OnSetValue(System::Object ^ eventSender, System::Xaml::XamlMember ^ member, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member OnSetValue : obj * System.Xaml.XamlMember * obj -&gt; bool&#xA;override this.OnSetValue : obj * System.Xaml.XamlMember * obj -&gt; bool" Usage="xamlObjectWriter.OnSetValue (eventSender, member, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventSender" Type="System.Object" />
        <Parameter Name="member" Type="System.Xaml.XamlMember" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="eventSender"><span data-ttu-id="65940-148">Obiekt, który ma być raportowany jako źródło do procedury obsługi.</span><span class="sxs-lookup"><span data-stu-id="65940-148">The object to report as the source to the handler.</span></span></param>
        <param name="member"><span data-ttu-id="65940-149">Nazwa właściwości do ustawienia, która jest przenoszona do procedury obsługi w ramach <see cref="T:System.Windows.Markup.XamlSetValueEventArgs" />.</span><span class="sxs-lookup"><span data-stu-id="65940-149">The name of the property to set, which is passed to the handler as part of <see cref="T:System.Windows.Markup.XamlSetValueEventArgs" />.</span></span></param>
        <param name="value"><span data-ttu-id="65940-150">Wartość, która ma być określona dla właściwości o nazwie <paramref name="property" />.</span><span class="sxs-lookup"><span data-stu-id="65940-150">The value to provide for the property that is named by <paramref name="property" />.</span></span> <span data-ttu-id="65940-151">Wartość jest przenoszona do procedury obsługi w ramach programu <see cref="T:System.Windows.Markup.XamlSetValueEventArgs" />.</span><span class="sxs-lookup"><span data-stu-id="65940-151">The value is passed to the handler as part of <see cref="T:System.Windows.Markup.XamlSetValueEventArgs" />.</span></span></param>
        <summary><span data-ttu-id="65940-152">Wywołuje każdą <see cref="P:System.Xaml.XamlObjectWriterSettings.XamlSetValueHandler" /> metodę, <see cref="T:System.Xaml.XamlObjectWriterSettings" /> do której odwołuje się dla tego <paramref name="handled" /> składnika zapisywania, tak długo <see cref="T:System.Windows.Markup.XamlSetValueEventArgs" /> , jak w danych <see langword="true" />zdarzenia nie jest.</span><span class="sxs-lookup"><span data-stu-id="65940-152">Invokes any <see cref="P:System.Xaml.XamlObjectWriterSettings.XamlSetValueHandler" /> referenced method that is associated with <see cref="T:System.Xaml.XamlObjectWriterSettings" /> for this writer, as long as <paramref name="handled" /> in <see cref="T:System.Windows.Markup.XamlSetValueEventArgs" /> event data is not <see langword="true" />.</span></span></summary>
        <returns><span data-ttu-id="65940-153">Wartość logiczna, która jest ustawiana przez wszystkie powiązane procedury obsługi; w przeciwnym razie. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="65940-153">A Boolean value that is set by any associated handler; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="65940-154">Jeśli operacja dla tego składnika zapisywania XAML ma skojarzoną procedurę obsługi <xref:System.Xaml.XamlObjectWriterSettings.XamlSetValueHandler%2A> (jest zadeklarowana <xref:System.Xaml.XamlObjectWriterSettings>w elemencie), ta metoda <xref:System.Windows.Markup.XamlSetValueEventArgs> tworzy nowe i przekazuje je do programu obsługi. `SetValue`</span><span class="sxs-lookup"><span data-stu-id="65940-154">If the `SetValue` operation for this XAML writer has an associated handler (a <xref:System.Xaml.XamlObjectWriterSettings.XamlSetValueHandler%2A> is declared in <xref:System.Xaml.XamlObjectWriterSettings>), this method creates new <xref:System.Windows.Markup.XamlSetValueEventArgs> and passes them to the handler.</span></span> <span data-ttu-id="65940-155">Wartość zwracana jest ustawiana przez odczytanie <xref:System.Windows.Markup.XamlSetValueEventArgs.Handled%2A> wartości, która jest przenoszona przez dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="65940-155">The return value is set by reading the <xref:System.Windows.Markup.XamlSetValueEventArgs.Handled%2A> value that is passed through the event data.</span></span> <span data-ttu-id="65940-156">Jeśli nie istnieje procedura obsługi i wywoływana jest metoda, wywołanie zwraca `false`.</span><span class="sxs-lookup"><span data-stu-id="65940-156">If no handler exists and this method is invoked, the call returns `false`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Result">
      <MemberSignature Language="C#" Value="public virtual object Result { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Result" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlObjectWriter.Result" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Result As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Object ^ Result { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Result : obj" Usage="System.Xaml.XamlObjectWriter.Result" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="65940-157">Pobiera ostatni zapisany obiekt.</span><span class="sxs-lookup"><span data-stu-id="65940-157">Gets the last object that was written.</span></span> <span data-ttu-id="65940-158">Zazwyczaj wywoływana tylko wtedy, gdy strumień węzłów jest na końcu, a wykres obiektu jest ukończony.</span><span class="sxs-lookup"><span data-stu-id="65940-158">Typically only called when the node stream is at its end and the object graph is complete.</span></span></summary>
        <value><span data-ttu-id="65940-159">Ostatni obiekt z zapisem lub <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="65940-159">The last object written, or <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="65940-160">Najbardziej typowym użyciem <xref:System.Xaml.XamlObjectWriter.Result%2A> jest wywoływanie go tylko wtedy, gdy strumień węzła jest znany na końcu, a wykres obiektu jest ukończony.</span><span class="sxs-lookup"><span data-stu-id="65940-160">The most typical usage of <xref:System.Xaml.XamlObjectWriter.Result%2A> is to call it only when the node stream is known to be at its end, and the object graph is complete.</span></span> <span data-ttu-id="65940-161">W przeciwnym razie Graf obiektu może być niekompletny i nie jest użyteczny w przypadku większości scenariuszy platformy.</span><span class="sxs-lookup"><span data-stu-id="65940-161">Otherwise, the object graph is likely to be incomplete, and is not useful for most platform scenarios.</span></span>  
  
 <span data-ttu-id="65940-162"><xref:System.Xaml.XamlObjectWriter.Result%2A>zwykle zawiera wartość różną od null, jeśli jest wywoływana natychmiast po wywołaniu do <xref:System.Xaml.XamlObjectWriter.WriteEndObject%2A>, i jeśli bieżący zakres znajduje się w elemencie członkowskim, gdzie obiekt udostępnia wartość.</span><span class="sxs-lookup"><span data-stu-id="65940-162"><xref:System.Xaml.XamlObjectWriter.Result%2A> typically only contains a non-null value if it is called immediately after a call to <xref:System.Xaml.XamlObjectWriter.WriteEndObject%2A>, and if the current scope is in the member where the object provides a value.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RootNameScope">
      <MemberSignature Language="C#" Value="public System.Windows.Markup.INameScope RootNameScope { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Markup.INameScope RootNameScope" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlObjectWriter.RootNameScope" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RootNameScope As INameScope" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Markup::INameScope ^ RootNameScope { System::Windows::Markup::INameScope ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.RootNameScope : System.Windows.Markup.INameScope" Usage="System.Xaml.XamlObjectWriter.RootNameScope" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Markup.INameScope</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="65940-163"><see cref="T:System.Windows.Markup.INameScope" /> Pobiera usługę, która utrzymuje namescope XAML dla bezwzględnego węzła nadrzędnego modułu zapisywania obiektów XAML.</span><span class="sxs-lookup"><span data-stu-id="65940-163">Gets the <see cref="T:System.Windows.Markup.INameScope" /> service that maintains the XAML namescope for the absolute node root of the XAML object writer.</span></span></summary>
        <value><span data-ttu-id="65940-164"><see cref="T:System.Windows.Markup.INameScope" /> Usługa, która utrzymuje namescope XAML dla bieżącego elementu głównego modułu zapisywania obiektów.</span><span class="sxs-lookup"><span data-stu-id="65940-164">The <see cref="T:System.Windows.Markup.INameScope" /> service that maintains the XAML namescope for the current root of the object writer.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="65940-165">Wartość tej właściwości może pochodzić z kontekstu zapisywania obiektów.</span><span class="sxs-lookup"><span data-stu-id="65940-165">The value of this property may come from the object writer context.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SchemaContext">
      <MemberSignature Language="C#" Value="public override System.Xaml.XamlSchemaContext SchemaContext { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xaml.XamlSchemaContext SchemaContext" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlObjectWriter.SchemaContext" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property SchemaContext As XamlSchemaContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xaml::XamlSchemaContext ^ SchemaContext { System::Xaml::XamlSchemaContext ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SchemaContext : System.Xaml.XamlSchemaContext" Usage="System.Xaml.XamlObjectWriter.SchemaContext" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlSchemaContext</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="65940-166">Pobiera aktywny kontekst schematu XAML.</span><span class="sxs-lookup"><span data-stu-id="65940-166">Gets the active XAML schema context.</span></span></summary>
        <value><span data-ttu-id="65940-167">Kontekst schematu XAML.</span><span class="sxs-lookup"><span data-stu-id="65940-167">The XAML schema context.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="65940-168">Kontekst schematu XAML jest niezbędnym źródłem informacji dla większości praktycznych scenariuszy pisania obiektów.</span><span class="sxs-lookup"><span data-stu-id="65940-168">XAML schema context is a necessary information source for most practical object-writing scenarios.</span></span> <span data-ttu-id="65940-169">Kontekst schematu XAML ma wpływ na wyszukiwanie typu dla typów zapasowych i zawiera informacje o zestawach, w których istnieją typy kopii zapasowych.</span><span class="sxs-lookup"><span data-stu-id="65940-169">The XAML schema context influences the type lookup for backing types and holds information about the assemblies where backing types exist.</span></span> <span data-ttu-id="65940-170">Domyślny kontekst schematu XAML jest oparty na regułach mapowania typów CLR.</span><span class="sxs-lookup"><span data-stu-id="65940-170">The default XAML schema context is based on CLR type-mapping rules.</span></span> <span data-ttu-id="65940-171">Struktury zwykle zapewniają własny kontekst schematu XAML, aby zapewnić, że mechanizmy ładowania zestawów są zgodne z modelami aplikacji firmy AMD programistycznych.</span><span class="sxs-lookup"><span data-stu-id="65940-171">Frameworks typically provide their own XAML schema context in order to assure that the assembly-loading mechanisms match the framework's programming amd application models.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetLineInfo">
      <MemberSignature Language="C#" Value="public void SetLineInfo (int lineNumber, int linePosition);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetLineInfo(int32 lineNumber, int32 linePosition) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlObjectWriter.SetLineInfo(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetLineInfo (lineNumber As Integer, linePosition As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetLineInfo(int lineNumber, int linePosition);" />
      <MemberSignature Language="F#" Value="abstract member SetLineInfo : int * int -&gt; unit&#xA;override this.SetLineInfo : int * int -&gt; unit" Usage="xamlObjectWriter.SetLineInfo (lineNumber, linePosition)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Xaml.IXamlLineInfoConsumer.SetLineInfo(System.Int32,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="lineNumber" Type="System.Int32" />
        <Parameter Name="linePosition" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="lineNumber"><span data-ttu-id="65940-172">Numer wiersza z czytnika.</span><span class="sxs-lookup"><span data-stu-id="65940-172">The line number from the reader.</span></span></param>
        <param name="linePosition"><span data-ttu-id="65940-173">Położenie linii od czytnika.</span><span class="sxs-lookup"><span data-stu-id="65940-173">The line position from the reader.</span></span></param>
        <summary><span data-ttu-id="65940-174">Implementuje <see cref="M:System.Xaml.IXamlLineInfoConsumer.SetLineInfo(System.Int32,System.Int32)" /> i udostępnia informacje o wierszach dla wyjątków.</span><span class="sxs-lookup"><span data-stu-id="65940-174">Implements <see cref="M:System.Xaml.IXamlLineInfoConsumer.SetLineInfo(System.Int32,System.Int32)" /> and provides line information for exceptions.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="65940-175">Ta metoda usługi nie jest przeznaczona do wywoływania bezpośrednio w kodzie.</span><span class="sxs-lookup"><span data-stu-id="65940-175">This service method is not intended to be called directly from your code.</span></span> <span data-ttu-id="65940-176">Jeśli jednak tworzysz klasę pochodną z <xref:System.Xaml.XamlObjectWriter> i oczekujesz, że dla kontekstu, w którym numery wierszy są niedostępne lub nie są przydatne, ta metoda może być wywoływana.</span><span class="sxs-lookup"><span data-stu-id="65940-176">However, if you are creating a derived class from <xref:System.Xaml.XamlObjectWriter> and expect to report a context where line numbers are unavailable or not useful, this method may be called.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldProvideLineInfo">
      <MemberSignature Language="C#" Value="public bool ShouldProvideLineInfo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShouldProvideLineInfo" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlObjectWriter.ShouldProvideLineInfo" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ShouldProvideLineInfo As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShouldProvideLineInfo { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.ShouldProvideLineInfo : bool" Usage="System.Xaml.XamlObjectWriter.ShouldProvideLineInfo" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Xaml.IXamlLineInfoConsumer.ShouldProvideLineInfo</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="65940-177">Pobiera wartość, która określa, czy usługa informacji o wierszu powinna podawać wartości, a w związku z <see cref="M:System.Xaml.IXamlLineInfoConsumer.SetLineInfo(System.Int32,System.Int32)" /> tym powinna wywołać metodę, gdy ma to zastosowanie.</span><span class="sxs-lookup"><span data-stu-id="65940-177">Gets a value that reports whether a line information service should provide values and therefore, should also call the <see cref="M:System.Xaml.IXamlLineInfoConsumer.SetLineInfo(System.Int32,System.Int32)" /> method when it is relevant.</span></span></summary>
        <value><span data-ttu-id="65940-178"><see langword="true" />Jeśli moduł zapisujący używa informacji o wierszu, w przeciwnym razie. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="65940-178"><see langword="true" /> if line information is used by the writer; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="65940-179">Ta implementacja zawsze zwraca `true`wartość.</span><span class="sxs-lookup"><span data-stu-id="65940-179">This implementation always returns `true`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteEndMember">
      <MemberSignature Language="C#" Value="public override void WriteEndMember ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteEndMember() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlObjectWriter.WriteEndMember" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteEndMember ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteEndMember();" />
      <MemberSignature Language="F#" Value="override this.WriteEndMember : unit -&gt; unit" Usage="xamlObjectWriter.WriteEndMember " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="65940-180">Zamyka bieżący zakres elementów członkowskich i może napisać wartość zakresu elementu członkowskiego, gdy zostanie zamknięty.</span><span class="sxs-lookup"><span data-stu-id="65940-180">Closes the current member scope, and may write the value of the member scope while it closes.</span></span> <span data-ttu-id="65940-181">Nowy zakres zmieni zakres obiektu nadrzędnego elementu członkowskiego.</span><span class="sxs-lookup"><span data-stu-id="65940-181">The new scope becomes the parent object scope of the member.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Xaml.XamlObjectWriterException"><span data-ttu-id="65940-182">Nie można utworzyć wartości elementu członkowskiego z węzła wartości, który występuje między tym wywołaniem i <see langword="StartMember" />poprzednią.</span><span class="sxs-lookup"><span data-stu-id="65940-182">Failed to create member value from a value node that is encountered between this call and a previous <see langword="StartMember" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteEndObject">
      <MemberSignature Language="C#" Value="public override void WriteEndObject ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteEndObject() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlObjectWriter.WriteEndObject" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteEndObject ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteEndObject();" />
      <MemberSignature Language="F#" Value="override this.WriteEndObject : unit -&gt; unit" Usage="xamlObjectWriter.WriteEndObject " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="65940-183">Zamyka bieżący zakres obiektów w składniku zapisywania.</span><span class="sxs-lookup"><span data-stu-id="65940-183">Closes the current object scope in the writer.</span></span> <span data-ttu-id="65940-184">Nowy zakres obiektów zostanie przekształcony w nadrzędny zakres elementu członkowskiego.</span><span class="sxs-lookup"><span data-stu-id="65940-184">The new object scope becomes the parent member scope.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="65940-185">Jeśli ten `EndObject` zakres położenia zamyka obiekt główny, nowy zakres obiektów stanie się głównym zakresem.</span><span class="sxs-lookup"><span data-stu-id="65940-185">If this `EndObject` position scope is closing the root object, the new object scope becomes the root scope.</span></span>  
  
 <span data-ttu-id="65940-186">Wywołanie programu <xref:System.Xaml.XamlObjectWriter.WriteStartObject%2A> mogło jeszcze nie utworzyć obiektu, ponieważ element członkowski obiektu może być niezbędną przyczyną inicjalizacji, taką jak tekst inicjujący lub parametry inicjalizacji.</span><span class="sxs-lookup"><span data-stu-id="65940-186">The call to <xref:System.Xaml.XamlObjectWriter.WriteStartObject%2A> might not yet have created the object because an object member might be a necessary initialization pathway, such as initialization text or initialization parameters.</span></span> <span data-ttu-id="65940-187">W takich przypadkach wywołanie w <xref:System.Xaml.XamlObjectWriter.WriteEndObject%2A> rzeczywistości zapisuje obiekt.</span><span class="sxs-lookup"><span data-stu-id="65940-187">For these cases, the call to <xref:System.Xaml.XamlObjectWriter.WriteEndObject%2A> actually writes the object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteGetObject">
      <MemberSignature Language="C#" Value="public override void WriteGetObject ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteGetObject() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlObjectWriter.WriteGetObject" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteGetObject ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteGetObject();" />
      <MemberSignature Language="F#" Value="override this.WriteGetObject : unit -&gt; unit" Usage="xamlObjectWriter.WriteGetObject " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="65940-188">Zapisuje koncepcję <see langword="StartObject" /> do grafu obiektów, gdy określony obiekt jest wartością domyślną lub niejawną właściwości nadrzędnej.</span><span class="sxs-lookup"><span data-stu-id="65940-188">Writes the conceptual <see langword="StartObject" /> into the object graph when the specified object is a default or implicit value of the parent property.</span></span> <span data-ttu-id="65940-189">Wartość niejawna pochodzi z informacji uzyskanych z kontekstu schematu XAML i informacji o typie zapasowym, a nie jako wartość obiektu w wejściowym zestawie węzłów XAML.</span><span class="sxs-lookup"><span data-stu-id="65940-189">The implicit value comes from information that is obtained from the XAML schema context and backing type information, instead of being specified as an object value in the input XAML node set.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="65940-190">Różnica między pisaniem <xref:System.Xaml.XamlObjectWriter.WriteGetObject%2A> i <xref:System.Xaml.XamlObjectWriter.WriteStartObject%2A> pisaniem w programie może być widoczna na wynikowym wykresie obiektów.</span><span class="sxs-lookup"><span data-stu-id="65940-190">The difference between writing with <xref:System.Xaml.XamlObjectWriter.WriteGetObject%2A> and writing with <xref:System.Xaml.XamlObjectWriter.WriteStartObject%2A> can be seen in the resulting object graph.</span></span> <span data-ttu-id="65940-191"><xref:System.Xaml.XamlObjectWriter.WriteGetObject%2A>nie tworzy wystąpienia typu, ponieważ <xref:System.Xaml.XamlObjectWriter.WriteGetObject%2A> interfejs API nie ma informacji do poinformowania grafu obiektów o tym, co należy skonstruować.</span><span class="sxs-lookup"><span data-stu-id="65940-191"><xref:System.Xaml.XamlObjectWriter.WriteGetObject%2A> does not construct an instance of a type because the <xref:System.Xaml.XamlObjectWriter.WriteGetObject%2A> API has no information to inform the object graph of what to construct.</span></span> <span data-ttu-id="65940-192">Zamiast tego obiekt został utworzony, gdy właściwość nadrzędna została zainicjowana; <xref:System.Xaml.XamlObjectWriter> dlatego nie musi to być konstrukcja.</span><span class="sxs-lookup"><span data-stu-id="65940-192">Instead, the object was created when the parent property was initialized; so a <xref:System.Xaml.XamlObjectWriter> does not need to construct it.</span></span> <span data-ttu-id="65940-193">Z kolei <xref:System.Xaml.XamlObjectWriter.WriteStartObject%2A> określa, że wystąpienie tego typu powinno być skonstruowane i wstawiane do grafu obiektów.</span><span class="sxs-lookup"><span data-stu-id="65940-193">In contrast, <xref:System.Xaml.XamlObjectWriter.WriteStartObject%2A> specifies that an instance of that type should be constructed and inserted into the object graph.</span></span>  
  
 <span data-ttu-id="65940-194">Jeśli chcesz traktować strumień węzłów XAML jako serię ramek, jest on <xref:System.Xaml.XamlObjectWriter.WriteGetObject%2A> równoważony <xref:System.Xaml.XamlObjectWriter.WriteEndObject%2A> do wywołania.</span><span class="sxs-lookup"><span data-stu-id="65940-194">If you think of the XAML node stream as a series of frames, a <xref:System.Xaml.XamlObjectWriter.WriteGetObject%2A> is balanced to a <xref:System.Xaml.XamlObjectWriter.WriteEndObject%2A> call.</span></span> <span data-ttu-id="65940-195">W związku z tym liczba <xref:System.Xaml.XamlObjectWriter.WriteGetObject%2A> wywołań <xref:System.Xaml.XamlObjectWriter.WriteStartObject%2A> Plus <xref:System.Xaml.XamlObjectWriter.WriteEndObject%2A> powinna być równa liczbie wywołań w ramach kompletnej oceny obiektu i zapisu strumienia węzła XAML.</span><span class="sxs-lookup"><span data-stu-id="65940-195">Therefore, the number of <xref:System.Xaml.XamlObjectWriter.WriteGetObject%2A> plus <xref:System.Xaml.XamlObjectWriter.WriteStartObject%2A> calls should equal the number of <xref:System.Xaml.XamlObjectWriter.WriteEndObject%2A> calls as part of a complete object-writing evaluation of the XAML node stream.</span></span>  
  
 <span data-ttu-id="65940-196">Pozycja koncepcyjna `StartObject` dla niejawnego obiektu w grafie obiektów jest niezbędna, ponieważ chociaż sama wartość obiektu jest niejawną wartością domyślną, ten obiekt może nadal mieć elementy członkowskie, które muszą być zapisywane w oparciu o strumień węzłów XAML.</span><span class="sxs-lookup"><span data-stu-id="65940-196">The conceptual `StartObject` position for an implicit object in the object graph is necessary because although the object value itself is an implicit default, that object might still have members that need to be written based on the XAML node stream.</span></span> <span data-ttu-id="65940-197">Typowym scenariuszem, gdy występuje to <xref:System.Xaml.XamlObjectWriter> , jest zapisanie węzłów elementów członkowskich dla właściwości kolekcji, a inicjowanie kolekcji jest niejawne w przypadku tworzenia obiektu, który jest właścicielem właściwości kolekcji.</span><span class="sxs-lookup"><span data-stu-id="65940-197">A typical scenario where this occurs is when <xref:System.Xaml.XamlObjectWriter> writes member nodes for a collection property, and the collection initialization is implicit to creating the object that owns the collection property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteNamespace">
      <MemberSignature Language="C#" Value="public override void WriteNamespace (System.Xaml.NamespaceDeclaration namespaceDeclaration);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteNamespace(class System.Xaml.NamespaceDeclaration namespaceDeclaration) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlObjectWriter.WriteNamespace(System.Xaml.NamespaceDeclaration)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteNamespace(System::Xaml::NamespaceDeclaration ^ namespaceDeclaration);" />
      <MemberSignature Language="F#" Value="override this.WriteNamespace : System.Xaml.NamespaceDeclaration -&gt; unit" Usage="xamlObjectWriter.WriteNamespace namespaceDeclaration" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="namespaceDeclaration" Type="System.Xaml.NamespaceDeclaration" />
      </Parameters>
      <Docs>
        <param name="namespaceDeclaration"><span data-ttu-id="65940-198">Deklaracja przestrzeni nazw do zapisu.</span><span class="sxs-lookup"><span data-stu-id="65940-198">The namespace declaration to write.</span></span></param>
        <summary><span data-ttu-id="65940-199">Definiuje deklarację przestrzeni nazw, która ma zastosowanie do następnego zakresu obiektu lub zakresu elementu członkowskiego.</span><span class="sxs-lookup"><span data-stu-id="65940-199">Defines a namespace declaration that applies to the next object scope or member scope.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="65940-200">Deklarację przestrzeni nazw można zapisać, jeśli bieżący zakres jest zakresem głównym, zakresem obiektów lub zakresem elementu członkowskiego.</span><span class="sxs-lookup"><span data-stu-id="65940-200">A namespace declaration can be written if the current scope is a root scope, object scope, or member scope.</span></span> <span data-ttu-id="65940-201">Jednakże można wywołać tylko bezpośrednio przed wywołaniem jednego z następujących elementów: <xref:System.Xaml.XamlObjectWriter.WriteNamespace%2A>, <xref:System.Xaml.XamlObjectWriter.WriteStartObject%2A>, lub <xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A>. <xref:System.Xaml.XamlObjectWriter.WriteNamespace%2A></span><span class="sxs-lookup"><span data-stu-id="65940-201">However, <xref:System.Xaml.XamlObjectWriter.WriteNamespace%2A> can only be called immediately before a call to one of the following: <xref:System.Xaml.XamlObjectWriter.WriteNamespace%2A>, <xref:System.Xaml.XamlObjectWriter.WriteStartObject%2A>, or <xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A>.</span></span> <span data-ttu-id="65940-202">Kolejnym <xref:System.Xaml.XamlObjectWriter.WriteNamespace%2A> przypadkiem jest zapisanie wielu deklaracji przestrzeni nazw do tego samego węzła.</span><span class="sxs-lookup"><span data-stu-id="65940-202">The consecutive <xref:System.Xaml.XamlObjectWriter.WriteNamespace%2A> case is for writing multiple namespace declarations to the same node.</span></span> <span data-ttu-id="65940-203">Ostatecznie, <xref:System.Xaml.XamlObjectWriter.WriteStartObject%2A> <xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A> albo musi być wywoływana.</span><span class="sxs-lookup"><span data-stu-id="65940-203">Eventually, either <xref:System.Xaml.XamlObjectWriter.WriteStartObject%2A> or <xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A> must be called.</span></span>  
  
 <span data-ttu-id="65940-204"><xref:System.Xaml.XamlObjectWriter.WriteNamespace%2A>nie używa elementu `Start` / metaphor`End` .</span><span class="sxs-lookup"><span data-stu-id="65940-204"><xref:System.Xaml.XamlObjectWriter.WriteNamespace%2A> does not use a `Start`/`End` metaphor.</span></span> <span data-ttu-id="65940-205">Chociaż przestrzeń nazw XAML ma elementy członkowskie w sensie reprezentacji CLR, elementy członkowskie są znane i nie trzeba ich reprezentować jako specjalnego typu <xref:System.Xaml.XamlMember> dla rozszerzalności.</span><span class="sxs-lookup"><span data-stu-id="65940-205">Although a XAML namespace has members in the CLR representation sense, the members are known and do not need to be represented as a special type of <xref:System.Xaml.XamlMember> for extensibility.</span></span> <span data-ttu-id="65940-206">Aby uzyskać dostęp do wartości <xref:System.Xaml.NamespaceDeclaration>, można uzyskać dostęp do jej <xref:System.Xaml.NamespaceDeclaration.Prefix%2A> <xref:System.Xaml.NamespaceDeclaration.Namespace%2A> właściwości i.</span><span class="sxs-lookup"><span data-stu-id="65940-206">To access the values of a <xref:System.Xaml.NamespaceDeclaration>, you access its <xref:System.Xaml.NamespaceDeclaration.Namespace%2A> and <xref:System.Xaml.NamespaceDeclaration.Prefix%2A> properties.</span></span>  
  
 <span data-ttu-id="65940-207">Deklaracja przestrzeni nazw może mieć <xref:System.String.Empty?displayProperty=nameWithType> wartość dla prefiksu.</span><span class="sxs-lookup"><span data-stu-id="65940-207">A namespace declaration may have a <xref:System.String.Empty?displayProperty=nameWithType> value for the prefix.</span></span> <span data-ttu-id="65940-208"><xref:System.String.Empty?displayProperty=nameWithType> Prefiks reprezentuje deklarację domyślnej przestrzeni nazw XAML.</span><span class="sxs-lookup"><span data-stu-id="65940-208">A <xref:System.String.Empty?displayProperty=nameWithType> prefix represents a declaration of the default XAML namespace.</span></span> <span data-ttu-id="65940-209">Nie należy próbować używać wartości null do reprezentowania domyślnego prefiksu;  zgłasza wyjątek w tym interfejsie API.</span><span class="sxs-lookup"><span data-stu-id="65940-209">Do not attempt to use null to represent the default prefix;  it throws an exception in this API.</span></span> <span data-ttu-id="65940-210">Aby uzyskać więcej informacji, zobacz <xref:System.Xaml.NamespaceDeclaration>.</span><span class="sxs-lookup"><span data-stu-id="65940-210">For more information, see <xref:System.Xaml.NamespaceDeclaration>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="65940-211"><paramref name="namespaceDeclaration" /> Ma<see langword="null" />wartość.</span><span class="sxs-lookup"><span data-stu-id="65940-211">The <paramref name="namespaceDeclaration" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="65940-212">Składnik programu <paramref name="namespaceDeclaration" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="65940-212">A component of <paramref name="namespaceDeclaration" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Xaml.XamlObjectReaderException"><span data-ttu-id="65940-213">Podjęto próbę zapisania węzła przestrzeni nazw XAML w nieprawidłowym zakresie.</span><span class="sxs-lookup"><span data-stu-id="65940-213">Tried to write a XAML namespace node in an invalid scope.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteStartMember">
      <MemberSignature Language="C#" Value="public override void WriteStartMember (System.Xaml.XamlMember property);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteStartMember(class System.Xaml.XamlMember property) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlObjectWriter.WriteStartMember(System.Xaml.XamlMember)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteStartMember (property As XamlMember)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteStartMember(System::Xaml::XamlMember ^ property);" />
      <MemberSignature Language="F#" Value="override this.WriteStartMember : System.Xaml.XamlMember -&gt; unit" Usage="xamlObjectWriter.WriteStartMember property" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="System.Xaml.XamlMember" />
      </Parameters>
      <Docs>
        <param name="property"><span data-ttu-id="65940-214">Właściwość XAML do zapisu.</span><span class="sxs-lookup"><span data-stu-id="65940-214">The XAML property to write.</span></span> <span data-ttu-id="65940-215">Zwykle uzyskujesz tę wartość z czytnika XAML za pośrednictwem pośredniego strumienia węzłów XAML.</span><span class="sxs-lookup"><span data-stu-id="65940-215">Typically you obtain this value from a XAML reader through the XAML node stream intermediate.</span></span></param>
        <summary><span data-ttu-id="65940-216">Zapisuje nowy węzeł elementu członkowskiego w bieżącym zakresie obiektu, a zakres jest nowym zakresem elementu członkowskiego.</span><span class="sxs-lookup"><span data-stu-id="65940-216">Writes a new member node into the current object scope, and the scope becomes a new member scope.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!TIP]
>  <span data-ttu-id="65940-217"><xref:System.Xaml.XamlDuplicateMemberException>Obserwuj, która występuje, gdy ta sama Właściwość XAML jest ustawiona dwukrotnie w danych wejściowych XAML.</span><span class="sxs-lookup"><span data-stu-id="65940-217">Watch for a <xref:System.Xaml.XamlDuplicateMemberException>, which occurs when the same XAML property is set twice in the XAML input.</span></span> <span data-ttu-id="65940-218">W prostych przypadkach, na przykład gdy ta sama właściwość jest ustawiona w składni atrybutów i składni elementu właściwości, można łatwo zobaczyć ten wyjątek w znacznikach wejściowych.</span><span class="sxs-lookup"><span data-stu-id="65940-218">In simple cases, such as when the same property is set in both attribute syntax and property element syntax, you can easily see this exception in the input markup.</span></span> <span data-ttu-id="65940-219">Jednak mogą wystąpić bardziej delikatne przypadki, które są trudniejsze do zapamiętania.</span><span class="sxs-lookup"><span data-stu-id="65940-219">However, more subtle cases can occur that are more difficult to spot.</span></span> <span data-ttu-id="65940-220">Na przykład ten wyjątek może wystąpić, jeśli ustawisz właściwość zawartości XAML, jeśli powiążesz się z właściwościami otoczenia XAML, a Właściwość włącza zarówno użycie możliwe do dołączenia, jak i wystąpienie.</span><span class="sxs-lookup"><span data-stu-id="65940-220">For example, this exception might occur if you set a XAML content property, if you involve XAML ambient properties, and if a property enables both an attachable usage and an instance usage.</span></span> <span data-ttu-id="65940-221">W fazach debugowania opracowywania można często zlokalizować ten wyjątek, wyświetlając pośrednią reprezentację węzła XAML, która łączy odczytywanie znaczników i zapis grafu obiektów.</span><span class="sxs-lookup"><span data-stu-id="65940-221">In the debugging phases of development, you can often locate this exception by viewing the intermediate XAML node representation that connects the markup read and the object graph write.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xaml.XamlObjectWriterException"><span data-ttu-id="65940-222"><paramref name="property" /><see cref="P:System.Xaml.XamlMember.IsUnknown" /> ma<see langword="true" />ustawioną wartość.</span><span class="sxs-lookup"><span data-stu-id="65940-222"><paramref name="property" /> has <see cref="P:System.Xaml.XamlMember.IsUnknown" /> set to <see langword="true" />.</span></span>  
  
<span data-ttu-id="65940-223">—lub—</span><span class="sxs-lookup"><span data-stu-id="65940-223">-or-</span></span> 
 <span data-ttu-id="65940-224"><see cref="P:System.Xaml.XamlLanguage.UnknownContent" />przeszedł, co oznacza, że strumień węzłów XAML zawiera zawartość dla obiektu, który nie obsługuje zawartości.</span><span class="sxs-lookup"><span data-stu-id="65940-224"><see cref="P:System.Xaml.XamlLanguage.UnknownContent" /> passed, which indicates that the XAML node stream contained content for an object that does not support content.</span></span>  
  
<span data-ttu-id="65940-225">—lub—</span><span class="sxs-lookup"><span data-stu-id="65940-225">-or-</span></span> 
<span data-ttu-id="65940-226">Podjęto próbę zapisania początkowego elementu członkowskiego w nieprawidłowym zakresie.</span><span class="sxs-lookup"><span data-stu-id="65940-226">Attempted to write a start member in an invalid scope.</span></span></exception>
        <exception cref="T:System.Xaml.XamlDuplicateMemberException"><span data-ttu-id="65940-227"><paramref name="property" />Określa właściwość, która jest już jawnie ustawiona w zakresie obiektu nadrzędnego.</span><span class="sxs-lookup"><span data-stu-id="65940-227"><paramref name="property" /> specifies a property that is already explicitly set in the parent object scope.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="65940-228"><paramref name="property" />jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="65940-228"><paramref name="property" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteStartObject">
      <MemberSignature Language="C#" Value="public override void WriteStartObject (System.Xaml.XamlType xamlType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteStartObject(class System.Xaml.XamlType xamlType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlObjectWriter.WriteStartObject(System.Xaml.XamlType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteStartObject(System::Xaml::XamlType ^ xamlType);" />
      <MemberSignature Language="F#" Value="override this.WriteStartObject : System.Xaml.XamlType -&gt; unit" Usage="xamlObjectWriter.WriteStartObject xamlType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xamlType" Type="System.Xaml.XamlType" />
      </Parameters>
      <Docs>
        <param name="xamlType"><span data-ttu-id="65940-229">Typ do zapisu.</span><span class="sxs-lookup"><span data-stu-id="65940-229">The type to write.</span></span> <span data-ttu-id="65940-230">Zwykle uzyskujesz tę wartość z czytnika XAML.</span><span class="sxs-lookup"><span data-stu-id="65940-230">Typically you obtain this value from a XAML reader.</span></span></param>
        <summary><span data-ttu-id="65940-231">Zapisuje węzeł obiektu w bieżącym zakresie i ustawia zakres na nowy zakres obiektu.</span><span class="sxs-lookup"><span data-stu-id="65940-231">Writes an object node into the current scope, and sets the scope to a new object scope.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Xaml.XamlObjectWriterException"><span data-ttu-id="65940-232"><see cref="P:System.Xaml.XamlType.IsUnknown" /> Przetwarzanie typu i nie można utworzyć obiektu.</span><span class="sxs-lookup"><span data-stu-id="65940-232">Processing an <see cref="P:System.Xaml.XamlType.IsUnknown" /> type and cannot create an object.</span></span>  
  
<span data-ttu-id="65940-233">—lub—</span><span class="sxs-lookup"><span data-stu-id="65940-233">-or-</span></span> 
<span data-ttu-id="65940-234">Podjęto próbę zapisania obiektu początkowego w nieprawidłowym zakresie.</span><span class="sxs-lookup"><span data-stu-id="65940-234">Attempted to write a start object in an invalid scope.</span></span></exception>
        <exception cref="T:System.Xaml.XamlParseException"><span data-ttu-id="65940-235">Podjęto próbę zapisania obiektu głównego, gdy obiekt główny został już podany w ustawieniach.</span><span class="sxs-lookup"><span data-stu-id="65940-235">Attempted to write a root object when the root object was already provided in the settings.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="65940-236"><paramref name="xamlType" />jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="65940-236"><paramref name="xamlType" /> is <see langword="null" />.</span></span></exception>
        <block subset="none" type="overrides"><para><span data-ttu-id="65940-237">Jeśli bieżący zakres znajduje się w kolekcji, słowniku lub tablicy, nowe wystąpienie należy dodać do kolekcji, słownika lub tablicy przy użyciu <see langword="Add" /> metody odpowiedniego typu.</span><span class="sxs-lookup"><span data-stu-id="65940-237">If the current scope is inside a collection, dictionary, or array, the new instance should be added to the collection, dictionary, or array by using the <see langword="Add" /> method of the relevant type.</span></span> <span data-ttu-id="65940-238">W przeciwnym razie element członkowski powinien zostać przypisany do nowego wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="65940-238">Otherwise, the member should be assigned to the new instance.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="WriteValue">
      <MemberSignature Language="C#" Value="public override void WriteValue (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteValue(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlObjectWriter.WriteValue(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteValue (value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteValue(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="override this.WriteValue : obj -&gt; unit" Usage="xamlObjectWriter.WriteValue value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="65940-239">Wartość do zapisu.</span><span class="sxs-lookup"><span data-stu-id="65940-239">The value to write.</span></span></param>
        <summary><span data-ttu-id="65940-240">Zapisuje wartość do zakresu bieżącego elementu członkowskiego.</span><span class="sxs-lookup"><span data-stu-id="65940-240">Writes a value to the current member scope.</span></span> <span data-ttu-id="65940-241">Jeśli bieżący zakres znajduje się wewnątrz kolekcji, słownika lub obiektu Array, wartość należy dodać do kolekcji, słownika lub tablicy.</span><span class="sxs-lookup"><span data-stu-id="65940-241">If the current scope is inside a collection, dictionary, or array object, the value should be added to the collection, dictionary, or array.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Xaml.XamlObjectWriterException"><span data-ttu-id="65940-242">Podjęto próbę zapisania wartości w nieprawidłowym zakresie.</span><span class="sxs-lookup"><span data-stu-id="65940-242">Attempted to write a value in an invalid scope.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>
