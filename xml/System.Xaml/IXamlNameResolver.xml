<Type Name="IXamlNameResolver" FullName="System.Xaml.IXamlNameResolver">
  <Metadata><Meta Name="ms.openlocfilehash" Value="d67e5a9c4f9c2ce02dc2b22b5eaba13b6e960c70" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69427522" /></Metadata><TypeSignature Language="C#" Value="public interface IXamlNameResolver" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IXamlNameResolver" />
  <TypeSignature Language="DocId" Value="T:System.Xaml.IXamlNameResolver" />
  <TypeSignature Language="VB.NET" Value="Public Interface IXamlNameResolver" />
  <TypeSignature Language="C++ CLI" Value="public interface class IXamlNameResolver" />
  <TypeSignature Language="F#" Value="type IXamlNameResolver = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Xaml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>Opisuje usługę, która może zwracać obiekty, które są określone przez nazwę XAML, lub alternatywnie zwraca token, który zawiera informacje o rozpoznawaniu nazw. Usługa może również zwrócić wyliczalny zestaw wszystkich nazwanych obiektów, które znajdują się w namescope XAML.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten interfejs nie jest przeznaczony do zewnętrznej implementacji typowych scenariuszy języka XAML, ponieważ jest to usługa. Ta usługa umożliwia korzystanie z rozszerzeń znaczników i konwerterów typów w celu rozpoznawania nazw XAML do innych obiektów z tego samego źródła XAML, gdy nadal znajdują się w reprezentacji węzła XAML. Usługa może służyć do rozpoznawania odwołań do przodu dla dowolnego mechanizmu, który opiera się na nazwach języka XAML dla nieliniowego dostępu do otaczającej produkcji XAML. Aby uzyskać więcej informacji, zobacz [Typy konwerterów i rozszerzenia znaczników dla języka XAML](~/docs/framework/xaml-services/type-converters-and-markup-extensions-for-xaml.md).  
  
 Konwertery typów i rozszerzenia znaczników mogą wykonywać <xref:System.Xaml.IXamlNameResolver> zapytania jako usługa w kontekście usługi dostarczanym przez moduł zapisujący obiektów XAML, gdy moduł zapisujący obiektów XAML wywoła zachowanie konwersji wartości. Aby uzyskać więcej informacji, zobacz [Typy konwerterów i rozszerzenia znaczników dla XAML](~/docs/framework/xaml-services/type-converters-and-markup-extensions-for-xaml.md) i [kontekstów usługi dostępne dla konwerterów typów i rozszerzeń znaczników](~/docs/framework/xaml-services/service-contexts-available-to-type-converters-and-markup-extensions.md).  
  
 Ta usługa udostępnia interfejs API, który może odroczyć rozpoznawanie nazw. Metaphor implementowany przez usługę to nazwy, które nie mogą zostać rozpoznane w pierwszym przebiegu względem częściowego grafu obiektów nazw, powinny być przechowywane i używane do tworzenia tokenu naprawy. W przypadku zachowania domyślnego wszystkie takie nazwy są przesyłane do innej próby rozpoznania w drugim przebiegu. W drugim przebiegu ogólna Graf nazwy-obiektu jest kompletna, a wszystkie tokeny naprawy mogą zostać rozpoznane.  
  
> [!NOTE]
>  Nawet jeśli są dozwolone przez określoną implementację, odwołania do przodu w języku XAML stają się niewątpliwe. Najlepszym rozwiązaniem w przypadku języka XAML z jakością produkcyjną jest unikanie przekazywania odwołań wszędzie tam, gdzie jest to możliwe.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Markup.INameScopeDictionary" />
    <altmember cref="T:System.Windows.NameScope" />
  </Docs>
  <Members>
    <Member MemberName="GetAllNamesAndValuesInScope">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;string,object&gt;&gt; GetAllNamesAndValuesInScope ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;string, object&gt;&gt; GetAllNamesAndValuesInScope() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.IXamlNameResolver.GetAllNamesAndValuesInScope" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAllNamesAndValuesInScope () As IEnumerable(Of KeyValuePair(Of String, Object))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;System::Collections::Generic::KeyValuePair&lt;System::String ^, System::Object ^&gt;&gt; ^ GetAllNamesAndValuesInScope();" />
      <MemberSignature Language="F#" Value="abstract member GetAllNamesAndValuesInScope : unit -&gt; seq&lt;System.Collections.Generic.KeyValuePair&lt;string, obj&gt;&gt;" Usage="iXamlNameResolver.GetAllNamesAndValuesInScope " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.Object&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zwraca wyliczalny zestaw wszystkich nazwanych obiektów w kodzie XAML namescope.</summary>
        <returns>Wyliczalny zestaw <see cref="T:System.Collections.Generic.KeyValuePair`2" /> obiektów. Dla każdego <see cref="T:System.Collections.Generic.KeyValuePair`2" /> <see cref="P:System.Collections.Generic.KeyValuePair`2.Key" /> składnik jest ciągiem, a <see cref="P:System.Collections.Generic.KeyValuePair`2.Value" /> składnik jest obiektem, który używa <see cref="P:System.Collections.Generic.KeyValuePair`2.Key" /> nazwy w namescope XAML.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetFixupToken">
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Zwraca obiekt, który można poprawić dla niektórych wzorców adiustacji, które tworzą odwołania do przodu.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetFixupToken">
      <MemberSignature Language="C#" Value="public object GetFixupToken (System.Collections.Generic.IEnumerable&lt;string&gt; names);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetFixupToken(class System.Collections.Generic.IEnumerable`1&lt;string&gt; names) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.IXamlNameResolver.GetFixupToken(System.Collections.Generic.IEnumerable{System.String})" />
      <MemberSignature Language="VB.NET" Value="Public Function GetFixupToken (names As IEnumerable(Of String)) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetFixupToken(System::Collections::Generic::IEnumerable&lt;System::String ^&gt; ^ names);" />
      <MemberSignature Language="F#" Value="abstract member GetFixupToken : seq&lt;string&gt; -&gt; obj" Usage="iXamlNameResolver.GetFixupToken names" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="names" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="names">Kolekcja nazw, które mogą być dostępne do przodu.</param>
        <summary>Zwraca obiekt, który można poprawić dla niektórych wzorców adiustacji, które tworzą odwołania do przodu.</summary>
        <returns>Obiekt, który dostarcza token dla zachowania wyszukiwania do późniejszej oceny.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Istniejący dostawcy usług wewnętrznych, którzy są dostępni w kontekstach schematu dla rozszerzeń znaczników i konwerterów typów, mogą zaimplementować tę usługę; jednak zwracają one typ wewnętrzny, który może przetwarzać tylko istniejące elementy zapisujące XAML, które działają w ramach domyślnego kontekstu schematu języka XAML.  
  
 Gdy wszystkie nazwy, do których się odwołuje, są rozpoznawane, kod użytkownika jest wywoływany, aby ponownie analizować każdą nazwę na liście.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFixupToken">
      <MemberSignature Language="C#" Value="public object GetFixupToken (System.Collections.Generic.IEnumerable&lt;string&gt; names, bool canAssignDirectly);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetFixupToken(class System.Collections.Generic.IEnumerable`1&lt;string&gt; names, bool canAssignDirectly) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.IXamlNameResolver.GetFixupToken(System.Collections.Generic.IEnumerable{System.String},System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetFixupToken (names As IEnumerable(Of String), canAssignDirectly As Boolean) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetFixupToken(System::Collections::Generic::IEnumerable&lt;System::String ^&gt; ^ names, bool canAssignDirectly);" />
      <MemberSignature Language="F#" Value="abstract member GetFixupToken : seq&lt;string&gt; * bool -&gt; obj" Usage="iXamlNameResolver.GetFixupToken (names, canAssignDirectly)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="names" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="canAssignDirectly" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="names">Kolekcja nazw, które mogą być dostępne do przodu.</param>
        <param name="canAssignDirectly"><see langword="true" />Aby natychmiast przypisać rozpoznane odwołanie do nazwy do właściwości docelowej. <see langword="false" />Aby wywołać kod użytkownika w celu przeanalizowania. Zachowanie domyślne to <see langword="false" />.</param>
        <summary>Zwraca obiekt, który można poprawić dla niektórych wzorców adiustacji, które tworzą odwołania do przodu.</summary>
        <returns>Obiekt, który dostarcza token dla zachowania wyszukiwania do późniejszej oceny.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Istniejący dostawcy usług wewnętrznych, którzy są dostępni w kontekstach schematu dla rozszerzeń znaczników i konwerterów typów implementujących tę usługę; jednak zwracają typ wewnętrzny, który może być przetwarzany tylko przez istniejących autorów XAML, które działają w ramach domyślnego kontekstu schematu języka XAML.  
  
 W przypadku `canAssignDirectly`,gdy wszystkie nazwy, do których się odwołuje, są rozpoznawane, kod użytkownika jest wywoływany, aby ponownie analizować każdą nazwę na liście. `false`  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsFixupTokenAvailable">
      <MemberSignature Language="C#" Value="public bool IsFixupTokenAvailable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsFixupTokenAvailable" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.IXamlNameResolver.IsFixupTokenAvailable" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsFixupTokenAvailable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsFixupTokenAvailable { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsFixupTokenAvailable : bool" Usage="System.Xaml.IXamlNameResolver.IsFixupTokenAvailable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość określającą, czy wywoływanie <see cref="M:System.Xaml.IXamlNameResolver.GetFixupToken(System.Collections.Generic.IEnumerable{System.String},System.Boolean)" /> jest dostępne w celu rozpoznania nazwy w tokenie do rozwiązania do przodu.</summary>
        <value><see langword="true" />Jeśli <see cref="M:System.Xaml.IXamlNameResolver.GetFixupToken(System.Collections.Generic.IEnumerable{System.String},System.Boolean)" /> jest dostępny jako implementacja, która zwraca przydatny token do rozpoznawania dalej; <see langword="false" />w przeciwnym razie.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość zwraca `false` , <xref:System.Xaml.IXamlNameResolver.GetFixupToken%2A> gdy nie zwraca tokenu, <xref:System.Xaml.Schema.XamlValueConverter%601> ponieważ występuje w drugim przebiegu na istniejącym tokenie.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnNameScopeInitializationComplete">
      <MemberSignature Language="C#" Value="event EventHandler OnNameScopeInitializationComplete;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler OnNameScopeInitializationComplete" />
      <MemberSignature Language="DocId" Value="E:System.Xaml.IXamlNameResolver.OnNameScopeInitializationComplete" />
      <MemberSignature Language="VB.NET" Value="Event OnNameScopeInitializationComplete As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ OnNameScopeInitializationComplete;" />
      <MemberSignature Language="F#" Value="member this.OnNameScopeInitializationComplete : EventHandler " Usage="member this.OnNameScopeInitializationComplete : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, gdy procesor XAML zarejestrował wszystkie odpowiednie nazwy do zapasowego kodu XAML namescope.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Resolve">
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Rozpoznaje obiekt z odwołania do nazwy.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Resolve">
      <MemberSignature Language="C#" Value="public object Resolve (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Resolve(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.IXamlNameResolver.Resolve(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Resolve (name As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Resolve(System::String ^ name);" />
      <MemberSignature Language="F#" Value="abstract member Resolve : string -&gt; obj" Usage="iXamlNameResolver.Resolve name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">Nazwa odwołania do rozwiązania.</param>
        <summary>Rozpoznaje obiekt z odwołania do nazwy.</summary>
        <returns>Rozpoznany obiekt; lub wartość null.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli wartość jest zwracana jako `null`, może istnieć odwołanie do przodu. Implementacje, które chcą obsługiwać odwołania do przodu, `FixupToken` mogą używać wzorców <xref:System.Xaml.IXamlNameResolver.GetFixupToken%2A> za <xref:System.Xaml.IXamlNameResolver.IsFixupTokenAvailable%2A> pomocą interfejsów API i.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Markup.INameScope.FindName(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="Resolve">
      <MemberSignature Language="C#" Value="public object Resolve (string name, out bool isFullyInitialized);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Resolve(string name, [out] bool&amp; isFullyInitialized) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.IXamlNameResolver.Resolve(System.String,System.Boolean@)" />
      <MemberSignature Language="VB.NET" Value="Public Function Resolve (name As String, ByRef isFullyInitialized As Boolean) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Resolve(System::String ^ name, [Runtime::InteropServices::Out] bool % isFullyInitialized);" />
      <MemberSignature Language="F#" Value="abstract member Resolve : string *  -&gt; obj" Usage="iXamlNameResolver.Resolve (name, isFullyInitialized)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="isFullyInitialized" Type="System.Boolean" RefType="out" />
      </Parameters>
      <Docs>
        <param name="name">Nazwa odwołania do rozwiązania.</param>
        <param name="isFullyInitialized">Gdy ta metoda zwraca, <see langword="true" /> Jeśli zwracany obiekt ma jakiekolwiek zależności od nierozpoznanych odwołań; <see langword="false" />w przeciwnym razie.</param>
        <summary>Rozpoznaje obiekt z odwołania do nazwy i zapewnia wartość śledzenia, która określa, czy obiekt jest w pełni zainicjowany dla celów grafu obiektów.</summary>
        <returns>Obiekt, który dostarcza token dla zachowania wyszukiwania do późniejszej oceny.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
