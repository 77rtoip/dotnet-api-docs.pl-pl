<Type Name="XamlObjectReader" FullName="System.Xaml.XamlObjectReader">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="9e6d2eb616c907ec8dcb5ca1fc1e167372ea8047" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30741431" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class XamlObjectReader : System.Xaml.XamlReader" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XamlObjectReader extends System.Xaml.XamlReader" />
  <TypeSignature Language="DocId" Value="T:System.Xaml.XamlObjectReader" />
  <TypeSignature Language="VB.NET" Value="Public Class XamlObjectReader&#xA;Inherits XamlReader" />
  <TypeSignature Language="C++ CLI" Value="public ref class XamlObjectReader : System::Xaml::XamlReader" />
  <AssemblyInfo>
    <AssemblyName>System.Xaml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Xaml.XamlReader</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Udostępnia <see cref="T:System.Xaml.XamlReader" /> implementację, która odczytuje obiekt wykresach i generuje strumień węzłów XAML.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Xaml.XamlObjectReader> w scenariuszach, w której chcesz przetworzyć wykres obiektu, który zazwyczaj jest wykres obiektu aplikacji, która wygenerowała początkowo ze źródła XAML. Można na przykład <xref:System.Xaml.XamlObjectReader> podróż dokonania z punktu początkowego XAML do punktu końcowego XAML. Lub mogą zostać uruchomione <xref:System.Xaml.XamlObjectReader> przez wykres obiektu; przetworzyć pośredni strumień węzłów XAML, jeśli jest to wymagane, za pomocą interfejsów API na <xref:System.Xaml.XamlType> i <xref:System.Xaml.XamlMember>; a następnie użyj <xref:System.Xaml.XamlXmlWriter> do serializacji węzłów XAML na format XML.  
  
 Bardziej zaawansowanych scenariuszy może dostarczyć <xref:System.Xaml.XamlXmlWriter> zastępowania i kontekst schematu XAML który <xref:System.Xaml.XamlObjectReader> używa, a następnie przekazuje zastąpienia składnika zapisywania.  
  
 Typowe scenariusze korzystania <xref:System.Xaml.XamlObjectReader> wywołaniu elementów członkowskich, które <xref:System.Xaml.XamlObjectReader> implementuje; zakres ich także wywołać <xref:System.Xaml.XamlReader.Close%2A>, <xref:System.Xaml.XamlReader.ReadSubtree%2A>, i <xref:System.Xaml.XamlReader.Skip%2A> z <xref:System.Xaml.XamlReader> klasy podstawowej.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Xaml.XamlObjectReader" /> klasy.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlObjectReader (object instance);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(object instance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlObjectReader.#ctor(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (instance As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlObjectReader(System::Object ^ instance);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="instance">Korzeń drzewa obiektów / obiekt Wykres do odczytu.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Xaml.XamlObjectReader" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli zainicjowano przy użyciu tego konstruktora <xref:System.Xaml.XamlObjectReader> obiektu zawiera ustawienia początkowe domyślnego <xref:System.Xaml.XamlObjectReaderSettings> obiektu i początkowej kontekstu domyślnego <xref:System.Xaml.XamlSchemaContext>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlObjectReader (object instance, System.Xaml.XamlObjectReaderSettings settings);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(object instance, class System.Xaml.XamlObjectReaderSettings settings) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlObjectReader.#ctor(System.Object,System.Xaml.XamlObjectReaderSettings)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (instance As Object, settings As XamlObjectReaderSettings)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlObjectReader(System::Object ^ instance, System::Xaml::XamlObjectReaderSettings ^ settings);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
        <Parameter Name="settings" Type="System.Xaml.XamlObjectReaderSettings" />
      </Parameters>
      <Docs>
        <param name="instance">Korzeń drzewa obiektów do odczytu.</param>
        <param name="settings">Obiekt ustawień.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Xaml.XamlObjectReader" /> klasy przy użyciu ustawień podany czytnik.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Obiekt ustawień określa reguły dla czytnika operacji, takich jak przetwarzanie numer wiersza, zachowanie obsługa błędów i tak dalej. Aby uzyskać więcej informacji, zobacz <xref:System.Xaml.XamlObjectReaderSettings>.  
  
 Jeśli zainicjowano przy użyciu tego konstruktora <xref:System.Xaml.XamlObjectReader> obiekt ma początkowej kontekstu domyślnego <xref:System.Xaml.XamlSchemaContext>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlObjectReader (object instance, System.Xaml.XamlSchemaContext schemaContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(object instance, class System.Xaml.XamlSchemaContext schemaContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlObjectReader.#ctor(System.Object,System.Xaml.XamlSchemaContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (instance As Object, schemaContext As XamlSchemaContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlObjectReader(System::Object ^ instance, System::Xaml::XamlSchemaContext ^ schemaContext);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
        <Parameter Name="schemaContext" Type="System.Xaml.XamlSchemaContext" />
      </Parameters>
      <Docs>
        <param name="instance">Korzeń drzewa obiektów do odczytu.</param>
        <param name="schemaContext">Kontekst schematu czytnik do użycia.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Xaml.XamlObjectReader" /> klasy z kontekstem określony schemat.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli zainicjowano przy użyciu tego konstruktora <xref:System.Xaml.XamlObjectReader> obiektu zawiera ustawienia początkowe domyślnego <xref:System.Xaml.XamlObjectReaderSettings> obiektu.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="schemaContext" /> jest <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlObjectReader (object instance, System.Xaml.XamlSchemaContext schemaContext, System.Xaml.XamlObjectReaderSettings settings);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(object instance, class System.Xaml.XamlSchemaContext schemaContext, class System.Xaml.XamlObjectReaderSettings settings) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlObjectReader.#ctor(System.Object,System.Xaml.XamlSchemaContext,System.Xaml.XamlObjectReaderSettings)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (instance As Object, schemaContext As XamlSchemaContext, settings As XamlObjectReaderSettings)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlObjectReader(System::Object ^ instance, System::Xaml::XamlSchemaContext ^ schemaContext, System::Xaml::XamlObjectReaderSettings ^ settings);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
        <Parameter Name="schemaContext" Type="System.Xaml.XamlSchemaContext" />
        <Parameter Name="settings" Type="System.Xaml.XamlObjectReaderSettings" />
      </Parameters>
      <Docs>
        <param name="instance">Korzeń drzewa obiektów do odczytu.</param>
        <param name="schemaContext">Kontekst schematu czytnik do użycia.</param>
        <param name="settings">Obiekt ustawień.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Xaml.XamlObjectReader" /> klasy przy użyciu określonego schematu ustawień kontekstu i czytnika.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Obiekt ustawień określa reguły dla czytnika operacji, takich jak przetwarzanie numeru wiersza i zachowanie obsługi błędów. Aby uzyskać więcej informacji, zobacz <xref:System.Xaml.XamlObjectReaderSettings>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="schemaContext" /> jest <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Instance">
      <MemberSignature Language="C#" Value="public virtual object Instance { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Instance" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlObjectReader.Instance" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Instance As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Object ^ Instance { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wystąpienie obiektu, który jest dostępny w bieżącym położeniu czytnika.</summary>
        <value>Wystąpienie obiektu w bieżącym położeniu czytnika; lub <see langword="null" /> Jeśli pozycja czytnika nie znajduje się w obiekcie.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEof">
      <MemberSignature Language="C#" Value="public override bool IsEof { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEof" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlObjectReader.IsEof" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsEof As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsEof { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość, która informuje, czy pozycja czytnik jest na końcu pliku.</summary>
        <value>
          <see langword="true" /> Jeśli czytnik położenie jest na końcu pliku. w przeciwnym razie <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Member">
      <MemberSignature Language="C#" Value="public override System.Xaml.XamlMember Member { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xaml.XamlMember Member" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlObjectReader.Member" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Member As XamlMember" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xaml::XamlMember ^ Member { System::Xaml::XamlMember ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlMember</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera bieżący <see cref="T:System.Xaml.XamlMember" /> na pozycji czytnika, jeśli pozycja czytnik znajduje się na <see cref="F:System.Xaml.XamlNodeType.StartMember" />.</summary>
        <value>Bieżący element członkowski; lub <see langword="null" /> Jeśli pozycja czytnika nie znajduje się w elemencie członkowskim.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Namespace">
      <MemberSignature Language="C#" Value="public override System.Xaml.NamespaceDeclaration Namespace { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xaml.NamespaceDeclaration Namespace" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlObjectReader.Namespace" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Namespace As NamespaceDeclaration" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xaml::NamespaceDeclaration ^ Namespace { System::Xaml::NamespaceDeclaration ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.NamespaceDeclaration</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera deklaracji przestrzeni nazw XAML z bieżącej pozycji czytnika.</summary>
        <value>Deklaracja przestrzeni nazw XAML, jeśli czytnik jest ustawiony na <see cref="F:System.Xaml.XamlNodeType.NamespaceDeclaration" />; w przeciwnym razie <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość zwraca wynik z systemem innym niż null tylko wtedy, gdy <xref:System.Xaml.XamlObjectReader.NodeType%2A> właściwość bieżącego położenia czytnik jest <xref:System.Xaml.XamlNodeType.NamespaceDeclaration>. Nie są rozpoznawane przestrzeni nazw, która jest oparta na kontekście inne typy węzłów, takie jak obiekt w tej przestrzeni nazw.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NodeType">
      <MemberSignature Language="C#" Value="public override System.Xaml.XamlNodeType NodeType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xaml.XamlNodeType NodeType" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlObjectReader.NodeType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property NodeType As XamlNodeType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xaml::XamlNodeType NodeType { System::Xaml::XamlNodeType get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlNodeType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera typ bieżącego węzła.</summary>
        <value>Typ bieżącego węzła.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Korzystając z <xref:System.Xaml.XamlObjectReader> interfejsów API, zwykle sprawdzania <xref:System.Xaml.XamlObjectReader.NodeType%2A> właściwości po każdej operacji, która potencjalnie zmienia pozycję czytnika, takich jak <xref:System.Xaml.XamlObjectReader.Read%2A>, <xref:System.Xaml.XamlReader.ReadSubtree%2A>, lub <xref:System.Xaml.XamlReader.Skip%2A> metody. <xref:System.Xaml.XamlObjectReader.NodeType%2A> Wskazuje informacje, które można uzyskać od bieżącego położenia czytnika i metod, które można wywołać funkcji next. Na przykład można tu <xref:System.Xaml.XamlObjectReader.Member%2A>, <xref:System.Xaml.XamlObjectReader.Type%2A>, <xref:System.Xaml.XamlObjectReader.Value%2A>, lub <xref:System.Xaml.XamlObjectReader.Instance%2A> właściwości; lub użytkownik może wywołać <xref:System.Xaml.XamlReader.Skip%2A> metodę, jeśli nie jesteś zainteresowany zawartości bieżącego typu węzła.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public override bool Read ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Read() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlObjectReader.Read" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Read () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Read();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Udostępnia następnego węzła XAML z wykresu obiektu źródłowego, jeśli węzeł jest dostępny.</summary>
        <returns>
          <see langword="true" /> Jeśli węzeł jest dostępny; w przeciwnym razie <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Po wywołaniu metody <xref:System.Xaml.XamlObjectReader.Read%2A> — metoda i uzyskiwanie `true` wyników, należy zwykle uzyskują dostęp do właściwości węzła. W zależności od <xref:System.Xaml.XamlObjectReader.NodeType%2A> właściwości, można uzyskać dostęp <xref:System.Xaml.XamlObjectReader.Member%2A>, <xref:System.Xaml.XamlObjectReader.Type%2A>, <xref:System.Xaml.XamlObjectReader.Value%2A>, lub <xref:System.Xaml.XamlObjectReader.Instance%2A> właściwości.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SchemaContext">
      <MemberSignature Language="C#" Value="public override System.Xaml.XamlSchemaContext SchemaContext { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xaml.XamlSchemaContext SchemaContext" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlObjectReader.SchemaContext" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property SchemaContext As XamlSchemaContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xaml::XamlSchemaContext ^ SchemaContext { System::Xaml::XamlSchemaContext ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlSchemaContext</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera obiekt, który zawiera informacje o schemacie dla zestawu informacji.</summary>
        <value>Obiekt, który zawiera informacje o schemacie dla zestawu informacji.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Kontekst schematu jest koncepcyjny pośrednik między schematu w tym sensie, konwencjonalnej i obsługa założeń schematu XAML przez konkretnego procesorów XAML (analiza kodu, operacji odczytu i zapisu).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Type">
      <MemberSignature Language="C#" Value="public override System.Xaml.XamlType Type { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xaml.XamlType Type" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlObjectReader.Type" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Type As XamlType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xaml::XamlType ^ Type { System::Xaml::XamlType ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera <see cref="T:System.Xaml.XamlType" /> obiektu w bieżącym położeniu czytnika.</summary>
        <value>
          <see cref="T:System.Xaml.XamlType" /> Obiektu w bieżącym położeniu czytnika; lub <see langword="null" /> Jeśli pozycja nie znajduje się w obiekcie.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość zwraca wynik z systemem innym niż null tylko wtedy, gdy <xref:System.Xaml.XamlObjectReader.NodeType%2A> właściwość bieżącego położenia czytnik jest <xref:System.Xaml.XamlNodeType.StartObject>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public override object Value { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Value" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlObjectReader.Value" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Value As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Object ^ Value { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość węzła w bieżącym położeniu czytnika.</summary>
        <value>Wartość bieżącego węzła; lub <see langword="null" />, jeśli pozycja czytnik nie jest włączony <see cref="F:System.Xaml.XamlNodeType.Value" /> typu węzła.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>