<Type Name="IDestinationTypeProvider" FullName="System.Xaml.IDestinationTypeProvider">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="9c0902f060cf70a990455e9cd7000558331b3fac" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36444933" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IDestinationTypeProvider" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IDestinationTypeProvider" />
  <TypeSignature Language="DocId" Value="T:System.Xaml.IDestinationTypeProvider" />
  <TypeSignature Language="VB.NET" Value="Public Interface IDestinationTypeProvider" />
  <TypeSignature Language="C++ CLI" Value="public interface class IDestinationTypeProvider" />
  <TypeSignature Language="F#" Value="type IDestinationTypeProvider = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Xaml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>Reprezentuje usługę, która może zwrócić identyfikatora systemowego typu CLR dla typu docelowego. Typ docelowy jest konieczne, gdy typ docelowy dla operacji ustawienia właściwości pośrednio został zgłoszony przez odbicie lub innych mechanizmów.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Typ zwracany przez <xref:System.Xaml.IDestinationTypeProvider.GetDestinationType%2A> rozwiązać za pomocą bieżący kontekst schematu XAML z bieżącej pozycji strumienia węzłów XAML.  
  
 Jeśli używasz system typów języka XAML, zgodnie z implementacją usług .NET Framework XAML i dostępu w kontekście usługi w tych warunkach <xref:System.Xaml.IDestinationTypeProvider.GetDestinationType%2A> zwraca <xref:System.Xaml.XamlType.UnderlyingType%2A> na podstawie dostępnych informacji o systemie typu XAML i kontekst schematu XAML na podstawie CLR.  
  
 Ta usługa jest odpowiednie w sytuacjach, gdy czysty odbicia CLR lub innych mechanizmów może nie zapewniają wystarczających informacji o typie docelowym. Poniżej przedstawiono listę niektórych możliwe scenariusze dla <xref:System.Xaml.IDestinationTypeProvider>:  
  
-   System typów CLR raporty typu pośrednie ze względu na sposób CLR definiuje i używa typów i ma wartość true, docelowego. Na przykład interfejs API programu .NET Framework XAML Services korzystanie z tej usługi podczas przetwarzania członków zdarzenia. Zdarzenia są zgłaszane przez pure odbicia CLR jako <xref:System.Delegate>.  
  
-   Chcesz zapewnić zgodność oczekiwanego typu, które mogą wytwarzać konwertera typu docelowego użycia konwertera typu. Ten scenariusz jest przydatne, gdy typ docelowy jest sparametryzowanych lub ogólny.  
  
-   Twoje konwerter wartości jest wywoływana z użycie zagnieżdżone w innym konwerter wartości. W takim przypadku <xref:System.Xaml.IDestinationTypeProvider.GetDestinationType%2A> cofa zagnieżdżanie i zwraca typ docelowy rzeczywiste ustawienia właściwości, zamiast zwracać typ danych wyjściowych wszystkie pośredniczące konwertera wartości.  
  
 Typy konwerterów i rozszerzeń znaczników mogą wykonywać kwerendę o <xref:System.Xaml.IDestinationTypeProvider> jako usługa w kontekście usługi zapewnianej przez moduł zapisujący obiektu XAML, gdy moduł zapisywania obiektów XAML wywoła zachowanie konwersji wartości. Aby uzyskać więcej informacji, zobacz [typy konwerterów i rozszerzenia znaczników dla XAML](~/docs/framework/xaml-services/type-converters-and-markup-extensions-for-xaml.md) i [usługi kontekstów dostępne dla typów konwerterów i rozszerzeń znaczników](~/docs/framework/xaml-services/service-contexts-available-to-type-converters-and-markup-extensions.md).  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Xaml.XamlObjectWriter" />
  </Docs>
  <Members>
    <Member MemberName="GetDestinationType">
      <MemberSignature Language="C#" Value="public Type GetDestinationType ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Type GetDestinationType() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.IDestinationTypeProvider.GetDestinationType" />
      <MemberSignature Language="VB.NET" Value="Public Function GetDestinationType () As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Type ^ GetDestinationType();" />
      <MemberSignature Language="F#" Value="abstract member GetDestinationType : unit -&gt; Type" Usage="iDestinationTypeProvider.GetDestinationType " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zwraca CLR <see cref="T:System.Type" /> identyfikujący typ docelowy dla rozszerzenia odpowiedniego typu konwertera lub znaczników.</summary>
        <returns>Środowisko CLR <see cref="T:System.Type" /> wartość dla typu docelowego.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda nie ma wejściowego parametru. Co zwrócić (i czy mają być zwracane cokolwiek innego niż `null`) zależy od bieżącego położenia węzła w strumieniu węzłów XAML.  
  
## <a name="service-implementers"></a>Implementacje usługi  
 Jeśli reimplement tej usługi <xref:System.Xaml.IDestinationTypeProvider.GetDestinationType%2A> metoda powinna zwrócić typ, który oczekuje konwertera rozszerzenia lub typ znaczników do sprawdzenia przed jego najbardziej konkretny typ konwersji lub dane wyjściowe.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>