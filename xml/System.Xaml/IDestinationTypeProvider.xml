<Type Name="IDestinationTypeProvider" FullName="System.Xaml.IDestinationTypeProvider">
  <Metadata><Meta Name="ms.openlocfilehash" Value="7377e7d5e09e53d4e38f48ac87c8d7c850bb504a" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69416410" /></Metadata><TypeSignature Language="C#" Value="public interface IDestinationTypeProvider" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IDestinationTypeProvider" />
  <TypeSignature Language="DocId" Value="T:System.Xaml.IDestinationTypeProvider" />
  <TypeSignature Language="VB.NET" Value="Public Interface IDestinationTypeProvider" />
  <TypeSignature Language="C++ CLI" Value="public interface class IDestinationTypeProvider" />
  <TypeSignature Language="F#" Value="type IDestinationTypeProvider = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Xaml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>Reprezentuje usługę, która może zwracać identyfikator systemu typów CLR dla typu docelowego. Typ docelowy jest istotny, gdy typ docelowy dla operacji ustawienia właściwości jest pośrednio raportowany przez odbicie lub inne mechanizmy.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Typ, który jest zwracany przez <xref:System.Xaml.IDestinationTypeProvider.GetDestinationType%2A> jest rozpoznawany od bieżącego położenia strumienia węzła XAML przy użyciu bieżącego kontekstu schematu XAML.  
  
 W przypadku używania systemu typu XAML zgodnie z implementacją .NET Framework usług XAML i uzyskiwania dostępu do kontekstu usługi w ramach tych <xref:System.Xaml.IDestinationTypeProvider.GetDestinationType%2A> warunków <xref:System.Xaml.XamlType.UnderlyingType%2A> funkcja zwraca wartość na podstawie dostępnych informacji o systemie typu XAML i kontekst schematu XAML opartych na środowisku CLR.  
  
 Ta usługa ma zastosowanie do sytuacji, w których czyste odbicie środowiska CLR lub inne mechanizmy mogą nie zapewniać wystarczającej ilości informacji o typie docelowym. Poniżej znajduje się lista następujących scenariuszy <xref:System.Xaml.IDestinationTypeProvider>:  
  
-   System typów CLR zgłasza typ pośredni ze względu na to, jak środowisko CLR definiuje i używa typów, i chcesz mieć prawdziwy typ docelowy. Na przykład interfejsy API w .NET Framework usługach XAML używają tej usługi wewnętrznie podczas przetwarzania członków zdarzeń. Zdarzenia są zgłaszane przez czyste odbicie środowiska CLR <xref:System.Delegate>jako.  
  
-   Chcesz upewnić się, że typ docelowy użycia konwertera typów jest zgodny z oczekiwanym typem, który można utworzyć konwertera typów. Ten scenariusz jest przydatny, gdy typ docelowy jest sparametryzowane lub ogólny.  
  
-   Twój konwerter wartości jest wywoływany z użycia, który jest zagnieżdżony w innym konwerterze wartości. W tym przypadku powoduje <xref:System.Xaml.IDestinationTypeProvider.GetDestinationType%2A> odróżnienie zagnieżdżenia i zwraca typ docelowy rzeczywistej właściwości, które są ustawiane, zamiast zwracać typ danych wyjściowych dowolnego konwertera wartości.  
  
 Konwertery typów i rozszerzenia znaczników mogą wykonywać <xref:System.Xaml.IDestinationTypeProvider> zapytania jako usługa w kontekście usługi dostarczanym przez moduł zapisujący obiektów XAML, gdy moduł zapisujący obiektów XAML wywoła zachowanie konwersji wartości. Aby uzyskać więcej informacji, zobacz [Typy konwerterów i rozszerzenia znaczników dla XAML](~/docs/framework/xaml-services/type-converters-and-markup-extensions-for-xaml.md) i [kontekstów usługi dostępne dla konwerterów typów i rozszerzeń znaczników](~/docs/framework/xaml-services/service-contexts-available-to-type-converters-and-markup-extensions.md).  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Xaml.XamlObjectWriter" />
    <related type="Article" href="https://msdn.microsoft.com/library/db07a952-05ce-4aa4-b6f9-aac7397d0326">Konwertery typów lub rozszerzenia znaczników dla języka XAML</related>
  </Docs>
  <Members>
    <Member MemberName="GetDestinationType">
      <MemberSignature Language="C#" Value="public Type GetDestinationType ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Type GetDestinationType() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.IDestinationTypeProvider.GetDestinationType" />
      <MemberSignature Language="VB.NET" Value="Public Function GetDestinationType () As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Type ^ GetDestinationType();" />
      <MemberSignature Language="F#" Value="abstract member GetDestinationType : unit -&gt; Type" Usage="iDestinationTypeProvider.GetDestinationType " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zwraca CLR <see cref="T:System.Type" /> , który identyfikuje typ docelowy dla odpowiedniego konwertera typów lub rozszerzenia znacznika.</summary>
        <returns>Wartość CLR <see cref="T:System.Type" /> dla typu docelowego.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda nie ma parametru wejściowego. Elementy, które mają zostać zwrócone (oraz czy mają być `null`zwracane elementy inne niż), są określane przez bieżącą pozycję węzła w strumieniu węzła XAML.  
  
## <a name="service-implementers"></a>Realizatorzy usług  
 W <xref:System.Xaml.IDestinationTypeProvider.GetDestinationType%2A> przypadku ponownej implementacji tej usługi Metoda powinna zwracać typ, który jest oczekiwany przez rozszerzenie znacznika lub konwerter typu do sprawdzenia względem jego najbardziej konkretnej konwersji lub typu danych wyjściowych.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
