<Type Name="IDestinationTypeProvider" FullName="System.Xaml.IDestinationTypeProvider">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="9c0902f060cf70a990455e9cd7000558331b3fac" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="08/24/2018" />
    <Meta Name="ms.locfileid" Value="36444933" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IDestinationTypeProvider" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IDestinationTypeProvider" />
  <TypeSignature Language="DocId" Value="T:System.Xaml.IDestinationTypeProvider" />
  <TypeSignature Language="VB.NET" Value="Public Interface IDestinationTypeProvider" />
  <TypeSignature Language="C++ CLI" Value="public interface class IDestinationTypeProvider" />
  <TypeSignature Language="F#" Value="type IDestinationTypeProvider = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Xaml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>Reprezentuje usługę, która może zwracać identyfikatora systemowego typu CLR dla typu docelowego. Typ docelowy jest istotne, gdy typ docelowy dla operacji ustawienia właściwości pośrednio zostaje zgłoszone przez odbicie lub innych mechanizmów.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Typ, który jest zwracany przez <xref:System.Xaml.IDestinationTypeProvider.GetDestinationType%2A> rozwiązania z bieżącego położenia strumień węzłów XAML przy użyciu bieżący kontekst schematu XAML.  
  
 Jeśli używasz systemie typu XAML jako implementowany przez usług programu .NET Framework XAML i dostęp do kontekstu usługi w tych warunkach <xref:System.Xaml.IDestinationTypeProvider.GetDestinationType%2A> zwraca <xref:System.Xaml.XamlType.UnderlyingType%2A> na podstawie dostępnych informacji o systemie typu XAML i kontekst schematu XAML na podstawie środowiska CLR.  
  
 Ta usługa jest odpowiednie w sytuacjach, gdzie czyste odbicia CLR lub innych mechanizmów mogą nie dostarczać wystarczających informacji na temat typu miejsca docelowego. Poniżej przedstawiono listę niektórych scenariusze dla <xref:System.Xaml.IDestinationTypeProvider>:  
  
-   System typów CLR raporty typu pośrednie ze względu na sposób CLR definiuje i korzysta z typów i ma wartość true, docelowego. Na przykład interfejsów API w programie .NET Framework XAML Services korzystanie z tej usługi podczas przetwarzania elementów członkowskich zdarzeń. Zdarzenia są zgłaszane przez czystego odbicia CLR jako <xref:System.Delegate>.  
  
-   Chcesz mieć pewność, że docelowy typ użycia konwertera typu pasuje do oczekiwanego typu, która może spowodować konwertera typów. Ten scenariusz jest przydatne, gdy typ docelowy jest sparametryzowanych lub ogólny.  
  
-   Usługi konwertera wartości jest wywoływana z użycia zagnieżdżona w innej konwertera wartości. W tym przypadku <xref:System.Xaml.IDestinationTypeProvider.GetDestinationType%2A> rozwija zagnieżdżania i zwraca typ docelowy rzeczywiste właściwości zestawu, zamiast zwracać typ danych wyjściowych wszystkie pośredniczące konwertera wartości.  
  
 Typy konwerterów i rozszerzeń znaczników można wyszukiwać <xref:System.Xaml.IDestinationTypeProvider> jako usługi w kontekście usługi, dostarczone przez Edytor XAML obiektu, gdy moduł zapisywania obiektów XAML wywołuje zachowanie konwersji wartości. Aby uzyskać więcej informacji, zobacz [typy konwerterów i rozszerzenia znaczników dla XAML](~/docs/framework/xaml-services/type-converters-and-markup-extensions-for-xaml.md) i [usługi kontekstów dostępne dla typów konwerterów i rozszerzeń znaczników](~/docs/framework/xaml-services/service-contexts-available-to-type-converters-and-markup-extensions.md).  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Xaml.XamlObjectWriter" />
  </Docs>
  <Members>
    <Member MemberName="GetDestinationType">
      <MemberSignature Language="C#" Value="public Type GetDestinationType ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Type GetDestinationType() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.IDestinationTypeProvider.GetDestinationType" />
      <MemberSignature Language="VB.NET" Value="Public Function GetDestinationType () As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Type ^ GetDestinationType();" />
      <MemberSignature Language="F#" Value="abstract member GetDestinationType : unit -&gt; Type" Usage="iDestinationTypeProvider.GetDestinationType " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zwraca CLR <see cref="T:System.Type" /> określający typ docelowy dla odpowiedniego typu rozszerzenia konwertera lub znaczników.</summary>
        <returns>CLR <see cref="T:System.Type" /> wartość dla typu docelowego.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda nie ma danych wejściowych parametru. Co należy powrócić (i określ, czy inne niż niczego zwracać `null`) zależy od bieżącej pozycji węzła w strumień węzłów XAML.  
  
## <a name="service-implementers"></a>Implementacje usługi  
 Jeśli ponownie tej usługi <xref:System.Xaml.IDestinationTypeProvider.GetDestinationType%2A> metoda powinna zwracać typ, który oczekuje, że rozszerzenie lub typ konwerter znaczników sprawdzania typu bardziej konkretny od pozostałych konwersji ani danych wyjściowych.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>