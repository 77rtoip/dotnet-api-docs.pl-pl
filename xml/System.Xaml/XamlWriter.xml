<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="XamlWriter.xml" source-language="en-US" target-language="pl-PL">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5b0eee4990fee035e3caee65baff737024203a8eb.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b0eee4990fee035e3caee65baff737024203a8eb</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Xaml.XamlWriter">
          <source>Provides default implementation and base class definitions for a XAML writer.</source>
          <target state="translated">Udostępnia domyślne implementacji i base definicje klas dla edytora XAML.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Xaml.XamlWriter">
          <source>This is not a working default XAML writer; you must either derive from <ph id="ph1">&lt;see cref="T:System.Xaml.XamlWriter" /&gt;</ph> and implement its abstract members, or use an existing <ph id="ph2">&lt;see cref="T:System.Xaml.XamlWriter" /&gt;</ph> derived class.</source>
          <target state="translated">Nie jest to edytor XAML domyślne pracy; należy albo musi pochodzić od <ph id="ph1">&lt;see cref="T:System.Xaml.XamlWriter" /&gt;</ph> i implementować jego abstrakcyjne elementy członkowskie, albo użyć istniejącego <ph id="ph2">&lt;see cref="T:System.Xaml.XamlWriter" /&gt;</ph> klasy.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.XamlWriter">
          <source>The two most relevant practical derived classes of <ph id="ph1">&lt;xref:System.Xaml.XamlWriter&gt;</ph> are the <ph id="ph2">&lt;xref:System.Xaml.XamlXmlWriter&gt;</ph> and <ph id="ph3">&lt;xref:System.Xaml.XamlObjectWriter&gt;</ph> classes, as the following details explain:</source>
          <target state="translated">Dwa praktyczne najistotniejsza pochodnych klas <ph id="ph1">&lt;xref:System.Xaml.XamlWriter&gt;</ph> są <ph id="ph2">&lt;xref:System.Xaml.XamlXmlWriter&gt;</ph> i <ph id="ph3">&lt;xref:System.Xaml.XamlObjectWriter&gt;</ph> klas, co zostało opisane następujące informacje:</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.XamlWriter">
          <source><ph id="ph1">&lt;xref:System.Xaml.XamlXmlWriter&gt;</ph> processes a XAML node set and produces an XML text file.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xaml.XamlXmlWriter&gt;</ph> przetwarza zestaw węzłów XAML i tworzy plik tekstowy XML.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.XamlWriter">
          <source>This class might be used for serialization or as part of the function of a tool that works with in-memory representation of XAML and produces XAML file output.</source>
          <target state="translated">Ta klasa może być używana do serializacji lub jako część funkcji narzędzia, która współdziała z reprezentacji w pamięci XAML i generuje dane wyjściowe w pliku XAML.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.XamlWriter">
          <source><ph id="ph1">&lt;xref:System.Xaml.XamlObjectWriter&gt;</ph> processes a XAML node set and produces an object graph.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xaml.XamlObjectWriter&gt;</ph> przetwarza zestaw węzłów XAML i tworzy wykres obiektu.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.XamlWriter">
          <source>This class might be used as part of a full or partial customization of a technology's XAML parser.</source>
          <target state="translated">Ta klasa może być używana jako część pełnej lub częściowej dostosowywania to technologia analizatora języka XAML.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.XamlWriter">
          <source><ph id="ph1">&lt;xref:System.Xaml.XamlWriterSettings&gt;</ph> is a class for settings that are used by a <ph id="ph2">&lt;xref:System.Xaml.XamlWriter&gt;</ph>; however, by default, the <ph id="ph3">&lt;xref:System.Xaml.XamlWriterSettings&gt;</ph> class does not hold any specific settings.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xaml.XamlWriterSettings&gt;</ph> jest klasą ustawień, które są używane przez <ph id="ph2">&lt;xref:System.Xaml.XamlWriter&gt;</ph>; jednak domyślnie <ph id="ph3">&lt;xref:System.Xaml.XamlWriterSettings&gt;</ph> klasa nie ma żadnych określonych ustawień.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.XamlWriter">
          <source>The <ph id="ph1">&lt;xref:System.Xaml.XamlWriter&gt;</ph> base constructor does not use this settings class as an argument, nor does any other <ph id="ph2">&lt;xref:System.Xaml.XamlWriter&gt;</ph> member.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xaml.XamlWriter&gt;</ph> Jako argument konstruktora podstawowego nie używa tej klasy ustawień, jak również inne nie <ph id="ph2">&lt;xref:System.Xaml.XamlWriter&gt;</ph> elementu członkowskiego.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.XamlWriter">
          <source>Instead, the <ph id="ph1">&lt;xref:System.Xaml.XamlXmlWriter&gt;</ph> and <ph id="ph2">&lt;xref:System.Xaml.XamlObjectWriter&gt;</ph> classes include their own settings classes as construction arguments.</source>
          <target state="translated">Zamiast tego <ph id="ph1">&lt;xref:System.Xaml.XamlXmlWriter&gt;</ph> i <ph id="ph2">&lt;xref:System.Xaml.XamlObjectWriter&gt;</ph> klasy mają własne ustawienia klas jako argumenty konstrukcji.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.XamlWriter">
          <source>These settings classes are <ph id="ph1">&lt;xref:System.Xaml.XamlXmlWriterSettings&gt;</ph> and <ph id="ph2">&lt;xref:System.Xaml.XamlObjectWriterSettings&gt;</ph>.</source>
          <target state="translated">Klasy te ustawienia są <ph id="ph1">&lt;xref:System.Xaml.XamlXmlWriterSettings&gt;</ph> i <ph id="ph2">&lt;xref:System.Xaml.XamlObjectWriterSettings&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.XamlWriter">
          <source>The settings classes define actual settings values and are based on <ph id="ph1">&lt;xref:System.Xaml.XamlWriterSettings&gt;</ph>, so that they can use the <ph id="ph2">&lt;xref:System.Xaml.XamlWriterSettings&gt;</ph> merge feature.</source>
          <target state="translated">Klasy ustawień zdefiniować ustawienia wartości rzeczywistej wartości i są oparte na <ph id="ph1">&lt;xref:System.Xaml.XamlWriterSettings&gt;</ph>, tak aby mogli używać <ph id="ph2">&lt;xref:System.Xaml.XamlWriterSettings&gt;</ph> funkcja scalania.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlWriter.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Xaml.XamlWriter" /&gt;</ph> class.</source>
          <target state="translated">Inicjuje nowe wystąpienie klasy <ph id="ph1">&lt;see cref="T:System.Xaml.XamlWriter" /&gt;</ph> klasy.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlWriter.Close">
          <source>Closes the XAML writer object.</source>
          <target state="translated">Zamyka obiekt składnika zapisywania języka XAML.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlWriter.Close">
          <source>In the base implementation, calling <ph id="ph1">&lt;xref:System.Xaml.XamlWriter.Close%2A&gt;</ph> calls the <ph id="ph2">&lt;xref:System.Xaml.XamlWriter.Dispose%2A&gt;</ph> method with the <ph id="ph3">`isDisposing`</ph> parameter as <ph id="ph4">`true`</ph>.</source>
          <target state="translated">W podstawowej implementacji wywoływania <ph id="ph1">&lt;xref:System.Xaml.XamlWriter.Close%2A&gt;</ph> wywołania <ph id="ph2">&lt;xref:System.Xaml.XamlWriter.Dispose%2A&gt;</ph> metody z <ph id="ph3">`isDisposing`</ph> parametr jako <ph id="ph4">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlWriter.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to release the managed resources; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> Aby zwolnić zasoby zarządzane. w przeciwnym razie <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlWriter.Dispose(System.Boolean)">
          <source>Releases the unmanaged resources used by the <ph id="ph1">&lt;see cref="T:System.Xaml.XamlWriter" /&gt;</ph> and optionally releases the managed resources.</source>
          <target state="translated">Zwalnia zasoby niezarządzane używane przez <ph id="ph1">&lt;see cref="T:System.Xaml.XamlWriter" /&gt;</ph> i opcjonalnie zwalnia zasoby zarządzane.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlWriter.Dispose(System.Boolean)">
          <source>You must call the base class to get <ph id="ph1">&lt;xref:System.Xaml.XamlWriter.IsDisposed%2A&gt;</ph><ph id="ph2"> = </ph><ph id="ph3">`true`</ph>.</source>
          <target state="translated">Należy wywołać klasy podstawowej, aby uzyskać <ph id="ph1">&lt;xref:System.Xaml.XamlWriter.IsDisposed%2A&gt;</ph> <ph id="ph2"> = </ph> <ph id="ph3">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="P:System.Xaml.XamlWriter.IsDisposed">
          <source>Gets whether <ph id="ph1">&lt;see cref="M:System.Xaml.XamlWriter.Dispose(System.Boolean)" /&gt;</ph> has been called.</source>
          <target state="translated">Pobiera czy <ph id="ph1">&lt;see cref="M:System.Xaml.XamlWriter.Dispose(System.Boolean)" /&gt;</ph> została wywołana.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlWriter.IsDisposed">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;see cref="M:System.Xaml.XamlWriter.Dispose(System.Boolean)" /&gt;</ph> has been called; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> Jeśli <ph id="ph2">&lt;see cref="M:System.Xaml.XamlWriter.Dispose(System.Boolean)" /&gt;</ph> została wywołana; w przeciwnym razie <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="P:System.Xaml.XamlWriter.SchemaContext">
          <source>When implemented in a derived class, gets the active XAML schema context.</source>
          <target state="translated">Po zaimplementowaniu w klasie pochodnej pobiera aktywny kontekst schematu XAML.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlWriter.SchemaContext">
          <source>The active XAML schema context.</source>
          <target state="translated">Aktywny kontekst schematu XAML.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlWriter.System#IDisposable#Dispose">
          <source>See <ph id="ph1">&lt;see cref="M:System.IDisposable.Dispose" /&gt;</ph>.</source>
          <target state="translated">Zobacz <ph id="ph1">&lt;see cref="M:System.IDisposable.Dispose" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlWriter.WriteEndMember">
          <source>When implemented in a derived class, produces the representation of an end member node.</source>
          <target state="translated">Po zaimplementowaniu w klasie pochodnej tworzy reprezentację zakończenia węzeł elementu członkowskiego.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlWriter.WriteEndObject">
          <source>When implemented in a derived class, produces the representation of an end object node.</source>
          <target state="translated">Po zaimplementowaniu w klasie pochodnej tworzy reprezentację końcowego obiektu węzła.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlWriter.WriteGetObject">
          <source>When implemented in a derived class, produces an object for cases where the object is a default or implicit value of the property being set, instead of being specified as a discrete object value in the input XAML node set.</source>
          <target state="translated">Po zaimplementowaniu w klasie pochodnej tworzy obiekt do przypadkach, gdy obiekt jest domyślne lub niejawne wartości właściwości jest ustawiona, zamiast określany jako wartość discrete obiektu w zestawie wejściowym węzła XAML.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlWriter.WriteNamespace(System.Xaml.NamespaceDeclaration)">
          <source>The namespace declaration to write.</source>
          <target state="translated">Deklaracja przestrzeni nazw do zapisu.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlWriter.WriteNamespace(System.Xaml.NamespaceDeclaration)">
          <source>When implemented in a derived class, writes a XAML namespace declaration node.</source>
          <target state="translated">Po zaimplementowaniu w klasie pochodnej, zapisuje węzła deklaracji przestrzeni nazw XAML.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlWriter.WriteNode(System.Xaml.XamlReader)">
          <source>The reader to use for node determination.</source>
          <target state="translated">Czytnik do użycia na potrzeby określenia węzła.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlWriter.WriteNode(System.Xaml.XamlReader)">
          <source>Performs switching based on node type from the XAML reader (<ph id="ph1">&lt;see cref="P:System.Xaml.XamlReader.NodeType" /&gt;</ph>) and calls the relevant <ph id="ph2">&lt;see langword="Write" /&gt;</ph> method for the writer implementation.</source>
          <target state="translated">Wykonuje przełączania na podstawie typu węzła z czytnika XAML (<ph id="ph1">&lt;see cref="P:System.Xaml.XamlReader.NodeType" /&gt;</ph>) i wywołuje odpowiednie <ph id="ph2">&lt;see langword="Write" /&gt;</ph> metodę wdrażania składnika zapisywania.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlWriter.WriteNode(System.Xaml.XamlReader)">
          <source>Notes for Inheritors</source>
          <target state="translated">Uwagi dotyczące obiektów dziedziczących</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlWriter.WriteNode(System.Xaml.XamlReader)">
          <source>The <ph id="ph1">&lt;xref:System.Xaml.XamlWriter.WriteNode%2A&gt;</ph> method is not a virtual method because it has practical implementation for all existing <ph id="ph2">&lt;xref:System.Xaml.XamlNodeType&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xaml.XamlWriter.WriteNode%2A&gt;</ph> Metoda nie jest metodą wirtualną, ponieważ ma ona wdrożeniem dla wszystkich istniejących <ph id="ph2">&lt;xref:System.Xaml.XamlNodeType&gt;</ph> wartości.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlWriter.WriteNode(System.Xaml.XamlReader)">
          <source>Based on <ph id="ph1">&lt;xref:System.Xaml.XamlNodeType&gt;</ph>, <ph id="ph2">&lt;xref:System.Xaml.XamlWriter.WriteNode%2A&gt;</ph> calls into the <ph id="ph3">`Write`</ph> virtual members that are dedicated to particular node types.</source>
          <target state="translated">Na podstawie <ph id="ph1">&lt;xref:System.Xaml.XamlNodeType&gt;</ph>, <ph id="ph2">&lt;xref:System.Xaml.XamlWriter.WriteNode%2A&gt;</ph> wywołano <ph id="ph3">`Write`</ph> wirtualne elementy członkowskie, które są przeznaczone do określonego węzła typów.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlWriter.WriteNode(System.Xaml.XamlReader)">
          <source>If you have an advanced XAML writing scenario that expands the XAML type system and XAML node stream concept so that new node types are defined, do not use <ph id="ph1">&lt;xref:System.Xaml.XamlWriter.WriteNode%2A&gt;</ph> calls in your logic.</source>
          <target state="translated">Jeśli masz zaawansowanym scenariuszu zapis XAML rozwijający system typów języka XAML i koncepcji strumienia węzłów XAML tak, to nowy są definiowane typy węzłów, nie używaj <ph id="ph1">&lt;xref:System.Xaml.XamlWriter.WriteNode%2A&gt;</ph> odwołuje się logiki.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlWriter.WriteNode(System.Xaml.XamlReader)">
          <source>You must instead provide your own alternative for node-type switching logic in the class or in virtual overrides.</source>
          <target state="translated">Zamiast tego należy podać własne alternatywą dla typu węzła przełączania logikę w klasie lub zastąpienia wirtualnego.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlWriter.WriteNode(System.Xaml.XamlReader)">
          <source><ph id="ph1">&lt;paramref name="reader" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="reader" /&gt;</ph> jest <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlWriter.WriteNode(System.Xaml.XamlReader)">
          <source>The default implementation encountered a <ph id="ph1">&lt;see cref="T:System.Xaml.XamlNodeType" /&gt;</ph> that is not in the default enumeration.</source>
          <target state="translated">Domyślna implementacja napotkano <ph id="ph1">&lt;see cref="T:System.Xaml.XamlNodeType" /&gt;</ph> nie jest w wyliczeniu domyślne.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlWriter.WriteStartMember(System.Xaml.XamlMember)">
          <source>The member node to write.</source>
          <target state="translated">Węzeł elementu członkowskiego do zapisu.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlWriter.WriteStartMember(System.Xaml.XamlMember)">
          <source>When implemented in a derived class, writes the representation of a start member node.</source>
          <target state="translated">Po zaimplementowaniu w klasie pochodnej, zapisuje reprezentację węzeł elementu członkowskiego początkowy.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlWriter.WriteStartObject(System.Xaml.XamlType)">
          <source>The XAML type of the object to write.</source>
          <target state="translated">Typ obiektu do zapisania XAML.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlWriter.WriteStartObject(System.Xaml.XamlType)">
          <source>When implemented in a derived class, writes the representation of a start object node.</source>
          <target state="translated">Po zaimplementowaniu w klasie pochodnej, zapisuje reprezentację węzeł obiekt początkowy.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlWriter.WriteValue(System.Object)">
          <source>The value to write.</source>
          <target state="translated">Wartość do zapisu.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlWriter.WriteValue(System.Object)">
          <source>When implemented in a derived class, writes a value node.</source>
          <target state="translated">Po zaimplementowaniu w klasie pochodnej, zapisuje węzła wartości.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>