<Type Name="XamlMember" FullName="System.Xaml.XamlMember">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="81d50a3ca76157834fc7eb0634ae1d13af8fe855" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36444394" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class XamlMember : IEquatable&lt;System.Xaml.XamlMember&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XamlMember extends System.Object implements class System.IEquatable`1&lt;class System.Xaml.XamlMember&gt;" />
  <TypeSignature Language="DocId" Value="T:System.Xaml.XamlMember" />
  <TypeSignature Language="VB.NET" Value="Public Class XamlMember&#xA;Implements IEquatable(Of XamlMember)" />
  <TypeSignature Language="C++ CLI" Value="public ref class XamlMember : IEquatable&lt;System::Xaml::XamlMember ^&gt;" />
  <TypeSignature Language="F#" Value="type XamlMember = class&#xA;    interface IEquatable&lt;XamlMember&gt;" />
  <AssemblyInfo>
    <AssemblyName>System.Xaml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IEquatable&lt;System.Xaml.XamlMember&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="226aa-101">Udostępnia identyfikatora systemowego typu XAML dla elementów członkowskich typu XAML.</span>
      <span class="sxs-lookup">
        <span data-stu-id="226aa-101">Provides the XAML type system identifier for members of XAML types.</span>
      </span>
      <span data-ttu-id="226aa-102">Identyfikator jest używany przez czytelników XAML i zapisywania XAML podczas przetwarzania elementu członkowskiego węzłów (gdy czytnik XAML jest ustawiony na <see cref="F:System.Xaml.XamlNodeType.StartMember" />), a także na ogólne logiki system typu XAML.</span>
      <span class="sxs-lookup">
        <span data-stu-id="226aa-102">The identifier is used by XAML readers and XAML writers during processing of member nodes (when the XAML reader is positioned on a <see cref="F:System.Xaml.XamlNodeType.StartMember" />) and also for general XAML type system logic.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="226aa-103"><xref:System.Xaml.XamlMember> Służy do zwracania informacji dotyczących składnika XAML trzy metody: standardowy wspólnego języka środowiska uruchomieniowego (języka wspólnego CLR) odbicia; technika odbicia tylko odwołanie do wywoływania wewnętrznych interfejsów API tego bit użycie zoptymalizowanych flagi; lub wywołanie wirtualnej zastąpień o `Lookup*` interfejsu API, który jest obsługiwane przez możliwości <xref:System.Xaml.XamlMember> podklasy.</span><span class="sxs-lookup"><span data-stu-id="226aa-103"><xref:System.Xaml.XamlMember> can use three methodologies for returning information about a XAML member: standard common language runtime (CLR) reflection; a reference-only reflection technique calling internal APIs that use optimized bit flags; or calling into virtual overrides of the `Lookup*` API that is provided by possible <xref:System.Xaml.XamlMember> subclasses.</span></span> <span data-ttu-id="226aa-104">Dla większości korzysta z interfejsów API architektury .NET Framework XAML usług i <xref:System.Xaml.XamlMember> interfejsu API, użyj domyślny kontekst schematu XAML.</span><span class="sxs-lookup"><span data-stu-id="226aa-104">For most uses of .NET Framework XAML Services APIs and the <xref:System.Xaml.XamlMember> API, you use the default XAML schema context.</span></span> <span data-ttu-id="226aa-105">Domyślny kontekst schematu XAML dla programu .NET Framework XAML Services używa kopii systemu typu CLR.</span><span class="sxs-lookup"><span data-stu-id="226aa-105">The default XAML schema context for .NET Framework XAML Services uses CLR backing for the type system.</span></span> <span data-ttu-id="226aa-106">Dzięki temu czytników XAML i zapisywania XAML do pracy z dowolnego typu lub elementu członkowskiego, który jest zdefiniowany w lub w inny sposób dostępne do, środowiska CLR i jego technik odbicia.</span><span class="sxs-lookup"><span data-stu-id="226aa-106">This enables the XAML readers and XAML writers to work with any type or member that is defined in, or otherwise available to, the CLR and its reflection techniques.</span></span>  
  
## <a name="lookup-apis-and-xamlmember-derived-classes"></a><span data-ttu-id="226aa-107">Interfejsy API wyszukiwania \* i XamlMember klas pochodnych</span><span class="sxs-lookup"><span data-stu-id="226aa-107">Lookup\* APIs and XamlMember Derived Classes</span></span>  
 <span data-ttu-id="226aa-108"><xref:System.Xaml.XamlMember> definiuje kilka wirtualnych elementów członkowskich, które klasy pochodne mogą zastąpić.</span><span class="sxs-lookup"><span data-stu-id="226aa-108"><xref:System.Xaml.XamlMember> defines several virtual members that derived classes might override.</span></span> <span data-ttu-id="226aa-109">Członkowie mają nazwy, zawsze rozpoczynających się od ciągu `Lookup`.</span><span class="sxs-lookup"><span data-stu-id="226aa-109">These members have names that always start with the string `Lookup`.</span></span> <span data-ttu-id="226aa-110">W pozostałej części interfejsu API nazwę odwołania następnie właściwość, która wpływa na metodę wirtualną.</span><span class="sxs-lookup"><span data-stu-id="226aa-110">The remainder of the API name then references the property that the virtual method influences.</span></span> <span data-ttu-id="226aa-111">Na przykład <xref:System.Xaml.XamlMember> klasy pochodne mogą zastąpić <xref:System.Xaml.XamlMember.LookupTargetType%2A> wpływ jakie zdefiniowane base właściwość <xref:System.Xaml.XamlMember.TargetType%2A> zwraca w klasie pochodnej.</span><span class="sxs-lookup"><span data-stu-id="226aa-111">For example, a <xref:System.Xaml.XamlMember> derived class might override <xref:System.Xaml.XamlMember.LookupTargetType%2A> to influence what the base-defined property <xref:System.Xaml.XamlMember.TargetType%2A> returns in a derived class.</span></span> <span data-ttu-id="226aa-112">Istnieje przewidywania wartości zwracane dla takich właściwości w <xref:System.Xaml.XamlMember> lub istniejących klas pochodnych przeczytaj dokumentację, aby uzyskać odpowiednie `Lookup*` metody.</span><span class="sxs-lookup"><span data-stu-id="226aa-112">You can predict return values for such properties in <xref:System.Xaml.XamlMember> or existing derived classes by reading the documentation for the relevant `Lookup*` methods.</span></span>  
  
 <span data-ttu-id="226aa-113">Celem `Lookup*` metod jest zapewnienie technika rozszerzenia systemu typu XAML, która będzie zawierała <xref:System.Xaml.XamlMember> klasy podstawowej.</span><span class="sxs-lookup"><span data-stu-id="226aa-113">The purpose of the `Lookup*` methods is to provide a XAML type system extension technique that incorporates the <xref:System.Xaml.XamlMember> base class.</span></span> <span data-ttu-id="226aa-114">Przez pochodny <xref:System.Xaml.XamlMember> i zastępowanie `Lookup` wirtualne elementy członkowskie, można zdefiniować pojęcie elementu członkowskiego XAML dla schematu XAML w systemie typów języka XAML nie będąc związanym z charakterystykę bazowego typu systemu lub technologii.</span><span class="sxs-lookup"><span data-stu-id="226aa-114">By deriving from <xref:System.Xaml.XamlMember> and overriding the `Lookup` virtual members, you can define the concept of a XAML member for a XAML schema in a XAML type system without being tied to the specifics of a backing type system or technology.</span></span> <span data-ttu-id="226aa-115">Można również użyć podany kontekst schematu XAML w ramach tego programu i nadal zwracania wyników, który ma.</span><span class="sxs-lookup"><span data-stu-id="226aa-115">You can also use a provided XAML schema context under this scheme and still return the results you want.</span></span>  
  
 <span data-ttu-id="226aa-116">Na przykład należy wziąć pod uwagę <xref:System.Xaml.XamlMember> właściwości <xref:System.Xaml.XamlMember.IsWritePublic%2A>.</span><span class="sxs-lookup"><span data-stu-id="226aa-116">As an example, consider the <xref:System.Xaml.XamlMember> property <xref:System.Xaml.XamlMember.IsWritePublic%2A>.</span></span> <span data-ttu-id="226aa-117">Ta właściwość informuje wywołań tej operacji, takich jak przy użyciu <xref:System.Xaml.XamlWriter> dla serializacji można zapisać wartości dla tego elementu członkowskiego na obiekcie docelowym.</span><span class="sxs-lookup"><span data-stu-id="226aa-117">This property informs callers that operations such as using a <xref:System.Xaml.XamlWriter> for serialization can write a value for this member on a target object.</span></span> <span data-ttu-id="226aa-118">W implementacji domyślnej określenie, czy element członkowski jest zapisywalny jest nawiązywane za pomocą techniki odbicia przed zapasowy CLR <xref:System.Type> i jej elementów członkowskich ( <xref:System.Reflection.MemberInfo>).</span><span class="sxs-lookup"><span data-stu-id="226aa-118">In the default implementation, the determination of whether the member is writable is made by using reflection techniques against the backing CLR <xref:System.Type> and its members (the <xref:System.Reflection.MemberInfo>).</span></span> <span data-ttu-id="226aa-119">W związku z tym domyślnie system typów języka XAML zależy od system typów CLR.</span><span class="sxs-lookup"><span data-stu-id="226aa-119">Therefore, by default, the XAML type system depends on the CLR type system.</span></span> <span data-ttu-id="226aa-120">Jednak usunąć tę zależność potrzeby system typu XAML raportu z <xref:System.Xaml.XamlMember.IsWritePublic%2A> przez zastąpienie interfejsu API <xref:System.Xaml.XamlMember.LookupIsWritePublic%2A>.</span><span class="sxs-lookup"><span data-stu-id="226aa-120">However, you can remove this dependency for your XAML type system reporting of <xref:System.Xaml.XamlMember.IsWritePublic%2A> by overriding the API <xref:System.Xaml.XamlMember.LookupIsWritePublic%2A>.</span></span> <span data-ttu-id="226aa-121">W ramach zastąpienia, można użyć innych oznaczeń, takich jak metadanych, które dotyczą technologii, z tabeli odnośników głównego jest zoptymalizowana pod kątem stałym słownictwa XAML lub różne inne strategie, określając, czy element członkowski XAML jest zapisywalny w sieci Słownik XAML.</span><span class="sxs-lookup"><span data-stu-id="226aa-121">Within your override, you can use other determinations, such as metadata that is specific to your technology, a master lookup table that is optimized for a fixed XAML vocabulary, or a variety of other strategies for determining whether a XAML member is writable in your XAML vocabulary.</span></span>  
  
## <a name="constructing-xamlmember-without-xaml-schema-context"></a><span data-ttu-id="226aa-122">Konstruowanie XamlMember bez kontekst schematu XAML</span><span class="sxs-lookup"><span data-stu-id="226aa-122">Constructing XamlMember Without XAML Schema Context</span></span>  
 <span data-ttu-id="226aa-123">Większość konstruktorów <xref:System.Xaml.XamlMember> wymagają <xref:System.Xaml.XamlSchemaContext> jako część ich inicjowania.</span><span class="sxs-lookup"><span data-stu-id="226aa-123">Most constructors of <xref:System.Xaml.XamlMember> require a <xref:System.Xaml.XamlSchemaContext> as part of their initialization.</span></span> <span data-ttu-id="226aa-124"><xref:System.Xaml.XamlSchemaContext> Jest także niezbędne dla wielu wewnętrzny <xref:System.Xaml.XamlSchemaContext> operacji, takich jak uzyskanie informacji, które są przekazywane z zapasowego typu.</span><span class="sxs-lookup"><span data-stu-id="226aa-124">The <xref:System.Xaml.XamlSchemaContext> is also necessary for many internal <xref:System.Xaml.XamlSchemaContext> operations, such as obtaining information that is being forwarded from the backing type.</span></span> <span data-ttu-id="226aa-125">Podczas pracy z <xref:System.Xaml.XamlMember> interfejsu API, zwykle masz <xref:System.Xaml.XamlSchemaContext> nie jest dostępna z otaczającego konstrukcja takich jak <xref:System.Xaml.XamlWriter>.</span><span class="sxs-lookup"><span data-stu-id="226aa-125">When you are working with the <xref:System.Xaml.XamlMember> API, you typically have a <xref:System.Xaml.XamlSchemaContext> that is available from a surrounding construct such as a <xref:System.Xaml.XamlWriter>.</span></span> <span data-ttu-id="226aa-126">W takim przypadku można przekazać <xref:System.Xaml.XamlSchemaContext> odwoływać się do wszystkich XAML typu wywołań systemowych wymagających kontekst schematu XAML.</span><span class="sxs-lookup"><span data-stu-id="226aa-126">In this case, you can pass the <xref:System.Xaml.XamlSchemaContext> reference through to all XAML type system calls that require a XAML schema context.</span></span>  
  
 <span data-ttu-id="226aa-127">Jeden konstruktor określonych, <xref:System.Xaml.XamlMember.%23ctor%28System.String%2CSystem.Xaml.XamlType%2CSystem.Boolean%29>, nie wymaga <xref:System.Xaml.XamlSchemaContext>.</span><span class="sxs-lookup"><span data-stu-id="226aa-127">One specific constructor, <xref:System.Xaml.XamlMember.%23ctor%28System.String%2CSystem.Xaml.XamlType%2CSystem.Boolean%29>, does not require a <xref:System.Xaml.XamlSchemaContext>.</span></span> <span data-ttu-id="226aa-128">Jednak <xref:System.Xaml.XamlMember> który jest tworzony z <xref:System.Xaml.XamlMember.%23ctor%28System.String%2CSystem.Xaml.XamlType%2CSystem.Boolean%29> zwraca podpis `true` dla <xref:System.Xaml.XamlMember.IsUnknown%2A>.</span><span class="sxs-lookup"><span data-stu-id="226aa-128">However, a <xref:System.Xaml.XamlMember> that is constructed with the <xref:System.Xaml.XamlMember.%23ctor%28System.String%2CSystem.Xaml.XamlType%2CSystem.Boolean%29> signature returns `true` for <xref:System.Xaml.XamlMember.IsUnknown%2A>.</span></span>  
  
 <span data-ttu-id="226aa-129">Dla ścieżki obciążenia, która obejmuje <xref:System.Xaml.XamlObjectWriter>, taki element członkowski nie może zostać zapisany do obiektu wykresu.</span><span class="sxs-lookup"><span data-stu-id="226aa-129">For a load path that involves <xref:System.Xaml.XamlObjectWriter>, such a member cannot be written into an object graph.</span></span> <span data-ttu-id="226aa-130">Przy użyciu implementacji usługi .NET Framework XAML, <xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A?displayProperty=nameWithType> wywołać zgłasza <xref:System.Xaml.XamlObjectWriterException> podczas odpowiedniego <xref:System.Xaml.XamlMember> raporty `true` dla <xref:System.Xaml.XamlMember.IsUnknown%2A>.</span><span class="sxs-lookup"><span data-stu-id="226aa-130">Using the .NET Framework XAML services implementation, the <xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A?displayProperty=nameWithType> call throws a <xref:System.Xaml.XamlObjectWriterException> when the relevant <xref:System.Xaml.XamlMember> reports `true` for <xref:System.Xaml.XamlMember.IsUnknown%2A>.</span></span>  
  
 <span data-ttu-id="226aa-131">Nie należy konstruować <xref:System.Xaml.XamlMember> , który ma wartość `true` dla <xref:System.Xaml.XamlMember.IsUnknown%2A> chyba, że wdrożenie może obsłużyć wyjątki od <xref:System.Xaml.XamlObjectWriter>, lub w inny sposób, aby dopasować <xref:System.Xaml.XamlObjectWriter> zachowanie.</span><span class="sxs-lookup"><span data-stu-id="226aa-131">You should not construct a <xref:System.Xaml.XamlMember> that has a value of `true` for <xref:System.Xaml.XamlMember.IsUnknown%2A> unless your implementation can handle the exceptions from <xref:System.Xaml.XamlObjectWriter>, or you have other ways to adjust the <xref:System.Xaml.XamlObjectWriter> behavior.</span></span> <span data-ttu-id="226aa-132">Na przykład jeden lub więcej z następujących czynności może mieć wartość true implementacji:</span><span class="sxs-lookup"><span data-stu-id="226aa-132">For example, one or more of the  following might be true of your implementation:</span></span>  
  
-   <span data-ttu-id="226aa-133">Kontekst schematu XAML jest dostępny w później.</span><span class="sxs-lookup"><span data-stu-id="226aa-133">The XAML schema context is available later.</span></span>  
  
-   <span data-ttu-id="226aa-134">Możesz użyć wzorzec wywołujący element członkowski.</span><span class="sxs-lookup"><span data-stu-id="226aa-134">You use a member invoker pattern.</span></span>  
  
-   <span data-ttu-id="226aa-135">Świadomie przesłonić <xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A?displayProperty=nameWithType> w niestandardowych zapisywania XAML.</span><span class="sxs-lookup"><span data-stu-id="226aa-135">You deliberately override <xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A?displayProperty=nameWithType> in a custom XAML writer.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Xaml.XamlType" />
    <altmember cref="T:System.Xaml.XamlDirective" />
    <altmember cref="T:System.Xaml.XamlObjectWriter" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="226aa-136">Inicjuje nowe wystąpienie klasy <see cref="T:System.Xaml.XamlMember" /> klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="226aa-136">Initializes a new instance of the <see cref="T:System.Xaml.XamlMember" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlMember (System.Reflection.EventInfo eventInfo, System.Xaml.XamlSchemaContext schemaContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Reflection.EventInfo eventInfo, class System.Xaml.XamlSchemaContext schemaContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.#ctor(System.Reflection.EventInfo,System.Xaml.XamlSchemaContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlMember(System::Reflection::EventInfo ^ eventInfo, System::Xaml::XamlSchemaContext ^ schemaContext);" />
      <MemberSignature Language="F#" Value="new System.Xaml.XamlMember : System.Reflection.EventInfo * System.Xaml.XamlSchemaContext -&gt; System.Xaml.XamlMember" Usage="new System.Xaml.XamlMember (eventInfo, schemaContext)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="eventInfo" Type="System.Reflection.EventInfo" />
        <Parameter Name="schemaContext" Type="System.Xaml.XamlSchemaContext" />
      </Parameters>
      <Docs>
        <param name="eventInfo">
          <span data-ttu-id="226aa-137">System typów CLR <see cref="T:System.Reflection.EventInfo" /> reprezentujący element członkowski zdarzeń.</span>
          <span class="sxs-lookup">
            <span data-stu-id="226aa-137">The CLR type system <see cref="T:System.Reflection.EventInfo" /> that represents the event member.</span>
          </span>
        </param>
        <param name="schemaContext">
          <span data-ttu-id="226aa-138">
            <see cref="T:System.Xaml.XamlSchemaContext" /> Kontekstu, które kwalifikują się element członkowski.</span>
          <span class="sxs-lookup">
            <span data-stu-id="226aa-138">The <see cref="T:System.Xaml.XamlSchemaContext" /> context that qualifies the member.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="226aa-139">Inicjuje nowe wystąpienie klasy <see cref="T:System.Xaml.XamlMember" /> przy użyciu systemu typów CLR <see cref="T:System.Reflection.EventInfo" /> i <see cref="T:System.Xaml.XamlSchemaContext" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="226aa-139">Initializes a new instance of the <see cref="T:System.Xaml.XamlMember" /> class using CLR type system <see cref="T:System.Reflection.EventInfo" /> and a <see cref="T:System.Xaml.XamlSchemaContext" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="226aa-140">Użyj tego konstruktora, jeśli element członkowski reprezentuje zdarzenie (właściwość punktu połączenia programu obsługi zdarzeń).</span><span class="sxs-lookup"><span data-stu-id="226aa-140">Use this constructor if the member represents an event (event handler connection-point property).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlMember (System.Reflection.PropertyInfo propertyInfo, System.Xaml.XamlSchemaContext schemaContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Reflection.PropertyInfo propertyInfo, class System.Xaml.XamlSchemaContext schemaContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.#ctor(System.Reflection.PropertyInfo,System.Xaml.XamlSchemaContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlMember(System::Reflection::PropertyInfo ^ propertyInfo, System::Xaml::XamlSchemaContext ^ schemaContext);" />
      <MemberSignature Language="F#" Value="new System.Xaml.XamlMember : System.Reflection.PropertyInfo * System.Xaml.XamlSchemaContext -&gt; System.Xaml.XamlMember" Usage="new System.Xaml.XamlMember (propertyInfo, schemaContext)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="propertyInfo" Type="System.Reflection.PropertyInfo" />
        <Parameter Name="schemaContext" Type="System.Xaml.XamlSchemaContext" />
      </Parameters>
      <Docs>
        <param name="propertyInfo">
          <span data-ttu-id="226aa-141">System typów CLR <see cref="T:System.Reflection.PropertyInfo" /> reprezentujący elementu właściwości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="226aa-141">The CLR type system <see cref="T:System.Reflection.PropertyInfo" /> that represents the property member.</span>
          </span>
        </param>
        <param name="schemaContext">
          <span data-ttu-id="226aa-142">
            <see cref="T:System.Xaml.XamlSchemaContext" /> Kontekstu, które kwalifikują się element członkowski.</span>
          <span class="sxs-lookup">
            <span data-stu-id="226aa-142">The <see cref="T:System.Xaml.XamlSchemaContext" /> context that qualifies the member.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="226aa-143">Inicjuje nowe wystąpienie klasy <see cref="T:System.Xaml.XamlMember" /> przy użyciu systemu typów CLR <see cref="T:System.Reflection.PropertyInfo" /> i <see cref="T:System.Xaml.XamlSchemaContext" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="226aa-143">Initializes a new instance of the <see cref="T:System.Xaml.XamlMember" /> class using CLR type system <see cref="T:System.Reflection.PropertyInfo" /> and a <see cref="T:System.Xaml.XamlSchemaContext" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="226aa-144">Użyj tego konstruktora, jeśli element członkowski reprezentuje właściwość (a w szczególności nie jest połączenie programu obsługi zdarzeń).</span><span class="sxs-lookup"><span data-stu-id="226aa-144">Use this constructor if the member represents a property (and specifically is not an event handler connection).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlMember (System.Reflection.EventInfo eventInfo, System.Xaml.XamlSchemaContext schemaContext, System.Xaml.Schema.XamlMemberInvoker invoker);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Reflection.EventInfo eventInfo, class System.Xaml.XamlSchemaContext schemaContext, class System.Xaml.Schema.XamlMemberInvoker invoker) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.#ctor(System.Reflection.EventInfo,System.Xaml.XamlSchemaContext,System.Xaml.Schema.XamlMemberInvoker)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlMember(System::Reflection::EventInfo ^ eventInfo, System::Xaml::XamlSchemaContext ^ schemaContext, System::Xaml::Schema::XamlMemberInvoker ^ invoker);" />
      <MemberSignature Language="F#" Value="new System.Xaml.XamlMember : System.Reflection.EventInfo * System.Xaml.XamlSchemaContext * System.Xaml.Schema.XamlMemberInvoker -&gt; System.Xaml.XamlMember" Usage="new System.Xaml.XamlMember (eventInfo, schemaContext, invoker)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="eventInfo" Type="System.Reflection.EventInfo" />
        <Parameter Name="schemaContext" Type="System.Xaml.XamlSchemaContext" />
        <Parameter Name="invoker" Type="System.Xaml.Schema.XamlMemberInvoker" />
      </Parameters>
      <Docs>
        <param name="eventInfo">
          <span data-ttu-id="226aa-145">System typów CLR <see cref="T:System.Reflection.EventInfo" /> reprezentujący element członkowski zdarzeń.</span>
          <span class="sxs-lookup">
            <span data-stu-id="226aa-145">The CLR type system <see cref="T:System.Reflection.EventInfo" /> that represents the event member.</span>
          </span>
        </param>
        <param name="schemaContext">
          <span data-ttu-id="226aa-146">
            <see cref="T:System.Xaml.XamlSchemaContext" /> Kontekstu, które kwalifikują się element członkowski.</span>
          <span class="sxs-lookup">
            <span data-stu-id="226aa-146">The <see cref="T:System.Xaml.XamlSchemaContext" /> context that qualifies the member.</span>
          </span>
        </param>
        <param name="invoker">
          <span data-ttu-id="226aa-147">
            <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> Implementację, która obsługuje w czasie wykonywania odbicia wywołuje przed <see cref="T:System.Xaml.XamlMember" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="226aa-147">The <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> implementation that handles run-time reflection calls against the <see cref="T:System.Xaml.XamlMember" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="226aa-148">Inicjuje nowe wystąpienie klasy <see cref="T:System.Xaml.XamlMember" /> przy użyciu systemu typów CLR <see cref="T:System.Reflection.EventInfo" /> i <see cref="T:System.Xaml.XamlSchemaContext" />, takie jak <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> informacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="226aa-148">Initializes a new instance of the <see cref="T:System.Xaml.XamlMember" /> class using CLR type system <see cref="T:System.Reflection.EventInfo" /> and a <see cref="T:System.Xaml.XamlSchemaContext" />, including <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> information.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="226aa-149">Użyj tego konstruktora, jeśli element członkowski reprezentuje zdarzenia (lub punktu połączenia właściwością programu obsługi zdarzeń).</span><span class="sxs-lookup"><span data-stu-id="226aa-149">Use this constructor if the member represents an event (or an event handler connection-point property).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlMember (System.Reflection.PropertyInfo propertyInfo, System.Xaml.XamlSchemaContext schemaContext, System.Xaml.Schema.XamlMemberInvoker invoker);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Reflection.PropertyInfo propertyInfo, class System.Xaml.XamlSchemaContext schemaContext, class System.Xaml.Schema.XamlMemberInvoker invoker) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.#ctor(System.Reflection.PropertyInfo,System.Xaml.XamlSchemaContext,System.Xaml.Schema.XamlMemberInvoker)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlMember(System::Reflection::PropertyInfo ^ propertyInfo, System::Xaml::XamlSchemaContext ^ schemaContext, System::Xaml::Schema::XamlMemberInvoker ^ invoker);" />
      <MemberSignature Language="F#" Value="new System.Xaml.XamlMember : System.Reflection.PropertyInfo * System.Xaml.XamlSchemaContext * System.Xaml.Schema.XamlMemberInvoker -&gt; System.Xaml.XamlMember" Usage="new System.Xaml.XamlMember (propertyInfo, schemaContext, invoker)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="propertyInfo" Type="System.Reflection.PropertyInfo" />
        <Parameter Name="schemaContext" Type="System.Xaml.XamlSchemaContext" />
        <Parameter Name="invoker" Type="System.Xaml.Schema.XamlMemberInvoker" />
      </Parameters>
      <Docs>
        <param name="propertyInfo">
          <span data-ttu-id="226aa-150">System typów CLR <see cref="T:System.Reflection.PropertyInfo" /> reprezentujący elementu właściwości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="226aa-150">The CLR type system <see cref="T:System.Reflection.PropertyInfo" /> that represents the property member.</span>
          </span>
        </param>
        <param name="schemaContext">
          <span data-ttu-id="226aa-151">
            <see cref="T:System.Xaml.XamlSchemaContext" /> Kontekstu, które kwalifikują się element członkowski.</span>
          <span class="sxs-lookup">
            <span data-stu-id="226aa-151">The <see cref="T:System.Xaml.XamlSchemaContext" /> context that qualifies the member.</span>
          </span>
        </param>
        <param name="invoker">
          <span data-ttu-id="226aa-152">
            <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> Wywołuje implementację, która obsługuje wywołania środowiska wykonawczego przed <see cref="T:System.Xaml.XamlMember" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="226aa-152">The <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> implementation that handles run-time invocation calls against the <see cref="T:System.Xaml.XamlMember" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="226aa-153">Inicjuje nowe wystąpienie klasy <see cref="T:System.Xaml.XamlMember" /> przy użyciu odbicia <see cref="T:System.Reflection.PropertyInfo" /> i <see cref="T:System.Xaml.XamlSchemaContext" />, takie jak <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> informacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="226aa-153">Initializes a new instance of the <see cref="T:System.Xaml.XamlMember" /> class using reflection <see cref="T:System.Reflection.PropertyInfo" /> and a <see cref="T:System.Xaml.XamlSchemaContext" />, including <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> information.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="226aa-154">Ten konstruktor należy używać tylko wtedy, gdy element członkowski reprezentuje właściwości i jeśli nie jest połączenie programu obsługi zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="226aa-154">Use this constructor only if the member represents a property and if it is not an event handler connection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlMember (string attachableEventName, System.Reflection.MethodInfo adder, System.Xaml.XamlSchemaContext schemaContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string attachableEventName, class System.Reflection.MethodInfo adder, class System.Xaml.XamlSchemaContext schemaContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.#ctor(System.String,System.Reflection.MethodInfo,System.Xaml.XamlSchemaContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (attachableEventName As String, adder As MethodInfo, schemaContext As XamlSchemaContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlMember(System::String ^ attachableEventName, System::Reflection::MethodInfo ^ adder, System::Xaml::XamlSchemaContext ^ schemaContext);" />
      <MemberSignature Language="F#" Value="new System.Xaml.XamlMember : string * System.Reflection.MethodInfo * System.Xaml.XamlSchemaContext -&gt; System.Xaml.XamlMember" Usage="new System.Xaml.XamlMember (attachableEventName, adder, schemaContext)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="attachableEventName" Type="System.String" />
        <Parameter Name="adder" Type="System.Reflection.MethodInfo" />
        <Parameter Name="schemaContext" Type="System.Xaml.XamlSchemaContext" />
      </Parameters>
      <Docs>
        <param name="attachableEventName">
          <span data-ttu-id="226aa-155">Nazwa ciągu możliwej zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="226aa-155">The string name of the attachable event.</span>
          </span>
        </param>
        <param name="adder">
          <span data-ttu-id="226aa-156">System typów CLR <see cref="T:System.Reflection.MethodInfo" /> obsługi <see langword="Add" /> metody dołączalny element członkowski na tworzenie kopii implementacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="226aa-156">The CLR type system <see cref="T:System.Reflection.MethodInfo" /> for the handler <see langword="Add" /> method of the attachable member's backing implementation.</span>
          </span>
        </param>
        <param name="schemaContext">
          <span data-ttu-id="226aa-157">
            <see cref="T:System.Xaml.XamlSchemaContext" /> Kontekstu, które kwalifikują się element członkowski.</span>
          <span class="sxs-lookup">
            <span data-stu-id="226aa-157">The <see cref="T:System.Xaml.XamlSchemaContext" /> context that qualifies the member.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="226aa-158">Inicjuje nowe wystąpienie klasy <see cref="T:System.Xaml.XamlMember" /> klasy dla <see cref="T:System.Xaml.XamlMember" /> reprezentujący zdarzenie możliwe do dołączenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="226aa-158">Initializes a new instance of the <see cref="T:System.Xaml.XamlMember" /> class for a <see cref="T:System.Xaml.XamlMember" /> that represents an attachable event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="226aa-159">Użyj tego konstruktora, jeśli element członkowski reprezentuje elementu członkowskiego zdarzenia możliwe do dołączenia.</span><span class="sxs-lookup"><span data-stu-id="226aa-159">Use this constructor if the member represents an attachable event member.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlMember (string name, System.Xaml.XamlType declaringType, bool isAttachable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, class System.Xaml.XamlType declaringType, bool isAttachable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.#ctor(System.String,System.Xaml.XamlType,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String, declaringType As XamlType, isAttachable As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlMember(System::String ^ name, System::Xaml::XamlType ^ declaringType, bool isAttachable);" />
      <MemberSignature Language="F#" Value="new System.Xaml.XamlMember : string * System.Xaml.XamlType * bool -&gt; System.Xaml.XamlMember" Usage="new System.Xaml.XamlMember (name, declaringType, isAttachable)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="declaringType" Type="System.Xaml.XamlType" />
        <Parameter Name="isAttachable" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="226aa-160">Nazwa ciągu elementu członkowskiego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="226aa-160">The string name of the member.</span>
          </span>
        </param>
        <param name="declaringType">
          <span data-ttu-id="226aa-161">
            <see cref="T:System.Xaml.XamlType" /> Informacje dotyczące typu deklarującego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="226aa-161">The <see cref="T:System.Xaml.XamlType" /> information for the declaring type.</span>
          </span>
        </param>
        <param name="isAttachable">
          <span data-ttu-id="226aa-162">
            <see langword="true" /> Aby wskazać, że element członkowski jest możliwy do dołączenia; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="226aa-162">
              <see langword="true" /> to indicate that the member is attachable; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="226aa-163">Inicjuje nowe wystąpienie klasy <see cref="T:System.Xaml.XamlMember" /> klasy za pomocą nazwy ciągu i typ deklarujący <see cref="T:System.Xaml.XamlType" /> informacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="226aa-163">Initializes a new instance of the <see cref="T:System.Xaml.XamlMember" /> class using a string name and declaring <see cref="T:System.Xaml.XamlType" /> information.</span>
          </span>
          <span data-ttu-id="226aa-164">A <see cref="T:System.Xaml.XamlMember" /> który jest tworzony z tym podpis ma zasadnicze ograniczenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="226aa-164">A <see cref="T:System.Xaml.XamlMember" /> that is constructed with this signature has significant limitations.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="226aa-165">A <xref:System.Xaml.XamlMember> który jest tworzony z <xref:System.Xaml.XamlMember.%23ctor%28System.String%2CSystem.Xaml.XamlType%2CSystem.Boolean%29> zwraca podpis `true` dla <xref:System.Xaml.XamlMember.IsUnknown%2A>.</span><span class="sxs-lookup"><span data-stu-id="226aa-165">A <xref:System.Xaml.XamlMember> that is constructed with the <xref:System.Xaml.XamlMember.%23ctor%28System.String%2CSystem.Xaml.XamlType%2CSystem.Boolean%29> signature returns `true` for <xref:System.Xaml.XamlMember.IsUnknown%2A>.</span></span>  
  
 <span data-ttu-id="226aa-166">Dla ścieżki obciążenia, która obejmuje <xref:System.Xaml.XamlObjectWriter>, taki element członkowski nie może zostać zapisany do obiektu wykresu.</span><span class="sxs-lookup"><span data-stu-id="226aa-166">For a load path that involves <xref:System.Xaml.XamlObjectWriter>, such a member cannot be written into an object graph.</span></span> <span data-ttu-id="226aa-167">Przy użyciu implementacji usług .NET Framework XAML <xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A?displayProperty=nameWithType> wywołać zgłasza <xref:System.Xaml.XamlObjectWriterException> podczas odpowiedniego <xref:System.Xaml.XamlMember> raporty `true` dla <xref:System.Xaml.XamlMember.IsUnknown%2A>.</span><span class="sxs-lookup"><span data-stu-id="226aa-167">Using the .NET Framework XAML Services implementation, the <xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A?displayProperty=nameWithType> call throws a <xref:System.Xaml.XamlObjectWriterException> when the relevant <xref:System.Xaml.XamlMember> reports `true` for <xref:System.Xaml.XamlMember.IsUnknown%2A>.</span></span>  
  
 <span data-ttu-id="226aa-168">Nie należy konstruować <xref:System.Xaml.XamlMember> z <xref:System.Xaml.XamlMember.IsUnknown%2A> `true` chyba, że wdrożenie może obsłużyć wyjątki od <xref:System.Xaml.XamlObjectWriter>, lub w inny sposób, aby dopasować <xref:System.Xaml.XamlObjectWriter> zachowanie.</span><span class="sxs-lookup"><span data-stu-id="226aa-168">You should not construct a <xref:System.Xaml.XamlMember> with <xref:System.Xaml.XamlMember.IsUnknown%2A>`true` unless your implementation can handle the exceptions from <xref:System.Xaml.XamlObjectWriter>, or you have other ways to adjust the <xref:System.Xaml.XamlObjectWriter> behavior.</span></span> <span data-ttu-id="226aa-169">Na przykład jeden lub więcej z następujących czynności może mieć wartość true implementacji:</span><span class="sxs-lookup"><span data-stu-id="226aa-169">For example, one or more of the following might be true of your implementation:</span></span>  
  
-   <span data-ttu-id="226aa-170">Kontekst schematu XAML jest dostępny w później.</span><span class="sxs-lookup"><span data-stu-id="226aa-170">The XAML schema context is available later.</span></span>  
  
-   <span data-ttu-id="226aa-171">Możesz użyć wzorzec wywołujący element członkowski.</span><span class="sxs-lookup"><span data-stu-id="226aa-171">You use a member invoker pattern.</span></span>  
  
-   <span data-ttu-id="226aa-172">Świadomie przesłonić <xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A?displayProperty=nameWithType> w niestandardowych zapisywania XAML.</span><span class="sxs-lookup"><span data-stu-id="226aa-172">You deliberately override <xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A?displayProperty=nameWithType> in a custom XAML writer.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="226aa-173">
            <paramref name="name" /> lub <paramref name="declaringType" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="226aa-173">
              <paramref name="name" /> or <paramref name="declaringType" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlMember (string attachablePropertyName, System.Reflection.MethodInfo getter, System.Reflection.MethodInfo setter, System.Xaml.XamlSchemaContext schemaContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string attachablePropertyName, class System.Reflection.MethodInfo getter, class System.Reflection.MethodInfo setter, class System.Xaml.XamlSchemaContext schemaContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.#ctor(System.String,System.Reflection.MethodInfo,System.Reflection.MethodInfo,System.Xaml.XamlSchemaContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (attachablePropertyName As String, getter As MethodInfo, setter As MethodInfo, schemaContext As XamlSchemaContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlMember(System::String ^ attachablePropertyName, System::Reflection::MethodInfo ^ getter, System::Reflection::MethodInfo ^ setter, System::Xaml::XamlSchemaContext ^ schemaContext);" />
      <MemberSignature Language="F#" Value="new System.Xaml.XamlMember : string * System.Reflection.MethodInfo * System.Reflection.MethodInfo * System.Xaml.XamlSchemaContext -&gt; System.Xaml.XamlMember" Usage="new System.Xaml.XamlMember (attachablePropertyName, getter, setter, schemaContext)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="attachablePropertyName" Type="System.String" />
        <Parameter Name="getter" Type="System.Reflection.MethodInfo" />
        <Parameter Name="setter" Type="System.Reflection.MethodInfo" />
        <Parameter Name="schemaContext" Type="System.Xaml.XamlSchemaContext" />
      </Parameters>
      <Docs>
        <param name="attachablePropertyName">
          <span data-ttu-id="226aa-174">Nazwa ciągu właściwości z możliwością dołączenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="226aa-174">The string name of the attachable property.</span>
          </span>
        </param>
        <param name="getter">
          <span data-ttu-id="226aa-175">System typów CLR <see cref="T:System.Reflection.MethodInfo" /> dla <see langword="get" /> akcesor dołączalny element członkowski na tworzenie kopii implementacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="226aa-175">The CLR type system <see cref="T:System.Reflection.MethodInfo" /> for the <see langword="get" /> accessor of the attachable member's backing implementation.</span>
          </span>
        </param>
        <param name="setter">
          <span data-ttu-id="226aa-176">System typów CLR <see cref="T:System.Reflection.MethodInfo" /> dla <see langword="set" /> akcesor dołączalny element członkowski na tworzenie kopii implementacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="226aa-176">The CLR type system <see cref="T:System.Reflection.MethodInfo" /> for the <see langword="set" /> accessor of the attachable member's backing implementation.</span>
          </span>
        </param>
        <param name="schemaContext">
          <span data-ttu-id="226aa-177">
            <see cref="T:System.Xaml.XamlSchemaContext" /> Kontekstu, które kwalifikują się element członkowski.</span>
          <span class="sxs-lookup">
            <span data-stu-id="226aa-177">The <see cref="T:System.Xaml.XamlSchemaContext" /> context that qualifies the member.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="226aa-178">Inicjuje nowe wystąpienie klasy <see cref="T:System.Xaml.XamlMember" /> klasy dla <see cref="T:System.Xaml.XamlMember" /> reprezentujący dołączalna właściwość.</span>
          <span class="sxs-lookup">
            <span data-stu-id="226aa-178">Initializes a new instance of the <see cref="T:System.Xaml.XamlMember" /> class for a <see cref="T:System.Xaml.XamlMember" /> that represents an attachable property.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="226aa-179">Jeśli element członkowski reprezentuje dołączalna właściwość, należy użyć tego konstruktora.</span><span class="sxs-lookup"><span data-stu-id="226aa-179">Use this constructor if the member represents an attachable property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlMember (string attachableEventName, System.Reflection.MethodInfo adder, System.Xaml.XamlSchemaContext schemaContext, System.Xaml.Schema.XamlMemberInvoker invoker);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string attachableEventName, class System.Reflection.MethodInfo adder, class System.Xaml.XamlSchemaContext schemaContext, class System.Xaml.Schema.XamlMemberInvoker invoker) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.#ctor(System.String,System.Reflection.MethodInfo,System.Xaml.XamlSchemaContext,System.Xaml.Schema.XamlMemberInvoker)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (attachableEventName As String, adder As MethodInfo, schemaContext As XamlSchemaContext, invoker As XamlMemberInvoker)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlMember(System::String ^ attachableEventName, System::Reflection::MethodInfo ^ adder, System::Xaml::XamlSchemaContext ^ schemaContext, System::Xaml::Schema::XamlMemberInvoker ^ invoker);" />
      <MemberSignature Language="F#" Value="new System.Xaml.XamlMember : string * System.Reflection.MethodInfo * System.Xaml.XamlSchemaContext * System.Xaml.Schema.XamlMemberInvoker -&gt; System.Xaml.XamlMember" Usage="new System.Xaml.XamlMember (attachableEventName, adder, schemaContext, invoker)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="attachableEventName" Type="System.String" />
        <Parameter Name="adder" Type="System.Reflection.MethodInfo" />
        <Parameter Name="schemaContext" Type="System.Xaml.XamlSchemaContext" />
        <Parameter Name="invoker" Type="System.Xaml.Schema.XamlMemberInvoker" />
      </Parameters>
      <Docs>
        <param name="attachableEventName">
          <span data-ttu-id="226aa-180">Nazwa ciągu możliwej zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="226aa-180">The string name of the attachable event.</span>
          </span>
        </param>
        <param name="adder">
          <span data-ttu-id="226aa-181">System typów CLR <see cref="T:System.Reflection.MethodInfo" /> obsługi <see langword="Add" /> metody dołączalny element członkowski na tworzenie kopii implementacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="226aa-181">The CLR type system <see cref="T:System.Reflection.MethodInfo" /> for the handler <see langword="Add" /> method of the attachable member's backing implementation.</span>
          </span>
        </param>
        <param name="schemaContext">
          <span data-ttu-id="226aa-182">
            <see cref="T:System.Xaml.XamlSchemaContext" /> Kontekstu, które kwalifikują się element członkowski.</span>
          <span class="sxs-lookup">
            <span data-stu-id="226aa-182">The <see cref="T:System.Xaml.XamlSchemaContext" /> context that qualifies the member.</span>
          </span>
        </param>
        <param name="invoker">
          <span data-ttu-id="226aa-183">
            <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> Wywołuje implementację, która obsługuje wywołania środowiska wykonawczego przed <see cref="T:System.Xaml.XamlMember" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="226aa-183">The <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> implementation that handles run-time invocation calls against the <see cref="T:System.Xaml.XamlMember" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="226aa-184">Inicjuje nowe wystąpienie klasy <see cref="T:System.Xaml.XamlMember" /> klasy dla <see cref="T:System.Xaml.XamlMember" /> reprezentujący możliwej zdarzenia, w tym <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> informacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="226aa-184">Initializes a new instance of the <see cref="T:System.Xaml.XamlMember" /> class for a <see cref="T:System.Xaml.XamlMember" /> that represents an attachable event, including <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> information.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="226aa-185">Użyj tego konstruktora, jeśli element członkowski reprezentuje elementu członkowskiego zdarzenia możliwe do dołączenia.</span><span class="sxs-lookup"><span data-stu-id="226aa-185">Use this constructor if the member represents an attachable event member.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlMember (string attachablePropertyName, System.Reflection.MethodInfo getter, System.Reflection.MethodInfo setter, System.Xaml.XamlSchemaContext schemaContext, System.Xaml.Schema.XamlMemberInvoker invoker);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string attachablePropertyName, class System.Reflection.MethodInfo getter, class System.Reflection.MethodInfo setter, class System.Xaml.XamlSchemaContext schemaContext, class System.Xaml.Schema.XamlMemberInvoker invoker) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.#ctor(System.String,System.Reflection.MethodInfo,System.Reflection.MethodInfo,System.Xaml.XamlSchemaContext,System.Xaml.Schema.XamlMemberInvoker)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (attachablePropertyName As String, getter As MethodInfo, setter As MethodInfo, schemaContext As XamlSchemaContext, invoker As XamlMemberInvoker)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlMember(System::String ^ attachablePropertyName, System::Reflection::MethodInfo ^ getter, System::Reflection::MethodInfo ^ setter, System::Xaml::XamlSchemaContext ^ schemaContext, System::Xaml::Schema::XamlMemberInvoker ^ invoker);" />
      <MemberSignature Language="F#" Value="new System.Xaml.XamlMember : string * System.Reflection.MethodInfo * System.Reflection.MethodInfo * System.Xaml.XamlSchemaContext * System.Xaml.Schema.XamlMemberInvoker -&gt; System.Xaml.XamlMember" Usage="new System.Xaml.XamlMember (attachablePropertyName, getter, setter, schemaContext, invoker)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="attachablePropertyName" Type="System.String" />
        <Parameter Name="getter" Type="System.Reflection.MethodInfo" />
        <Parameter Name="setter" Type="System.Reflection.MethodInfo" />
        <Parameter Name="schemaContext" Type="System.Xaml.XamlSchemaContext" />
        <Parameter Name="invoker" Type="System.Xaml.Schema.XamlMemberInvoker" />
      </Parameters>
      <Docs>
        <param name="attachablePropertyName">
          <span data-ttu-id="226aa-186">Nazwa ciągu właściwości z możliwością dołączenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="226aa-186">The string name of the attachable property.</span>
          </span>
        </param>
        <param name="getter">
          <span data-ttu-id="226aa-187">System typów CLR <see cref="T:System.Reflection.MethodInfo" /> dla <see langword="get" /> akcesor dołączalny element członkowski na tworzenie kopii implementacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="226aa-187">The CLR type system <see cref="T:System.Reflection.MethodInfo" /> for the <see langword="get" /> accessor of the attachable member's backing implementation.</span>
          </span>
        </param>
        <param name="setter">
          <span data-ttu-id="226aa-188">System typów CLR <see cref="T:System.Reflection.MethodInfo" /> dla <see langword="set" /> akcesor dołączalny element członkowski na tworzenie kopii implementacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="226aa-188">The CLR type system <see cref="T:System.Reflection.MethodInfo" /> for the <see langword="set" /> accessor of the attachable member's backing implementation.</span>
          </span>
        </param>
        <param name="schemaContext">
          <span data-ttu-id="226aa-189">
            <see cref="T:System.Xaml.XamlSchemaContext" /> Kontekstu, które kwalifikują się element członkowski.</span>
          <span class="sxs-lookup">
            <span data-stu-id="226aa-189">The <see cref="T:System.Xaml.XamlSchemaContext" /> context that qualifies the member.</span>
          </span>
        </param>
        <param name="invoker">
          <span data-ttu-id="226aa-190">
            <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> Wywołuje implementację, która obsługuje wywołania środowiska wykonawczego przed <see cref="T:System.Xaml.XamlMember" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="226aa-190">The <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> implementation that handles run-time invocation calls against the <see cref="T:System.Xaml.XamlMember" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="226aa-191">Inicjuje nowe wystąpienie klasy <see cref="T:System.Xaml.XamlMember" /> klasy dla <see cref="T:System.Xaml.XamlMember" /> reprezentujący dołączalna właściwość, w tym <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> informacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="226aa-191">Initializes a new instance of the <see cref="T:System.Xaml.XamlMember" /> class for a <see cref="T:System.Xaml.XamlMember" /> that represents an attachable property, including <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> information.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="226aa-192">Użyj tego konstruktora, jeśli element członkowski reprezentuje dołączalna właściwość elementu członkowskiego.</span><span class="sxs-lookup"><span data-stu-id="226aa-192">Use this constructor if the member represents an attachable property member.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DeclaringType">
      <MemberSignature Language="C#" Value="public System.Xaml.XamlType DeclaringType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xaml.XamlType DeclaringType" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlMember.DeclaringType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DeclaringType As XamlType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xaml::XamlType ^ DeclaringType { System::Xaml::XamlType ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DeclaringType : System.Xaml.XamlType" Usage="System.Xaml.XamlMember.DeclaringType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="226aa-193">Pobiera <see cref="T:System.Xaml.XamlType" /> dla typu, który deklaruje element członkowski, który jest skojarzony z tym <see cref="T:System.Xaml.XamlMember" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="226aa-193">Gets the <see cref="T:System.Xaml.XamlType" /> for the type that declares the member that is associated with this <see cref="T:System.Xaml.XamlMember" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="226aa-194">
            <see cref="T:System.Xaml.XamlType" /> Dla typu, który deklaruje element członkowski, który jest skojarzony z tym <see cref="T:System.Xaml.XamlMember" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="226aa-194">The <see cref="T:System.Xaml.XamlType" /> for the type that declares the member that is associated with this <see cref="T:System.Xaml.XamlMember" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="226aa-195">Ta wartość jest zwykle ustawiana tylko podczas inicjowania i zazwyczaj nie jest `null`.</span><span class="sxs-lookup"><span data-stu-id="226aa-195">This value is typically set during initialization and is usually not `null`.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="226aa-196"><xref:System.Xaml.XamlMember.DeclaringType%2A> informacje mogą być przekazywane w przez konstruktorów dla inicjowania.</span><span class="sxs-lookup"><span data-stu-id="226aa-196"><xref:System.Xaml.XamlMember.DeclaringType%2A> information can be passed in by constructors for initialization.</span></span> <span data-ttu-id="226aa-197">Przez wywołanie bezpośrednio konstruktory podstawowe inicjowania dla <xref:System.Xaml.XamlMember> klas pochodnych można pominąć niektóre testy wartość wprowadzonych w klasie podstawowej.</span><span class="sxs-lookup"><span data-stu-id="226aa-197">By calling directly into base constructors, initialization for <xref:System.Xaml.XamlMember> derived classes can omit some of the value-checks that are made in the base class.</span></span> <span data-ttu-id="226aa-198">Inicjowanie pochodnej można zmienić informacje dotyczące relacji zgłoszone członka typu elementu członkowskiego XAML, tak, aby go już wyrównane w oczekiwany sposób informacje o systemie typu jego podstawowej deklaracji CLR.</span><span class="sxs-lookup"><span data-stu-id="226aa-198">Therefore, the derived initialization can change the reported type-member relationship information of a XAML member so that it no longer aligns in an expected way with the type system information of its underlying CLR declaration.</span></span> <span data-ttu-id="226aa-199">Wszelkie kontroli krytyczny dla zabezpieczeń deklarowanie informacji o typie w zamian użyj podstawowego typu środowiska CLR.</span><span class="sxs-lookup"><span data-stu-id="226aa-199">For any security-critical checks of declaring type information, use the underlying CLR type instead.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DeferringLoader">
      <MemberSignature Language="C#" Value="public System.Xaml.Schema.XamlValueConverter&lt;System.Xaml.XamlDeferringLoader&gt; DeferringLoader { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xaml.Schema.XamlValueConverter`1&lt;class System.Xaml.XamlDeferringLoader&gt; DeferringLoader" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlMember.DeferringLoader" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DeferringLoader As XamlValueConverter(Of XamlDeferringLoader)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xaml::Schema::XamlValueConverter&lt;System::Xaml::XamlDeferringLoader ^&gt; ^ DeferringLoader { System::Xaml::Schema::XamlValueConverter&lt;System::Xaml::XamlDeferringLoader ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DeferringLoader : System.Xaml.Schema.XamlValueConverter&lt;System.Xaml.XamlDeferringLoader&gt;" Usage="System.Xaml.XamlMember.DeferringLoader" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.Schema.XamlValueConverter&lt;System.Xaml.XamlDeferringLoader&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="226aa-200">Pobiera <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> obiektów zadeklarowany jako obiekt, który służy do ładowanie odłożone języka XAML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="226aa-200">Gets a <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> object, which is used for deferred loading of XAML declared objects.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="226aa-201">A <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> z <see cref="T:System.Xaml.XamlDeferringLoader" /> ograniczenie ogólnego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="226aa-201">A <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> with <see cref="T:System.Xaml.XamlDeferringLoader" /> constraint on the generic.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="226aa-202">Wywoływanie <xref:System.Xaml.XamlMember.DeferringLoader%2A> wywołuje <xref:System.Xaml.XamlMember.LookupDeferringLoader%2A> lub określonego zastąpienia tej metody.</span><span class="sxs-lookup"><span data-stu-id="226aa-202">Calling <xref:System.Xaml.XamlMember.DeferringLoader%2A> invokes <xref:System.Xaml.XamlMember.LookupDeferringLoader%2A> or a specific override of that method.</span></span> <span data-ttu-id="226aa-203">Dzieje się to w przypadkach, w którym logiki początkowego odbicia wewnętrznych nie już ustawiona informacje.</span><span class="sxs-lookup"><span data-stu-id="226aa-203">This behavior occurs in cases where the initial internal reflection logic has not already set the information.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DependsOn">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;System.Xaml.XamlMember&gt; DependsOn { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;class System.Xaml.XamlMember&gt; DependsOn" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlMember.DependsOn" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DependsOn As IList(Of XamlMember)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IList&lt;System::Xaml::XamlMember ^&gt; ^ DependsOn { System::Collections::Generic::IList&lt;System::Xaml::XamlMember ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DependsOn : System.Collections.Generic.IList&lt;System.Xaml.XamlMember&gt;" Usage="System.Xaml.XamlMember.DependsOn" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Xaml.XamlMember&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="226aa-204">Pobiera listę <see cref="T:System.Xaml.XamlMember" /> obiektów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="226aa-204">Gets a list of <see cref="T:System.Xaml.XamlMember" /> objects.</span>
          </span>
          <span data-ttu-id="226aa-205">Raport tych elementów członkowskich, do których istnieją relacje zależności dla kolejność inicjowania względem to <see cref="T:System.Xaml.XamlMember" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="226aa-205">These report the members where dependency relationships for initialization order exist relative to this <see cref="T:System.Xaml.XamlMember" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="226aa-206">Lista <see cref="T:System.Xaml.XamlMember" /> obiektów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="226aa-206">A list of <see cref="T:System.Xaml.XamlMember" /> objects.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="226aa-207">Wywoływanie <xref:System.Xaml.XamlMember.DependsOn%2A> wywołuje <xref:System.Xaml.XamlMember.LookupDependsOn%2A> lub określonego zastąpienia tej metody.</span><span class="sxs-lookup"><span data-stu-id="226aa-207">Calling <xref:System.Xaml.XamlMember.DependsOn%2A> invokes <xref:System.Xaml.XamlMember.LookupDependsOn%2A> or a specific override of that method.</span></span> <span data-ttu-id="226aa-208">Dzieje się to w przypadkach, w którym logiki początkowego odbicia wewnętrznych nie już ustawiona informacje.</span><span class="sxs-lookup"><span data-stu-id="226aa-208">This behavior occurs in cases where the initial internal reflection logic has not already set the information.</span></span>  
  
 <span data-ttu-id="226aa-209">`DependsOn` Można zastosować wzorca do przypadków modelu obiektów, które celowo są sprzeczne z ogólną zasadą XAML.</span><span class="sxs-lookup"><span data-stu-id="226aa-209">The `DependsOn` pattern can be applied to object model cases that deliberately contradict a general XAML rule.</span></span> <span data-ttu-id="226aa-210">Ogólną zasadą XAML jest, że elementy członkowskie typu, które nie są przekazywane jako tekst inicjowania (lub metody fabryki w XAML 2009) musi mieć możliwość można przypisać w dowolnej kolejności.</span><span class="sxs-lookup"><span data-stu-id="226aa-210">The general XAML rule is that members of a type that are not passed as initialization text (or by a factory method in XAML 2009) must be able to be assigned in any order.</span></span> <span data-ttu-id="226aa-211">Stosując `DependsOn` wzorca do elementu członkowskiego, można nakazać autorów XAML zawsze przetworzyć przywoływany element członkowski przed tego elementu członkowskiego.</span><span class="sxs-lookup"><span data-stu-id="226aa-211">By applying a `DependsOn` pattern to a member, you can instruct XAML writers to always process the referenced member before this member.</span></span> <span data-ttu-id="226aa-212">Można zastosować tego wzorca w sytuacjach, gdy wartość bieżącego elementu członkowskiego wymaga kontekstu lub inne informacje, które są dostępne tylko po ustawieniu innego członka.</span><span class="sxs-lookup"><span data-stu-id="226aa-212">You can apply this pattern in situations where the value of the current member requires context or other information that is only available after the other member is set.</span></span>  
  
 <span data-ttu-id="226aa-213">`DependsOn` Wzorzec powinny być stosowane rozważnie i zarezerwowane dla scenariuszy właściwości tam, gdzie służy architektury cel.</span><span class="sxs-lookup"><span data-stu-id="226aa-213">The `DependsOn` pattern should be applied judiciously and reserved for property scenarios where it serves an architectural purpose.</span></span> <span data-ttu-id="226aa-214">Dużej liczby zależności mieć możliwość spowolnić jej przetwarzanie XAML.</span><span class="sxs-lookup"><span data-stu-id="226aa-214">Large numbers of dependencies have the potential to slow down XAML processing.</span></span> <span data-ttu-id="226aa-215">Ponadto można uzyskać zależności cykliczne jest, w takim przypadku zachowanie przetwarzania XAML jest niezdefiniowany.</span><span class="sxs-lookup"><span data-stu-id="226aa-215">Also, it is possible to produce circular dependencies, in which case the XAML processing behavior is undefined.</span></span>  
  
 <span data-ttu-id="226aa-216">Przykład `DependsOn` z WPF scenariusze niektórych właściwości na <xref:System.Windows.Controls.ControlTemplate> i <xref:System.Windows.DataTemplate>na <xref:System.Windows.Trigger>i na <xref:System.Windows.Setter>.</span><span class="sxs-lookup"><span data-stu-id="226aa-216">Example `DependsOn` scenarios from WPF include certain properties on <xref:System.Windows.Controls.ControlTemplate> and <xref:System.Windows.DataTemplate>, on <xref:System.Windows.Trigger>, and on <xref:System.Windows.Setter>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Markup.DependsOnAttribute" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Equals">
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="226aa-217">Wskazuje, czy bieżący obiekt jest taki sam, jak inny obiekt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="226aa-217">Indicates whether the current object is equal to another object.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="xamlMember.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">
          <span data-ttu-id="226aa-218">Obiekt do porównania z tym obiektem.</span>
          <span class="sxs-lookup">
            <span data-stu-id="226aa-218">The object to compare with this object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="226aa-219">Wskazuje, czy bieżący obiekt jest taki sam, jak inny obiekt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="226aa-219">Indicates whether the current object is equal to another object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="226aa-220">
            <see langword="true" /> Jeśli bieżący obiekt jest taki sam <paramref name="obj" /> parametru; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="226aa-220">
              <see langword="true" /> if the current object is equal to the <paramref name="obj" /> parameter; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (System.Xaml.XamlMember other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(class System.Xaml.XamlMember other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.Equals(System.Xaml.XamlMember)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (other As XamlMember) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Equals(System::Xaml::XamlMember ^ other);" />
      <MemberSignature Language="F#" Value="override this.Equals : System.Xaml.XamlMember -&gt; bool" Usage="xamlMember.Equals other" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IEquatable`1.Equals(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Xaml.XamlMember" />
      </Parameters>
      <Docs>
        <param name="other">
          <span data-ttu-id="226aa-221">Obiekt do porównania z tym obiektem.</span>
          <span class="sxs-lookup">
            <span data-stu-id="226aa-221">An object to compare with this object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="226aa-222">Wskazuje, czy bieżący obiekt jest taki sam, jak inny obiekt tego samego typu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="226aa-222">Indicates whether the current object is equal to another object of the same type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="226aa-223">
            <see langword="true" /> Jeśli bieżący obiekt jest taki sam <paramref name="other" /> parametru; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="226aa-223">
              <see langword="true" /> if the current object is equal to the <paramref name="other" /> parameter; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="xamlMember.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="226aa-224">Zwraca wartość skrótu dla tego obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="226aa-224">Returns the hash code for this object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="226aa-225">Liczba całkowita wartość skrótu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="226aa-225">An integer hash code.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetXamlNamespaces">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IList&lt;string&gt; GetXamlNamespaces ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IList`1&lt;string&gt; GetXamlNamespaces() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.GetXamlNamespaces" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetXamlNamespaces () As IList(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::Generic::IList&lt;System::String ^&gt; ^ GetXamlNamespaces();" />
      <MemberSignature Language="F#" Value="abstract member GetXamlNamespaces : unit -&gt; System.Collections.Generic.IList&lt;string&gt;&#xA;override this.GetXamlNamespaces : unit -&gt; System.Collections.Generic.IList&lt;string&gt;" Usage="xamlMember.GetXamlNamespaces " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="226aa-226">Zwraca listę przestrzeni nazw XAML, gdzie może istnieć tego elementu członkowskiego XAML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="226aa-226">Returns a list of XAML namespaces where this XAML member can exist.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="226aa-227">Lista identyfikatorów przestrzeni nazw XAML jako ciągi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="226aa-227">A list of XAML namespace identifiers as strings.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="226aa-228">Domyślna implementacja zwraca <xref:System.Xaml.XamlType.GetXamlNamespaces%2A?displayProperty=nameWithType> wywołać wyniku <xref:System.Xaml.XamlMember.DeclaringType%2A> skojarzonego z tym <xref:System.Xaml.XamlMember>.</span><span class="sxs-lookup"><span data-stu-id="226aa-228">The default implementation returns the <xref:System.Xaml.XamlType.GetXamlNamespaces%2A?displayProperty=nameWithType> call result from the <xref:System.Xaml.XamlMember.DeclaringType%2A> that is associated with this <xref:System.Xaml.XamlMember>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Invoker">
      <MemberSignature Language="C#" Value="public System.Xaml.Schema.XamlMemberInvoker Invoker { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xaml.Schema.XamlMemberInvoker Invoker" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlMember.Invoker" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Invoker As XamlMemberInvoker" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xaml::Schema::XamlMemberInvoker ^ Invoker { System::Xaml::Schema::XamlMemberInvoker ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Invoker : System.Xaml.Schema.XamlMemberInvoker" Usage="System.Xaml.XamlMember.Invoker" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.Schema.XamlMemberInvoker</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="226aa-229">Pobiera <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> implementację, która jest skojarzona z tym <see cref="T:System.Xaml.XamlMember" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="226aa-229">Gets the <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> implementation that is associated with this <see cref="T:System.Xaml.XamlMember" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="226aa-230">
            <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> Implementację, która jest skojarzona z tym <see cref="T:System.Xaml.XamlMember" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="226aa-230">The <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> implementation that is associated with this <see cref="T:System.Xaml.XamlMember" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="226aa-231">`Invoker` Wzorzec jest zaawansowane techniki rozszerzenia system typu XAML.</span><span class="sxs-lookup"><span data-stu-id="226aa-231">The `Invoker` pattern is an advanced XAML type system extension technique.</span></span> <span data-ttu-id="226aa-232">`Invoker` Wzorzec umożliwia wstrzyknąć zachowanie mapowania typu innego schematu, używając nadal definicji system typu XAML z usługami .NET Framework XAML.</span><span class="sxs-lookup"><span data-stu-id="226aa-232">The `Invoker` pattern provides a way to inject different schema type mapping behavior, while still using XAML type system definitions from .NET Framework XAML Services.</span></span>  
  
 <span data-ttu-id="226aa-233">Jeśli <xref:System.Xaml.XamlMember.LookupInvoker%2A> zastąpienia zwraca `null`, lub Jeśli domyślna implementacja zwraca `null` ponieważ brakuje w nim <xref:System.Xaml.XamlMember.UnderlyingMember%2A> tego <xref:System.Xaml.XamlMember>, <xref:System.Xaml.XamlMember.Invoker%2A> zwraca właściwość <xref:System.Xaml.Schema.XamlMemberInvoker.UnknownInvoker%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="226aa-233">If a <xref:System.Xaml.XamlMember.LookupInvoker%2A> override returns `null`, or if the default implementation returns `null` because it lacks the <xref:System.Xaml.XamlMember.UnderlyingMember%2A> for this <xref:System.Xaml.XamlMember>, the <xref:System.Xaml.XamlMember.Invoker%2A> property returns <xref:System.Xaml.Schema.XamlMemberInvoker.UnknownInvoker%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="226aa-234"><xref:System.Xaml.Schema.XamlMemberInvoker.UnknownInvoker%2A?displayProperty=nameWithType> jest ustawieniem domyślnym.</span><span class="sxs-lookup"><span data-stu-id="226aa-234"><xref:System.Xaml.Schema.XamlMemberInvoker.UnknownInvoker%2A?displayProperty=nameWithType> is the default.</span></span> <span data-ttu-id="226aa-235">Jest tak w przypadku większości operacji korzystające z usług .NET Framework XAML i domyślny kontekst schematu XAML i gdzie zastąpienia nie określonych `Invoker` wzorce są przekazywane do tworzenia obiektów systemowych typu XAML.</span><span class="sxs-lookup"><span data-stu-id="226aa-235">This is true for most operations that use .NET Framework XAML Services and the default XAML schema context, and where no specific override `Invoker` patterns are passed for construction of XAML type system entities.</span></span>  
  
 <span data-ttu-id="226aa-236">Wywoływanie <xref:System.Xaml.XamlMember.Invoker%2A> wywołuje <xref:System.Xaml.XamlMember.LookupInvoker%2A> lub określonego zastąpienia tej metody.</span><span class="sxs-lookup"><span data-stu-id="226aa-236">Calling <xref:System.Xaml.XamlMember.Invoker%2A> invokes <xref:System.Xaml.XamlMember.LookupInvoker%2A> or a specific override of that method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsAmbient">
      <MemberSignature Language="C#" Value="public bool IsAmbient { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAmbient" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlMember.IsAmbient" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsAmbient As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsAmbient { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsAmbient : bool" Usage="System.Xaml.XamlMember.IsAmbient" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="226aa-237">Pobiera wartość wskazującą, czy to <see cref="T:System.Xaml.XamlMember" /> został zgłoszony jako właściwością otoczenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="226aa-237">Gets a value that indicates whether this <see cref="T:System.Xaml.XamlMember" /> is reported as an ambient property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="226aa-238">
            <see langword="true" /> Jeśli <see cref="T:System.Xaml.XamlMember" /> jest zgłoszone jako właściwość otoczenia; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="226aa-238">
              <see langword="true" /> if this <see cref="T:System.Xaml.XamlMember" /> is reported as an ambient property; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="226aa-239">Wywoływanie <xref:System.Xaml.XamlMember.IsAmbient%2A> wywołuje <xref:System.Xaml.XamlMember.LookupIsAmbient%2A> lub określonego zastąpienia tej metody.</span><span class="sxs-lookup"><span data-stu-id="226aa-239">Calling <xref:System.Xaml.XamlMember.IsAmbient%2A> invokes <xref:System.Xaml.XamlMember.LookupIsAmbient%2A> or a specific override of that method.</span></span> <span data-ttu-id="226aa-240">Dzieje się to w implementacjach gdzie logiki początkowego odbicia wewnętrznych nie już ustawiona informacje.</span><span class="sxs-lookup"><span data-stu-id="226aa-240">This behavior occurs in implementations where the initial internal reflection logic has not already set the information.</span></span>  
  
 <span data-ttu-id="226aa-241">Sprawdzanie właściwości otaczających jest zwykle są częścią logika przetwarzania XAML, aby upewnić się, że wartości, które opierają się na użycie otoczenia kwalifikację typu obiektów i może działać prawidłowo.</span><span class="sxs-lookup"><span data-stu-id="226aa-241">Checking for ambient properties is are usually part of XAML processing logic to make sure that objects and values that rely on ambient usage for type qualification can function correctly.</span></span> <span data-ttu-id="226aa-242">Interfejsy API usług .NET Framework XAML i domyślny kontekst schematu XAML wypełnia tej wartości w oparciu o przypisanie z <xref:System.Windows.Markup.AmbientAttribute>.</span><span class="sxs-lookup"><span data-stu-id="226aa-242">The .NET Framework XAML Services APIs and the default XAML schema context populates this value based on attribution with <xref:System.Windows.Markup.AmbientAttribute>.</span></span> <span data-ttu-id="226aa-243">Domyślna implementacja <xref:System.Xaml.XamlMember.LookupIsAmbient%2A> wykorzystuje istniejące tego <xref:System.Windows.Markup.AmbientAttribute> technika który zwraca `true` Jeśli <xref:System.Windows.Markup.AmbientAttribute> istnieje w deklaracji elementu członkowskiego.</span><span class="sxs-lookup"><span data-stu-id="226aa-243">The default implementation of <xref:System.Xaml.XamlMember.LookupIsAmbient%2A> uses this existing <xref:System.Windows.Markup.AmbientAttribute> technique, and it returns `true` if <xref:System.Windows.Markup.AmbientAttribute> exists on a member declaration.</span></span>  
  
 <span data-ttu-id="226aa-244"><xref:System.Windows.Markup.AmbientAttribute> znajduje się na elementach członkowskich kilka typów WPF, która obejmuje <xref:System.Windows.Application>, <xref:System.Windows.Setter>, i <xref:System.Windows.Style>.</span><span class="sxs-lookup"><span data-stu-id="226aa-244"><xref:System.Windows.Markup.AmbientAttribute> is found on members of several WPF types, which include <xref:System.Windows.Application>, <xref:System.Windows.Setter>, and <xref:System.Windows.Style>.</span></span> <span data-ttu-id="226aa-245">Również znajduje się na <xref:System.Windows.ResourceDictionary> typu, który connotes, że każdy członek używającą <xref:System.Windows.ResourceDictionary> zgodnie z jego typ należy traktować jako otoczenia nawet wtedy, gdy element członkowski nie jest specjalnie przypisane.</span><span class="sxs-lookup"><span data-stu-id="226aa-245">It is also found on the <xref:System.Windows.ResourceDictionary> type, which connotes that any member that uses <xref:System.Windows.ResourceDictionary> as its type should be considered ambient even if the member is not specifically attributed.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Markup.AmbientAttribute" />
      </Docs>
    </Member>
    <Member MemberName="IsAttachable">
      <MemberSignature Language="C#" Value="public bool IsAttachable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAttachable" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlMember.IsAttachable" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsAttachable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsAttachable { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsAttachable : bool" Usage="System.Xaml.XamlMember.IsAttachable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="226aa-246">Pobiera wartość wskazującą, czy to <see cref="T:System.Xaml.XamlMember" /> jest dołączalny element członkowski.</span>
          <span class="sxs-lookup">
            <span data-stu-id="226aa-246">Gets a value that indicates whether this <see cref="T:System.Xaml.XamlMember" /> is an attachable member.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="226aa-247">
            <see langword="true" /> Jeśli <see cref="T:System.Xaml.XamlMember" /> jest dołączalny element członkowski; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="226aa-247">
              <see langword="true" /> if this <see cref="T:System.Xaml.XamlMember" /> is an attachable member; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="226aa-248"><xref:System.Xaml.XamlMember.IsAttachable%2A> Wartość została zainicjowana w oparciu Konstruktor, który został użyty do utworzenia <xref:System.Xaml.XamlMember>.</span><span class="sxs-lookup"><span data-stu-id="226aa-248">The <xref:System.Xaml.XamlMember.IsAttachable%2A> value is initialized based on which constructor was used to construct a <xref:System.Xaml.XamlMember>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDirective">
      <MemberSignature Language="C#" Value="public bool IsDirective { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDirective" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlMember.IsDirective" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsDirective As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsDirective { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsDirective : bool" Usage="System.Xaml.XamlMember.IsDirective" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="226aa-249">Pobiera wartość wskazującą, czy to <see cref="T:System.Xaml.XamlMember" /> jest dyrektywą XAML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="226aa-249">Gets a value that indicates whether this <see cref="T:System.Xaml.XamlMember" /> is a XAML directive.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="226aa-250">
            <see langword="true" /> Jeśli <see cref="T:System.Xaml.XamlMember" /> jest XAML dyrektywy; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="226aa-250">
              <see langword="true" /> if this <see cref="T:System.Xaml.XamlMember" /> is a XAML directive; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="226aa-251"><xref:System.Xaml.XamlMember.IsDirective%2A> Wartość została zainicjowana w oparciu Konstruktor, który został użyty do utworzenia <xref:System.Xaml.XamlMember>.</span><span class="sxs-lookup"><span data-stu-id="226aa-251">The <xref:System.Xaml.XamlMember.IsDirective%2A> value is initialized based on which constructor was used to construct a <xref:System.Xaml.XamlMember>.</span></span> <span data-ttu-id="226aa-252">Podstawowym <xref:System.Xaml.XamlMember> inicjowania konstruktorów, aby <xref:System.Xaml.XamlMember.IsDirective%2A> jest `false`.</span><span class="sxs-lookup"><span data-stu-id="226aa-252">The base <xref:System.Xaml.XamlMember> constructors initialize so that <xref:System.Xaml.XamlMember.IsDirective%2A> is `false`.</span></span> <span data-ttu-id="226aa-253">Jednak <xref:System.Xaml.XamlDirective> klasy ( <xref:System.Xaml.XamlMember> klasy) inicjuje, aby <xref:System.Xaml.XamlMember.IsDirective%2A> jest `true`.</span><span class="sxs-lookup"><span data-stu-id="226aa-253">However, the <xref:System.Xaml.XamlDirective> class (a <xref:System.Xaml.XamlMember> derived class) initializes so that <xref:System.Xaml.XamlMember.IsDirective%2A> is `true`.</span></span>  
  
 <span data-ttu-id="226aa-254">Jeśli chcesz zgłosić <xref:System.Xaml.XamlMember.IsDirective%2A> jako `true` wywołań niestandardowej klasy schematu XAML dla członków XAML, upewnij się, pochodzi z <xref:System.Xaml.XamlDirective> ponieważ jest to jedyny sposób włączania tego zachowania.</span><span class="sxs-lookup"><span data-stu-id="226aa-254">If you want to report <xref:System.Xaml.XamlMember.IsDirective%2A> as `true` to callers of a custom XAML schema class for XAML members, make sure you derive from <xref:System.Xaml.XamlDirective> because that is the only way to enable that behavior.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEvent">
      <MemberSignature Language="C#" Value="public bool IsEvent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEvent" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlMember.IsEvent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsEvent As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsEvent { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsEvent : bool" Usage="System.Xaml.XamlMember.IsEvent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="226aa-255">Pobiera wartość wskazującą, czy to <see cref="T:System.Xaml.XamlMember" /> reprezentuje elementu członkowskiego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="226aa-255">Gets a value that indicates whether this <see cref="T:System.Xaml.XamlMember" /> represents an event member.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="226aa-256">
            <see langword="true" /> Jeśli <see cref="T:System.Xaml.XamlMember" /> reprezentuje zdarzenie; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="226aa-256">
              <see langword="true" /> if this <see cref="T:System.Xaml.XamlMember" /> represents an event; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="226aa-257">Wywoływanie <xref:System.Xaml.XamlMember.IsEvent%2A> wywołuje <xref:System.Xaml.XamlMember.LookupIsEvent%2A> lub określonego zastąpienia tej metody.</span><span class="sxs-lookup"><span data-stu-id="226aa-257">Calling <xref:System.Xaml.XamlMember.IsEvent%2A> invokes <xref:System.Xaml.XamlMember.LookupIsEvent%2A> or a specific override of that method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsNameValid">
      <MemberSignature Language="C#" Value="public bool IsNameValid { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsNameValid" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlMember.IsNameValid" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsNameValid As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsNameValid { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsNameValid : bool" Usage="System.Xaml.XamlMember.IsNameValid" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="226aa-258">Pobiera wartość wskazującą, czy to <see cref="T:System.Xaml.XamlMember" /> jest inicjowany z prawidłowym <see langword="xamlName" /> ciąg jako jego <see cref="P:System.Xaml.XamlMember.Name" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="226aa-258">Gets a value that indicates whether this <see cref="T:System.Xaml.XamlMember" /> is initialized with a valid <see langword="xamlName" /> string as its <see cref="P:System.Xaml.XamlMember.Name" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="226aa-259">
            <see langword="true" /> Jeśli <see cref="T:System.Xaml.XamlMember" /> jest inicjowany z prawidłowym <see langword="xamlName" /> , ciąg; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="226aa-259">
              <see langword="true" /> if this <see cref="T:System.Xaml.XamlMember" /> is initialized with a valid <see langword="xamlName" /> string; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlMember.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsReadOnly : bool" Usage="System.Xaml.XamlMember.IsReadOnly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="226aa-260">Pobiera wartość wskazującą, czy to <see cref="T:System.Xaml.XamlMember" /> reprezentuje element członkowski tylko do odczytu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="226aa-260">Gets a value that indicates whether this <see cref="T:System.Xaml.XamlMember" /> represents a read-only member.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="226aa-261">
            <see langword="true" /> Jeśli <see cref="T:System.Xaml.XamlMember" /> reprezentuje element członkowski tylko do odczytu; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="226aa-261">
              <see langword="true" /> if this <see cref="T:System.Xaml.XamlMember" /> represents a read-only member; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="226aa-262">Wywoływanie <xref:System.Xaml.XamlMember.IsReadOnly%2A> wywołuje <xref:System.Xaml.XamlMember.LookupIsReadOnly%2A> lub określonego zastąpienia tej metody.</span><span class="sxs-lookup"><span data-stu-id="226aa-262">Calling <xref:System.Xaml.XamlMember.IsReadOnly%2A> invokes <xref:System.Xaml.XamlMember.LookupIsReadOnly%2A> or a specific override of that method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsReadPublic">
      <MemberSignature Language="C#" Value="public bool IsReadPublic { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadPublic" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlMember.IsReadPublic" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsReadPublic As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsReadPublic { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsReadPublic : bool" Usage="System.Xaml.XamlMember.IsReadPublic" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="226aa-263">Pobiera wartość wskazującą, czy to <see cref="T:System.Xaml.XamlMember" /> reprezentuje element członkowski o można wywołać publicznej <see langword="get" /> metody dostępu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="226aa-263">Gets a value that indicates whether this <see cref="T:System.Xaml.XamlMember" /> represents a member with a callable public <see langword="get" /> accessor.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="226aa-264">
            <see langword="true" /> Jeśli <see cref="T:System.Xaml.XamlMember" /> reprezentuje można wywołać publicznej <see langword="get" /> akcesor; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="226aa-264">
              <see langword="true" /> if this <see cref="T:System.Xaml.XamlMember" /> represents a callable public <see langword="get" /> accessor; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="226aa-265"><xref:System.Xaml.XamlMember.IsReadPublic%2A> Wartość sprawdza, czy <xref:System.Xaml.XamlMember.DeclaringType%2A> jest publiczny.</span><span class="sxs-lookup"><span data-stu-id="226aa-265">The <xref:System.Xaml.XamlMember.IsReadPublic%2A> value checks whether the <xref:System.Xaml.XamlMember.DeclaringType%2A> is public.</span></span> <span data-ttu-id="226aa-266">Jeśli <xref:System.Xaml.XamlMember.DeclaringType%2A> jest niepubliczne, `get` metody dostępu nie można wywołać w sposób praktyczne i <xref:System.Xaml.XamlMember.IsReadPublic%2A> zwraca `false`.</span><span class="sxs-lookup"><span data-stu-id="226aa-266">If <xref:System.Xaml.XamlMember.DeclaringType%2A> is nonpublic, the `get` accessor is not callable in a practical way, and <xref:System.Xaml.XamlMember.IsReadPublic%2A> returns `false`.</span></span>  
  
 <span data-ttu-id="226aa-267">Wywoływanie <xref:System.Xaml.XamlMember.IsReadPublic%2A> wywołuje <xref:System.Xaml.XamlMember.LookupIsReadPublic%2A> lub określonego zastąpienia tej metody.</span><span class="sxs-lookup"><span data-stu-id="226aa-267">Calling <xref:System.Xaml.XamlMember.IsReadPublic%2A> invokes <xref:System.Xaml.XamlMember.LookupIsReadPublic%2A> or a specific override of that method.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="226aa-268"><xref:System.Xaml.XamlMember.LookupIsReadPublic%2A> Metody jest wirtualna i w związku z tym może zostać zastąpiona.</span><span class="sxs-lookup"><span data-stu-id="226aa-268">The <xref:System.Xaml.XamlMember.LookupIsReadPublic%2A> method is virtual and therefore, can be overridden.</span></span> <span data-ttu-id="226aa-269">Zastąpienie ma możliwość Zmień (złośliwy lub w inny sposób) informacje zgłoszone dostępu elementu członkowskiego XAML tak, aby go już wyrównuje w oczekiwany sposób, przy użyciu typu systemu dostępu do informacji o swojej podstawowej deklaracji CLR.</span><span class="sxs-lookup"><span data-stu-id="226aa-269">The override has the potential to change (maliciously or otherwise) the reported access information of a XAML member so that it no longer aligns in an expected way with the type system access information of its underlying CLR declaration.</span></span> <span data-ttu-id="226aa-270">Dla dowolnego krytyczny dla zabezpieczeń kontroli poziomy dostępu w zamian użyj podstawowego typu środowiska CLR.</span><span class="sxs-lookup"><span data-stu-id="226aa-270">For any security-critical checks of access levels, use the underlying CLR type instead.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsUnknown">
      <MemberSignature Language="C#" Value="public bool IsUnknown { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsUnknown" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlMember.IsUnknown" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsUnknown As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsUnknown { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsUnknown : bool" Usage="System.Xaml.XamlMember.IsUnknown" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="226aa-271">Pobiera wartość wskazującą, czy element członkowski nie jest rozpoznawana przez bazowego systemu, który jest używany do rozpoznawania typu i element członkowski.</span>
          <span class="sxs-lookup">
            <span data-stu-id="226aa-271">Gets a value that indicates whether the member is not resolvable by the backing system that is used for type and member resolution.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="226aa-272">
            <see langword="true" /> Jeśli element członkowski nie jest rozwiązywana; <see langword="false" /> Jeśli element członkowski jest rozpoznawana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="226aa-272">
              <see langword="true" /> if the member is not resolvable; <see langword="false" /> if the member is resolvable.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="226aa-273">A <xref:System.Xaml.XamlMember> który jest tworzony z <xref:System.Xaml.XamlMember.%23ctor%28System.String%2CSystem.Xaml.XamlType%2CSystem.Boolean%29> zwraca podpis `true` dla <xref:System.Xaml.XamlMember.IsUnknown%2A>.</span><span class="sxs-lookup"><span data-stu-id="226aa-273">A <xref:System.Xaml.XamlMember> that is constructed with the <xref:System.Xaml.XamlMember.%23ctor%28System.String%2CSystem.Xaml.XamlType%2CSystem.Boolean%29> signature returns `true` for <xref:System.Xaml.XamlMember.IsUnknown%2A>.</span></span>  
  
 <span data-ttu-id="226aa-274">Dla ścieżki obciążenia, która obejmuje <xref:System.Xaml.XamlObjectWriter>, <xref:System.Xaml.XamlMember> z `true` dla <xref:System.Xaml.XamlMember.IsUnknown%2A> nie można zapisać do obiektu wykresu.</span><span class="sxs-lookup"><span data-stu-id="226aa-274">For a load path that involves <xref:System.Xaml.XamlObjectWriter>, a <xref:System.Xaml.XamlMember> with `true` for <xref:System.Xaml.XamlMember.IsUnknown%2A> cannot be written into an object graph.</span></span> <span data-ttu-id="226aa-275">W domyślnej implementacji w .NET Framework XAML usług API <xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A?displayProperty=nameWithType> wywołać zgłasza <xref:System.Xaml.XamlObjectWriterException> podczas odpowiedniego <xref:System.Xaml.XamlMember> raporty `true` dla <xref:System.Xaml.XamlMember.IsUnknown%2A>.</span><span class="sxs-lookup"><span data-stu-id="226aa-275">Under the default implementations in .NET Framework XAML Services APIs, the <xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A?displayProperty=nameWithType> call throws a <xref:System.Xaml.XamlObjectWriterException> when the relevant <xref:System.Xaml.XamlMember> reports `true` for <xref:System.Xaml.XamlMember.IsUnknown%2A>.</span></span>  
  
 <span data-ttu-id="226aa-276">Nie należy konstruować <xref:System.Xaml.XamlMember> , który ma wartość `true` dla <xref:System.Xaml.XamlMember.IsUnknown%2A> chyba, że wdrożenie może obsłużyć wyjątki od <xref:System.Xaml.XamlObjectWriter>, lub w inny sposób, aby dopasować <xref:System.Xaml.XamlObjectWriter> zachowanie.</span><span class="sxs-lookup"><span data-stu-id="226aa-276">You should not construct a <xref:System.Xaml.XamlMember> that has a value of `true` for <xref:System.Xaml.XamlMember.IsUnknown%2A> unless your implementation can handle the exceptions from <xref:System.Xaml.XamlObjectWriter>, or you have other ways to adjust the <xref:System.Xaml.XamlObjectWriter> behavior.</span></span>  
  
 <span data-ttu-id="226aa-277">Wywoływanie <xref:System.Xaml.XamlMember.IsUnknown%2A> wywołuje <xref:System.Xaml.XamlMember.LookupIsUnknown%2A> lub określonego zastąpienia tej metody.</span><span class="sxs-lookup"><span data-stu-id="226aa-277">Calling <xref:System.Xaml.XamlMember.IsUnknown%2A> invokes <xref:System.Xaml.XamlMember.LookupIsUnknown%2A> or a specific override of that method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsWriteOnly">
      <MemberSignature Language="C#" Value="public bool IsWriteOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsWriteOnly" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlMember.IsWriteOnly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsWriteOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsWriteOnly { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsWriteOnly : bool" Usage="System.Xaml.XamlMember.IsWriteOnly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="226aa-278">Pobiera wartość wskazującą, czy to <see cref="T:System.Xaml.XamlMember" /> reprezentuje tylko do zapisu elementu członkowskiego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="226aa-278">Gets a value that indicates whether this <see cref="T:System.Xaml.XamlMember" /> represents a write-only member.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="226aa-279">
            <see langword="true" /> Jeśli <see cref="T:System.Xaml.XamlMember" /> reprezentuje tylko do zapisu elementu członkowskiego; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="226aa-279">
              <see langword="true" /> if this <see cref="T:System.Xaml.XamlMember" /> represents a write-only member; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="226aa-280">Wywoływanie <xref:System.Xaml.XamlMember.IsWriteOnly%2A> wywołuje <xref:System.Xaml.XamlMember.LookupIsWriteOnly%2A> lub określonego zastąpienia tej metody.</span><span class="sxs-lookup"><span data-stu-id="226aa-280">Calling <xref:System.Xaml.XamlMember.IsWriteOnly%2A> invokes <xref:System.Xaml.XamlMember.LookupIsWriteOnly%2A> or a specific override of that method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsWritePublic">
      <MemberSignature Language="C#" Value="public bool IsWritePublic { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsWritePublic" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlMember.IsWritePublic" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsWritePublic As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsWritePublic { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsWritePublic : bool" Usage="System.Xaml.XamlMember.IsWritePublic" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="226aa-281">Pobiera wartość wskazującą, czy to <see cref="T:System.Xaml.XamlMember" /> reprezentuje element członkowski, który ma można wywołać publicznej <see langword="set" /> metody dostępu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="226aa-281">Gets a value that indicates whether this <see cref="T:System.Xaml.XamlMember" /> represents a member that has a callable public <see langword="set" /> accessor.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="226aa-282">
            <see langword="true" /> Jeśli <see cref="T:System.Xaml.XamlMember" /> reprezentuje można wywołać publicznej <see langword="set" /> akcesor; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="226aa-282">
              <see langword="true" /> if this <see cref="T:System.Xaml.XamlMember" /> represents a callable public <see langword="set" /> accessor; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="226aa-283"><xref:System.Xaml.XamlMember.IsWritePublic%2A> Uwzględnia wartość czy <xref:System.Xaml.XamlMember.DeclaringType%2A> jest publiczny jako część określenie.</span><span class="sxs-lookup"><span data-stu-id="226aa-283">The <xref:System.Xaml.XamlMember.IsWritePublic%2A> value considers whether the <xref:System.Xaml.XamlMember.DeclaringType%2A> is public as part of the determination.</span></span> <span data-ttu-id="226aa-284">Jeśli <xref:System.Xaml.XamlMember.DeclaringType%2A> jest niepubliczne, `set` metody dostępu nie można wywołać w sposób praktyczne i <xref:System.Xaml.XamlMember.IsWritePublic%2A> zwraca `false`.</span><span class="sxs-lookup"><span data-stu-id="226aa-284">If <xref:System.Xaml.XamlMember.DeclaringType%2A> is nonpublic, the `set` accessor is not callable in a practical way, and <xref:System.Xaml.XamlMember.IsWritePublic%2A> returns `false`.</span></span>  
  
 <span data-ttu-id="226aa-285">Wywoływanie <xref:System.Xaml.XamlMember.IsWritePublic%2A> wywołuje <xref:System.Xaml.XamlMember.LookupIsWritePublic%2A> lub określonego zastąpienia tej metody.</span><span class="sxs-lookup"><span data-stu-id="226aa-285">Calling <xref:System.Xaml.XamlMember.IsWritePublic%2A> invokes <xref:System.Xaml.XamlMember.LookupIsWritePublic%2A> or a specific override of that method.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="226aa-286"><xref:System.Xaml.XamlMember.LookupIsWritePublic%2A> Metody jest wirtualna i w związku z tym może zostać zastąpiona.</span><span class="sxs-lookup"><span data-stu-id="226aa-286">The <xref:System.Xaml.XamlMember.LookupIsWritePublic%2A> method is virtual and therefore, can be overridden.</span></span> <span data-ttu-id="226aa-287">Zastąpienie ma możliwość Zmień (złośliwy lub w inny sposób) informacje zgłoszone dostępu elementu członkowskiego XAML tak, aby go już wyrównuje w oczekiwany sposób, przy użyciu typu systemu dostępu do informacji o swojej podstawowej deklaracji CLR.</span><span class="sxs-lookup"><span data-stu-id="226aa-287">The override has the potential to change (maliciously or otherwise) the reported access information of a XAML member so that it no longer aligns in an expected way with the type system access information of its underlying CLR declaration.</span></span> <span data-ttu-id="226aa-288">Dla dowolnego krytyczny dla zabezpieczeń kontroli poziomy dostępu w zamian użyj podstawowego typu środowiska CLR.</span><span class="sxs-lookup"><span data-stu-id="226aa-288">For any security-critical checks of access levels, use the underlying CLR type instead.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupCustomAttributeProvider">
      <MemberSignature Language="C#" Value="protected virtual System.Reflection.ICustomAttributeProvider LookupCustomAttributeProvider ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Reflection.ICustomAttributeProvider LookupCustomAttributeProvider() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.LookupCustomAttributeProvider" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupCustomAttributeProvider () As ICustomAttributeProvider" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Reflection::ICustomAttributeProvider ^ LookupCustomAttributeProvider();" />
      <MemberSignature Language="F#" Value="abstract member LookupCustomAttributeProvider : unit -&gt; System.Reflection.ICustomAttributeProvider&#xA;override this.LookupCustomAttributeProvider : unit -&gt; System.Reflection.ICustomAttributeProvider" Usage="xamlMember.LookupCustomAttributeProvider " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.ICustomAttributeProvider</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="226aa-289">Po zaimplementowaniu w klasie pochodnej zwraca <see cref="T:System.Reflection.ICustomAttributeProvider" /> implementacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="226aa-289">When implemented in a derived class, returns an <see cref="T:System.Reflection.ICustomAttributeProvider" /> implementation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="226aa-290">
            <see cref="T:System.Reflection.ICustomAttributeProvider" /> Implementacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="226aa-290">An <see cref="T:System.Reflection.ICustomAttributeProvider" /> implementation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="226aa-291">Przesłonić tę metodę, aby zapewnić wewnętrzny odbicia z alternatywny sposób uzyskiwania wartości atrybutów CLR.</span><span class="sxs-lookup"><span data-stu-id="226aa-291">Override this method to provide the internal reflection with an alternative way to obtain CLR attribute values.</span></span> <span data-ttu-id="226aa-292">W przypadku braku przesłonięcie wewnętrznego reflektora używa typowe logiki odbicia CLR, takie jak wywołania <xref:System.Reflection.CustomAttributeData.GetCustomAttributes%2A>.</span><span class="sxs-lookup"><span data-stu-id="226aa-292">In the absence of an override, the internal reflector uses typical CLR reflection logic such as calls to <xref:System.Reflection.CustomAttributeData.GetCustomAttributes%2A>.</span></span>  
  
 <span data-ttu-id="226aa-293">Domyślna implementacja zwraca `null`.</span><span class="sxs-lookup"><span data-stu-id="226aa-293">The default implementation returns `null`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupDeferringLoader">
      <MemberSignature Language="C#" Value="protected virtual System.Xaml.Schema.XamlValueConverter&lt;System.Xaml.XamlDeferringLoader&gt; LookupDeferringLoader ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Xaml.Schema.XamlValueConverter`1&lt;class System.Xaml.XamlDeferringLoader&gt; LookupDeferringLoader() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.LookupDeferringLoader" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupDeferringLoader () As XamlValueConverter(Of XamlDeferringLoader)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Xaml::Schema::XamlValueConverter&lt;System::Xaml::XamlDeferringLoader ^&gt; ^ LookupDeferringLoader();" />
      <MemberSignature Language="F#" Value="abstract member LookupDeferringLoader : unit -&gt; System.Xaml.Schema.XamlValueConverter&lt;System.Xaml.XamlDeferringLoader&gt;&#xA;override this.LookupDeferringLoader : unit -&gt; System.Xaml.Schema.XamlValueConverter&lt;System.Xaml.XamlDeferringLoader&gt;" Usage="xamlMember.LookupDeferringLoader " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.Schema.XamlValueConverter&lt;System.Xaml.XamlDeferringLoader&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="226aa-294">Zwraca <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> obiektów zadeklarowany jako obiekt, który służy do ładowanie odłożone języka XAML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="226aa-294">Returns a <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> object, which is used for deferred loading of XAML declared objects.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="226aa-295">A <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> mający <see cref="T:System.Xaml.XamlDeferringLoader" /> ograniczenie ogólnego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="226aa-295">A <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> that has a <see cref="T:System.Xaml.XamlDeferringLoader" /> constraint on the generic.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="226aa-296">Ta metoda jest wywoływana, gdy obiekt wywołujący pobiera wartość z zakresu od <xref:System.Xaml.XamlMember.DeferringLoader%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="226aa-296">This method is invoked when a caller gets a value from the <xref:System.Xaml.XamlMember.DeferringLoader%2A> property.</span></span> <span data-ttu-id="226aa-297">Przesłonić tę metodę, jeśli chcesz <xref:System.Xaml.XamlMember.DeferringLoader%2A> aby zwrócić wartość, która różni się od wartości, który został włączony przez domyślny odbicia wewnętrznych, i również udostępniając niestandardowe <xref:System.Xaml.Schema.XamlMemberInvoker> informacji.</span><span class="sxs-lookup"><span data-stu-id="226aa-297">Override this method if you want <xref:System.Xaml.XamlMember.DeferringLoader%2A> to return a value that differs from the value that is enabled by default internal reflection, and if you are also providing custom <xref:System.Xaml.Schema.XamlMemberInvoker> information.</span></span>  
  
 <span data-ttu-id="226aa-298">Domyślna implementacja zwraca obiekt albo odczytując <xref:System.Windows.Markup.XamlDeferLoadAttribute> lub przy użyciu <xref:System.Xaml.XamlDeferringLoader> z typ deklarujący.</span><span class="sxs-lookup"><span data-stu-id="226aa-298">The default implementation returns an object either by reading <xref:System.Windows.Markup.XamlDeferLoadAttribute> or using a <xref:System.Xaml.XamlDeferringLoader> from the declaring type.</span></span> <span data-ttu-id="226aa-299">Jeśli żaden obiekt jest dostępny, ta metoda może zwracać `null`.</span><span class="sxs-lookup"><span data-stu-id="226aa-299">If neither object is available, this method might return `null`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlMember.DeferringLoader" />
      </Docs>
    </Member>
    <Member MemberName="LookupDependsOn">
      <MemberSignature Language="C#" Value="protected virtual System.Collections.Generic.IList&lt;System.Xaml.XamlMember&gt; LookupDependsOn ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Collections.Generic.IList`1&lt;class System.Xaml.XamlMember&gt; LookupDependsOn() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.LookupDependsOn" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupDependsOn () As IList(Of XamlMember)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Collections::Generic::IList&lt;System::Xaml::XamlMember ^&gt; ^ LookupDependsOn();" />
      <MemberSignature Language="F#" Value="abstract member LookupDependsOn : unit -&gt; System.Collections.Generic.IList&lt;System.Xaml.XamlMember&gt;&#xA;override this.LookupDependsOn : unit -&gt; System.Collections.Generic.IList&lt;System.Xaml.XamlMember&gt;" Usage="xamlMember.LookupDependsOn " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Xaml.XamlMember&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="226aa-300">Zwraca listę <see cref="T:System.Xaml.XamlMember" /> obiektów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="226aa-300">Returns a list of <see cref="T:System.Xaml.XamlMember" /> objects.</span>
          </span>
          <span data-ttu-id="226aa-301">Elementy na liście raportu elementów członkowskich, do których istnieją relacje zależności dla kolejność inicjowania względem to <see cref="T:System.Xaml.XamlMember" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="226aa-301">Items in the list report the members where dependency relationships for initialization order exist relative to this <see cref="T:System.Xaml.XamlMember" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="226aa-302">Lista <see cref="T:System.Xaml.XamlMember" /> obiektów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="226aa-302">A list of <see cref="T:System.Xaml.XamlMember" /> objects.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="226aa-303">Ta metoda jest wywoływana, gdy obiekt wywołujący pobiera wartość z zakresu od <xref:System.Xaml.XamlMember.DependsOn%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="226aa-303">This method is invoked when a caller gets a value from the <xref:System.Xaml.XamlMember.DependsOn%2A> property.</span></span> <span data-ttu-id="226aa-304">Przesłonić tę metodę, jeśli chcesz <xref:System.Xaml.XamlMember.DependsOn%2A> aby zwrócić wartość, która różni się od wartości, który został włączony przez domyślny odbicia wewnętrznych, i również udostępniając niestandardowe <xref:System.Xaml.Schema.XamlMemberInvoker> informacji.</span><span class="sxs-lookup"><span data-stu-id="226aa-304">Override this method if you want <xref:System.Xaml.XamlMember.DependsOn%2A> to return a value that differs from the value that is enabled by default internal reflection, and if you are also providing custom <xref:System.Xaml.Schema.XamlMemberInvoker> information.</span></span>  
  
 <span data-ttu-id="226aa-305">Implementacje składników zapisywania i odczytywania WPF XAML atrybutu to miejsce w przypadku <xref:System.Windows.Markup.DependsOnAttribute>.</span><span class="sxs-lookup"><span data-stu-id="226aa-305">The WPF XAML reader and writer implementations attribute this case with <xref:System.Windows.Markup.DependsOnAttribute>.</span></span> <span data-ttu-id="226aa-306">Domyślna implementacja używa tego istniejących <xref:System.Windows.Markup.DependsOnAttribute> technik.</span><span class="sxs-lookup"><span data-stu-id="226aa-306">The default implementation uses this existing <xref:System.Windows.Markup.DependsOnAttribute> technique.</span></span>  
  
 <span data-ttu-id="226aa-307">Przesłonić tę metodę, jeśli nie używasz <xref:System.Windows.Markup.DependsOnAttribute> dla tego celu i mają zamiar zastąpić technika tego wskazująca kolejność przetwarzania właściwości z własnych techniki.</span><span class="sxs-lookup"><span data-stu-id="226aa-307">Override this method if you are not using <xref:System.Windows.Markup.DependsOnAttribute> for this purpose and intend to replace that technique for indicating property processing order with your own technique.</span></span> <span data-ttu-id="226aa-308">Jeśli nie zamierzasz obsługuje kolejność przetwarzania właściwości, można użyć w implementacji domyślnej, ponieważ go nie zwróciło żadnych wyników, który jest odpowiedni.</span><span class="sxs-lookup"><span data-stu-id="226aa-308">If you do not intend to support a property processing order, you can use the default implementation because it returns no results, which is appropriate.</span></span>  
  
 <span data-ttu-id="226aa-309">Lista jest tylko do odczytu.</span><span class="sxs-lookup"><span data-stu-id="226aa-309">The list is read-only.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlMember.DependsOn" />
      </Docs>
    </Member>
    <Member MemberName="LookupInvoker">
      <MemberSignature Language="C#" Value="protected virtual System.Xaml.Schema.XamlMemberInvoker LookupInvoker ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Xaml.Schema.XamlMemberInvoker LookupInvoker() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.LookupInvoker" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupInvoker () As XamlMemberInvoker" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Xaml::Schema::XamlMemberInvoker ^ LookupInvoker();" />
      <MemberSignature Language="F#" Value="abstract member LookupInvoker : unit -&gt; System.Xaml.Schema.XamlMemberInvoker&#xA;override this.LookupInvoker : unit -&gt; System.Xaml.Schema.XamlMemberInvoker" Usage="xamlMember.LookupInvoker " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.Schema.XamlMemberInvoker</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="226aa-310">Zwraca <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> skojarzonego z tym <see cref="T:System.Xaml.XamlMember" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="226aa-310">Returns a <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> that is associated with this <see cref="T:System.Xaml.XamlMember" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="226aa-311">
            <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> Informacje na temat tego <see cref="T:System.Xaml.XamlMember" />; lub <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="226aa-311">The <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> information for this <see cref="T:System.Xaml.XamlMember" />; or <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="226aa-312">Ta metoda jest wywoływana przez wywołania <xref:System.Xaml.XamlMember.Invoker%2A>.</span><span class="sxs-lookup"><span data-stu-id="226aa-312">This method is invoked by calls to <xref:System.Xaml.XamlMember.Invoker%2A>.</span></span>  
  
 <span data-ttu-id="226aa-313">Domyślna implementacja nie wymaga, aby <xref:System.Xaml.XamlMember> można skonstruować za pomocą jednego z konstruktorów, które przekazują początkowej <xref:System.Xaml.Schema.XamlMemberInvoker>.</span><span class="sxs-lookup"><span data-stu-id="226aa-313">The default implementation does not require that a <xref:System.Xaml.XamlMember> be constructed by using one of the constructors that pass an initial <xref:System.Xaml.Schema.XamlMemberInvoker>.</span></span> <span data-ttu-id="226aa-314">Jednak <xref:System.Xaml.XamlMember.UnderlyingMember%2A> wartości musi istnieć dla <xref:System.Xaml.XamlMember>; w przeciwnym razie wartość domyślna implementacja zwraca `null`.</span><span class="sxs-lookup"><span data-stu-id="226aa-314">However, an <xref:System.Xaml.XamlMember.UnderlyingMember%2A> value must exist for the <xref:System.Xaml.XamlMember>; otherwise, the default implementation returns `null`.</span></span>  
  
 <span data-ttu-id="226aa-315">Ta metoda musi również pochodzić od <xref:System.Xaml.Schema.XamlMemberInvoker> i zamierzony zwracany typ klasy pochodnej.</span><span class="sxs-lookup"><span data-stu-id="226aa-315">Override this method if you also derive from <xref:System.Xaml.Schema.XamlMemberInvoker> and intend to return the derived class.</span></span> <span data-ttu-id="226aa-316">Jeśli `null`, <xref:System.Xaml.XamlMember.Invoker%2A> zwraca <xref:System.Xaml.Schema.XamlMemberInvoker.UnknownInvoker%2A?displayProperty=nameWithType> dotyczące obiektów wywołujących.</span><span class="sxs-lookup"><span data-stu-id="226aa-316">If you return `null`, <xref:System.Xaml.XamlMember.Invoker%2A> returns <xref:System.Xaml.Schema.XamlMemberInvoker.UnknownInvoker%2A?displayProperty=nameWithType> to callers.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlMember.Invoker" />
        <altmember cref="T:System.Xaml.Schema.XamlMemberInvoker" />
      </Docs>
    </Member>
    <Member MemberName="LookupIsAmbient">
      <MemberSignature Language="C#" Value="protected virtual bool LookupIsAmbient ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool LookupIsAmbient() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.LookupIsAmbient" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupIsAmbient () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool LookupIsAmbient();" />
      <MemberSignature Language="F#" Value="abstract member LookupIsAmbient : unit -&gt; bool&#xA;override this.LookupIsAmbient : unit -&gt; bool" Usage="xamlMember.LookupIsAmbient " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="226aa-317">Zwraca czy to <see cref="T:System.Xaml.XamlMember" /> został zgłoszony jako właściwością otoczenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="226aa-317">Returns whether this <see cref="T:System.Xaml.XamlMember" /> is reported as an ambient property.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="226aa-318">
            <see langword="true" /> Aby zgłosić to <see cref="T:System.Xaml.XamlMember" /> jako właściwość otoczenia; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="226aa-318">
              <see langword="true" /> to report this <see cref="T:System.Xaml.XamlMember" /> as an ambient property; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="226aa-319">Ta metoda jest wywoływana przez wewnętrzny wywołania, które Sprawdź, czy informacje o właściwościach otaczającego XAML.</span><span class="sxs-lookup"><span data-stu-id="226aa-319">This method is invoked by internal calls that check for ambient XAML property information.</span></span> <span data-ttu-id="226aa-320">Właściwość otoczenia zachowanie jest uwzględnione w publicznych działanie interfejsu API czytników XAML i zapisywania XAML.</span><span class="sxs-lookup"><span data-stu-id="226aa-320">Ambient property behavior is accounted for in the public API behavior of XAML readers and XAML writers.</span></span> <span data-ttu-id="226aa-321">Wywołania wewnętrznego, które odwołują się <xref:System.Xaml.XamlMember.LookupIsAmbient%2A> są zwykle część logiki przetwarzania XAML, aby upewnić się, że wartości, które opierają się na użycie otoczenia kwalifikację typu obiektów i może działać prawidłowo.</span><span class="sxs-lookup"><span data-stu-id="226aa-321">The internal calls that reference <xref:System.Xaml.XamlMember.LookupIsAmbient%2A> are usually part of XAML processing logic to make sure that objects and values that rely on ambient usage for type qualification can function correctly.</span></span> <span data-ttu-id="226aa-322">Domyślna implementacja usługi XAML .NET Framework używa przypisywanie uzyskać te informacje z odbicia przez tworzenie kopii typów CLR.</span><span class="sxs-lookup"><span data-stu-id="226aa-322">The default .NET Framework XAML Services implementation uses CLR attributing to obtain this information from reflection over backing types.</span></span> <span data-ttu-id="226aa-323">W szczególności sprawdza Domyślna implementacja <xref:System.Windows.Markup.AmbientAttribute> i zwraca `true` dla <xref:System.Xaml.XamlMember.LookupIsAmbient%2A> Jeśli <xref:System.Windows.Markup.AmbientAttribute> istnieje w definicji elementu członkowskiego.</span><span class="sxs-lookup"><span data-stu-id="226aa-323">Specifically, the default implementation checks for <xref:System.Windows.Markup.AmbientAttribute> and returns `true` for <xref:System.Xaml.XamlMember.LookupIsAmbient%2A> if <xref:System.Windows.Markup.AmbientAttribute> exists on a member definition.</span></span>  
  
 <span data-ttu-id="226aa-324">Przesłonić tę metodę, jeśli nie używasz <xref:System.Windows.Markup.AmbientAttribute> dla tego celu i zamierzasz zamienić technika tego wskazująca właściwości otaczających XAML z własnych techniki.</span><span class="sxs-lookup"><span data-stu-id="226aa-324">Override this method if you are not using <xref:System.Windows.Markup.AmbientAttribute> for this purpose and intend to replace that technique for indicating ambient XAML properties with your own technique.</span></span>  
  
 <span data-ttu-id="226aa-325">Przykład interfejsy API z WPF, która atrybutem <xref:System.Windows.Markup.AmbientAttribute> są <xref:System.Windows.Trigger.Property%2A?displayProperty=nameWithType> i <xref:System.Windows.Style.BasedOn%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="226aa-325">Example APIs from WPF that attribute with <xref:System.Windows.Markup.AmbientAttribute> are <xref:System.Windows.Trigger.Property%2A?displayProperty=nameWithType> and <xref:System.Windows.Style.BasedOn%2A?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Markup.AmbientAttribute" />
      </Docs>
    </Member>
    <Member MemberName="LookupIsEvent">
      <MemberSignature Language="C#" Value="protected virtual bool LookupIsEvent ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool LookupIsEvent() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.LookupIsEvent" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupIsEvent () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool LookupIsEvent();" />
      <MemberSignature Language="F#" Value="abstract member LookupIsEvent : unit -&gt; bool&#xA;override this.LookupIsEvent : unit -&gt; bool" Usage="xamlMember.LookupIsEvent " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="226aa-326">Zwraca czy to <see cref="T:System.Xaml.XamlMember" /> reprezentuje zdarzenie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="226aa-326">Returns whether this <see cref="T:System.Xaml.XamlMember" /> represents an event.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="226aa-327">
            <see langword="true" /> w raporcie tego <see cref="T:System.Xaml.XamlMember" /> reprezentuje zdarzenie; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="226aa-327">
              <see langword="true" /> to report that this <see cref="T:System.Xaml.XamlMember" /> represents an event; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="226aa-328">Implementacja domyślnych operacji sprawdzania czy <xref:System.Xaml.XamlMember.UnderlyingMember%2A> jest typu <xref:System.Reflection.EventInfo>, a jeśli tak jest, zwraca `true`.</span><span class="sxs-lookup"><span data-stu-id="226aa-328">The default implementation checks whether <xref:System.Xaml.XamlMember.UnderlyingMember%2A> is of type <xref:System.Reflection.EventInfo>, and if it is, returns `true`.</span></span>  
  
 <span data-ttu-id="226aa-329">Ta metoda jest wywoływana, gdy obiekt wywołujący pobiera wartość z zakresu od <xref:System.Xaml.XamlMember.IsEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="226aa-329">This method is invoked when a caller gets a value from <xref:System.Xaml.XamlMember.IsEvent%2A>.</span></span> <span data-ttu-id="226aa-330">Przesłonić tę metodę, jeśli chcesz raportu dotyczącego wyników uniform dla całego <xref:System.Xaml.XamlMember> klasy, lub jeśli znajduje się specjalistyczny dostępnych metadanych, który może zostać zinterpretowany ustalenie XAML typu oświadczenia systemu na poszczególnych przypadków.</span><span class="sxs-lookup"><span data-stu-id="226aa-330">Override this method if you want to report uniform results for an entire <xref:System.Xaml.XamlMember> derived class, or if you have specialized metadata available that can be interpreted to determine XAML type system representations on a per-case basis.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlMember.IsEvent" />
      </Docs>
    </Member>
    <Member MemberName="LookupIsReadOnly">
      <MemberSignature Language="C#" Value="protected virtual bool LookupIsReadOnly ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool LookupIsReadOnly() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.LookupIsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupIsReadOnly () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool LookupIsReadOnly();" />
      <MemberSignature Language="F#" Value="abstract member LookupIsReadOnly : unit -&gt; bool&#xA;override this.LookupIsReadOnly : unit -&gt; bool" Usage="xamlMember.LookupIsReadOnly " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="226aa-331">Zwraca czy to <see cref="T:System.Xaml.XamlMember" /> reprezentuje właściwość przeznaczone tylko do odczytu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="226aa-331">Returns whether this <see cref="T:System.Xaml.XamlMember" /> represents an intended read-only property.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="226aa-332">
            <see langword="true" /> Aby zgłosić to <see cref="T:System.Xaml.XamlMember" /> jako zamierzone właściwość tylko do odczytu; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="226aa-332">
              <see langword="true" /> to report this <see cref="T:System.Xaml.XamlMember" /> as an intended read-only property; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="226aa-333">Domyślna implementacja zwraca `true` Jeśli <xref:System.Xaml.XamlMember.UnderlyingMember%2A> istnieje, ale publiczny `set` akcesor nie istnieje dla niego, zgodnie z ustaleniami odbicia wewnętrznych.</span><span class="sxs-lookup"><span data-stu-id="226aa-333">The default implementation returns `true` if <xref:System.Xaml.XamlMember.UnderlyingMember%2A> exists, but a public `set` accessor does not exist for it, as determined by internal reflection.</span></span>  
  
 <span data-ttu-id="226aa-334">Ta metoda jest wywoływana, gdy obiekt wywołujący pobiera wartość z zakresu od <xref:System.Xaml.XamlMember.IsReadOnly%2A>.</span><span class="sxs-lookup"><span data-stu-id="226aa-334">This method is invoked when a caller gets a value from <xref:System.Xaml.XamlMember.IsReadOnly%2A>.</span></span> <span data-ttu-id="226aa-335">Przesłonić tę metodę, jeśli chcesz raportu dotyczącego wyników uniform dla całego <xref:System.Xaml.XamlMember> klasy, lub jeśli znajduje się specjalistyczny dostępnych metadanych, który może zostać zinterpretowany ustalenie XAML typu oświadczenia systemu na poszczególnych przypadków.</span><span class="sxs-lookup"><span data-stu-id="226aa-335">Override this method if you want to report uniform results for an entire <xref:System.Xaml.XamlMember> derived class, or if you have specialized metadata available that can be interpreted to determine XAML type system representations on a per-case basis.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlMember.IsReadOnly" />
      </Docs>
    </Member>
    <Member MemberName="LookupIsReadPublic">
      <MemberSignature Language="C#" Value="protected virtual bool LookupIsReadPublic ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool LookupIsReadPublic() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.LookupIsReadPublic" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupIsReadPublic () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool LookupIsReadPublic();" />
      <MemberSignature Language="F#" Value="abstract member LookupIsReadPublic : unit -&gt; bool&#xA;override this.LookupIsReadPublic : unit -&gt; bool" Usage="xamlMember.LookupIsReadPublic " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="226aa-336">Zwraca czy to <see cref="T:System.Xaml.XamlMember" /> reprezentuje właściwość, która ma publiczny <see langword="get" /> metody dostępu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="226aa-336">Returns whether this <see cref="T:System.Xaml.XamlMember" /> represents a property that has a public <see langword="get" /> accessor.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="226aa-337">
            <see langword="true" /> Jeśli <see cref="T:System.Xaml.XamlMember" /> reprezentuje właściwość, która ma publiczny <see langword="get" /> akcesor; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="226aa-337">
              <see langword="true" /> if this <see cref="T:System.Xaml.XamlMember" /> represents a property that has a public <see langword="get" /> accessor; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="226aa-338">Domyślna implementacja zwraca wyniki na podstawie odbicia wewnętrznych lub Negacja <xref:System.Xaml.XamlMember.IsWriteOnly%2A>, w tej kolejności przetwarzania.</span><span class="sxs-lookup"><span data-stu-id="226aa-338">The default implementation returns results based either on internal reflection or the negation of <xref:System.Xaml.XamlMember.IsWriteOnly%2A>, processing in that order.</span></span>  
  
 <span data-ttu-id="226aa-339"><xref:System.Xaml.XamlMember.LookupIsReadPublic%2A> Zwraca czy ten element członkowski jest publiczny; Zwraca `true` dla publicznego elementu członkowskiego na nonpublic, typem deklarującym.</span><span class="sxs-lookup"><span data-stu-id="226aa-339"><xref:System.Xaml.XamlMember.LookupIsReadPublic%2A> returns whether the member itself is public; it returns `true` for a public member on a nonpublic declaring type.</span></span> <span data-ttu-id="226aa-340">Użyj <xref:System.Xaml.XamlMember.IsReadPublic%2A> zamiast tego, jeśli chcesz również wziąć pod uwagę widoczność typ deklarujący.</span><span class="sxs-lookup"><span data-stu-id="226aa-340">Use <xref:System.Xaml.XamlMember.IsReadPublic%2A> instead, if you also want to consider the visibility of the declaring type.</span></span>  
  
 <span data-ttu-id="226aa-341">Ta metoda jest wywoływana, gdy obiekt wywołujący pobiera wartość z zakresu od <xref:System.Xaml.XamlMember.IsReadPublic%2A>.</span><span class="sxs-lookup"><span data-stu-id="226aa-341">This method is invoked when a caller gets a value from <xref:System.Xaml.XamlMember.IsReadPublic%2A>.</span></span> <span data-ttu-id="226aa-342">Przesłonić tę metodę, jeśli chcesz raportu dotyczącego wyników uniform dla całego <xref:System.Xaml.XamlMember> klasy, lub jeśli znajduje się specjalistyczny dostępne, aby określić to na poszczególnych przypadków metadanych.</span><span class="sxs-lookup"><span data-stu-id="226aa-342">Override this method if you want to report uniform results for an entire <xref:System.Xaml.XamlMember> derived class, or if you have specialized metadata available to determine this on a per-case basis.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="226aa-343"><xref:System.Xaml.XamlMember.LookupIsReadPublic%2A> Metody jest wirtualna i w związku z tym może zostać zastąpiona.</span><span class="sxs-lookup"><span data-stu-id="226aa-343">The <xref:System.Xaml.XamlMember.LookupIsReadPublic%2A> method is virtual and therefore, can be overridden.</span></span> <span data-ttu-id="226aa-344">Zastąpienie ma możliwość Zmień (złośliwy lub w inny sposób) informacje zgłoszone dostępu elementu członkowskiego XAML tak, aby go już wyrównuje w oczekiwany sposób, przy użyciu typu systemu dostępu do informacji o swojej podstawowej deklaracji CLR.</span><span class="sxs-lookup"><span data-stu-id="226aa-344">The override has the potential to change (maliciously or otherwise) the reported access information of a XAML member so that it no longer aligns in an expected way with the type system access information of its underlying CLR declaration.</span></span> <span data-ttu-id="226aa-345">Dla dowolnego krytyczny dla zabezpieczeń kontroli poziomy dostępu w zamian użyj podstawowego typu środowiska CLR.</span><span class="sxs-lookup"><span data-stu-id="226aa-345">For any security-critical checks of access levels, use the underlying CLR type instead.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlMember.IsReadPublic" />
      </Docs>
    </Member>
    <Member MemberName="LookupIsUnknown">
      <MemberSignature Language="C#" Value="protected virtual bool LookupIsUnknown ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool LookupIsUnknown() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.LookupIsUnknown" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupIsUnknown () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool LookupIsUnknown();" />
      <MemberSignature Language="F#" Value="abstract member LookupIsUnknown : unit -&gt; bool&#xA;override this.LookupIsUnknown : unit -&gt; bool" Usage="xamlMember.LookupIsUnknown " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="226aa-346">Zwraca czy to <see cref="T:System.Xaml.XamlMember" /> reprezentuje element członkowski, który nie jest rozpoznawana przez bazowego systemu, który jest używany do rozpoznawania typu i element członkowski.</span>
          <span class="sxs-lookup">
            <span data-stu-id="226aa-346">Returns whether this <see cref="T:System.Xaml.XamlMember" /> represents a member that is not resolvable by the backing system that is used for type and member resolution.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="226aa-347">
            <see langword="true" /> Jeśli <see cref="T:System.Xaml.XamlMember" /> reprezentuje nie można rozpoznać elementu członkowskiego; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="226aa-347">
              <see langword="true" /> if this <see cref="T:System.Xaml.XamlMember" /> represents a non-resolvable member; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="226aa-348">Ta metoda może być wywoływana, gdy obiekt wywołujący pobiera wartość z zakresu od <xref:System.Xaml.XamlMember.IsUnknown%2A>.</span><span class="sxs-lookup"><span data-stu-id="226aa-348">This method may be invoked when a caller gets a value from <xref:System.Xaml.XamlMember.IsUnknown%2A>.</span></span> <span data-ttu-id="226aa-349">Domyślna implementacja zwraca wyniki, które są oparte na obu odbicia wewnętrznych lub Sprawdzanie, czy dla `null` wartość <xref:System.Xaml.XamlMember.UnderlyingMember%2A>, w tej kolejności przetwarzania.</span><span class="sxs-lookup"><span data-stu-id="226aa-349">The default implementation returns results that are based on either internal reflection or checking for a `null` value of <xref:System.Xaml.XamlMember.UnderlyingMember%2A>, processing in that order.</span></span>  
  
 <span data-ttu-id="226aa-350">Przesłonić tę metodę, jeśli chcesz raportu dotyczącego wyników uniform dla całego <xref:System.Xaml.XamlMember> klasy, lub jeśli znajduje się specjalistyczny dostępne, aby określić to na poszczególnych przypadków metadanych.</span><span class="sxs-lookup"><span data-stu-id="226aa-350">Override this method if you want to report uniform results for an entire <xref:System.Xaml.XamlMember> derived class, or if you have specialized metadata available to determine this on a per-case basis.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlMember.IsUnknown" />
      </Docs>
    </Member>
    <Member MemberName="LookupIsWriteOnly">
      <MemberSignature Language="C#" Value="protected virtual bool LookupIsWriteOnly ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool LookupIsWriteOnly() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.LookupIsWriteOnly" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupIsWriteOnly () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool LookupIsWriteOnly();" />
      <MemberSignature Language="F#" Value="abstract member LookupIsWriteOnly : unit -&gt; bool&#xA;override this.LookupIsWriteOnly : unit -&gt; bool" Usage="xamlMember.LookupIsWriteOnly " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="226aa-351">Zwraca czy to <see cref="T:System.Xaml.XamlMember" /> reprezentuje element członkowski, który ma publicznego <see langword="set" /> , ale nie publiczny akcesor <see langword="get" /> metody dostępu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="226aa-351">Returns whether this <see cref="T:System.Xaml.XamlMember" /> represents a member that has a public <see langword="set" /> accessor but not a public <see langword="get" /> accessor.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="226aa-352">
            <see langword="true" /> Jeśli <see cref="T:System.Xaml.XamlMember" /> reprezentuje tylko do zapisu elementu członkowskiego; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="226aa-352">
              <see langword="true" /> if this <see cref="T:System.Xaml.XamlMember" /> represents a write-only member; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="226aa-353">Domyślna implementacja zwraca `true` Jeśli <xref:System.Xaml.XamlMember.UnderlyingMember%2A> istnieje mający publiczny `set` metody dostępu i nonpublic `get` dostępu, zgodnie z ustaleniami odbicia wewnętrznych.</span><span class="sxs-lookup"><span data-stu-id="226aa-353">The default implementation returns `true` if an <xref:System.Xaml.XamlMember.UnderlyingMember%2A> exists that has a public `set` accessor and a nonpublic `get` accessor, as determined by internal reflection.</span></span>  
  
 <span data-ttu-id="226aa-354">Ta metoda jest wywoływana, gdy obiekt wywołujący pobiera wartość z zakresu od <xref:System.Xaml.XamlMember.IsWriteOnly%2A>.</span><span class="sxs-lookup"><span data-stu-id="226aa-354">This method is invoked when a caller gets a value from <xref:System.Xaml.XamlMember.IsWriteOnly%2A>.</span></span> <span data-ttu-id="226aa-355">Przesłonić tę metodę, jeśli chcesz raportu dotyczącego wyników uniform dla całego <xref:System.Xaml.XamlMember> klasy, lub jeśli znajduje się specjalistyczny dostępne, aby określić to na poszczególnych przypadków metadanych.</span><span class="sxs-lookup"><span data-stu-id="226aa-355">Override this method if you want to report uniform results for an entire <xref:System.Xaml.XamlMember> derived class, or if you have specialized metadata available to determine this on a per-case basis.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlMember.IsWriteOnly" />
      </Docs>
    </Member>
    <Member MemberName="LookupIsWritePublic">
      <MemberSignature Language="C#" Value="protected virtual bool LookupIsWritePublic ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool LookupIsWritePublic() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.LookupIsWritePublic" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupIsWritePublic () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool LookupIsWritePublic();" />
      <MemberSignature Language="F#" Value="abstract member LookupIsWritePublic : unit -&gt; bool&#xA;override this.LookupIsWritePublic : unit -&gt; bool" Usage="xamlMember.LookupIsWritePublic " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="226aa-356">Zwraca czy to <see cref="T:System.Xaml.XamlMember" /> reprezentuje element członkowski, który ma publicznego <see langword="set" /> metody dostępu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="226aa-356">Returns whether this <see cref="T:System.Xaml.XamlMember" /> represents a member that has a public <see langword="set" /> accessor.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="226aa-357">
            <see langword="true" /> Jeśli <see cref="T:System.Xaml.XamlMember" /> reprezentuje zapisu elementu członkowskiego; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="226aa-357">
              <see langword="true" /> if this <see cref="T:System.Xaml.XamlMember" /> represents a writable member; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="226aa-358">Domyślna implementacja zwraca wyniki na podstawie odbicia wewnętrznych lub Negacja <xref:System.Xaml.XamlMember.IsReadOnly%2A>, w tej kolejności przetwarzania.</span><span class="sxs-lookup"><span data-stu-id="226aa-358">The default implementation returns results based  either internal reflection or the negation of <xref:System.Xaml.XamlMember.IsReadOnly%2A>, processing in that order.</span></span>  
  
 <span data-ttu-id="226aa-359">Ta metoda jest wywoływana, gdy obiekt wywołujący pobiera wartość z zakresu od <xref:System.Xaml.XamlMember.IsWritePublic%2A>.</span><span class="sxs-lookup"><span data-stu-id="226aa-359">This method is invoked when a caller gets a value from <xref:System.Xaml.XamlMember.IsWritePublic%2A>.</span></span> <span data-ttu-id="226aa-360">Przesłonić tę metodę, jeśli chcesz raportu dotyczącego wyników uniform dla całego <xref:System.Xaml.XamlMember> klasy, lub jeśli znajduje się specjalistyczny dostępne, aby określić to na poszczególnych przypadków metadanych.</span><span class="sxs-lookup"><span data-stu-id="226aa-360">Override this method if you want to report uniform results for an entire <xref:System.Xaml.XamlMember> derived class, or if you have specialized metadata available to determine this on a per-case basis.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="226aa-361"><xref:System.Xaml.XamlMember.LookupIsWritePublic%2A> Metody jest wirtualna i w związku z tym może zostać zastąpiona.</span><span class="sxs-lookup"><span data-stu-id="226aa-361">The <xref:System.Xaml.XamlMember.LookupIsWritePublic%2A> method is virtual and therefore, can be overridden.</span></span> <span data-ttu-id="226aa-362">Zastąpienie ma możliwość Zmień (złośliwy lub w inny sposób) informacje zgłoszone dostępu elementu członkowskiego XAML tak, aby go już wyrównuje w oczekiwany sposób, przy użyciu typu systemu dostępu do informacji o swojej podstawowej deklaracji CLR.</span><span class="sxs-lookup"><span data-stu-id="226aa-362">The override has the potential to change (maliciously or otherwise) the reported access information of a XAML member so that it no longer aligns in an expected way with the type system access information of its underlying CLR declaration.</span></span> <span data-ttu-id="226aa-363">Dla dowolnego krytyczny dla zabezpieczeń kontroli poziomy dostępu w zamian użyj podstawowego typu środowiska CLR.</span><span class="sxs-lookup"><span data-stu-id="226aa-363">For any security-critical checks of access levels, use the underlying CLR type instead.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlMember.IsWritePublic" />
      </Docs>
    </Member>
    <Member MemberName="LookupMarkupExtensionBracketCharacters">
      <MemberSignature Language="C#" Value="protected virtual System.Collections.Generic.IReadOnlyDictionary&lt;char,char&gt; LookupMarkupExtensionBracketCharacters ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Collections.Generic.IReadOnlyDictionary`2&lt;char, char&gt; LookupMarkupExtensionBracketCharacters() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.LookupMarkupExtensionBracketCharacters" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupMarkupExtensionBracketCharacters () As IReadOnlyDictionary(Of Char, Char)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Collections::Generic::IReadOnlyDictionary&lt;char, char&gt; ^ LookupMarkupExtensionBracketCharacters();" />
      <MemberSignature Language="F#" Value="abstract member LookupMarkupExtensionBracketCharacters : unit -&gt; System.Collections.Generic.IReadOnlyDictionary&lt;char, char&gt;&#xA;override this.LookupMarkupExtensionBracketCharacters : unit -&gt; System.Collections.Generic.IReadOnlyDictionary&lt;char, char&gt;" Usage="xamlMember.LookupMarkupExtensionBracketCharacters " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IReadOnlyDictionary&lt;System.Char,System.Char&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="226aa-364">Zwraca znaki nawias otwierający i zamykający dla rozszerzenia znacznika.</span>
          <span class="sxs-lookup">
            <span data-stu-id="226aa-364">Returns the opening and closing bracket characters for a markup extension.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="226aa-365">Kolekcja zawierająca znaki nawias otwierający i zamykający.</span>
          <span class="sxs-lookup">
            <span data-stu-id="226aa-365">A collection containing the opening and closing bracket characters.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupTargetType">
      <MemberSignature Language="C#" Value="protected virtual System.Xaml.XamlType LookupTargetType ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Xaml.XamlType LookupTargetType() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.LookupTargetType" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupTargetType () As XamlType" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Xaml::XamlType ^ LookupTargetType();" />
      <MemberSignature Language="F#" Value="abstract member LookupTargetType : unit -&gt; System.Xaml.XamlType&#xA;override this.LookupTargetType : unit -&gt; System.Xaml.XamlType" Usage="xamlMember.LookupTargetType " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlType</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="226aa-366">Zwraca <see cref="T:System.Xaml.XamlType" /> typu gdzie <see cref="T:System.Xaml.XamlMember" /> może istnieć.</span>
          <span class="sxs-lookup">
            <span data-stu-id="226aa-366">Returns the <see cref="T:System.Xaml.XamlType" /> of the type where the <see cref="T:System.Xaml.XamlMember" /> can exist.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="226aa-367">Typ gdzie <see cref="T:System.Xaml.XamlMember" /> może istnieć.</span>
          <span class="sxs-lookup">
            <span data-stu-id="226aa-367">The type where the <see cref="T:System.Xaml.XamlMember" /> can exist.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="226aa-368">Domyślna implementacja rozróżnia możliwej i niedołączalnego elementów członkowskich.</span><span class="sxs-lookup"><span data-stu-id="226aa-368">The default implementation distinguishes between attachable and non-attachable members.</span></span> <span data-ttu-id="226aa-369">Dla członków niedołączalnego <xref:System.Xaml.XamlMember.LookupTargetType%2A> zawsze zwraca <xref:System.Xaml.XamlMember.DeclaringType%2A>.</span><span class="sxs-lookup"><span data-stu-id="226aa-369">For non-attachable members, <xref:System.Xaml.XamlMember.LookupTargetType%2A> always returns <xref:System.Xaml.XamlMember.DeclaringType%2A>.</span></span> <span data-ttu-id="226aa-370">Dla członków dołączalny <xref:System.Xaml.XamlMember.LookupTargetType%2A> zwraca wynik, w oparciu o sprawdzenie <xref:System.Xaml.XamlMember.UnderlyingMember%2A> typ parametru metody dostępu i interpretuje, że typ oparty na kontekst schematu XAML.</span><span class="sxs-lookup"><span data-stu-id="226aa-370">For attachable members, <xref:System.Xaml.XamlMember.LookupTargetType%2A> returns a result based on examining the <xref:System.Xaml.XamlMember.UnderlyingMember%2A> accessor parameter type and interprets that type based on XAML schema context.</span></span>  
  
 <span data-ttu-id="226aa-371">Ta metoda jest wywoływana, gdy obiekt wywołujący pobiera wartość z zakresu od <xref:System.Xaml.XamlMember.TargetType%2A>.</span><span class="sxs-lookup"><span data-stu-id="226aa-371">This method is invoked when a caller gets a value from <xref:System.Xaml.XamlMember.TargetType%2A>.</span></span> <span data-ttu-id="226aa-372">Przesłonić tę metodę, jeśli chcesz raportu dotyczącego wyników uniform dla całego <xref:System.Xaml.XamlMember> klasy, lub jeśli znajduje się specjalistyczny dostępne, aby określić to na poszczególnych przypadków metadanych.</span><span class="sxs-lookup"><span data-stu-id="226aa-372">Override this method if you want to report uniform results for an entire <xref:System.Xaml.XamlMember> derived class, or if you have specialized metadata available to determine this on a per-case basis.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlMember.TargetType" />
      </Docs>
    </Member>
    <Member MemberName="LookupType">
      <MemberSignature Language="C#" Value="protected virtual System.Xaml.XamlType LookupType ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Xaml.XamlType LookupType() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.LookupType" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupType () As XamlType" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Xaml::XamlType ^ LookupType();" />
      <MemberSignature Language="F#" Value="abstract member LookupType : unit -&gt; System.Xaml.XamlType&#xA;override this.LookupType : unit -&gt; System.Xaml.XamlType" Usage="xamlMember.LookupType " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlType</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="226aa-373">Zwraca <see cref="T:System.Xaml.XamlType" /> typu, który jest używany przez element członkowski.</span>
          <span class="sxs-lookup">
            <span data-stu-id="226aa-373">Returns the <see cref="T:System.Xaml.XamlType" /> of the type that is used by the member.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="226aa-374">
            <see cref="T:System.Xaml.XamlType" /> Typu, który jest używany przez element członkowski.</span>
          <span class="sxs-lookup">
            <span data-stu-id="226aa-374">The <see cref="T:System.Xaml.XamlType" /> of the type that is used by the member.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="226aa-375">Ta metoda jest wywoływana, gdy obiekt wywołujący pobiera wartość z zakresu od <xref:System.Xaml.XamlMember.Type%2A>.</span><span class="sxs-lookup"><span data-stu-id="226aa-375">This method is invoked when a caller gets a value from <xref:System.Xaml.XamlMember.Type%2A>.</span></span> <span data-ttu-id="226aa-376">Przesłonić tę metodę, jeśli chcesz <xref:System.Xaml.XamlMember.Type%2A> aby zwrócić wartość, która różni się od wartości, który został włączony przez domyślny odbicia wewnętrznych, i również udostępniając niestandardowe <xref:System.Xaml.Schema.XamlMemberInvoker> informacji.</span><span class="sxs-lookup"><span data-stu-id="226aa-376">Override this method if you want <xref:System.Xaml.XamlMember.Type%2A> to return a value that differs from the value that is enabled by default internal reflection, and if you are also providing custom <xref:System.Xaml.Schema.XamlMemberInvoker> information.</span></span>  
  
 <span data-ttu-id="226aa-377">Domyślna implementacja używa różne ścieżki i pojęciach znaczenie dla zwróconego <xref:System.Xaml.XamlType> opartego na czy to <xref:System.Xaml.XamlMember> reprezentuje właściwości, metody lub zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="226aa-377">The default implementation uses different code paths and conceptual meanings for the returned <xref:System.Xaml.XamlType> that is based on whether this <xref:System.Xaml.XamlMember> represents a property, method, or event.</span></span>  
  
-   <span data-ttu-id="226aa-378">Dla właściwości, zwracana <xref:System.Xaml.XamlType> jest typ, który ustawia właściwość jest zwracana przez właściwość.</span><span class="sxs-lookup"><span data-stu-id="226aa-378">For a property, the returned <xref:System.Xaml.XamlType> is the type that sets the property or is returned by the property.</span></span>  
  
-   <span data-ttu-id="226aa-379">Zdarzenia, zwracana <xref:System.Xaml.XamlType> jest typem obsługi zdarzeń wymagane (delegata w implementacji środowiska CLR).</span><span class="sxs-lookup"><span data-stu-id="226aa-379">For an event, the returned <xref:System.Xaml.XamlType> is the required event handler type (a delegate in a CLR implementation).</span></span>  
  
-   <span data-ttu-id="226aa-380">W przypadku metody <xref:System.Xaml.XamlType> jest typ zwracany.</span><span class="sxs-lookup"><span data-stu-id="226aa-380">For a method, <xref:System.Xaml.XamlType> is the return type.</span></span>  
  
 <span data-ttu-id="226aa-381">W każdym przypadku kontekst schematu XAML jest używany do oceny typu XAML z podstawowego typu systemu.</span><span class="sxs-lookup"><span data-stu-id="226aa-381">In each case, XAML schema context is used to evaluate the XAML type from the underlying system type.</span></span>  
  
 <span data-ttu-id="226aa-382">Ta metoda jest wywoływana, gdy obiekt wywołujący pobiera wartość z zakresu od <xref:System.Xaml.XamlMember.Type%2A>.</span><span class="sxs-lookup"><span data-stu-id="226aa-382">This method is invoked when a caller gets a value from <xref:System.Xaml.XamlMember.Type%2A>.</span></span> <span data-ttu-id="226aa-383">Przesłonić tę metodę, jeśli chcesz raportu dotyczącego wyników uniform dla całego <xref:System.Xaml.XamlMember> klasy, lub jeśli znajduje się specjalistyczny dostępne, aby określić to na poszczególnych przypadków metadanych.</span><span class="sxs-lookup"><span data-stu-id="226aa-383">Override this method if you want to report uniform results for an entire <xref:System.Xaml.XamlMember> derived class, or if you have specialized metadata available to determine this on a per-case basis.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlMember.Type" />
      </Docs>
    </Member>
    <Member MemberName="LookupTypeConverter">
      <MemberSignature Language="C#" Value="protected virtual System.Xaml.Schema.XamlValueConverter&lt;System.ComponentModel.TypeConverter&gt; LookupTypeConverter ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Xaml.Schema.XamlValueConverter`1&lt;class System.ComponentModel.TypeConverter&gt; LookupTypeConverter() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.LookupTypeConverter" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupTypeConverter () As XamlValueConverter(Of TypeConverter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Xaml::Schema::XamlValueConverter&lt;System::ComponentModel::TypeConverter ^&gt; ^ LookupTypeConverter();" />
      <MemberSignature Language="F#" Value="abstract member LookupTypeConverter : unit -&gt; System.Xaml.Schema.XamlValueConverter&lt;System.ComponentModel.TypeConverter&gt;&#xA;override this.LookupTypeConverter : unit -&gt; System.Xaml.Schema.XamlValueConverter&lt;System.ComponentModel.TypeConverter&gt;" Usage="xamlMember.LookupTypeConverter " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.Schema.XamlValueConverter&lt;System.ComponentModel.TypeConverter&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="226aa-384">Zwraca implementacji konwertera typu, który jest skojarzony z tym <see cref="T:System.Xaml.XamlMember" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="226aa-384">Returns a type converter implementation that is associated with this <see cref="T:System.Xaml.XamlMember" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="226aa-385">A <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> wystąpienia z <see cref="T:System.ComponentModel.TypeConverter" /> ograniczenia; lub <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="226aa-385">A <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> instance with <see cref="T:System.ComponentModel.TypeConverter" /> constraint; or <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="226aa-386">Domyślna implementacja używa następującą logiką i kolejność przetwarzania:</span><span class="sxs-lookup"><span data-stu-id="226aa-386">The default implementation uses the following logic and processing order:</span></span>  
  
-   <span data-ttu-id="226aa-387">Jeśli istnieje przypisywanie na poziomie elementu członkowskiego (<xref:System.ComponentModel.TypeConverterAttribute>), informacje o atrybutach służy do wywołania <xref:System.Xaml.XamlSchemaContext.GetValueConverter%2A> przed kontekst schematu XAML.</span><span class="sxs-lookup"><span data-stu-id="226aa-387">If attributing exists at the member level (<xref:System.ComponentModel.TypeConverterAttribute>), the attribute information is used for a call to <xref:System.Xaml.XamlSchemaContext.GetValueConverter%2A> against the XAML schema context.</span></span>  
  
-   <span data-ttu-id="226aa-388">Jeśli <xref:System.Xaml.XamlMember.Type%2A> jest prawidłowy, jest zwracany konwertera typów, który jest skojarzony z typem.</span><span class="sxs-lookup"><span data-stu-id="226aa-388">If <xref:System.Xaml.XamlMember.Type%2A> is valid, a type converter that is associated with the type is returned.</span></span>  
  
-   <span data-ttu-id="226aa-389">Jeśli element członkowski jest zdarzenie, zwracany jest specyficzne dla zdarzenia typu konwertera.</span><span class="sxs-lookup"><span data-stu-id="226aa-389">If the member is an event, an event-specific type converter is returned.</span></span>  
  
 <span data-ttu-id="226aa-390">Ta metoda jest wywoływana, gdy obiekt wywołujący pobiera wartość z zakresu od <xref:System.Xaml.XamlMember.TypeConverter%2A>.</span><span class="sxs-lookup"><span data-stu-id="226aa-390">This method is invoked when a caller gets a value from <xref:System.Xaml.XamlMember.TypeConverter%2A>.</span></span> <span data-ttu-id="226aa-391">Przesłonić tę metodę, jeśli chcesz raportu dotyczącego wyników uniform dla całego <xref:System.Xaml.XamlMember> klasy, lub jeśli znajduje się specjalistyczny dostępne, aby określić to na poszczególnych przypadków metadanych.</span><span class="sxs-lookup"><span data-stu-id="226aa-391">Override this method if you want to report uniform results for an entire <xref:System.Xaml.XamlMember> derived class, or if you have specialized metadata available to determine this on a per-case basis.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlMember.TypeConverter" />
      </Docs>
    </Member>
    <Member MemberName="LookupUnderlyingGetter">
      <MemberSignature Language="C#" Value="protected virtual System.Reflection.MethodInfo LookupUnderlyingGetter ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Reflection.MethodInfo LookupUnderlyingGetter() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.LookupUnderlyingGetter" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupUnderlyingGetter () As MethodInfo" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Reflection::MethodInfo ^ LookupUnderlyingGetter();" />
      <MemberSignature Language="F#" Value="abstract member LookupUnderlyingGetter : unit -&gt; System.Reflection.MethodInfo&#xA;override this.LookupUnderlyingGetter : unit -&gt; System.Reflection.MethodInfo" Usage="xamlMember.LookupUnderlyingGetter " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="226aa-392">Zwraca <see langword="get" /> dostępu, który jest skojarzony z tym <see cref="T:System.Xaml.XamlMember" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="226aa-392">Returns a <see langword="get" /> accessor that is associated with this <see cref="T:System.Xaml.XamlMember" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="226aa-393">
            <see cref="T:System.Reflection.MethodInfo" /> Skojarzonych z nim <see langword="get" /> akcesor; lub <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="226aa-393">The <see cref="T:System.Reflection.MethodInfo" /> for the associated <see langword="get" /> accessor; or <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="226aa-394">Domyślna implementacja interpretuje <xref:System.Xaml.XamlMember.UnderlyingMember%2A> właściwość jako <xref:System.Reflection.PropertyInfo> i zwraca wartość <xref:System.Reflection.PropertyInfo.GetGetMethod%2A?displayProperty=nameWithType> (z parametrem ustawioną `true`), która oznacza, że zwrócony metoda może być niepubliczne.</span><span class="sxs-lookup"><span data-stu-id="226aa-394">The default implementation interprets the <xref:System.Xaml.XamlMember.UnderlyingMember%2A> property as <xref:System.Reflection.PropertyInfo> and returns the value of <xref:System.Reflection.PropertyInfo.GetGetMethod%2A?displayProperty=nameWithType> (with the parameter set to `true`), which means that the returned method can be nonpublic.</span></span> <span data-ttu-id="226aa-395">To zachowanie może spowodować `null` określonych przypadkach.</span><span class="sxs-lookup"><span data-stu-id="226aa-395">This behavior can result in `null` for certain cases.</span></span> <span data-ttu-id="226aa-396">w tym przypadkach, gdy istnieje nie skojarzone metody dostępu lub element członkowski nie jest właściwością.</span><span class="sxs-lookup"><span data-stu-id="226aa-396">including cases where no associated accessor exists or the member is not a property.</span></span>  
  
 <span data-ttu-id="226aa-397">Ta metoda jest wywoływana, gdy obiekt wywołujący pobiera wartość z zakresu od <xref:System.Xaml.Schema.XamlMemberInvoker.UnderlyingGetter%2A> właściwość skojarzony <xref:System.Xaml.Schema.XamlMemberInvoker>.</span><span class="sxs-lookup"><span data-stu-id="226aa-397">This method is invoked when a caller gets a value from the <xref:System.Xaml.Schema.XamlMemberInvoker.UnderlyingGetter%2A> property on an associated <xref:System.Xaml.Schema.XamlMemberInvoker>.</span></span> <span data-ttu-id="226aa-398">Przesłonić tę metodę, jeśli chcesz raportu dotyczącego wyników uniform dla całego <xref:System.Xaml.XamlMember> klasy, lub jeśli znajduje się specjalistyczny dostępne, aby określić to na poszczególnych przypadków metadanych.</span><span class="sxs-lookup"><span data-stu-id="226aa-398">Override this method if you want to report uniform results for an entire <xref:System.Xaml.XamlMember> derived class, or if you have specialized metadata available to determine this on a per-case basis.</span></span> <span data-ttu-id="226aa-399">Upewnij się, że wdrożenie <xref:System.Xaml.XamlMember.LookupUnderlyingGetter%2A>, <xref:System.Xaml.XamlMember.LookupUnderlyingSetter%2A>, i <xref:System.Xaml.XamlMember.LookupUnderlyingMember%2A> tak, aby wszystkie zwracają wyniki skorelowane.</span><span class="sxs-lookup"><span data-stu-id="226aa-399">Make sure to implement <xref:System.Xaml.XamlMember.LookupUnderlyingGetter%2A>, <xref:System.Xaml.XamlMember.LookupUnderlyingSetter%2A>, and <xref:System.Xaml.XamlMember.LookupUnderlyingMember%2A> so that they all return correlated results.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupUnderlyingMember">
      <MemberSignature Language="C#" Value="protected virtual System.Reflection.MemberInfo LookupUnderlyingMember ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Reflection.MemberInfo LookupUnderlyingMember() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.LookupUnderlyingMember" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupUnderlyingMember () As MemberInfo" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Reflection::MemberInfo ^ LookupUnderlyingMember();" />
      <MemberSignature Language="F#" Value="abstract member LookupUnderlyingMember : unit -&gt; System.Reflection.MemberInfo&#xA;override this.LookupUnderlyingMember : unit -&gt; System.Reflection.MemberInfo" Usage="xamlMember.LookupUnderlyingMember " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MemberInfo</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="226aa-400">Zwraca system typów CLR <see cref="T:System.Reflection.MemberInfo" /> skojarzonego z tym <see cref="T:System.Xaml.XamlMember" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="226aa-400">Returns a CLR type system <see cref="T:System.Reflection.MemberInfo" /> that is associated with this <see cref="T:System.Xaml.XamlMember" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="226aa-401">System typów CLR <see cref="T:System.Reflection.MemberInfo" /> obiekt, który jest skojarzony z tym <see cref="T:System.Xaml.XamlMember" />; lub <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="226aa-401">A CLR type system <see cref="T:System.Reflection.MemberInfo" /> object that is associated with this <see cref="T:System.Xaml.XamlMember" />; or <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="226aa-402">Domyślna implementacja zwraca informacje elementu członkowskiego podstawowej, opartej na konstrukcji.</span><span class="sxs-lookup"><span data-stu-id="226aa-402">The default implementation returns the underlying member information, which is based on construction.</span></span> <span data-ttu-id="226aa-403">Jeśli <xref:System.Reflection.MemberInfo> obiekt jest tworzony za pomocą podpisu, który nie ma wystarczającej ilości informacji do ustawienia podstawowego elementu członkowskiego, ta metoda zwraca `null`.</span><span class="sxs-lookup"><span data-stu-id="226aa-403">If the <xref:System.Reflection.MemberInfo> object is constructed with a signature that does not provide enough information to set the underlying member, this method returns `null`.</span></span>  
  
 <span data-ttu-id="226aa-404">Jeśli element członkowski podstawowej została ustawiona podczas konstruowania, należy nie należy wywołać tę metodę.</span><span class="sxs-lookup"><span data-stu-id="226aa-404">If an underlying member was set during construction, you should not need to call this method.</span></span>  
  
 <span data-ttu-id="226aa-405">Ta metoda jest wywoływana, gdy obiekt wywołujący pobiera wartość z zakresu od <xref:System.Xaml.XamlMember.UnderlyingMember%2A>.</span><span class="sxs-lookup"><span data-stu-id="226aa-405">This method is invoked when a caller gets a value from <xref:System.Xaml.XamlMember.UnderlyingMember%2A>.</span></span> <span data-ttu-id="226aa-406">Przesłonić tę metodę, jeśli chcesz raportu dotyczącego wyników uniform dla całego <xref:System.Xaml.XamlMember> klasy, lub jeśli znajduje się specjalistyczny dostępne, aby określić to na poszczególnych przypadków metadanych.</span><span class="sxs-lookup"><span data-stu-id="226aa-406">Override this method if you want to report uniform results for an entire <xref:System.Xaml.XamlMember> derived class, or if you have specialized metadata available to determine this on a per-case basis.</span></span> <span data-ttu-id="226aa-407">Upewnij się, że wdrożenie <xref:System.Xaml.XamlMember.LookupUnderlyingGetter%2A>, <xref:System.Xaml.XamlMember.LookupUnderlyingSetter%2A>, i <xref:System.Xaml.XamlMember.LookupUnderlyingMember%2A> tak, aby wszystkie zwracają wyniki skorelowane.</span><span class="sxs-lookup"><span data-stu-id="226aa-407">Make sure to implement <xref:System.Xaml.XamlMember.LookupUnderlyingGetter%2A>, <xref:System.Xaml.XamlMember.LookupUnderlyingSetter%2A>, and <xref:System.Xaml.XamlMember.LookupUnderlyingMember%2A> so that they all return correlated results.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlMember.UnderlyingMember" />
      </Docs>
    </Member>
    <Member MemberName="LookupUnderlyingSetter">
      <MemberSignature Language="C#" Value="protected virtual System.Reflection.MethodInfo LookupUnderlyingSetter ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Reflection.MethodInfo LookupUnderlyingSetter() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.LookupUnderlyingSetter" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupUnderlyingSetter () As MethodInfo" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Reflection::MethodInfo ^ LookupUnderlyingSetter();" />
      <MemberSignature Language="F#" Value="abstract member LookupUnderlyingSetter : unit -&gt; System.Reflection.MethodInfo&#xA;override this.LookupUnderlyingSetter : unit -&gt; System.Reflection.MethodInfo" Usage="xamlMember.LookupUnderlyingSetter " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="226aa-408">Zwraca <see langword="set" /> dostępu, który jest skojarzony z tym <see cref="T:System.Xaml.XamlMember" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="226aa-408">Returns a <see langword="set" /> accessor that is associated with this <see cref="T:System.Xaml.XamlMember" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="226aa-409">
            <see cref="T:System.Reflection.MethodInfo" /> Skojarzonych z nim <see langword="set" /> akcesor; lub <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="226aa-409">The <see cref="T:System.Reflection.MethodInfo" /> for the associated <see langword="set" /> accessor; or <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="226aa-410">Domyślna implementacja interpretuje <xref:System.Xaml.XamlMember.UnderlyingMember%2A> jako <xref:System.Reflection.PropertyInfo> i zwraca wartość <xref:System.Reflection.PropertyInfo.GetSetMethod%2A?displayProperty=nameWithType> (z parametrem ustawioną `true`), która oznacza, że zwrócony metoda może być niepubliczne.</span><span class="sxs-lookup"><span data-stu-id="226aa-410">The default implementation interprets <xref:System.Xaml.XamlMember.UnderlyingMember%2A> as <xref:System.Reflection.PropertyInfo> and returns the value of <xref:System.Reflection.PropertyInfo.GetSetMethod%2A?displayProperty=nameWithType> (with the parameter set to `true`), which means that the returned method can be nonpublic.</span></span> <span data-ttu-id="226aa-411">Może to spowodować `null` dla niektórych przypadkach, także w przypadkach, gdy jest nie takiego dostępu, lub element członkowski nie jest właściwością.</span><span class="sxs-lookup"><span data-stu-id="226aa-411">This can result in `null` for certain cases, including cases where there is no such accessor, or the member is not a property.</span></span>  
  
 <span data-ttu-id="226aa-412">Ta metoda jest wywoływana, gdy obiekt wywołujący pobiera wartość z zakresu od <xref:System.Xaml.Schema.XamlMemberInvoker.UnderlyingSetter%2A> na skojarzone <xref:System.Xaml.Schema.XamlMemberInvoker>. Przesłonić tę metodę, jeśli chcesz raportu dotyczącego wyników uniform dla całego <xref:System.Xaml.XamlMember> klasy, lub jeśli znajduje się specjalistyczny dostępne, aby określić to na poszczególnych przypadków metadanych.</span><span class="sxs-lookup"><span data-stu-id="226aa-412">This method is invoked when a caller gets a value from <xref:System.Xaml.Schema.XamlMemberInvoker.UnderlyingSetter%2A> on an associated <xref:System.Xaml.Schema.XamlMemberInvoker>.Override this method if you want to report uniform results for an entire <xref:System.Xaml.XamlMember> derived class, or if you have specialized metadata available to determine this on a per-case basis.</span></span> <span data-ttu-id="226aa-413">Upewnij się, że wdrożenie <xref:System.Xaml.XamlMember.LookupUnderlyingGetter%2A>, <xref:System.Xaml.XamlMember.LookupUnderlyingSetter%2A>, i <xref:System.Xaml.XamlMember.LookupUnderlyingMember%2A> tak, aby wszystkie zwracają wyniki skorelowane.</span><span class="sxs-lookup"><span data-stu-id="226aa-413">Make sure to implement <xref:System.Xaml.XamlMember.LookupUnderlyingGetter%2A>, <xref:System.Xaml.XamlMember.LookupUnderlyingSetter%2A>, and <xref:System.Xaml.XamlMember.LookupUnderlyingMember%2A> so that they all return correlated results.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupValueSerializer">
      <MemberSignature Language="C#" Value="protected virtual System.Xaml.Schema.XamlValueConverter&lt;System.Windows.Markup.ValueSerializer&gt; LookupValueSerializer ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Xaml.Schema.XamlValueConverter`1&lt;class System.Windows.Markup.ValueSerializer&gt; LookupValueSerializer() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.LookupValueSerializer" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupValueSerializer () As XamlValueConverter(Of ValueSerializer)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Xaml::Schema::XamlValueConverter&lt;System::Windows::Markup::ValueSerializer ^&gt; ^ LookupValueSerializer();" />
      <MemberSignature Language="F#" Value="abstract member LookupValueSerializer : unit -&gt; System.Xaml.Schema.XamlValueConverter&lt;System.Windows.Markup.ValueSerializer&gt;&#xA;override this.LookupValueSerializer : unit -&gt; System.Xaml.Schema.XamlValueConverter&lt;System.Windows.Markup.ValueSerializer&gt;" Usage="xamlMember.LookupValueSerializer " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.Schema.XamlValueConverter&lt;System.Windows.Markup.ValueSerializer&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="226aa-414">Zwraca implementację serializator wartość, która jest skojarzona z tym <see cref="T:System.Xaml.XamlMember" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="226aa-414">Returns a value serializer implementation that is associated with this <see cref="T:System.Xaml.XamlMember" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="226aa-415">A <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> wystąpienia z <see cref="T:System.Windows.Markup.ValueSerializer" /> ograniczenie lub <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="226aa-415">A <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> instance with <see cref="T:System.Windows.Markup.ValueSerializer" /> constraint, or <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="226aa-416">Domyślna implementacja używa następującą logiką i kolejność przetwarzania:</span><span class="sxs-lookup"><span data-stu-id="226aa-416">The default implementation uses the following logic and processing order:</span></span>  
  
-   <span data-ttu-id="226aa-417">Jeśli istnieje przypisywanie na poziomie elementu członkowskiego (<xref:System.Windows.Markup.ValueSerializerAttribute>), informacje o atrybutach służy do wywołania <xref:System.Xaml.XamlSchemaContext.GetValueConverter%2A> przed kontekst schematu XAML.</span><span class="sxs-lookup"><span data-stu-id="226aa-417">If attributing exists at the member level (<xref:System.Windows.Markup.ValueSerializerAttribute>), the attribute information is used for a call to <xref:System.Xaml.XamlSchemaContext.GetValueConverter%2A> against the XAML schema context.</span></span>  
  
-   <span data-ttu-id="226aa-418">Jeśli <xref:System.Xaml.XamlMember.Type%2A> jest prawidłowy, jest zwracany konwerter wartości, który jest skojarzony z typem.</span><span class="sxs-lookup"><span data-stu-id="226aa-418">If <xref:System.Xaml.XamlMember.Type%2A> is valid, a value converter that is associated with the type is returned.</span></span>  
  
-   <span data-ttu-id="226aa-419">Jeśli poprzednie warunki nie są stosowane, `null` jest zwracany.</span><span class="sxs-lookup"><span data-stu-id="226aa-419">If the previous conditions do not apply, `null` is returned.</span></span>  
  
 <span data-ttu-id="226aa-420">Ta metoda jest wywoływana, gdy obiekt wywołujący pobiera wartość z zakresu od <xref:System.Xaml.XamlMember.ValueSerializer%2A>.</span><span class="sxs-lookup"><span data-stu-id="226aa-420">This method is invoked when a caller gets a value from <xref:System.Xaml.XamlMember.ValueSerializer%2A>.</span></span> <span data-ttu-id="226aa-421">Przesłonić tę metodę, jeśli chcesz raportu dotyczącego wyników uniform dla całego <xref:System.Xaml.XamlMember> klasy, lub jeśli znajduje się specjalistyczny dostępne, aby określić to na poszczególnych przypadków metadanych.</span><span class="sxs-lookup"><span data-stu-id="226aa-421">Override this method if you want to report uniform results for an entire <xref:System.Xaml.XamlMember> derived class, or if you have specialized metadata available to determine this on a per-case basis.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlMember.ValueSerializer" />
      </Docs>
    </Member>
    <Member MemberName="MarkupExtensionBracketCharacters">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IReadOnlyDictionary&lt;char,char&gt; MarkupExtensionBracketCharacters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IReadOnlyDictionary`2&lt;char, char&gt; MarkupExtensionBracketCharacters" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlMember.MarkupExtensionBracketCharacters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MarkupExtensionBracketCharacters As IReadOnlyDictionary(Of Char, Char)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IReadOnlyDictionary&lt;char, char&gt; ^ MarkupExtensionBracketCharacters { System::Collections::Generic::IReadOnlyDictionary&lt;char, char&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.MarkupExtensionBracketCharacters : System.Collections.Generic.IReadOnlyDictionary&lt;char, char&gt;" Usage="System.Xaml.XamlMember.MarkupExtensionBracketCharacters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IReadOnlyDictionary&lt;System.Char,System.Char&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="226aa-422">Definiuje znaki nawias otwierający i zamykający dla rozszerzenia znacznika.</span>
          <span class="sxs-lookup">
            <span data-stu-id="226aa-422">Defines the opening and closing bracket characters for a markup extension.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="226aa-423">Kolekcja zawierająca znaki nawias otwierający i zamykający.</span>
          <span class="sxs-lookup">
            <span data-stu-id="226aa-423">A collection containing the opening and closing bracket characters.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlMember.Name" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="System.Xaml.XamlMember.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="226aa-424">Pobiera <see langword="xamlName" /> Nazwa ciągu, który deklaruje to <see cref="T:System.Xaml.XamlMember" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="226aa-424">Gets the <see langword="xamlName" /> name string that declares this <see cref="T:System.Xaml.XamlMember" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="226aa-425">
            <see langword="xamlName" /> Nazwa ciągu, który deklaruje to <see cref="T:System.Xaml.XamlMember" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="226aa-425">The <see langword="xamlName" /> name string that declares this <see cref="T:System.Xaml.XamlMember" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="226aa-426">Ta wartość jest zawsze ustawiana podczas konstruowania.</span><span class="sxs-lookup"><span data-stu-id="226aa-426">This value is always set during construction.</span></span> <span data-ttu-id="226aa-427">Konstruktory, które są implementowane przez <xref:System.Xaml.XamlMember> zwykle Zgłoś wyjątek, jeśli nie określono nazwy początkowej; w związku z tym nie będzie tę właściwość, aby być `null` lub ciąg pusty, jeśli używasz usług domyślne .NET Framework XAML implementacje.</span><span class="sxs-lookup"><span data-stu-id="226aa-427">The constructors that are implemented by <xref:System.Xaml.XamlMember> typically throw an exception if an initial name is not specified; therefore, do not expect this property to be `null` or an empty string, if you are using default .NET Framework XAML Services implementations.</span></span>  
  
 <span data-ttu-id="226aa-428">[Xamlname — gramatyka](~/docs/framework/xaml-services/xamlname-grammar.md) i reguły nazewnictwa dla typu CLR i elementów członkowskich nie są dokładnie intersect.</span><span class="sxs-lookup"><span data-stu-id="226aa-428">[XamlName Grammar](~/docs/framework/xaml-services/xamlname-grammar.md) and naming rules for CLR type and members are not an exact intersect.</span></span> <span data-ttu-id="226aa-429">Istnieje możliwość deklaruje nazwę elementu członkowskiego, który jest dozwolony w obszarze CLR, ale nie jest prawidłowy w obszarze nazw XAML.</span><span class="sxs-lookup"><span data-stu-id="226aa-429">It is possible to declare a member name that is legal under CLR but not valid under XAML naming.</span></span> <span data-ttu-id="226aa-430">Jeśli to możliwe należy unikać tej sytuacji.</span><span class="sxs-lookup"><span data-stu-id="226aa-430">You should avoid this situation if possible.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (System.Xaml.XamlMember xamlMember1, System.Xaml.XamlMember xamlMember2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(class System.Xaml.XamlMember xamlMember1, class System.Xaml.XamlMember xamlMember2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.op_Equality(System.Xaml.XamlMember,System.Xaml.XamlMember)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (xamlMember1 As XamlMember, xamlMember2 As XamlMember) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(System::Xaml::XamlMember ^ xamlMember1, System::Xaml::XamlMember ^ xamlMember2);" />
      <MemberSignature Language="F#" Value="static member ( = ) : System.Xaml.XamlMember * System.Xaml.XamlMember -&gt; bool" Usage="xamlMember1 = xamlMember2" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xamlMember1" Type="System.Xaml.XamlMember" />
        <Parameter Name="xamlMember2" Type="System.Xaml.XamlMember" />
      </Parameters>
      <Docs>
        <param name="xamlMember1">
          <span data-ttu-id="226aa-431">A <see cref="T:System.Xaml.XamlMember" /> lub <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="226aa-431">A <see cref="T:System.Xaml.XamlMember" /> or <see langword="null" />.</span>
          </span>
        </param>
        <param name="xamlMember2">
          <span data-ttu-id="226aa-432">A <see cref="T:System.Xaml.XamlMember" /> lub <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="226aa-432">A <see cref="T:System.Xaml.XamlMember" /> or <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="226aa-433">Określa, czy dwa określone <see cref="T:System.Xaml.XamlMember" /> obiekty mają taką samą wartość.</span>
          <span class="sxs-lookup">
            <span data-stu-id="226aa-433">Determines whether two specified <see cref="T:System.Xaml.XamlMember" /> objects have the same value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="226aa-434">
            <see langword="true" /> Jeśli wartość <paramref name="xamlMember1" /> jest taka sama jak wartość <paramref name="xamlMember2" />; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="226aa-434">
              <see langword="true" /> if the value of <paramref name="xamlMember1" /> is the same as the value of <paramref name="xamlMember2" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (System.Xaml.XamlMember xamlMember1, System.Xaml.XamlMember xamlMember2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(class System.Xaml.XamlMember xamlMember1, class System.Xaml.XamlMember xamlMember2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.op_Inequality(System.Xaml.XamlMember,System.Xaml.XamlMember)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (xamlMember1 As XamlMember, xamlMember2 As XamlMember) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(System::Xaml::XamlMember ^ xamlMember1, System::Xaml::XamlMember ^ xamlMember2);" />
      <MemberSignature Language="F#" Value="static member op_Inequality : System.Xaml.XamlMember * System.Xaml.XamlMember -&gt; bool" Usage="System.Xaml.XamlMember.op_Inequality (xamlMember1, xamlMember2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xamlMember1" Type="System.Xaml.XamlMember" />
        <Parameter Name="xamlMember2" Type="System.Xaml.XamlMember" />
      </Parameters>
      <Docs>
        <param name="xamlMember1">
          <span data-ttu-id="226aa-435">A <see cref="T:System.Xaml.XamlMember" /> lub <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="226aa-435">A <see cref="T:System.Xaml.XamlMember" /> or <see langword="null" />.</span>
          </span>
        </param>
        <param name="xamlMember2">
          <span data-ttu-id="226aa-436">A <see cref="T:System.Xaml.XamlMember" /> lub <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="226aa-436">A <see cref="T:System.Xaml.XamlMember" /> or <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="226aa-437">Określa, czy dwa określone <see cref="T:System.Xaml.XamlMember" /> obiekty mają różne wartości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="226aa-437">Determines whether two specified <see cref="T:System.Xaml.XamlMember" /> objects have different values.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="226aa-438">
            <see langword="true" /> Jeśli wartość <paramref name="xamlMember1" /> różni się od wartości <paramref name="xamlMember2" />; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="226aa-438">
              <see langword="true" /> if the value of <paramref name="xamlMember1" /> differs from the value of <paramref name="xamlMember2" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PreferredXamlNamespace">
      <MemberSignature Language="C#" Value="public string PreferredXamlNamespace { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PreferredXamlNamespace" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlMember.PreferredXamlNamespace" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PreferredXamlNamespace As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ PreferredXamlNamespace { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PreferredXamlNamespace : string" Usage="System.Xaml.XamlMember.PreferredXamlNamespace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="226aa-439">Pobiera jedna przestrzeń nazw XAML identyfikator URI, który identyfikuje głównej przestrzeni nazw XAML dla tego <see cref="T:System.Xaml.XamlMember" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="226aa-439">Gets the single XAML namespace URI that identifies the primary XAML namespace for this <see cref="T:System.Xaml.XamlMember" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="226aa-440">Identyfikator dla głównej przestrzeni nazw XAML dla tego <see cref="T:System.Xaml.XamlMember" />, jako łańcuch znaków.</span>
          <span class="sxs-lookup">
            <span data-stu-id="226aa-440">The identifier for the primary XAML namespace for this <see cref="T:System.Xaml.XamlMember" />, as a string.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="226aa-441"><xref:System.Xaml.XamlMember.PreferredXamlNamespace%2A> Właściwość udostępnia taką samą wartość jak wywołanie <xref:System.Xaml.XamlMember.GetXamlNamespaces%2A> , a następnie uzyskiwanie pierwszy ciąg wartości na liście zwracanych.</span><span class="sxs-lookup"><span data-stu-id="226aa-441">The <xref:System.Xaml.XamlMember.PreferredXamlNamespace%2A> property provides the same value as calling <xref:System.Xaml.XamlMember.GetXamlNamespaces%2A> and then getting the first value string from the returned list.</span></span> <span data-ttu-id="226aa-442">Preferowanym przestrzeni nazw XAML powinien być używany podczas zapisywania elementu członkowskiego z powrotem tekst lub inne oświadczenia, które zachowują informacje o przestrzeni nazw XAML.</span><span class="sxs-lookup"><span data-stu-id="226aa-442">The preferred XAML namespace should be used when writing the member back to text or other representations that preserve XAML namespace information.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SerializationVisibility">
      <MemberSignature Language="C#" Value="public System.ComponentModel.DesignerSerializationVisibility SerializationVisibility { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ComponentModel.DesignerSerializationVisibility SerializationVisibility" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlMember.SerializationVisibility" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SerializationVisibility As DesignerSerializationVisibility" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ComponentModel::DesignerSerializationVisibility SerializationVisibility { System::ComponentModel::DesignerSerializationVisibility get(); };" />
      <MemberSignature Language="F#" Value="member this.SerializationVisibility : System.ComponentModel.DesignerSerializationVisibility" Usage="System.Xaml.XamlMember.SerializationVisibility" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.DesignerSerializationVisibility</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="226aa-443">Pobiera <see cref="T:System.ComponentModel.DesignerSerializationVisibility" /> wartość, która wskazuje, jak powinna ona przetwarzać element członkowski wizualnego projektanta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="226aa-443">Gets a <see cref="T:System.ComponentModel.DesignerSerializationVisibility" /> value, which indicates how a visual designer should process the member.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="226aa-444">Wartość <see cref="T:System.ComponentModel.DesignerSerializationVisibility" /> wyliczenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="226aa-444">A value of the <see cref="T:System.ComponentModel.DesignerSerializationVisibility" /> enumeration.</span>
          </span>
          <span data-ttu-id="226aa-445">Wartość domyślna to <see cref="F:System.ComponentModel.DesignerSerializationVisibility.Visible" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="226aa-445">The default is <see cref="F:System.ComponentModel.DesignerSerializationVisibility.Visible" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TargetType">
      <MemberSignature Language="C#" Value="public System.Xaml.XamlType TargetType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xaml.XamlType TargetType" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlMember.TargetType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TargetType As XamlType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xaml::XamlType ^ TargetType { System::Xaml::XamlType ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TargetType : System.Xaml.XamlType" Usage="System.Xaml.XamlMember.TargetType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="226aa-446">Pobiera <see cref="T:System.Xaml.XamlType" /> typu gdzie <see cref="T:System.Xaml.XamlMember" /> może istnieć.</span>
          <span class="sxs-lookup">
            <span data-stu-id="226aa-446">Gets the <see cref="T:System.Xaml.XamlType" /> of the type where the <see cref="T:System.Xaml.XamlMember" /> can exist.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="226aa-447">Typ gdzie <see cref="T:System.Xaml.XamlMember" /> może istnieć.</span>
          <span class="sxs-lookup">
            <span data-stu-id="226aa-447">The type where the <see cref="T:System.Xaml.XamlMember" /> can exist.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="226aa-448">Zwrócona wartość różni się możliwe do dołączenia i niedołączalnego elementów członkowskich.</span><span class="sxs-lookup"><span data-stu-id="226aa-448">The returned value is different for attachable and non-attachable members.</span></span> <span data-ttu-id="226aa-449">Dla członków niedołączalnego <xref:System.Xaml.XamlMember.TargetType%2A> zwraca <xref:System.Xaml.XamlMember.DeclaringType%2A>.</span><span class="sxs-lookup"><span data-stu-id="226aa-449">For non-attachable members, <xref:System.Xaml.XamlMember.TargetType%2A> returns <xref:System.Xaml.XamlMember.DeclaringType%2A>.</span></span> <span data-ttu-id="226aa-450">Dla członków możliwej <xref:System.Xaml.XamlMember.LookupTargetType%2A> zwraca wyniku, który jest oparty na tę logikę:</span><span class="sxs-lookup"><span data-stu-id="226aa-450">For attachable members, <xref:System.Xaml.XamlMember.LookupTargetType%2A> returns a result that is based on this logic:</span></span>  
  
-   <span data-ttu-id="226aa-451">Jeśli odbicia nie można rozpoznać zapasowy (<xref:System.Xaml.XamlMember.IsUnknown%2A> `true`), ta metoda zwraca wewnętrzny stała, który reprezentuje typ obiektu ogólnego.</span><span class="sxs-lookup"><span data-stu-id="226aa-451">If reflection cannot resolve a backing (<xref:System.Xaml.XamlMember.IsUnknown%2A> `true`), this method returns an internal constant that represents a generic object type.</span></span>  
  
-   <span data-ttu-id="226aa-452">Jeśli poprzednich warunków nie ma zastosowania, <xref:System.Xaml.XamlMember.LookupTargetType%2A> jest wywoływana.</span><span class="sxs-lookup"><span data-stu-id="226aa-452">If the previous condition does not apply, <xref:System.Xaml.XamlMember.LookupTargetType%2A> is called.</span></span> <span data-ttu-id="226aa-453">Domyślna implementacja zwraca <xref:System.Xaml.XamlType> opartego na sprawdzenie metod, które implementują `get` i `set` metody dostępu.</span><span class="sxs-lookup"><span data-stu-id="226aa-453">The default implementation returns a <xref:System.Xaml.XamlType> that is based on examining the methods that implement the `get` and `set` accessors.</span></span> <span data-ttu-id="226aa-454">Klasy mogą zastąpić <xref:System.Xaml.XamlMember.LookupTargetType%2A> do użycia inaczej, takie jak metadanych innych formularzy, które może raportować typy elementów docelowych dla możliwe do dołączenia elementy członkowskie.</span><span class="sxs-lookup"><span data-stu-id="226aa-454">A class might override <xref:System.Xaml.XamlMember.LookupTargetType%2A> to use a different behavior such as other metadata forms that might report target types for attachable members.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="xamlMember.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="226aa-455">Zwraca reprezentację ciągu tego <see cref="T:System.Xaml.XamlMember" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="226aa-455">Returns a string representation of this <see cref="T:System.Xaml.XamlMember" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="226aa-456">Reprezentacja ciągu tego <see cref="T:System.Xaml.XamlMember" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="226aa-456">A string representation of this <see cref="T:System.Xaml.XamlMember" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="226aa-457">Ta implementacja zwraca <xref:System.Xaml.XamlMember.Name%2A>.</span><span class="sxs-lookup"><span data-stu-id="226aa-457">This implementation returns <xref:System.Xaml.XamlMember.Name%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Type">
      <MemberSignature Language="C#" Value="public System.Xaml.XamlType Type { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xaml.XamlType Type" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlMember.Type" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Type As XamlType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xaml::XamlType ^ Type { System::Xaml::XamlType ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Type : System.Xaml.XamlType" Usage="System.Xaml.XamlMember.Type" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="226aa-458">Pobiera <see cref="T:System.Xaml.XamlType" /> typu, który jest używany przez element członkowski.</span>
          <span class="sxs-lookup">
            <span data-stu-id="226aa-458">Gets the <see cref="T:System.Xaml.XamlType" /> of the type that is used by the member.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="226aa-459">
            <see cref="T:System.Xaml.XamlType" /> Typu, który jest używany przez element członkowski.</span>
          <span class="sxs-lookup">
            <span data-stu-id="226aa-459">The <see cref="T:System.Xaml.XamlType" /> of the type that is used by the member.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="226aa-460">Wywoływanie <xref:System.Xaml.XamlMember.Type%2A> wywołuje <xref:System.Xaml.XamlMember.LookupType%2A> lub określonego zastąpienia tej metody.</span><span class="sxs-lookup"><span data-stu-id="226aa-460">Calling <xref:System.Xaml.XamlMember.Type%2A> invokes <xref:System.Xaml.XamlMember.LookupType%2A> or a specific override of that method.</span></span> <span data-ttu-id="226aa-461">Dzieje się tak, gdy logiki początkowego odbicia wewnętrznych już nie ustawiono informacji.</span><span class="sxs-lookup"><span data-stu-id="226aa-461">This occurs when the initial internal reflection logic has not already set the information.</span></span>  
  
 <span data-ttu-id="226aa-462">Zachowanie domyślne (nie <xref:System.Xaml.XamlMember.LookupType%2A> zastąpienia), zwracana <xref:System.Xaml.XamlType> może mieć inną funkcję koncepcyjnego.</span><span class="sxs-lookup"><span data-stu-id="226aa-462">In the default behavior (no <xref:System.Xaml.XamlMember.LookupType%2A> override), the returned <xref:System.Xaml.XamlType> can have different conceptual meanings.</span></span> <span data-ttu-id="226aa-463">Stosuje który znaczenia zależy od tego, czy to <xref:System.Xaml.XamlMember> reprezentuje właściwości, metody lub zdarzenia, jak przedstawiono na poniższej liście:</span><span class="sxs-lookup"><span data-stu-id="226aa-463">Which meaning applies depends on whether this <xref:System.Xaml.XamlMember> represents a property, method, or event, as the following list shows:</span></span>  
  
-   <span data-ttu-id="226aa-464">Dla właściwości, zwracana <xref:System.Xaml.XamlType> jest typ, który ustawia właściwość jest zwracana przez właściwość.</span><span class="sxs-lookup"><span data-stu-id="226aa-464">For a property, the returned <xref:System.Xaml.XamlType> is the type that sets the property or is returned by the property.</span></span>  
  
-   <span data-ttu-id="226aa-465">Zdarzenia, zwracana <xref:System.Xaml.XamlType> jest typem obsługi zdarzeń wymagane (delegata w implementacji środowiska CLR).</span><span class="sxs-lookup"><span data-stu-id="226aa-465">For an event, the returned <xref:System.Xaml.XamlType> is the required event handler type (a delegate in a CLR implementation).</span></span>  
  
-   <span data-ttu-id="226aa-466">W przypadku metody <xref:System.Xaml.XamlType> jest typ zwrotny tej metody, które mogą być `null`.</span><span class="sxs-lookup"><span data-stu-id="226aa-466">For a method, <xref:System.Xaml.XamlType> is the return type of that method, which may be `null`.</span></span>  
  
 <span data-ttu-id="226aa-467">W każdym przypadku kontekst schematu XAML jest używany do oceny typu XAML z zapasowego typu.</span><span class="sxs-lookup"><span data-stu-id="226aa-467">In each case, the XAML schema context is used to evaluate the XAML type from the backing type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TypeConverter">
      <MemberSignature Language="C#" Value="public System.Xaml.Schema.XamlValueConverter&lt;System.ComponentModel.TypeConverter&gt; TypeConverter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xaml.Schema.XamlValueConverter`1&lt;class System.ComponentModel.TypeConverter&gt; TypeConverter" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlMember.TypeConverter" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TypeConverter As XamlValueConverter(Of TypeConverter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xaml::Schema::XamlValueConverter&lt;System::ComponentModel::TypeConverter ^&gt; ^ TypeConverter { System::Xaml::Schema::XamlValueConverter&lt;System::ComponentModel::TypeConverter ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TypeConverter : System.Xaml.Schema.XamlValueConverter&lt;System.ComponentModel.TypeConverter&gt;" Usage="System.Xaml.XamlMember.TypeConverter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.Schema.XamlValueConverter&lt;System.ComponentModel.TypeConverter&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="226aa-468">Pobiera <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> obiektu, który może służyć do tworzenia konwersji typu XAML zadeklarowany obiektów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="226aa-468">Gets a <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> object, which can be used for type conversion construction of XAML declared objects.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="226aa-469">A <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> wartości, z <see cref="T:System.ComponentModel.TypeConverter" /> ograniczenie ogólnego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="226aa-469">A <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> value, with a <see cref="T:System.ComponentModel.TypeConverter" /> constraint on the generic.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="226aa-470">Wywoływanie <xref:System.Xaml.XamlMember.TypeConverter%2A> wywołuje <xref:System.Xaml.XamlMember.LookupTypeConverter%2A> lub określonego zastąpienia tej metody.</span><span class="sxs-lookup"><span data-stu-id="226aa-470">Calling <xref:System.Xaml.XamlMember.TypeConverter%2A> invokes <xref:System.Xaml.XamlMember.LookupTypeConverter%2A> or a specific override of that method.</span></span> <span data-ttu-id="226aa-471">Dzieje się tak, gdy logiki początkowego odbicia wewnętrznych już nie ustawiono informacji.</span><span class="sxs-lookup"><span data-stu-id="226aa-471">This behavior occurs when the initial internal reflection logic has not already set the information.</span></span>  
  
 <span data-ttu-id="226aa-472">Implementacje, które zwracają właściwości inną niż null wartość <xref:System.Xaml.XamlMember.TypeConverter%2A> niekoniecznie działającego <xref:System.ComponentModel.TypeConverter>.</span><span class="sxs-lookup"><span data-stu-id="226aa-472">Implementations that return a non-null property value for <xref:System.Xaml.XamlMember.TypeConverter%2A> are not necessarily a working <xref:System.ComponentModel.TypeConverter>.</span></span> <span data-ttu-id="226aa-473">Poniżej przedstawiono listę możliwych wartości zwracane inną niż null dla <xref:System.Xaml.XamlMember.TypeConverter%2A> i reprezentują te wartości:</span><span class="sxs-lookup"><span data-stu-id="226aa-473">The following is a list of possible non-null return values for <xref:System.Xaml.XamlMember.TypeConverter%2A> and what these values represent:</span></span>  
  
-   <span data-ttu-id="226aa-474">Wartość zwracana raporty konwerter typu, który ma atrybut specjalnie do tego elementu członkowskiego lub ogólnie na typ docelowy konwertera.</span><span class="sxs-lookup"><span data-stu-id="226aa-474">The return value reports a type converter that is attributed specifically to that member or more generally to the target type of the converter.</span></span> <span data-ttu-id="226aa-475">To zachowanie jest zazwyczaj jakie większość systemów typu XAML i procesorów XAML, poszukaj w celu utworzenia wystąpienia typu konwertera i wywołanie jego metody.</span><span class="sxs-lookup"><span data-stu-id="226aa-475">This behavior is typically what most XAML type systems and XAML processors look for in order to instantiate a type converter and invoke its methods.</span></span>  
  
-   <span data-ttu-id="226aa-476">Wartość zwracana raporty konwertera wartości wbudowanych.</span><span class="sxs-lookup"><span data-stu-id="226aa-476">The return value reports a built-in value converter.</span></span> <span data-ttu-id="226aa-477">Istnieje konwerterów dla pewnych operacji wewnętrznych, wykonywanych przez moduł zapisujący XAML.</span><span class="sxs-lookup"><span data-stu-id="226aa-477">These converters exist for certain internal operations that are performed by a XAML writer.</span></span> <span data-ttu-id="226aa-478">W szczególności konwerterów wartości wbudowanych konwertowanie wartości ciągu nieprzetworzonego atrybutu podstawowych poziom języka XAML.</span><span class="sxs-lookup"><span data-stu-id="226aa-478">In particular, these built-in value converters convert the raw attribute string values to the XAML language-level primitives.</span></span> <span data-ttu-id="226aa-479">Dla implementacji usług .NET Framework XAML te konwersje typu wbudowanego często przesyła konwertera typów, który jest zdefiniowany w zestawie systemu.</span><span class="sxs-lookup"><span data-stu-id="226aa-479">For the .NET Framework XAML Services implementation, these built-in type conversions often forward to a type converter that is defined in the System assembly.</span></span> <span data-ttu-id="226aa-480">Na przykład konwersji dla <xref:System.Int32> wartość zawiera wbudowane przekazywane konwersji i w związku z tym <xref:System.Xaml.Schema.XamlValueConverter%601.ConverterType%2A> wartości odwołania <xref:System.ComponentModel.Int32Converter>.</span><span class="sxs-lookup"><span data-stu-id="226aa-480">For example, a conversion for an <xref:System.Int32> value has built-in forwarded conversion, and therefore, the <xref:System.Xaml.Schema.XamlValueConverter%601.ConverterType%2A> value references <xref:System.ComponentModel.Int32Converter>.</span></span>  
  
-   <span data-ttu-id="226aa-481">Wartość zwracana raporty szczególnych przypadkach modelu nieograniczonego obiektów; oznacza to <xref:System.Xaml.XamlMember> ma <xref:System.Xaml.XamlMember.Type%2A> wartość <xref:System.Object>.</span><span class="sxs-lookup"><span data-stu-id="226aa-481">The return value reports the special case of an unconstrained object model; that is, the <xref:System.Xaml.XamlMember> has a <xref:System.Xaml.XamlMember.Type%2A> value of <xref:System.Object>.</span></span> <span data-ttu-id="226aa-482">W takim przypadku <xref:System.Xaml.Schema.XamlValueConverter%601> zgłasza, że <xref:System.Xaml.Schema.XamlValueConverter%601.Name%2A?displayProperty=nameWithType> jest {`Object}`.</span><span class="sxs-lookup"><span data-stu-id="226aa-482">In this case, the <xref:System.Xaml.Schema.XamlValueConverter%601> reports that the <xref:System.Xaml.Schema.XamlValueConverter%601.Name%2A?displayProperty=nameWithType> is {`Object}`.</span></span> <span data-ttu-id="226aa-483">Jednak <xref:System.Xaml.Schema.XamlValueConverter%601.ConverterInstance%2A> jest `null` , ponieważ nie rzeczywisty typ wystąpienia jest ani do wykonania konwersji.</span><span class="sxs-lookup"><span data-stu-id="226aa-483">However, <xref:System.Xaml.Schema.XamlValueConverter%601.ConverterInstance%2A> is `null` because no actual type or instance is available to perform this conversion.</span></span> <span data-ttu-id="226aa-484">Zamiast tego zachowania modelu obiektu nie można określić do czasu wykonywania, gdy środowisko uruchomieniowe określonych technologii określa obsługi jego wykres obiektu.</span><span class="sxs-lookup"><span data-stu-id="226aa-484">Instead, the object model behavior cannot be determined until run time, when the runtime of the specific technology determines the handling of its object graph.</span></span>  
  
 <span data-ttu-id="226aa-485">Jeśli dostęp do działającego <xref:System.ComponentModel.TypeConverter> z <xref:System.Xaml.Schema.XamlValueConverter%601.ConverterInstance%2A>, można wywołać metody konwersji.</span><span class="sxs-lookup"><span data-stu-id="226aa-485">If you can access a working <xref:System.ComponentModel.TypeConverter> from <xref:System.Xaml.Schema.XamlValueConverter%601.ConverterInstance%2A>, you can invoke its conversion methods.</span></span> <span data-ttu-id="226aa-486">Jednak wiele metod konwersji zależne od kontekstu usługi.</span><span class="sxs-lookup"><span data-stu-id="226aa-486">However, many conversion methods rely on service context.</span></span> <span data-ttu-id="226aa-487">Jeśli nie ma tego samego kontekstu usługi dostępne, że konwerter typów oczekuje dla swojej roli typowe zapisywania obiektów dla wykresów obiektów, metod konwertera można zgłaszają wyjątki.</span><span class="sxs-lookup"><span data-stu-id="226aa-487">If you do not have the same service context available that the type converter expects for its typical role of writing objects for object graphs, the converter methods can throw exceptions.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UnderlyingMember">
      <MemberSignature Language="C#" Value="public System.Reflection.MemberInfo UnderlyingMember { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Reflection.MemberInfo UnderlyingMember" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlMember.UnderlyingMember" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UnderlyingMember As MemberInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Reflection::MemberInfo ^ UnderlyingMember { System::Reflection::MemberInfo ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.UnderlyingMember : System.Reflection.MemberInfo" Usage="System.Xaml.XamlMember.UnderlyingMember" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Reflection.MemberInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="226aa-488">Pobiera system typów CLR <see cref="T:System.Reflection.MemberInfo" /> dostępnej dla elementu członkowskiego, który jest tworzony przez <see cref="T:System.Reflection.PropertyInfo" />, <see cref="T:System.Reflection.MethodInfo" />, lub <see cref="T:System.Reflection.EventInfo" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="226aa-488">Gets the CLR type system <see cref="T:System.Reflection.MemberInfo" /> that is available for a member that is constructed by <see cref="T:System.Reflection.PropertyInfo" />, <see cref="T:System.Reflection.MethodInfo" />, or <see cref="T:System.Reflection.EventInfo" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="226aa-489">System typów CLR <see cref="T:System.Reflection.MemberInfo" /> informacji jako rzutowanie z parametrami konstruktora początkowej.</span>
          <span class="sxs-lookup">
            <span data-stu-id="226aa-489">CLR type system <see cref="T:System.Reflection.MemberInfo" /> information, as cast from the initial constructor parameters.</span>
          </span>
          <span data-ttu-id="226aa-490">A <see cref="T:System.Xaml.XamlMember" /> który jest tworzony z <see cref="M:System.Xaml.XamlMember.#ctor(System.String,System.Xaml.XamlType,System.Boolean)" /> zwraca podpis <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="226aa-490">A <see cref="T:System.Xaml.XamlMember" /> that is constructed with the <see cref="M:System.Xaml.XamlMember.#ctor(System.String,System.Xaml.XamlType,System.Boolean)" /> signature returns <see langword="null" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="226aa-491">Wywoływanie <xref:System.Xaml.XamlMember.UnderlyingMember%2A> wywołuje <xref:System.Xaml.XamlMember.LookupUnderlyingMember%2A> lub określonego zastąpienia tej metody.</span><span class="sxs-lookup"><span data-stu-id="226aa-491">Calling <xref:System.Xaml.XamlMember.UnderlyingMember%2A> invokes <xref:System.Xaml.XamlMember.LookupUnderlyingMember%2A> or a specific override of that method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ValueSerializer">
      <MemberSignature Language="C#" Value="public System.Xaml.Schema.XamlValueConverter&lt;System.Windows.Markup.ValueSerializer&gt; ValueSerializer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xaml.Schema.XamlValueConverter`1&lt;class System.Windows.Markup.ValueSerializer&gt; ValueSerializer" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlMember.ValueSerializer" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ValueSerializer As XamlValueConverter(Of ValueSerializer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xaml::Schema::XamlValueConverter&lt;System::Windows::Markup::ValueSerializer ^&gt; ^ ValueSerializer { System::Xaml::Schema::XamlValueConverter&lt;System::Windows::Markup::ValueSerializer ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ValueSerializer : System.Xaml.Schema.XamlValueConverter&lt;System.Windows.Markup.ValueSerializer&gt;" Usage="System.Xaml.XamlMember.ValueSerializer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.Schema.XamlValueConverter&lt;System.Windows.Markup.ValueSerializer&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="226aa-492">Pobiera <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> obiektu, który jest używany do serializacji wartości XAML zadeklarowany obiektów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="226aa-492">Gets a <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> object, which is used for value serialization of XAML declared objects.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="226aa-493">A <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> z <see cref="T:System.Windows.Markup.ValueSerializer" /> ograniczenie ogólnego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="226aa-493">A <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> with <see cref="T:System.Windows.Markup.ValueSerializer" /> constraint on the generic.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="226aa-494">Wywoływanie <xref:System.Xaml.XamlMember.ValueSerializer%2A> wywołuje <xref:System.Xaml.XamlMember.LookupValueSerializer%2A> lub określonego zastąpienia tej metody.</span><span class="sxs-lookup"><span data-stu-id="226aa-494">Calling <xref:System.Xaml.XamlMember.ValueSerializer%2A> invokes <xref:System.Xaml.XamlMember.LookupValueSerializer%2A> or a specific override of that method.</span></span> <span data-ttu-id="226aa-495">Dzieje się tak, gdy logiki początkowego odbicia wewnętrznych już nie ustawiono informacji.</span><span class="sxs-lookup"><span data-stu-id="226aa-495">This behavior occurs when the initial internal reflection logic has not already set the information.</span></span>  
  
 <span data-ttu-id="226aa-496">Nie wszystkie przypadki, które zwracają właściwości inną niż null wartość <xref:System.Xaml.XamlMember.ValueSerializer%2A> są zawsze działa <xref:System.Windows.Markup.ValueSerializer>.</span><span class="sxs-lookup"><span data-stu-id="226aa-496">Not all cases that return a non-null property value for <xref:System.Xaml.XamlMember.ValueSerializer%2A> are necessarily a working <xref:System.Windows.Markup.ValueSerializer>.</span></span> <span data-ttu-id="226aa-497">Zobacz <xref:System.Xaml.XamlMember.TypeConverter%2A>; te same kwestie <xref:System.Xaml.XamlMember.ValueSerializer%2A>.</span><span class="sxs-lookup"><span data-stu-id="226aa-497">See <xref:System.Xaml.XamlMember.TypeConverter%2A>; the same considerations apply to <xref:System.Xaml.XamlMember.ValueSerializer%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>