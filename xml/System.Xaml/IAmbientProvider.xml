<Type Name="IAmbientProvider" FullName="System.Xaml.IAmbientProvider">
  <Metadata><Meta Name="ms.openlocfilehash" Value="676cec76c5e65ccbe563061adfe0bf5b84afefce" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69416450" /></Metadata><TypeSignature Language="C#" Value="public interface IAmbientProvider" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IAmbientProvider" />
  <TypeSignature Language="DocId" Value="T:System.Xaml.IAmbientProvider" />
  <TypeSignature Language="VB.NET" Value="Public Interface IAmbientProvider" />
  <TypeSignature Language="C++ CLI" Value="public interface class IAmbientProvider" />
  <TypeSignature Language="F#" Value="type IAmbientProvider = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Xaml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>Reprezentuje usługę, która może zwracać elementy informacji o otaczających właściwościach lub typach otoczenia do typów konwerterów i rozszerzeń znaczników.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten interfejs reprezentuje usługę, która może pomóc w typach konwerterów i rozszerzeń znaczników w celu uzyskania identyfikatorów właściwości otoczenia dla systemu typów XAML<xref:System.Xaml.XamlMember> (obiekty). Usługa może również uzyskać wartości właściwości otoczenia z klas. Typy mogą być również otoczenia; Każdy element członkowski używający tego typu jako jego wartość powinna być uważany za otoczenie.  
  
 Ta usługa jest zwykle zwracana przez wywołanie do <xref:System.IServiceProvider.GetService%2A>, które jest wykonywane względem dostawcy usług specyficznych dla kontekstu. Dostawca usług jest ogólnie dostępny dla kontekstów, które go potrzebują, takich jak kod wykonania konwertera wartości. Aby uzyskać więcej informacji, zobacz [Typy konwerterów i rozszerzenia znaczników dla XAML](~/docs/framework/xaml-services/type-converters-and-markup-extensions-for-xaml.md) i [kontekstów usługi dostępne dla konwerterów typów i rozszerzeń znaczników](~/docs/framework/xaml-services/service-contexts-available-to-type-converters-and-markup-extensions.md).  
  
## <a name="about-ambient-properties"></a>Informacje o właściwościach otoczenia  
 Właściwość otoczenia to właściwość, której wartość właściwości powinna być dostępna dla konwertera typów i użycia rozszerzeń znaczników, które istnieją w strukturze węzłów XAML i w grafie obiektów utworzonym na podstawie tego elementu. Jest to istotne w przypadku procesora XAML podczas fazy pisania obiektu ścieżki ładowania lub fazy serializacji ścieżki zapisu.  
  
 W przypadku ścieżki ładowania wartość właściwości otoczenia może wpływać na wartość na grafie obiektów innych właściwości, które znajdują się poniżej w strukturze węzłów XAML. Podczas przetwarzania jako strumień węzłów XAML pojęcie otoczenia oznacza, że wartość właściwości otoczenia musi być dostępna dla konwerterów typów i rozszerzeń znaczników z `StartObject` do. `EndObject` Podobnie konwerter typu, który jest używany dla ścieżki zapisu, może korzystać z wiedzy o właściwości otoczenia i jego wartości. W związku z tym, tworzony kod XAML jest lepszym reprezentacją rundy.  
  
 W przypadku elementów członkowskich ogólnie język XAML nie określa kolejności, w której elementy członkowskie obiektu muszą być przetwarzane. Jednakże każda wartość właściwości otoczenia musi być przetwarzana najpierw przez czytnik XAML, aby konwerter typów i użycie rozszerzeń znaczników, które znajdują się w innych właściwościach, mogły uzyskać do nich <xref:System.Xaml.IAmbientProvider> dostęp za pomocą usługi.  
  
 <xref:System.Xaml.XamlMember.DependsOn%2A>jest podobnym pojęciem, które ma także wpływ na kolejność przetwarzania węzłów XAML. <xref:System.Xaml.XamlMember.DependsOn%2A> Jednak można go używać tylko dla elementów członkowskich elementów równorzędnych i relacji między węzłami; nie ma to wpływu na wszystkie elementy podrzędne. <xref:System.Xaml.XamlMember.DependsOn%2A> Ponadto bezpośrednio wpływa na ustawienie właściwości grafu obiektów, natomiast technika otoczenia opiera się na konwerterach typów lub rozszerzeniach znaczników. W technice otoczenia musi istnieć również określony konwerter typów lub definicja rozszerzenia znaczników, które określa sposób interpretacji wartości właściwości otaczającej i stosowanej do obiektu.  
  
## <a name="wpf-usage-notes"></a>Uwagi dotyczące użycia WPF  
 Scenariusz właściwości otoczenia, który jest przedstawiony w [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] zestawie funkcji to <xref:System.Windows.Style.TargetType%2A?displayProperty=nameWithType>, co może zakwalifikować wymagane wyszukiwania nazw właściwości dla innych wartości. W takim przypadku <xref:System.Windows.Style.TargetType%2A?displayProperty=nameWithType> wartość kwalifikuje <xref:System.Windows.Setter.Property%2A?displayProperty=nameWithType> wartości, które znajdują się w węzłach XAML znajdujących się poniżej. <xref:System.Windows.Setter.Property%2A?displayProperty=nameWithType>używa zachowania konwertera typów dla <xref:System.Windows.DependencyProperty>. To zachowanie uzyskuje dostęp do <xref:System.Windows.Style.TargetType%2A?displayProperty=nameWithType> wartości otoczenia przez <xref:System.Xaml.IAmbientProvider.GetFirstAmbientValue%2A> przeszukiwanie z kontekstu usługi dostępnego dla konwerterów typów i rozszerzeń znaczników.  
  
 Scenariusz typu otoczenia, który jest przedstawiony w zestawie funkcji WPF to <xref:System.Windows.ResourceDictionary>. <xref:System.Windows.ResourceDictionary>ma właściwość, która może zawierać inne <xref:System.Windows.ResourceDictionary> obiekty do scalenia, a zaplanowaną kolejność rozpoznawania zasobów dla scalonego scenariusza koliduje z kolejnością, w której są ładowane typy. <xref:System.Windows.ResourceDictionary.MergedDictionaries%2A> <xref:System.Windows.ResourceDictionary>stosuje <xref:System.Windows.Markup.AmbientAttribute> się tak, aby procesor XAML mógł prawidłowo przetwarzać odwołania w scalonym `StaticResource` słowniku przy użyciu użycia. W odróżnieniu od tego, `StaticResource` jest rozszerzeniem znaczników, które wywołuje. <xref:System.Xaml.IAmbientProvider.GetAllAmbientValues%2A>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Xaml.AmbientPropertyValue" />
  </Docs>
  <Members>
    <MemberGroup MemberName="GetAllAmbientValues">
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Zwraca wyliczalny zestaw elementów informacji o typie otoczenia lub właściwości dla żądanego zakresu.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetAllAmbientValues">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;object&gt; GetAllAmbientValues (params System.Xaml.XamlType[] types);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;object&gt; GetAllAmbientValues(class System.Xaml.XamlType[] types) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.IAmbientProvider.GetAllAmbientValues(System.Xaml.XamlType[])" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAllAmbientValues (ParamArray types As XamlType()) As IEnumerable(Of Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;System::Object ^&gt; ^ GetAllAmbientValues(... cli::array &lt;System::Xaml::XamlType ^&gt; ^ types);" />
      <MemberSignature Language="F#" Value="abstract member GetAllAmbientValues : System.Xaml.XamlType[] -&gt; seq&lt;obj&gt;" Usage="iAmbientProvider.GetAllAmbientValues types" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Object&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="types" Type="System.Xaml.XamlType[]">
          <Attributes>
            <Attribute FrameworkAlternate="netcore-3.0">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="types">Zestaw typów, z którego mają zostać pobrane informacje o typie otoczenia.</param>
        <summary>Zwraca wyliczalny zestaw wystąpień obiektów możliwych typów otoczenia dla żądanych typów.</summary>
        <returns>Wyliczalny zestaw obiektów reprezentujący wartości dla żądanego zestawu <see cref="T:System.Xaml.XamlType" /> identyfikatorów.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAllAmbientValues">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.Xaml.AmbientPropertyValue&gt; GetAllAmbientValues (System.Collections.Generic.IEnumerable&lt;System.Xaml.XamlType&gt; ceilingTypes, params System.Xaml.XamlMember[] properties);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;class System.Xaml.AmbientPropertyValue&gt; GetAllAmbientValues(class System.Collections.Generic.IEnumerable`1&lt;class System.Xaml.XamlType&gt; ceilingTypes, class System.Xaml.XamlMember[] properties) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.IAmbientProvider.GetAllAmbientValues(System.Collections.Generic.IEnumerable{System.Xaml.XamlType},System.Xaml.XamlMember[])" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAllAmbientValues (ceilingTypes As IEnumerable(Of XamlType), ParamArray properties As XamlMember()) As IEnumerable(Of AmbientPropertyValue)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;System::Xaml::AmbientPropertyValue ^&gt; ^ GetAllAmbientValues(System::Collections::Generic::IEnumerable&lt;System::Xaml::XamlType ^&gt; ^ ceilingTypes, ... cli::array &lt;System::Xaml::XamlMember ^&gt; ^ properties);" />
      <MemberSignature Language="F#" Value="abstract member GetAllAmbientValues : seq&lt;System.Xaml.XamlType&gt; * System.Xaml.XamlMember[] -&gt; seq&lt;System.Xaml.AmbientPropertyValue&gt;" Usage="iAmbientProvider.GetAllAmbientValues (ceilingTypes, properties)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Xaml.AmbientPropertyValue&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ceilingTypes" Type="System.Collections.Generic.IEnumerable&lt;System.Xaml.XamlType&gt;" />
        <Parameter Name="properties" Type="System.Xaml.XamlMember[]">
          <Attributes>
            <Attribute FrameworkAlternate="netcore-3.0">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="ceilingTypes">Określa jeden lub więcej typów, które powinny zatrzymać obliczanie, gdy napotkają przechodzenie w górę na grafie obiektów. Ten typ zawiera pożądaną Właściwość otoczenia. Może być <see langword="null" />.</param>
        <param name="properties">Określa co najmniej jeden obiekt identyfikatora właściwości, który identyfikuje właściwości, które mają być uznawane za otaczające.</param>
        <summary>Zwraca wyliczalny zestaw elementów informacji o właściwości otoczenia dla żądanego zestawu właściwości.</summary>
        <returns>Wyliczalny zestaw elementów informacji o właściwości otoczenia dla żądanego zestawu właściwości. Informacje o każdej <see cref="T:System.Xaml.AmbientPropertyValue" /> zwracanej właściwości będą odpowiadały jednemu z danych wejściowych <paramref name="properties" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Każdy <xref:System.Xaml.AmbientPropertyValue> zwrócony element <xref:System.Xaml.XamlMember> zawiera identyfikator i wartość właściwości.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAllAmbientValues">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.Xaml.AmbientPropertyValue&gt; GetAllAmbientValues (System.Collections.Generic.IEnumerable&lt;System.Xaml.XamlType&gt; ceilingTypes, bool searchLiveStackOnly, System.Collections.Generic.IEnumerable&lt;System.Xaml.XamlType&gt; types, params System.Xaml.XamlMember[] properties);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;class System.Xaml.AmbientPropertyValue&gt; GetAllAmbientValues(class System.Collections.Generic.IEnumerable`1&lt;class System.Xaml.XamlType&gt; ceilingTypes, bool searchLiveStackOnly, class System.Collections.Generic.IEnumerable`1&lt;class System.Xaml.XamlType&gt; types, class System.Xaml.XamlMember[] properties) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.IAmbientProvider.GetAllAmbientValues(System.Collections.Generic.IEnumerable{System.Xaml.XamlType},System.Boolean,System.Collections.Generic.IEnumerable{System.Xaml.XamlType},System.Xaml.XamlMember[])" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAllAmbientValues (ceilingTypes As IEnumerable(Of XamlType), searchLiveStackOnly As Boolean, types As IEnumerable(Of XamlType), ParamArray properties As XamlMember()) As IEnumerable(Of AmbientPropertyValue)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;System::Xaml::AmbientPropertyValue ^&gt; ^ GetAllAmbientValues(System::Collections::Generic::IEnumerable&lt;System::Xaml::XamlType ^&gt; ^ ceilingTypes, bool searchLiveStackOnly, System::Collections::Generic::IEnumerable&lt;System::Xaml::XamlType ^&gt; ^ types, ... cli::array &lt;System::Xaml::XamlMember ^&gt; ^ properties);" />
      <MemberSignature Language="F#" Value="abstract member GetAllAmbientValues : seq&lt;System.Xaml.XamlType&gt; * bool * seq&lt;System.Xaml.XamlType&gt; * System.Xaml.XamlMember[] -&gt; seq&lt;System.Xaml.AmbientPropertyValue&gt;" Usage="iAmbientProvider.GetAllAmbientValues (ceilingTypes, searchLiveStackOnly, types, properties)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Xaml.AmbientPropertyValue&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ceilingTypes" Type="System.Collections.Generic.IEnumerable&lt;System.Xaml.XamlType&gt;" />
        <Parameter Name="searchLiveStackOnly" Type="System.Boolean" />
        <Parameter Name="types" Type="System.Collections.Generic.IEnumerable&lt;System.Xaml.XamlType&gt;" />
        <Parameter Name="properties" Type="System.Xaml.XamlMember[]">
          <Attributes>
            <Attribute FrameworkAlternate="netcore-3.0">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="ceilingTypes">Określa jeden lub więcej typów, które powinny zatrzymać obliczanie, gdy napotkają przechodzenie w górę na grafie obiektów. Ten typ zawiera pożądaną Właściwość otoczenia. Może być <see langword="null" />.</param>
        <param name="searchLiveStackOnly"><see langword="true" />Aby nie używać zapisanego kontekstu; <see langword="false" /> aby użyć zapisanego kontekstu. Wartość domyślna to <see langword="false" />.</param>
        <param name="types">Określa jeden lub więcej obiektów identyfikatorów typu, które identyfikują typy, które mają być uznawane za otaczające.</param>
        <param name="properties">Określa co najmniej jeden obiekt identyfikatora właściwości, który identyfikuje właściwości, które mają być uznawane za otaczające.</param>
        <summary>Zwraca wyliczalny zestaw elementów informacji o właściwości otoczenia dla żądanego zestawu typów i właściwości.</summary>
        <returns>Wyliczalny zestaw elementów informacji o właściwości otoczenia dla żądanego zestawu typów i właściwości. Informacje o każdej <see cref="T:System.Xaml.AmbientPropertyValue" /> zwracanej właściwości będą odpowiadały jednemu z danych wejściowych <paramref name="types" /> lub <paramref name="properties" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Każdy <xref:System.Xaml.AmbientPropertyValue> zwrócony element <xref:System.Xaml.XamlMember> zawiera identyfikator i wartość właściwości.  
  
 To konkretne <xref:System.Xaml.IAmbientProvider.GetAllAmbientValues%2A> Przeciążenie może wyszukiwać typy otoczenia i właściwości otoczenia w tym samym przejściu przez drzewo. Użycie tego przeciążenia powoduje uporządkowanie elementów w wartości zwracanej, która różni się od <xref:System.Xaml.IAmbientProvider.GetAllAmbientValues%28System.Collections.Generic.IEnumerable%7BSystem.Xaml.XamlType%7D%2CSystem.Xaml.XamlMember%5B%5D%29> lub. <xref:System.Xaml.IAmbientProvider.GetAllAmbientValues%28System.Xaml.XamlType%5B%5D%29>  
  
 To przeciążenie umożliwia również wyszukiwanie nie korzysta z żadnego zapisanego kontekstu. Przeciążenia <xref:System.Xaml.IAmbientProvider.GetAllAmbientValues%28System.Collections.Generic.IEnumerable%7BSystem.Xaml.XamlType%7D%2CSystem.Xaml.XamlMember%5B%5D%29> lub `searchLiveStackOnly` `false`przeciążania niejawnie używają zapisanego kontekstu, jeśli jest dostępny (zawsze działają tak, jakby parametr jest niejawny) <xref:System.Xaml.IAmbientProvider.GetAllAmbientValues%28System.Xaml.XamlType%5B%5D%29> . Koncepcja zapisanego kontekstu może być obsługiwana inaczej w określonych kontekstach schematu XAML lub w strukturach, które zawierają kod XAML. W implementacji XAML WPF zapisane konteksty są używane do rozwinięcia szablonu, a także w innych obszarach funkcji.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetFirstAmbientValue">
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Zwraca pojedynczy typ otoczenia lub element informacji o właściwościach z żądanego zestawu, na podstawie którego zostanie napotkana pierwsza właściwość.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetFirstAmbientValue">
      <MemberSignature Language="C#" Value="public object GetFirstAmbientValue (params System.Xaml.XamlType[] types);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetFirstAmbientValue(class System.Xaml.XamlType[] types) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.IAmbientProvider.GetFirstAmbientValue(System.Xaml.XamlType[])" />
      <MemberSignature Language="VB.NET" Value="Public Function GetFirstAmbientValue (ParamArray types As XamlType()) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetFirstAmbientValue(... cli::array &lt;System::Xaml::XamlType ^&gt; ^ types);" />
      <MemberSignature Language="F#" Value="abstract member GetFirstAmbientValue : System.Xaml.XamlType[] -&gt; obj" Usage="iAmbientProvider.GetFirstAmbientValue types" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="types" Type="System.Xaml.XamlType[]">
          <Attributes>
            <Attribute FrameworkAlternate="netcore-3.0">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="types">Zestaw typów, z którego mają zostać pobrane informacje o typie otoczenia.</param>
        <summary>Zwraca pierwszy pasujący obiekt, który jest możliwym typem otoczenia dla żądanych typów.</summary>
        <returns>Pierwszy obiekt wyniku dla żądanego zestawu.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFirstAmbientValue">
      <MemberSignature Language="C#" Value="public System.Xaml.AmbientPropertyValue GetFirstAmbientValue (System.Collections.Generic.IEnumerable&lt;System.Xaml.XamlType&gt; ceilingTypes, params System.Xaml.XamlMember[] properties);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xaml.AmbientPropertyValue GetFirstAmbientValue(class System.Collections.Generic.IEnumerable`1&lt;class System.Xaml.XamlType&gt; ceilingTypes, class System.Xaml.XamlMember[] properties) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.IAmbientProvider.GetFirstAmbientValue(System.Collections.Generic.IEnumerable{System.Xaml.XamlType},System.Xaml.XamlMember[])" />
      <MemberSignature Language="VB.NET" Value="Public Function GetFirstAmbientValue (ceilingTypes As IEnumerable(Of XamlType), ParamArray properties As XamlMember()) As AmbientPropertyValue" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xaml::AmbientPropertyValue ^ GetFirstAmbientValue(System::Collections::Generic::IEnumerable&lt;System::Xaml::XamlType ^&gt; ^ ceilingTypes, ... cli::array &lt;System::Xaml::XamlMember ^&gt; ^ properties);" />
      <MemberSignature Language="F#" Value="abstract member GetFirstAmbientValue : seq&lt;System.Xaml.XamlType&gt; * System.Xaml.XamlMember[] -&gt; System.Xaml.AmbientPropertyValue" Usage="iAmbientProvider.GetFirstAmbientValue (ceilingTypes, properties)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.AmbientPropertyValue</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ceilingTypes" Type="System.Collections.Generic.IEnumerable&lt;System.Xaml.XamlType&gt;" />
        <Parameter Name="properties" Type="System.Xaml.XamlMember[]">
          <Attributes>
            <Attribute FrameworkAlternate="netcore-3.0">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="ceilingTypes">Określa jeden lub więcej typów, które powinny zatrzymać obliczanie, gdy napotkają przechodzenie w górę na grafie obiektów. Ten typ zawiera pożądaną Właściwość otoczenia.</param>
        <param name="properties">Określa co najmniej jeden obiekt, który identyfikuje właściwości, które mają być uznawane za otaczające.</param>
        <summary>Zwraca element informacji o pojedynczej właściwości otoczenia z żądanego zestawu właściwości, na podstawie którego zostanie napotkana pierwsza właściwość.</summary>
        <returns>Pojedynczy element informacji o właściwości otoczenia dla pierwszej wartości właściwości otoczenia z <paramref name="properties" /> listy, która zostanie znaleziona.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Każdy <xref:System.Xaml.AmbientPropertyValue> zwrócony element <xref:System.Xaml.XamlMember> zawiera identyfikator i wartość właściwości.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
