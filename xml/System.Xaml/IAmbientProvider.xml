<Type Name="IAmbientProvider" FullName="System.Xaml.IAmbientProvider">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="9fcab2d451e7a5dffd50523a55bea65848a0295d" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36444917" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IAmbientProvider" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IAmbientProvider" />
  <TypeSignature Language="DocId" Value="T:System.Xaml.IAmbientProvider" />
  <TypeSignature Language="VB.NET" Value="Public Interface IAmbientProvider" />
  <TypeSignature Language="C++ CLI" Value="public interface class IAmbientProvider" />
  <TypeSignature Language="F#" Value="type IAmbientProvider = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Xaml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>Reprezentuje usługę, która może zwrócić elementów informacji o właściwości otaczających lub otoczenia typów dla typów konwerterów i rozszerzenia znaczników.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten interfejs reprezentuje usługi, które mogą ułatwić typy konwerterów i rozszerzeń znaczników można uzyskać identyfikatory — właściwość otoczenia system typów języka XAML (<xref:System.Xaml.XamlMember> obiektów). Usługę można również uzyskać wartości właściwości otoczenia z klas. Typy mogą być również otoczenia; Każdy członek, którego typ jest używany jako wartość należy rozważyć otoczenia.  
  
 Ta usługa jest zazwyczaj zwracane przez wywołanie <xref:System.IServiceProvider.GetService%2A>, który ma zostać względem dostawcy usługi zależne od kontekstu. Dostawca usług jest ogólnie dostępna do kontekstach, które są potrzebne, takich jak wykonanie kodu konwerter wartości. Aby uzyskać więcej informacji, zobacz [typy konwerterów i rozszerzenia znaczników dla XAML](~/docs/framework/xaml-services/type-converters-and-markup-extensions-for-xaml.md) i [usługi kontekstów dostępne dla typów konwerterów i rozszerzeń znaczników](~/docs/framework/xaml-services/service-contexts-available-to-type-converters-and-markup-extensions.md).  
  
## <a name="about-ambient-properties"></a>Informacje o właściwościach otoczenia  
 Zmieniono właściwość jest właściwością, których wartość właściwości musi być dostępne dla typów konwerterów i użycia rozszerzenia znaczników, które istnieją w strukturze węzłów XAML i z niej utworzyć wykres obiektu. Jest to istotne dla procesora XAML podczas fazy zapisywanie obiektu ścieżka obciążenia lub fazy serializacji Zapisz ścieżkę.  
  
 W przypadku ścieżki obciążenia wartości właściwości mogą mieć wpływ wartość na wykresie obiektu innych właściwości, które znajdują się poniżej go w strukturze węzłów XAML. Podczas przetwarzania jako strumień węzłów XAML otoczenia koncepcji oznacza, że wartość właściwości musi być dostępne dla typów konwerterów i rozszerzeń znaczników z `StartObject` do `EndObject`. Podobnie, konwertera typów, które jest używane zapisywania ścieżki można używać wiedzę na temat właściwości otoczenia i jej wartość. W związku z tym XAML, który jest tworzony jest lepsze reprezentacja błądzenia.  
  
 Dla członków ogólnie rzecz biorąc, XAML nie określa kolejność, w którym musi zostać przetworzona elementów członkowskich obiektu. Jednak wszystkie wartości właściwości otoczenia najpierw musi zostać przetworzony przez czytnik XAML, aby typ konwertera i znaczników rozszerzenia użycia znajdujące się w innych właściwości do niego dostęp za pośrednictwem <xref:System.Xaml.IAmbientProvider> usługi.  
  
 <xref:System.Xaml.XamlMember.DependsOn%2A> to pojęcie podobne, wpływającą kolejność przetwarzania węzła XAML. Jednak <xref:System.Xaml.XamlMember.DependsOn%2A> można używać tylko dla elementów równorzędnych węzła i element członkowski relacji; nie może ona mieć wpływ wszystkich elementów podrzędnych. Ponadto <xref:System.Xaml.XamlMember.DependsOn%2A> bezpośrednio wpływa obiekt Wykres ustawienie właściwości; natomiast otoczenia metoda polega na typy konwerterów i rozszerzenia znaczników. W otoczeniu technika musi również istnieć konwertera określonego typu lub definicji rozszerzenia znaczników, która określa, jak interpretować i stosowane do obiektu wartość właściwości otoczenia.  
  
## <a name="wpf-usage-notes"></a>Uwagi dotyczące użycia WPF  
 Scenariusz — właściwość otoczenia, który przedstawia [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] zestaw funkcji jest <xref:System.Windows.Style.TargetType%2A?displayProperty=nameWithType>, które kwalifikują się wyszukiwanie nazw właściwości niezbędne do innych wartości. W takim przypadku <xref:System.Windows.Style.TargetType%2A?displayProperty=nameWithType> kwalifikuje się wartość <xref:System.Windows.Setter.Property%2A?displayProperty=nameWithType> wartości, które znajdują się w XAML węzły podrzędne. <xref:System.Windows.Setter.Property%2A?displayProperty=nameWithType> używa typu konwertera zachowanie <xref:System.Windows.DependencyProperty>. To zachowanie uzyskuje dostęp do otoczenia <xref:System.Windows.Style.TargetType%2A?displayProperty=nameWithType> wartość badając <xref:System.Xaml.IAmbientProvider.GetFirstAmbientValue%2A> z kontekstu usługi, która jest dostępna dla typów konwerterów i rozszerzeń znaczników.  
  
 Scenariusz przedstawiono na zestaw funkcji WPF typu otaczającego jest <xref:System.Windows.ResourceDictionary>. <xref:System.Windows.ResourceDictionary> ma <xref:System.Windows.ResourceDictionary.MergedDictionaries%2A> właściwość, która może zawierać inne <xref:System.Windows.ResourceDictionary> obiekty do scalenia i zamierzonego kolejność rozpoznawania zasobów dla kolizji scalonych scenariusz w kolejności, że są ładowane. <xref:System.Windows.ResourceDictionary> stosuje <xref:System.Windows.Markup.AmbientAttribute> tak, aby procesora XAML może poprawnie przetworzyć odwołań w słowniku scalone z `StaticResource` użycia. W szczególności `StaticResource` jest rozszerzenie znaczników, który wywołuje <xref:System.Xaml.IAmbientProvider.GetAllAmbientValues%2A>.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Xaml.AmbientPropertyValue" />
  </Docs>
  <Members>
    <MemberGroup MemberName="GetAllAmbientValues">
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Zwraca zestaw otaczających elementów typu lub właściwość informacji dla żądanego zakresu.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetAllAmbientValues">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;object&gt; GetAllAmbientValues (params System.Xaml.XamlType[] types);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;object&gt; GetAllAmbientValues(class System.Xaml.XamlType[] types) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.IAmbientProvider.GetAllAmbientValues(System.Xaml.XamlType[])" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAllAmbientValues (ParamArray types As XamlType()) As IEnumerable(Of Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;System::Object ^&gt; ^ GetAllAmbientValues(... cli::array &lt;System::Xaml::XamlType ^&gt; ^ types);" />
      <MemberSignature Language="F#" Value="abstract member GetAllAmbientValues : System.Xaml.XamlType[] -&gt; seq&lt;obj&gt;" Usage="iAmbientProvider.GetAllAmbientValues types" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Object&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="types" Type="System.Xaml.XamlType[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="types">Zestaw typów, z którego można pobrać informacji o typie otaczającym.</param>
        <summary>Zwraca zestaw obiektów możliwych typów otoczenia dla żądanych typów.</summary>
        <returns>Wyliczalny zestaw obiektów, które reprezentują wartości żądany zestaw <see cref="T:System.Xaml.XamlType" /> identyfikatorów.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAllAmbientValues">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.Xaml.AmbientPropertyValue&gt; GetAllAmbientValues (System.Collections.Generic.IEnumerable&lt;System.Xaml.XamlType&gt; ceilingTypes, params System.Xaml.XamlMember[] properties);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;class System.Xaml.AmbientPropertyValue&gt; GetAllAmbientValues(class System.Collections.Generic.IEnumerable`1&lt;class System.Xaml.XamlType&gt; ceilingTypes, class System.Xaml.XamlMember[] properties) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.IAmbientProvider.GetAllAmbientValues(System.Collections.Generic.IEnumerable{System.Xaml.XamlType},System.Xaml.XamlMember[])" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAllAmbientValues (ceilingTypes As IEnumerable(Of XamlType), ParamArray properties As XamlMember()) As IEnumerable(Of AmbientPropertyValue)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;System::Xaml::AmbientPropertyValue ^&gt; ^ GetAllAmbientValues(System::Collections::Generic::IEnumerable&lt;System::Xaml::XamlType ^&gt; ^ ceilingTypes, ... cli::array &lt;System::Xaml::XamlMember ^&gt; ^ properties);" />
      <MemberSignature Language="F#" Value="abstract member GetAllAmbientValues : seq&lt;System.Xaml.XamlType&gt; * System.Xaml.XamlMember[] -&gt; seq&lt;System.Xaml.AmbientPropertyValue&gt;" Usage="iAmbientProvider.GetAllAmbientValues (ceilingTypes, properties)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Xaml.AmbientPropertyValue&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ceilingTypes" Type="System.Collections.Generic.IEnumerable&lt;System.Xaml.XamlType&gt;" />
        <Parameter Name="properties" Type="System.Xaml.XamlMember[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="ceilingTypes">Określa jeden lub więcej typów, których ocena ma zostać zatrzymana, gdy zostaną napotkane przechodzenie w górę na wykresie obiektu. Tego typu przechowuje żądanej właściwości otoczenia. Może być <see langword="null" />.</param>
        <param name="properties">Określa co najmniej jeden obiekt identyfikator właściwości, identyfikują właściwości wziąć pod uwagę otoczenia.</param>
        <summary>Zwraca zestaw elementów informacji właściwości dla żądanej zbiór właściwości.</summary>
        <returns>Wyliczalny zestaw elementów informacji otoczenia właściwości dla żądanej zbiór właściwości. Informacje dotyczące właściwości dla każdego <see cref="T:System.Xaml.AmbientPropertyValue" /> która jest zwracana będzie zgodne z jednym z danych wejściowych <paramref name="properties" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Każdy <xref:System.Xaml.AmbientPropertyValue> który jest zwracany zawiera <xref:System.Xaml.XamlMember> identyfikatora i wartość właściwości.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAllAmbientValues">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.Xaml.AmbientPropertyValue&gt; GetAllAmbientValues (System.Collections.Generic.IEnumerable&lt;System.Xaml.XamlType&gt; ceilingTypes, bool searchLiveStackOnly, System.Collections.Generic.IEnumerable&lt;System.Xaml.XamlType&gt; types, params System.Xaml.XamlMember[] properties);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;class System.Xaml.AmbientPropertyValue&gt; GetAllAmbientValues(class System.Collections.Generic.IEnumerable`1&lt;class System.Xaml.XamlType&gt; ceilingTypes, bool searchLiveStackOnly, class System.Collections.Generic.IEnumerable`1&lt;class System.Xaml.XamlType&gt; types, class System.Xaml.XamlMember[] properties) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.IAmbientProvider.GetAllAmbientValues(System.Collections.Generic.IEnumerable{System.Xaml.XamlType},System.Boolean,System.Collections.Generic.IEnumerable{System.Xaml.XamlType},System.Xaml.XamlMember[])" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAllAmbientValues (ceilingTypes As IEnumerable(Of XamlType), searchLiveStackOnly As Boolean, types As IEnumerable(Of XamlType), ParamArray properties As XamlMember()) As IEnumerable(Of AmbientPropertyValue)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;System::Xaml::AmbientPropertyValue ^&gt; ^ GetAllAmbientValues(System::Collections::Generic::IEnumerable&lt;System::Xaml::XamlType ^&gt; ^ ceilingTypes, bool searchLiveStackOnly, System::Collections::Generic::IEnumerable&lt;System::Xaml::XamlType ^&gt; ^ types, ... cli::array &lt;System::Xaml::XamlMember ^&gt; ^ properties);" />
      <MemberSignature Language="F#" Value="abstract member GetAllAmbientValues : seq&lt;System.Xaml.XamlType&gt; * bool * seq&lt;System.Xaml.XamlType&gt; * System.Xaml.XamlMember[] -&gt; seq&lt;System.Xaml.AmbientPropertyValue&gt;" Usage="iAmbientProvider.GetAllAmbientValues (ceilingTypes, searchLiveStackOnly, types, properties)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Xaml.AmbientPropertyValue&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ceilingTypes" Type="System.Collections.Generic.IEnumerable&lt;System.Xaml.XamlType&gt;" />
        <Parameter Name="searchLiveStackOnly" Type="System.Boolean" />
        <Parameter Name="types" Type="System.Collections.Generic.IEnumerable&lt;System.Xaml.XamlType&gt;" />
        <Parameter Name="properties" Type="System.Xaml.XamlMember[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="ceilingTypes">Określa jeden lub więcej typów, których ocena ma zostać zatrzymana, gdy zostaną napotkane przechodzenie w górę na wykresie obiektu. Tego typu przechowuje żądanej właściwości otoczenia. Może być <see langword="null" />.</param>
        <param name="searchLiveStackOnly">
          <see langword="true" /> Aby nie używać kontekstu zapisane; <see langword="false" /> używać zapisanych kontekstu. Wartość domyślna to <see langword="false" />.</param>
        <param name="types">To be added.</param>
        <param name="properties">Określa co najmniej jeden obiekt identyfikator właściwości, identyfikują właściwości wziąć pod uwagę otoczenia.</param>
        <summary>Zwraca zestaw elementów informacji — właściwość otoczenia żądany zestaw typów i właściwości.</summary>
        <returns>Wyliczalny zestaw właściwości otaczających elementów informacji dla żądany zestaw typów i właściwości. Informacje dotyczące właściwości dla każdego <see cref="T:System.Xaml.AmbientPropertyValue" /> która jest zwracana będzie zgodne z jednym z danych wejściowych <paramref name="types" /> lub <paramref name="properties" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Każdy <xref:System.Xaml.AmbientPropertyValue> który jest zwracany zawiera <xref:System.Xaml.XamlMember> identyfikatora i wartość właściwości.  
  
 W szczególności ten <xref:System.Xaml.IAmbientProvider.GetAllAmbientValues%2A> przeciążenia można wyszukiwać otoczenia typów i właściwości otaczających w tym samym przekazuj drzewa. Za pomocą tego przeciążenia wyniki w kolejności elementów w wartości zwracanej, która różni się od <xref:System.Xaml.IAmbientProvider.GetAllAmbientValues%28System.Collections.Generic.IEnumerable%7BSystem.Xaml.XamlType%7D%2CSystem.Xaml.XamlMember%5B%5D%29> lub <xref:System.Xaml.IAmbientProvider.GetAllAmbientValues%28System.Xaml.XamlType%5B%5D%29>.  
  
 To przeciążenie umożliwia również wyszukiwanie, aby nie używać żadnych zapisanych kontekstu. <xref:System.Xaml.IAmbientProvider.GetAllAmbientValues%28System.Collections.Generic.IEnumerable%7BSystem.Xaml.XamlType%7D%2CSystem.Xaml.XamlMember%5B%5D%29> Lub <xref:System.Xaml.IAmbientProvider.GetAllAmbientValues%28System.Xaml.XamlType%5B%5D%29> przeciążenia niejawnie używać zapisanych kontekstu, jeśli jest dostępna (działają one zawsze tak, jakby niejawny `searchLiveStackOnly` parametr jest `false`). Pojęcie zapisane kontekstu potencjalnie różni się według określonej kontekst schematu XAML lub struktury zawierające XAML. W implementacji WPF XAML zapisane kontekstów służą do rozszerzania szablonu, a także innych obszarach funkcji.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetFirstAmbientValue">
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Zwraca jeden otoczenia typu lub właściwość informacji element żądany zestaw, oparte na pierwszym napotkaniu które właściwości.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetFirstAmbientValue">
      <MemberSignature Language="C#" Value="public object GetFirstAmbientValue (params System.Xaml.XamlType[] types);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetFirstAmbientValue(class System.Xaml.XamlType[] types) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.IAmbientProvider.GetFirstAmbientValue(System.Xaml.XamlType[])" />
      <MemberSignature Language="VB.NET" Value="Public Function GetFirstAmbientValue (ParamArray types As XamlType()) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetFirstAmbientValue(... cli::array &lt;System::Xaml::XamlType ^&gt; ^ types);" />
      <MemberSignature Language="F#" Value="abstract member GetFirstAmbientValue : System.Xaml.XamlType[] -&gt; obj" Usage="iAmbientProvider.GetFirstAmbientValue types" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="types" Type="System.Xaml.XamlType[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="types">Zestaw typów, z którego można pobrać informacji o typie otaczającym.</param>
        <summary>Zwraca pierwszy pasującego obiekt, który jest typem otoczenia możliwe żądanych typów.</summary>
        <returns>Pierwszy obiekt wyniku żądany zestaw.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFirstAmbientValue">
      <MemberSignature Language="C#" Value="public System.Xaml.AmbientPropertyValue GetFirstAmbientValue (System.Collections.Generic.IEnumerable&lt;System.Xaml.XamlType&gt; ceilingTypes, params System.Xaml.XamlMember[] properties);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xaml.AmbientPropertyValue GetFirstAmbientValue(class System.Collections.Generic.IEnumerable`1&lt;class System.Xaml.XamlType&gt; ceilingTypes, class System.Xaml.XamlMember[] properties) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.IAmbientProvider.GetFirstAmbientValue(System.Collections.Generic.IEnumerable{System.Xaml.XamlType},System.Xaml.XamlMember[])" />
      <MemberSignature Language="VB.NET" Value="Public Function GetFirstAmbientValue (ceilingTypes As IEnumerable(Of XamlType), ParamArray properties As XamlMember()) As AmbientPropertyValue" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xaml::AmbientPropertyValue ^ GetFirstAmbientValue(System::Collections::Generic::IEnumerable&lt;System::Xaml::XamlType ^&gt; ^ ceilingTypes, ... cli::array &lt;System::Xaml::XamlMember ^&gt; ^ properties);" />
      <MemberSignature Language="F#" Value="abstract member GetFirstAmbientValue : seq&lt;System.Xaml.XamlType&gt; * System.Xaml.XamlMember[] -&gt; System.Xaml.AmbientPropertyValue" Usage="iAmbientProvider.GetFirstAmbientValue (ceilingTypes, properties)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.AmbientPropertyValue</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ceilingTypes" Type="System.Collections.Generic.IEnumerable&lt;System.Xaml.XamlType&gt;" />
        <Parameter Name="properties" Type="System.Xaml.XamlMember[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="ceilingTypes">Określa jeden lub więcej typów, których ocena ma zostać zatrzymana, gdy zostaną napotkane przechodzenie w górę na wykresie obiektu. Tego typu przechowuje żądanej właściwości otoczenia.</param>
        <param name="properties">Określa co najmniej jeden obiekt identyfikujące właściwości wziąć pod uwagę otoczenia.</param>
        <summary>Zwraca element informacji jedną właściwość otoczenia z żądanych zbiór właściwości, oparte na pierwszym napotkaniu którym właściwość.</summary>
        <returns>Element informacji jedną właściwość otoczenia pierwszej wartości właściwości z <paramref name="properties" /> listy, która znajduje się.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Każdy <xref:System.Xaml.AmbientPropertyValue> który jest zwracany zawiera <xref:System.Xaml.XamlMember> identyfikatora i wartość właściwości.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>