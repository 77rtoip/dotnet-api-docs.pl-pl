<Type Name="XamlReader" FullName="System.Xaml.XamlReader">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="cddde32ba28f1f851491799aa1745a920f8d7f14" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36444046" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class XamlReader : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit XamlReader extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Xaml.XamlReader" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class XamlReader&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class XamlReader abstract : IDisposable" />
  <TypeSignature Language="F#" Value="type XamlReader = class&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Xaml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="d5689-101">Udostępnia podstawowe definicje klas, które zużywają wprowadzania XAML i generować strumienie węzłów XAML.</span>
      <span class="sxs-lookup">
        <span data-stu-id="d5689-101">Provides base definitions for classes that consume XAML input and produce XAML node streams.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d5689-102"><xref:System.Xaml.XamlReader> jest to klasa abstrakcyjna i nie zapewnia implementacji ani definicje, które zawierają wynik pracy dla wszystkich elementów członkowskich.</span><span class="sxs-lookup"><span data-stu-id="d5689-102"><xref:System.Xaml.XamlReader> is an abstract class and does not provide implementations or definitions that have a working result for all members.</span></span> <span data-ttu-id="d5689-103">Elementy członkowskie, które mają implementację w <xref:System.Xaml.XamlReader> są wymienione w uwagach do tego członka.</span><span class="sxs-lookup"><span data-stu-id="d5689-103">Members that do have an implementation in <xref:System.Xaml.XamlReader> are noted in the remarks for that member.</span></span> <span data-ttu-id="d5689-104">W szczególności <xref:System.Xaml.XamlReader> ma kilka abstrakcyjne elementy członkowskie, które muszą zostać zaimplementowane i kilka wirtualnych elementów członkowskich.</span><span class="sxs-lookup"><span data-stu-id="d5689-104">Specifically, <xref:System.Xaml.XamlReader> has several abstract members that must be implemented, and several virtual members.</span></span>  
  
 <span data-ttu-id="d5689-105">Wirtualne członków <xref:System.Xaml.XamlReader.ReadSubtree%2A> i <xref:System.Xaml.XamlReader.Skip%2A> każdego udostępnia domyślną implementację, która jest odpowiednia w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="d5689-105">Of the virtual members, <xref:System.Xaml.XamlReader.ReadSubtree%2A> and <xref:System.Xaml.XamlReader.Skip%2A> each provide a default implementation that is appropriate for most cases.</span></span> <span data-ttu-id="d5689-106">Jednak <xref:System.Xaml.XamlReader.ReadSubtree%2A> i <xref:System.Xaml.XamlReader.Skip%2A> domyślnej implementacji zależą od innych oczekiwane zachowanie czytnika danych wykonawczych XAML; w szczególności opierają się na <xref:System.Xaml.XamlReader.Read%2A> zastąpienia.</span><span class="sxs-lookup"><span data-stu-id="d5689-106">However, the <xref:System.Xaml.XamlReader.ReadSubtree%2A> and <xref:System.Xaml.XamlReader.Skip%2A> default implementations rely on other expected behavior of the implementing XAML reader; in particular, they rely on the <xref:System.Xaml.XamlReader.Read%2A> override.</span></span> <span data-ttu-id="d5689-107"><xref:System.Xaml.XamlReader.Dispose%2A> jest również element członkowski wirtualnego pracy domyślną implementację.</span><span class="sxs-lookup"><span data-stu-id="d5689-107"><xref:System.Xaml.XamlReader.Dispose%2A> is also a virtual member that has a working default implementation.</span></span>  
  
 <span data-ttu-id="d5689-108">Następujące dwie klasy są najbardziej odpowiednie i praktyczne klas pochodnych usługi XAML .NET Framework i zestawu System.Xaml:</span><span class="sxs-lookup"><span data-stu-id="d5689-108">The following two classes are the most relevant and practical derived classes in .NET Framework XAML Services and the System.Xaml assembly:</span></span>  
  
-   <span data-ttu-id="d5689-109"><xref:System.Xaml.XamlObjectReader>, która odczytuje wykresu obiektów, takich jak wykres obiektu aktywnej aplikacji w czasie wykonywania.</span><span class="sxs-lookup"><span data-stu-id="d5689-109"><xref:System.Xaml.XamlObjectReader>, which reads an object graph, such as the active object graph of an application at run time.</span></span>  
  
-   <span data-ttu-id="d5689-110"><xref:System.Xaml.XamlXmlReader>, która odczytuje XAML w formie pliku tekstowego XML przy użyciu ogólnej <xref:System.Xml.XmlReader> który ładuje plik jako klasy pośredniczącej pomocy.</span><span class="sxs-lookup"><span data-stu-id="d5689-110"><xref:System.Xaml.XamlXmlReader>, which reads XAML in the form of a XML text file by using a general <xref:System.Xml.XmlReader> that loads the file as an intermediary helper class.</span></span>  
  
 <span data-ttu-id="d5689-111">Inne czytników XAML z innych platform, obejmują <xref:System.Windows.Baml2006.Baml2006Reader> i <xref:System.Activities.Debugger.XamlDebuggerXmlReader>.</span><span class="sxs-lookup"><span data-stu-id="d5689-111">Other XAML readers from other frameworks include <xref:System.Windows.Baml2006.Baml2006Reader> and <xref:System.Activities.Debugger.XamlDebuggerXmlReader>.</span></span>  
  
 <span data-ttu-id="d5689-112"><xref:System.Xaml.XamlReader> różni się od [!INCLUDE[TLA#tla_xmldom](~/includes/tlasharptla-xmldom-md.md)] i <xref:System.Xml.XmlReader> projektowania zasad, ponieważ <xref:System.Xaml.XamlReader> nie ma `Create` metodę, aby zwrócić podstawowej domyślne implementacje czytnika XAML.</span><span class="sxs-lookup"><span data-stu-id="d5689-112"><xref:System.Xaml.XamlReader> differs from [!INCLUDE[TLA#tla_xmldom](~/includes/tlasharptla-xmldom-md.md)] and <xref:System.Xml.XmlReader> design principles because <xref:System.Xaml.XamlReader> does not have a `Create` method to return underlying default XAML reader implementations.</span></span> <span data-ttu-id="d5689-113">Należy zamiast tego wystąpienia określonych klas pochodnych czytnika XAML wywołując ich konstruktorów lub innych pomocnika specyficzne interfejsów API.</span><span class="sxs-lookup"><span data-stu-id="d5689-113">You must instead instantiate specific derived XAML reader classes by calling their constructors or other class-specific helper APIs.</span></span>  
  
## <a name="subtree-readers"></a><span data-ttu-id="d5689-114">Czytniki poddrzewo</span><span class="sxs-lookup"><span data-stu-id="d5689-114">Subtree Readers</span></span>  
 <span data-ttu-id="d5689-115">W większości przypadków należy wywołać <xref:System.Xaml.XamlReader> interfejsu API w kontekście określonej klasy czytnika XAML, który pochodzi z <xref:System.Xaml.XamlReader>.</span><span class="sxs-lookup"><span data-stu-id="d5689-115">For the most part, you call <xref:System.Xaml.XamlReader> API in the context of specific XAML reader classes that derive from <xref:System.Xaml.XamlReader>.</span></span> <span data-ttu-id="d5689-116">Jednak w przypadku jednego, możesz uzyskać dostęp do <xref:System.Xaml.XamlReader> interfejsu API w wystąpieniu praktyczne czytnika XAML, który nie jest publiczna i nie pochodną <xref:System.Xaml.XamlObjectReader> lub <xref:System.Xaml.XamlXmlReader>.</span><span class="sxs-lookup"><span data-stu-id="d5689-116">However, in one particular case, you access <xref:System.Xaml.XamlReader> API on a practical XAML reader instance that is not public and not derived from <xref:System.Xaml.XamlObjectReader> or <xref:System.Xaml.XamlXmlReader>.</span></span> <span data-ttu-id="d5689-117">Ten przypadek jest podczas wywoływania <xref:System.Xaml.XamlReader.ReadSubtree%2A>, która zwraca <xref:System.Xaml.XamlReader> wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="d5689-117">This case is when you call <xref:System.Xaml.XamlReader.ReadSubtree%2A>, which returns a <xref:System.Xaml.XamlReader> instance.</span></span> <span data-ttu-id="d5689-118">W implementacji domyślnej <xref:System.Xaml.XamlReader> czyli zwróconych przez ten interfejs API jest klasą wewnętrzną.</span><span class="sxs-lookup"><span data-stu-id="d5689-118">In the default implementation, the <xref:System.Xaml.XamlReader> that is returned by this API is an internal class.</span></span>  
  
 <span data-ttu-id="d5689-119"><xref:System.Xaml.XamlReader> Uzyskane dla odczytu poddrzewo ma prawidłowe akcje dla interfejsów API, takich jak <xref:System.Xaml.XamlReader.Read%2A> i <xref:System.Xaml.XamlReader.NodeType%2A>, a te akcje są oparte na klasie nadrzędnej czytnika.</span><span class="sxs-lookup"><span data-stu-id="d5689-119">The <xref:System.Xaml.XamlReader> obtained for subtree reading has valid actions for APIs such as <xref:System.Xaml.XamlReader.Read%2A> and <xref:System.Xaml.XamlReader.NodeType%2A>, and those actions are based on the parent reader class.</span></span> <span data-ttu-id="d5689-120">Ten projekt umożliwia Wewnętrzna klasa do śledzenia poziomu ramki, którym wprowadzono poddrzewa.</span><span class="sxs-lookup"><span data-stu-id="d5689-120">This design enables the internal class to track the frame level where the subtree was entered.</span></span> <span data-ttu-id="d5689-121">Poddrzewo działania <xref:System.Xaml.XamlReader> upewnia się, że jeśli bieżące położenie węzeł zostanie przeniesiona poza granice poddrzewo, czytnika poddrzewo określonych raportów plik końcowy lub `null` w bieżącym węźle.</span><span class="sxs-lookup"><span data-stu-id="d5689-121">The acting subtree <xref:System.Xaml.XamlReader> makes sure that if the current node position is moved beyond the bounds of the subtree, the specific subtree reader reports end-of-file or `null` at the current node.</span></span>  
  
 <span data-ttu-id="d5689-122">Uwagi dotyczące użycia czytnika poddrzewo znajdują się na niektórych <xref:System.Xaml.XamlReader> interfejsów API.</span><span class="sxs-lookup"><span data-stu-id="d5689-122">Notes about subtree reader usage are included on certain <xref:System.Xaml.XamlReader> APIs.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Xaml.XamlObjectReader" />
    <altmember cref="T:System.Xaml.XamlXmlReader" />
    <altmember cref="T:System.Xaml.XamlReaderSettings" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected XamlReader ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlReader.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; XamlReader();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="d5689-123">Inicjuje <see cref="T:System.Xaml.XamlReader" /> klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5689-123">Initializes the <see cref="T:System.Xaml.XamlReader" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlReader.Close" />
      <MemberSignature Language="VB.NET" Value="Public Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Close();" />
      <MemberSignature Language="F#" Value="member this.Close : unit -&gt; unit" Usage="xamlReader.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="d5689-124">Zamyka strumień węzłów XAML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5689-124">Closes the XAML node stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d5689-125">W podstawowej implementacji wywoływania <xref:System.Xaml.XamlReader.Close%2A> wywołania <xref:System.Xaml.XamlReader.Dispose%2A> z `isDisposing` parametr jako `true`.</span><span class="sxs-lookup"><span data-stu-id="d5689-125">In the base implementation, calling <xref:System.Xaml.XamlReader.Close%2A> calls <xref:System.Xaml.XamlReader.Dispose%2A> with the `isDisposing` parameter as `true`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlReader.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="xamlReader.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="d5689-126">
            <see langword="true" /> Aby zwolnić zasoby zarządzane. w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5689-126">
              <see langword="true" /> to release the managed resources; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d5689-127">Zwalnia zasoby niezarządzane używane przez <see cref="T:System.Xaml.XamlReader" />i opcjonalnie zwalnia zasoby zarządzane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5689-127">Releases the unmanaged resources used by the <see cref="T:System.Xaml.XamlReader" />, and optionally, releases the managed resources.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d5689-128">Należy wywołać klasy podstawowej, aby uzyskać <xref:System.Xaml.XamlReader.IsDisposed%2A>  =  `true`.</span><span class="sxs-lookup"><span data-stu-id="d5689-128">You must call the base class to get <xref:System.Xaml.XamlReader.IsDisposed%2A> = `true`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDisposed">
      <MemberSignature Language="C#" Value="protected bool IsDisposed { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDisposed" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlReader.IsDisposed" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property IsDisposed As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property bool IsDisposed { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsDisposed : bool" Usage="System.Xaml.XamlReader.IsDisposed" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d5689-129">Pobiera czy <see cref="M:System.Xaml.XamlReader.Dispose(System.Boolean)" /> została wywołana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5689-129">Gets whether <see cref="M:System.Xaml.XamlReader.Dispose(System.Boolean)" /> has been called.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d5689-130">
            <see langword="true" /> Jeśli <see cref="M:System.Xaml.XamlReader.Dispose(System.Boolean)" /> została wywołana; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5689-130">
              <see langword="true" /> if <see cref="M:System.Xaml.XamlReader.Dispose(System.Boolean)" /> has been called; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEof">
      <MemberSignature Language="C#" Value="public abstract bool IsEof { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEof" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlReader.IsEof" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property IsEof As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property bool IsEof { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsEof : bool" Usage="System.Xaml.XamlReader.IsEof" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d5689-131">Po zaimplementowaniu w klasie pochodnej pobiera wartość, która informuje, czy pozycja czytnik jest na końcu pliku.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5689-131">When implemented in a derived class, gets a value that reports whether the reader position is at end-of-file.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d5689-132">
            <see langword="true" /> Jeśli pozycja znajduje się na koncepcyjnej koniec pliku strumienia węzłów XAML; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5689-132">
              <see langword="true" /> if the position is at the conceptual end-of-file of the XAML node stream; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d5689-133">Poddrzewo czytelnicy mogą wywoływać <xref:System.Xaml.XamlReader.IsEof%2A>, z zachowaniem poprawnie odzwierciedlający granice wprowadzone poddrzewo.</span><span class="sxs-lookup"><span data-stu-id="d5689-133">Subtree readers can call <xref:System.Xaml.XamlReader.IsEof%2A>, with behavior that correctly reflects the bounds of the entered subtree.</span></span> <span data-ttu-id="d5689-134">Aby uzyskać więcej informacji, zobacz sekcję "Poddrzewo czytników" w <xref:System.Xaml.XamlReader>, lub zobacz <xref:System.Xaml.XamlReader.ReadSubtree%2A>.</span><span class="sxs-lookup"><span data-stu-id="d5689-134">For more information, see the "Subtree Readers" section in <xref:System.Xaml.XamlReader>, or see <xref:System.Xaml.XamlReader.ReadSubtree%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlObjectReader.IsEof" />
        <altmember cref="P:System.Xaml.XamlXmlReader.IsEof" />
      </Docs>
    </Member>
    <Member MemberName="Member">
      <MemberSignature Language="C#" Value="public abstract System.Xaml.XamlMember Member { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xaml.XamlMember Member" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlReader.Member" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Member As XamlMember" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Xaml::XamlMember ^ Member { System::Xaml::XamlMember ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Member : System.Xaml.XamlMember" Usage="System.Xaml.XamlReader.Member" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlMember</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d5689-135">Po zaimplementowaniu w klasie pochodnej, pobiera bieżący element członkowski w pozycji czytnika, jeśli pozycja czytnik znajduje się na <see cref="F:System.Xaml.XamlNodeType.StartMember" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5689-135">When implemented in a derived class, gets the current member at the reader position, if the reader position is on a <see cref="F:System.Xaml.XamlNodeType.StartMember" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d5689-136">Bieżący element członkowski; lub <see langword="null" />, jeśli pozycja czytnika nie znajduje się w elemencie członkowskim.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5689-136">The current member; or <see langword="null" />, if the reader position is not on a member.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d5689-137">Poddrzewo czytelnicy mogą wywoływać <xref:System.Xaml.XamlReader.Member%2A>, z ograniczeniami zachowanie.</span><span class="sxs-lookup"><span data-stu-id="d5689-137">Subtree readers can call <xref:System.Xaml.XamlReader.Member%2A>, with behavior restrictions.</span></span> <span data-ttu-id="d5689-138">Aby uzyskać więcej informacji, zobacz sekcję "Poddrzewo czytników" w <xref:System.Xaml.XamlReader>, lub zobacz <xref:System.Xaml.XamlReader.ReadSubtree%2A>.</span><span class="sxs-lookup"><span data-stu-id="d5689-138">For more information, see the "Subtree Readers" section in <xref:System.Xaml.XamlReader>, or see <xref:System.Xaml.XamlReader.ReadSubtree%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlObjectReader.Member" />
        <altmember cref="P:System.Xaml.XamlXmlReader.Member" />
        <altmember cref="T:System.Xaml.XamlMember" />
      </Docs>
    </Member>
    <Member MemberName="Namespace">
      <MemberSignature Language="C#" Value="public abstract System.Xaml.NamespaceDeclaration Namespace { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xaml.NamespaceDeclaration Namespace" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlReader.Namespace" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Namespace As NamespaceDeclaration" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Xaml::NamespaceDeclaration ^ Namespace { System::Xaml::NamespaceDeclaration ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Namespace : System.Xaml.NamespaceDeclaration" Usage="System.Xaml.XamlReader.Namespace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.NamespaceDeclaration</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d5689-139">Po zaimplementowaniu w klasie pochodnej pobiera informacji dotyczących przestrzeni nazw XAML z bieżącego węzła.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5689-139">When implemented in a derived class, gets the XAML namespace information from the current node.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d5689-140">Informacji przestrzeń nazw XAML, jeśli jest dostępna; w przeciwnym razie <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5689-140">The XAML namespace information, if it is available; otherwise, <see langword="null" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d5689-141">Projektowi tego interfejsu API jest do zwrócenia wyniku inną niż null tylko wtedy, gdy <xref:System.Xaml.XamlReader.NodeType%2A> bieżącego węzła jest <xref:System.Xaml.XamlNodeType.NamespaceDeclaration>.</span><span class="sxs-lookup"><span data-stu-id="d5689-141">The intended design of this API is to return a non-null result only if the <xref:System.Xaml.XamlReader.NodeType%2A> of the current node is <xref:System.Xaml.XamlNodeType.NamespaceDeclaration>.</span></span> <span data-ttu-id="d5689-142">Właściwość nie raportuje przestrzeni nazw XAML, która ma zastosowanie do obiektów lub elementów członkowskich w ogólnym sensie zakresu, jak jest interpretowana w kontekście schematu XAML.</span><span class="sxs-lookup"><span data-stu-id="d5689-142">The property does not report the XAML namespace that applies to objects or members in a general scoping sense, as interpreted under a XAML schema context.</span></span> <span data-ttu-id="d5689-143">Aplikacja musi zapewniać możliwość do pamięci podręcznej informacje o działający przestrzeni nazw XAML w postaci, w jakiej są przesyłane za pośrednictwem węzłów XAML, jeśli potrzebujesz informacji w sposób niż jak kontekst schematu XAML zgłasza do modułu zapisującego.</span><span class="sxs-lookup"><span data-stu-id="d5689-143">Your application must provide a means to cache information for the acting XAML namespace as it traverses XAML nodes, if you need that information in a manner other than how the XAML schema context reports it to a writer.</span></span> <span data-ttu-id="d5689-144">Zobacz <xref:System.Xaml.XamlXmlReader.Namespace%2A> notatek wykonania odwołania.</span><span class="sxs-lookup"><span data-stu-id="d5689-144">See <xref:System.Xaml.XamlXmlReader.Namespace%2A> for notes on the reference implementation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlObjectReader.Namespace" />
        <altmember cref="P:System.Xaml.XamlXmlReader.Namespace" />
      </Docs>
    </Member>
    <Member MemberName="NodeType">
      <MemberSignature Language="C#" Value="public abstract System.Xaml.XamlNodeType NodeType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xaml.XamlNodeType NodeType" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlReader.NodeType" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property NodeType As XamlNodeType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Xaml::XamlNodeType NodeType { System::Xaml::XamlNodeType get(); };" />
      <MemberSignature Language="F#" Value="member this.NodeType : System.Xaml.XamlNodeType" Usage="System.Xaml.XamlReader.NodeType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlNodeType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d5689-145">Po zaimplementowaniu w klasie pochodnej pobiera typ bieżącego węzła.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5689-145">When implemented in a derived class, gets the type of the current node.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d5689-146">Wartość <see cref="T:System.Xaml.XamlNodeType" /> wyliczenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5689-146">A value of the <see cref="T:System.Xaml.XamlNodeType" /> enumeration.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d5689-147">Poddrzewo czytelnicy mogą wywoływać <xref:System.Xaml.XamlReader.NodeType%2A>, z ograniczeniami zachowanie.</span><span class="sxs-lookup"><span data-stu-id="d5689-147">Subtree readers can call <xref:System.Xaml.XamlReader.NodeType%2A>, with behavior restrictions.</span></span> <span data-ttu-id="d5689-148">Aby uzyskać więcej informacji, zobacz sekcję "Poddrzewo czytników" w <xref:System.Xaml.XamlReader>, lub zobacz <xref:System.Xaml.XamlReader.ReadSubtree%2A>.</span><span class="sxs-lookup"><span data-stu-id="d5689-148">For more information, see the "Subtree Readers" section in <xref:System.Xaml.XamlReader>, or see <xref:System.Xaml.XamlReader.ReadSubtree%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlObjectReader.NodeType" />
        <altmember cref="P:System.Xaml.XamlXmlReader.NodeType" />
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public abstract bool Read ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Read() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlReader.Read" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Read () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool Read();" />
      <MemberSignature Language="F#" Value="abstract member Read : unit -&gt; bool" Usage="xamlReader.Read " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="d5689-149">Po zaimplementowaniu w klasie pochodnej, zawiera kolejnego węzła XAML ze źródła, jeśli węzeł jest dostępny.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5689-149">When implemented in a derived class, provides the next XAML node from the source, if a node is available.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d5689-150">
            <see langword="true" /> Jeśli węzeł jest dostępny; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5689-150">
              <see langword="true" /> if a node is available; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d5689-151">Poddrzewo czytelnicy mogą wywoływać <xref:System.Xaml.XamlReader.Read%2A>, z ograniczeniami zachowanie.</span><span class="sxs-lookup"><span data-stu-id="d5689-151">Subtree readers can call <xref:System.Xaml.XamlReader.Read%2A>, with behavior restrictions.</span></span> <span data-ttu-id="d5689-152">Aby uzyskać więcej informacji, zobacz sekcję "Poddrzewo czytników" w <xref:System.Xaml.XamlReader>, lub zobacz <xref:System.Xaml.XamlReader.ReadSubtree%2A>.</span><span class="sxs-lookup"><span data-stu-id="d5689-152">For more information, see the "Subtree Readers" section in <xref:System.Xaml.XamlReader>, or see <xref:System.Xaml.XamlReader.ReadSubtree%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Xaml.XamlXmlReader.Read" />
        <altmember cref="M:System.Xaml.XamlObjectReader.Read" />
      </Docs>
    </Member>
    <Member MemberName="ReadSubtree">
      <MemberSignature Language="C#" Value="public virtual System.Xaml.XamlReader ReadSubtree ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xaml.XamlReader ReadSubtree() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlReader.ReadSubtree" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadSubtree () As XamlReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Xaml::XamlReader ^ ReadSubtree();" />
      <MemberSignature Language="F#" Value="abstract member ReadSubtree : unit -&gt; System.Xaml.XamlReader&#xA;override this.ReadSubtree : unit -&gt; System.Xaml.XamlReader" Usage="xamlReader.ReadSubtree " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlReader</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="d5689-153">Zwraca <see cref="T:System.Xaml.XamlReader" /> jest oparty na bieżącej <see cref="T:System.Xaml.XamlReader" />, gdzie zwróconego <see cref="T:System.Xaml.XamlReader" /> jest używany do iterowania po poddrzewo struktury węzła XAML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5689-153">Returns a <see cref="T:System.Xaml.XamlReader" /> that is based on the current <see cref="T:System.Xaml.XamlReader" />, where the returned <see cref="T:System.Xaml.XamlReader" /> is used to iterate through a subtree of the XAML node structure.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d5689-154">Nowe wystąpienie czytnika XAML dla poddrzewa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5689-154">A new XAML reader instance for the subtree.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d5689-155">Ta metoda jest domyślna implementacja i zwraca prawidłowe <xref:System.Xaml.XamlReader>.</span><span class="sxs-lookup"><span data-stu-id="d5689-155">This method has a default implementation and returns a valid <xref:System.Xaml.XamlReader>.</span></span> <span data-ttu-id="d5689-156">Zwrócona <xref:System.Xaml.XamlReader> jest klasą wewnętrzną, która ogranicza niektórych <xref:System.Xaml.XamlReader> akcje.</span><span class="sxs-lookup"><span data-stu-id="d5689-156">The returned <xref:System.Xaml.XamlReader> is an internal class that restricts certain <xref:System.Xaml.XamlReader> actions.</span></span> <span data-ttu-id="d5689-157">Ograniczenia są spójne w celu odczytywania poddrzewo wymiarów tylko większych źródła zestawu węzłów XAML i przekazujących plik końcowy lub `null` na bieżącego węzła, gdy zostanie zakończone poddrzewa.</span><span class="sxs-lookup"><span data-stu-id="d5689-157">The restrictions are consistent with the purpose of reading only a dimensioned subtree of a larger source for a XAML node set, and of returning end-of-file or `null` at the current node when the subtree is exited.</span></span>  
  
 <span data-ttu-id="d5689-158">Ogólnie rzecz biorąc, zapoznaj się z bieżącego węzła z początkowej <xref:System.Xaml.XamlReader.Read%2A> ustalenie, czy potrzebujesz czytnik poddrzewo.</span><span class="sxs-lookup"><span data-stu-id="d5689-158">Generally, you should check the current node from the initial <xref:System.Xaml.XamlReader.Read%2A> to determine whether you need a subtree reader.</span></span> <span data-ttu-id="d5689-159">Jak sprawdzić to może być konkretnej implementacji. jednak Unikaj tworzenia wielu czytników poddrzewo dla każdego poddrzewo.</span><span class="sxs-lookup"><span data-stu-id="d5689-159">How you check this may be implementation-specific; however, avoid creating multiple subtree readers for every subtree.</span></span> <span data-ttu-id="d5689-160">Ponadto należy unikać wywoływania czytnik poddrzewo w niektórych przypadkach węzła (na przykład <xref:System.Xaml.XamlNodeType.NamespaceDeclaration>) który nie może zawierać poddrzewa węzłów.</span><span class="sxs-lookup"><span data-stu-id="d5689-160">In addition, avoid invoking a subtree reader for certain node cases (for example, for <xref:System.Xaml.XamlNodeType.NamespaceDeclaration>) that cannot contain a subtree of nodes.</span></span>  
  
 <span data-ttu-id="d5689-161">Po uzyskaniu czytnik poddrzewo, należy wywołać <xref:System.Xaml.XamlReader.Read%2A> w celu uzyskania bieżącego węzła (lub zadzwoń <xref:System.Xaml.XamlReader.Skip%2A> uzyskać następnego węzła).</span><span class="sxs-lookup"><span data-stu-id="d5689-161">After you obtain a subtree reader, you must call <xref:System.Xaml.XamlReader.Read%2A> on it to obtain a current node (or call <xref:System.Xaml.XamlReader.Skip%2A> to obtain a next node).</span></span> <span data-ttu-id="d5689-162">Nie automatycznie zyskuje Pozycja węzła początkowego z czytnika poddrzewo podczas jego tworzenia.</span><span class="sxs-lookup"><span data-stu-id="d5689-162">You do not automatically obtain an initial node position from the subtree reader when you create it.</span></span>  
  
 <span data-ttu-id="d5689-163">Czytnik uzyskać przez wywołanie metody <xref:System.Xaml.XamlReader.ReadSubtree%2A> z tej domyślnej implementacji jest klasą wewnętrzną.</span><span class="sxs-lookup"><span data-stu-id="d5689-163">The reader you obtain by calling <xref:System.Xaml.XamlReader.ReadSubtree%2A> from this default implementation is an internal class.</span></span> <span data-ttu-id="d5689-164">Wewnętrzna klasa określa zachowanie na <xref:System.Xaml.XamlReader> implementację, która ma zostać użyta, gdy <xref:System.Xaml.XamlReader.ReadSubtree%2A> jest wywoływana.</span><span class="sxs-lookup"><span data-stu-id="d5689-164">The internal class bases its behavior on the <xref:System.Xaml.XamlReader> implementation that is being used when <xref:System.Xaml.XamlReader.ReadSubtree%2A> is called.</span></span> <span data-ttu-id="d5689-165">Wewnętrzna klasa ma na celu zawijać <xref:System.Xaml.XamlReader.Read%2A> i przechodzenie ogólne zachowanie.</span><span class="sxs-lookup"><span data-stu-id="d5689-165">The purpose of the internal class is to wrap the <xref:System.Xaml.XamlReader.Read%2A> and general traversal behavior.</span></span> <span data-ttu-id="d5689-166">Przechodzenie pozostaje w zamierzonej poddrzewo przez śledzenie <xref:System.Xaml.XamlNodeType.StartMember> / <xref:System.Xaml.XamlNodeType.EndMember> pary lub <xref:System.Xaml.XamlNodeType.StartObject> / <xref:System.Xaml.XamlNodeType.EndObject> pary.</span><span class="sxs-lookup"><span data-stu-id="d5689-166">The traversal stays within the intended subtree by keeping track of <xref:System.Xaml.XamlNodeType.StartMember>/<xref:System.Xaml.XamlNodeType.EndMember> pairs or <xref:System.Xaml.XamlNodeType.StartObject>/<xref:System.Xaml.XamlNodeType.EndObject> pairs.</span></span> <span data-ttu-id="d5689-167">Zwraca także poprawnie `false` dla <xref:System.Xaml.XamlReader.Read%2A> i `true` dla <xref:System.Xaml.XamlReader.IsEof%2A> gdy czytnik jest na końcu poddrzewo, zgodnie z definicją w jego punktu wejścia.</span><span class="sxs-lookup"><span data-stu-id="d5689-167">It also correctly returns `false` for <xref:System.Xaml.XamlReader.Read%2A> and `true` for <xref:System.Xaml.XamlReader.IsEof%2A> when the reader is at the end of the subtree, as defined by its entry point.</span></span> <span data-ttu-id="d5689-168">Ogólnie rzecz biorąc, można założyć, że wszystkie <xref:System.Xaml.XamlReader> interfejsu API można wywołać z czytnika poddrzewo ma tej samej implementacji jako ogólnych <xref:System.Xaml.XamlReader> z wyjątkiem przechodzenie ograniczenia zachowanie.</span><span class="sxs-lookup"><span data-stu-id="d5689-168">In general, you assume that any <xref:System.Xaml.XamlReader> API you call from a subtree reader has the same implementation as the overall <xref:System.Xaml.XamlReader> except for the traversal bounding behavior.</span></span>  
  
 <span data-ttu-id="d5689-169">Jednak <xref:System.Xaml.XamlReader.ReadSubtree%2A> jest wirtualna.</span><span class="sxs-lookup"><span data-stu-id="d5689-169">However, <xref:System.Xaml.XamlReader.ReadSubtree%2A> is virtual.</span></span> <span data-ttu-id="d5689-170">W związku z tym określony <xref:System.Xaml.XamlReader> implementacja może zapewnić zachowanie różni się od <xref:System.Xaml.XamlReader> zachowania wewnętrznych otoki; i <xref:System.Xaml.XamlReader> implementacji nawet można wyłączyć funkcji czytnika poddrzewo zwracając <xref:System.NotImplementedException> lub innych wyjątki.</span><span class="sxs-lookup"><span data-stu-id="d5689-170">Therefore, a specific <xref:System.Xaml.XamlReader> implementation can provide behavior that differs from the <xref:System.Xaml.XamlReader> internal wrapper behavior; and a <xref:System.Xaml.XamlReader> implementation can even disable subtree reader functionality by returning <xref:System.NotImplementedException> or other exceptions.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SchemaContext">
      <MemberSignature Language="C#" Value="public abstract System.Xaml.XamlSchemaContext SchemaContext { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xaml.XamlSchemaContext SchemaContext" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlReader.SchemaContext" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property SchemaContext As XamlSchemaContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Xaml::XamlSchemaContext ^ SchemaContext { System::Xaml::XamlSchemaContext ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SchemaContext : System.Xaml.XamlSchemaContext" Usage="System.Xaml.XamlReader.SchemaContext" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlSchemaContext</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d5689-171">Po zaimplementowaniu w klasie pochodnej pobiera obiekt, który zawiera informacje o kontekście schematu XAML dla zestawu informacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5689-171">When implemented in a derived class, gets an object that provides XAML schema context information for the information set.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d5689-172">Ustaw obiekt, który zawiera informacje o kontekście schematu XAML informacje.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5689-172">An object that provides XAML schema context information for the information set.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Xaml.XamlObjectReader.SchemaContext" />
        <altmember cref="P:System.Xaml.XamlXmlReader.SchemaContext" />
      </Docs>
    </Member>
    <Member MemberName="Skip">
      <MemberSignature Language="C#" Value="public virtual void Skip ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Skip() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlReader.Skip" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Skip ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Skip();" />
      <MemberSignature Language="F#" Value="abstract member Skip : unit -&gt; unit&#xA;override this.Skip : unit -&gt; unit" Usage="xamlReader.Skip " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="d5689-173">Pomija bieżącego węzła i zmienia pozycję czytnik do następnego węzła.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5689-173">Skips the current node and advances the reader position to the next node.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d5689-174">Pominięto raz <xref:System.Xaml.XamlReader.Read%2A> jest wywoływana przez domyślny <xref:System.Xaml.XamlReader.Skip%2A> implementacji.</span><span class="sxs-lookup"><span data-stu-id="d5689-174">Once skipped, <xref:System.Xaml.XamlReader.Read%2A> is called by the default <xref:System.Xaml.XamlReader.Skip%2A> implementation.</span></span> <span data-ttu-id="d5689-175">Zazwyczaj nie zostanie wywołana <xref:System.Xaml.XamlReader.Skip%2A> i <xref:System.Xaml.XamlReader.Read%2A> w sekwencji.</span><span class="sxs-lookup"><span data-stu-id="d5689-175">You typically do not call <xref:System.Xaml.XamlReader.Skip%2A> and <xref:System.Xaml.XamlReader.Read%2A> in sequence.</span></span>  
  
 <span data-ttu-id="d5689-176">W domyślnej <xref:System.Xaml.XamlReader.Skip%2A> implementacji, w zależności od tego, które są podejmowane akcje różnych <xref:System.Xaml.XamlReader.NodeType%2A> pozycji czytnik jest obecnie włączone.</span><span class="sxs-lookup"><span data-stu-id="d5689-176">In the default <xref:System.Xaml.XamlReader.Skip%2A> implementation, different actions are taken depending on which <xref:System.Xaml.XamlReader.NodeType%2A> the reader position is currently on.</span></span> <span data-ttu-id="d5689-177">Jeśli pozycja czytnik jest aktualnie <xref:System.Xaml.XamlNodeType.StartMember> lub <xref:System.Xaml.XamlNodeType.StartObject>, elementu członkowskiego lub obiektu zostało pominięte.</span><span class="sxs-lookup"><span data-stu-id="d5689-177">If the reader position is currently on a <xref:System.Xaml.XamlNodeType.StartMember> or <xref:System.Xaml.XamlNodeType.StartObject>, that member or object is skipped.</span></span> <span data-ttu-id="d5689-178">Dla innych <xref:System.Xaml.XamlReader.NodeType%2A> wartości, a nie podjęto żadnej akcji innego niż wywołania <xref:System.Xaml.XamlReader.Read%2A> od bieżącego położenia.</span><span class="sxs-lookup"><span data-stu-id="d5689-178">For other <xref:System.Xaml.XamlReader.NodeType%2A> values, no action is taken other than calling <xref:System.Xaml.XamlReader.Read%2A> from the current position.</span></span>  
  
 <span data-ttu-id="d5689-179">Poddrzewo czytelnicy mogą wywoływać <xref:System.Xaml.XamlReader.Skip%2A>, z ograniczeniami zachowanie.</span><span class="sxs-lookup"><span data-stu-id="d5689-179">Subtree readers can call <xref:System.Xaml.XamlReader.Skip%2A>, with behavior restrictions.</span></span> <span data-ttu-id="d5689-180">Aby uzyskać więcej informacji, zobacz sekcję "Poddrzewo czytników" w <xref:System.Xaml.XamlReader>, lub zobacz <xref:System.Xaml.XamlReader.ReadSubtree%2A>.</span><span class="sxs-lookup"><span data-stu-id="d5689-180">For more information, see the "Subtree Readers" section in <xref:System.Xaml.XamlReader>, or see <xref:System.Xaml.XamlReader.ReadSubtree%2A>.</span></span>  
  
 <span data-ttu-id="d5689-181">Węzeł drzewa zachowanie <xref:System.Xaml.XamlReader.Skip%2A?displayProperty=nameWithType> opiera się na równoważne XML <xref:System.Xml.XmlReader.Skip%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="d5689-181">The node tree behavior of <xref:System.Xaml.XamlReader.Skip%2A?displayProperty=nameWithType> is based on the XML equivalent <xref:System.Xml.XmlReader.Skip%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="d5689-182">Na podstawie <xref:System.Xml.XmlReader.Skip%2A?displayProperty=nameWithType> równoważność zachowanie <xref:System.Xaml.XamlReader.Skip%2A?displayProperty=nameWithType> pomija węzła i jego poddrzewa, nie tylko pojedynczy wpis węzeł.</span><span class="sxs-lookup"><span data-stu-id="d5689-182">Based on the <xref:System.Xml.XmlReader.Skip%2A?displayProperty=nameWithType> behavior equivalence, <xref:System.Xaml.XamlReader.Skip%2A?displayProperty=nameWithType> skips the node and its subtree, not just the single entry node.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IDisposable.Dispose">
      <MemberSignature Language="C#" Value="void IDisposable.Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.IDisposable.Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlReader.System#IDisposable#Dispose" />
      <MemberSignature Language="VB.NET" Value="Sub Dispose () Implements IDisposable.Dispose" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.IDisposable.Dispose() = IDisposable::Dispose;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="d5689-183">Zwalnia wszelkie zasoby używane przez bieżące wystąpienie klasy <see cref="T:System.Xaml.XamlReader" /> klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5689-183">Releases all resources used by the current instance of the <see cref="T:System.Xaml.XamlReader" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Type">
      <MemberSignature Language="C#" Value="public abstract System.Xaml.XamlType Type { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xaml.XamlType Type" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlReader.Type" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Type As XamlType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Xaml::XamlType ^ Type { System::Xaml::XamlType ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Type : System.Xaml.XamlType" Usage="System.Xaml.XamlReader.Type" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d5689-184">Po zaimplementowaniu w klasie pochodnej pobiera <see cref="T:System.Xaml.XamlType" /> bieżącego węzła.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5689-184">When implemented in a derived class, gets the <see cref="T:System.Xaml.XamlType" /> of the current node.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d5689-185">
            <see cref="T:System.Xaml.XamlType" /> Bieżącego węzła; lub <see langword="null" />, jeśli bieżące położenie czytnika nie jest obiektem.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5689-185">The <see cref="T:System.Xaml.XamlType" /> of the current node; or <see langword="null" />, if the current reader position is not on an object.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d5689-186">Poddrzewo czytelnicy mogą wywoływać <xref:System.Xaml.XamlReader.Type%2A>, z ograniczeniami zachowanie.</span><span class="sxs-lookup"><span data-stu-id="d5689-186">Subtree readers can call <xref:System.Xaml.XamlReader.Type%2A>, with behavior restrictions.</span></span> <span data-ttu-id="d5689-187">Aby uzyskać więcej informacji, zobacz sekcję "Poddrzewo czytników" w <xref:System.Xaml.XamlReader>, lub zobacz <xref:System.Xaml.XamlReader.ReadSubtree%2A>.</span><span class="sxs-lookup"><span data-stu-id="d5689-187">For more information, see the "Subtree Readers" section in <xref:System.Xaml.XamlReader>, or see <xref:System.Xaml.XamlReader.ReadSubtree%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlObjectReader.Type" />
        <altmember cref="P:System.Xaml.XamlXmlReader.Type" />
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public abstract object Value { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Value" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlReader.Value" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Value As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Object ^ Value { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Value : obj" Usage="System.Xaml.XamlReader.Value" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d5689-188">Po zaimplementowaniu w klasie pochodnej pobiera wartość bieżącego węzła.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5689-188">When implemented in a derived class, gets the value of the current node.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d5689-189">Wartość bieżącego węzła; lub <see langword="null" />, jeśli bieżące położenie czytnik nie jest włączony <see cref="F:System.Xaml.XamlNodeType.Value" /> typu węzła.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5689-189">The value of the current node; or <see langword="null" />, if the current reader position is not on a <see cref="F:System.Xaml.XamlNodeType.Value" /> node type.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Xaml.XamlObjectReader.Value" />
        <altmember cref="P:System.Xaml.XamlXmlReader.Value" />
      </Docs>
    </Member>
  </Members>
</Type>