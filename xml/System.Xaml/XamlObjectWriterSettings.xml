<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="XamlObjectWriterSettings.xml" source-language="en-US" target-language="pl-PL">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5a94fb89f28b3f761992da4505a75cc54c6b173a7.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a94fb89f28b3f761992da4505a75cc54c6b173a7</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Xaml.XamlObjectWriterSettings">
          <source>Provides specific XAML writer settings for <ph id="ph1">&lt;see cref="T:System.Xaml.XamlObjectWriter" /&gt;</ph>.</source>
          <target state="translated">Udostępnia określonych ustawień edytora XAML dla <ph id="ph1">&lt;see cref="T:System.Xaml.XamlObjectWriter" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.XamlObjectWriterSettings">
          <source>A <ph id="ph1">&lt;xref:System.Xaml.XamlObjectWriter&gt;</ph> can function within specified <ph id="ph2">&lt;xref:System.Xaml.XamlObjectWriterSettings&gt;</ph>.</source>
          <target state="translated">A <ph id="ph1">&lt;xref:System.Xaml.XamlObjectWriter&gt;</ph> może działać w określonych <ph id="ph2">&lt;xref:System.Xaml.XamlObjectWriterSettings&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.XamlObjectWriterSettings">
          <source>Where settings are not specified, an instance of <ph id="ph1">&lt;xref:System.Xaml.XamlObjectWriterSettings&gt;</ph> exists that has default values for a constructed <ph id="ph2">&lt;xref:System.Xaml.XamlObjectWriter&gt;</ph>, and this instance can be used in merges of settings for a derived class.</source>
          <target state="translated">Jeżeli ustawienia nie są określone, wystąpienie <ph id="ph1">&lt;xref:System.Xaml.XamlObjectWriterSettings&gt;</ph> istnieje która zawiera wartości domyślne dla skonstruowane <ph id="ph2">&lt;xref:System.Xaml.XamlObjectWriter&gt;</ph>, i to wystąpienie może być używane w scaleń ustawienia dla klasy pochodnej.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" uid="T:System.Xaml.XamlObjectWriterSettings">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Xaml.XamlObjectWriterSettings" /&gt;</ph> class.</source>
          <target state="translated">Inicjuje nowe wystąpienie klasy <ph id="ph1">&lt;see cref="T:System.Xaml.XamlObjectWriterSettings" /&gt;</ph> klasy.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlObjectWriterSettings.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Xaml.XamlObjectWriterSettings" /&gt;</ph> class.</source>
          <target state="translated">Inicjuje nowe wystąpienie klasy <ph id="ph1">&lt;see cref="T:System.Xaml.XamlObjectWriterSettings" /&gt;</ph> klasy.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlObjectWriterSettings.#ctor(System.Xaml.XamlObjectWriterSettings)">
          <source>The settings instance to copy.</source>
          <target state="translated">Wystąpienie ustawienia, aby skopiować.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlObjectWriterSettings.#ctor(System.Xaml.XamlObjectWriterSettings)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Xaml.XamlObjectWriterSettings" /&gt;</ph> class that is based on the copy of an existing instance.</source>
          <target state="translated">Inicjuje nowe wystąpienie klasy <ph id="ph1">&lt;see cref="T:System.Xaml.XamlObjectWriterSettings" /&gt;</ph> klasy, która jest oparta na kopię istniejącego wystąpienia.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlObjectWriterSettings.#ctor(System.Xaml.XamlObjectWriterSettings)">
          <source><ph id="ph1">&lt;paramref name="settings" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="settings" /&gt;</ph> jest <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="P:System.Xaml.XamlObjectWriterSettings.AccessLevel">
          <source>Gets or sets <ph id="ph1">&lt;see cref="T:System.Xaml.Permissions.XamlAccessLevel" /&gt;</ph> permissions that the XAML writer observes.</source>
          <target state="translated">Pobiera lub ustawia <ph id="ph1">&lt;see cref="T:System.Xaml.Permissions.XamlAccessLevel" /&gt;</ph> uprawnienia, które obowiązuje składnika zapisywania języka XAML.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlObjectWriterSettings.AccessLevel">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xaml.Permissions.XamlAccessLevel" /&gt;</ph> permissions.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xaml.Permissions.XamlAccessLevel" /&gt;</ph> Uprawnienia.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlObjectWriterSettings.AccessLevel">
          <source>This property indicates the expected access level for non-public members, which are accessed in partial trust through a partial-trust tolerant runtime.</source>
          <target state="translated">Ta właściwość wskazuje poziom dostępu oczekiwany dla niepublicznych elementów członkowskich, które są dostępne w częściowej relacji zaufania przez moduł wykonawczy odporny na błędy zaufania częściowego.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="P:System.Xaml.XamlObjectWriterSettings.AfterBeginInitHandler">
          <source>Gets or sets a reference to a callback that is invoked by the XAML writer at the <ph id="ph1">&lt;see cref="M:System.ComponentModel.ISupportInitialize.BeginInit" /&gt;</ph> phase of the object lifetime for each created object.</source>
          <target state="translated">Pobiera lub ustawia odwołanie do wywołania zwrotnego, który jest wywoływany przez moduł zapisujący XAML w <ph id="ph1">&lt;see cref="M:System.ComponentModel.ISupportInitialize.BeginInit" /&gt;</ph> fazy okres istnienia obiektu dla każdego utworzonego obiektu.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlObjectWriterSettings.AfterBeginInitHandler">
          <source>A callback that is invoked by the XAML writer at the <ph id="ph1">&lt;see cref="M:System.ComponentModel.ISupportInitialize.BeginInit" /&gt;</ph> phase of object lifetime.</source>
          <target state="translated">Wywołanie zwrotne, które jest wywoływane przez moduł zapisujący XAML w <ph id="ph1">&lt;see cref="M:System.ComponentModel.ISupportInitialize.BeginInit" /&gt;</ph> fazy okres istnienia obiektu.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="P:System.Xaml.XamlObjectWriterSettings.AfterEndInitHandler">
          <source>Gets or sets a reference to a callback that is invoked by the XAML writer at the <ph id="ph1">&lt;see cref="M:System.ComponentModel.ISupportInitialize.EndInit" /&gt;</ph> phase of the object lifetime for each created object.</source>
          <target state="translated">Pobiera lub ustawia odwołanie do wywołania zwrotnego, który jest wywoływany przez moduł zapisujący XAML w <ph id="ph1">&lt;see cref="M:System.ComponentModel.ISupportInitialize.EndInit" /&gt;</ph> fazy okres istnienia obiektu dla każdego utworzonego obiektu.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlObjectWriterSettings.AfterEndInitHandler">
          <source>A callback that is invoked by the XAML writer at the <ph id="ph1">&lt;see cref="M:System.ComponentModel.ISupportInitialize.EndInit" /&gt;</ph> phase of object lifetime.</source>
          <target state="translated">Wywołanie zwrotne, które jest wywoływane przez moduł zapisujący XAML w <ph id="ph1">&lt;see cref="M:System.ComponentModel.ISupportInitialize.EndInit" /&gt;</ph> fazy okres istnienia obiektu.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="P:System.Xaml.XamlObjectWriterSettings.AfterPropertiesHandler">
          <source>Gets or sets a reference to a callback that is invoked by the XAML writer at the post-member-write phase of the object lifetime for each created object.</source>
          <target state="translated">Pobiera lub ustawia odwołanie do wywołania zwrotnego, który jest wywoływany przez moduł zapisujący XAML w fazie po member zapisu okres istnienia obiektu dla każdego utworzonego obiektu.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlObjectWriterSettings.AfterPropertiesHandler">
          <source>A callback that is invoked by the XAML writer at the post-member-write phase of object lifetime.</source>
          <target state="translated">Wywołanie zwrotne, które jest wywoływane przez moduł zapisujący XAML w fazie po member zapisu okres istnienia obiektu.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="P:System.Xaml.XamlObjectWriterSettings.BeforePropertiesHandler">
          <source>Gets or sets a reference to a callback that is invoked by the XAML writer at the pre-member-write phase of the object lifetime for each created object.</source>
          <target state="translated">Pobiera lub ustawia odwołanie do wywołania zwrotnego, który jest wywoływany przez moduł zapisujący XAML w fazie wstępnie przygotowany member zapisu okres istnienia obiektu dla każdego utworzonego obiektu.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlObjectWriterSettings.BeforePropertiesHandler">
          <source>A callback that is invoked by the XAML writer at the pre-member-write phase of object lifetime.</source>
          <target state="translated">Wywołanie zwrotne, które jest wywoływane przez moduł zapisujący XAML w fazie wstępnie przygotowany member zapisu okres istnienia obiektu.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="P:System.Xaml.XamlObjectWriterSettings.ExternalNameScope">
          <source>Gets or sets the XAML namescope to use for registering names from the XAML writer if <ph id="ph1">&lt;see cref="P:System.Xaml.XamlObjectWriterSettings.RegisterNamesOnExternalNamescope" /&gt;</ph> is <ph id="ph2">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">Pobiera lub ustawia namescope XAML do użycia na potrzeby rejestracji nazw z edytora XAML, jeśli <ph id="ph1">&lt;see cref="P:System.Xaml.XamlObjectWriterSettings.RegisterNamesOnExternalNamescope" /&gt;</ph> jest <ph id="ph2">&lt;see langword="true" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlObjectWriterSettings.ExternalNameScope">
          <source>The XAML namescope to use for registering names.</source>
          <target state="translated">Namescope XAML, który na potrzeby rejestracji nazw.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlObjectWriterSettings.ExternalNameScope">
          <source>The default is <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Wartość domyślna to <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlObjectWriterSettings.ExternalNameScope">
          <source>Specific contexts for a <ph id="ph1">&lt;xref:System.Xaml.XamlObjectWriter&gt;</ph> might use an external XAML namescope.</source>
          <target state="translated">Konteksty określonych dla <ph id="ph1">&lt;xref:System.Xaml.XamlObjectWriter&gt;</ph> mogą korzystać z zewnętrznej namescope XAML.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlObjectWriterSettings.ExternalNameScope">
          <source>WPF Usage Notes</source>
          <target state="translated">Uwagi dotyczące użycia WPF</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlObjectWriterSettings.ExternalNameScope">
          <source>In the WPF XAML implementation, XAML writer operations that are initiated by <ph id="ph1">&lt;xref:System.Windows.FrameworkTemplate&gt;</ph> specify a separate XAML namescope.</source>
          <target state="translated">W implementacji WPF XAML operacji składnika zapisywania języka XAML, inicjowanych przez <ph id="ph1">&lt;xref:System.Windows.FrameworkTemplate&gt;</ph> określić osobne namescope XAML.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlObjectWriterSettings.ExternalNameScope">
          <source>In this WPF scenario, templates should not share a XAML namescope with the root of the XAML page that defines them.</source>
          <target state="translated">W tym scenariuszu WPF szablony nie powinny współużytkować XAML namescope z głównym strony XAML, który definiuje je.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlObjectWriterSettings.ExternalNameScope">
          <source>Instead, they should process into a separate, designated XAML namescope.</source>
          <target state="translated">Zamiast tego należy przetworzyć w oddzielnych, wyznaczonych namescope XAML.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="P:System.Xaml.XamlObjectWriterSettings.IgnoreCanConvert">
          <source>Gets or sets a value that specifies whether the XAML writer should ignore (not call) <ph id="ph1">&lt;see cref="M:System.ComponentModel.TypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)" /&gt;</ph> implementations on a <ph id="ph2">&lt;see cref="T:System.ComponentModel.TypeConverter" /&gt;</ph> in type-converter situations.</source>
          <target state="translated">Pobiera lub ustawia wartość określającą, czy składnik zapisywania XAML ignorować (nie wywołania) <ph id="ph1">&lt;see cref="M:System.ComponentModel.TypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)" /&gt;</ph> implementacje na <ph id="ph2">&lt;see cref="T:System.ComponentModel.TypeConverter" /&gt;</ph> w sytuacjach konwertera typów.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlObjectWriterSettings.IgnoreCanConvert">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the XAML writer ignores <ph id="ph2">&lt;see cref="M:System.ComponentModel.TypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)" /&gt;</ph> implementations; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> Jeśli moduł zapisujący XAML ignoruje <ph id="ph2">&lt;see cref="M:System.ComponentModel.TypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)" /&gt;</ph> implementacje; w przeciwnym razie <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlObjectWriterSettings.IgnoreCanConvert">
          <source>The default is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Wartość domyślna to <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlObjectWriterSettings.IgnoreCanConvert">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.TypeConverter&gt;</ph> class and its <ph id="ph2">&lt;xref:System.ComponentModel.TypeConverter.CanConvertFrom%2A&gt;</ph> method are part of an overall design for type conversion in the CLR.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.TypeConverter&gt;</ph> Klasy i jej <ph id="ph2">&lt;xref:System.ComponentModel.TypeConverter.CanConvertFrom%2A&gt;</ph> metody są częścią ogólnego projektu konwersji typu środowiska CLR.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlObjectWriterSettings.IgnoreCanConvert">
          <source>In XAML systems, you can typically assume that type-converter input is identifiable by the XAML reader, and for purposes of input, is always a string.</source>
          <target state="translated">W systemach XAML zwykle można założyć czy konwerter typów dane wejściowe są identyfikowane przez czytnik XAML i do celów danych wejściowych, zawsze jest ciągiem.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlObjectWriterSettings.IgnoreCanConvert">
          <source>If you set this property to <ph id="ph1">`true`</ph>, you enable a mode where this assumption is codified in the XAML object writer behavior.</source>
          <target state="translated">Jeśli ta właściwość jest ustawiona na <ph id="ph1">`true`</ph>, Włącz tryb, w którym ta założeń są oznaczone zachowania XAML obiektu składnika zapisywania.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlObjectWriterSettings.IgnoreCanConvert">
          <source>This mode supports a compatibility requirement for previous versions of WPF XAML.</source>
          <target state="translated">Ten tryb obsługuje wymóg zgodności dla wcześniejszych wersji programu WPF XAML.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="P:System.Xaml.XamlObjectWriterSettings.PreferUnconvertedDictionaryKeys">
          <source>Gets or sets a value that determines whether to disable a default <ph id="ph1">&lt;see cref="T:System.Xaml.XamlObjectWriter" /&gt;</ph> feature that runs type conversion on the <ph id="ph2">&lt;paramref name="K" /&gt;</ph> component of a <ph id="ph3">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph> before writing the object graph representation.</source>
          <target state="translated">Pobiera lub ustawia wartość określającą, czy należy wyłączyć domyślne <ph id="ph1">&lt;see cref="T:System.Xaml.XamlObjectWriter" /&gt;</ph> funkcja, która uruchamia konwersja typu na <ph id="ph2">&lt;paramref name="K" /&gt;</ph> składnika <ph id="ph3">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph> przed zapisaniem reprezentacja wykresu obiektu.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlObjectWriterSettings.PreferUnconvertedDictionaryKeys">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="K" /&gt;</ph> type conversion for a <ph id="ph3">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph> object should be disabled.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> Jeśli <ph id="ph2">&lt;paramref name="K" /&gt;</ph> konwersja typu dla <ph id="ph3">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph> obiektu powinny być wyłączone.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlObjectWriterSettings.PreferUnconvertedDictionaryKeys">
          <source><ph id="ph1">&lt;see langword="false" /&gt;</ph> if performing <ph id="ph2">&lt;paramref name="K" /&gt;</ph> type conversion for a <ph id="ph3">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph> object applies.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="false" /&gt;</ph> Jeśli wykonywana <ph id="ph2">&lt;paramref name="K" /&gt;</ph> konwersja typu dla <ph id="ph3">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph> obiektu.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlObjectWriterSettings.PreferUnconvertedDictionaryKeys">
          <source>The default is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Wartość domyślna to <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlObjectWriterSettings.PreferUnconvertedDictionaryKeys">
          <source>For more information about the <ph id="ph1">`K`</ph> type conversion feature, see Remarks in <ph id="ph2">&lt;xref:System.Xaml.XamlObjectWriter&gt;</ph>.</source>
          <target state="translated">Aby uzyskać więcej informacji na temat <ph id="ph1">`K`</ph> funkcja konwersji typu, zobacz uwagi w <ph id="ph2">&lt;xref:System.Xaml.XamlObjectWriter&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="P:System.Xaml.XamlObjectWriterSettings.RegisterNamesOnExternalNamescope">
          <source>Gets or sets a value that determines whether name registration should occur against the specified <ph id="ph1">&lt;see cref="P:System.Xaml.XamlObjectWriterSettings.ExternalNameScope" /&gt;</ph>.</source>
          <target state="translated">Pobiera lub ustawia wartość określającą, czy rejestracji nazw powinna wystąpić przed określonego <ph id="ph1">&lt;see cref="P:System.Xaml.XamlObjectWriterSettings.ExternalNameScope" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlObjectWriterSettings.RegisterNamesOnExternalNamescope">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if name registration should occur against the <ph id="ph2">&lt;see cref="P:System.Xaml.XamlObjectWriterSettings.ExternalNameScope" /&gt;</ph>; <ph id="ph3">&lt;see langword="false" /&gt;</ph> if name registration should occur into the parent XAML namescope.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> Jeśli rejestracja nazwy powinno nastąpić przed <ph id="ph2">&lt;see cref="P:System.Xaml.XamlObjectWriterSettings.ExternalNameScope" /&gt;</ph>; <ph id="ph3">&lt;see langword="false" /&gt;</ph> Jeśli rejestracji nazw powinny występować w nadrzędnej namescope XAML.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlObjectWriterSettings.RegisterNamesOnExternalNamescope">
          <source>The default is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Wartość domyślna to <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="P:System.Xaml.XamlObjectWriterSettings.RootObjectInstance">
          <source>Gets or sets a preexisting root object for <ph id="ph1">&lt;see cref="T:System.Xaml.XamlObjectWriter" /&gt;</ph> operations.</source>
          <target state="translated">Pobiera lub ustawia obiekt główny istniejących dla <ph id="ph1">&lt;see cref="T:System.Xaml.XamlObjectWriter" /&gt;</ph> operacji.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlObjectWriterSettings.RootObjectInstance">
          <source>A preexisting root object for <ph id="ph1">&lt;see cref="T:System.Xaml.XamlObjectWriter" /&gt;</ph> operations.</source>
          <target state="translated">Obiekt główny istniejących dla <ph id="ph1">&lt;see cref="T:System.Xaml.XamlObjectWriter" /&gt;</ph> operacji.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlObjectWriterSettings.RootObjectInstance">
          <source>If you set this value, the root object instance is used as an implicit <ph id="ph1">&lt;xref:System.Xaml.XamlObjectWriter.WriteStartObject%2A&gt;</ph> call (with object input that is direct instead of coming from the reader) that precedes the first explicit node-write call by the <ph id="ph2">&lt;xref:System.Xaml.XamlObjectWriter&gt;</ph>.</source>
          <target state="translated">Jeśli ustawisz wartość tego wystąpienia obiektu głównego jest używany jako niejawne <ph id="ph1">&lt;xref:System.Xaml.XamlObjectWriter.WriteStartObject%2A&gt;</ph> wywołania (za pomocą obiektu danych wejściowych jest bezpośrednie zamiast pochodzących z czytnika) czy poprzedza pierwsze wywołanie jawne zapisu węzła przez <ph id="ph2">&lt;xref:System.Xaml.XamlObjectWriter&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlObjectWriterSettings.RootObjectInstance">
          <source>Any error checking, such as verifying the XAML type of the provided root object, is deferred until that implicit <ph id="ph1">&lt;xref:System.Xaml.XamlObjectWriter.WriteStartObject%2A&gt;</ph> call, instead of being checked when you set this settings property.</source>
          <target state="translated">Wszelkie sprawdzanie błędów, takich jak sprawdzanie typu XAML obiektu głównego podana została odroczona dopóki to niejawne <ph id="ph1">&lt;xref:System.Xaml.XamlObjectWriter.WriteStartObject%2A&gt;</ph> wywołanie, zamiast sprawdzany w przypadku ustawienia tej właściwości ustawień.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="P:System.Xaml.XamlObjectWriterSettings.SkipDuplicatePropertyCheck">
          <source>Gets or sets a value that determines whether the XAML writer omits to check for the code path that checks for duplicate properties.</source>
          <target state="translated">Pobiera lub ustawia wartość określającą, czy składnik zapisywania XAML pomija do wyszukania w ścieżce kodu, który sprawdza, czy zduplikowane właściwości.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlObjectWriterSettings.SkipDuplicatePropertyCheck">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the duplicate property check should be omitted; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> Jeśli należy pominąć sprawdzanie zduplikowaną właściwość; w przeciwnym razie <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlObjectWriterSettings.SkipDuplicatePropertyCheck">
          <source>The specified code path checks the currently assigned properties and throws an exception if a duplicate property set of the named ambient property is attempted.</source>
          <target state="translated">Ścieżka określony kod sprawdza właściwości aktualnie przypisanej i zgłasza wyjątek, jeśli nastąpiła zestaw zduplikowaną właściwość o nazwie właściwości otoczenia.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlObjectWriterSettings.SkipDuplicatePropertyCheck">
          <source>For more information, see <ph id="ph1">&lt;xref:System.Xaml.IAmbientProvider&gt;</ph>.</source>
          <target state="translated">Aby uzyskać więcej informacji, zobacz <ph id="ph1">&lt;xref:System.Xaml.IAmbientProvider&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="P:System.Xaml.XamlObjectWriterSettings.SkipProvideValueOnRoot">
          <source>Gets or sets a value that indicates whether the <ph id="ph1">&lt;see cref="T:System.Xaml.XamlObjectWriter" /&gt;</ph> should omit to call <ph id="ph2">&lt;see langword="ProvideValue" /&gt;</ph> on a markup extension, which is relevant when the markup extension represents the root of an object graph.</source>
          <target state="translated">Pobiera lub ustawia wartość wskazującą, czy <ph id="ph1">&lt;see cref="T:System.Xaml.XamlObjectWriter" /&gt;</ph> należy pominąć wywoływanie <ph id="ph2">&lt;see langword="ProvideValue" /&gt;</ph> rozszerzenia znaczników, który ma zastosowanie w przypadku rozszerzenia znaczników reprezentuje katalog główny z wykresu obiektu.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlObjectWriterSettings.SkipProvideValueOnRoot">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Xaml.XamlObjectWriter" /&gt;</ph> should omit to call <ph id="ph3">&lt;see langword="ProvideValue" /&gt;</ph> on a markup extension; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> Jeśli <ph id="ph2">&lt;see cref="T:System.Xaml.XamlObjectWriter" /&gt;</ph> należy pominąć wywoływanie <ph id="ph3">&lt;see langword="ProvideValue" /&gt;</ph> rozszerzenia znaczników; w przeciwnym razie <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlObjectWriterSettings.SkipProvideValueOnRoot">
          <source>This setting is used when the <ph id="ph1">&lt;xref:System.Xaml.XamlObjectWriter&gt;</ph> processes the root node (<ph id="ph2">&lt;xref:System.Xaml.XamlObjectWriter.WriteEndObject%2A&gt;</ph>, or members within the root node).</source>
          <target state="translated">To ustawienie jest używane podczas <ph id="ph1">&lt;xref:System.Xaml.XamlObjectWriter&gt;</ph> przetwarza węzła głównego (<ph id="ph2">&lt;xref:System.Xaml.XamlObjectWriter.WriteEndObject%2A&gt;</ph>, lub elementy członkowskie w węźle głównym).</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlObjectWriterSettings.SkipProvideValueOnRoot">
          <source>This property is relevant for template and defer-load scenarios.</source>
          <target state="translated">Ta właściwość ma zastosowanie w przypadku scenariuszy szablonu i mają być odroczone obciążenia.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="P:System.Xaml.XamlObjectWriterSettings.SourceBamlUri">
          <source>Used in the <ph id="ph1">&lt;see langword="BeginInitHandler" /&gt;</ph> in place of the actual <ph id="ph2">&lt;see langword="BaseUri" /&gt;</ph>.</source>
          <target state="translated">Używane w <ph id="ph1">&lt;see langword="BeginInitHandler" /&gt;</ph> zamiast rzeczywistego <ph id="ph2">&lt;see langword="BaseUri" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlObjectWriterSettings.SourceBamlUri">
          <source>A <ph id="ph1">&lt;see cref="T:System.Uri" /&gt;</ph> to be used in place of the actual <ph id="ph2">&lt;see langword="BaseUri" /&gt;</ph>.</source>
          <target state="translated">A <ph id="ph1">&lt;see cref="T:System.Uri" /&gt;</ph> do użycia zamiast rzeczywistego <ph id="ph2">&lt;see langword="BaseUri" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlObjectWriterSettings.SourceBamlUri">
          <source>Used internally to provide the correct info in the handler, while keeping runtime behavior fully compatible.</source>
          <target state="translated">Używane wewnętrznie, aby zapewnić poprawne informacje w obsłudze, przy zachowaniu zachowania w czasie wykonywania w pełni zgodne.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="P:System.Xaml.XamlObjectWriterSettings.XamlSetValueHandler">
          <source>Gets or sets the handler to use when the object writer calls into a CLR-implemented <ph id="ph1">&lt;see langword="SetValue" /&gt;</ph> for dependency properties.</source>
          <target state="translated">Pobiera lub ustawia program obsługi do użycia podczas zapisywania obiektu wywołuje zaimplementowana CLR <ph id="ph1">&lt;see langword="SetValue" /&gt;</ph> dla właściwości zależności.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlObjectWriterSettings.XamlSetValueHandler">
          <source>A handler implementation that handles this case.</source>
          <target state="translated">Implementację programu obsługi, która obsługuje ten przypadek.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlObjectWriterSettings.XamlSetValueHandler">
          <source>The event handler is based on the generic <ph id="ph1">&lt;xref:System.EventHandler%601&gt;</ph> delegate that uses the <ph id="ph2">&lt;xref:System.Windows.Markup.XamlSetValueEventArgs&gt;</ph> event data.</source>
          <target state="translated">Program obsługi zdarzeń jest oparta na ogólnych <ph id="ph1">&lt;xref:System.EventHandler%601&gt;</ph> delegata, który używa <ph id="ph2">&lt;xref:System.Windows.Markup.XamlSetValueEventArgs&gt;</ph> danych zdarzenia.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>