<Type Name="XamlDirective" FullName="System.Xaml.XamlDirective">
  <Metadata><Meta Name="ms.openlocfilehash" Value="7a5dada723823c294d1508adb88efddc92190fdc" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69427458" /></Metadata><TypeSignature Language="C#" Value="public class XamlDirective : System.Xaml.XamlMember" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XamlDirective extends System.Xaml.XamlMember" />
  <TypeSignature Language="DocId" Value="T:System.Xaml.XamlDirective" />
  <TypeSignature Language="VB.NET" Value="Public Class XamlDirective&#xA;Inherits XamlMember" />
  <TypeSignature Language="C++ CLI" Value="public ref class XamlDirective : System::Xaml::XamlMember" />
  <TypeSignature Language="F#" Value="type XamlDirective = class&#xA;    inherit XamlMember" />
  <AssemblyInfo>
    <AssemblyName>System.Xaml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Xaml.XamlMember</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Zapewnia identyfikator systemu typu XAML dla elementu członkowskiego, jeśli element członkowski jest również dyrektywą XAML. Czytelnicy XAML i moduły zapisujące XAML <see cref="T:System.Xaml.XamlDirective" /> używają identyfikatora podczas przetwarzania węzłów elementów członkowskich. Identyfikator jest używany, gdy czytnik XAML jest umieszczony w <see cref="F:System.Xaml.XamlNodeType.StartMember" /> i <see cref="P:System.Xaml.XamlMember.IsDirective" /> ma <see langword="true" />wartość.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Xaml.XamlDirective>zapewnia oczekiwane wartości dla systemu typu XAML, gdy element członkowski jest dyrektywą XAML. Zgodnie z definicją, dyrektywa języka XAML ma cechy, które zawsze zwracają te same wyniki dla podzestawu <xref:System.Xaml.XamlMember> właściwości, a informacje o systemie tego samego typu XAML są raportowane dla wszystkich możliwych dyrektyw XAML. Raportowanie charakterystyk systemu typu XAML, które są specyficzne dla dyrektyw, jest realizowane przez zachowanie wewnętrzne lub przesłonięcia <xref:System.Xaml.XamlMember> `Lookup*` wirtualnych elementów członkowskich w <xref:System.Xaml.XamlDirective> klasie.  
  
 Na poniższej liście przedstawiono zwrócone wyniki dyrektywy XAML dla <xref:System.Xaml.XamlMember> elementu członkowskiego w <xref:System.Xaml.XamlDirective>rzeczywistości:  
  
-   <xref:System.Xaml.XamlMember.LookupCustomAttributeProvider%2A>jest zawsze `null`.  
  
-   <xref:System.Xaml.XamlMember.DeferringLoader%2A>jest zawsze `null`.  
  
-   <xref:System.Xaml.XamlMember.DependsOn%2A>jest zawsze `null`.  
  
-   <xref:System.Xaml.XamlMember.IsAmbient%2A>jest zawsze `false`.  
  
-   <xref:System.Xaml.XamlMember.IsAttachable%2A>jest zawsze `false`.  
  
-   <xref:System.Xaml.XamlMember.IsDirective%2A>jest zawsze `true`.  
  
-   <xref:System.Xaml.XamlMember.IsEvent%2A>jest zawsze `false`.  
  
-   <xref:System.Xaml.XamlMember.IsReadOnly%2A>jest zawsze `false`.  
  
-   <xref:System.Xaml.XamlMember.IsReadPublic%2A>jest zawsze `true`.  
  
-   <xref:System.Xaml.XamlMember.IsWritePublic%2A>jest zawsze `true`.  
  
 Ponadto wewnętrzna kopia zapasowa dla <xref:System.Xaml.XamlMember.DeclaringType%2A> pozostanie nieustawiona i zwraca wartość `null`.  
  
> [!IMPORTANT]
>  <xref:System.Xaml.XamlDirective><xref:System.Xaml.XamlMember> jest podklasą. Podobnie jak <xref:System.Xaml.XamlMember>w <xref:System.Xaml.XamlDirective> przypadku programu, program ma uwagi dotyczące zabezpieczeń dotyczące sposobu, w jaki system typów XAML zgłasza dostęp. Zobacz <xref:System.Xaml.XamlMember>.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Xaml.XamlMember" />
    <related type="Article" href="https://msdn.microsoft.com/library/7c11abec-1075-474c-9d9b-778e5dab21c3">Zapoznanie się ze strukturami i koncepcjami strumienia węzłów XAML</related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Xaml.XamlDirective" /> klasy.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlDirective (string xamlNamespace, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string xamlNamespace, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlDirective.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (xamlNamespace As String, name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlDirective(System::String ^ xamlNamespace, System::String ^ name);" />
      <MemberSignature Language="F#" Value="new System.Xaml.XamlDirective : string * string -&gt; System.Xaml.XamlDirective" Usage="new System.Xaml.XamlDirective (xamlNamespace, name)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="xamlNamespace" Type="System.String" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="xamlNamespace">Podstawowa przestrzeń nazw XAML, w <see cref="T:System.Xaml.XamlDirective" /> której to może istnieć.</param>
        <param name="name">Nazwa identyfikująca <see cref="T:System.Xaml.XamlDirective" />.</param>
        <summary>Inicjuje nowe wystąpienie <see cref="T:System.Xaml.XamlDirective" /> klasy, określając wartości dla nazwy i pojedynczej przestrzeni nazw XAML. Tej sygnatury należy używać tylko wtedy, gdy <see cref="P:System.Xaml.XamlMember.IsUnknown" /> użytkownik chce <see langword="true" /> lub oczekuje na raport dla dyrektywy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  Ten podpis konstruktora zawsze generuje identyfikator dla dyrektywy, w której <xref:System.Xaml.XamlMember.IsUnknown%2A> są raportowane raporty `true` dla systemu typów XAML. Jeśli są dostępne niezbędne informacje (typ zapasowy i element informacji o składni tekstowej do konwersji) i chcesz, aby identyfikator, który może zastosować dyrektywę, zamiast tego <xref:System.Xaml.XamlDirective.%23ctor%2A?displayProperty=nameWithType> Użyj podpisu konstruktora.  
  
 Jeśli używasz <xref:System.Xaml.XamlDirective.AllowedLocation%2A> tej sygnatury, wartość dla tego wystąpienia to <xref:System.Xaml.Schema.AllowedMemberLocations.Any>; <xref:System.Xaml.XamlMember.Type%2A> , a wartość i <xref:System.Xaml.XamlMember.TypeConverter%2A> wartość są oba `null`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlDirective (System.Collections.Generic.IEnumerable&lt;string&gt; xamlNamespaces, string name, System.Xaml.XamlType xamlType, System.Xaml.Schema.XamlValueConverter&lt;System.ComponentModel.TypeConverter&gt; typeConverter, System.Xaml.Schema.AllowedMemberLocations allowedLocation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IEnumerable`1&lt;string&gt; xamlNamespaces, string name, class System.Xaml.XamlType xamlType, class System.Xaml.Schema.XamlValueConverter`1&lt;class System.ComponentModel.TypeConverter&gt; typeConverter, valuetype System.Xaml.Schema.AllowedMemberLocations allowedLocation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlDirective.#ctor(System.Collections.Generic.IEnumerable{System.String},System.String,System.Xaml.XamlType,System.Xaml.Schema.XamlValueConverter{System.ComponentModel.TypeConverter},System.Xaml.Schema.AllowedMemberLocations)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlDirective(System::Collections::Generic::IEnumerable&lt;System::String ^&gt; ^ xamlNamespaces, System::String ^ name, System::Xaml::XamlType ^ xamlType, System::Xaml::Schema::XamlValueConverter&lt;System::ComponentModel::TypeConverter ^&gt; ^ typeConverter, System::Xaml::Schema::AllowedMemberLocations allowedLocation);" />
      <MemberSignature Language="F#" Value="new System.Xaml.XamlDirective : seq&lt;string&gt; * string * System.Xaml.XamlType * System.Xaml.Schema.XamlValueConverter&lt;System.ComponentModel.TypeConverter&gt; * System.Xaml.Schema.AllowedMemberLocations -&gt; System.Xaml.XamlDirective" Usage="new System.Xaml.XamlDirective (xamlNamespaces, name, xamlType, typeConverter, allowedLocation)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="xamlNamespaces" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="xamlType" Type="System.Xaml.XamlType" />
        <Parameter Name="typeConverter" Type="System.Xaml.Schema.XamlValueConverter&lt;System.ComponentModel.TypeConverter&gt;" />
        <Parameter Name="allowedLocation" Type="System.Xaml.Schema.AllowedMemberLocations" />
      </Parameters>
      <Docs>
        <param name="xamlNamespaces">Zestaw przestrzeni nazw XAML, w którym <see cref="T:System.Xaml.XamlDirective" /> może istnieć, przeszedł jako wyliczalny zestaw ciągów identyfikatorów.</param>
        <param name="name">Nazwa identyfikująca <see cref="T:System.Xaml.XamlDirective" />.</param>
        <param name="xamlType">Typ XAML, który wykonuje kopię <see cref="T:System.Xaml.XamlDirective" />zapasową.</param>
        <param name="typeConverter">Konwerter typu, którego <see cref="T:System.Xaml.XamlDirective" /> używa do konwersji składni tekstu.</param>
        <param name="allowedLocation">Wartość <see cref="T:System.Xaml.Schema.AllowedMemberLocations" /> wyliczenia.</param>
        <summary>Inicjuje nowe wystąpienie <see cref="T:System.Xaml.XamlDirective" /> klasy, określając wartości dla każdej wartości <see cref="T:System.Xaml.XamlDirective" />dla każdej wielkości liter.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten konstruktor należy użyć do wygenerowania <xref:System.Xaml.XamlDirective> , który nie raportuje <xref:System.Xaml.XamlMember.IsUnknown%2A> jako. `true`  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Parametr ma wartość <see langword="null" />. <paramref name="xamlType" /></exception>
      </Docs>
    </Member>
    <Member MemberName="AllowedLocation">
      <MemberSignature Language="C#" Value="public System.Xaml.Schema.AllowedMemberLocations AllowedLocation { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xaml.Schema.AllowedMemberLocations AllowedLocation" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlDirective.AllowedLocation" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AllowedLocation As AllowedMemberLocations" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xaml::Schema::AllowedMemberLocations AllowedLocation { System::Xaml::Schema::AllowedMemberLocations get(); };" />
      <MemberSignature Language="F#" Value="member this.AllowedLocation : System.Xaml.Schema.AllowedMemberLocations" Usage="System.Xaml.XamlDirective.AllowedLocation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xaml.Schema.AllowedMemberLocations</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość określającą typy węzłów XAML, w których można określić dyrektywę.</summary>
        <value>Wartość wyliczenia. Wartość domyślna to Wyliczenie domyślne, czyli <see cref="F:System.Xaml.Schema.AllowedMemberLocations.None" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Tę wartość można ustawić w <xref:System.Xaml.XamlDirective.%23ctor%28System.Collections.Generic.IEnumerable%7BSystem.String%7D%2CSystem.String%2CSystem.Xaml.XamlType%2CSystem.Xaml.Schema.XamlValueConverter%7BSystem.ComponentModel.TypeConverter%7D%2CSystem.Xaml.Schema.AllowedMemberLocations%29> podpisie konstruktora. W przypadku konstruowania za pomocą <xref:System.Xaml.XamlDirective.%23ctor%28System.String%2CSystem.String%29> podpisu <xref:System.Xaml.XamlDirective.AllowedLocation%2A> konstruktora wartość tego wystąpienia wynosi <xref:System.Xaml.Schema.AllowedMemberLocations.Any>. Jednak wystąpienie zawsze zgłasza <xref:System.Xaml.XamlMember.IsUnknown%2A> jako. `true` Takie zachowanie zwykle ma wpływ na próby zapisu grafów obiektów, a także wpływa na inne <xref:System.Xaml.XamlMember> praktyczne zastosowania wartości.  
  
 Zazwyczaj nie można skonstruować przypadku dyrektywy XAML, gdzie <xref:System.Xaml.XamlDirective.AllowedLocation%2A> is. <xref:System.Xaml.Schema.AllowedMemberLocations.None?displayProperty=nameWithType>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlDirective.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="xamlDirective.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zwraca kod skrótu dla tego obiektu.</summary>
        <returns>Kod skrótu liczby całkowitej.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetXamlNamespaces">
      <MemberSignature Language="C#" Value="public override System.Collections.Generic.IList&lt;string&gt; GetXamlNamespaces ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Collections.Generic.IList`1&lt;string&gt; GetXamlNamespaces() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlDirective.GetXamlNamespaces" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetXamlNamespaces () As IList(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Collections::Generic::IList&lt;System::String ^&gt; ^ GetXamlNamespaces();" />
      <MemberSignature Language="F#" Value="override this.GetXamlNamespaces : unit -&gt; System.Collections.Generic.IList&lt;string&gt;" Usage="xamlDirective.GetXamlNamespaces " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zwraca listę przestrzeni nazw XAML, w których może istnieć ten element członkowski języka XAML.</summary>
        <returns>Lista identyfikatorów przestrzeni nazw XAML, jako ciągi.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Identyfikatory przestrzeni nazw XAML to ciągi, które zazwyczaj pojawiają się w formularzu ciągu Uniform Resource Identifier (URI) zgodnie z zwykłymi konwencjami dotyczącymi przestrzeni nazw XAML i XML. Jeśli lista zawiera więcej niż jeden element, pierwszy element w zestawie jest zwykle istotną podstawową przestrzenią nazw XAML do celów przetwarzania, a pozostałe elementy są alternatywami. <xref:System.Xaml.XamlMember.PreferredXamlNamespace%2A?displayProperty=nameWithType>opiera się na tej kolejności.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupCustomAttributeProvider">
      <MemberSignature Language="C#" Value="protected override sealed System.Reflection.ICustomAttributeProvider LookupCustomAttributeProvider ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Reflection.ICustomAttributeProvider LookupCustomAttributeProvider() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlDirective.LookupCustomAttributeProvider" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides NotOverridable Function LookupCustomAttributeProvider () As ICustomAttributeProvider" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Reflection::ICustomAttributeProvider ^ LookupCustomAttributeProvider();" />
      <MemberSignature Language="F#" Value="override this.LookupCustomAttributeProvider : unit -&gt; System.Reflection.ICustomAttributeProvider" Usage="xamlDirective.LookupCustomAttributeProvider " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.ICustomAttributeProvider</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Reflection.ICustomAttributeProvider" /> Zwraca implementację. Ta implementacja zawsze zwraca <see langword="null" />wartość.</summary>
        <returns>Zawsze zwraca <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ponieważ dyrektywa języka XAML nie może mieć atrybutów niestandardowych, ta implementacja zawsze `null`zwraca wartość. <xref:System.Xaml.XamlDirective>plomby tego wirtualnego elementu członkowskiego; w związku z <xref:System.Xaml.XamlDirective> tym wszystkie typy i wszystkie wstępnie zdefiniowane dyrektywy XAML muszą korzystać z tego zachowania.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupDeferringLoader">
      <MemberSignature Language="C#" Value="protected override sealed System.Xaml.Schema.XamlValueConverter&lt;System.Xaml.XamlDeferringLoader&gt; LookupDeferringLoader ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Xaml.Schema.XamlValueConverter`1&lt;class System.Xaml.XamlDeferringLoader&gt; LookupDeferringLoader() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlDirective.LookupDeferringLoader" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides NotOverridable Function LookupDeferringLoader () As XamlValueConverter(Of XamlDeferringLoader)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Xaml::Schema::XamlValueConverter&lt;System::Xaml::XamlDeferringLoader ^&gt; ^ LookupDeferringLoader();" />
      <MemberSignature Language="F#" Value="override this.LookupDeferringLoader : unit -&gt; System.Xaml.Schema.XamlValueConverter&lt;System.Xaml.XamlDeferringLoader&gt;" Usage="xamlDirective.LookupDeferringLoader " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.Schema.XamlValueConverter&lt;System.Xaml.XamlDeferringLoader&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> Zwraca obiekt, który jest używany podczas odroczonego ładowania obiektów zadeklarowanych w języku XAML. Ta implementacja zawsze zwraca <see langword="null" />wartość.</summary>
        <returns>Zawsze zwraca <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ponieważ dyrektywa nie może mieć odroczonego ładowania, ta implementacja zawsze zwraca wartość `null`. <xref:System.Xaml.XamlDirective>plomby tego wirtualnego elementu członkowskiego; w związku z <xref:System.Xaml.XamlDirective> tym wszystkie typy i wszystkie wstępnie zdefiniowane dyrektywy XAML muszą korzystać z tego zachowania.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlMember.DeferringLoader" />
      </Docs>
    </Member>
    <Member MemberName="LookupDependsOn">
      <MemberSignature Language="C#" Value="protected override sealed System.Collections.Generic.IList&lt;System.Xaml.XamlMember&gt; LookupDependsOn ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Collections.Generic.IList`1&lt;class System.Xaml.XamlMember&gt; LookupDependsOn() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlDirective.LookupDependsOn" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides NotOverridable Function LookupDependsOn () As IList(Of XamlMember)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Collections::Generic::IList&lt;System::Xaml::XamlMember ^&gt; ^ LookupDependsOn();" />
      <MemberSignature Language="F#" Value="override this.LookupDependsOn : unit -&gt; System.Collections.Generic.IList&lt;System.Xaml.XamlMember&gt;" Usage="xamlDirective.LookupDependsOn " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Xaml.XamlMember&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zwraca listę <see cref="T:System.Xaml.XamlMember" /> obiektów. Na liście są zgłaszane elementy członkowskie, w których istnieją <see cref="T:System.Xaml.XamlMember" />relacje zależności dla kolejności inicjalizacji. Ta implementacja zawsze zwraca <see langword="null" />wartość.</summary>
        <returns>Zawsze zwraca <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ponieważ dyrektywa języka XAML nie może mieć kolejności inicjowania, ta implementacja zawsze `null`zwraca wartość. <xref:System.Xaml.XamlDirective>plomby tego wirtualnego elementu członkowskiego; w związku z <xref:System.Xaml.XamlDirective> tym wszystkie typy i wszystkie wstępnie zdefiniowane dyrektywy XAML muszą korzystać z tego zachowania.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlMember.DependsOn" />
      </Docs>
    </Member>
    <Member MemberName="LookupInvoker">
      <MemberSignature Language="C#" Value="protected override sealed System.Xaml.Schema.XamlMemberInvoker LookupInvoker ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Xaml.Schema.XamlMemberInvoker LookupInvoker() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlDirective.LookupInvoker" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides NotOverridable Function LookupInvoker () As XamlMemberInvoker" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Xaml::Schema::XamlMemberInvoker ^ LookupInvoker();" />
      <MemberSignature Language="F#" Value="override this.LookupInvoker : unit -&gt; System.Xaml.Schema.XamlMemberInvoker" Usage="xamlDirective.LookupInvoker " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.Schema.XamlMemberInvoker</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zwraca obiekt <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> <see cref="T:System.Xaml.XamlDirective" />, który jest skojarzony z.</summary>
        <returns>Informacje na ten <see cref="T:System.Xaml.XamlMember" />temat. <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda może być wywoływana przez wywołania do <xref:System.Xaml.XamlMember.Invoker%2A>.  
  
 Ta implementacja zwraca wewnętrzną wartość <xref:System.Xaml.Schema.XamlMemberInvoker> statyczną, która jest specyficzna dla dyrektyw w systemie typu XAML. <xref:System.Xaml.XamlDirective>plomby tego wirtualnego elementu członkowskiego; w związku z <xref:System.Xaml.XamlDirective> tym wszystkie typy i wszystkie wstępnie zdefiniowane dyrektywy XAML muszą korzystać z tego zachowania.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlMember.Invoker" />
      </Docs>
    </Member>
    <Member MemberName="LookupIsAmbient">
      <MemberSignature Language="C#" Value="protected override sealed bool LookupIsAmbient ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool LookupIsAmbient() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlDirective.LookupIsAmbient" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides NotOverridable Function LookupIsAmbient () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool LookupIsAmbient();" />
      <MemberSignature Language="F#" Value="override this.LookupIsAmbient : unit -&gt; bool" Usage="xamlDirective.LookupIsAmbient " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zwraca czy ten <see cref="T:System.Xaml.XamlMember" /> raport jest raportowany jako Właściwość otoczenia.</summary>
        <returns>Zawsze zwraca <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ponieważ dyrektywa języka XAML nie może być typu otoczenia, ta implementacja zawsze zwraca `false`wartość. <xref:System.Xaml.XamlDirective>plomby tego wirtualnego elementu członkowskiego; w związku z <xref:System.Xaml.XamlDirective> tym wszystkie typy i wszystkie wstępnie zdefiniowane dyrektywy XAML muszą korzystać z tego zachowania.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Xaml.XamlMember.LookupIsAmbient" />
      </Docs>
    </Member>
    <Member MemberName="LookupIsEvent">
      <MemberSignature Language="C#" Value="protected override sealed bool LookupIsEvent ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool LookupIsEvent() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlDirective.LookupIsEvent" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides NotOverridable Function LookupIsEvent () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool LookupIsEvent();" />
      <MemberSignature Language="F#" Value="override this.LookupIsEvent : unit -&gt; bool" Usage="xamlDirective.LookupIsEvent " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zwraca czy to <see cref="T:System.Xaml.XamlDirective" /> reprezentuje zdarzenie.</summary>
        <returns>Zawsze zwraca <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Xaml.XamlDirective>plomby tego wirtualnego elementu członkowskiego; w związku z <xref:System.Xaml.XamlDirective> tym wszystkie typy i wszystkie wstępnie zdefiniowane dyrektywy XAML muszą korzystać z tego zachowania.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlMember.IsEvent" />
      </Docs>
    </Member>
    <Member MemberName="LookupIsReadOnly">
      <MemberSignature Language="C#" Value="protected override sealed bool LookupIsReadOnly ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool LookupIsReadOnly() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlDirective.LookupIsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides NotOverridable Function LookupIsReadOnly () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool LookupIsReadOnly();" />
      <MemberSignature Language="F#" Value="override this.LookupIsReadOnly : unit -&gt; bool" Usage="xamlDirective.LookupIsReadOnly " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zwraca czy reprezentuje <see cref="T:System.Xaml.XamlDirective" /> ona zamierzoną właściwość tylko do odczytu.</summary>
        <returns>Zawsze zwraca <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zgodnie z definicją dyrektywy są gotowe do detabeli. <xref:System.Xaml.XamlDirective>plomby tego wirtualnego elementu członkowskiego; w związku z <xref:System.Xaml.XamlDirective> tym wszystkie typy i wszystkie wstępnie zdefiniowane dyrektywy XAML muszą korzystać z tego zachowania.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlMember.IsReadOnly" />
      </Docs>
    </Member>
    <Member MemberName="LookupIsReadPublic">
      <MemberSignature Language="C#" Value="protected override sealed bool LookupIsReadPublic ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool LookupIsReadPublic() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlDirective.LookupIsReadPublic" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides NotOverridable Function LookupIsReadPublic () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool LookupIsReadPublic();" />
      <MemberSignature Language="F#" Value="override this.LookupIsReadPublic : unit -&gt; bool" Usage="xamlDirective.LookupIsReadPublic " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zwraca czy <see cref="T:System.Xaml.XamlDirective" /> reprezentuje właściwość, która ma publiczny <see langword="get" /> akcesor.</summary>
        <returns>Zawsze zwraca <see langword="true" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Xaml.XamlDirective>plomby tego wirtualnego elementu członkowskiego; w związku z <xref:System.Xaml.XamlDirective> tym wszystkie typy i wszystkie wstępnie zdefiniowane dyrektywy XAML muszą korzystać z tego zachowania.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlMember.IsReadPublic" />
      </Docs>
    </Member>
    <Member MemberName="LookupIsUnknown">
      <MemberSignature Language="C#" Value="protected override sealed bool LookupIsUnknown ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool LookupIsUnknown() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlDirective.LookupIsUnknown" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides NotOverridable Function LookupIsUnknown () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool LookupIsUnknown();" />
      <MemberSignature Language="F#" Value="override this.LookupIsUnknown : unit -&gt; bool" Usage="xamlDirective.LookupIsUnknown " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zwraca czy <see cref="T:System.Xaml.XamlDirective" /> reprezentuje element członkowski, który nie jest rozpoznawany przez system zapasowy używany do rozpoznawania typów i elementów członkowskich.</summary>
        <returns><see langword="true" />Jeśli reprezentuje <see cref="T:System.Xaml.XamlDirective" /> to nierozpoznawalny element członkowski; <see langword="false" />w przeciwnym razie.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Xaml.XamlDirective> Implementacja wywołuje tylko podstawowe i robi nic więcej. Implementacja podstawowa zwraca wyniki w następującej kolejności: wyniki są oparte na odbiciu wewnętrznym; lub wyniki są oparte na sprawdzaniu wartości <xref:System.Xaml.XamlMember.UnderlyingMember%2A>null. Implementacja <xref:System.Xaml.XamlDirective> zamknięć tego wirtualnego elementu członkowskiego; w związku <xref:System.Xaml.XamlDirective> z tym, wszystkie typy i wszystkie wstępnie zdefiniowane dyrektywy XAML muszą korzystać z tego zachowania.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupIsWriteOnly">
      <MemberSignature Language="C#" Value="protected override sealed bool LookupIsWriteOnly ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool LookupIsWriteOnly() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlDirective.LookupIsWriteOnly" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides NotOverridable Function LookupIsWriteOnly () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool LookupIsWriteOnly();" />
      <MemberSignature Language="F#" Value="override this.LookupIsWriteOnly : unit -&gt; bool" Usage="xamlDirective.LookupIsWriteOnly " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zwraca czy <see cref="T:System.Xaml.XamlDirective" /> reprezentuje zamierzoną właściwość tylko do zapisu.</summary>
        <returns>Zawsze zwraca <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Xaml.XamlDirective>plomby tego wirtualnego elementu członkowskiego; w związku z <xref:System.Xaml.XamlDirective> tym wszystkie typy i wszystkie wstępnie zdefiniowane dyrektywy XAML muszą korzystać z tego zachowania.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlMember.IsWriteOnly" />
      </Docs>
    </Member>
    <Member MemberName="LookupIsWritePublic">
      <MemberSignature Language="C#" Value="protected override sealed bool LookupIsWritePublic ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool LookupIsWritePublic() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlDirective.LookupIsWritePublic" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides NotOverridable Function LookupIsWritePublic () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool LookupIsWritePublic();" />
      <MemberSignature Language="F#" Value="override this.LookupIsWritePublic : unit -&gt; bool" Usage="xamlDirective.LookupIsWritePublic " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zwraca czy <see cref="T:System.Xaml.XamlDirective" /> reprezentuje właściwość, która ma publiczny <see langword="set" /> akcesor.</summary>
        <returns>Zawsze zwraca <see langword="true" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Xaml.XamlDirective>plomby tego wirtualnego elementu członkowskiego; w związku z <xref:System.Xaml.XamlDirective> tym wszystkie typy i wszystkie wstępnie zdefiniowane dyrektywy XAML muszą korzystać z tego zachowania.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlMember.IsWritePublic" />
      </Docs>
    </Member>
    <Member MemberName="LookupTargetType">
      <MemberSignature Language="C#" Value="protected override sealed System.Xaml.XamlType LookupTargetType ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Xaml.XamlType LookupTargetType() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlDirective.LookupTargetType" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides NotOverridable Function LookupTargetType () As XamlType" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Xaml::XamlType ^ LookupTargetType();" />
      <MemberSignature Language="F#" Value="override this.LookupTargetType : unit -&gt; System.Xaml.XamlType" Usage="xamlDirective.LookupTargetType " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlType</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Xaml.XamlType" /> Zwraca typ <see cref="T:System.Xaml.XamlMember" /> , który może istnieć. Ta implementacja zawsze zwraca <see langword="null" />wartość.</summary>
        <returns>Zawsze zwraca <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Typy docelowe nie są odpowiednie dla dyrektyw; w związku z tym ta implementacja `null`zawsze zwraca wartość. <xref:System.Xaml.XamlDirective>plomby tego wirtualnego elementu członkowskiego; w związku z <xref:System.Xaml.XamlDirective> tym wszystkie typy i wszystkie wstępnie zdefiniowane dyrektywy XAML muszą korzystać z tego zachowania.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlMember.TargetType" />
      </Docs>
    </Member>
    <Member MemberName="LookupType">
      <MemberSignature Language="C#" Value="protected override sealed System.Xaml.XamlType LookupType ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Xaml.XamlType LookupType() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlDirective.LookupType" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides NotOverridable Function LookupType () As XamlType" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Xaml::XamlType ^ LookupType();" />
      <MemberSignature Language="F#" Value="override this.LookupType : unit -&gt; System.Xaml.XamlType" Usage="xamlDirective.LookupType " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlType</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Xaml.XamlType" /> Zwraca typ, który jest używany przez element członkowski.</summary>
        <returns><see cref="T:System.Xaml.XamlType" /> Typ, który jest używany przez element członkowski.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Xaml.XamlDirective> Implementacja wywołuje tylko podstawowe i robi nic więcej. Implementacja podstawowa zwraca wyniki w oparciu o odbicie wewnętrzne lub sprawdzając wartość <xref:System.Xaml.XamlMember.UnderlyingMember%2A>null, przetwarzanie w tej kolejności. <xref:System.Xaml.XamlDirective>plomby tego wirtualnego elementu członkowskiego; w związku z <xref:System.Xaml.XamlDirective> tym wszystkie typy i wszystkie wstępnie zdefiniowane dyrektywy XAML muszą korzystać z tego zachowania.  
  
 Zobacz uwagi w <xref:System.Xaml.XamlMember.LookupType%2A?displayProperty=nameWithType> programie, aby uzyskać więcej informacji <xref:System.Xaml.XamlMember.Type%2A> o tym, jakie informacje są wykonywane.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlMember.Type" />
      </Docs>
    </Member>
    <Member MemberName="LookupTypeConverter">
      <MemberSignature Language="C#" Value="protected override sealed System.Xaml.Schema.XamlValueConverter&lt;System.ComponentModel.TypeConverter&gt; LookupTypeConverter ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Xaml.Schema.XamlValueConverter`1&lt;class System.ComponentModel.TypeConverter&gt; LookupTypeConverter() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlDirective.LookupTypeConverter" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides NotOverridable Function LookupTypeConverter () As XamlValueConverter(Of TypeConverter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Xaml::Schema::XamlValueConverter&lt;System::ComponentModel::TypeConverter ^&gt; ^ LookupTypeConverter();" />
      <MemberSignature Language="F#" Value="override this.LookupTypeConverter : unit -&gt; System.Xaml.Schema.XamlValueConverter&lt;System.ComponentModel.TypeConverter&gt;" Usage="xamlDirective.LookupTypeConverter " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.Schema.XamlValueConverter&lt;System.ComponentModel.TypeConverter&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zwraca implementację konwertera typów, która jest skojarzona z tym <see cref="T:System.Xaml.XamlDirective" />elementem.</summary>
        <returns>Wystąpienie, które ma <see cref="T:System.ComponentModel.TypeConverter" /> ograniczenie; lub <see langword="null" />. <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Xaml.XamlDirective> Implementacja wywołuje tylko podstawowe i robi nic więcej. Zobacz <xref:System.Xaml.XamlMember.LookupTypeConverter%2A?displayProperty=nameWithType>. <xref:System.Xaml.XamlDirective>plomby tego wirtualnego elementu członkowskiego; w związku z <xref:System.Xaml.XamlDirective> tym wszystkie typy i wszystkie wstępnie zdefiniowane dyrektywy XAML muszą korzystać z tego zachowania.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlMember.Type" />
      </Docs>
    </Member>
    <Member MemberName="LookupUnderlyingGetter">
      <MemberSignature Language="C#" Value="protected override sealed System.Reflection.MethodInfo LookupUnderlyingGetter ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Reflection.MethodInfo LookupUnderlyingGetter() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlDirective.LookupUnderlyingGetter" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides NotOverridable Function LookupUnderlyingGetter () As MethodInfo" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Reflection::MethodInfo ^ LookupUnderlyingGetter();" />
      <MemberSignature Language="F#" Value="override this.LookupUnderlyingGetter : unit -&gt; System.Reflection.MethodInfo" Usage="xamlDirective.LookupUnderlyingGetter " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zwraca metodę dostępu, która jest skojarzona <see cref="T:System.Xaml.XamlDirective" />z tym elementem. <see langword="get" /> Ta implementacja zawsze zwraca <see langword="null" />wartość.</summary>
        <returns>Zawsze zwraca <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Xaml.XamlDirective>plomby tego wirtualnego elementu członkowskiego; w związku z <xref:System.Xaml.XamlDirective> tym wszystkie typy i wszystkie wstępnie zdefiniowane dyrektywy XAML muszą korzystać z tego zachowania.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupUnderlyingMember">
      <MemberSignature Language="C#" Value="protected override sealed System.Reflection.MemberInfo LookupUnderlyingMember ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Reflection.MemberInfo LookupUnderlyingMember() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlDirective.LookupUnderlyingMember" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides NotOverridable Function LookupUnderlyingMember () As MemberInfo" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Reflection::MemberInfo ^ LookupUnderlyingMember();" />
      <MemberSignature Language="F#" Value="override this.LookupUnderlyingMember : unit -&gt; System.Reflection.MemberInfo" Usage="xamlDirective.LookupUnderlyingMember " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MemberInfo</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zwraca odbicie <see cref="T:System.Reflection.MemberInfo" /> CLR, które jest skojarzone z <see cref="T:System.Xaml.XamlDirective" />tym elementem. Ta implementacja zawsze zwraca <see langword="null" />wartość.</summary>
        <returns>Zawsze zwraca <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Xaml.XamlDirective>plomby tego wirtualnego elementu członkowskiego; w związku z <xref:System.Xaml.XamlDirective> tym wszystkie typy i wszystkie wstępnie zdefiniowane dyrektywy XAML muszą korzystać z tego zachowania.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlMember.UnderlyingMember" />
      </Docs>
    </Member>
    <Member MemberName="LookupUnderlyingSetter">
      <MemberSignature Language="C#" Value="protected override sealed System.Reflection.MethodInfo LookupUnderlyingSetter ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Reflection.MethodInfo LookupUnderlyingSetter() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlDirective.LookupUnderlyingSetter" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides NotOverridable Function LookupUnderlyingSetter () As MethodInfo" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Reflection::MethodInfo ^ LookupUnderlyingSetter();" />
      <MemberSignature Language="F#" Value="override this.LookupUnderlyingSetter : unit -&gt; System.Reflection.MethodInfo" Usage="xamlDirective.LookupUnderlyingSetter " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zwraca metodę dostępu, która jest skojarzona <see cref="T:System.Xaml.XamlDirective" />z tym elementem. <see langword="set" /> Ta implementacja zawsze zwraca <see langword="null" />wartość.</summary>
        <returns>Zawsze zwraca <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Xaml.XamlDirective>plomby tego wirtualnego elementu członkowskiego; w związku z <xref:System.Xaml.XamlDirective> tym wszystkie typy i wszystkie wstępnie zdefiniowane dyrektywy XAML muszą korzystać z tego zachowania.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlDirective.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="xamlDirective.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zwraca reprezentację <see cref="T:System.Xaml.XamlDirective" />ciągu.</summary>
        <returns>Reprezentacja <see cref="T:System.Xaml.XamlDirective" />ciągu.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli informacje o przestrzeni nazw XAML są dostępne, ta implementacja zwraca kombinację <xref:System.Xaml.XamlMember.PreferredXamlNamespace%2A> ciągu <xref:System.Xaml.XamlMember.Name%2A>z i. Jeśli informacje o przestrzeni nazw XAML są niedostępne, ta <xref:System.Xaml.XamlMember.Name%2A>implementacja zwróci.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
