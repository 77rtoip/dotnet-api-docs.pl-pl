<Type Name="XamlDirective" FullName="System.Xaml.XamlDirective">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="a2eac5472d3696b1d538c311c8dde96426e0fb73" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30741662" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class XamlDirective : System.Xaml.XamlMember" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XamlDirective extends System.Xaml.XamlMember" />
  <TypeSignature Language="DocId" Value="T:System.Xaml.XamlDirective" />
  <TypeSignature Language="VB.NET" Value="Public Class XamlDirective&#xA;Inherits XamlMember" />
  <TypeSignature Language="C++ CLI" Value="public ref class XamlDirective : System::Xaml::XamlMember" />
  <AssemblyInfo>
    <AssemblyName>System.Xaml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Xaml.XamlMember</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Zawiera identyfikator system typu XAML dla elementu członkowskiego, jeśli element członkowski jest również dyrektywy XAML. Czytniki XAML i zapisywania XAML użyj <see cref="T:System.Xaml.XamlDirective" /> identyfikator podczas przetwarzania elementu członkowskiego węzłów. Identyfikator jest używany, gdy czytnik XAML jest ustawiony na <see cref="F:System.Xaml.XamlNodeType.StartMember" /> i <see cref="P:System.Xaml.XamlMember.IsDirective" /> jest <see langword="true" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Xaml.XamlDirective> udostępnia oczekiwanych wartości dla system typów języka XAML, gdy element członkowski jest dyrektywą XAML. Zgodnie z definicją dyrektywy XAML ma właściwości, które zawsze zwracają takie same wyniki dla podzbioru <xref:System.Xaml.XamlMember> właściwości i te same informacje system typu XAML został zgłoszony dla wszystkich możliwych dyrektyw XAML. Raportowanie XAML typu właściwości specyficzne dla dyrektywy odbywa się przez wewnętrzne działanie lub przy użyciu zastąpień z <xref:System.Xaml.XamlMember> `Lookup*` wirtualnych elementów członkowskich w <xref:System.Xaml.XamlDirective> klasy.  
  
 Na poniższej liście przedstawiono zwrócone wyniki dyrektywy XAML dla <xref:System.Xaml.XamlMember> gdy element członkowski jest rzeczywiście <xref:System.Xaml.XamlDirective>:  
  
-   <xref:System.Xaml.XamlMember.LookupCustomAttributeProvider%2A> zawsze `null`.  
  
-   <xref:System.Xaml.XamlMember.DeferringLoader%2A> zawsze `null`.  
  
-   <xref:System.Xaml.XamlMember.DependsOn%2A> zawsze `null`.  
  
-   <xref:System.Xaml.XamlMember.IsAmbient%2A> zawsze `false`.  
  
-   <xref:System.Xaml.XamlMember.IsAttachable%2A> zawsze `false`.  
  
-   <xref:System.Xaml.XamlMember.IsDirective%2A> zawsze `true`.  
  
-   <xref:System.Xaml.XamlMember.IsEvent%2A> zawsze `false`.  
  
-   <xref:System.Xaml.XamlMember.IsReadOnly%2A> zawsze `false`.  
  
-   <xref:System.Xaml.XamlMember.IsReadPublic%2A> zawsze `true`.  
  
-   <xref:System.Xaml.XamlMember.IsWritePublic%2A> zawsze `true`.  
  
 Ponadto wewnętrzny zapasowego dla <xref:System.Xaml.XamlMember.DeclaringType%2A> pozostaje unset i zwraca `null`.  
  
> [!IMPORTANT]
>  <xref:System.Xaml.XamlDirective> jest <xref:System.Xaml.XamlMember> podklasy. Jak <xref:System.Xaml.XamlMember>, <xref:System.Xaml.XamlDirective> ma zagadnienia dotyczące zabezpieczeń dotyczące jak system typu XAML zgłasza dostępu. Zobacz <xref:System.Xaml.XamlMember>.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Xaml.XamlMember" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Xaml.XamlDirective" /> klasy.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlDirective (string xamlNamespace, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string xamlNamespace, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlDirective.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (xamlNamespace As String, name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlDirective(System::String ^ xamlNamespace, System::String ^ name);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="xamlNamespace" Type="System.String" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="xamlNamespace">Głównej przestrzeni nazw XAML gdzie to <see cref="T:System.Xaml.XamlDirective" /> może istnieć.</param>
        <param name="name">Nazwę identyfikującą z <see cref="T:System.Xaml.XamlDirective" />.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Xaml.XamlDirective" /> klasy określania wartości dla nazwy i jedna przestrzeń nazw XAML. Użyj tego podpisu, tylko wtedy, gdy mają lub oczekiwać <see cref="P:System.Xaml.XamlMember.IsUnknown" /> do raportu <see langword="true" /> dla dyrektywy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  Ta sygnatura konstruktora zawsze generuje identyfikator dla dyrektywy gdzie <xref:System.Xaml.XamlMember.IsUnknown%2A> raporty `true` system typów dla pliku XAML. Jeśli niezbędne informacje są dostępne (zapasowy typ i elementu tekstowego składni informacji do konwersji) i ma identyfikator, który można zastosować dyrektywy, użyj <xref:System.Xaml.XamlDirective.%23ctor%2A?displayProperty=nameWithType> sygnatury konstruktora zamiast tego.  
  
 Jeśli używasz tego podpisu, <xref:System.Xaml.XamlDirective.AllowedLocation%2A> wartość dla tego wystąpienia jest <xref:System.Xaml.Schema.AllowedMemberLocations.Any>; i <xref:System.Xaml.XamlMember.Type%2A> wartość i <xref:System.Xaml.XamlMember.TypeConverter%2A> znajdują się wartości `null`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlDirective (System.Collections.Generic.IEnumerable&lt;string&gt; xamlNamespaces, string name, System.Xaml.XamlType xamlType, System.Xaml.Schema.XamlValueConverter&lt;System.ComponentModel.TypeConverter&gt; typeConverter, System.Xaml.Schema.AllowedMemberLocations allowedLocation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IEnumerable`1&lt;string&gt; xamlNamespaces, string name, class System.Xaml.XamlType xamlType, class System.Xaml.Schema.XamlValueConverter`1&lt;class System.ComponentModel.TypeConverter&gt; typeConverter, valuetype System.Xaml.Schema.AllowedMemberLocations allowedLocation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlDirective.#ctor(System.Collections.Generic.IEnumerable{System.String},System.String,System.Xaml.XamlType,System.Xaml.Schema.XamlValueConverter{System.ComponentModel.TypeConverter},System.Xaml.Schema.AllowedMemberLocations)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlDirective(System::Collections::Generic::IEnumerable&lt;System::String ^&gt; ^ xamlNamespaces, System::String ^ name, System::Xaml::XamlType ^ xamlType, System::Xaml::Schema::XamlValueConverter&lt;System::ComponentModel::TypeConverter ^&gt; ^ typeConverter, System::Xaml::Schema::AllowedMemberLocations allowedLocation);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="xamlNamespaces" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="xamlType" Type="System.Xaml.XamlType" />
        <Parameter Name="typeConverter" Type="System.Xaml.Schema.XamlValueConverter&lt;System.ComponentModel.TypeConverter&gt;" />
        <Parameter Name="allowedLocation" Type="System.Xaml.Schema.AllowedMemberLocations" />
      </Parameters>
      <Docs>
        <param name="xamlNamespaces">Zestaw przestrzeni nazw XAML gdzie to <see cref="T:System.Xaml.XamlDirective" /> może istnieć, jako wyliczalny zestaw ciągów identyfikator.</param>
        <param name="name">Nazwę identyfikującą z <see cref="T:System.Xaml.XamlDirective" />.</param>
        <param name="xamlType">Typ XAML, aby utworzyć kopię zapasową <see cref="T:System.Xaml.XamlDirective" />.</param>
        <param name="typeConverter">Konwerter typu tego <see cref="T:System.Xaml.XamlDirective" /> używa do konwersji składni tekstu.</param>
        <param name="allowedLocation">Wartość <see cref="T:System.Xaml.Schema.AllowedMemberLocations" /> wyliczenia.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Xaml.XamlDirective" /> klasy określania wartości dla każdej wartości na przypadku <see cref="T:System.Xaml.XamlDirective" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten konstruktor musi służy do generowania <xref:System.Xaml.XamlDirective> nie zgłaszać <xref:System.Xaml.XamlMember.IsUnknown%2A> jako `true`.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="xamlType" /> Parametr jest <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="AllowedLocation">
      <MemberSignature Language="C#" Value="public System.Xaml.Schema.AllowedMemberLocations AllowedLocation { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xaml.Schema.AllowedMemberLocations AllowedLocation" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlDirective.AllowedLocation" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AllowedLocation As AllowedMemberLocations" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xaml::Schema::AllowedMemberLocations AllowedLocation { System::Xaml::Schema::AllowedMemberLocations get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.Schema.AllowedMemberLocations</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość, która określa typy węzłów XAML, w którym można określić dyrektywy.</summary>
        <value>Wartość wyliczenia. Wartość domyślna to wyliczenie domyślna, czyli <see cref="F:System.Xaml.Schema.AllowedMemberLocations.None" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Tę wartość można ustawić <xref:System.Xaml.XamlDirective.%23ctor%28System.Collections.Generic.IEnumerable%7BSystem.String%7D%2CSystem.String%2CSystem.Xaml.XamlType%2CSystem.Xaml.Schema.XamlValueConverter%7BSystem.ComponentModel.TypeConverter%7D%2CSystem.Xaml.Schema.AllowedMemberLocations%29> sygnatury konstruktora. Jeśli skonstruować za pomocą <xref:System.Xaml.XamlDirective.%23ctor%28System.String%2CSystem.String%29> sygnatury konstruktora <xref:System.Xaml.XamlDirective.AllowedLocation%2A> wartość dla tego wystąpienia jest <xref:System.Xaml.Schema.AllowedMemberLocations.Any>. Jednak wystąpienie zawsze raporty <xref:System.Xaml.XamlMember.IsUnknown%2A> jako `true`. Zwykle dotyczy to próby zapisu obiektu wykresach i również ma wpływ na inne praktyczne zastosowania <xref:System.Xaml.XamlMember> wartość.  
  
 Zwykle będzie nie utworzymy przypadku dyrektywy XAML gdzie <xref:System.Xaml.XamlDirective.AllowedLocation%2A> jest <xref:System.Xaml.Schema.AllowedMemberLocations.None?displayProperty=nameWithType>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlDirective.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zwraca wartość skrótu dla tego obiektu.</summary>
        <returns>Liczba całkowita wartość skrótu.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetXamlNamespaces">
      <MemberSignature Language="C#" Value="public override System.Collections.Generic.IList&lt;string&gt; GetXamlNamespaces ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Collections.Generic.IList`1&lt;string&gt; GetXamlNamespaces() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlDirective.GetXamlNamespaces" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetXamlNamespaces () As IList(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Collections::Generic::IList&lt;System::String ^&gt; ^ GetXamlNamespaces();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zwraca listę przestrzeni nazw XAML, gdzie może istnieć tego elementu członkowskiego XAML.</summary>
        <returns>Lista identyfikatorów przestrzeni nazw XAML, jako ciągi.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Identyfikatory przestrzeni nazw XAML są ciągów, które zwykle są wyświetlane w postaci ciągu identyfikatora URI (Uniform Resource) zgodnie ze zwykłymi konwencje dla przestrzeni nazw XAML i XML. Jeśli lista zawiera więcej niż jeden element, pierwszy element w zestawie jest zwykle odpowiednich nazw XAML głównej w celu przetwarzania i innych elementów są elementy alternatywne. <xref:System.Xaml.XamlMember.PreferredXamlNamespace%2A?displayProperty=nameWithType> zależy to porządkowania.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupCustomAttributeProvider">
      <MemberSignature Language="C#" Value="protected override sealed System.Reflection.ICustomAttributeProvider LookupCustomAttributeProvider ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Reflection.ICustomAttributeProvider LookupCustomAttributeProvider() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlDirective.LookupCustomAttributeProvider" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides NotOverridable Function LookupCustomAttributeProvider () As ICustomAttributeProvider" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Reflection::ICustomAttributeProvider ^ LookupCustomAttributeProvider();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.ICustomAttributeProvider</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zwraca <see cref="T:System.Reflection.ICustomAttributeProvider" /> implementacji. Ta implementacja zawsze zwraca <see langword="null" />.</summary>
        <returns>Zawsze zwraca <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ponieważ dyrektywy XAML nie może mieć atrybutów niestandardowych, ta implementacja zawsze zwraca `null`. <xref:System.Xaml.XamlDirective> uszczelnienia ten wirtualny element członkowski; w związku z tym wszystkie <xref:System.Xaml.XamlDirective> typy oraz wszystkich wstępnie zdefiniowanych dyrektyw XAML musi używać tego zachowania.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupDeferringLoader">
      <MemberSignature Language="C#" Value="protected override sealed System.Xaml.Schema.XamlValueConverter&lt;System.Xaml.XamlDeferringLoader&gt; LookupDeferringLoader ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Xaml.Schema.XamlValueConverter`1&lt;class System.Xaml.XamlDeferringLoader&gt; LookupDeferringLoader() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlDirective.LookupDeferringLoader" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides NotOverridable Function LookupDeferringLoader () As XamlValueConverter(Of XamlDeferringLoader)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Xaml::Schema::XamlValueConverter&lt;System::Xaml::XamlDeferringLoader ^&gt; ^ LookupDeferringLoader();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.Schema.XamlValueConverter&lt;System.Xaml.XamlDeferringLoader&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zwraca <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> obiektu, który jest używany podczas ładowanie odłożone zadeklarowany XAML obiektów. Ta implementacja zawsze zwraca <see langword="null" />.</summary>
        <returns>Zawsze zwraca <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ponieważ dyrektywy nie mają odłożone ładowanie, zawsze ta implementacja zwraca `null`. <xref:System.Xaml.XamlDirective> uszczelnienia ten wirtualny element członkowski; w związku z tym wszystkie <xref:System.Xaml.XamlDirective> typy oraz wszystkich wstępnie zdefiniowanych dyrektyw XAML musi używać tego zachowania.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlMember.DeferringLoader" />
      </Docs>
    </Member>
    <Member MemberName="LookupDependsOn">
      <MemberSignature Language="C#" Value="protected override sealed System.Collections.Generic.IList&lt;System.Xaml.XamlMember&gt; LookupDependsOn ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Collections.Generic.IList`1&lt;class System.Xaml.XamlMember&gt; LookupDependsOn() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlDirective.LookupDependsOn" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides NotOverridable Function LookupDependsOn () As IList(Of XamlMember)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Collections::Generic::IList&lt;System::Xaml::XamlMember ^&gt; ^ LookupDependsOn();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Xaml.XamlMember&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zwraca listę <see cref="T:System.Xaml.XamlMember" /> obiektów. Lista raportów elementów członkowskich, do których istnieją relacje zależności dla kolejność inicjowania względem to <see cref="T:System.Xaml.XamlMember" />. Ta implementacja zawsze zwraca <see langword="null" />.</summary>
        <returns>Zawsze zwraca <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ponieważ dyrektywy XAML nie może mieć kolejność inicjowania, zawsze ta implementacja zwraca `null`. <xref:System.Xaml.XamlDirective> uszczelnienia ten wirtualny element członkowski; w związku z tym wszystkie <xref:System.Xaml.XamlDirective> typy oraz wszystkich wstępnie zdefiniowanych dyrektyw XAML musi używać tego zachowania.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlMember.DependsOn" />
      </Docs>
    </Member>
    <Member MemberName="LookupInvoker">
      <MemberSignature Language="C#" Value="protected override sealed System.Xaml.Schema.XamlMemberInvoker LookupInvoker ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Xaml.Schema.XamlMemberInvoker LookupInvoker() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlDirective.LookupInvoker" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides NotOverridable Function LookupInvoker () As XamlMemberInvoker" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Xaml::Schema::XamlMemberInvoker ^ LookupInvoker();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.Schema.XamlMemberInvoker</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zwraca <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> skojarzony z <see cref="T:System.Xaml.XamlDirective" />.</summary>
        <returns>
          <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> Informacje na temat tego <see cref="T:System.Xaml.XamlMember" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda może być wywoływana przez wywołania <xref:System.Xaml.XamlMember.Invoker%2A>.  
  
 Ta implementacja zwraca statyczne wewnętrzne <xref:System.Xaml.Schema.XamlMemberInvoker> wartość, która jest specyficzna dla dyrektywy w systemie typów języka XAML. <xref:System.Xaml.XamlDirective> uszczelnienia ten wirtualny element członkowski; w związku z tym wszystkie <xref:System.Xaml.XamlDirective> typy oraz wszystkich wstępnie zdefiniowanych dyrektyw XAML musi używać tego zachowania.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlMember.Invoker" />
      </Docs>
    </Member>
    <Member MemberName="LookupIsAmbient">
      <MemberSignature Language="C#" Value="protected override sealed bool LookupIsAmbient ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool LookupIsAmbient() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlDirective.LookupIsAmbient" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides NotOverridable Function LookupIsAmbient () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool LookupIsAmbient();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zwraca czy to <see cref="T:System.Xaml.XamlMember" /> został zgłoszony jako właściwością otoczenia.</summary>
        <returns>Zawsze zwraca <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ponieważ dyrektywy XAML nie może być typem otoczenia, zawsze ta implementacja zwraca `false`. <xref:System.Xaml.XamlDirective> uszczelnienia ten wirtualny element członkowski; w związku z tym wszystkie <xref:System.Xaml.XamlDirective> typy oraz wszystkich wstępnie zdefiniowanych dyrektyw XAML musi używać tego zachowania.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Xaml.XamlMember.LookupIsAmbient" />
      </Docs>
    </Member>
    <Member MemberName="LookupIsEvent">
      <MemberSignature Language="C#" Value="protected override sealed bool LookupIsEvent ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool LookupIsEvent() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlDirective.LookupIsEvent" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides NotOverridable Function LookupIsEvent () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool LookupIsEvent();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zwraca czy to <see cref="T:System.Xaml.XamlDirective" /> reprezentuje zdarzenie.</summary>
        <returns>Zawsze zwraca <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Xaml.XamlDirective> uszczelnienia ten wirtualny element członkowski; w związku z tym wszystkie <xref:System.Xaml.XamlDirective> typy oraz wszystkich wstępnie zdefiniowanych dyrektyw XAML musi używać tego zachowania.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlMember.IsEvent" />
      </Docs>
    </Member>
    <Member MemberName="LookupIsReadOnly">
      <MemberSignature Language="C#" Value="protected override sealed bool LookupIsReadOnly ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool LookupIsReadOnly() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlDirective.LookupIsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides NotOverridable Function LookupIsReadOnly () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool LookupIsReadOnly();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zwraca czy to <see cref="T:System.Xaml.XamlDirective" /> reprezentuje właściwość przeznaczone tylko do odczytu.</summary>
        <returns>Zawsze zwraca <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zgodnie z definicją dyrektywy są można ustawić. <xref:System.Xaml.XamlDirective> uszczelnienia ten wirtualny element członkowski; w związku z tym wszystkie <xref:System.Xaml.XamlDirective> typy oraz wszystkich wstępnie zdefiniowanych dyrektyw XAML musi używać tego zachowania.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlMember.IsReadOnly" />
      </Docs>
    </Member>
    <Member MemberName="LookupIsReadPublic">
      <MemberSignature Language="C#" Value="protected override sealed bool LookupIsReadPublic ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool LookupIsReadPublic() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlDirective.LookupIsReadPublic" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides NotOverridable Function LookupIsReadPublic () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool LookupIsReadPublic();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zwraca czy to <see cref="T:System.Xaml.XamlDirective" /> reprezentuje właściwość, która ma publiczny <see langword="get" /> metody dostępu.</summary>
        <returns>Zawsze zwraca <see langword="true" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Xaml.XamlDirective> uszczelnienia ten wirtualny element członkowski; w związku z tym wszystkie <xref:System.Xaml.XamlDirective> typy oraz wszystkich wstępnie zdefiniowanych dyrektyw XAML musi używać tego zachowania.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlMember.IsReadPublic" />
      </Docs>
    </Member>
    <Member MemberName="LookupIsUnknown">
      <MemberSignature Language="C#" Value="protected override sealed bool LookupIsUnknown ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool LookupIsUnknown() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlDirective.LookupIsUnknown" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides NotOverridable Function LookupIsUnknown () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool LookupIsUnknown();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zwraca czy to <see cref="T:System.Xaml.XamlDirective" /> reprezentuje element członkowski, który nie jest rozpoznawana przez bazowego systemu, który jest używany do rozpoznawania typu i element członkowski.</summary>
        <returns>
          <see langword="true" /> Jeśli <see cref="T:System.Xaml.XamlDirective" /> reprezentuje nie można rozpoznać elementu członkowskiego; w przeciwnym razie <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Xaml.XamlDirective> Implementacji tylko wywołuje podstawowej i nie robi nic więcej. Podstawowa implementacja zwraca wyniki w następującej kolejności: wyniki są oparte na podstawie odbicia wewnętrznych; lub wyniki są oparte na sprawdzanie wartości null <xref:System.Xaml.XamlMember.UnderlyingMember%2A>. <xref:System.Xaml.XamlDirective> Implementacji uszczelnienia to wirtualny element członkowski; w związku z tym wszystkie <xref:System.Xaml.XamlDirective> typy oraz wszystkich wstępnie zdefiniowanych dyrektyw XAML musi używać tego zachowania.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupIsWriteOnly">
      <MemberSignature Language="C#" Value="protected override sealed bool LookupIsWriteOnly ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool LookupIsWriteOnly() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlDirective.LookupIsWriteOnly" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides NotOverridable Function LookupIsWriteOnly () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool LookupIsWriteOnly();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zwraca czy to <see cref="T:System.Xaml.XamlDirective" /> reprezentuje właściwość przeznaczone tylko do zapisu.</summary>
        <returns>Zawsze zwraca <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Xaml.XamlDirective> uszczelnienia ten wirtualny element członkowski; w związku z tym wszystkie <xref:System.Xaml.XamlDirective> typy oraz wszystkich wstępnie zdefiniowanych dyrektyw XAML musi używać tego zachowania.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlMember.IsWriteOnly" />
      </Docs>
    </Member>
    <Member MemberName="LookupIsWritePublic">
      <MemberSignature Language="C#" Value="protected override sealed bool LookupIsWritePublic ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool LookupIsWritePublic() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlDirective.LookupIsWritePublic" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides NotOverridable Function LookupIsWritePublic () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool LookupIsWritePublic();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zwraca czy to <see cref="T:System.Xaml.XamlDirective" /> reprezentuje właściwość, która ma publiczny <see langword="set" /> metody dostępu.</summary>
        <returns>Zawsze zwraca <see langword="true" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Xaml.XamlDirective> uszczelnienia ten wirtualny element członkowski; w związku z tym wszystkie <xref:System.Xaml.XamlDirective> typy oraz wszystkich wstępnie zdefiniowanych dyrektyw XAML musi używać tego zachowania.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlMember.IsWritePublic" />
      </Docs>
    </Member>
    <Member MemberName="LookupTargetType">
      <MemberSignature Language="C#" Value="protected override sealed System.Xaml.XamlType LookupTargetType ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Xaml.XamlType LookupTargetType() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlDirective.LookupTargetType" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides NotOverridable Function LookupTargetType () As XamlType" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Xaml::XamlType ^ LookupTargetType();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlType</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zwraca <see cref="T:System.Xaml.XamlType" /> typu gdzie <see cref="T:System.Xaml.XamlMember" /> może istnieć. Ta implementacja zawsze zwraca <see langword="null" />.</summary>
        <returns>Zawsze zwraca <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Typy elementów docelowych nie są istotne dla dyrektywy; w związku z tym ta implementacja zawsze zwraca `null`. <xref:System.Xaml.XamlDirective> uszczelnienia ten wirtualny element członkowski; w związku z tym wszystkie <xref:System.Xaml.XamlDirective> typy oraz wszystkich wstępnie zdefiniowanych dyrektyw XAML musi używać tego zachowania.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlMember.TargetType" />
      </Docs>
    </Member>
    <Member MemberName="LookupType">
      <MemberSignature Language="C#" Value="protected override sealed System.Xaml.XamlType LookupType ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Xaml.XamlType LookupType() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlDirective.LookupType" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides NotOverridable Function LookupType () As XamlType" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Xaml::XamlType ^ LookupType();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlType</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zwraca <see cref="T:System.Xaml.XamlType" /> typu, który jest używany przez element członkowski.</summary>
        <returns>
          <see cref="T:System.Xaml.XamlType" /> Typu, który jest używany przez element członkowski.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Xaml.XamlDirective> Implementacji tylko wywołuje podstawowej i nie robi nic więcej. Podstawowa implementacja zwraca wyniki na podstawie odbicia wewnętrznych lub sprawdzanie wartości null <xref:System.Xaml.XamlMember.UnderlyingMember%2A>, w tej kolejności przetwarzania. <xref:System.Xaml.XamlDirective> uszczelnienia ten wirtualny element członkowski; w związku z tym wszystkie <xref:System.Xaml.XamlDirective> typy oraz wszystkich wstępnie zdefiniowanych dyrektyw XAML musi używać tego zachowania.  
  
 Zobacz uwagi w <xref:System.Xaml.XamlMember.LookupType%2A?displayProperty=nameWithType> uzyskać więcej informacji o informacjach <xref:System.Xaml.XamlMember.Type%2A> niesie.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlMember.Type" />
      </Docs>
    </Member>
    <Member MemberName="LookupTypeConverter">
      <MemberSignature Language="C#" Value="protected override sealed System.Xaml.Schema.XamlValueConverter&lt;System.ComponentModel.TypeConverter&gt; LookupTypeConverter ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Xaml.Schema.XamlValueConverter`1&lt;class System.ComponentModel.TypeConverter&gt; LookupTypeConverter() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlDirective.LookupTypeConverter" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides NotOverridable Function LookupTypeConverter () As XamlValueConverter(Of TypeConverter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Xaml::Schema::XamlValueConverter&lt;System::ComponentModel::TypeConverter ^&gt; ^ LookupTypeConverter();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.Schema.XamlValueConverter&lt;System.ComponentModel.TypeConverter&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zwraca implementacji konwertera typu, który jest skojarzony z tym <see cref="T:System.Xaml.XamlDirective" />.</summary>
        <returns>A <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> wystąpienia, które ma <see cref="T:System.ComponentModel.TypeConverter" /> ograniczenia; lub <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Xaml.XamlDirective> Implementacji tylko wywołuje podstawowej i nie robi nic więcej. Zobacz <xref:System.Xaml.XamlMember.LookupTypeConverter%2A?displayProperty=nameWithType>. <xref:System.Xaml.XamlDirective> uszczelnienia ten wirtualny element członkowski; w związku z tym wszystkie <xref:System.Xaml.XamlDirective> typy oraz wszystkich wstępnie zdefiniowanych dyrektyw XAML musi używać tego zachowania.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlMember.Type" />
      </Docs>
    </Member>
    <Member MemberName="LookupUnderlyingGetter">
      <MemberSignature Language="C#" Value="protected override sealed System.Reflection.MethodInfo LookupUnderlyingGetter ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Reflection.MethodInfo LookupUnderlyingGetter() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlDirective.LookupUnderlyingGetter" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides NotOverridable Function LookupUnderlyingGetter () As MethodInfo" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Reflection::MethodInfo ^ LookupUnderlyingGetter();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zwraca <see langword="get" /> dostępu, który jest skojarzony z tym <see cref="T:System.Xaml.XamlDirective" />. Ta implementacja zawsze zwraca <see langword="null" />.</summary>
        <returns>Zawsze zwraca <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Xaml.XamlDirective> uszczelnienia ten wirtualny element członkowski; w związku z tym wszystkie <xref:System.Xaml.XamlDirective> typy oraz wszystkich wstępnie zdefiniowanych dyrektyw XAML musi używać tego zachowania.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupUnderlyingMember">
      <MemberSignature Language="C#" Value="protected override sealed System.Reflection.MemberInfo LookupUnderlyingMember ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Reflection.MemberInfo LookupUnderlyingMember() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlDirective.LookupUnderlyingMember" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides NotOverridable Function LookupUnderlyingMember () As MemberInfo" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Reflection::MemberInfo ^ LookupUnderlyingMember();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MemberInfo</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zwraca odbicia CLR <see cref="T:System.Reflection.MemberInfo" /> skojarzonego z tym <see cref="T:System.Xaml.XamlDirective" />. Ta implementacja zawsze zwraca <see langword="null" />.</summary>
        <returns>Zawsze zwraca <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Xaml.XamlDirective> uszczelnienia ten wirtualny element członkowski; w związku z tym wszystkie <xref:System.Xaml.XamlDirective> typy oraz wszystkich wstępnie zdefiniowanych dyrektyw XAML musi używać tego zachowania.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlMember.UnderlyingMember" />
      </Docs>
    </Member>
    <Member MemberName="LookupUnderlyingSetter">
      <MemberSignature Language="C#" Value="protected override sealed System.Reflection.MethodInfo LookupUnderlyingSetter ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Reflection.MethodInfo LookupUnderlyingSetter() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlDirective.LookupUnderlyingSetter" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides NotOverridable Function LookupUnderlyingSetter () As MethodInfo" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Reflection::MethodInfo ^ LookupUnderlyingSetter();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zwraca <see langword="set" /> dostępu, który jest skojarzony z tym <see cref="T:System.Xaml.XamlDirective" />. Ta implementacja zawsze zwraca <see langword="null" />.</summary>
        <returns>Zawsze zwraca <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Xaml.XamlDirective> uszczelnienia ten wirtualny element członkowski; w związku z tym wszystkie <xref:System.Xaml.XamlDirective> typy oraz wszystkich wstępnie zdefiniowanych dyrektyw XAML musi używać tego zachowania.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlDirective.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zwraca reprezentację ciągu tego <see cref="T:System.Xaml.XamlDirective" />.</summary>
        <returns>Reprezentacja ciągu tego <see cref="T:System.Xaml.XamlDirective" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli informacje o przestrzeni nazw XAML jest dostępny, ta implementacja zwraca ciąg kombinację <xref:System.Xaml.XamlMember.PreferredXamlNamespace%2A> i <xref:System.Xaml.XamlMember.Name%2A>. Jeśli informacje o przestrzeni nazw XAML są niedostępne, ta implementacja zwraca <xref:System.Xaml.XamlMember.Name%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>