<Type Name="XamlDirective" FullName="System.Xaml.XamlDirective">
  <TypeSignature Language="C#" Value="public class XamlDirective : System.Xaml.XamlMember" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XamlDirective extends System.Xaml.XamlMember" />
  <TypeSignature Language="DocId" Value="T:System.Xaml.XamlDirective" />
  <TypeSignature Language="VB.NET" Value="Public Class XamlDirective&#xA;Inherits XamlMember" />
  <TypeSignature Language="C++ CLI" Value="public ref class XamlDirective : System::Xaml::XamlMember" />
  <AssemblyInfo>
    <AssemblyName>System.Xaml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Xaml.XamlMember</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="4754c-101">Zawiera identyfikator system typu XAML dla elementu członkowskiego, jeśli element członkowski jest również dyrektywy XAML.</span><span class="sxs-lookup"><span data-stu-id="4754c-101">Provides the XAML type system identifier for a member if the member is also a XAML directive.</span></span> <span data-ttu-id="4754c-102">Czytniki XAML i zapisywania XAML użyj <see cref="T:System.Xaml.XamlDirective" /> identyfikator podczas przetwarzania elementu członkowskiego węzłów.</span><span class="sxs-lookup"><span data-stu-id="4754c-102">XAML readers and XAML writers use the <see cref="T:System.Xaml.XamlDirective" /> identifier during processing of member nodes.</span></span> <span data-ttu-id="4754c-103">Identyfikator jest używany, gdy czytnik XAML jest ustawiony na <see cref="F:System.Xaml.XamlNodeType.StartMember" /> i <see cref="P:System.Xaml.XamlMember.IsDirective" /> jest <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="4754c-103">The identifier is used when the XAML reader is positioned on a <see cref="F:System.Xaml.XamlNodeType.StartMember" /> and <see cref="P:System.Xaml.XamlMember.IsDirective" /> is <see langword="true" />.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4754c-104"><xref:System.Xaml.XamlDirective> udostępnia oczekiwanych wartości dla system typów języka XAML, gdy element członkowski jest dyrektywą XAML.</span><span class="sxs-lookup"><span data-stu-id="4754c-104"><xref:System.Xaml.XamlDirective> provides expected values for the XAML type system when the member is a XAML directive.</span></span> <span data-ttu-id="4754c-105">Zgodnie z definicją dyrektywy XAML ma właściwości, które zawsze zwracają takie same wyniki dla podzbioru <xref:System.Xaml.XamlMember> właściwości i te same informacje system typu XAML został zgłoszony dla wszystkich możliwych dyrektyw XAML.</span><span class="sxs-lookup"><span data-stu-id="4754c-105">By definition, a XAML directive has characteristics that always return the same results for a subset of the <xref:System.Xaml.XamlMember> properties, and the same XAML type system information is reported for all possible XAML directives.</span></span> <span data-ttu-id="4754c-106">Raportowanie XAML typu właściwości specyficzne dla dyrektywy odbywa się przez wewnętrzne działanie lub przy użyciu zastąpień z <xref:System.Xaml.XamlMember> `Lookup*` wirtualnych elementów członkowskich w <xref:System.Xaml.XamlDirective> klasy.</span><span class="sxs-lookup"><span data-stu-id="4754c-106">The reporting of XAML type system characteristics that are specific to directives is accomplished by internal behavior or through overrides of <xref:System.Xaml.XamlMember> `Lookup*` virtual members in the <xref:System.Xaml.XamlDirective> class.</span></span>  
  
 <span data-ttu-id="4754c-107">Na poniższej liście przedstawiono zwrócone wyniki dyrektywy XAML dla <xref:System.Xaml.XamlMember> gdy element członkowski jest rzeczywiście <xref:System.Xaml.XamlDirective>:</span><span class="sxs-lookup"><span data-stu-id="4754c-107">The following list shows the returned results of a XAML directive for <xref:System.Xaml.XamlMember> when the member is actually a <xref:System.Xaml.XamlDirective>:</span></span>  
  
-   <span data-ttu-id="4754c-108"><xref:System.Xaml.XamlMember.LookupCustomAttributeProvider%2A> zawsze `null`.</span><span class="sxs-lookup"><span data-stu-id="4754c-108"><xref:System.Xaml.XamlMember.LookupCustomAttributeProvider%2A> is always `null`.</span></span>  
  
-   <span data-ttu-id="4754c-109"><xref:System.Xaml.XamlMember.DeferringLoader%2A> zawsze `null`.</span><span class="sxs-lookup"><span data-stu-id="4754c-109"><xref:System.Xaml.XamlMember.DeferringLoader%2A> is always `null`.</span></span>  
  
-   <span data-ttu-id="4754c-110"><xref:System.Xaml.XamlMember.DependsOn%2A> zawsze `null`.</span><span class="sxs-lookup"><span data-stu-id="4754c-110"><xref:System.Xaml.XamlMember.DependsOn%2A> is always `null`.</span></span>  
  
-   <span data-ttu-id="4754c-111"><xref:System.Xaml.XamlMember.IsAmbient%2A> zawsze `false`.</span><span class="sxs-lookup"><span data-stu-id="4754c-111"><xref:System.Xaml.XamlMember.IsAmbient%2A> is always `false`.</span></span>  
  
-   <span data-ttu-id="4754c-112"><xref:System.Xaml.XamlMember.IsAttachable%2A> zawsze `false`.</span><span class="sxs-lookup"><span data-stu-id="4754c-112"><xref:System.Xaml.XamlMember.IsAttachable%2A> is always `false`.</span></span>  
  
-   <span data-ttu-id="4754c-113"><xref:System.Xaml.XamlMember.IsDirective%2A> zawsze `true`.</span><span class="sxs-lookup"><span data-stu-id="4754c-113"><xref:System.Xaml.XamlMember.IsDirective%2A> is always `true`.</span></span>  
  
-   <span data-ttu-id="4754c-114"><xref:System.Xaml.XamlMember.IsEvent%2A> zawsze `false`.</span><span class="sxs-lookup"><span data-stu-id="4754c-114"><xref:System.Xaml.XamlMember.IsEvent%2A> is always `false`.</span></span>  
  
-   <span data-ttu-id="4754c-115"><xref:System.Xaml.XamlMember.IsReadOnly%2A> zawsze `false`.</span><span class="sxs-lookup"><span data-stu-id="4754c-115"><xref:System.Xaml.XamlMember.IsReadOnly%2A> is always `false`.</span></span>  
  
-   <span data-ttu-id="4754c-116"><xref:System.Xaml.XamlMember.IsReadPublic%2A> zawsze `true`.</span><span class="sxs-lookup"><span data-stu-id="4754c-116"><xref:System.Xaml.XamlMember.IsReadPublic%2A> is always `true`.</span></span>  
  
-   <span data-ttu-id="4754c-117"><xref:System.Xaml.XamlMember.IsWritePublic%2A> zawsze `true`.</span><span class="sxs-lookup"><span data-stu-id="4754c-117"><xref:System.Xaml.XamlMember.IsWritePublic%2A> is always `true`.</span></span>  
  
 <span data-ttu-id="4754c-118">Ponadto wewnętrzny zapasowego dla <xref:System.Xaml.XamlMember.DeclaringType%2A> pozostaje unset i zwraca `null`.</span><span class="sxs-lookup"><span data-stu-id="4754c-118">Also, the internal backing for <xref:System.Xaml.XamlMember.DeclaringType%2A> remains unset and returns `null`.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="4754c-119"><xref:System.Xaml.XamlDirective> jest <xref:System.Xaml.XamlMember> podklasy.</span><span class="sxs-lookup"><span data-stu-id="4754c-119"><xref:System.Xaml.XamlDirective> is a <xref:System.Xaml.XamlMember> subclass.</span></span> <span data-ttu-id="4754c-120">Jak <xref:System.Xaml.XamlMember>, <xref:System.Xaml.XamlDirective> ma zagadnienia dotyczące zabezpieczeń dotyczące jak system typu XAML zgłasza dostępu.</span><span class="sxs-lookup"><span data-stu-id="4754c-120">As with <xref:System.Xaml.XamlMember>, <xref:System.Xaml.XamlDirective> has security considerations regarding how the XAML type system reports access.</span></span> <span data-ttu-id="4754c-121">Zobacz <xref:System.Xaml.XamlMember>.</span><span class="sxs-lookup"><span data-stu-id="4754c-121">See <xref:System.Xaml.XamlMember>.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Xaml.XamlMember" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="4754c-122">Inicjuje nowe wystąpienie klasy <see cref="T:System.Xaml.XamlDirective" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="4754c-122">Initializes a new instance of the <see cref="T:System.Xaml.XamlDirective" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlDirective (string xamlNamespace, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string xamlNamespace, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlDirective.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (xamlNamespace As String, name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlDirective(System::String ^ xamlNamespace, System::String ^ name);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="xamlNamespace" Type="System.String" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="xamlNamespace"><span data-ttu-id="4754c-123">Głównej przestrzeni nazw XAML gdzie to <see cref="T:System.Xaml.XamlDirective" /> może istnieć.</span><span class="sxs-lookup"><span data-stu-id="4754c-123">The primary XAML namespace where this <see cref="T:System.Xaml.XamlDirective" /> can exist.</span></span></param>
        <param name="name"><span data-ttu-id="4754c-124">Nazwę identyfikującą z <see cref="T:System.Xaml.XamlDirective" />.</span><span class="sxs-lookup"><span data-stu-id="4754c-124">The identifying name of the <see cref="T:System.Xaml.XamlDirective" />.</span></span></param>
        <summary><span data-ttu-id="4754c-125">Inicjuje nowe wystąpienie klasy <see cref="T:System.Xaml.XamlDirective" /> klasy określania wartości dla nazwy i jedna przestrzeń nazw XAML.</span><span class="sxs-lookup"><span data-stu-id="4754c-125">Initializes a new instance of the <see cref="T:System.Xaml.XamlDirective" /> class, specifying values for a name and a single XAML namespace.</span></span> <span data-ttu-id="4754c-126">Użyj tego podpisu, tylko wtedy, gdy mają lub oczekiwać <see cref="P:System.Xaml.XamlMember.IsUnknown" /> do raportu <see langword="true" /> dla dyrektywy.</span><span class="sxs-lookup"><span data-stu-id="4754c-126">Use this signature only when you want or expect <see cref="P:System.Xaml.XamlMember.IsUnknown" /> to report <see langword="true" /> for the directive.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="4754c-127">Ta sygnatura konstruktora zawsze generuje identyfikator dla dyrektywy gdzie <xref:System.Xaml.XamlMember.IsUnknown%2A> raporty `true` system typów dla pliku XAML.</span><span class="sxs-lookup"><span data-stu-id="4754c-127">This signature of the constructor always generates an identifier for the directive where <xref:System.Xaml.XamlMember.IsUnknown%2A> reports `true` for the XAML type system.</span></span> <span data-ttu-id="4754c-128">Jeśli niezbędne informacje są dostępne (zapasowy typ i elementu tekstowego składni informacji do konwersji) i ma identyfikator, który można zastosować dyrektywy, użyj <xref:System.Xaml.XamlDirective.%23ctor%2A?displayProperty=nameWithType> sygnatury konstruktora zamiast tego.</span><span class="sxs-lookup"><span data-stu-id="4754c-128">If the necessary information is available (the backing type and a text syntax information item for conversion) and you want an identifier that can apply the directive, use the <xref:System.Xaml.XamlDirective.%23ctor%2A?displayProperty=nameWithType> constructor signature instead.</span></span>  
  
 <span data-ttu-id="4754c-129">Jeśli używasz tego podpisu, <xref:System.Xaml.XamlDirective.AllowedLocation%2A> wartość dla tego wystąpienia jest <xref:System.Xaml.Schema.AllowedMemberLocations.Any>; i <xref:System.Xaml.XamlMember.Type%2A> wartość i <xref:System.Xaml.XamlMember.TypeConverter%2A> znajdują się wartości `null`.</span><span class="sxs-lookup"><span data-stu-id="4754c-129">If you use this signature, the <xref:System.Xaml.XamlDirective.AllowedLocation%2A> value for the instance is <xref:System.Xaml.Schema.AllowedMemberLocations.Any>; and the <xref:System.Xaml.XamlMember.Type%2A> value and <xref:System.Xaml.XamlMember.TypeConverter%2A> value are both `null`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlDirective (System.Collections.Generic.IEnumerable&lt;string&gt; xamlNamespaces, string name, System.Xaml.XamlType xamlType, System.Xaml.Schema.XamlValueConverter&lt;System.ComponentModel.TypeConverter&gt; typeConverter, System.Xaml.Schema.AllowedMemberLocations allowedLocation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IEnumerable`1&lt;string&gt; xamlNamespaces, string name, class System.Xaml.XamlType xamlType, class System.Xaml.Schema.XamlValueConverter`1&lt;class System.ComponentModel.TypeConverter&gt; typeConverter, valuetype System.Xaml.Schema.AllowedMemberLocations allowedLocation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlDirective.#ctor(System.Collections.Generic.IEnumerable{System.String},System.String,System.Xaml.XamlType,System.Xaml.Schema.XamlValueConverter{System.ComponentModel.TypeConverter},System.Xaml.Schema.AllowedMemberLocations)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlDirective(System::Collections::Generic::IEnumerable&lt;System::String ^&gt; ^ xamlNamespaces, System::String ^ name, System::Xaml::XamlType ^ xamlType, System::Xaml::Schema::XamlValueConverter&lt;System::ComponentModel::TypeConverter ^&gt; ^ typeConverter, System::Xaml::Schema::AllowedMemberLocations allowedLocation);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="xamlNamespaces" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="xamlType" Type="System.Xaml.XamlType" />
        <Parameter Name="typeConverter" Type="System.Xaml.Schema.XamlValueConverter&lt;System.ComponentModel.TypeConverter&gt;" />
        <Parameter Name="allowedLocation" Type="System.Xaml.Schema.AllowedMemberLocations" />
      </Parameters>
      <Docs>
        <param name="xamlNamespaces"><span data-ttu-id="4754c-130">Zestaw przestrzeni nazw XAML gdzie to <see cref="T:System.Xaml.XamlDirective" /> może istnieć, jako wyliczalny zestaw ciągów identyfikator.</span><span class="sxs-lookup"><span data-stu-id="4754c-130">A set of XAML namespaces where this <see cref="T:System.Xaml.XamlDirective" /> can exist, passed as an enumerable set of the identifier strings.</span></span></param>
        <param name="name"><span data-ttu-id="4754c-131">Nazwę identyfikującą z <see cref="T:System.Xaml.XamlDirective" />.</span><span class="sxs-lookup"><span data-stu-id="4754c-131">The identifying name of the <see cref="T:System.Xaml.XamlDirective" />.</span></span></param>
        <param name="xamlType"><span data-ttu-id="4754c-132">Typ XAML, aby utworzyć kopię zapasową <see cref="T:System.Xaml.XamlDirective" />.</span><span class="sxs-lookup"><span data-stu-id="4754c-132">The XAML type that backs the <see cref="T:System.Xaml.XamlDirective" />.</span></span></param>
        <param name="typeConverter"><span data-ttu-id="4754c-133">Konwerter typu tego <see cref="T:System.Xaml.XamlDirective" /> używa do konwersji składni tekstu.</span><span class="sxs-lookup"><span data-stu-id="4754c-133">The type converter that this <see cref="T:System.Xaml.XamlDirective" /> uses for text syntax conversion.</span></span></param>
        <param name="allowedLocation"><span data-ttu-id="4754c-134">Wartość <see cref="T:System.Xaml.Schema.AllowedMemberLocations" /> wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="4754c-134">A value of the <see cref="T:System.Xaml.Schema.AllowedMemberLocations" /> enumeration.</span></span></param>
        <summary><span data-ttu-id="4754c-135">Inicjuje nowe wystąpienie klasy <see cref="T:System.Xaml.XamlDirective" /> klasy określania wartości dla każdej wartości na przypadku <see cref="T:System.Xaml.XamlDirective" />.</span><span class="sxs-lookup"><span data-stu-id="4754c-135">Initializes a new instance of the <see cref="T:System.Xaml.XamlDirective" /> class, specifying values for each per-case value of a <see cref="T:System.Xaml.XamlDirective" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4754c-136">Ten konstruktor musi służy do generowania <xref:System.Xaml.XamlDirective> nie zgłaszać <xref:System.Xaml.XamlMember.IsUnknown%2A> jako `true`.</span><span class="sxs-lookup"><span data-stu-id="4754c-136">You must use this constructor to generate a <xref:System.Xaml.XamlDirective> that does not report <xref:System.Xaml.XamlMember.IsUnknown%2A> as `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="4754c-137"><paramref name="xamlType" /> Parametr jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="4754c-137">The <paramref name="xamlType" /> parameter is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="AllowedLocation">
      <MemberSignature Language="C#" Value="public System.Xaml.Schema.AllowedMemberLocations AllowedLocation { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xaml.Schema.AllowedMemberLocations AllowedLocation" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlDirective.AllowedLocation" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AllowedLocation As AllowedMemberLocations" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xaml::Schema::AllowedMemberLocations AllowedLocation { System::Xaml::Schema::AllowedMemberLocations get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.Schema.AllowedMemberLocations</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4754c-138">Pobiera wartość, która określa typy węzłów XAML, w którym można określić dyrektywy.</span><span class="sxs-lookup"><span data-stu-id="4754c-138">Gets a value that specifies the XAML node types where the directive can be specified.</span></span></summary>
        <value><span data-ttu-id="4754c-139">Wartość wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="4754c-139">A value of the enumeration.</span></span> <span data-ttu-id="4754c-140">Wartość domyślna to wyliczenie domyślna, czyli <see cref="F:System.Xaml.Schema.AllowedMemberLocations.None" />.</span><span class="sxs-lookup"><span data-stu-id="4754c-140">The default is the enumeration default, which is <see cref="F:System.Xaml.Schema.AllowedMemberLocations.None" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4754c-141">Tę wartość można ustawić <xref:System.Xaml.XamlDirective.%23ctor%28System.Collections.Generic.IEnumerable%7BSystem.String%7D%2CSystem.String%2CSystem.Xaml.XamlType%2CSystem.Xaml.Schema.XamlValueConverter%7BSystem.ComponentModel.TypeConverter%7D%2CSystem.Xaml.Schema.AllowedMemberLocations%29> sygnatury konstruktora.</span><span class="sxs-lookup"><span data-stu-id="4754c-141">You can set this value in the <xref:System.Xaml.XamlDirective.%23ctor%28System.Collections.Generic.IEnumerable%7BSystem.String%7D%2CSystem.String%2CSystem.Xaml.XamlType%2CSystem.Xaml.Schema.XamlValueConverter%7BSystem.ComponentModel.TypeConverter%7D%2CSystem.Xaml.Schema.AllowedMemberLocations%29> constructor signature.</span></span> <span data-ttu-id="4754c-142">Jeśli skonstruować za pomocą <xref:System.Xaml.XamlDirective.%23ctor%28System.String%2CSystem.String%29> sygnatury konstruktora <xref:System.Xaml.XamlDirective.AllowedLocation%2A> wartość dla tego wystąpienia jest <xref:System.Xaml.Schema.AllowedMemberLocations.Any>.</span><span class="sxs-lookup"><span data-stu-id="4754c-142">If you construct by using the <xref:System.Xaml.XamlDirective.%23ctor%28System.String%2CSystem.String%29> constructor signature, the <xref:System.Xaml.XamlDirective.AllowedLocation%2A> value for the instance is <xref:System.Xaml.Schema.AllowedMemberLocations.Any>.</span></span> <span data-ttu-id="4754c-143">Jednak wystąpienie zawsze raporty <xref:System.Xaml.XamlMember.IsUnknown%2A> jako `true`.</span><span class="sxs-lookup"><span data-stu-id="4754c-143">However, the instance always reports <xref:System.Xaml.XamlMember.IsUnknown%2A> as `true`.</span></span> <span data-ttu-id="4754c-144">Zwykle dotyczy to próby zapisu obiektu wykresach i również ma wpływ na inne praktyczne zastosowania <xref:System.Xaml.XamlMember> wartość.</span><span class="sxs-lookup"><span data-stu-id="4754c-144">This behavior typically affects attempts to write object graphs and also affects other practical uses of a <xref:System.Xaml.XamlMember> value.</span></span>  
  
 <span data-ttu-id="4754c-145">Zwykle będzie nie utworzymy przypadku dyrektywy XAML gdzie <xref:System.Xaml.XamlDirective.AllowedLocation%2A> jest <xref:System.Xaml.Schema.AllowedMemberLocations.None?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="4754c-145">You typically would not construct a XAML directive case where <xref:System.Xaml.XamlDirective.AllowedLocation%2A> is <xref:System.Xaml.Schema.AllowedMemberLocations.None?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlDirective.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="4754c-146">Zwraca wartość skrótu dla tego obiektu.</span><span class="sxs-lookup"><span data-stu-id="4754c-146">Returns the hash code for this object.</span></span></summary>
        <returns><span data-ttu-id="4754c-147">Liczba całkowita wartość skrótu.</span><span class="sxs-lookup"><span data-stu-id="4754c-147">An integer hash code.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetXamlNamespaces">
      <MemberSignature Language="C#" Value="public override System.Collections.Generic.IList&lt;string&gt; GetXamlNamespaces ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Collections.Generic.IList`1&lt;string&gt; GetXamlNamespaces() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlDirective.GetXamlNamespaces" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetXamlNamespaces () As IList(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Collections::Generic::IList&lt;System::String ^&gt; ^ GetXamlNamespaces();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="4754c-148">Zwraca listę przestrzeni nazw XAML, gdzie może istnieć tego elementu członkowskiego XAML.</span><span class="sxs-lookup"><span data-stu-id="4754c-148">Returns a list of XAML namespaces where this XAML member can exist.</span></span></summary>
        <returns><span data-ttu-id="4754c-149">Lista identyfikatorów przestrzeni nazw XAML, jako ciągi.</span><span class="sxs-lookup"><span data-stu-id="4754c-149">A list of XAML namespace identifiers, as strings.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4754c-150">Identyfikatory przestrzeni nazw XAML są ciągów, które zwykle są wyświetlane w postaci ciągu identyfikatora URI (Uniform Resource) zgodnie ze zwykłymi konwencje dla przestrzeni nazw XAML i XML.</span><span class="sxs-lookup"><span data-stu-id="4754c-150">The XAML namespace identifiers are strings that typically appear in the Uniform Resource Identifier (URI) string form according to the usual conventions for XAML and XML namespaces.</span></span> <span data-ttu-id="4754c-151">Jeśli lista zawiera więcej niż jeden element, pierwszy element w zestawie jest zwykle odpowiednich nazw XAML głównej w celu przetwarzania i innych elementów są elementy alternatywne.</span><span class="sxs-lookup"><span data-stu-id="4754c-151">If the list contains more than one item, the first item in the set is usually the relevant primary XAML namespace for processing purposes, and the other items are alternates.</span></span> <span data-ttu-id="4754c-152"><xref:System.Xaml.XamlMember.PreferredXamlNamespace%2A?displayProperty=nameWithType> zależy to porządkowania.</span><span class="sxs-lookup"><span data-stu-id="4754c-152"><xref:System.Xaml.XamlMember.PreferredXamlNamespace%2A?displayProperty=nameWithType> relies on this ordering.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupCustomAttributeProvider">
      <MemberSignature Language="C#" Value="protected override sealed System.Reflection.ICustomAttributeProvider LookupCustomAttributeProvider ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Reflection.ICustomAttributeProvider LookupCustomAttributeProvider() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlDirective.LookupCustomAttributeProvider" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides NotOverridable Function LookupCustomAttributeProvider () As ICustomAttributeProvider" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Reflection::ICustomAttributeProvider ^ LookupCustomAttributeProvider();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.ICustomAttributeProvider</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="4754c-153">Zwraca <see cref="T:System.Reflection.ICustomAttributeProvider" /> implementacji.</span><span class="sxs-lookup"><span data-stu-id="4754c-153">Returns an <see cref="T:System.Reflection.ICustomAttributeProvider" /> implementation.</span></span> <span data-ttu-id="4754c-154">Ta implementacja zawsze zwraca <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="4754c-154">This implementation always returns <see langword="null" />.</span></span></summary>
        <returns><span data-ttu-id="4754c-155">Zawsze zwraca <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="4754c-155">Always returns <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4754c-156">Ponieważ dyrektywy XAML nie może mieć atrybutów niestandardowych, ta implementacja zawsze zwraca `null`.</span><span class="sxs-lookup"><span data-stu-id="4754c-156">Because a XAML directive cannot have custom attributes, this implementation always returns `null`.</span></span> <span data-ttu-id="4754c-157"><xref:System.Xaml.XamlDirective> uszczelnienia ten wirtualny element członkowski; w związku z tym wszystkie <xref:System.Xaml.XamlDirective> typy oraz wszystkich wstępnie zdefiniowanych dyrektyw XAML musi używać tego zachowania.</span><span class="sxs-lookup"><span data-stu-id="4754c-157"><xref:System.Xaml.XamlDirective> seals this virtual member; therefore, all <xref:System.Xaml.XamlDirective> types and all predefined XAML directives must use this behavior.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupDeferringLoader">
      <MemberSignature Language="C#" Value="protected override sealed System.Xaml.Schema.XamlValueConverter&lt;System.Xaml.XamlDeferringLoader&gt; LookupDeferringLoader ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Xaml.Schema.XamlValueConverter`1&lt;class System.Xaml.XamlDeferringLoader&gt; LookupDeferringLoader() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlDirective.LookupDeferringLoader" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides NotOverridable Function LookupDeferringLoader () As XamlValueConverter(Of XamlDeferringLoader)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Xaml::Schema::XamlValueConverter&lt;System::Xaml::XamlDeferringLoader ^&gt; ^ LookupDeferringLoader();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.Schema.XamlValueConverter&lt;System.Xaml.XamlDeferringLoader&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="4754c-158">Zwraca <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> obiektu, który jest używany podczas ładowanie odłożone zadeklarowany XAML obiektów.</span><span class="sxs-lookup"><span data-stu-id="4754c-158">Returns a <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> object, which is used during deferred loading of XAML-declared objects.</span></span> <span data-ttu-id="4754c-159">Ta implementacja zawsze zwraca <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="4754c-159">This implementation always returns <see langword="null" />.</span></span></summary>
        <returns><span data-ttu-id="4754c-160">Zawsze zwraca <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="4754c-160">Always returns <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4754c-161">Ponieważ dyrektywy nie mają odłożone ładowanie, zawsze ta implementacja zwraca `null`.</span><span class="sxs-lookup"><span data-stu-id="4754c-161">Because a directive cannot have deferred loading, this implementation always returns `null`.</span></span> <span data-ttu-id="4754c-162"><xref:System.Xaml.XamlDirective> uszczelnienia ten wirtualny element członkowski; w związku z tym wszystkie <xref:System.Xaml.XamlDirective> typy oraz wszystkich wstępnie zdefiniowanych dyrektyw XAML musi używać tego zachowania.</span><span class="sxs-lookup"><span data-stu-id="4754c-162"><xref:System.Xaml.XamlDirective> seals this virtual member; therefore, all <xref:System.Xaml.XamlDirective> types and all predefined XAML directives must use this behavior.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlMember.DeferringLoader" />
      </Docs>
    </Member>
    <Member MemberName="LookupDependsOn">
      <MemberSignature Language="C#" Value="protected override sealed System.Collections.Generic.IList&lt;System.Xaml.XamlMember&gt; LookupDependsOn ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Collections.Generic.IList`1&lt;class System.Xaml.XamlMember&gt; LookupDependsOn() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlDirective.LookupDependsOn" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides NotOverridable Function LookupDependsOn () As IList(Of XamlMember)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Collections::Generic::IList&lt;System::Xaml::XamlMember ^&gt; ^ LookupDependsOn();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Xaml.XamlMember&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="4754c-163">Zwraca listę <see cref="T:System.Xaml.XamlMember" /> obiektów.</span><span class="sxs-lookup"><span data-stu-id="4754c-163">Returns a list of <see cref="T:System.Xaml.XamlMember" /> objects.</span></span> <span data-ttu-id="4754c-164">Lista raportów elementów członkowskich, do których istnieją relacje zależności dla kolejność inicjowania względem to <see cref="T:System.Xaml.XamlMember" />.</span><span class="sxs-lookup"><span data-stu-id="4754c-164">The list reports the members where dependency relationships for initialization order exist relative to this <see cref="T:System.Xaml.XamlMember" />.</span></span> <span data-ttu-id="4754c-165">Ta implementacja zawsze zwraca <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="4754c-165">This implementation always returns <see langword="null" />.</span></span></summary>
        <returns><span data-ttu-id="4754c-166">Zawsze zwraca <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="4754c-166">Always returns <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4754c-167">Ponieważ dyrektywy XAML nie może mieć kolejność inicjowania, zawsze ta implementacja zwraca `null`.</span><span class="sxs-lookup"><span data-stu-id="4754c-167">Because a XAML directive cannot have initialization order, this implementation always returns `null`.</span></span> <span data-ttu-id="4754c-168"><xref:System.Xaml.XamlDirective> uszczelnienia ten wirtualny element członkowski; w związku z tym wszystkie <xref:System.Xaml.XamlDirective> typy oraz wszystkich wstępnie zdefiniowanych dyrektyw XAML musi używać tego zachowania.</span><span class="sxs-lookup"><span data-stu-id="4754c-168"><xref:System.Xaml.XamlDirective> seals this virtual member; therefore, all <xref:System.Xaml.XamlDirective> types and all predefined XAML directives must use this behavior.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlMember.DependsOn" />
      </Docs>
    </Member>
    <Member MemberName="LookupInvoker">
      <MemberSignature Language="C#" Value="protected override sealed System.Xaml.Schema.XamlMemberInvoker LookupInvoker ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Xaml.Schema.XamlMemberInvoker LookupInvoker() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlDirective.LookupInvoker" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides NotOverridable Function LookupInvoker () As XamlMemberInvoker" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Xaml::Schema::XamlMemberInvoker ^ LookupInvoker();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.Schema.XamlMemberInvoker</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="4754c-169">Zwraca <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> skojarzony z <see cref="T:System.Xaml.XamlDirective" />.</span><span class="sxs-lookup"><span data-stu-id="4754c-169">Returns the <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> that is associated with a <see cref="T:System.Xaml.XamlDirective" />.</span></span></summary>
        <returns><span data-ttu-id="4754c-170"><see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> Informacje na temat tego <see cref="T:System.Xaml.XamlMember" />.</span><span class="sxs-lookup"><span data-stu-id="4754c-170">The <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> information for this <see cref="T:System.Xaml.XamlMember" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4754c-171">Ta metoda może być wywoływana przez wywołania <xref:System.Xaml.XamlMember.Invoker%2A>.</span><span class="sxs-lookup"><span data-stu-id="4754c-171">This method may be invoked by calls to <xref:System.Xaml.XamlMember.Invoker%2A>.</span></span>  
  
 <span data-ttu-id="4754c-172">Ta implementacja zwraca statyczne wewnętrzne <xref:System.Xaml.Schema.XamlMemberInvoker> wartość, która jest specyficzna dla dyrektywy w systemie typów języka XAML.</span><span class="sxs-lookup"><span data-stu-id="4754c-172">This implementation returns an internal static <xref:System.Xaml.Schema.XamlMemberInvoker> value that is specific to directives in the XAML type system.</span></span> <span data-ttu-id="4754c-173"><xref:System.Xaml.XamlDirective> uszczelnienia ten wirtualny element członkowski; w związku z tym wszystkie <xref:System.Xaml.XamlDirective> typy oraz wszystkich wstępnie zdefiniowanych dyrektyw XAML musi używać tego zachowania.</span><span class="sxs-lookup"><span data-stu-id="4754c-173"><xref:System.Xaml.XamlDirective> seals this virtual member; therefore, all <xref:System.Xaml.XamlDirective> types and all predefined XAML directives must use this behavior.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlMember.Invoker" />
      </Docs>
    </Member>
    <Member MemberName="LookupIsAmbient">
      <MemberSignature Language="C#" Value="protected override sealed bool LookupIsAmbient ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool LookupIsAmbient() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlDirective.LookupIsAmbient" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides NotOverridable Function LookupIsAmbient () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool LookupIsAmbient();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="4754c-174">Zwraca czy to <see cref="T:System.Xaml.XamlMember" /> został zgłoszony jako właściwością otoczenia.</span><span class="sxs-lookup"><span data-stu-id="4754c-174">Returns whether this <see cref="T:System.Xaml.XamlMember" /> is reported as an ambient property.</span></span></summary>
        <returns><span data-ttu-id="4754c-175">Zawsze zwraca <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="4754c-175">Always returns <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4754c-176">Ponieważ dyrektywy XAML nie może być typem otoczenia, zawsze ta implementacja zwraca `false`.</span><span class="sxs-lookup"><span data-stu-id="4754c-176">Because a XAML directive cannot be an ambient type, this implementation always returns `false`.</span></span> <span data-ttu-id="4754c-177"><xref:System.Xaml.XamlDirective> uszczelnienia ten wirtualny element członkowski; w związku z tym wszystkie <xref:System.Xaml.XamlDirective> typy oraz wszystkich wstępnie zdefiniowanych dyrektyw XAML musi używać tego zachowania.</span><span class="sxs-lookup"><span data-stu-id="4754c-177"><xref:System.Xaml.XamlDirective> seals this virtual member; therefore, all <xref:System.Xaml.XamlDirective> types and all predefined XAML directives must use this behavior.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Xaml.XamlMember.LookupIsAmbient" />
      </Docs>
    </Member>
    <Member MemberName="LookupIsEvent">
      <MemberSignature Language="C#" Value="protected override sealed bool LookupIsEvent ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool LookupIsEvent() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlDirective.LookupIsEvent" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides NotOverridable Function LookupIsEvent () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool LookupIsEvent();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="4754c-178">Zwraca czy to <see cref="T:System.Xaml.XamlDirective" /> reprezentuje zdarzenie.</span><span class="sxs-lookup"><span data-stu-id="4754c-178">Returns whether this <see cref="T:System.Xaml.XamlDirective" /> represents an event.</span></span></summary>
        <returns><span data-ttu-id="4754c-179">Zawsze zwraca <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="4754c-179">Always returns <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4754c-180"><xref:System.Xaml.XamlDirective> uszczelnienia ten wirtualny element członkowski; w związku z tym wszystkie <xref:System.Xaml.XamlDirective> typy oraz wszystkich wstępnie zdefiniowanych dyrektyw XAML musi używać tego zachowania.</span><span class="sxs-lookup"><span data-stu-id="4754c-180"><xref:System.Xaml.XamlDirective> seals this virtual member; therefore, all <xref:System.Xaml.XamlDirective> types and all predefined XAML directives must use this behavior.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlMember.IsEvent" />
      </Docs>
    </Member>
    <Member MemberName="LookupIsReadOnly">
      <MemberSignature Language="C#" Value="protected override sealed bool LookupIsReadOnly ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool LookupIsReadOnly() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlDirective.LookupIsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides NotOverridable Function LookupIsReadOnly () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool LookupIsReadOnly();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="4754c-181">Zwraca czy to <see cref="T:System.Xaml.XamlDirective" /> reprezentuje właściwość przeznaczone tylko do odczytu.</span><span class="sxs-lookup"><span data-stu-id="4754c-181">Returns whether this <see cref="T:System.Xaml.XamlDirective" /> represents an intended read-only property.</span></span></summary>
        <returns><span data-ttu-id="4754c-182">Zawsze zwraca <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="4754c-182">Always returns <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4754c-183">Zgodnie z definicją dyrektywy są można ustawić.</span><span class="sxs-lookup"><span data-stu-id="4754c-183">By definition, directives are settable.</span></span> <span data-ttu-id="4754c-184"><xref:System.Xaml.XamlDirective> uszczelnienia ten wirtualny element członkowski; w związku z tym wszystkie <xref:System.Xaml.XamlDirective> typy oraz wszystkich wstępnie zdefiniowanych dyrektyw XAML musi używać tego zachowania.</span><span class="sxs-lookup"><span data-stu-id="4754c-184"><xref:System.Xaml.XamlDirective> seals this virtual member; therefore, all <xref:System.Xaml.XamlDirective> types and all predefined XAML directives must use this behavior.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlMember.IsReadOnly" />
      </Docs>
    </Member>
    <Member MemberName="LookupIsReadPublic">
      <MemberSignature Language="C#" Value="protected override sealed bool LookupIsReadPublic ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool LookupIsReadPublic() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlDirective.LookupIsReadPublic" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides NotOverridable Function LookupIsReadPublic () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool LookupIsReadPublic();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="4754c-185">Zwraca czy to <see cref="T:System.Xaml.XamlDirective" /> reprezentuje właściwość, która ma publiczny <see langword="get" /> metody dostępu.</span><span class="sxs-lookup"><span data-stu-id="4754c-185">Returns whether this <see cref="T:System.Xaml.XamlDirective" /> represents a property that has a public <see langword="get" /> accessor.</span></span></summary>
        <returns><span data-ttu-id="4754c-186">Zawsze zwraca <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="4754c-186">Always returns <see langword="true" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4754c-187"><xref:System.Xaml.XamlDirective> uszczelnienia ten wirtualny element członkowski; w związku z tym wszystkie <xref:System.Xaml.XamlDirective> typy oraz wszystkich wstępnie zdefiniowanych dyrektyw XAML musi używać tego zachowania.</span><span class="sxs-lookup"><span data-stu-id="4754c-187"><xref:System.Xaml.XamlDirective> seals this virtual member; therefore, all <xref:System.Xaml.XamlDirective> types and all predefined XAML directives must use this behavior.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlMember.IsReadPublic" />
      </Docs>
    </Member>
    <Member MemberName="LookupIsUnknown">
      <MemberSignature Language="C#" Value="protected override sealed bool LookupIsUnknown ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool LookupIsUnknown() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlDirective.LookupIsUnknown" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides NotOverridable Function LookupIsUnknown () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool LookupIsUnknown();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="4754c-188">Zwraca czy to <see cref="T:System.Xaml.XamlDirective" /> reprezentuje element członkowski, który nie jest rozpoznawana przez bazowego systemu, który jest używany do rozpoznawania typu i element członkowski.</span><span class="sxs-lookup"><span data-stu-id="4754c-188">Returns whether this <see cref="T:System.Xaml.XamlDirective" /> represents a member that is not resolvable by the backing system that is used for type and member resolution.</span></span></summary>
        <returns>
          <span data-ttu-id="4754c-189"><see langword="true" /> Jeśli <see cref="T:System.Xaml.XamlDirective" /> reprezentuje nie można rozpoznać elementu członkowskiego; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="4754c-189"><see langword="true" /> if this <see cref="T:System.Xaml.XamlDirective" /> represents a non-resolvable member; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4754c-190"><xref:System.Xaml.XamlDirective> Implementacji tylko wywołuje podstawowej i nie robi nic więcej.</span><span class="sxs-lookup"><span data-stu-id="4754c-190">The <xref:System.Xaml.XamlDirective> implementation only calls base and does nothing more.</span></span> <span data-ttu-id="4754c-191">Podstawowa implementacja zwraca wyniki w następującej kolejności: wyniki są oparte na podstawie odbicia wewnętrznych; lub wyniki są oparte na sprawdzanie wartości null <xref:System.Xaml.XamlMember.UnderlyingMember%2A>.</span><span class="sxs-lookup"><span data-stu-id="4754c-191">The base implementation returns the results in this order: the results are based on internal reflection; or the results are based on checking for a null value of the <xref:System.Xaml.XamlMember.UnderlyingMember%2A>.</span></span> <span data-ttu-id="4754c-192"><xref:System.Xaml.XamlDirective> Implementacji uszczelnienia to wirtualny element członkowski; w związku z tym wszystkie <xref:System.Xaml.XamlDirective> typy oraz wszystkich wstępnie zdefiniowanych dyrektyw XAML musi używać tego zachowania.</span><span class="sxs-lookup"><span data-stu-id="4754c-192">The <xref:System.Xaml.XamlDirective> implementation seals this virtual member; therefore, all <xref:System.Xaml.XamlDirective> types and all predefined XAML directives must use this behavior.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupIsWriteOnly">
      <MemberSignature Language="C#" Value="protected override sealed bool LookupIsWriteOnly ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool LookupIsWriteOnly() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlDirective.LookupIsWriteOnly" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides NotOverridable Function LookupIsWriteOnly () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool LookupIsWriteOnly();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="4754c-193">Zwraca czy to <see cref="T:System.Xaml.XamlDirective" /> reprezentuje właściwość przeznaczone tylko do zapisu.</span><span class="sxs-lookup"><span data-stu-id="4754c-193">Returns whether this <see cref="T:System.Xaml.XamlDirective" /> represents an intended write-only property.</span></span></summary>
        <returns><span data-ttu-id="4754c-194">Zawsze zwraca <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="4754c-194">Always returns <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4754c-195"><xref:System.Xaml.XamlDirective> uszczelnienia ten wirtualny element członkowski; w związku z tym wszystkie <xref:System.Xaml.XamlDirective> typy oraz wszystkich wstępnie zdefiniowanych dyrektyw XAML musi używać tego zachowania.</span><span class="sxs-lookup"><span data-stu-id="4754c-195"><xref:System.Xaml.XamlDirective> seals this virtual member; therefore, all <xref:System.Xaml.XamlDirective> types and all predefined XAML directives must use this behavior.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlMember.IsWriteOnly" />
      </Docs>
    </Member>
    <Member MemberName="LookupIsWritePublic">
      <MemberSignature Language="C#" Value="protected override sealed bool LookupIsWritePublic ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool LookupIsWritePublic() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlDirective.LookupIsWritePublic" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides NotOverridable Function LookupIsWritePublic () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool LookupIsWritePublic();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="4754c-196">Zwraca czy to <see cref="T:System.Xaml.XamlDirective" /> reprezentuje właściwość, która ma publiczny <see langword="set" /> metody dostępu.</span><span class="sxs-lookup"><span data-stu-id="4754c-196">Returns whether this <see cref="T:System.Xaml.XamlDirective" /> represents a property that has a public <see langword="set" /> accessor.</span></span></summary>
        <returns><span data-ttu-id="4754c-197">Zawsze zwraca <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="4754c-197">Always returns <see langword="true" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4754c-198"><xref:System.Xaml.XamlDirective> uszczelnienia ten wirtualny element członkowski; w związku z tym wszystkie <xref:System.Xaml.XamlDirective> typy oraz wszystkich wstępnie zdefiniowanych dyrektyw XAML musi używać tego zachowania.</span><span class="sxs-lookup"><span data-stu-id="4754c-198"><xref:System.Xaml.XamlDirective> seals this virtual member; therefore, all <xref:System.Xaml.XamlDirective> types and all predefined XAML directives must use this behavior.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlMember.IsWritePublic" />
      </Docs>
    </Member>
    <Member MemberName="LookupTargetType">
      <MemberSignature Language="C#" Value="protected override sealed System.Xaml.XamlType LookupTargetType ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Xaml.XamlType LookupTargetType() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlDirective.LookupTargetType" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides NotOverridable Function LookupTargetType () As XamlType" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Xaml::XamlType ^ LookupTargetType();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlType</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="4754c-199">Zwraca <see cref="T:System.Xaml.XamlType" /> typu gdzie <see cref="T:System.Xaml.XamlMember" /> może istnieć.</span><span class="sxs-lookup"><span data-stu-id="4754c-199">Returns the <see cref="T:System.Xaml.XamlType" /> of the type where the <see cref="T:System.Xaml.XamlMember" /> can exist.</span></span> <span data-ttu-id="4754c-200">Ta implementacja zawsze zwraca <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="4754c-200">This implementation always returns <see langword="null" />.</span></span></summary>
        <returns><span data-ttu-id="4754c-201">Zawsze zwraca <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="4754c-201">Always returns <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4754c-202">Typy elementów docelowych nie są istotne dla dyrektywy; w związku z tym ta implementacja zawsze zwraca `null`.</span><span class="sxs-lookup"><span data-stu-id="4754c-202">Target types are not relevant for directives; therefore, this implementation always returns `null`.</span></span> <span data-ttu-id="4754c-203"><xref:System.Xaml.XamlDirective> uszczelnienia ten wirtualny element członkowski; w związku z tym wszystkie <xref:System.Xaml.XamlDirective> typy oraz wszystkich wstępnie zdefiniowanych dyrektyw XAML musi używać tego zachowania.</span><span class="sxs-lookup"><span data-stu-id="4754c-203"><xref:System.Xaml.XamlDirective> seals this virtual member; therefore, all <xref:System.Xaml.XamlDirective> types and all predefined XAML directives must use this behavior.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlMember.TargetType" />
      </Docs>
    </Member>
    <Member MemberName="LookupType">
      <MemberSignature Language="C#" Value="protected override sealed System.Xaml.XamlType LookupType ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Xaml.XamlType LookupType() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlDirective.LookupType" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides NotOverridable Function LookupType () As XamlType" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Xaml::XamlType ^ LookupType();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlType</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="4754c-204">Zwraca <see cref="T:System.Xaml.XamlType" /> typu, który jest używany przez element członkowski.</span><span class="sxs-lookup"><span data-stu-id="4754c-204">Returns the <see cref="T:System.Xaml.XamlType" /> of the type that is used by the member.</span></span></summary>
        <returns><span data-ttu-id="4754c-205"><see cref="T:System.Xaml.XamlType" /> Typu, który jest używany przez element członkowski.</span><span class="sxs-lookup"><span data-stu-id="4754c-205">The <see cref="T:System.Xaml.XamlType" /> of the type that is used by the member.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4754c-206"><xref:System.Xaml.XamlDirective> Implementacji tylko wywołuje podstawowej i nie robi nic więcej.</span><span class="sxs-lookup"><span data-stu-id="4754c-206">The <xref:System.Xaml.XamlDirective> implementation only calls base and does nothing more.</span></span> <span data-ttu-id="4754c-207">Podstawowa implementacja zwraca wyniki na podstawie odbicia wewnętrznych lub sprawdzanie wartości null <xref:System.Xaml.XamlMember.UnderlyingMember%2A>, w tej kolejności przetwarzania.</span><span class="sxs-lookup"><span data-stu-id="4754c-207">The base implementation returns results based either on internal reflection, or checking for a null value of <xref:System.Xaml.XamlMember.UnderlyingMember%2A>, processing in that order.</span></span> <span data-ttu-id="4754c-208"><xref:System.Xaml.XamlDirective> uszczelnienia ten wirtualny element członkowski; w związku z tym wszystkie <xref:System.Xaml.XamlDirective> typy oraz wszystkich wstępnie zdefiniowanych dyrektyw XAML musi używać tego zachowania.</span><span class="sxs-lookup"><span data-stu-id="4754c-208"><xref:System.Xaml.XamlDirective> seals this virtual member; therefore, all <xref:System.Xaml.XamlDirective> types and all predefined XAML directives must use this behavior.</span></span>  
  
 <span data-ttu-id="4754c-209">Zobacz uwagi w <xref:System.Xaml.XamlMember.LookupType%2A?displayProperty=nameWithType> uzyskać więcej informacji o informacjach <xref:System.Xaml.XamlMember.Type%2A> niesie.</span><span class="sxs-lookup"><span data-stu-id="4754c-209">See Remarks in <xref:System.Xaml.XamlMember.LookupType%2A?displayProperty=nameWithType> for more information about what information <xref:System.Xaml.XamlMember.Type%2A> carries.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlMember.Type" />
      </Docs>
    </Member>
    <Member MemberName="LookupTypeConverter">
      <MemberSignature Language="C#" Value="protected override sealed System.Xaml.Schema.XamlValueConverter&lt;System.ComponentModel.TypeConverter&gt; LookupTypeConverter ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Xaml.Schema.XamlValueConverter`1&lt;class System.ComponentModel.TypeConverter&gt; LookupTypeConverter() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlDirective.LookupTypeConverter" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides NotOverridable Function LookupTypeConverter () As XamlValueConverter(Of TypeConverter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Xaml::Schema::XamlValueConverter&lt;System::ComponentModel::TypeConverter ^&gt; ^ LookupTypeConverter();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.Schema.XamlValueConverter&lt;System.ComponentModel.TypeConverter&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="4754c-210">Zwraca implementacji konwertera typu, który jest skojarzony z tym <see cref="T:System.Xaml.XamlDirective" />.</span><span class="sxs-lookup"><span data-stu-id="4754c-210">Returns a type converter implementation that is associated with this <see cref="T:System.Xaml.XamlDirective" />.</span></span></summary>
        <returns><span data-ttu-id="4754c-211">A <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> wystąpienia, które ma <see cref="T:System.ComponentModel.TypeConverter" /> ograniczenia; lub <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="4754c-211">A <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> instance that has <see cref="T:System.ComponentModel.TypeConverter" /> constraint; or <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4754c-212"><xref:System.Xaml.XamlDirective> Implementacji tylko wywołuje podstawowej i nie robi nic więcej.</span><span class="sxs-lookup"><span data-stu-id="4754c-212">The <xref:System.Xaml.XamlDirective> implementation only calls base and does nothing more.</span></span> <span data-ttu-id="4754c-213">Zobacz <xref:System.Xaml.XamlMember.LookupTypeConverter%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="4754c-213">See <xref:System.Xaml.XamlMember.LookupTypeConverter%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="4754c-214"><xref:System.Xaml.XamlDirective> uszczelnienia ten wirtualny element członkowski; w związku z tym wszystkie <xref:System.Xaml.XamlDirective> typy oraz wszystkich wstępnie zdefiniowanych dyrektyw XAML musi używać tego zachowania.</span><span class="sxs-lookup"><span data-stu-id="4754c-214"><xref:System.Xaml.XamlDirective> seals this virtual member; therefore, all <xref:System.Xaml.XamlDirective> types and all predefined XAML directives must use this behavior.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlMember.Type" />
      </Docs>
    </Member>
    <Member MemberName="LookupUnderlyingGetter">
      <MemberSignature Language="C#" Value="protected override sealed System.Reflection.MethodInfo LookupUnderlyingGetter ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Reflection.MethodInfo LookupUnderlyingGetter() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlDirective.LookupUnderlyingGetter" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides NotOverridable Function LookupUnderlyingGetter () As MethodInfo" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Reflection::MethodInfo ^ LookupUnderlyingGetter();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="4754c-215">Zwraca <see langword="get" /> dostępu, który jest skojarzony z tym <see cref="T:System.Xaml.XamlDirective" />.</span><span class="sxs-lookup"><span data-stu-id="4754c-215">Returns a <see langword="get" /> accessor that is associated with this <see cref="T:System.Xaml.XamlDirective" />.</span></span> <span data-ttu-id="4754c-216">Ta implementacja zawsze zwraca <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="4754c-216">This implementation always returns <see langword="null" />.</span></span></summary>
        <returns><span data-ttu-id="4754c-217">Zawsze zwraca <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="4754c-217">Always returns <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4754c-218"><xref:System.Xaml.XamlDirective> uszczelnienia ten wirtualny element członkowski; w związku z tym wszystkie <xref:System.Xaml.XamlDirective> typy oraz wszystkich wstępnie zdefiniowanych dyrektyw XAML musi używać tego zachowania.</span><span class="sxs-lookup"><span data-stu-id="4754c-218"><xref:System.Xaml.XamlDirective> seals this virtual member; therefore, all <xref:System.Xaml.XamlDirective> types and all predefined XAML directives must use this behavior.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupUnderlyingMember">
      <MemberSignature Language="C#" Value="protected override sealed System.Reflection.MemberInfo LookupUnderlyingMember ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Reflection.MemberInfo LookupUnderlyingMember() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlDirective.LookupUnderlyingMember" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides NotOverridable Function LookupUnderlyingMember () As MemberInfo" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Reflection::MemberInfo ^ LookupUnderlyingMember();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MemberInfo</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="4754c-219">Zwraca odbicia CLR <see cref="T:System.Reflection.MemberInfo" /> skojarzonego z tym <see cref="T:System.Xaml.XamlDirective" />.</span><span class="sxs-lookup"><span data-stu-id="4754c-219">Returns a CLR reflection <see cref="T:System.Reflection.MemberInfo" /> that is associated with this <see cref="T:System.Xaml.XamlDirective" />.</span></span> <span data-ttu-id="4754c-220">Ta implementacja zawsze zwraca <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="4754c-220">This implementation always returns <see langword="null" />.</span></span></summary>
        <returns><span data-ttu-id="4754c-221">Zawsze zwraca <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="4754c-221">Always returns <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4754c-222"><xref:System.Xaml.XamlDirective> uszczelnienia ten wirtualny element członkowski; w związku z tym wszystkie <xref:System.Xaml.XamlDirective> typy oraz wszystkich wstępnie zdefiniowanych dyrektyw XAML musi używać tego zachowania.</span><span class="sxs-lookup"><span data-stu-id="4754c-222"><xref:System.Xaml.XamlDirective> seals this virtual member; therefore, all <xref:System.Xaml.XamlDirective> types and all predefined XAML directives must use this behavior.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlMember.UnderlyingMember" />
      </Docs>
    </Member>
    <Member MemberName="LookupUnderlyingSetter">
      <MemberSignature Language="C#" Value="protected override sealed System.Reflection.MethodInfo LookupUnderlyingSetter ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Reflection.MethodInfo LookupUnderlyingSetter() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlDirective.LookupUnderlyingSetter" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides NotOverridable Function LookupUnderlyingSetter () As MethodInfo" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Reflection::MethodInfo ^ LookupUnderlyingSetter();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="4754c-223">Zwraca <see langword="set" /> dostępu, który jest skojarzony z tym <see cref="T:System.Xaml.XamlDirective" />.</span><span class="sxs-lookup"><span data-stu-id="4754c-223">Returns a <see langword="set" /> accessor that is associated with this <see cref="T:System.Xaml.XamlDirective" />.</span></span> <span data-ttu-id="4754c-224">Ta implementacja zawsze zwraca <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="4754c-224">This implementation always returns <see langword="null" />.</span></span></summary>
        <returns><span data-ttu-id="4754c-225">Zawsze zwraca <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="4754c-225">Always returns <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4754c-226"><xref:System.Xaml.XamlDirective> uszczelnienia ten wirtualny element członkowski; w związku z tym wszystkie <xref:System.Xaml.XamlDirective> typy oraz wszystkich wstępnie zdefiniowanych dyrektyw XAML musi używać tego zachowania.</span><span class="sxs-lookup"><span data-stu-id="4754c-226"><xref:System.Xaml.XamlDirective> seals this virtual member; therefore, all <xref:System.Xaml.XamlDirective> types and all predefined XAML directives must use this behavior.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlDirective.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="4754c-227">Zwraca reprezentację ciągu tego <see cref="T:System.Xaml.XamlDirective" />.</span><span class="sxs-lookup"><span data-stu-id="4754c-227">Returns a string representation of this <see cref="T:System.Xaml.XamlDirective" />.</span></span></summary>
        <returns><span data-ttu-id="4754c-228">Reprezentacja ciągu tego <see cref="T:System.Xaml.XamlDirective" />.</span><span class="sxs-lookup"><span data-stu-id="4754c-228">A string representation of this <see cref="T:System.Xaml.XamlDirective" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4754c-229">Jeśli informacje o przestrzeni nazw XAML jest dostępny, ta implementacja zwraca ciąg kombinację <xref:System.Xaml.XamlMember.PreferredXamlNamespace%2A> i <xref:System.Xaml.XamlMember.Name%2A>.</span><span class="sxs-lookup"><span data-stu-id="4754c-229">If XAML namespace information is available, this implementation returns a string combination of <xref:System.Xaml.XamlMember.PreferredXamlNamespace%2A> and <xref:System.Xaml.XamlMember.Name%2A>.</span></span> <span data-ttu-id="4754c-230">Jeśli informacje o przestrzeni nazw XAML są niedostępne, ta implementacja zwraca <xref:System.Xaml.XamlMember.Name%2A>.</span><span class="sxs-lookup"><span data-stu-id="4754c-230">If XAML namespace information is unavailable, this implementation returns <xref:System.Xaml.XamlMember.Name%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>