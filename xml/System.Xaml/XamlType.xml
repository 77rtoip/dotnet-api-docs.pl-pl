<Type Name="XamlType" FullName="System.Xaml.XamlType">
  <Metadata><Meta Name="ms.openlocfilehash" Value="9126e2b5aa671d3bc34644c2069a96dbb7b9fb69" /><Meta Name="ms.sourcegitcommit" Value="74239f3977d28923e5020663db2c4e91601bea79" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="07/24/2019" /><Meta Name="ms.locfileid" Value="68439880" /></Metadata><TypeSignature Language="C#" Value="public class XamlType : IEquatable&lt;System.Xaml.XamlType&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XamlType extends System.Object implements class System.IEquatable`1&lt;class System.Xaml.XamlType&gt;" />
  <TypeSignature Language="DocId" Value="T:System.Xaml.XamlType" />
  <TypeSignature Language="VB.NET" Value="Public Class XamlType&#xA;Implements IEquatable(Of XamlType)" />
  <TypeSignature Language="C++ CLI" Value="public ref class XamlType : IEquatable&lt;System::Xaml::XamlType ^&gt;" />
  <TypeSignature Language="F#" Value="type XamlType = class&#xA;    interface IEquatable&lt;XamlType&gt;" />
  <AssemblyInfo>
    <AssemblyName>System.Xaml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IEquatable&lt;System.Xaml.XamlType&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Raport zawiera informacje o typach XAML w ramach ogólnego systemu XAML wdrożonego w .NET Framework usługach XAML.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wiele interfejsów API w <xref:System.Xaml.XamlType> klasie zawiera informacje o typach XAML, w których koncepcja, w której są zgłaszane, jest podobna do określonych sekcji specyfikacji języka XAML [MS-XAML].  
  
 <xref:System.Xaml.XamlType>jest szeroko używany w interfejsie API usług .NET Framework XAML do raportowania informacji o typie XAML. <xref:System.Xaml.XamlType>raportuje informacje o typie XAML, które mogą być potrzebne do pracy z wystąpieniem lub uzyskiwania dostępu do jego członków z poziomu strumienia węzła XAML lub podobnej reprezentacji języka XAML. Jego raportowanie jest podobne do sposobu, <xref:System.Type> w jaki w systemie typów CLR, wraz z klasami odbicia, takimi jak <xref:System.Reflection.MemberInfo>, zawierają informacje o typie CLR i jego użyciu.  
  
 Aby zwiększyć system typu XAML, można pochodzić od <xref:System.Xaml.XamlType>. Aby to zrobić efektywnie, może być również konieczne zaimplementowanie <xref:System.Xaml.Schema.XamlTypeInvoker>. <xref:System.Xaml.Schema.XamlTypeInvoker> Umożliwia korzystanie z uogólnionego systemu typu XAML do pracy z systemem typu, który jest określany jako część zachowania wywołania. Konkretna wartość <xref:System.Xaml.Schema.XamlTypeInvoker> niestandardowa umożliwia zredukowanie zależności od systemu typów CLR, które są używane przez zachowanie domyślne <xref:System.Xaml.XamlType> .  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Xaml.XamlType" /> klasy.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlType (Type underlyingType, System.Xaml.XamlSchemaContext schemaContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type underlyingType, class System.Xaml.XamlSchemaContext schemaContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.#ctor(System.Type,System.Xaml.XamlSchemaContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (underlyingType As Type, schemaContext As XamlSchemaContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlType(Type ^ underlyingType, System::Xaml::XamlSchemaContext ^ schemaContext);" />
      <MemberSignature Language="F#" Value="new System.Xaml.XamlType : Type * System.Xaml.XamlSchemaContext -&gt; System.Xaml.XamlType" Usage="new System.Xaml.XamlType (underlyingType, schemaContext)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="underlyingType" Type="System.Type" />
        <Parameter Name="schemaContext" Type="System.Xaml.XamlSchemaContext" />
      </Parameters>
      <Docs>
        <param name="underlyingType">Bazowe środowisko CLR <see cref="T:System.Type" /> dla typu XAML, który ma zostać skonstruowany.</param>
        <param name="schemaContext">Kontekst schematu XAML dla czytników XAML lub autorów XAML.</param>
        <summary>Inicjuje nowe wystąpienie <see cref="T:System.Xaml.XamlType" /> klasy na podstawie podstawowych informacji o typie CLR.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Jeden lub więcej <paramref name="underlyingType" /> <paramref name="schemaContext" />lub. <see langword="null" /></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected XamlType (string typeName, System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt; typeArguments, System.Xaml.XamlSchemaContext schemaContext);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(string typeName, class System.Collections.Generic.IList`1&lt;class System.Xaml.XamlType&gt; typeArguments, class System.Xaml.XamlSchemaContext schemaContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.#ctor(System.String,System.Collections.Generic.IList{System.Xaml.XamlType},System.Xaml.XamlSchemaContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (typeName As String, typeArguments As IList(Of XamlType), schemaContext As XamlSchemaContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; XamlType(System::String ^ typeName, System::Collections::Generic::IList&lt;System::Xaml::XamlType ^&gt; ^ typeArguments, System::Xaml::XamlSchemaContext ^ schemaContext);" />
      <MemberSignature Language="F#" Value="new System.Xaml.XamlType : string * System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt; * System.Xaml.XamlSchemaContext -&gt; System.Xaml.XamlType" Usage="new System.Xaml.XamlType (typeName, typeArguments, schemaContext)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="typeName" Type="System.String" />
        <Parameter Name="typeArguments" Type="System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt;" />
        <Parameter Name="schemaContext" Type="System.Xaml.XamlSchemaContext" />
      </Parameters>
      <Docs>
        <param name="typeName">Nazwa typu, który ma zostać utworzony.</param>
        <param name="typeArguments">Argumenty typu dla elementu <see cref="T:System.Xaml.XamlType" /> , który reprezentuje typ ogólny. Może być (i często) <see langword="null" />, co oznacza, że typ reprezentowany nie jest typem ogólnym.</param>
        <param name="schemaContext">Kontekst schematu XAML dla czytników XAML i autorów XAML.</param>
        <summary>Inicjuje nowe wystąpienie <see cref="T:System.Xaml.XamlType" /> klasy na podstawie nazwy ciągu dla tego typu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jest to chroniony Konstruktor. Nie istnieją żadne bieżące publiczne klasy pochodne, które używają tej konkretnej ścieżki do konstrukcji. Jako <xref:System.Xaml.XamlType>użytkownik istniejącej, należy użyć innych podpisów konstruktora ( <xref:System.Xaml.XamlType.%23ctor%28System.Type%2CSystem.Xaml.XamlSchemaContext%29><xref:System.Xaml.XamlType.%23ctor%28System.Type%2CSystem.Xaml.XamlSchemaContext%2CSystem.Xaml.Schema.XamlTypeInvoker%29>, lub <xref:System.Xaml.XamlType.%23ctor%28System.String%2CSystem.String%2CSystem.Collections.Generic.IList%7BSystem.Xaml.XamlType%7D%2CSystem.Xaml.XamlSchemaContext%29>) do zainicjowania <xref:System.Xaml.XamlType> obiektu.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Jeden lub więcej <paramref name="typeName" /> <paramref name="schemaContext" />lub. <see langword="null" /></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlType (Type underlyingType, System.Xaml.XamlSchemaContext schemaContext, System.Xaml.Schema.XamlTypeInvoker invoker);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type underlyingType, class System.Xaml.XamlSchemaContext schemaContext, class System.Xaml.Schema.XamlTypeInvoker invoker) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.#ctor(System.Type,System.Xaml.XamlSchemaContext,System.Xaml.Schema.XamlTypeInvoker)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (underlyingType As Type, schemaContext As XamlSchemaContext, invoker As XamlTypeInvoker)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlType(Type ^ underlyingType, System::Xaml::XamlSchemaContext ^ schemaContext, System::Xaml::Schema::XamlTypeInvoker ^ invoker);" />
      <MemberSignature Language="F#" Value="new System.Xaml.XamlType : Type * System.Xaml.XamlSchemaContext * System.Xaml.Schema.XamlTypeInvoker -&gt; System.Xaml.XamlType" Usage="new System.Xaml.XamlType (underlyingType, schemaContext, invoker)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="underlyingType" Type="System.Type" />
        <Parameter Name="schemaContext" Type="System.Xaml.XamlSchemaContext" />
        <Parameter Name="invoker" Type="System.Xaml.Schema.XamlTypeInvoker" />
      </Parameters>
      <Docs>
        <param name="underlyingType">Typ podstawowy dla typu XAML do skonstruowania.</param>
        <param name="schemaContext">Kontekst schematu XAML dla czytnika XAML.</param>
        <param name="invoker">Implementacja, która obsługuje wywołania odbicia w <see cref="T:System.Xaml.XamlType" />czasie wykonywania względem. <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /></param>
        <summary>Inicjuje nowe wystąpienie <see cref="T:System.Xaml.XamlType" /> klasy na podstawie podstawowych informacji o typie <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> i implementacji.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Jeden lub więcej <paramref name="underlyingType" /> <paramref name="schemaContext" />lub. <see langword="null" /></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlType (string unknownTypeNamespace, string unknownTypeName, System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt; typeArguments, System.Xaml.XamlSchemaContext schemaContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string unknownTypeNamespace, string unknownTypeName, class System.Collections.Generic.IList`1&lt;class System.Xaml.XamlType&gt; typeArguments, class System.Xaml.XamlSchemaContext schemaContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.#ctor(System.String,System.String,System.Collections.Generic.IList{System.Xaml.XamlType},System.Xaml.XamlSchemaContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (unknownTypeNamespace As String, unknownTypeName As String, typeArguments As IList(Of XamlType), schemaContext As XamlSchemaContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlType(System::String ^ unknownTypeNamespace, System::String ^ unknownTypeName, System::Collections::Generic::IList&lt;System::Xaml::XamlType ^&gt; ^ typeArguments, System::Xaml::XamlSchemaContext ^ schemaContext);" />
      <MemberSignature Language="F#" Value="new System.Xaml.XamlType : string * string * System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt; * System.Xaml.XamlSchemaContext -&gt; System.Xaml.XamlType" Usage="new System.Xaml.XamlType (unknownTypeNamespace, unknownTypeName, typeArguments, schemaContext)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="unknownTypeNamespace" Type="System.String" />
        <Parameter Name="unknownTypeName" Type="System.String" />
        <Parameter Name="typeArguments" Type="System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt;" />
        <Parameter Name="schemaContext" Type="System.Xaml.XamlSchemaContext" />
      </Parameters>
      <Docs>
        <param name="unknownTypeNamespace">Przestrzeń nazw XAML dla typu jako ciąg.</param>
        <param name="unknownTypeName">Nazwa typu w podanej <paramref name="unknownTypeNamespace" /> przestrzeni nazw XAML.</param>
        <param name="typeArguments">Argumenty typu dla elementu <see cref="T:System.Xaml.XamlType" /> , który reprezentuje typ ogólny. Może być (i często) <see langword="null" />, co oznacza, że typ reprezentowany nie jest typem ogólnym.</param>
        <param name="schemaContext">Kontekst schematu XAML dla czytników XAML lub autorów XAML.</param>
        <summary>Inicjuje nowe wystąpienie <see cref="T:System.Xaml.XamlType" /> klasy na podstawie przestrzeni nazw XAML i nazwy ciągu dla tego typu. Ten konstruktor jest przeznaczony wyłącznie do celów analizy i zapisu w węzłach XAML, które są znane, aby nie miały kopii zapasowej w systemie typu pomocniczego i kontekście schematu XAML.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Tego konstruktora należy używać tylko dla typów "Unknown", w przypadku których typ XAML, który jest mapowany na system typu bazowego, jest niedostępny. Ten konstruktor może nie dawać wyniku, gdzie <xref:System.Xaml.XamlType.IsUnknown%2A?displayProperty=nameWithType> is `true`. Zamiast tego domyślna logika reflektora raportuje typ podstawowy <xref:System.Xaml.XamlLanguage.Object%2A?displayProperty=nameWithType>jako. Jednak takie zachowanie może ulec zmianie ze względu <xref:System.Xaml.XamlType.LookupIsUnknown%2A> na przesłonięcie.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Jeden lub więcej z <paramref name="unknownTypeNamespace" />, <paramref name="unknownTypeName" />lub <paramref name="schemaContext" />. <see langword="null" /></exception>
      </Docs>
    </Member>
    <Member MemberName="AllowedContentTypes">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt; AllowedContentTypes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;class System.Xaml.XamlType&gt; AllowedContentTypes" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.AllowedContentTypes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AllowedContentTypes As IList(Of XamlType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IList&lt;System::Xaml::XamlType ^&gt; ^ AllowedContentTypes { System::Collections::Generic::IList&lt;System::Xaml::XamlType ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AllowedContentTypes : System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt;" Usage="System.Xaml.XamlType.AllowedContentTypes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera kolekcję tylko do odczytu typów, których można użyć jako <see cref="P:System.Xaml.XamlType.ContentProperty" /> wartości tego <see cref="T:System.Xaml.XamlType" />elementu.</summary>
        <value>Kolekcja możliwych typów zawartości w trybie tylko do odczytu.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Typy, które można przypisać do określonego typu zawartości (na przykład przypisanie do typu podstawowego, który jest dozwolony typ zawartości) nie są uważane za wiele typów do celów <xref:System.Xaml.XamlType.AllowedContentTypes%2A>.  
  
 Jeśli nie używasz domyślnej techniki odbicia środowiska CLR dla <xref:System.Xaml.XamlType>, wywołania tej właściwości mogą wywołać <xref:System.Xaml.XamlType.LookupAllowedContentTypes%2A> zastąpienia w <xref:System.Xaml.XamlType> klasach pochodnych.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BaseType">
      <MemberSignature Language="C#" Value="public System.Xaml.XamlType BaseType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xaml.XamlType BaseType" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.BaseType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BaseType As XamlType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xaml::XamlType ^ BaseType { System::Xaml::XamlType ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.BaseType : System.Xaml.XamlType" Usage="System.Xaml.XamlType.BaseType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Xaml.XamlType" /> Pobiera dla bezpośredniego typu podstawowego tego typu XAML. Określanie tej wartości jest oparte na typie podstawowym tego <see cref="T:System.Xaml.XamlType" /> kontekstu i kontekście schematu.</summary>
        <value><see cref="T:System.Xaml.XamlType" /> Dla bezpośredniego typu podstawowego tego typu XAML.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli nie używasz domyślnej techniki odbicia środowiska CLR dla <xref:System.Xaml.XamlType>, wywołania tej właściwości mogą wywołać <xref:System.Xaml.XamlType.LookupBaseType%2A> zastąpienia w <xref:System.Xaml.XamlType> klasach pochodnych. Aby uzyskać więcej informacji na temat wartości zwracanych i innych zachowań, zapoznaj się z dokumentacją dla <xref:System.Xaml.XamlType.LookupBaseType%2A> tego typu. Domyślnie <xref:System.Xaml.XamlType.BaseType%2A> funkcja zwraca stałą wewnętrzną, która reprezentuje element <xref:System.Object> if <xref:System.Xaml.XamlType.UnderlyingType%2A> is `null`.  
  
> [!IMPORTANT]
>  <xref:System.Xaml.XamlType.LookupBaseType%2A>jest wirtualny i w związku z tym, można go zastąpić. Przesłonięcie ma potencjalną wartość (zarówno w przypadku złośliwych celów, jak i w inny sposób), aby zmienić zgłoszone informacje o typie dla typu XAML, tak aby nie były już wyrównane w oczekiwany sposób z informacjami o systemie typu odpowiadającego mu typu CLR. W przypadku wszystkich kontroli krytycznych dla zabezpieczeń operacji przypisywania i dostępu należy zamiast tego użyć bazowego typu CLR.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanAssignTo">
      <MemberSignature Language="C#" Value="public virtual bool CanAssignTo (System.Xaml.XamlType xamlType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanAssignTo(class System.Xaml.XamlType xamlType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.CanAssignTo(System.Xaml.XamlType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool CanAssignTo(System::Xaml::XamlType ^ xamlType);" />
      <MemberSignature Language="F#" Value="abstract member CanAssignTo : System.Xaml.XamlType -&gt; bool&#xA;override this.CanAssignTo : System.Xaml.XamlType -&gt; bool" Usage="xamlType.CanAssignTo xamlType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xamlType" Type="System.Xaml.XamlType" />
      </Parameters>
      <Docs>
        <param name="xamlType">Typ do sprawdzenia względem bieżącego <see cref="T:System.Xaml.XamlType" /> .</param>
        <summary>Zwraca wartość wskazującą, czy wystąpienie tego <see cref="T:System.Xaml.XamlType" /> elementu ma określony <see cref="T:System.Xaml.XamlType" /> element na liście typów do przypisania.</summary>
        <returns><see langword="true" />Jeśli <paramref name="xamlType" /> znajduje się na liście typów do przypisania; <see langword="false" />w przeciwnym razie.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Chociaż typ możliwy do przypisania nie ma wszystkich możliwości typu referencyjnego, można go użyć do przypisania. Na przykład można użyć przypisania, aby wprowadzić dopasowania do wartości właściwości. Koncepcja typów do przypisania w języku XAML jest podobna do koncepcji rzutowania w systemie typów CLR. Na przykład w obszarze systemu typów CLR każdy typ ma <xref:System.Object> listę z przypisanym typem.  
  
 <xref:System.Xaml.XamlType> Jeśli jedno z dwóch wystąpień, które są używane do porównania `true`, <xref:System.Xaml.XamlType.IsUnknown%2A> jest równe, ta metoda ma specjalny nieznanego trybu, `true` który zwraca, <xref:System.Xaml.XamlType> Jeśli dwa wystąpienia są równoważne.  
  
 Implementacja domyślna używa środowiska CLR <xref:System.Type> z <xref:System.Xaml.XamlType.UnderlyingType%2A> tego <xref:System.Xaml.XamlType> elementu oraz wywołań <xref:System.Type.IsAssignableFrom%2A>wejściowych <xref:System.Xaml.XamlType>i. Zastąp tę metodę, jeśli chcesz użyć innego określenia typów, które można przypisać.  
  
 Przekazywanie wartości null `xamlType` nie powoduje zgłoszenia wyjątku i zawsze zwraca wartość `false`.  
  
> [!IMPORTANT]
>  <xref:System.Xaml.XamlType.CanAssignTo%2A>jest wirtualny i w związku z tym, można go zastąpić. Przesłonięcie ma potencjalną wartość (zarówno w przypadku złośliwych celów, jak i w inny sposób), aby zmienić możliwość przypisywania typu XAML, tak aby nie była już wyrównana w oczekiwany sposób z zachowaniem rzutowania typu dla jego bazowego typu CLR. W przypadku wszystkich kontroli krytycznych dla zabezpieczeń operacji przypisywania i dostępu należy zamiast tego użyć bazowego typu CLR.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ConstructionRequiresArguments">
      <MemberSignature Language="C#" Value="public bool ConstructionRequiresArguments { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ConstructionRequiresArguments" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.ConstructionRequiresArguments" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ConstructionRequiresArguments As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ConstructionRequiresArguments { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.ConstructionRequiresArguments : bool" Usage="System.Xaml.XamlType.ConstructionRequiresArguments" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość wskazującą, czy musi ona <see cref="T:System.Xaml.XamlType" /> mieć argumenty (ograniczenia ogólne, za <see langword="x:TypeArguments" />pomocą tekstu inicjującego lub innych technik XAML) do konstruowania prawidłowego wystąpienia typu.</summary>
        <value><see langword="true" />Jeśli konstrukcja wystąpienia wymaga pewnej wartości argumentu; w przeciwnym razie. <see langword="false" /></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli nie używasz domyślnej techniki odbicia środowiska CLR dla <xref:System.Xaml.XamlType>, wywołania tej właściwości mogą wywołać <xref:System.Xaml.XamlType.LookupConstructionRequiresArguments%2A> zastąpienia w <xref:System.Xaml.XamlType> klasach pochodnych. Aby uzyskać więcej informacji na temat wartości zwracanych i innych zachowań, zapoznaj się z dokumentacją dla <xref:System.Xaml.XamlType.LookupConstructionRequiresArguments%2A> tego typu.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContentProperty">
      <MemberSignature Language="C#" Value="public System.Xaml.XamlMember ContentProperty { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xaml.XamlMember ContentProperty" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.ContentProperty" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ContentProperty As XamlMember" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xaml::XamlMember ^ ContentProperty { System::Xaml::XamlMember ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ContentProperty : System.Xaml.XamlMember" Usage="System.Xaml.XamlType.ContentProperty" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlMember</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera informacje o właściwości content tego <see cref="T:System.Xaml.XamlType" />elementu. <see cref="T:System.Xaml.XamlMember" /></summary>
        <value><see cref="T:System.Xaml.XamlMember" />informacje dotyczące właściwości content tego <see cref="T:System.Xaml.XamlType" />elementu. Może być <see langword="null" /> Jeśli nie istnieje żadna właściwość zawartości.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 W przypadku korzystania z powiązania lub tworzenia kopii zapasowej systemu typów CLR Właściwość zawartości XAML może być określona dla typu przez zastosowanie <xref:System.Windows.Markup.ContentPropertyAttribute> do definicji typu.  
  
 Ta właściwość jest wyrównana do `[content property]` elementu informacji w specyfikacji [MS-XAML].  
  
 Jeśli nie używasz domyślnej techniki odbicia środowiska CLR dla <xref:System.Xaml.XamlType>, wywołania tej właściwości mogą wywołać <xref:System.Xaml.XamlType.LookupContentProperty%2A> zastąpienia w <xref:System.Xaml.XamlType> klasach pochodnych. Aby uzyskać więcej informacji na temat wartości zwracanych i innych zachowań, zapoznaj się z dokumentacją dla <xref:System.Xaml.XamlType.LookupContentProperty%2A> tego typu.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContentWrappers">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt; ContentWrappers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;class System.Xaml.XamlType&gt; ContentWrappers" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.ContentWrappers" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ContentWrappers As IList(Of XamlType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IList&lt;System::Xaml::XamlType ^&gt; ^ ContentWrappers { System::Collections::Generic::IList&lt;System::Xaml::XamlType ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ContentWrappers : System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt;" Usage="System.Xaml.XamlType.ContentWrappers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera typy, które są używane do zawijania zawartości dla właściwości zawartości, jeśli nie jest to ścisłe dopasowanie typu, takie jak ciągi w jednoznacznie określonym <see langword="Collection&lt;T&gt;" />typie.</summary>
        <value>Kolekcja tylko do odczytu możliwych typów otoki zawartości; w przeciwnym razie. <see langword="null" /></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli nie ma otoki do konta w celu poluzu dopasowania typu, ta właściwość jest `null`.  
  
 Typy, które są <xref:System.Xaml.XamlType.CanAssignTo%2A> oceniane jako dla określonego typu zawartości, nie są traktowane jako wiele typów <xref:System.Xaml.XamlType.ContentWrappers%2A>do celów.  
  
 W powiązaniu CLR dla <xref:System.Xaml> i <xref:System.Xaml.XamlType>, typ otoki zawartości XAML może być określony <xref:System.Windows.Markup.ContentWrapperAttribute>dla typu jako.  
  
 Jeśli nie używasz domyślnej techniki odbicia środowiska CLR dla <xref:System.Xaml.XamlType>, wywołania tej właściwości mogą wywołać <xref:System.Xaml.XamlType.LookupContentWrappers%2A> zastąpienia w <xref:System.Xaml.XamlType> klasach pochodnych. Aby uzyskać więcej informacji na temat wartości zwracanych i innych zachowań, zapoznaj się z dokumentacją dla <xref:System.Xaml.XamlType.LookupContentWrappers%2A> tego typu.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DeferringLoader">
      <MemberSignature Language="C#" Value="public System.Xaml.Schema.XamlValueConverter&lt;System.Xaml.XamlDeferringLoader&gt; DeferringLoader { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xaml.Schema.XamlValueConverter`1&lt;class System.Xaml.XamlDeferringLoader&gt; DeferringLoader" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.DeferringLoader" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DeferringLoader As XamlValueConverter(Of XamlDeferringLoader)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xaml::Schema::XamlValueConverter&lt;System::Xaml::XamlDeferringLoader ^&gt; ^ DeferringLoader { System::Xaml::Schema::XamlValueConverter&lt;System::Xaml::XamlDeferringLoader ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DeferringLoader : System.Xaml.Schema.XamlValueConverter&lt;System.Xaml.XamlDeferringLoader&gt;" Usage="System.Xaml.XamlType.DeferringLoader" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.Schema.XamlValueConverter&lt;System.Xaml.XamlDeferringLoader&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> Pobiera, który reprezentuje zachowanie konwersji odroczonego ładowania dla tego typu.</summary>
        <value>Ograniczenie <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> with<see cref="T:System.Xaml.XamlDeferringLoader" /> , które reprezentuje zachowanie odroczonego ładowania dla tego typu.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zachowanie szablonu XAML w WPF stanowi przykład zachowania odroczonego ładowania.  
  
 Jeśli nie używasz domyślnej techniki odbicia środowiska CLR dla <xref:System.Xaml.XamlType>, wywołania tej właściwości mogą wywołać <xref:System.Xaml.XamlType.LookupDeferringLoader%2A> zastąpienia w <xref:System.Xaml.XamlType> klasach pochodnych. Aby uzyskać więcej informacji na temat wartości zwracanych i innych zachowań, zapoznaj się z dokumentacją dla <xref:System.Xaml.XamlType.LookupDeferringLoader%2A> tego typu.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Equals">
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Wskazuje, czy bieżący obiekt jest równy innemu obiektowi.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="xamlType.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">Obiekt, który ma zostać porównany z tym obiektem.</param>
        <summary>Wskazuje, czy bieżący obiekt jest równy innemu obiektowi.</summary>
        <returns><see langword="true" />Jeśli bieżący obiekt jest równy <paramref name="obj" /> parametrowi; w przeciwnym razie,. <see langword="false" /></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (System.Xaml.XamlType other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(class System.Xaml.XamlType other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.Equals(System.Xaml.XamlType)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (other As XamlType) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Equals(System::Xaml::XamlType ^ other);" />
      <MemberSignature Language="F#" Value="override this.Equals : System.Xaml.XamlType -&gt; bool" Usage="xamlType.Equals other" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IEquatable`1.Equals(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Xaml.XamlType" />
      </Parameters>
      <Docs>
        <param name="other">Obiekt, który ma zostać porównany z tym obiektem.</param>
        <summary>Wskazuje, czy bieżący obiekt jest równy innemu obiektowi tego samego typu.</summary>
        <returns><see langword="true" />Jeśli bieżący obiekt jest równy <paramref name="other" /> parametrowi; w przeciwnym razie,. <see langword="false" /></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAliasedProperty">
      <MemberSignature Language="C#" Value="public System.Xaml.XamlMember GetAliasedProperty (System.Xaml.XamlDirective directive);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xaml.XamlMember GetAliasedProperty(class System.Xaml.XamlDirective directive) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.GetAliasedProperty(System.Xaml.XamlDirective)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAliasedProperty (directive As XamlDirective) As XamlMember" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xaml::XamlMember ^ GetAliasedProperty(System::Xaml::XamlDirective ^ directive);" />
      <MemberSignature Language="F#" Value="member this.GetAliasedProperty : System.Xaml.XamlDirective -&gt; System.Xaml.XamlMember" Usage="xamlType.GetAliasedProperty directive" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlMember</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="directive" Type="System.Xaml.XamlDirective" />
      </Parameters>
      <Docs>
        <param name="directive">Dyrektywa, dla której ma zostać znaleziony alias elementu członkowskiego.</param>
        <summary>Zwraca element członkowski XAML, który jest aliasem do dyrektywy <see cref="T:System.Xaml.XamlType" />XAML.</summary>
        <returns>Alias elementu członkowskiego, jeśli znaleziono; w przeciwnym razie. <see langword="null" /></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli nie używasz domyślnej techniki odbicia środowiska CLR dla elementu <xref:System.Xaml.XamlType>, wywołania tej metody mogą wywołać <xref:System.Xaml.XamlType.LookupAliasedProperty%2A> zastąpienia w <xref:System.Xaml.XamlType> klasach pochodnych. Aby uzyskać więcej informacji na temat wartości zwracanych i innych zachowań, zapoznaj się z dokumentacją dla <xref:System.Xaml.XamlType.LookupAliasedProperty%2A> tego typu.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAllAttachableMembers">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.ICollection&lt;System.Xaml.XamlMember&gt; GetAllAttachableMembers ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.ICollection`1&lt;class System.Xaml.XamlMember&gt; GetAllAttachableMembers() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.GetAllAttachableMembers" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAllAttachableMembers () As ICollection(Of XamlMember)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::ICollection&lt;System::Xaml::XamlMember ^&gt; ^ GetAllAttachableMembers();" />
      <MemberSignature Language="F#" Value="member this.GetAllAttachableMembers : unit -&gt; System.Collections.Generic.ICollection&lt;System.Xaml.XamlMember&gt;" Usage="xamlType.GetAllAttachableMembers " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;System.Xaml.XamlMember&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zwraca kolekcję zawierającą wszystkie możliwe do dołączenia właściwości, które są dostępne <see cref="T:System.Xaml.XamlType" />dla tego elementu.</summary>
        <returns>Kolekcja zawierająca zero lub więcej <see cref="T:System.Xaml.XamlMember" /> wartości.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Każdy <xref:System.Xaml.XamlMember> w zwracanej kolekcji powinien zawierać wartości, które obsługują koncepcję <xref:System.Xaml.XamlMember> , którą jest Dołączalna składowa. Na przykład elementy członkowskie powinny zwracać `true` dla <xref:System.Xaml.XamlMember.IsAttachable%2A>, typ dla <xref:System.Xaml.XamlMember.TargetType%2A>i tak dalej.  
  
 Jeśli nie używasz domyślnej techniki odbicia środowiska CLR dla elementu <xref:System.Xaml.XamlType>, wywołania tej metody mogą wywołać <xref:System.Xaml.XamlType.LookupAllAttachableMembers%2A> zastąpienia w <xref:System.Xaml.XamlType> klasach pochodnych. Aby uzyskać więcej informacji na temat wartości zwracanych i innych zachowań, zapoznaj się z dokumentacją dla <xref:System.Xaml.XamlType.LookupAllAttachableMembers%2A> tego typu.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAllMembers">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.ICollection&lt;System.Xaml.XamlMember&gt; GetAllMembers ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.ICollection`1&lt;class System.Xaml.XamlMember&gt; GetAllMembers() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.GetAllMembers" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAllMembers () As ICollection(Of XamlMember)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::ICollection&lt;System::Xaml::XamlMember ^&gt; ^ GetAllMembers();" />
      <MemberSignature Language="F#" Value="member this.GetAllMembers : unit -&gt; System.Collections.Generic.ICollection&lt;System.Xaml.XamlMember&gt;" Usage="xamlType.GetAllMembers " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;System.Xaml.XamlMember&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zwraca kolekcję zawierającą wszystkich elementów członkowskich, które są uwidocznione <see cref="T:System.Xaml.XamlType" />.</summary>
        <returns>Kolekcja zawierająca zero lub więcej <see cref="T:System.Xaml.XamlMember" /> wartości.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wywołania tej metody mogą wywołać <xref:System.Xaml.XamlType.LookupAllMembers%2A> zastąpienia w <xref:System.Xaml.XamlType> klasach pochodnych.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAttachableMember">
      <MemberSignature Language="C#" Value="public System.Xaml.XamlMember GetAttachableMember (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xaml.XamlMember GetAttachableMember(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.GetAttachableMember(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAttachableMember (name As String) As XamlMember" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xaml::XamlMember ^ GetAttachableMember(System::String ^ name);" />
      <MemberSignature Language="F#" Value="member this.GetAttachableMember : string -&gt; System.Xaml.XamlMember" Usage="xamlType.GetAttachableMember name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlMember</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">Nazwa dołączanego elementu członkowskiego do pobrania w formie <c>pole ownertypename. MemberName</c> .</param>
        <summary>Zwraca reprezentujący określony nazwany element członkowski <see cref="T:System.Xaml.XamlType" />do dołączenia. <see cref="T:System.Xaml.XamlMember" /></summary>
        <returns>Obiekt dla żądanego możliwego do dołączenia elementu <see langword="null" />Członkowskiego; w przeciwnym razie, jeśli nie istnieje żaden element członkowski do dołączenia o tej nazwie. <see cref="T:System.Xaml.XamlMember" /></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wywołania tej metody mogą wywołać <xref:System.Xaml.XamlType.LookupAttachableMember%2A> zastąpienia w <xref:System.Xaml.XamlType> klasach pochodnych.  
  
> [!IMPORTANT]
>  <xref:System.Xaml.XamlType.LookupAttachableMember%2A>jest wirtualny i w związku z tym, można go zastąpić. Przesłonięcie ma potencjalną wartość (zarówno w przypadku złośliwych celów, jak i w inny sposób) do zmiany zgłoszonych elementów członkowskich typu XAML, tak aby nie były <xref:System.ComponentModel.TypeDescriptor> one już wyrównane w oczekiwany sposób z `Get*` informacjami o źródłowym typie CLR. W przypadku wszelkich kontroli krytycznych dla zabezpieczeń, należy zamiast tego użyć bazowego typu CLR.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="xamlType.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zwraca kod skrótu dla tego obiektu.</summary>
        <returns>Kod skrótu liczby całkowitej.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMember">
      <MemberSignature Language="C#" Value="public System.Xaml.XamlMember GetMember (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xaml.XamlMember GetMember(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.GetMember(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetMember (name As String) As XamlMember" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xaml::XamlMember ^ GetMember(System::String ^ name);" />
      <MemberSignature Language="F#" Value="member this.GetMember : string -&gt; System.Xaml.XamlMember" Usage="xamlType.GetMember name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlMember</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">Nazwa elementu członkowskiego do pobrania (jako ciąg).</param>
        <summary>Zwraca dla określonego nazwanego członka z tego <see cref="T:System.Xaml.XamlType" />elementu. <see cref="T:System.Xaml.XamlMember" /></summary>
        <returns>Informacje dla elementu członkowskiego, jeśli taki element członkowski został znaleziony; <see langword="null" />w przeciwnym razie. <see cref="T:System.Xaml.XamlMember" /></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Oczekiwana wartość `name` atrybutu jest niekwalifikowana. Nazwy kwalifikowane, które wskazują dołączony element członkowski, powinny być przesyłane do <xref:System.Xaml.XamlType.GetAttachableMember%2A> zamiast tego. Nie należy używać prefiksowych nazw składowych; prefiks ma charakter do użycia i system typów XAML nie może znać kontekstu takiego użycia i sposobu mapowania prefiksu.  
  
 Wywołania tej metody mogą wywołać <xref:System.Xaml.XamlType.LookupMember%2A> zastąpienia w <xref:System.Xaml.XamlType> klasach pochodnych.  
  
> [!IMPORTANT]
>  <xref:System.Xaml.XamlType.LookupMember%2A>jest wirtualny i w związku z tym, można go zastąpić. Przesłonięcie ma potencjalną wartość (zarówno w przypadku złośliwych celów, jak i w inny sposób) do zmiany zgłoszonych elementów członkowskich typu XAML, tak aby nie były <xref:System.ComponentModel.TypeDescriptor> one już wyrównane w oczekiwany sposób z `Get*` informacjami o źródłowym typie CLR. W przypadku wszelkich kontroli krytycznych dla zabezpieczeń, należy zamiast tego użyć bazowego typu CLR.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPositionalParameters">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt; GetPositionalParameters (int parameterCount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IList`1&lt;class System.Xaml.XamlType&gt; GetPositionalParameters(int32 parameterCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.GetPositionalParameters(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPositionalParameters (parameterCount As Integer) As IList(Of XamlType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IList&lt;System::Xaml::XamlType ^&gt; ^ GetPositionalParameters(int parameterCount);" />
      <MemberSignature Language="F#" Value="member this.GetPositionalParameters : int -&gt; System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt;" Usage="xamlType.GetPositionalParameters parameterCount" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameterCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="parameterCount">Liczba (w liczbie argumentów) określonej składni lub trybu konstruktora, dla którego chcesz uzyskać informacje.</param>
        <summary>W przypadku typów rozszerzeń znaczników zwraca typy parametrów pozycyjnych, które są obsługiwane w określonym użyciu <see cref="T:System.Xaml.XamlType" />rozszerzenia znacznika.</summary>
        <returns>Lista <see cref="T:System.Xaml.XamlType" /> wartości, z których każdy <see cref="T:System.Xaml.XamlType" /> jest typem dla tej pozycji w składni. Należy określić typy w tej samej kolejności, gdy podasz Znaczniki wejściowe dla rozszerzenia znaczników.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten interfejs API jest przydatny tylko <xref:System.Xaml.XamlType> wtedy, gdy reprezentuje to<xref:System.Xaml.XamlType.IsMarkupExtension%2A> rozszerzenie `true`znacznika (IS).  
  
 Dane wejściowe `parameterCount` nie dotyczą żądania typu określonego parametru pozycyjnego. Służy do określania liczby argumentów użycia rozszerzenia znaczników. Użycie rozszerzenia znaczników często ma wiele "podpisów" i używa różnych argumentów parametrów (Count) o parametrach pozycyjnych do rozróżniania. Można jednak skonfigurować kontekst schematu, aby zezwalał na duplikowanie arities i użycie typów parametrów pozycyjnych do rozróżniania. Aby uzyskać więcej informacji, zobacz <xref:System.Xaml.XamlSchemaContext.SupportMarkupExtensionsWithDuplicateArity%2A>. Dla określonej liczby argumentów (Count), pozycje i typy parametrów mogą się różnić. Aby uzyskać typ pozycyjny dla określonej liczby argumentów użycie rozszerzenia znacznika, należy najpierw wywołać <xref:System.Xaml.XamlType.GetPositionalParameters%2A> Określanie liczby argumentów. Następnie pobierz element w tej pozycji z zwróconej kolekcji.  
  
 Wywołania tej metody mogą wywołać <xref:System.Xaml.XamlType.LookupPositionalParameters%2A> zastąpienia w <xref:System.Xaml.XamlType> klasach pochodnych.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetXamlNamespaces">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IList&lt;string&gt; GetXamlNamespaces ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IList`1&lt;string&gt; GetXamlNamespaces() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.GetXamlNamespaces" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetXamlNamespaces () As IList(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::Generic::IList&lt;System::String ^&gt; ^ GetXamlNamespaces();" />
      <MemberSignature Language="F#" Value="abstract member GetXamlNamespaces : unit -&gt; System.Collections.Generic.IList&lt;string&gt;&#xA;override this.GetXamlNamespaces : unit -&gt; System.Collections.Generic.IList&lt;string&gt;" Usage="xamlType.GetXamlNamespaces " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zwraca listę identyfikatorów ciągów dla przestrzeni nazw XAML, w której znajduje się typ.</summary>
        <returns>Lista wartości ciągów, gdzie każdy ciąg jest identyfikatorem URI dla przestrzeni nazw XAML.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Typowymi identyfikatorami przestrzeni nazw XAML są ciągi w formularzu URI.  
  
 Domyślna implementacja sprawdza następujące elementy w kolejności: przestrzeń nazw XAML, która jest dostarczana w konstrukcji (<xref:System.Xaml.XamlType.%23ctor%28System.String%2CSystem.String%2CSystem.Collections.Generic.IList%7BSystem.Xaml.XamlType%7D%2CSystem.Xaml.XamlSchemaContext%29> tylko podpis), i przestrzenie nazw, które są dostępne w kontekście schematu. W przypadku każdego `null`z nich jest generowana Nowa lista, która zawiera jeden pusty ciąg. Można zastąpić tę metodę, aby zmienić metodologię wyszukiwania.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Invoker">
      <MemberSignature Language="C#" Value="public System.Xaml.Schema.XamlTypeInvoker Invoker { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xaml.Schema.XamlTypeInvoker Invoker" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.Invoker" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Invoker As XamlTypeInvoker" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xaml::Schema::XamlTypeInvoker ^ Invoker { System::Xaml::Schema::XamlTypeInvoker ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Invoker : System.Xaml.Schema.XamlTypeInvoker" Usage="System.Xaml.XamlType.Invoker" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.Schema.XamlTypeInvoker</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera implementację, która jest skojarzona <see cref="T:System.Xaml.XamlType" />z tym. <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /></summary>
        <value>Implementacja, która jest skojarzona z <see cref="T:System.Xaml.XamlType" />tym. <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli nie używasz domyślnej techniki odbicia środowiska CLR dla elementu <xref:System.Xaml.XamlType>, wywoływanie <xref:System.Xaml.XamlType.Invoker%2A> może wywołać albo <xref:System.Xaml.XamlType.LookupInvoker%2A> określone zastąpienie tej metody. Aby uzyskać więcej informacji na temat wartości zwracanych i innych zachowań, zapoznaj się z dokumentacją dla <xref:System.Xaml.XamlType.LookupInvoker%2A> tego typu.  
  
 <xref:System.Xaml.XamlType> `null` `null` <xref:System.Xaml.Schema.XamlTypeInvoker.UnknownInvoker%2A?displayProperty=nameWithType> <xref:System.Xaml.XamlType.Invoker%2A> Jeśli przesłonięcie zwróci lub jeśli domyślna implementacja <xref:System.Xaml.XamlType.UnderlyingType%2A> zwraca z powodu braku dla tego elementu, zwraca wartość. <xref:System.Xaml.XamlType.LookupInvoker%2A>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsAmbient">
      <MemberSignature Language="C#" Value="public bool IsAmbient { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAmbient" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.IsAmbient" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsAmbient As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsAmbient { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsAmbient : bool" Usage="System.Xaml.XamlType.IsAmbient" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość wskazującą, czy <see cref="T:System.Xaml.XamlType" /> reprezentuje typ otoczenia, zgodnie z definicją XAML.</summary>
        <value><see langword="true" />Jeśli reprezentuje typ otoczenia; <see langword="false" />w przeciwnym razie. <see cref="T:System.Xaml.XamlType" /></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli nie używasz domyślnej techniki odbicia środowiska CLR dla <xref:System.Xaml.XamlType>, wywołania tej właściwości mogą wywołać <xref:System.Xaml.XamlType.LookupIsAmbient%2A> zastąpienia w <xref:System.Xaml.XamlType> klasach pochodnych. Aby uzyskać więcej informacji na temat wartości zwracanych i innych zachowań, zapoznaj się z dokumentacją dla <xref:System.Xaml.XamlType.LookupIsAmbient%2A> tego typu.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsArray">
      <MemberSignature Language="C#" Value="public bool IsArray { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsArray" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.IsArray" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsArray As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsArray { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsArray : bool" Usage="System.Xaml.XamlType.IsArray" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość wskazującą, czy reprezentuje ona <see cref="T:System.Xaml.XamlType" /> tablicę.</summary>
        <value><see langword="true" />Jeśli reprezentuje tablicę; w przeciwnym razie <see langword="false" />,. <see cref="T:System.Xaml.XamlType" /></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli nie używasz domyślnej techniki odbicia środowiska CLR dla <xref:System.Xaml.XamlType>, wywołania tej właściwości mogą wywołać <xref:System.Xaml.XamlType.LookupCollectionKind%2A> zastąpienia w <xref:System.Xaml.XamlType> klasach pochodnych. Aby uzyskać więcej informacji na temat wartości zwracanych i innych zachowań, zapoznaj się z dokumentacją dla <xref:System.Xaml.XamlType.LookupCollectionKind%2A> tego typu.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsCollection">
      <MemberSignature Language="C#" Value="public bool IsCollection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsCollection" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.IsCollection" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsCollection As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsCollection { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsCollection : bool" Usage="System.Xaml.XamlType.IsCollection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość wskazującą, czy reprezentuje ona <see cref="T:System.Xaml.XamlType" /> kolekcję.</summary>
        <value><see langword="true" />Jeśli reprezentuje kolekcję; w przeciwnym razie <see langword="false" />. <see cref="T:System.Xaml.XamlType" /></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli nie używasz domyślnej techniki odbicia środowiska CLR dla <xref:System.Xaml.XamlType>, wywołania tej właściwości mogą wywołać <xref:System.Xaml.XamlType.LookupCollectionKind%2A> zastąpienia w <xref:System.Xaml.XamlType> klasach pochodnych. Aby uzyskać więcej informacji na temat wartości zwracanych i innych zachowań, zapoznaj się z dokumentacją dla <xref:System.Xaml.XamlType.LookupCollectionKind%2A> tego typu.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsConstructible">
      <MemberSignature Language="C#" Value="public bool IsConstructible { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsConstructible" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.IsConstructible" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsConstructible As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsConstructible { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsConstructible : bool" Usage="System.Xaml.XamlType.IsConstructible" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość wskazującą, czy reprezentuje ona <see cref="T:System.Xaml.XamlType" /> typ konstrukcyjną, zgodnie z definicją XAML.</summary>
        <value><see langword="true" />Jeśli ten <see cref="T:System.Xaml.XamlType" /> element reprezentuje typ konstrukcyjną; <see langword="false" />w przeciwnym razie.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość jest wyrównana do `[is default constructible]` elementu informacji w specyfikacji [MS-XAML].  
  
 Jeśli nie używasz domyślnej techniki odbicia środowiska CLR dla <xref:System.Xaml.XamlType>, wywołania tej właściwości mogą wywołać <xref:System.Xaml.XamlType.LookupIsConstructible%2A> zastąpienia w <xref:System.Xaml.XamlType> klasach pochodnych. Aby uzyskać więcej informacji na temat wartości zwracanych i innych zachowań, zapoznaj się z dokumentacją dla <xref:System.Xaml.XamlType.LookupIsConstructible%2A> tego typu.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlType.ConstructionRequiresArguments" />
      </Docs>
    </Member>
    <Member MemberName="IsDictionary">
      <MemberSignature Language="C#" Value="public bool IsDictionary { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDictionary" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.IsDictionary" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsDictionary As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsDictionary { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsDictionary : bool" Usage="System.Xaml.XamlType.IsDictionary" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość wskazującą, czy reprezentuje ona <see cref="T:System.Xaml.XamlType" /> słownik, zgodnie z definicją XAML.</summary>
        <value><see langword="true" />Jeśli reprezentuje słownik, <see langword="false" />w przeciwnym razie. <see cref="T:System.Xaml.XamlType" /></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość jest wyrównana do `[is dictionary]` elementu informacji w specyfikacji [MS-XAML].  
  
 Jeśli nie używasz domyślnej techniki odbicia środowiska CLR dla <xref:System.Xaml.XamlType>, wywołania tej właściwości mogą wywołać <xref:System.Xaml.XamlType.LookupCollectionKind%2A> zastąpienia w <xref:System.Xaml.XamlType> klasach pochodnych. Aby uzyskać więcej informacji na temat wartości zwracanych i innych zachowań, zapoznaj się z dokumentacją dla <xref:System.Xaml.XamlType.LookupCollectionKind%2A> tego typu.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsGeneric">
      <MemberSignature Language="C#" Value="public bool IsGeneric { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsGeneric" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.IsGeneric" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsGeneric As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsGeneric { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsGeneric : bool" Usage="System.Xaml.XamlType.IsGeneric" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość wskazującą, czy reprezentuje ona <see cref="T:System.Xaml.XamlType" /> typ ogólny.</summary>
        <value><see langword="true" />Jeśli reprezentuje typ ogólny; <see langword="false" />w przeciwnym razie. <see cref="T:System.Xaml.XamlType" /></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość jest właściwością pomocnika, która sprawdza wartość <xref:System.Xaml.XamlType.TypeArguments%2A>null. Nie istnieje konkretna `Lookup` Metoda związana z <xref:System.Xaml.XamlType.IsGeneric%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsMarkupExtension">
      <MemberSignature Language="C#" Value="public bool IsMarkupExtension { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsMarkupExtension" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.IsMarkupExtension" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsMarkupExtension As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsMarkupExtension { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsMarkupExtension : bool" Usage="System.Xaml.XamlType.IsMarkupExtension" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość wskazującą, czy reprezentuje to <see cref="T:System.Xaml.XamlType" /> rozszerzenie znacznika.</summary>
        <value><see langword="true" />Jeśli reprezentuje <see cref="T:System.Xaml.XamlType" /> to rozszerzenie znacznika; <see langword="false" />w przeciwnym razie.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 W przypadku `x:MarkupExtension` `true` warunkówspecyfikacjijęzykaXAMLtentypmusibyćmożliwydoprzypisania,abymożnabyło<xref:System.Xaml.XamlType.IsMarkupExtension%2A>zwrócić do programu.  
  
 Jeśli nie używasz domyślnej techniki odbicia środowiska CLR dla <xref:System.Xaml.XamlType>, wywołania tej właściwości mogą wywołać <xref:System.Xaml.XamlType.LookupIsMarkupExtension%2A> zastąpienia w <xref:System.Xaml.XamlType> klasach pochodnych. Aby uzyskać więcej informacji na temat wartości zwracanych i innych zachowań, zapoznaj się z dokumentacją dla <xref:System.Xaml.XamlType.LookupIsMarkupExtension%2A> tego typu.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsNameScope">
      <MemberSignature Language="C#" Value="public bool IsNameScope { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsNameScope" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.IsNameScope" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsNameScope As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsNameScope { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsNameScope : bool" Usage="System.Xaml.XamlType.IsNameScope" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość wskazującą, czy reprezentuje to <see cref="T:System.Xaml.XamlType" /> namescope XAML, zgodnie z definicją XAML.</summary>
        <value><see langword="true" />Jeśli reprezentuje <see cref="T:System.Xaml.XamlType" /> to namescope XAML; <see langword="false" />w przeciwnym razie.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Namescope języka XAML Wymusza unikatowość nazw właściwości lub właściwości używanych dla `x:Name`.  /  `[name property]` Jeśli <xref:System.Xaml.XamlType.IsNameScope%2A> jest`true`, powinien istnieć jakiś mechanizm wymuszania unikalności i powinien zostać oszacowany z perspektywy tego typu będącego właścicielem namescope języka XAML. KOD XAML namescope następnie rozszerza zawartość typu do momentu napotkania innego typu elementu będącego właścicielem kodu XAML namescope.  
  
 Ta właściwość jest wyrównana do `[is name scope]` elementu informacji w specyfikacji [MS-XAML].  
  
 Jeśli nie używasz domyślnej techniki odbicia środowiska CLR dla <xref:System.Xaml.XamlType>, wywołania tej właściwości mogą wywołać <xref:System.Xaml.XamlType.LookupIsNameScope%2A> zastąpienia w <xref:System.Xaml.XamlType> klasach pochodnych.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsNameValid">
      <MemberSignature Language="C#" Value="public bool IsNameValid { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsNameValid" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.IsNameValid" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsNameValid As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsNameValid { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsNameValid : bool" Usage="System.Xaml.XamlType.IsNameValid" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość wskazującą, czy jest ona <see cref="T:System.Xaml.XamlType" /> zainicjowana przy użyciu prawidłowego <see langword="xamlName" /> ciągu jako <see cref="P:System.Xaml.XamlType.Name" />.</summary>
        <value><see langword="true" />Jeśli jest <see cref="T:System.Xaml.XamlType" /> on zainicjowany przy użyciu prawidłowego <see langword="xamlName" /> ciągu; w przeciwnym razie <see langword="false" />,.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsNullable">
      <MemberSignature Language="C#" Value="public bool IsNullable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsNullable" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.IsNullable" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsNullable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsNullable { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsNullable : bool" Usage="System.Xaml.XamlType.IsNullable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość wskazującą, czy reprezentuje ona <see cref="T:System.Xaml.XamlType" /> typ dopuszczający wartość null, zgodnie z definicją XAML.</summary>
        <value><see langword="true" />Jeśli reprezentuje typ dopuszczający wartość null; <see langword="false" />w przeciwnym razie. <see cref="T:System.Xaml.XamlType" /></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość jest wyrównana do `[is nullable]` elementu informacji w specyfikacji [MS-XAML].  
  
 Jeśli nie używasz domyślnej techniki odbicia środowiska CLR dla elementu <xref:System.Xaml.XamlType>, wywołania tej właściwości mogą wywołać <xref:System.Xaml.XamlType.LookupIsNullable%2A> zastąpienia w <xref:System.Xaml.XamlType> klasach pochodnych.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsPublic">
      <MemberSignature Language="C#" Value="public bool IsPublic { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsPublic" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.IsPublic" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsPublic As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsPublic { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsPublic : bool" Usage="System.Xaml.XamlType.IsPublic" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość wskazującą, czy reprezentuje ona <see cref="T:System.Xaml.XamlType" /> Typ publiczny w odpowiednim systemie typów.</summary>
        <value><see langword="true" />Jeśli reprezentuje typ publiczny; <see langword="false" />w przeciwnym razie. <see cref="T:System.Xaml.XamlType" /></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli nie używasz domyślnej techniki odbicia środowiska CLR dla <xref:System.Xaml.XamlType>, wywołania tej właściwości mogą wywołać <xref:System.Xaml.XamlType.LookupIsPublic%2A> zastąpienia w <xref:System.Xaml.XamlType> klasach pochodnych.  
  
> [!IMPORTANT]
>  <xref:System.Xaml.XamlType.LookupIsPublic%2A>jest wirtualny i w związku z tym, można go zastąpić. Przesłonięcie ma potencjalną wartość (zarówno w przypadku złośliwych celów, jak i w inny sposób), aby zmienić zgłoszone informacje o typie XAML, tak aby nie były już wyrównane w oczekiwany sposób z systemem typu i informacjami o dostępie do jego źródłowego typu CLR. W przypadku wszystkich kontroli krytycznych dla zabezpieczeń operacji przypisywania i dostępu należy zamiast tego użyć bazowego typu CLR.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsUnknown">
      <MemberSignature Language="C#" Value="public bool IsUnknown { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsUnknown" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.IsUnknown" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsUnknown As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsUnknown { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsUnknown : bool" Usage="System.Xaml.XamlType.IsUnknown" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość wskazującą, czy reprezentuje ona <see cref="T:System.Xaml.XamlType" /> typ, którego nie można rozpoznać w systemie typu źródłowego.</summary>
        <value><see langword="true" />Jeśli ten <see cref="T:System.Xaml.XamlType" /> element reprezentuje typ nierozpoznawalne; <see langword="false" />w przeciwnym razie.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli nie używasz domyślnej techniki odbicia środowiska CLR dla <xref:System.Xaml.XamlType>, wywołania tej właściwości mogą wywołać <xref:System.Xaml.XamlType.LookupIsUnknown%2A> zastąpienia w <xref:System.Xaml.XamlType> klasach pochodnych.  
  
 W przypadku ścieżki <xref:System.Xaml.XamlObjectWriter>ładowania obejmującej <xref:System.Xaml.XamlType> , która `true` <xref:System.Xaml.XamlType.IsUnknown%2A> nie może być zapisywana na Graf obiektu. W ramach domyślnych implementacji w <xref:System.Xaml> programie <xref:System.Xaml.XamlObjectWriter.WriteStartObject%2A?displayProperty=nameWithType> wywołanie zgłasza <xref:System.Xaml.XamlObjectWriterException> , gdy odpowiednie <xref:System.Xaml.XamlType> raporty `true` dla <xref:System.Xaml.XamlType.IsUnknown%2A>. Nie należy przekazywać, <xref:System.Xaml.XamlType> który `true` ma <xref:System.Xaml.XamlType.IsUnknown%2A> taką samą wartość, chyba że przygotowano obsługę <xref:System.Xaml.XamlObjectWriter>wyjątków od, lub istnieją inne sposoby dostosowania <xref:System.Xaml.XamlObjectWriter> zachowania lub strumienia węzła XAML przed zapisaniem obiektu. ziół.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsUsableDuringInitialization">
      <MemberSignature Language="C#" Value="public bool IsUsableDuringInitialization { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsUsableDuringInitialization" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.IsUsableDuringInitialization" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsUsableDuringInitialization As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsUsableDuringInitialization { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsUsableDuringInitialization : bool" Usage="System.Xaml.XamlType.IsUsableDuringInitialization" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość wskazującą, czy jest ona <see cref="T:System.Xaml.XamlType" /> skompilowana w dół podczas inicjowania XAML.</summary>
        <value><see langword="true" />Jeśli jest <see cref="T:System.Xaml.XamlType" /> to skompilowane na początku podczas inicjowania XAML; <see langword="false" />w przeciwnym razie. Wartość domyślna to <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Góra w dół to metaphor, która przybliży zachowanie procesora XAML podczas tworzenia grafu obiektów. Po utworzeniu z góry w dół, typ jest tworzony, dołączany do elementu nadrzędnego, a następnie ma ustawione właściwości. Konstrukcja z góry nie pozwala na wielokrotne wywoływanie programów obsługi zmieniających właściwości. Takie obsłudze pozwala na tworzenie grafów obiektów i w związku z tym eliminuje wiele wywołań obsługi i zapewnia optymalizację wydajności dla uruchamiania grafu obiektów.  
  
 Jeśli nie używasz domyślnej techniki odbicia środowiska CLR dla <xref:System.Xaml.XamlType>, wywołania tej właściwości mogą wywołać <xref:System.Xaml.XamlType.LookupUsableDuringInitialization%2A> zastąpienia w <xref:System.Xaml.XamlType> klasach pochodnych. Aby uzyskać więcej informacji na temat wartości zwracanych i innych zachowań, zapoznaj się z dokumentacją dla <xref:System.Xaml.XamlType.LookupUsableDuringInitialization%2A> tego typu.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Markup.XamlReader.LoadAsync(System.IO.Stream)" />
        <altmember cref="P:System.Windows.FrameworkElement.IsInitialized" />
      </Docs>
    </Member>
    <Member MemberName="IsWhitespaceSignificantCollection">
      <MemberSignature Language="C#" Value="public bool IsWhitespaceSignificantCollection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsWhitespaceSignificantCollection" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.IsWhitespaceSignificantCollection" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsWhitespaceSignificantCollection As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsWhitespaceSignificantCollection { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsWhitespaceSignificantCollection : bool" Usage="System.Xaml.XamlType.IsWhitespaceSignificantCollection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość wskazującą, czy reprezentuje ona <see cref="T:System.Xaml.XamlType" /> znaczącą kolekcję białych znaków, zgodnie z definicją XML.</summary>
        <value><see langword="true" />Jeśli ta <see cref="T:System.Xaml.XamlType" /> wartość przedstawia znaczącą kolekcję białych znaków, <see langword="false" />w przeciwnym razie.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli nie używasz domyślnej techniki odbicia środowiska CLR dla <xref:System.Xaml.XamlType>, wywołania tej właściwości mogą wywołać <xref:System.Xaml.XamlType.LookupIsWhitespaceSignificantCollection%2A> zastąpienia w <xref:System.Xaml.XamlType> klasach pochodnych. Aby uzyskać więcej informacji na temat wartości zwracanych i innych zachowań, zapoznaj się z dokumentacją dla <xref:System.Xaml.XamlType.LookupIsWhitespaceSignificantCollection%2A> tego typu.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsXData">
      <MemberSignature Language="C#" Value="public bool IsXData { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsXData" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.IsXData" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsXData As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsXData { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsXData : bool" Usage="System.Xaml.XamlType.IsXData" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość wskazującą, czy reprezentuje ona <see cref="T:System.Xaml.XamlType" /> XML <see langword="XDATA" />, zgodnie z definicją XAML.</summary>
        <value><see langword="true" />Jeśli to <see cref="T:System.Xaml.XamlType" /> się <see langword="XDATA" /> reprezentuje;wprzeciwnymrazie.<see langword="false" /></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość jest wyrównana do `[is xdata]` elementu informacji w specyfikacji [MS-XAML].  
  
 Jeśli nie używasz domyślnej techniki odbicia środowiska CLR dla <xref:System.Xaml.XamlType>, wywołania tej właściwości mogą wywołać <xref:System.Xaml.XamlType.LookupIsXData%2A> zastąpienia w <xref:System.Xaml.XamlType> klasach pochodnych. Aby uzyskać więcej informacji na temat wartości zwracanych i innych zachowań, zapoznaj się z dokumentacją dla <xref:System.Xaml.XamlType.LookupIsXData%2A> tego typu.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemType">
      <MemberSignature Language="C#" Value="public System.Xaml.XamlType ItemType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xaml.XamlType ItemType" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.ItemType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ItemType As XamlType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xaml::XamlType ^ ItemType { System::Xaml::XamlType ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ItemType : System.Xaml.XamlType" Usage="System.Xaml.XamlType.ItemType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość, która dostarcza informacje o typie dla <see langword="Items" /> właściwości. <see cref="T:System.Xaml.XamlType" /></summary>
        <value>Obiekt dla typu elementów w kolekcji; <see langword="null" />w przeciwnym razie, jeśli <see cref="T:System.Xaml.XamlType" /> nie reprezentuje kolekcji. <see cref="T:System.Xaml.XamlType" /></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość ma zastosowanie tylko wtedy, <xref:System.Xaml.XamlType> gdy reprezentuje kolekcję (<xref:System.Xaml.XamlType.IsCollection%2A> is `true`). `Items` Właściwość to każda Właściwość zawiera elementy w tym typie kolekcji lub tablicy.  
  
 Jeśli nie używasz domyślnej techniki odbicia środowiska CLR dla <xref:System.Xaml.XamlType>, wywołania tej właściwości mogą wywołać <xref:System.Xaml.XamlType.LookupItemType%2A> zastąpienia w <xref:System.Xaml.XamlType> klasach pochodnych. Aby uzyskać więcej informacji na temat wartości zwracanych i innych zachowań, zapoznaj się z dokumentacją dla <xref:System.Xaml.XamlType.LookupItemType%2A> tego typu.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="KeyType">
      <MemberSignature Language="C#" Value="public System.Xaml.XamlType KeyType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xaml.XamlType KeyType" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.KeyType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property KeyType As XamlType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xaml::XamlType ^ KeyType { System::Xaml::XamlType ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.KeyType : System.Xaml.XamlType" Usage="System.Xaml.XamlType.KeyType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość, która dostarcza informacje o typie dla właściwości <see cref="T:System.Xaml.XamlType" />klucza, <see cref="T:System.Xaml.XamlType" /> Jeśli reprezentuje słownik.</summary>
        <value>Obiekt typu klucza do użycia w słowniku, <see langword="null" />w przeciwnym razie, jeśli <see cref="T:System.Xaml.XamlType" /> nie reprezentuje słownika. <see cref="T:System.Xaml.XamlType" /></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość ma zastosowanie tylko wtedy, <xref:System.Xaml.XamlType> gdy reprezentuje ona słownik<xref:System.Xaml.XamlType.IsDictionary%2A> ( `true`is).  
  
 Jeśli nie używasz domyślnej techniki odbicia środowiska CLR dla <xref:System.Xaml.XamlType>, wywołania tej właściwości mogą wywołać <xref:System.Xaml.XamlType.LookupKeyType%2A> zastąpienia w <xref:System.Xaml.XamlType> klasach pochodnych. Aby uzyskać więcej informacji na temat wartości zwracanych i innych zachowań, zapoznaj się z dokumentacją dla <xref:System.Xaml.XamlType.LookupKeyType%2A> tego typu.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupAliasedProperty">
      <MemberSignature Language="C#" Value="protected virtual System.Xaml.XamlMember LookupAliasedProperty (System.Xaml.XamlDirective directive);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Xaml.XamlMember LookupAliasedProperty(class System.Xaml.XamlDirective directive) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupAliasedProperty(System.Xaml.XamlDirective)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupAliasedProperty (directive As XamlDirective) As XamlMember" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Xaml::XamlMember ^ LookupAliasedProperty(System::Xaml::XamlDirective ^ directive);" />
      <MemberSignature Language="F#" Value="abstract member LookupAliasedProperty : System.Xaml.XamlDirective -&gt; System.Xaml.XamlMember&#xA;override this.LookupAliasedProperty : System.Xaml.XamlDirective -&gt; System.Xaml.XamlMember" Usage="xamlType.LookupAliasedProperty directive" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlMember</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="directive" Type="System.Xaml.XamlDirective" />
      </Parameters>
      <Docs>
        <param name="directive">Dyrektywa, dla której ma zostać znaleziony alias elementu członkowskiego.</param>
        <summary>Zwraca element członkowski XAML, który jest aliasem do dyrektywy <see cref="T:System.Xaml.XamlType" />XAML.</summary>
        <returns>Alias elementu członkowskiego, jeśli znaleziono; w przeciwnym razie. <see langword="null" /></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda może być wywoływana, gdy wywołujący pobiera wartość z <xref:System.Xaml.XamlType.GetAliasedProperty%2A>.  
  
 Domyślna implementacja może zwracać wyniki dla następujących dyrektyw XAML: `Key`; `Name`; `Uid`; i `xml:lang`. Wartości te zależą od odbicia podstawowego i mogą być `null` zwracane, jeśli nie zostanie znaleziona właściwość z aliasami.  
  
 Zastąp tę metodę, jeśli nie korzystasz z domyślnego wewnętrznego odbicia środowiska CLR i korzystasz z metadanych lub innych technik zgłaszania informacji o systemie typu XAML lub informacji o schemacie typu.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xaml.XamlDirective" />
        <altmember cref="T:System.Xaml.XamlLanguage" />
      </Docs>
    </Member>
    <Member MemberName="LookupAllAttachableMembers">
      <MemberSignature Language="C#" Value="protected virtual System.Collections.Generic.IEnumerable&lt;System.Xaml.XamlMember&gt; LookupAllAttachableMembers ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;class System.Xaml.XamlMember&gt; LookupAllAttachableMembers() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupAllAttachableMembers" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupAllAttachableMembers () As IEnumerable(Of XamlMember)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Collections::Generic::IEnumerable&lt;System::Xaml::XamlMember ^&gt; ^ LookupAllAttachableMembers();" />
      <MemberSignature Language="F#" Value="abstract member LookupAllAttachableMembers : unit -&gt; seq&lt;System.Xaml.XamlMember&gt;&#xA;override this.LookupAllAttachableMembers : unit -&gt; seq&lt;System.Xaml.XamlMember&gt;" Usage="xamlType.LookupAllAttachableMembers " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Xaml.XamlMember&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zwraca wyliczalny zestaw, który zawiera wszystkie możliwe do dołączenia właściwości <see cref="T:System.Xaml.XamlType" />, które są udostępniane przez ten element.</summary>
        <returns>Wyliczalny zestaw, który zawiera zero <see cref="T:System.Xaml.XamlMember" /> lub więcej wartości; <see langword="null" />w przeciwnym razie.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda może być wywoływana, gdy wywołujący pobiera wartość z <xref:System.Xaml.XamlType.GetAllAttachableMembers%2A>.  
  
 Chociaż <xref:System.Xaml.XamlType.GetAllAttachableMembers%2A> zwraca kolekcję ogólną, Metoda ta `Lookup` zwraca ogólny wyliczalny zestaw.  
  
 Implementacja domyślna używa wewnętrznego odbicia środowiska CLR. Gdy <xref:System.Xaml.XamlType.UnderlyingType%2A> tak `null`jest, domyślna implementacja może być <xref:System.Xaml.XamlType.BaseType%2A>używana, jeśli jest dostępna. Takie zachowanie wywołuje <xref:System.Xaml.XamlType.LookupAllAttachableMembers%2A> cyklicznie, aby spróbować znaleźć prawidłowy typ podstawowy i zwraca `null` , jeśli nie istnieje prawidłowy typ podstawowy.  
  
 Zastąp tę metodę, jeśli nie korzystasz z domyślnego wewnętrznego odbicia środowiska CLR i korzystasz z metadanych lub innych technik zgłaszania informacji o systemie typu XAML lub informacji o schemacie typu. Zwracanej wartości null należy zarezerwować dla przypadków, w których nie można ustalić informacji z powodu braku obsługi systemu lub odbicia. Jeśli typ jest prawidłowy, a odbicie lub inne techniki są dostępne, ale typ nie ma dołączonych elementów członkowskich, należy zamiast tego zwrócić pusty <xref:System.Collections.Generic.IEnumerable%601> zestaw.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupAllMembers">
      <MemberSignature Language="C#" Value="protected virtual System.Collections.Generic.IEnumerable&lt;System.Xaml.XamlMember&gt; LookupAllMembers ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;class System.Xaml.XamlMember&gt; LookupAllMembers() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupAllMembers" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupAllMembers () As IEnumerable(Of XamlMember)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Collections::Generic::IEnumerable&lt;System::Xaml::XamlMember ^&gt; ^ LookupAllMembers();" />
      <MemberSignature Language="F#" Value="abstract member LookupAllMembers : unit -&gt; seq&lt;System.Xaml.XamlMember&gt;&#xA;override this.LookupAllMembers : unit -&gt; seq&lt;System.Xaml.XamlMember&gt;" Usage="xamlType.LookupAllMembers " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Xaml.XamlMember&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zwraca wyliczalny zestaw, który zawiera wszystkie elementy członkowskie, które są <see cref="T:System.Xaml.XamlType" />uwidocznione.</summary>
        <returns>Wyliczalny zestaw, który zawiera zero <see cref="T:System.Xaml.XamlMember" /> lub więcej wartości.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda może być wywoływana, gdy wywołujący pobiera wartość z <xref:System.Xaml.XamlType.GetAllMembers%2A>.  
  
 Chociaż <xref:System.Xaml.XamlType.GetAllMembers%2A> zwraca kolekcję ogólną, Metoda ta `Lookup` zwraca ogólny wyliczalny zestaw.  
  
 Implementacja domyślna używa wewnętrznego odbicia środowiska CLR. W przypadku, <xref:System.Xaml.XamlType.UnderlyingType%2A> gdy `null`jest to, domyślna implementacja może <xref:System.Xaml.XamlType.BaseType%2A>być używana, jeśli jest dostępna. Takie zachowanie wywołuje <xref:System.Xaml.XamlType.LookupAllMembers%2A> cyklicznie, aby spróbować znaleźć prawidłowy typ podstawowy i zwraca `null` , jeśli nie istnieje prawidłowy typ podstawowy.  
  
 Zastąp tę metodę, jeśli nie korzystasz z domyślnego wewnętrznego odbicia środowiska CLR i korzystasz z metadanych lub innych technik zgłaszania informacji o systemie typu XAML lub informacji o schemacie typu. Zwracanej wartości null należy zarezerwować dla przypadków, w których nie można ustalić informacji z powodu braku obsługi systemu lub odbicia. Jeśli typ jest prawidłowy, odbicie lub inne techniki są dostępne; Jeśli typ nie ma elementów członkowskich, należy zamiast tego zwrócić pusty <xref:System.Collections.Generic.IEnumerable%601> zestaw.  
  
 Zwracaj wartości <xref:System.Xaml.XamlType.LookupAllMembers%2A> dla <xref:System.Xaml.XamlType.LookupAllAttachableMembers%2A> i powinny się wzajemnie wykluczać. Jeśli istnieje sytuacja, w której Właściwość systemowa typu kopii zapasowej może obsługiwać użycie standardowego wystąpienia, a także do dołączanego użycia, ten element członkowski powinien być raportowany jako dwie różne <xref:System.Xaml.XamlMember> wartości, a jedna wartość pojawia się na liście, która może zostać dołączona, a druga w Lista standardowych elementów członkowskich.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupAllowedContentTypes">
      <MemberSignature Language="C#" Value="protected virtual System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt; LookupAllowedContentTypes ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Collections.Generic.IList`1&lt;class System.Xaml.XamlType&gt; LookupAllowedContentTypes() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupAllowedContentTypes" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupAllowedContentTypes () As IList(Of XamlType)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Collections::Generic::IList&lt;System::Xaml::XamlType ^&gt; ^ LookupAllowedContentTypes();" />
      <MemberSignature Language="F#" Value="abstract member LookupAllowedContentTypes : unit -&gt; System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt;&#xA;override this.LookupAllowedContentTypes : unit -&gt; System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt;" Usage="xamlType.LookupAllowedContentTypes " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zwraca listę typów, których można użyć jako <see cref="P:System.Xaml.XamlType.ContentProperty" /> wartości. <see cref="T:System.Xaml.XamlType" /></summary>
        <returns>Lista możliwych typów zawartości.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda może być wywoływana, gdy wywołujący pobiera wartość z <xref:System.Xaml.XamlType.AllowedContentTypes%2A>.  
  
 Typy, które są <xref:System.Xaml.XamlType.CanAssignTo%2A> oceniane jako dla określonego typu zawartości, nie są traktowane jako wiele typów <xref:System.Xaml.XamlType.AllowedContentTypes%2A>do celów.  
  
 Implementacja domyślna może używać innych <xref:System.Xaml.XamlType> właściwości (<xref:System.Xaml.XamlType.ContentWrappers%2A>, <xref:System.Xaml.XamlType.ContentProperty%2A>, lub <xref:System.Xaml.XamlType.ItemType%2A>) do uzyskania wyniku. `Lookup` Przesłonięcia poprzedniej listy właściwości można również wywołać w tym wyznaczeniu.  
  
 Zastąp tę metodę, jeśli nie korzystasz z domyślnego wewnętrznego odbicia środowiska CLR i korzystasz z metadanych lub innych technik zgłaszania informacji o systemie typu XAML lub informacji o schemacie typu.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupAttachableMember">
      <MemberSignature Language="C#" Value="protected virtual System.Xaml.XamlMember LookupAttachableMember (string name);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Xaml.XamlMember LookupAttachableMember(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupAttachableMember(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupAttachableMember (name As String) As XamlMember" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Xaml::XamlMember ^ LookupAttachableMember(System::String ^ name);" />
      <MemberSignature Language="F#" Value="abstract member LookupAttachableMember : string -&gt; System.Xaml.XamlMember&#xA;override this.LookupAttachableMember : string -&gt; System.Xaml.XamlMember" Usage="xamlType.LookupAttachableMember name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlMember</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">Nazwa dołączanego elementu członkowskiego do pobrania w formie <c>pole ownertypename. MemberName</c> .</param>
        <summary>Zwraca dla konkretnej nazwanego dołączenia z <see cref="T:System.Xaml.XamlType" />tego elementu. <see cref="T:System.Xaml.XamlMember" /></summary>
        <returns>Obiekt dla żądanego możliwego do dołączenia elementu <see langword="null" />Członkowskiego; w przeciwnym razie, jeśli nie istnieje żaden element członkowski do dołączenia o tej nazwie. <see cref="T:System.Xaml.XamlMember" /></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda może być wywoływana, gdy wywołujący pobiera wartość z <xref:System.Xaml.XamlType.GetAttachableMember%2A>.  
  
 Implementacja domyślna używa wewnętrznego odbicia środowiska CLR. Gdy <xref:System.Xaml.XamlType.UnderlyingType%2A> tak `null`jest, domyślna implementacja może być <xref:System.Xaml.XamlType.BaseType%2A>używana, jeśli jest dostępna. Takie zachowanie wywołuje <xref:System.Xaml.XamlType.LookupAttachableMember%2A> cyklicznie, aby spróbować znaleźć prawidłowy typ podstawowy i zwraca `null` , jeśli nie istnieje prawidłowy typ podstawowy.  
  
 Zastąp tę metodę, jeśli nie korzystasz z domyślnego wewnętrznego odbicia środowiska CLR i korzystasz z metadanych lub innych technik zgłaszania informacji o systemie typu XAML lub informacji o schemacie typu.  
  
> [!IMPORTANT]
>  <xref:System.Xaml.XamlType.LookupAttachableMember%2A>jest wirtualny i w związku z tym, można go zastąpić. Przesłonięcie ma potencjalną wartość (zarówno w przypadku złośliwych celów, jak i w inny sposób) do zmiany zgłoszonych elementów członkowskich typu XAML, tak aby nie były <xref:System.ComponentModel.TypeDescriptor> one już wyrównane w oczekiwany sposób z `Get*` informacjami o źródłowym typie CLR. W przypadku wszelkich kontroli krytycznych dla zabezpieczeń, należy zamiast tego użyć bazowego typu CLR.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupBaseType">
      <MemberSignature Language="C#" Value="protected virtual System.Xaml.XamlType LookupBaseType ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Xaml.XamlType LookupBaseType() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupBaseType" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupBaseType () As XamlType" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Xaml::XamlType ^ LookupBaseType();" />
      <MemberSignature Language="F#" Value="abstract member LookupBaseType : unit -&gt; System.Xaml.XamlType&#xA;override this.LookupBaseType : unit -&gt; System.Xaml.XamlType" Usage="xamlType.LookupBaseType " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlType</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Xaml.XamlType" /> Zwraca dla bezpośredniego typu podstawowego tego typu XAML. Określanie tej wartości jest oparte na typie podstawowym tego <see cref="T:System.Xaml.XamlType" /> kontekstu i kontekście schematu.</summary>
        <returns><see cref="T:System.Xaml.XamlType" /> Dla bezpośredniego typu podstawowego tego typu XAML.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda może być wywoływana, gdy wywołujący pobiera wartość z <xref:System.Xaml.XamlType.BaseType%2A>.  
  
 Domyślna implementacja może zwracać stałą wewnętrzną, która reprezentuje <xref:System.Object> element if <xref:System.Xaml.XamlType.UnderlyingType%2A> is. `null`  
  
 Zastąp tę metodę, jeśli nie korzystasz z domyślnego wewnętrznego odbicia środowiska CLR i korzystasz z metadanych lub innych technik zgłaszania informacji o systemie typu XAML lub informacji o schemacie typu.  
  
> [!IMPORTANT]
>  <xref:System.Xaml.XamlType.LookupBaseType%2A>jest wirtualny i w związku z tym, można go zastąpić. Przesłonięcie ma potencjalną wartość (zarówno w przypadku złośliwych celów, jak i w inny sposób), aby zmienić zgłoszone informacje o typie dla typu XAML, tak aby nie były już wyrównane w oczekiwany sposób z informacjami o systemie typu odpowiadającego mu typu CLR. W przypadku wszystkich kontroli krytycznych dla zabezpieczeń operacji przypisywania i dostępu należy zamiast tego użyć bazowego typu CLR.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupCollectionKind">
      <MemberSignature Language="C#" Value="protected virtual System.Xaml.Schema.XamlCollectionKind LookupCollectionKind ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance valuetype System.Xaml.Schema.XamlCollectionKind LookupCollectionKind() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupCollectionKind" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupCollectionKind () As XamlCollectionKind" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Xaml::Schema::XamlCollectionKind LookupCollectionKind();" />
      <MemberSignature Language="F#" Value="abstract member LookupCollectionKind : unit -&gt; System.Xaml.Schema.XamlCollectionKind&#xA;override this.LookupCollectionKind : unit -&gt; System.Xaml.Schema.XamlCollectionKind" Usage="xamlType.LookupCollectionKind " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.Schema.XamlCollectionKind</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zwraca wartość <see cref="T:System.Xaml.Schema.XamlCollectionKind" /> wyliczenia, która deklaruje, który typ kolekcji jest używany <see cref="T:System.Xaml.XamlType" /> przez tę funkcję.</summary>
        <returns>Wartość <see cref="T:System.Xaml.Schema.XamlCollectionKind" /> wyliczenia.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda jest wywoływana przez wewnętrzną metodę prywatną (brak `CollectionKind` publicznego `GetCollectionKind` lub interfejsu API <xref:System.Xaml.XamlType>istnieje).  
  
 Implementacja domyślna używa wewnętrznego odbicia środowiska CLR. W przypadku, <xref:System.Xaml.XamlType.UnderlyingType%2A> gdy `null`jest to, domyślna implementacja może <xref:System.Xaml.XamlType.BaseType%2A>być używana, jeśli jest dostępna. To zachowanie pośrednio wywołuje <xref:System.Xaml.XamlType.LookupCollectionKind%2A> cyklicznie, aby spróbować znaleźć prawidłowy typ podstawowy; zwraca <xref:System.Xaml.Schema.XamlCollectionKind.None?displayProperty=nameWithType> , jeśli nie istnieje prawidłowy typ podstawowy. Ogólnie rzecz biorąc, domyślna implementacja próbuje znaleźć `Add` metodę typu podstawowego według odbicia. W przypadku znalezienia, <xref:System.Reflection.MethodInfo> `Add` Metoda jest wystarczająco dużo informacji, aby określić, <xref:System.Xaml.Schema.XamlCollectionKind> która wartość powinna zostać zwrócona. W przeciwnym razie zwraca <xref:System.Xaml.Schema.XamlCollectionKind.None?displayProperty=nameWithType>.  
  
 Zastąp tę metodę, jeśli nie korzystasz z domyślnego wewnętrznego odbicia środowiska CLR i korzystasz z metadanych lub innych technik zgłaszania informacji o systemie typu XAML lub informacji o schemacie typu.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupConstructionRequiresArguments">
      <MemberSignature Language="C#" Value="protected virtual bool LookupConstructionRequiresArguments ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool LookupConstructionRequiresArguments() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupConstructionRequiresArguments" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupConstructionRequiresArguments () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool LookupConstructionRequiresArguments();" />
      <MemberSignature Language="F#" Value="abstract member LookupConstructionRequiresArguments : unit -&gt; bool&#xA;override this.LookupConstructionRequiresArguments : unit -&gt; bool" Usage="xamlType.LookupConstructionRequiresArguments " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zwraca wartość wskazującą, czy musi ona <see cref="T:System.Xaml.XamlType" /> mieć argumenty (ograniczenia ogólne, za <see langword="x:TypeArguments" />pomocą tekstu inicjującego lub innych technik XAML) do konstruowania prawidłowego wystąpienia typu.</summary>
        <returns><see langword="true" />Jeśli konstrukcja wystąpienia wymaga pewnej wartości argumentu; w przeciwnym razie false.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda może być wywoływana, gdy wywołujący pobiera wartość z <xref:System.Xaml.XamlType.ConstructionRequiresArguments%2A>.  
  
 Domyślne implementacje są `false` zwracane dla typów uznawanych za typy wartości w systemie typów CLR. W przypadku innych niż typy wartości odbicie <xref:System.Reflection.ConstructorInfo> CLR służy do określenia, czy istnieje Konstruktor bez parametrów.  
  
 Zastąp tę metodę, jeśli nie korzystasz z domyślnego wewnętrznego odbicia środowiska CLR i korzystasz z metadanych lub innych technik zgłaszania informacji o systemie typu XAML lub informacji o schemacie typu.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupContentProperty">
      <MemberSignature Language="C#" Value="protected virtual System.Xaml.XamlMember LookupContentProperty ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Xaml.XamlMember LookupContentProperty() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupContentProperty" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupContentProperty () As XamlMember" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Xaml::XamlMember ^ LookupContentProperty();" />
      <MemberSignature Language="F#" Value="abstract member LookupContentProperty : unit -&gt; System.Xaml.XamlMember&#xA;override this.LookupContentProperty : unit -&gt; System.Xaml.XamlMember" Usage="xamlType.LookupContentProperty " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlMember</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zwraca <see cref="T:System.Xaml.XamlMember" /> informacje dotyczące właściwości content tego <see cref="T:System.Xaml.XamlType" />elementu.</summary>
        <returns><see cref="T:System.Xaml.XamlMember" />informacje dotyczące właściwości content tego <see cref="T:System.Xaml.XamlType" />elementu. Może być <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda może być wywoływana, gdy wywołujący pobiera wartość z <xref:System.Xaml.XamlType.ContentProperty%2A>.  
  
 Domyślna implementacja sprawdza dla <xref:System.Windows.Markup.ContentPropertyAttribute> definicji typu. Może również sprawdzić <xref:System.Xaml.XamlType.BaseType%2A> , czy atrybut nie został znaleziony w bezpośrednim typie podstawowym. Jeśli te testy nie wykryją typu zawartości, domyślnie zwracana `null`jest implementacja.  
  
 Zastąp tę metodę, jeśli nie korzystasz z domyślnego wewnętrznego odbicia środowiska CLR i korzystasz z metadanych lub innych technik zgłaszania informacji o systemie typu XAML lub informacji o schemacie typu.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupContentWrappers">
      <MemberSignature Language="C#" Value="protected virtual System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt; LookupContentWrappers ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Collections.Generic.IList`1&lt;class System.Xaml.XamlType&gt; LookupContentWrappers() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupContentWrappers" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupContentWrappers () As IList(Of XamlType)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Collections::Generic::IList&lt;System::Xaml::XamlType ^&gt; ^ LookupContentWrappers();" />
      <MemberSignature Language="F#" Value="abstract member LookupContentWrappers : unit -&gt; System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt;&#xA;override this.LookupContentWrappers : unit -&gt; System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt;" Usage="xamlType.LookupContentWrappers " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Pobiera listę <see cref="T:System.Xaml.XamlType" /> wartości reprezentujących otokę zawartości dla tego <see cref="T:System.Xaml.XamlType" />elementu.</summary>
        <returns>Lista <see cref="T:System.Xaml.XamlType" /> wartości, które reprezentują otoki zawartości dla tego <see cref="T:System.Xaml.XamlType" />elementu.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Otoka zawartości to Klasa, która reprezentuje typ kolekcji zawartości, gdy typy, które są używane w tej kolekcji, nie są ciągłe w systemie typów. Typy elementów kolekcji dla otoki zawartości powinny być ograniczone w jakiś sposób poza <xref:System.Object> lub neutralnym obiektem równoważnym. To ograniczenie jest jednak wymuszane tylko przez projektowanie lub przeznaczenie właściwości, które używają tego typu, a nie przez system typów. W typie może istnieć więcej niż jedna otoka zawartości.  
  
 Aby zapoznać się z przykładową klasą i scenariuszem z implementacji <xref:System.Windows.Documents.InlineCollection>XAML WPF, zobacz.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupCustomAttributeProvider">
      <MemberSignature Language="C#" Value="protected virtual System.Reflection.ICustomAttributeProvider LookupCustomAttributeProvider ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Reflection.ICustomAttributeProvider LookupCustomAttributeProvider() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupCustomAttributeProvider" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupCustomAttributeProvider () As ICustomAttributeProvider" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Reflection::ICustomAttributeProvider ^ LookupCustomAttributeProvider();" />
      <MemberSignature Language="F#" Value="abstract member LookupCustomAttributeProvider : unit -&gt; System.Reflection.ICustomAttributeProvider&#xA;override this.LookupCustomAttributeProvider : unit -&gt; System.Reflection.ICustomAttributeProvider" Usage="xamlType.LookupCustomAttributeProvider " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.ICustomAttributeProvider</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Po zaimplementowaniu w klasie pochodnej zwraca <see cref="T:System.Reflection.ICustomAttributeProvider" /> implementację.</summary>
        <returns><see cref="T:System.Reflection.ICustomAttributeProvider" /> Implementacja.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zastąp tę metodę, aby zapewnić wewnętrzne odbicie z alternatywnym sposobem uzyskania wartości atrybutów CLR. W przypadku braku przesłonięcia wewnętrzna reflektor używa typowej logiki odbicia środowiska CLR.  
  
 Domyślna implementacja zwraca `null`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupDeferringLoader">
      <MemberSignature Language="C#" Value="protected virtual System.Xaml.Schema.XamlValueConverter&lt;System.Xaml.XamlDeferringLoader&gt; LookupDeferringLoader ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Xaml.Schema.XamlValueConverter`1&lt;class System.Xaml.XamlDeferringLoader&gt; LookupDeferringLoader() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupDeferringLoader" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupDeferringLoader () As XamlValueConverter(Of XamlDeferringLoader)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Xaml::Schema::XamlValueConverter&lt;System::Xaml::XamlDeferringLoader ^&gt; ^ LookupDeferringLoader();" />
      <MemberSignature Language="F#" Value="abstract member LookupDeferringLoader : unit -&gt; System.Xaml.Schema.XamlValueConverter&lt;System.Xaml.XamlDeferringLoader&gt;&#xA;override this.LookupDeferringLoader : unit -&gt; System.Xaml.Schema.XamlValueConverter&lt;System.Xaml.XamlDeferringLoader&gt;" Usage="xamlType.LookupDeferringLoader " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.Schema.XamlValueConverter&lt;System.Xaml.XamlDeferringLoader&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> Zwraca obiekt, który jest używany do odroczonego ładowania obiektów zadeklarowanych w języku XAML.</summary>
        <returns>A <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> , który <see cref="T:System.Xaml.XamlDeferringLoader" /> ma ograniczenie dotyczące ogólnej.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda może być wywoływana, gdy wywołujący pobiera wartość z <xref:System.Xaml.XamlType.DeferringLoader%2A>. Zastąp tę metodę, jeśli <xref:System.Xaml.XamlType.DeferringLoader%2A> chcesz zwrócić inną wartość niż jest włączona domyślnie odbicie wewnętrzne i udostępnia również informacje niestandardowe. <xref:System.Xaml.Schema.XamlTypeInvoker>  
  
 Domyślna implementacja zwraca obiekt na podstawie odczytywania <xref:System.Windows.Markup.XamlDeferLoadAttribute>. Może również sprawdzić <xref:System.Xaml.XamlType.BaseType%2A> , czy atrybut nie został znaleziony w bezpośrednim typie podstawowym. Jeśli wartość jest niedostępna, ta metoda `null`zwraca.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupInvoker">
      <MemberSignature Language="C#" Value="protected virtual System.Xaml.Schema.XamlTypeInvoker LookupInvoker ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Xaml.Schema.XamlTypeInvoker LookupInvoker() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupInvoker" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupInvoker () As XamlTypeInvoker" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Xaml::Schema::XamlTypeInvoker ^ LookupInvoker();" />
      <MemberSignature Language="F#" Value="abstract member LookupInvoker : unit -&gt; System.Xaml.Schema.XamlTypeInvoker&#xA;override this.LookupInvoker : unit -&gt; System.Xaml.Schema.XamlTypeInvoker" Usage="xamlType.LookupInvoker " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.Schema.XamlTypeInvoker</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zwraca, która jest skojarzona z <see cref="T:System.Xaml.XamlType" />tym elementem. <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /></summary>
        <returns>Informacje na ten <see cref="T:System.Xaml.XamlType" />temat; w przeciwnym <see langword="null" />razie. <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda może być wywoływana przez wywołania do <xref:System.Xaml.XamlType.Invoker%2A>.  
  
 Implementacja domyślna nie wymaga, aby <xref:System.Xaml.XamlType> można było utworzyć przy użyciu jednego z konstruktorów, które przekazują początkowe. <xref:System.Xaml.Schema.XamlTypeInvoker> Jednak wartość musi istnieć <xref:System.Xaml.XamlType>dla elementu; w przeciwnym razie zostanie zwrócona `null`domyślna implementacja. <xref:System.Xaml.XamlType.UnderlyingType%2A>  
  
 Zastąp tę metodę, jeśli utworzysz również klasę pochodną <xref:System.Xaml.Schema.XamlTypeInvoker> z i zamierzasz zwrócić klasę pochodną. W przypadku powrotu `null` <xref:System.Xaml.XamlType.Invoker%2A> zwracamy <xref:System.Xaml.Schema.XamlTypeInvoker.UnknownInvoker%2A?displayProperty=nameWithType> do wywoływania.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupIsAmbient">
      <MemberSignature Language="C#" Value="protected virtual bool LookupIsAmbient ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool LookupIsAmbient() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupIsAmbient" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupIsAmbient () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool LookupIsAmbient();" />
      <MemberSignature Language="F#" Value="abstract member LookupIsAmbient : unit -&gt; bool&#xA;override this.LookupIsAmbient : unit -&gt; bool" Usage="xamlType.LookupIsAmbient " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zwraca wartość wskazującą, czy reprezentuje ona <see cref="T:System.Xaml.XamlType" /> typ otoczenia, zgodnie z definicją XAML.</summary>
        <returns><see langword="true" />Jeśli reprezentuje typ otoczenia; <see langword="false" />w przeciwnym razie. <see cref="T:System.Xaml.XamlType" /></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda może być wywoływana przez wywołania do <xref:System.Xaml.XamlType.IsAmbient%2A>.  
  
 Domyślna implementacja używa odbicia środowiska CLR na <xref:System.Xaml.XamlType.UnderlyingType%2A> i umożliwia sprawdzenie typów podstawowych. Ta implementacja sprawdza <xref:System.Windows.Markup.AmbientAttribute> , czy ma zastosowanie do definicji odpowiedniego typu na poziomie klasy i zwraca `true` w tym przypadku. Wszystkie inne przypadki zwracają `false`.  
  
 Zastąp tę metodę, jeśli <xref:System.Xaml.XamlType.IsAmbient%2A> chcesz zwrócić inną wartość niż jest włączona domyślnie odbicie wewnętrzne.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupIsConstructible">
      <MemberSignature Language="C#" Value="protected virtual bool LookupIsConstructible ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool LookupIsConstructible() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupIsConstructible" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupIsConstructible () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool LookupIsConstructible();" />
      <MemberSignature Language="F#" Value="abstract member LookupIsConstructible : unit -&gt; bool&#xA;override this.LookupIsConstructible : unit -&gt; bool" Usage="xamlType.LookupIsConstructible " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zwraca wartość wskazującą, czy reprezentuje ona <see cref="T:System.Xaml.XamlType" /> typ konstrukcyjną, zgodnie z definicją XAML.</summary>
        <returns><see langword="true" />Jeśli ten <see cref="T:System.Xaml.XamlType" /> element reprezentuje typ konstrukcyjną; <see langword="false" />w przeciwnym razie.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda może być wywoływana przez wywołania do <xref:System.Xaml.XamlType.IsConstructible%2A>.  
  
 Domyślna implementacja używa odbicia środowiska CLR na <xref:System.Xaml.XamlType.UnderlyingType%2A>. Typ musi być konkretny, niezagnieżdżony i zamknięty. Domyślna implementacja sprawdza, czy typ jest typem wartości i zwracaniem <xref:System.Xaml.XamlType.ConstructionRequiresArguments%2A>. Dla wartości null <xref:System.Xaml.XamlType.UnderlyingType%2A>Metoda zwraca wartość. `true`  
  
 Zastąp tę metodę, jeśli <xref:System.Xaml.XamlType.IsConstructible%2A> chcesz zwrócić inną wartość niż jest włączona domyślnie odbicie wewnętrzne.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupIsMarkupExtension">
      <MemberSignature Language="C#" Value="protected virtual bool LookupIsMarkupExtension ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool LookupIsMarkupExtension() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupIsMarkupExtension" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupIsMarkupExtension () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool LookupIsMarkupExtension();" />
      <MemberSignature Language="F#" Value="abstract member LookupIsMarkupExtension : unit -&gt; bool&#xA;override this.LookupIsMarkupExtension : unit -&gt; bool" Usage="xamlType.LookupIsMarkupExtension " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zwraca wartość wskazującą, czy reprezentuje ona <see cref="T:System.Xaml.XamlType" /> rozszerzenie znacznika.</summary>
        <returns><see langword="true" />Jeśli reprezentuje <see cref="T:System.Xaml.XamlType" /> to rozszerzenie znacznika; <see langword="false" />w przeciwnym razie.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda może być wywoływana przez wywołania do <xref:System.Xaml.XamlType.IsMarkupExtension%2A>.  
  
 Domyślna implementacja składa się tylko z tego wywołania:  
  
 `return CanAssignTo(XamlLanguage.MarkupExtension);`  
  
 Zastąp tę metodę, jeśli <xref:System.Xaml.XamlType.IsMarkupExtension%2A> chcesz użyć innej logiki.  
  
 W przypadku `x:MarkupExtension` `true` warunkówspecyfikacjijęzykaXAMLtentypmusibyćmożliwydoprzypisania,abymożnabyło<xref:System.Xaml.XamlType.IsMarkupExtension%2A>zwrócić do programu.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupIsNameScope">
      <MemberSignature Language="C#" Value="protected virtual bool LookupIsNameScope ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool LookupIsNameScope() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupIsNameScope" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupIsNameScope () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool LookupIsNameScope();" />
      <MemberSignature Language="F#" Value="abstract member LookupIsNameScope : unit -&gt; bool&#xA;override this.LookupIsNameScope : unit -&gt; bool" Usage="xamlType.LookupIsNameScope " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zwraca wartość wskazującą, czy reprezentuje ona <see cref="T:System.Xaml.XamlType" /> namescope języka XAML zgodnie z definicją XAML.</summary>
        <returns><see langword="true" />Jeśli reprezentuje <see cref="T:System.Xaml.XamlType" /> to namescope XAML; <see langword="false" />w przeciwnym razie.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda może być wywoływana przez wywołania do <xref:System.Xaml.XamlType.IsNameScope%2A>.  
  
 Implementacja domyślna powoduje, że <xref:System.Xaml.XamlType.CanAssignTo%2A> wywołanie jest pośrednio odwołujące się do typu. <xref:System.Windows.Markup.INameScope> <xref:System.Windows.Markup.INameScope>jest interfejsem, który jest zdefiniowany w zestawie 'Windowsbase. dll. Ta technika identyfikacji namescope języka XAML jest używana zarówno przez WPF, jak i Windows Workflow Foundation implementacje języka XAML.  
  
 Zastąp tę metodę, jeśli <xref:System.Xaml.XamlType.IsNameScope%2A> chcesz użyć innej logiki.  
  
 Namescope języka XAML Wymusza unikatowość nazw właściwości lub właściwości, które są używane w `x:Name`  /  `[name property]`programie. Jeśli <xref:System.Xaml.XamlType.IsNameScope%2A> jest`true`, należy określić jakiś mechanizm wymuszania unikatowości i należy oszacować z perspektywy tego typu będącego właścicielem namescope języka XAML. KOD XAML namescope następnie rozszerza zawartość typu do momentu napotkania innego typu elementu będącego właścicielem XAML namescope.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlObjectWriter.RootNameScope" />
      </Docs>
    </Member>
    <Member MemberName="LookupIsNullable">
      <MemberSignature Language="C#" Value="protected virtual bool LookupIsNullable ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool LookupIsNullable() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupIsNullable" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupIsNullable () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool LookupIsNullable();" />
      <MemberSignature Language="F#" Value="abstract member LookupIsNullable : unit -&gt; bool&#xA;override this.LookupIsNullable : unit -&gt; bool" Usage="xamlType.LookupIsNullable " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zwraca wartość wskazującą, czy reprezentuje ona <see cref="T:System.Xaml.XamlType" /> typ dopuszczający wartość null, zgodnie z definicją XAML.</summary>
        <returns><see langword="true" />Jeśli reprezentuje typ dopuszczający wartość null; <see langword="false" />w przeciwnym razie. <see cref="T:System.Xaml.XamlType" /></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda może być wywoływana przez wywołania do <xref:System.Xaml.XamlType.IsNullable%2A>.  
  
 Implementacja domyślna dokonuje oceny opartej na koncepcji <xref:System.Xaml.XamlType.UnderlyingType%2A>dopuszczanej do uwzględnienia w bibliotece jądra CLR. <xref:System.Xaml.XamlType.UnderlyingType%2A> Zwraca`true`wartość null.  
  
 Zastąp tę metodę, jeśli <xref:System.Xaml.XamlType.IsNullable%2A> chcesz użyć innej logiki.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupIsPublic">
      <MemberSignature Language="C#" Value="protected virtual bool LookupIsPublic ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool LookupIsPublic() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupIsPublic" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupIsPublic () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool LookupIsPublic();" />
      <MemberSignature Language="F#" Value="abstract member LookupIsPublic : unit -&gt; bool&#xA;override this.LookupIsPublic : unit -&gt; bool" Usage="xamlType.LookupIsPublic " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zwraca wartość wskazującą, czy reprezentuje ona <see cref="T:System.Xaml.XamlType" /> Typ publiczny w odpowiednim systemie typów.</summary>
        <returns><see langword="true" />Jeśli reprezentuje typ publiczny; <see langword="false" />w przeciwnym razie. <see cref="T:System.Xaml.XamlType" /></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda może być wywoływana przez wywołania do <xref:System.Xaml.XamlType.IsPublic%2A>.  
  
 Domyślna implementacja używa odbicia środowiska CLR względem wartości innej niż <xref:System.Xaml.XamlType.UnderlyingType%2A>null. <xref:System.Xaml.XamlType.UnderlyingType%2A> Zwraca`true`wartość null.  
  
 Zastąp tę metodę, jeśli <xref:System.Xaml.XamlType.IsPublic%2A> chcesz użyć innej logiki.  
  
> [!IMPORTANT]
>  <xref:System.Xaml.XamlType.LookupIsPublic%2A>jest wirtualny i w związku z tym, można go zastąpić. Przesłonięcie ma potencjalną wartość (zarówno w przypadku złośliwych celów, jak i w inny sposób), aby zmienić zgłoszone informacje o typie XAML, tak aby nie były już wyrównane w oczekiwany sposób z systemem typu lub informacjami o dostępie do jego bazowego typu CLR. W przypadku wszystkich kontroli krytycznych dla zabezpieczeń operacji przypisywania i dostępu należy zamiast tego użyć bazowego typu CLR.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupIsUnknown">
      <MemberSignature Language="C#" Value="protected virtual bool LookupIsUnknown ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool LookupIsUnknown() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupIsUnknown" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupIsUnknown () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool LookupIsUnknown();" />
      <MemberSignature Language="F#" Value="abstract member LookupIsUnknown : unit -&gt; bool&#xA;override this.LookupIsUnknown : unit -&gt; bool" Usage="xamlType.LookupIsUnknown " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zwraca wartość wskazującą, czy reprezentuje ona <see cref="T:System.Xaml.XamlType" /> typ, którego nie można rozpoznać w systemie typu źródłowego.</summary>
        <returns><see langword="true" />Jeśli ten <see cref="T:System.Xaml.XamlType" /> element reprezentuje typ nonresolvable; <see langword="false" />w przeciwnym razie.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda może być wywoływana przez wywołania do <xref:System.Xaml.XamlType.IsUnknown%2A>.  
  
 Domyślna implementacja może używać odbicia środowiska CLR. <xref:System.Xaml.XamlType.UnderlyingType%2A> Zwraca`true`wartość null.  
  
 Zastąp tę metodę, jeśli <xref:System.Xaml.XamlType.IsUnknown%2A> chcesz użyć innej logiki.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupIsWhitespaceSignificantCollection">
      <MemberSignature Language="C#" Value="protected virtual bool LookupIsWhitespaceSignificantCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool LookupIsWhitespaceSignificantCollection() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupIsWhitespaceSignificantCollection" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupIsWhitespaceSignificantCollection () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool LookupIsWhitespaceSignificantCollection();" />
      <MemberSignature Language="F#" Value="abstract member LookupIsWhitespaceSignificantCollection : unit -&gt; bool&#xA;override this.LookupIsWhitespaceSignificantCollection : unit -&gt; bool" Usage="xamlType.LookupIsWhitespaceSignificantCollection " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zwraca wartość wskazującą, czy reprezentuje ona <see cref="T:System.Xaml.XamlType" /> znaczącą kolekcję białych znaków, zgodnie z definicją XML.</summary>
        <returns><see langword="true" />Jeśli reprezentuje <see cref="T:System.Xaml.XamlType" /> to białą, znaczącą kolekcję; <see langword="false" />w przeciwnym razie.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda może być wywoływana przez wywołania do <xref:System.Xaml.XamlType.IsWhitespaceSignificantCollection%2A>.  
  
 Domyślna implementacja zwraca wartość opartą na odczycie <xref:System.Windows.Markup.WhitespaceSignificantCollectionAttribute>. Może również sprawdzić, <xref:System.Xaml.XamlType.BaseType%2A> czy dla atrybutu nie znaleziono atrybutu w bezpośrednim typie podstawowym. Jeśli wartość jest niedostępna, zwraca `false`.  
  
 Zastąp tę metodę, jeśli <xref:System.Xaml.XamlType.IsWhitespaceSignificantCollection%2A> chcesz użyć innej logiki.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupIsXData">
      <MemberSignature Language="C#" Value="protected virtual bool LookupIsXData ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool LookupIsXData() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupIsXData" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupIsXData () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool LookupIsXData();" />
      <MemberSignature Language="F#" Value="abstract member LookupIsXData : unit -&gt; bool&#xA;override this.LookupIsXData : unit -&gt; bool" Usage="xamlType.LookupIsXData " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zwraca wartość wskazującą, czy reprezentuje ona <see cref="T:System.Xaml.XamlType" /> XML <see langword="XDATA" />, zgodnie z definicją XAML.</summary>
        <returns><see langword="true" />Jeśli to <see cref="T:System.Xaml.XamlType" /> się <see langword="XDATA" /> reprezentuje;wprzeciwnymrazie.<see langword="false" /></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda może być wywoływana przez wywołania do <xref:System.Xaml.XamlType.IsXData%2A>.  
  
 Implementacja domyślna powoduje, że <xref:System.Xaml.XamlType.CanAssignTo%2A> wywołanie jest pośrednio odwołujące się do typu. <xref:System.Xml.Serialization.IXmlSerializable>  
  
 Zastąp tę metodę, jeśli <xref:System.Xaml.XamlType.IsXData%2A> chcesz użyć innej logiki.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupItemType">
      <MemberSignature Language="C#" Value="protected virtual System.Xaml.XamlType LookupItemType ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Xaml.XamlType LookupItemType() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupItemType" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupItemType () As XamlType" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Xaml::XamlType ^ LookupItemType();" />
      <MemberSignature Language="F#" Value="abstract member LookupItemType : unit -&gt; System.Xaml.XamlType&#xA;override this.LookupItemType : unit -&gt; System.Xaml.XamlType" Usage="xamlType.LookupItemType " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlType</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zwraca wartość, która dostarcza informacje o typie dla <see langword="Items" /> właściwości. <see cref="T:System.Xaml.XamlType" /></summary>
        <returns>Obiekt dla typu elementów w kolekcji; w przeciwnym razie, <see langword="null" /> Jeśli <see cref="T:System.Xaml.XamlType" /> nie reprezentuje kolekcji. <see cref="T:System.Xaml.XamlType" /></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda może być wywoływana przez wywołania do <xref:System.Xaml.XamlType.ItemType%2A>.  
  
 Domyślna implementacja może używać koncepcji odbicia środowiska CLR, `Add` takich jak sprawdzanie metody przez <xref:System.Reflection.MethodInfo> i użycie <xref:System.Reflection.ParameterInfo>; sprawdzanie <xref:System.Xaml.XamlType.IsArray%2A>i sprawdzanie <xref:System.Xaml.XamlType.BaseType%2A> i próba wykonania tej samej logiki.  
  
 Zastąp tę metodę, jeśli <xref:System.Xaml.XamlType.ItemType%2A> chcesz użyć innej logiki. Przypadki, <xref:System.Xaml.XamlType.LookupCollectionKind%2A> w <xref:System.Xaml.Schema.XamlCollectionKind.None?displayProperty=nameWithType> których funkcja `null`Returns powinna zwracać.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupKeyType">
      <MemberSignature Language="C#" Value="protected virtual System.Xaml.XamlType LookupKeyType ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Xaml.XamlType LookupKeyType() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupKeyType" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupKeyType () As XamlType" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Xaml::XamlType ^ LookupKeyType();" />
      <MemberSignature Language="F#" Value="abstract member LookupKeyType : unit -&gt; System.Xaml.XamlType&#xA;override this.LookupKeyType : unit -&gt; System.Xaml.XamlType" Usage="xamlType.LookupKeyType " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlType</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zwraca wartość, która dostarcza informacje o typie dla właściwości <see cref="T:System.Xaml.XamlType" />klucza, <see cref="T:System.Xaml.XamlType" /> Jeśli reprezentuje słownik.</summary>
        <returns>Obiekt dla typu klucza do użycia w słowniku lub <see langword="null" /> , jeśli to <see cref="T:System.Xaml.XamlType" /> nie reprezentuje słownika, <see cref="T:System.Xaml.XamlType" /></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda może być wywoływana przez wywołania do <xref:System.Xaml.XamlType.KeyType%2A>.  
  
 Domyślna implementacja może `Add` używać koncepcji odbicia środowiska CLR, takich jak sprawdzanie metody przez <xref:System.Reflection.MethodInfo> i używanie <xref:System.Reflection.ParameterInfo>i sprawdzanie <xref:System.Xaml.XamlType.BaseType%2A> i próba wykonania tej samej logiki.  
  
 Zastąp tę metodę, jeśli <xref:System.Xaml.XamlType.KeyType%2A> chcesz użyć innej logiki. Przypadki, <xref:System.Xaml.XamlType.LookupCollectionKind%2A> w których nie <xref:System.Xaml.Schema.XamlCollectionKind.Dictionary?displayProperty=nameWithType> zwracamy `null`, powinny zwrócić.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupMarkupExtensionReturnType">
      <MemberSignature Language="C#" Value="protected virtual System.Xaml.XamlType LookupMarkupExtensionReturnType ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Xaml.XamlType LookupMarkupExtensionReturnType() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupMarkupExtensionReturnType" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupMarkupExtensionReturnType () As XamlType" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Xaml::XamlType ^ LookupMarkupExtensionReturnType();" />
      <MemberSignature Language="F#" Value="abstract member LookupMarkupExtensionReturnType : unit -&gt; System.Xaml.XamlType&#xA;override this.LookupMarkupExtensionReturnType : unit -&gt; System.Xaml.XamlType" Usage="xamlType.LookupMarkupExtensionReturnType " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlType</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zwraca wartość, która dostarcza informacje o typie dla zwracanego <see langword="ProvideValue" /> <see cref="T:System.Xaml.XamlType" />elementu, jeśli reprezentuje rozszerzenie znacznika.</summary>
        <returns>Obiekt dla zwracanego typu dla rozszerzenia znacznika użycie; <see langword="null" />w przeciwnym razie, jeśli <see cref="T:System.Xaml.XamlType" /> nie reprezentuje rozszerzenia znacznika. <see cref="T:System.Xaml.XamlType" /></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda może być wywoływana przez wywołania do <xref:System.Xaml.XamlType.MarkupExtensionReturnType%2A>.  
  
 Domyślna implementacja zwraca <xref:System.Xaml.XamlType> wartość na podstawie odczytywania <xref:System.Windows.Markup.MarkupExtensionReturnTypeAttribute>. Może również sprawdzić <xref:System.Xaml.XamlType.BaseType%2A> , czy atrybut nie został znaleziony w bezpośrednim typie podstawowym. Jeśli wartość jest niedostępna, zwraca `null`.  
  
 Zastąp tę metodę, jeśli <xref:System.Xaml.XamlType.MarkupExtensionReturnType%2A> chcesz użyć innej logiki.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupMember">
      <MemberSignature Language="C#" Value="protected virtual System.Xaml.XamlMember LookupMember (string name, bool skipReadOnlyCheck);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Xaml.XamlMember LookupMember(string name, bool skipReadOnlyCheck) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupMember(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupMember (name As String, skipReadOnlyCheck As Boolean) As XamlMember" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Xaml::XamlMember ^ LookupMember(System::String ^ name, bool skipReadOnlyCheck);" />
      <MemberSignature Language="F#" Value="abstract member LookupMember : string * bool -&gt; System.Xaml.XamlMember&#xA;override this.LookupMember : string * bool -&gt; System.Xaml.XamlMember" Usage="xamlType.LookupMember (name, skipReadOnlyCheck)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlMember</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="skipReadOnlyCheck" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="name">Nazwa elementu członkowskiego do pobrania (jako ciąg).</param>
        <param name="skipReadOnlyCheck"><see langword="true" />Aby zwrócić element członkowski, nawet jeśli ten element członkowski <see langword="true" /> ma wartość <see cref="P:System.Xaml.XamlMember.IsReadOnly" />dla; <see langword="false" /> nie<see cref="P:System.Xaml.XamlMember.IsReadOnly" /> zwraca elementu członkowskiego. Wartość domyślna to <see langword="false" />.</param>
        <summary>Zwraca dla określonego nazwanego członka z tego <see cref="T:System.Xaml.XamlType" />elementu. <see cref="T:System.Xaml.XamlMember" /></summary>
        <returns>Informacje dla elementu członkowskiego, jeśli element członkowski został znaleziony; <see langword="null" />w przeciwnym razie. <see cref="T:System.Xaml.XamlMember" /></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda może być wywoływana przez wywołania do <xref:System.Xaml.XamlType.GetMember%2A>.  
  
 Domyślna implementacja zwraca <xref:System.Xaml.XamlType> na podstawie wewnętrznego odbicia i oceny środowiska CLR względem kontekstu schematu.  
  
 Zastąp tę metodę, jeśli <xref:System.Xaml.XamlType.GetMember%2A> chcesz użyć innej logiki.  
  
> [!IMPORTANT]
>  <xref:System.Xaml.XamlType.LookupMember%2A>jest wirtualny i w związku z tym, można go zastąpić. Przesłonięcie ma potencjalną wartość (zarówno w przypadku złośliwych celów, jak i w inny sposób) do zmiany zgłoszonych elementów członkowskich typu XAML, tak aby nie były <xref:System.ComponentModel.TypeDescriptor> one już wyrównane w oczekiwany sposób z `Get*` informacjami o źródłowym typie CLR. W przypadku wszelkich kontroli krytycznych dla zabezpieczeń, należy zamiast tego użyć bazowego typu CLR.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupPositionalParameters">
      <MemberSignature Language="C#" Value="protected virtual System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt; LookupPositionalParameters (int parameterCount);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Collections.Generic.IList`1&lt;class System.Xaml.XamlType&gt; LookupPositionalParameters(int32 parameterCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupPositionalParameters(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupPositionalParameters (parameterCount As Integer) As IList(Of XamlType)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Collections::Generic::IList&lt;System::Xaml::XamlType ^&gt; ^ LookupPositionalParameters(int parameterCount);" />
      <MemberSignature Language="F#" Value="abstract member LookupPositionalParameters : int -&gt; System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt;&#xA;override this.LookupPositionalParameters : int -&gt; System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt;" Usage="xamlType.LookupPositionalParameters parameterCount" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameterCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="parameterCount">Liczba (w liczbie argumentów) określonej składni lub trybu konstruktora, dla którego chcesz uzyskać informacje.</param>
        <summary>W przypadku typów rozszerzeń znaczników zwraca typy parametrów pozycyjnych, które są obsługiwane w określonym użyciu <see cref="T:System.Xaml.XamlType" />rozszerzenia znacznika.</summary>
        <returns>Lista <see cref="T:System.Xaml.XamlType" /> wartości, z których <see cref="T:System.Xaml.XamlType" /> każdy jest typem dla tej pozycji w składni. Należy określić te typy w tej samej kolejności podczas dostarczania znaczników dla rozszerzenia znaczników.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda może być wywoływana przez wywołania do <xref:System.Xaml.XamlType.GetPositionalParameters%2A>.  
  
 Implementacja domyślna używa wewnętrznych informacji o odbiciu w oparciu o znajdowanie konstruktorów i sprawdzanie liczby argumentów. Zastąp tę metodę, jeśli <xref:System.Xaml.XamlType.GetPositionalParameters%2A> chcesz użyć innej logiki.  
  
 Ten interfejs API jest przydatny tylko <xref:System.Xaml.XamlType> wtedy, gdy reprezentuje to<xref:System.Xaml.XamlType.IsMarkupExtension%2A> rozszerzenie `true`znacznika (IS).  
  
 Dane wejściowe `parameterCount` nie dotyczą żądania typu określonego parametru pozycyjnego. Służy do określania liczby argumentów użycia rozszerzenia znaczników. Użycie rozszerzenia znaczników często ma wiele podpisów i używa różnej liczby argumentów (Count) parametrów pozycyjnych, aby odróżnić. Można jednak skonfigurować kontekst schematu, aby zezwalał na duplikowanie arities i użycie typów parametrów pozycyjnych do rozróżniania. Aby uzyskać więcej informacji, zobacz <xref:System.Xaml.XamlSchemaContext.SupportMarkupExtensionsWithDuplicateArity%2A>. Dla określonej liczby argumentów, pozycje i typy parametrów mogą się różnić. Aby uzyskać typ pozycyjny dla określonej liczby argumentów użycie rozszerzenia znacznika, należy najpierw wywołać <xref:System.Xaml.XamlType.GetPositionalParameters%2A> liczbę argumentów. Następnie pobierz element w tej pozycji z zwróconej kolekcji.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupSetMarkupExtensionHandler">
      <MemberSignature Language="C#" Value="protected virtual EventHandler&lt;System.Windows.Markup.XamlSetMarkupExtensionEventArgs&gt; LookupSetMarkupExtensionHandler ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.EventHandler`1&lt;class System.Windows.Markup.XamlSetMarkupExtensionEventArgs&gt; LookupSetMarkupExtensionHandler() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupSetMarkupExtensionHandler" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupSetMarkupExtensionHandler () As EventHandler(Of XamlSetMarkupExtensionEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual EventHandler&lt;System::Windows::Markup::XamlSetMarkupExtensionEventArgs ^&gt; ^ LookupSetMarkupExtensionHandler();" />
      <MemberSignature Language="F#" Value="abstract member LookupSetMarkupExtensionHandler : unit -&gt; EventHandler&lt;System.Windows.Markup.XamlSetMarkupExtensionEventArgs&gt;&#xA;override this.LookupSetMarkupExtensionHandler : unit -&gt; EventHandler&lt;System.Windows.Markup.XamlSetMarkupExtensionEventArgs&gt;" Usage="xamlType.LookupSetMarkupExtensionHandler " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Markup.XamlSetMarkupExtensionEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zwraca wywołanie zwrotne programu obsługi, które ma być używane dla operacji ustawiania rozszerzeń znaczników.</summary>
        <returns>Wywołanie zwrotne programu obsługi do użycia dla operacji ustawiania rozszerzeń znaczników.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Domyślna implementacja zwraca wartość opartą na odczycie <xref:System.Windows.Markup.XamlSetMarkupExtensionAttribute>. Może również sprawdzić <xref:System.Xaml.XamlType.BaseType%2A> , czy atrybut nie został znaleziony w bezpośrednim typie podstawowym. Jeśli wartość jest niedostępna, zwraca `null`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupSetTypeConverterHandler">
      <MemberSignature Language="C#" Value="protected virtual EventHandler&lt;System.Windows.Markup.XamlSetTypeConverterEventArgs&gt; LookupSetTypeConverterHandler ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.EventHandler`1&lt;class System.Windows.Markup.XamlSetTypeConverterEventArgs&gt; LookupSetTypeConverterHandler() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupSetTypeConverterHandler" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupSetTypeConverterHandler () As EventHandler(Of XamlSetTypeConverterEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual EventHandler&lt;System::Windows::Markup::XamlSetTypeConverterEventArgs ^&gt; ^ LookupSetTypeConverterHandler();" />
      <MemberSignature Language="F#" Value="abstract member LookupSetTypeConverterHandler : unit -&gt; EventHandler&lt;System.Windows.Markup.XamlSetTypeConverterEventArgs&gt;&#xA;override this.LookupSetTypeConverterHandler : unit -&gt; EventHandler&lt;System.Windows.Markup.XamlSetTypeConverterEventArgs&gt;" Usage="xamlType.LookupSetTypeConverterHandler " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Markup.XamlSetTypeConverterEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zwraca procedurę obsługi do użycia w przypadku ustawień konwertera typów.</summary>
        <returns>Procedura obsługi do użycia w przypadku ustawień konwertera typów.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Domyślna implementacja zwraca wartość opartą na odczycie <xref:System.Windows.Markup.XamlSetTypeConverterAttribute>. Może również sprawdzić <xref:System.Xaml.XamlType.BaseType%2A> , czy atrybut nie został znaleziony w bezpośrednim typie podstawowym. Jeśli wartość jest niedostępna, zwraca `null`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupTrimSurroundingWhitespace">
      <MemberSignature Language="C#" Value="protected virtual bool LookupTrimSurroundingWhitespace ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool LookupTrimSurroundingWhitespace() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupTrimSurroundingWhitespace" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupTrimSurroundingWhitespace () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool LookupTrimSurroundingWhitespace();" />
      <MemberSignature Language="F#" Value="abstract member LookupTrimSurroundingWhitespace : unit -&gt; bool&#xA;override this.LookupTrimSurroundingWhitespace : unit -&gt; bool" Usage="xamlType.LookupTrimSurroundingWhitespace " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zwraca wartość wskazującą, czy <see cref="T:System.Xaml.XamlType" /> powinien być serializowany przy użyciu trybu, który przycina otaczające odstępy.</summary>
        <returns><see langword="true" />Jeśli ta <see cref="T:System.Xaml.XamlType" /> wartość powinna być serializowana w trybie przycinania otaczających białych znaków; <see langword="false" />w przeciwnym razie.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda może być wywoływana przez wywołania do <xref:System.Xaml.XamlType.TrimSurroundingWhitespace%2A>.  
  
 Domyślna implementacja zwraca wartość opartą na odczycie <xref:System.Windows.Markup.TrimSurroundingWhitespaceAttribute>. Może również sprawdzić <xref:System.Xaml.XamlType.BaseType%2A> , czy atrybut nie został znaleziony w bezpośrednim typie podstawowym. Jeśli wartość jest niedostępna, zwraca `false`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupTypeConverter">
      <MemberSignature Language="C#" Value="protected virtual System.Xaml.Schema.XamlValueConverter&lt;System.ComponentModel.TypeConverter&gt; LookupTypeConverter ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Xaml.Schema.XamlValueConverter`1&lt;class System.ComponentModel.TypeConverter&gt; LookupTypeConverter() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupTypeConverter" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupTypeConverter () As XamlValueConverter(Of TypeConverter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Xaml::Schema::XamlValueConverter&lt;System::ComponentModel::TypeConverter ^&gt; ^ LookupTypeConverter();" />
      <MemberSignature Language="F#" Value="abstract member LookupTypeConverter : unit -&gt; System.Xaml.Schema.XamlValueConverter&lt;System.ComponentModel.TypeConverter&gt;&#xA;override this.LookupTypeConverter : unit -&gt; System.Xaml.Schema.XamlValueConverter&lt;System.ComponentModel.TypeConverter&gt;" Usage="xamlType.LookupTypeConverter " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.Schema.XamlValueConverter&lt;System.ComponentModel.TypeConverter&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zwraca, <see cref="T:System.ComponentModel.TypeConverter" /> <see cref="T:System.Xaml.XamlType" />który ma ograniczenie, które reprezentuje zachowanie konwersji typu dla wartości tego elementu. <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /></summary>
        <returns>Z ograniczeniem reprezentującym zachowanie konwersji typu dla wartości tego <see cref="T:System.Xaml.XamlType" />elementu; w przeciwnym razie <see langword="null" />. <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> <see cref="T:System.ComponentModel.TypeConverter" /></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda może być wywoływana przez wywołania do <xref:System.Xaml.XamlType.TypeConverter%2A>.  
  
 Domyślna implementacja zwraca wartość opartą na odczycie <xref:System.ComponentModel.TypeConverterAttribute>. Domyślna implementacja może również sprawdzać <xref:System.Xaml.XamlType.BaseType%2A> , czy atrybut nie został znaleziony w bezpośrednim typie podstawowym. Zawiera również specjalną logikę dla domyślnej konwersji wyliczeń, wspólnych typów wartości i rodzajowych. Jeśli wartość jest niedostępna, zwraca `null`.  
  
 Zastąp tę metodę, jeśli <xref:System.Xaml.XamlType.TypeConverter%2A> chcesz użyć innej logiki.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupUnderlyingType">
      <MemberSignature Language="C#" Value="protected virtual Type LookupUnderlyingType ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Type LookupUnderlyingType() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupUnderlyingType" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupUnderlyingType () As Type" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual Type ^ LookupUnderlyingType();" />
      <MemberSignature Language="F#" Value="abstract member LookupUnderlyingType : unit -&gt; Type&#xA;override this.LookupUnderlyingType : unit -&gt; Type" Usage="xamlType.LookupUnderlyingType " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zwraca środowisko CLR <see cref="T:System.Type" /> , które jest zależne od tego. <see cref="T:System.Xaml.XamlType" /></summary>
        <returns>Środowisko CLR <see cref="T:System.Type" /> , które jest zależne od tego <see langword="null" /> <see cref="T:System.Xaml.XamlType" />; w przeciwnym razie.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda może być wywoływana przez wywołania do <xref:System.Xaml.XamlType.UnderlyingType%2A>.  
  
 Domyślna implementacja zwraca pole wewnętrzne. To pole jest zazwyczaj inicjowane podczas konstruowania i jego wartość jest oparta na tym, który Konstruktor został wywołany, i podane informacje.  
  
 Zastąp tę metodę, jeśli <xref:System.Xaml.XamlType.UnderlyingType%2A> chcesz użyć innej logiki.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupUsableDuringInitialization">
      <MemberSignature Language="C#" Value="protected virtual bool LookupUsableDuringInitialization ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool LookupUsableDuringInitialization() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupUsableDuringInitialization" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupUsableDuringInitialization () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool LookupUsableDuringInitialization();" />
      <MemberSignature Language="F#" Value="abstract member LookupUsableDuringInitialization : unit -&gt; bool&#xA;override this.LookupUsableDuringInitialization : unit -&gt; bool" Usage="xamlType.LookupUsableDuringInitialization " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zwraca wartość wskazującą, czy jest ona <see cref="T:System.Xaml.XamlType" /> skompilowana w dół podczas inicjowania XAML.</summary>
        <returns><see langword="true" />Jeśli jest <see cref="T:System.Xaml.XamlType" /> to skompilowane na początku podczas inicjowania XAML; <see langword="false" />w przeciwnym razie.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Góra w dół to metaphor, która przybliży zachowanie procesora XAML podczas tworzenia grafu obiektów. Po utworzeniu z góry w dół, typ jest tworzony, dołączany do elementu nadrzędnego i ma ustawione właściwości. Konstrukcja z góry nie pozwala na wielokrotne wywoływanie programów obsługi zmieniających właściwości. Takie obsłudze pozwala na tworzenie grafów obiektów i w związku z tym eliminuje wiele wywołań obsługi i zapewnia optymalizację wydajności dla uruchamiania grafu obiektów.  
  
 Ta metoda może być wywoływana przez wywołania do <xref:System.Xaml.XamlType.IsUsableDuringInitialization%2A>.  
  
 Domyślna implementacja zwraca wartość opartą na odczycie <xref:System.Windows.Markup.UsableDuringInitializationAttribute>. Może również sprawdzić <xref:System.Xaml.XamlType.BaseType%2A> , czy atrybut nie został znaleziony w bezpośrednim typie podstawowym. Jeśli wartość jest niedostępna, zwraca `false`.  
  
 Zastąp tę metodę, jeśli <xref:System.Xaml.XamlType.IsUsableDuringInitialization%2A> chcesz użyć innej logiki.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupValueSerializer">
      <MemberSignature Language="C#" Value="protected virtual System.Xaml.Schema.XamlValueConverter&lt;System.Windows.Markup.ValueSerializer&gt; LookupValueSerializer ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Xaml.Schema.XamlValueConverter`1&lt;class System.Windows.Markup.ValueSerializer&gt; LookupValueSerializer() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupValueSerializer" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupValueSerializer () As XamlValueConverter(Of ValueSerializer)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Xaml::Schema::XamlValueConverter&lt;System::Windows::Markup::ValueSerializer ^&gt; ^ LookupValueSerializer();" />
      <MemberSignature Language="F#" Value="abstract member LookupValueSerializer : unit -&gt; System.Xaml.Schema.XamlValueConverter&lt;System.Windows.Markup.ValueSerializer&gt;&#xA;override this.LookupValueSerializer : unit -&gt; System.Xaml.Schema.XamlValueConverter&lt;System.Windows.Markup.ValueSerializer&gt;" Usage="xamlType.LookupValueSerializer " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.Schema.XamlValueConverter&lt;System.Windows.Markup.ValueSerializer&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zwraca, <see cref="T:System.Windows.Markup.ValueSerializer" /> <see cref="T:System.Xaml.XamlType" />który ma ograniczenie, które reprezentuje zachowanie serializacji wartości dla wartości tego elementu. <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /></summary>
        <returns>Z ograniczeniem reprezentującym zachowanie serializacji wartości dla wartości tego <see cref="T:System.Xaml.XamlType" />elementu; w przeciwnym <see langword="null" />razie. <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> <see cref="T:System.Windows.Markup.ValueSerializer" /></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda może być wywoływana przez wywołania do <xref:System.Xaml.XamlType.ValueSerializer%2A>.  
  
 Domyślna implementacja zwraca wartość opartą na odczycie <xref:System.Windows.Markup.ValueSerializerAttribute>. Może również sprawdzić <xref:System.Xaml.XamlType.BaseType%2A> , czy atrybut nie został znaleziony w bezpośrednim typie podstawowym. Zawiera również specjalną logikę dla domyślnej serializacji wyliczeń, wspólnych typów wartości lub rodzajowych. Jeśli wartość jest niedostępna, zwraca `null`.  
  
 Zastąp tę metodę, jeśli <xref:System.Xaml.XamlType.ValueSerializer%2A> chcesz użyć innej logiki.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MarkupExtensionReturnType">
      <MemberSignature Language="C#" Value="public System.Xaml.XamlType MarkupExtensionReturnType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xaml.XamlType MarkupExtensionReturnType" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.MarkupExtensionReturnType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MarkupExtensionReturnType As XamlType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xaml::XamlType ^ MarkupExtensionReturnType { System::Xaml::XamlType ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.MarkupExtensionReturnType : System.Xaml.XamlType" Usage="System.Xaml.XamlType.MarkupExtensionReturnType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość, która dostarcza informacje o typie dla zwracanego <see langword="ProvideValue" /> <see cref="T:System.Xaml.XamlType" />elementu, jeśli reprezentuje rozszerzenie znacznika.</summary>
        <value>Obiekt dla zwracanego typu dla rozszerzenia znacznika użycie; <see langword="null" />w przeciwnym razie, jeśli <see cref="T:System.Xaml.XamlType" /> nie reprezentuje rozszerzenia znacznika. <see cref="T:System.Xaml.XamlType" /></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość ma zastosowanie tylko wtedy, <xref:System.Xaml.XamlType> gdy reprezentuje rozszerzenie znacznika (`x:MarkupExtension` znajduje się na liście typów do przypisania).  
  
 Jeśli nie używasz domyślnej techniki odbicia środowiska CLR dla <xref:System.Xaml.XamlType>, wywołania tej właściwości mogą wywołać <xref:System.Xaml.XamlType.LookupMarkupExtensionReturnType%2A> zastąpienia w <xref:System.Xaml.XamlType> klasach pochodnych. Aby uzyskać więcej informacji na temat wartości zwracanych i innych zachowań, zapoznaj się z dokumentacją dla <xref:System.Xaml.XamlType.LookupMarkupExtensionReturnType%2A> tego typu.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.Name" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="System.Xaml.XamlType.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera nazwę ciągu reprezentującą ten <see cref="T:System.Xaml.XamlType" /> typ.</summary>
        <value>Nazwa ciągu tego typu XAML.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość zwykle Pobiera nazwę skonstruowaną przez schemat (na <xref:System.Xaml.XamlType.%23ctor%2A> podpis) lub nazwę <xref:System.Type>, jeśli jest zbudowana przy użyciu odpowiednich konstruktorów systemu typów CLR.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (System.Xaml.XamlType xamlType1, System.Xaml.XamlType xamlType2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(class System.Xaml.XamlType xamlType1, class System.Xaml.XamlType xamlType2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.op_Equality(System.Xaml.XamlType,System.Xaml.XamlType)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (xamlType1 As XamlType, xamlType2 As XamlType) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(System::Xaml::XamlType ^ xamlType1, System::Xaml::XamlType ^ xamlType2);" />
      <MemberSignature Language="F#" Value="static member ( = ) : System.Xaml.XamlType * System.Xaml.XamlType -&gt; bool" Usage="xamlType1 = xamlType2" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xamlType1" Type="System.Xaml.XamlType" />
        <Parameter Name="xamlType2" Type="System.Xaml.XamlType" />
      </Parameters>
      <Docs>
        <param name="xamlType1">A <see cref="T:System.Xaml.XamlType" /> lub <see langword="null" />.</param>
        <param name="xamlType2">A <see cref="T:System.Xaml.XamlType" /> lub <see langword="null" />.</param>
        <summary>Określa, czy dwa <see cref="T:System.Xaml.XamlType" /> określone obiekty mają tę samą wartość.</summary>
        <returns><see langword="true" />Jeśli wartość <paramref name="xamlType1" /> jest taka sama jak <paramref name="xamlType2" />wartość; w przeciwnym razie <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (System.Xaml.XamlType xamlType1, System.Xaml.XamlType xamlType2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(class System.Xaml.XamlType xamlType1, class System.Xaml.XamlType xamlType2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.op_Inequality(System.Xaml.XamlType,System.Xaml.XamlType)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (xamlType1 As XamlType, xamlType2 As XamlType) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(System::Xaml::XamlType ^ xamlType1, System::Xaml::XamlType ^ xamlType2);" />
      <MemberSignature Language="F#" Value="static member op_Inequality : System.Xaml.XamlType * System.Xaml.XamlType -&gt; bool" Usage="System.Xaml.XamlType.op_Inequality (xamlType1, xamlType2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xamlType1" Type="System.Xaml.XamlType" />
        <Parameter Name="xamlType2" Type="System.Xaml.XamlType" />
      </Parameters>
      <Docs>
        <param name="xamlType1">A <see cref="T:System.Xaml.XamlType" /> lub <see langword="null" />.</param>
        <param name="xamlType2">A <see cref="T:System.Xaml.XamlType" /> lub <see langword="null" />.</param>
        <summary>Określa, czy dwa <see cref="T:System.Xaml.XamlType" /> określone obiekty mają różne wartości.</summary>
        <returns><see langword="true" />Jeśli wartość <paramref name="xamlType1" /> jest różna od <paramref name="xamlType2" />wartości; w przeciwnym razie, <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PreferredXamlNamespace">
      <MemberSignature Language="C#" Value="public string PreferredXamlNamespace { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PreferredXamlNamespace" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.PreferredXamlNamespace" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PreferredXamlNamespace As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ PreferredXamlNamespace { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PreferredXamlNamespace : string" Usage="System.Xaml.XamlType.PreferredXamlNamespace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera pojedynczą przestrzeń nazw XAML, która jest podstawową przestrzenią nazw <see cref="T:System.Xaml.XamlType" />XAML.</summary>
        <value>Identyfikator jako ciąg dla podstawowej przestrzeni nazw XAML dla tego typu XAML.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta implementacja zapewnia taką samą wartość jak wywoływanie <xref:System.Xaml.XamlType.GetXamlNamespaces%2A> , a następnie pobieranie pierwszego ciągu wartości z zwróconego wyliczalnego zestawu.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SchemaContext">
      <MemberSignature Language="C#" Value="public System.Xaml.XamlSchemaContext SchemaContext { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xaml.XamlSchemaContext SchemaContext" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.SchemaContext" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SchemaContext As XamlSchemaContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xaml::XamlSchemaContext ^ SchemaContext { System::Xaml::XamlSchemaContext ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SchemaContext : System.Xaml.XamlSchemaContext" Usage="System.Xaml.XamlType.SchemaContext" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlSchemaContext</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera aktywny <see cref="T:System.Xaml.XamlSchemaContext" /> do <see cref="T:System.Xaml.XamlType" />przetwarzania.</summary>
        <value>Aktywna <see cref="T:System.Xaml.XamlSchemaContext" /> do przetwarzania tego <see cref="T:System.Xaml.XamlType" />elementu.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Xaml.XamlSchemaContext>jest wymaganym wpisem parametru podczas konstruowania <xref:System.Xaml.XamlType>elementu.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="xamlType.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zwraca reprezentację <see cref="T:System.Xaml.XamlType" />ciągu.</summary>
        <returns>Reprezentacja <see cref="T:System.Xaml.XamlType" />ciągu.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Xaml.XamlType> Implementacja<xref:System.Object.ToString%2A> zwraca właściwośćelementu.<xref:System.Xaml.XamlType.Name%2A> <xref:System.Xaml.XamlType>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TrimSurroundingWhitespace">
      <MemberSignature Language="C#" Value="public bool TrimSurroundingWhitespace { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool TrimSurroundingWhitespace" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.TrimSurroundingWhitespace" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TrimSurroundingWhitespace As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool TrimSurroundingWhitespace { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.TrimSurroundingWhitespace : bool" Usage="System.Xaml.XamlType.TrimSurroundingWhitespace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość wskazującą, czy ma ona <see cref="T:System.Xaml.XamlType" /> zachowanie obsługi odstępów dla serializacji, która przycina otaczające odstępy w jego zawartości.</summary>
        <value><see langword="true" />Jeśli reprezentuje typ, który używa przycinania białych znaków; <see langword="false" />w przeciwnym razie. <see cref="T:System.Xaml.XamlType" /></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli nie używasz domyślnej techniki odbicia środowiska CLR dla <xref:System.Xaml.XamlType>, wywołania tej właściwości mogą wywołać <xref:System.Xaml.XamlType.LookupIsWhitespaceSignificantCollection%2A> zastąpienia w <xref:System.Xaml.XamlType> klasach pochodnych. Aby uzyskać więcej informacji na temat wartości zwracanych i innych zachowań, zapoznaj się z dokumentacją dla <xref:System.Xaml.XamlType.LookupIsWhitespaceSignificantCollection%2A> tego typu.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TypeArguments">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt; TypeArguments { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;class System.Xaml.XamlType&gt; TypeArguments" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.TypeArguments" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TypeArguments As IList(Of XamlType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IList&lt;System::Xaml::XamlType ^&gt; ^ TypeArguments { System::Collections::Generic::IList&lt;System::Xaml::XamlType ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TypeArguments : System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt;" Usage="System.Xaml.XamlType.TypeArguments" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera listę argumentów typu dla przypadków, w których <see cref="T:System.Xaml.XamlType" /> reprezentuje ogólny.</summary>
        <value>Lista typów argumentów typu; w przeciwnym razie <see cref="T:System.Xaml.XamlType" />,jeśli nie reprezentuje ogólnego. <see langword="null" /></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Istnieją pewne scenariusze, <xref:System.Xaml.XamlType> w których <xref:System.Xaml.XamlType.TypeArguments%2A> wywołanie parametru zwraca listę, w której typy są nadal otwarte. W tym przypadku co najmniej jedna z wartości zwracanych <xref:System.Xaml.XamlType> będzie mieć <xref:System.Xaml.XamlType.Name%2A?displayProperty=nameWithType>wartości symboli zastępczych, takich jak `T`, aby reprezentować, że ogólny jest wciąż otwarty. Ten scenariusz może wystąpić, jeśli otrzymasz <xref:System.Xaml.XamlType> od wywołania do <xref:System.Xaml.XamlSchemaContext.GetXamlType%2A>, a nie z implementacji czytnika XAML.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TypeConverter">
      <MemberSignature Language="C#" Value="public System.Xaml.Schema.XamlValueConverter&lt;System.ComponentModel.TypeConverter&gt; TypeConverter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xaml.Schema.XamlValueConverter`1&lt;class System.ComponentModel.TypeConverter&gt; TypeConverter" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.TypeConverter" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TypeConverter As XamlValueConverter(Of TypeConverter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xaml::Schema::XamlValueConverter&lt;System::ComponentModel::TypeConverter ^&gt; ^ TypeConverter { System::Xaml::Schema::XamlValueConverter&lt;System::ComponentModel::TypeConverter ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TypeConverter : System.Xaml.Schema.XamlValueConverter&lt;System.ComponentModel.TypeConverter&gt;" Usage="System.Xaml.XamlType.TypeConverter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.Schema.XamlValueConverter&lt;System.ComponentModel.TypeConverter&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera ograniczenie <see cref="T:System.ComponentModel.TypeConverter" /> <see cref="T:System.Xaml.XamlType" />with, które reprezentuje zachowanie konwersji typu dla wartości tego elementu. <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /></summary>
        <value>Element <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> <see cref="T:System.Xaml.XamlType" />with <see cref="T:System.ComponentModel.TypeConverter" /> Constraint, który reprezentuje zachowanie konwersji typu dla wartości tego elementu.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli nie używasz domyślnej techniki odbicia środowiska CLR dla <xref:System.Xaml.XamlType>, wywołania tej właściwości mogą wywołać <xref:System.Xaml.XamlType.LookupTypeConverter%2A> zastąpienia w <xref:System.Xaml.XamlType> klasach pochodnych. Aby uzyskać więcej informacji na temat wartości zwracanych i innych zachowań, zapoznaj się z dokumentacją dla <xref:System.Xaml.XamlType.LookupTypeConverter%2A> tego typu.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UnderlyingType">
      <MemberSignature Language="C#" Value="public Type UnderlyingType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type UnderlyingType" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.UnderlyingType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UnderlyingType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ UnderlyingType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.UnderlyingType : Type" Usage="System.Xaml.XamlType.UnderlyingType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera środowisko CLR <see cref="T:System.Type" /> , które jest zależne od tego. <see cref="T:System.Xaml.XamlType" /></summary>
        <value>Środowisko CLR <see cref="T:System.Type" /> , które jest zależne od tego <see cref="T:System.Xaml.XamlType" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ValueSerializer">
      <MemberSignature Language="C#" Value="public System.Xaml.Schema.XamlValueConverter&lt;System.Windows.Markup.ValueSerializer&gt; ValueSerializer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xaml.Schema.XamlValueConverter`1&lt;class System.Windows.Markup.ValueSerializer&gt; ValueSerializer" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.ValueSerializer" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ValueSerializer As XamlValueConverter(Of ValueSerializer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xaml::Schema::XamlValueConverter&lt;System::Windows::Markup::ValueSerializer ^&gt; ^ ValueSerializer { System::Xaml::Schema::XamlValueConverter&lt;System::Windows::Markup::ValueSerializer ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ValueSerializer : System.Xaml.Schema.XamlValueConverter&lt;System.Windows.Markup.ValueSerializer&gt;" Usage="System.Xaml.XamlType.ValueSerializer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.Schema.XamlValueConverter&lt;System.Windows.Markup.ValueSerializer&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera ograniczenie <see cref="T:System.Windows.Markup.ValueSerializer" /> <see cref="T:System.Xaml.XamlType" />with, które reprezentuje zachowanie serializacji wartości dla wartości tego elementu. <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /></summary>
        <value>Z ograniczeniem reprezentującym zachowanie serializacji wartości dla wartości tego <see cref="T:System.Xaml.XamlType" />elementu; w przeciwnym <see langword="null" />razie. <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> <see cref="T:System.Windows.Markup.ValueSerializer" /></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli nie używasz domyślnej techniki odbicia środowiska CLR dla <xref:System.Xaml.XamlType>, wywołania tej właściwości mogą wywołać <xref:System.Xaml.XamlType.LookupValueSerializer%2A> zastąpienia w <xref:System.Xaml.XamlType> klasach pochodnych. Aby uzyskać więcej informacji na temat wartości zwracanych i innych zachowań, zapoznaj się z dokumentacją dla <xref:System.Xaml.XamlType.LookupValueSerializer%2A> tego typu.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>