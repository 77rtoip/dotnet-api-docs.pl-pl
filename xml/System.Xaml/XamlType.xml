<Type Name="XamlType" FullName="System.Xaml.XamlType">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="020ca716a40d40ea944a7fea51f12d5251b33596" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36444013" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class XamlType : IEquatable&lt;System.Xaml.XamlType&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XamlType extends System.Object implements class System.IEquatable`1&lt;class System.Xaml.XamlType&gt;" />
  <TypeSignature Language="DocId" Value="T:System.Xaml.XamlType" />
  <TypeSignature Language="VB.NET" Value="Public Class XamlType&#xA;Implements IEquatable(Of XamlType)" />
  <TypeSignature Language="C++ CLI" Value="public ref class XamlType : IEquatable&lt;System::Xaml::XamlType ^&gt;" />
  <TypeSignature Language="F#" Value="type XamlType = class&#xA;    interface IEquatable&lt;XamlType&gt;" />
  <AssemblyInfo>
    <AssemblyName>System.Xaml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IEquatable&lt;System.Xaml.XamlType&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="d08f4-101">Raportuje informacje o typach języka XAML w ramach całego systemu XAML wdrożonej usługi XAML .NET Framework.</span>
      <span class="sxs-lookup">
        <span data-stu-id="d08f4-101">Reports information about XAML types as part of the overall XAML system that is implemented in .NET Framework XAML Services.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d08f4-102">Wiele interfejsów API w <xref:System.Xaml.XamlType> klasy zawierają informacje o typach języka XAML, gdzie koncepcji zgłaszają na jest podobny do poszczególnych sekcji XAML specification [MS-XAML].</span><span class="sxs-lookup"><span data-stu-id="d08f4-102">Many APIs in the <xref:System.Xaml.XamlType> class provide information about XAML types, where the concept they report on is similar to particular sections of the XAML specification [MS-XAML].</span></span>  
  
 <span data-ttu-id="d08f4-103"><xref:System.Xaml.XamlType> jest bardzo często używane w interfejsu API programu .NET Framework XAML usług raportowania informacji o typie XAML.</span><span class="sxs-lookup"><span data-stu-id="d08f4-103"><xref:System.Xaml.XamlType> is used extensively in the .NET Framework XAML Services API for reporting information about a XAML type.</span></span> <span data-ttu-id="d08f4-104"><xref:System.Xaml.XamlType> Raporty informacje, które trzeba wiedzieć o typu XAML, aby pracować z wystąpieniem lub uzyskać dostępu do jego elementów członkowskich z strumień węzłów XAML lub podobne reprezentacja XAML.</span><span class="sxs-lookup"><span data-stu-id="d08f4-104"><xref:System.Xaml.XamlType> reports the information that you might need to know about a XAML type in order to work with an instance or to access its members from a XAML node stream, or a similar XAML representation.</span></span> <span data-ttu-id="d08f4-105">Jego raportowania jest podobny do sposobu <xref:System.Type> w środowisku CLR system typów, wraz z odbiciem klas takich jak <xref:System.Reflection.MemberInfo>, zawierają informacje dotyczące typu CLR i jego obciążenie.</span><span class="sxs-lookup"><span data-stu-id="d08f4-105">Its reporting is similar to how the <xref:System.Type> in the CLR type system, together with reflection classes such as <xref:System.Reflection.MemberInfo>, provide information about a CLR type and its usage.</span></span>  
  
 <span data-ttu-id="d08f4-106">Aby rozszerzyć system typów języka XAML, może pochodzić od <xref:System.Xaml.XamlType>.</span><span class="sxs-lookup"><span data-stu-id="d08f4-106">To extend the XAML type system, you can derive from <xref:System.Xaml.XamlType>.</span></span> <span data-ttu-id="d08f4-107">Aby zrobić to skutecznie, może również należy wdrożyć <xref:System.Xaml.Schema.XamlTypeInvoker>.</span><span class="sxs-lookup"><span data-stu-id="d08f4-107">To do so effectively, you might also need to implement a <xref:System.Xaml.Schema.XamlTypeInvoker>.</span></span> <span data-ttu-id="d08f4-108"><xref:System.Xaml.Schema.XamlTypeInvoker> Umożliwia uogólniony system typów języka XAML do pracy w systemie typów kopii określisz jako część zachowanie wywołania.</span><span class="sxs-lookup"><span data-stu-id="d08f4-108">The <xref:System.Xaml.Schema.XamlTypeInvoker> enables the generalized XAML type system to work with the type system backing that you specify as part of the invocation behavior.</span></span> <span data-ttu-id="d08f4-109">Niestandardowe określonych <xref:System.Xaml.Schema.XamlTypeInvoker> umożliwia zmniejszenie zależności w systemie typ CLR, które są używane przez domyślny <xref:System.Xaml.XamlType> zachowanie.</span><span class="sxs-lookup"><span data-stu-id="d08f4-109">The specific custom <xref:System.Xaml.Schema.XamlTypeInvoker> provides a way to reduce the dependencies on the CLR type system, which are used by the default <xref:System.Xaml.XamlType> behavior.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="d08f4-110">Inicjuje nowe wystąpienie klasy <see cref="T:System.Xaml.XamlType" /> klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d08f4-110">Initializes a new instance of the <see cref="T:System.Xaml.XamlType" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlType (Type underlyingType, System.Xaml.XamlSchemaContext schemaContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type underlyingType, class System.Xaml.XamlSchemaContext schemaContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.#ctor(System.Type,System.Xaml.XamlSchemaContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (underlyingType As Type, schemaContext As XamlSchemaContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlType(Type ^ underlyingType, System::Xaml::XamlSchemaContext ^ schemaContext);" />
      <MemberSignature Language="F#" Value="new System.Xaml.XamlType : Type * System.Xaml.XamlSchemaContext -&gt; System.Xaml.XamlType" Usage="new System.Xaml.XamlType (underlyingType, schemaContext)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="underlyingType" Type="System.Type" />
        <Parameter Name="schemaContext" Type="System.Xaml.XamlSchemaContext" />
      </Parameters>
      <Docs>
        <param name="underlyingType">
          <span data-ttu-id="d08f4-111">Podstawowy CLR <see cref="T:System.Type" /> dla typu XAML do utworzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d08f4-111">The underlying CLR <see cref="T:System.Type" /> for the XAML type to construct.</span>
          </span>
        </param>
        <param name="schemaContext">
          <span data-ttu-id="d08f4-112">Kontekst schematu XAML dla czytników XAML lub zapisywania pliku XAML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d08f4-112">XAML schema context for XAML readers or XAML writers.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d08f4-113">Inicjuje nowe wystąpienie klasy <see cref="T:System.Xaml.XamlType" /> klasy oparte na podstawowych informacji o typie CLR.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d08f4-113">Initializes a new instance of the <see cref="T:System.Xaml.XamlType" /> class based on the underlying CLR type information.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d08f4-114">Co najmniej jednego <paramref name="underlyingType" /> lub <paramref name="schemaContext" /> są <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d08f4-114">One or more of <paramref name="underlyingType" /> or <paramref name="schemaContext" /> are <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected XamlType (string typeName, System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt; typeArguments, System.Xaml.XamlSchemaContext schemaContext);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(string typeName, class System.Collections.Generic.IList`1&lt;class System.Xaml.XamlType&gt; typeArguments, class System.Xaml.XamlSchemaContext schemaContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.#ctor(System.String,System.Collections.Generic.IList{System.Xaml.XamlType},System.Xaml.XamlSchemaContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (typeName As String, typeArguments As IList(Of XamlType), schemaContext As XamlSchemaContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; XamlType(System::String ^ typeName, System::Collections::Generic::IList&lt;System::Xaml::XamlType ^&gt; ^ typeArguments, System::Xaml::XamlSchemaContext ^ schemaContext);" />
      <MemberSignature Language="F#" Value="new System.Xaml.XamlType : string * System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt; * System.Xaml.XamlSchemaContext -&gt; System.Xaml.XamlType" Usage="new System.Xaml.XamlType (typeName, typeArguments, schemaContext)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="typeName" Type="System.String" />
        <Parameter Name="typeArguments" Type="System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt;" />
        <Parameter Name="schemaContext" Type="System.Xaml.XamlSchemaContext" />
      </Parameters>
      <Docs>
        <param name="typeName">
          <span data-ttu-id="d08f4-115">Nazwa typu do utworzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d08f4-115">The name of the type to create.</span>
          </span>
        </param>
        <param name="typeArguments">
          <span data-ttu-id="d08f4-116">Argumentów typu dla <see cref="T:System.Xaml.XamlType" /> reprezentujący typu ogólnego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d08f4-116">The type arguments for a <see cref="T:System.Xaml.XamlType" /> that represents a generic type.</span>
          </span>
          <span data-ttu-id="d08f4-117">Może być (i często jest) <see langword="null" />, co oznacza, że reprezentowanego typ nie jest typem ogólnym.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d08f4-117">Can be (and often is) <see langword="null" />, which indicates that the represented type is not a generic type.</span>
          </span>
        </param>
        <param name="schemaContext">
          <span data-ttu-id="d08f4-118">Kontekst schematu XAML dla czytników XAML i autorzy XAML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d08f4-118">XAML schema context for XAML readers and XAML writers.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d08f4-119">Inicjuje nowe wystąpienie klasy <see cref="T:System.Xaml.XamlType" /> klasy na podstawie ciągu nazwy typu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d08f4-119">Initializes a new instance of the <see cref="T:System.Xaml.XamlType" /> class based on a string name for the type.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d08f4-120">Jest to Konstruktor chroniony.</span><span class="sxs-lookup"><span data-stu-id="d08f4-120">This is a protected constructor.</span></span> <span data-ttu-id="d08f4-121">Nie bieżącego publicznych klas pochodnych istnieje używające tej ścieżki określonej dla konstrukcji.</span><span class="sxs-lookup"><span data-stu-id="d08f4-121">No current public derived classes exist that use this particular path for construction.</span></span> <span data-ttu-id="d08f4-122">Klientów istniejącej <xref:System.Xaml.XamlType>, należy użyć innych sygnatury konstruktora (<xref:System.Xaml.XamlType.%23ctor%28System.Type%2CSystem.Xaml.XamlSchemaContext%2CSystem.Xaml.Schema.XamlTypeInvoker%29>, <xref:System.Xaml.XamlType.%23ctor%28System.Type%2CSystem.Xaml.XamlSchemaContext%29>, lub <xref:System.Xaml.XamlType.%23ctor%28System.String%2CSystem.String%2CSystem.Collections.Generic.IList%7BSystem.Xaml.XamlType%7D%2CSystem.Xaml.XamlSchemaContext%29>) zainicjować <xref:System.Xaml.XamlType> obiektu.</span><span class="sxs-lookup"><span data-stu-id="d08f4-122">As a consumer of the existing <xref:System.Xaml.XamlType>, you must use the other constructor signatures (<xref:System.Xaml.XamlType.%23ctor%28System.Type%2CSystem.Xaml.XamlSchemaContext%2CSystem.Xaml.Schema.XamlTypeInvoker%29>, <xref:System.Xaml.XamlType.%23ctor%28System.Type%2CSystem.Xaml.XamlSchemaContext%29>, or <xref:System.Xaml.XamlType.%23ctor%28System.String%2CSystem.String%2CSystem.Collections.Generic.IList%7BSystem.Xaml.XamlType%7D%2CSystem.Xaml.XamlSchemaContext%29>) to initialize a <xref:System.Xaml.XamlType> object.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d08f4-123">Co najmniej jednego <paramref name="typeName" /> lub <paramref name="schemaContext" /> są <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d08f4-123">One or more of <paramref name="typeName" /> or <paramref name="schemaContext" /> are <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlType (Type underlyingType, System.Xaml.XamlSchemaContext schemaContext, System.Xaml.Schema.XamlTypeInvoker invoker);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type underlyingType, class System.Xaml.XamlSchemaContext schemaContext, class System.Xaml.Schema.XamlTypeInvoker invoker) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.#ctor(System.Type,System.Xaml.XamlSchemaContext,System.Xaml.Schema.XamlTypeInvoker)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (underlyingType As Type, schemaContext As XamlSchemaContext, invoker As XamlTypeInvoker)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlType(Type ^ underlyingType, System::Xaml::XamlSchemaContext ^ schemaContext, System::Xaml::Schema::XamlTypeInvoker ^ invoker);" />
      <MemberSignature Language="F#" Value="new System.Xaml.XamlType : Type * System.Xaml.XamlSchemaContext * System.Xaml.Schema.XamlTypeInvoker -&gt; System.Xaml.XamlType" Usage="new System.Xaml.XamlType (underlyingType, schemaContext, invoker)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="underlyingType" Type="System.Type" />
        <Parameter Name="schemaContext" Type="System.Xaml.XamlSchemaContext" />
        <Parameter Name="invoker" Type="System.Xaml.Schema.XamlTypeInvoker" />
      </Parameters>
      <Docs>
        <param name="underlyingType">
          <span data-ttu-id="d08f4-124">Typ podstawowy dla typu XAML do utworzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d08f4-124">The underlying type for the XAML type to construct.</span>
          </span>
        </param>
        <param name="schemaContext">
          <span data-ttu-id="d08f4-125">Kontekst schematu XAML dla czytnika XAML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d08f4-125">XAML schema context for the XAML reader.</span>
          </span>
        </param>
        <param name="invoker">
          <span data-ttu-id="d08f4-126">
            <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> Implementację, która obsługuje w czasie wykonywania odbicia wywołuje przed <see cref="T:System.Xaml.XamlType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d08f4-126">The <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> implementation that handles run-time reflection calls against the <see cref="T:System.Xaml.XamlType" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d08f4-127">Inicjuje nowe wystąpienie klasy <see cref="T:System.Xaml.XamlType" /> klasy oparte na podstawowych informacji o typie i <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> implementacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d08f4-127">Initializes a new instance of the <see cref="T:System.Xaml.XamlType" /> class based on underlying type information and a <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> implementation.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d08f4-128">Co najmniej jednego <paramref name="underlyingType" /> lub <paramref name="schemaContext" /> są <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d08f4-128">One or more of <paramref name="underlyingType" /> or <paramref name="schemaContext" /> are <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlType (string unknownTypeNamespace, string unknownTypeName, System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt; typeArguments, System.Xaml.XamlSchemaContext schemaContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string unknownTypeNamespace, string unknownTypeName, class System.Collections.Generic.IList`1&lt;class System.Xaml.XamlType&gt; typeArguments, class System.Xaml.XamlSchemaContext schemaContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.#ctor(System.String,System.String,System.Collections.Generic.IList{System.Xaml.XamlType},System.Xaml.XamlSchemaContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (unknownTypeNamespace As String, unknownTypeName As String, typeArguments As IList(Of XamlType), schemaContext As XamlSchemaContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlType(System::String ^ unknownTypeNamespace, System::String ^ unknownTypeName, System::Collections::Generic::IList&lt;System::Xaml::XamlType ^&gt; ^ typeArguments, System::Xaml::XamlSchemaContext ^ schemaContext);" />
      <MemberSignature Language="F#" Value="new System.Xaml.XamlType : string * string * System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt; * System.Xaml.XamlSchemaContext -&gt; System.Xaml.XamlType" Usage="new System.Xaml.XamlType (unknownTypeNamespace, unknownTypeName, typeArguments, schemaContext)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="unknownTypeNamespace" Type="System.String" />
        <Parameter Name="unknownTypeName" Type="System.String" />
        <Parameter Name="typeArguments" Type="System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt;" />
        <Parameter Name="schemaContext" Type="System.Xaml.XamlSchemaContext" />
      </Parameters>
      <Docs>
        <param name="unknownTypeNamespace">
          <span data-ttu-id="d08f4-129">Przestrzeń nazw XAML dla typu, jako łańcuch znaków.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d08f4-129">The XAML namespace for the type, as a string.</span>
          </span>
        </param>
        <param name="unknownTypeName">
          <span data-ttu-id="d08f4-130">Nazwa typu w określonych <c>unknownTypeNamespace</c> przestrzeni nazw XAML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d08f4-130">The name of the type in the provided <c>unknownTypeNamespace</c> XAML namespace.</span>
          </span>
        </param>
        <param name="typeArguments">
          <span data-ttu-id="d08f4-131">Argumentów typu dla <see cref="T:System.Xaml.XamlType" /> reprezentujący typu ogólnego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d08f4-131">The type arguments for a <see cref="T:System.Xaml.XamlType" /> that represents a generic type.</span>
          </span>
          <span data-ttu-id="d08f4-132">Może być (i często jest) <see langword="null" />, co oznacza, że reprezentowanego typ nie jest typem ogólnym.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d08f4-132">Can be (and often is) <see langword="null" />, which indicates that the represented type is not a generic type.</span>
          </span>
        </param>
        <param name="schemaContext">
          <span data-ttu-id="d08f4-133">Kontekst schematu XAML dla czytników XAML lub zapisywania pliku XAML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d08f4-133">XAML schema context for XAML readers or XAML writers.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d08f4-134">Inicjuje nowe wystąpienie klasy <see cref="T:System.Xaml.XamlType" /> klasy oparte na przestrzeni nazw XAML i nazwy ciągu dla typu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d08f4-134">Initializes a new instance of the <see cref="T:System.Xaml.XamlType" /> class based on the XAML namespace and a string name for the type.</span>
          </span>
          <span data-ttu-id="d08f4-135">Ten konstruktor jest wyłącznie do analizy i węzłów XAML rejestrowanie użycia typu, które są znane nie zapasowy system obsługi typów i kontekst schematu XAML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d08f4-135">This constructor is exclusively for analysis and XAML-node recording of type usages that are known to not have backing in the supporting type system and XAML schema context.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d08f4-136">Użyj tego konstruktora tylko dla typów "Nieznany", gdzie typu XAML, który jest mapowany na podstawowym systemie typ jest niedostępny.</span><span class="sxs-lookup"><span data-stu-id="d08f4-136">Use this constructor only for "unknown" types where a XAML type that maps to an underlying type system is unavailable.</span></span> <span data-ttu-id="d08f4-137">Ten konstruktor może nie dawać wyników gdzie <xref:System.Xaml.XamlType.IsUnknown%2A?displayProperty=nameWithType> jest `true`.</span><span class="sxs-lookup"><span data-stu-id="d08f4-137">This constructor might not produce a result where <xref:System.Xaml.XamlType.IsUnknown%2A?displayProperty=nameWithType> is `true`.</span></span> <span data-ttu-id="d08f4-138">Zamiast tego domyślna logika reflektora raporty podstawowy typ jako <xref:System.Xaml.XamlLanguage.Object%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="d08f4-138">Instead, the default reflector logic reports the underlying type as <xref:System.Xaml.XamlLanguage.Object%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="d08f4-139">Jednak to zachowanie można zmienić z powodu <xref:System.Xaml.XamlType.LookupIsUnknown%2A> zastąpienia.</span><span class="sxs-lookup"><span data-stu-id="d08f4-139">However, this behavior can change because of the <xref:System.Xaml.XamlType.LookupIsUnknown%2A> override.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d08f4-140">Co najmniej jednego <paramref name="unknownTypeNamespace" />, <paramref name="unknownTypeName" />, lub <paramref name="schemaContext" /> są <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d08f4-140">One or more of <paramref name="unknownTypeNamespace" />, <paramref name="unknownTypeName" />, or <paramref name="schemaContext" /> are <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="AllowedContentTypes">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt; AllowedContentTypes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;class System.Xaml.XamlType&gt; AllowedContentTypes" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.AllowedContentTypes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AllowedContentTypes As IList(Of XamlType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IList&lt;System::Xaml::XamlType ^&gt; ^ AllowedContentTypes { System::Collections::Generic::IList&lt;System::Xaml::XamlType ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AllowedContentTypes : System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt;" Usage="System.Xaml.XamlType.AllowedContentTypes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d08f4-141">Pobiera kolekcję typów, które są możliwe do użycia jako tylko do odczytu <see cref="P:System.Xaml.XamlType.ContentProperty" /> wartość to <see cref="T:System.Xaml.XamlType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d08f4-141">Gets a read-only collection of the types that are usable as the <see cref="P:System.Xaml.XamlType.ContentProperty" /> value for this <see cref="T:System.Xaml.XamlType" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d08f4-142">Kolekcja tylko do odczytu możliwych typów zawartości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d08f4-142">A read-only collection of possible content types.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d08f4-143">Typy, które są można przypisać określonego typu zawartości (na przykład można przypisać do typu podstawowego, który jest dozwolonym typem zawartości) nie są uważane za wiele typów dla celów <xref:System.Xaml.XamlType.AllowedContentTypes%2A>.</span><span class="sxs-lookup"><span data-stu-id="d08f4-143">Types that are assignable a specific content type (for example, assignable to a base type that is an allowed content type) are not considered multiple types for purposes of <xref:System.Xaml.XamlType.AllowedContentTypes%2A>.</span></span>  
  
 <span data-ttu-id="d08f4-144">Jeśli nie używasz domyślne wewnętrzny CLR odbicia technika <xref:System.Xaml.XamlType>, wywołania do tej właściwości może wywołać <xref:System.Xaml.XamlType.LookupAllowedContentTypes%2A> zastępuje na <xref:System.Xaml.XamlType> klas pochodnych.</span><span class="sxs-lookup"><span data-stu-id="d08f4-144">If you do not use the default internal CLR reflection technique for a <xref:System.Xaml.XamlType>, calls to this property can invoke <xref:System.Xaml.XamlType.LookupAllowedContentTypes%2A> overrides on <xref:System.Xaml.XamlType> derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BaseType">
      <MemberSignature Language="C#" Value="public System.Xaml.XamlType BaseType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xaml.XamlType BaseType" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.BaseType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BaseType As XamlType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xaml::XamlType ^ BaseType { System::Xaml::XamlType ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.BaseType : System.Xaml.XamlType" Usage="System.Xaml.XamlType.BaseType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d08f4-145">Pobiera <see cref="T:System.Xaml.XamlType" /> do natychmiastowego typ bazowy tego typu XAML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d08f4-145">Gets the <see cref="T:System.Xaml.XamlType" /> for the immediate base type of this XAML type.</span>
          </span>
          <span data-ttu-id="d08f4-146">Określenie tej wartości jest oparte na typ bazowy <see cref="T:System.Xaml.XamlType" /> i kontekst schematu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d08f4-146">Determination of this value is based on the underlying type of this <see cref="T:System.Xaml.XamlType" /> and schema context.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d08f4-147">
            <see cref="T:System.Xaml.XamlType" /> Do natychmiastowego typ bazowy tego typu XAML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d08f4-147">The <see cref="T:System.Xaml.XamlType" /> for the immediate base type of this XAML type.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d08f4-148">Jeśli nie używasz domyślne wewnętrzny CLR odbicia technika <xref:System.Xaml.XamlType>, wywołania do tej właściwości może wywołać <xref:System.Xaml.XamlType.LookupBaseType%2A> zastępuje na <xref:System.Xaml.XamlType> klas pochodnych.</span><span class="sxs-lookup"><span data-stu-id="d08f4-148">If you do not use the default internal CLR reflection technique for a <xref:System.Xaml.XamlType>, calls to this property can invoke <xref:System.Xaml.XamlType.LookupBaseType%2A> overrides on <xref:System.Xaml.XamlType> derived classes.</span></span> <span data-ttu-id="d08f4-149">Aby uzyskać więcej informacji na temat zwracanych wartości i inne zachowanie, zobacz dokumentację <xref:System.Xaml.XamlType.LookupBaseType%2A> dla tego typu.</span><span class="sxs-lookup"><span data-stu-id="d08f4-149">For more information about return values and other behavior, see the documentation for <xref:System.Xaml.XamlType.LookupBaseType%2A> on this type.</span></span> <span data-ttu-id="d08f4-150">Domyślnie <xref:System.Xaml.XamlType.BaseType%2A> Zwraca wewnętrzny stała, który reprezentuje <xref:System.Object> Jeśli <xref:System.Xaml.XamlType.UnderlyingType%2A> jest `null`.</span><span class="sxs-lookup"><span data-stu-id="d08f4-150">By default, <xref:System.Xaml.XamlType.BaseType%2A> returns an internal constant that represents an <xref:System.Object> if <xref:System.Xaml.XamlType.UnderlyingType%2A> is `null`.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="d08f4-151"><xref:System.Xaml.XamlType.LookupBaseType%2A> jest wirtualna i w związku z tym może zostać zastąpiona.</span><span class="sxs-lookup"><span data-stu-id="d08f4-151"><xref:System.Xaml.XamlType.LookupBaseType%2A> is virtual, and therefore, can be overridden.</span></span> <span data-ttu-id="d08f4-152">Zastąpienie może potencjalnie (czy do celów złośliwego lub w inny sposób) Aby zmienić zgłoszone informacje o typie XAML, aby go już wyrównane w oczekiwany sposób informacje o systemie typ podstawowy typu CLR.</span><span class="sxs-lookup"><span data-stu-id="d08f4-152">The override has the potential (whether for malicious purposes or otherwise) to change the reported type information about a XAML type so that it no longer aligns in an expected way with the type system information of its underlying CLR type.</span></span> <span data-ttu-id="d08f4-153">Dla żadnych krytyczny dla zabezpieczeń kontroli dostępu i przypisania operacji w zamian użyj podstawowego typu środowiska CLR.</span><span class="sxs-lookup"><span data-stu-id="d08f4-153">For any security-critical checks of assignment operations and access, use the underlying CLR type instead.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanAssignTo">
      <MemberSignature Language="C#" Value="public virtual bool CanAssignTo (System.Xaml.XamlType xamlType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanAssignTo(class System.Xaml.XamlType xamlType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.CanAssignTo(System.Xaml.XamlType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool CanAssignTo(System::Xaml::XamlType ^ xamlType);" />
      <MemberSignature Language="F#" Value="abstract member CanAssignTo : System.Xaml.XamlType -&gt; bool&#xA;override this.CanAssignTo : System.Xaml.XamlType -&gt; bool" Usage="xamlType.CanAssignTo xamlType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xamlType" Type="System.Xaml.XamlType" />
      </Parameters>
      <Docs>
        <param name="xamlType">
          <span data-ttu-id="d08f4-154">Typ do sprawdzenia przed bieżącą <see cref="T:System.Xaml.XamlType" /> .</span>
          <span class="sxs-lookup">
            <span data-stu-id="d08f4-154">The type to check against the current <see cref="T:System.Xaml.XamlType" /> .</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d08f4-155">Zwraca wartość wskazującą, czy to wystąpienie <see cref="T:System.Xaml.XamlType" /> z określonym <see cref="T:System.Xaml.XamlType" /> swoją listę typów możliwych do przypisania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d08f4-155">Returns a value that indicates whether an instance of this <see cref="T:System.Xaml.XamlType" /> has the specified <see cref="T:System.Xaml.XamlType" /> in its list of assignable types.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d08f4-156">
            <see langword="true" /> Jeśli <paramref name="xamlType" /> znajduje się na liście można przypisać typu; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d08f4-156">
              <see langword="true" /> if <paramref name="xamlType" /> is in the assignable types list; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d08f4-157">Mimo że można przypisać typu nie ma wszystkich funkcji typu odwołania, służy ona do przypisania.</span><span class="sxs-lookup"><span data-stu-id="d08f4-157">Although the assignable type does not have all the capabilities of the reference type, you can use it for assignment.</span></span> <span data-ttu-id="d08f4-158">Na przykład umożliwia przypisanie utworzyć zgodny typ wartości właściwości.</span><span class="sxs-lookup"><span data-stu-id="d08f4-158">For example, you can use assignment to make type matches for the values of a property.</span></span> <span data-ttu-id="d08f4-159">Koncepcja typów możliwych do przypisania w języku XAML jest podobny do koncepcji rzutowanie w górę w systemie typów CLR.</span><span class="sxs-lookup"><span data-stu-id="d08f4-159">The concept of assignable types in XAML is similar to the concept of casting up in the CLR type system.</span></span> <span data-ttu-id="d08f4-160">Na przykład w obszarze system typu CLR, co typ ma <xref:System.Object> na liście można przypisać typu.</span><span class="sxs-lookup"><span data-stu-id="d08f4-160">For example, under a CLR type system, every type has an <xref:System.Object> in its assignable type list.</span></span>  
  
 <span data-ttu-id="d08f4-161">Jeśli jedna z dwóch <xref:System.Xaml.XamlType> wystąpień, które są używane dla porównania ma <xref:System.Xaml.XamlType.IsUnknown%2A> równa `true`, ta metoda ma specjalne Nieznany tryb, który zwraca `true` Jeśli dwa <xref:System.Xaml.XamlType> wystąpienia są równoważne.</span><span class="sxs-lookup"><span data-stu-id="d08f4-161">If one of the two <xref:System.Xaml.XamlType> instances that are used for comparison has <xref:System.Xaml.XamlType.IsUnknown%2A> equal to `true`, this method has a special Unknown mode that returns `true` if the two <xref:System.Xaml.XamlType> instances are equivalent.</span></span>  
  
 <span data-ttu-id="d08f4-162">Domyślna implementacja używa CLR <xref:System.Type> z <xref:System.Xaml.XamlType.UnderlyingType%2A> tego <xref:System.Xaml.XamlType> i dane wejściowe <xref:System.Xaml.XamlType>i wywołania <xref:System.Type.IsAssignableFrom%2A>.</span><span class="sxs-lookup"><span data-stu-id="d08f4-162">The default implementation uses the CLR <xref:System.Type> from <xref:System.Xaml.XamlType.UnderlyingType%2A> for this <xref:System.Xaml.XamlType> and the input <xref:System.Xaml.XamlType>, and calls <xref:System.Type.IsAssignableFrom%2A>.</span></span> <span data-ttu-id="d08f4-163">Należy przesłonić tę metodę, jeśli chcesz, aby określenie różnych typów możliwych do przypisania.</span><span class="sxs-lookup"><span data-stu-id="d08f4-163">Override this method if you want a different determination of assignable types.</span></span>  
  
 <span data-ttu-id="d08f4-164">Przekazywanie wartości null `xamlType` nie zgłasza wyjątek i zawsze zwraca `false`.</span><span class="sxs-lookup"><span data-stu-id="d08f4-164">Passing a null `xamlType` does not throw an exception and always returns `false`.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="d08f4-165"><xref:System.Xaml.XamlType.CanAssignTo%2A> jest wirtualna i w związku z tym może zostać zastąpiona.</span><span class="sxs-lookup"><span data-stu-id="d08f4-165"><xref:System.Xaml.XamlType.CanAssignTo%2A> is virtual, and therefore, can be overridden.</span></span> <span data-ttu-id="d08f4-166">Zastąpienie może potencjalnie (czy do celów złośliwego lub w inny sposób) Aby zmienić assignability typu XAML, aby go już wyrównuje w oczekiwany sposób z zachowaniem rzutowanie typów jego typem podstawowym CLR.</span><span class="sxs-lookup"><span data-stu-id="d08f4-166">The override has the potential (whether for malicious purposes or otherwise) to change the assignability of a XAML type so that it no longer aligns in an expected way with the type-casting behavior of its underlying CLR type.</span></span> <span data-ttu-id="d08f4-167">Dla żadnych krytyczny dla zabezpieczeń kontroli dostępu i przypisania operacji w zamian użyj podstawowego typu środowiska CLR.</span><span class="sxs-lookup"><span data-stu-id="d08f4-167">For any security-critical checks of assignment operations and access, use the underlying CLR type instead.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ConstructionRequiresArguments">
      <MemberSignature Language="C#" Value="public bool ConstructionRequiresArguments { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ConstructionRequiresArguments" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.ConstructionRequiresArguments" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ConstructionRequiresArguments As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ConstructionRequiresArguments { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.ConstructionRequiresArguments : bool" Usage="System.Xaml.XamlType.ConstructionRequiresArguments" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d08f4-168">Pobiera wartość wskazującą, czy to <see cref="T:System.Xaml.XamlType" /> może mieć argumentów (ograniczenia ogólne za pośrednictwem <see langword="x:TypeArguments" />, tekst inicjowania lub innych technik XAML) do utworzenia prawidłowe wystąpienie typu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d08f4-168">Gets a value that indicates whether this <see cref="T:System.Xaml.XamlType" /> must have arguments (generic constraints through <see langword="x:TypeArguments" />, initialization text, or other XAML techniques) to construct a valid instance of the type.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d08f4-169">
            <see langword="true" /> Jeśli konstrukcji wystąpienia wymaga niektórych wartości argumentu; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d08f4-169">
              <see langword="true" /> if construction of an instance requires some argument value; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d08f4-170">Jeśli nie używasz domyślne wewnętrzny CLR odbicia technika <xref:System.Xaml.XamlType>, wywołania do tej właściwości może wywołać <xref:System.Xaml.XamlType.LookupConstructionRequiresArguments%2A> zastępuje na <xref:System.Xaml.XamlType> klas pochodnych.</span><span class="sxs-lookup"><span data-stu-id="d08f4-170">If you do not use the default internal CLR reflection technique for a <xref:System.Xaml.XamlType>, calls to this property can invoke <xref:System.Xaml.XamlType.LookupConstructionRequiresArguments%2A> overrides on <xref:System.Xaml.XamlType> derived classes.</span></span> <span data-ttu-id="d08f4-171">Aby uzyskać więcej informacji na temat zwracanych wartości i inne zachowanie, zobacz dokumentację <xref:System.Xaml.XamlType.LookupConstructionRequiresArguments%2A> dla tego typu.</span><span class="sxs-lookup"><span data-stu-id="d08f4-171">For more information about return values and other behavior, see the documentation for <xref:System.Xaml.XamlType.LookupConstructionRequiresArguments%2A> on this type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContentProperty">
      <MemberSignature Language="C#" Value="public System.Xaml.XamlMember ContentProperty { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xaml.XamlMember ContentProperty" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.ContentProperty" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ContentProperty As XamlMember" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xaml::XamlMember ^ ContentProperty { System::Xaml::XamlMember ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ContentProperty : System.Xaml.XamlMember" Usage="System.Xaml.XamlType.ContentProperty" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlMember</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d08f4-172">Pobiera <see cref="T:System.Xaml.XamlMember" /> informacji dla właściwości content tego <see cref="T:System.Xaml.XamlType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d08f4-172">Gets the <see cref="T:System.Xaml.XamlMember" /> information for the content property of this <see cref="T:System.Xaml.XamlType" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d08f4-173">
            <see cref="T:System.Xaml.XamlMember" /> informacje dla właściwości content tego <see cref="T:System.Xaml.XamlType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d08f4-173">
              <see cref="T:System.Xaml.XamlMember" /> information for the content property of this <see cref="T:System.Xaml.XamlType" />.</span>
          </span>
          <span data-ttu-id="d08f4-174">Może być <see langword="null" /> Jeśli istnieje ma właściwości zawartości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d08f4-174">May be <see langword="null" /> if no content property exists.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d08f4-175">Gdy za pomocą tego powiązania lub tworzenie kopii systemu typu CLR, właściwości zawartości XAML można określić dla takiego typu, stosując <xref:System.Windows.Markup.ContentPropertyAttribute> do definicji typu.</span><span class="sxs-lookup"><span data-stu-id="d08f4-175">When using the binding or backing of the CLR type system, the XAML content property can be specified on a type by applying <xref:System.Windows.Markup.ContentPropertyAttribute> to the type definition.</span></span>  
  
 <span data-ttu-id="d08f4-176">Ta właściwość jest wyrównywany do `[content property]` elementu informacji w specification [MS-XAML].</span><span class="sxs-lookup"><span data-stu-id="d08f4-176">This property aligns to the `[content property]` information item in the [MS-XAML] specification.</span></span>  
  
 <span data-ttu-id="d08f4-177">Jeśli nie używasz domyślne wewnętrzny CLR odbicia technika <xref:System.Xaml.XamlType>, wywołania do tej właściwości może wywołać <xref:System.Xaml.XamlType.LookupContentProperty%2A> zastępuje na <xref:System.Xaml.XamlType> klas pochodnych.</span><span class="sxs-lookup"><span data-stu-id="d08f4-177">If you do not use the default internal CLR reflection technique for a <xref:System.Xaml.XamlType>, calls to this property can invoke <xref:System.Xaml.XamlType.LookupContentProperty%2A> overrides on <xref:System.Xaml.XamlType> derived classes.</span></span> <span data-ttu-id="d08f4-178">Aby uzyskać więcej informacji na temat zwracanych wartości i inne zachowanie, zobacz dokumentację <xref:System.Xaml.XamlType.LookupContentProperty%2A> dla tego typu.</span><span class="sxs-lookup"><span data-stu-id="d08f4-178">For more information about return values and other behavior, see the documentation for <xref:System.Xaml.XamlType.LookupContentProperty%2A> on this type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContentWrappers">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt; ContentWrappers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;class System.Xaml.XamlType&gt; ContentWrappers" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.ContentWrappers" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ContentWrappers As IList(Of XamlType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IList&lt;System::Xaml::XamlType ^&gt; ^ ContentWrappers { System::Collections::Generic::IList&lt;System::Xaml::XamlType ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ContentWrappers : System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt;" Usage="System.Xaml.XamlType.ContentWrappers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d08f4-179">Pobiera typy, które są stosowane do zakodowania zawartości dla właściwości content, gdy nie jest ona dopasowania ścisłe zasady, na przykład ciągi w silnie typizowaną <see langword="Collection&lt;T&gt;" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d08f4-179">Gets the types that are used to wrap content for a content property when it is not a strict type match, such as strings in a strongly typed <see langword="Collection&lt;T&gt;" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d08f4-180">Kolekcja tylko do odczytu typów możliwych otoki zawartości. w przeciwnym razie <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d08f4-180">A read-only collection of possible content wrapper types; otherwise, <see langword="null" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d08f4-181">Jeśli nie ma żadnych otoki dla typu dopasowania zmniejszania, ta właściwość jest `null`.</span><span class="sxs-lookup"><span data-stu-id="d08f4-181">If there are no wrappers to account for type match loosening, this property is `null`.</span></span>  
  
 <span data-ttu-id="d08f4-182">Typy, które są interpretowane jako <xref:System.Xaml.XamlType.CanAssignTo%2A> dla określonego typu zawartości nie są uznawane za wiele typów dla celów <xref:System.Xaml.XamlType.ContentWrappers%2A>.</span><span class="sxs-lookup"><span data-stu-id="d08f4-182">Types that evaluate as <xref:System.Xaml.XamlType.CanAssignTo%2A> for a specific content type are not considered multiple types for purposes of <xref:System.Xaml.XamlType.ContentWrappers%2A>.</span></span>  
  
 <span data-ttu-id="d08f4-183">Powiązanie CLR dla <xref:System.Xaml> i <xref:System.Xaml.XamlType>, można określić typ otoki zawartości XAML w typie jako <xref:System.Windows.Markup.ContentWrapperAttribute>.</span><span class="sxs-lookup"><span data-stu-id="d08f4-183">In the CLR binding for <xref:System.Xaml> and <xref:System.Xaml.XamlType>, the XAML content wrapper type can be specified on a type as a <xref:System.Windows.Markup.ContentWrapperAttribute>.</span></span>  
  
 <span data-ttu-id="d08f4-184">Jeśli nie używasz domyślne wewnętrzny CLR odbicia technika <xref:System.Xaml.XamlType>, wywołania do tej właściwości może wywołać <xref:System.Xaml.XamlType.LookupContentWrappers%2A> zastępuje na <xref:System.Xaml.XamlType> klas pochodnych.</span><span class="sxs-lookup"><span data-stu-id="d08f4-184">If you do not use the default internal CLR reflection technique for a <xref:System.Xaml.XamlType>, calls to this property can invoke <xref:System.Xaml.XamlType.LookupContentWrappers%2A> overrides on <xref:System.Xaml.XamlType> derived classes.</span></span> <span data-ttu-id="d08f4-185">Aby uzyskać więcej informacji na temat zwracanych wartości i inne zachowanie, zobacz dokumentację <xref:System.Xaml.XamlType.LookupContentWrappers%2A> dla tego typu.</span><span class="sxs-lookup"><span data-stu-id="d08f4-185">For more information about return values and other behavior, see the documentation for <xref:System.Xaml.XamlType.LookupContentWrappers%2A> on this type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DeferringLoader">
      <MemberSignature Language="C#" Value="public System.Xaml.Schema.XamlValueConverter&lt;System.Xaml.XamlDeferringLoader&gt; DeferringLoader { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xaml.Schema.XamlValueConverter`1&lt;class System.Xaml.XamlDeferringLoader&gt; DeferringLoader" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.DeferringLoader" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DeferringLoader As XamlValueConverter(Of XamlDeferringLoader)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xaml::Schema::XamlValueConverter&lt;System::Xaml::XamlDeferringLoader ^&gt; ^ DeferringLoader { System::Xaml::Schema::XamlValueConverter&lt;System::Xaml::XamlDeferringLoader ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DeferringLoader : System.Xaml.Schema.XamlValueConverter&lt;System.Xaml.XamlDeferringLoader&gt;" Usage="System.Xaml.XamlType.DeferringLoader" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.Schema.XamlValueConverter&lt;System.Xaml.XamlDeferringLoader&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d08f4-186">Pobiera <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> reprezentujący odroczonego ładowania zachowanie konwersji dla tego typu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d08f4-186">Gets the <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> that represents the deferred loading conversion behavior for this type.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d08f4-187">
            <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> z <see cref="T:System.Xaml.XamlDeferringLoader" /> ograniczenia, która reprezentuje zachowanie ładowanie odłożone dla tego typu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d08f4-187">The <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> with <see cref="T:System.Xaml.XamlDeferringLoader" /> constraint that represents the deferred loading behavior for this type.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d08f4-188">Przykładem ładowanie odłożone zachowanie jest zachowanie szablonu XAML w WPF.</span><span class="sxs-lookup"><span data-stu-id="d08f4-188">XAML template behavior in WPF is an example of deferred loading behavior.</span></span>  
  
 <span data-ttu-id="d08f4-189">Jeśli nie używasz domyślne wewnętrzny CLR odbicia technika <xref:System.Xaml.XamlType>, wywołania do tej właściwości może wywołać <xref:System.Xaml.XamlType.LookupDeferringLoader%2A> zastępuje na <xref:System.Xaml.XamlType> klas pochodnych.</span><span class="sxs-lookup"><span data-stu-id="d08f4-189">If you do not use the default internal CLR reflection technique for a <xref:System.Xaml.XamlType>, calls to this property can invoke <xref:System.Xaml.XamlType.LookupDeferringLoader%2A> overrides on <xref:System.Xaml.XamlType> derived classes.</span></span> <span data-ttu-id="d08f4-190">Aby uzyskać więcej informacji na temat zwracanych wartości i inne zachowanie, zobacz dokumentację <xref:System.Xaml.XamlType.LookupDeferringLoader%2A> dla tego typu.</span><span class="sxs-lookup"><span data-stu-id="d08f4-190">For more information about return values and other behavior, see the documentation for <xref:System.Xaml.XamlType.LookupDeferringLoader%2A> on this type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Equals">
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="d08f4-191">Wskazuje, czy bieżący obiekt jest taki sam, jak inny obiekt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d08f4-191">Indicates whether the current object is equal to another object.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="xamlType.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">
          <span data-ttu-id="d08f4-192">Obiekt do porównania z tym obiektem.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d08f4-192">The object to compare with this object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d08f4-193">Wskazuje, czy bieżący obiekt jest taki sam, jak inny obiekt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d08f4-193">Indicates whether the current object is equal to another object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d08f4-194">
            <see langword="true" /> Jeśli bieżący obiekt jest taki sam <paramref name="obj" /> parametru; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d08f4-194">
              <see langword="true" /> if the current object is equal to the <paramref name="obj" /> parameter; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (System.Xaml.XamlType other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(class System.Xaml.XamlType other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.Equals(System.Xaml.XamlType)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (other As XamlType) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Equals(System::Xaml::XamlType ^ other);" />
      <MemberSignature Language="F#" Value="override this.Equals : System.Xaml.XamlType -&gt; bool" Usage="xamlType.Equals other" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IEquatable`1.Equals(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Xaml.XamlType" />
      </Parameters>
      <Docs>
        <param name="other">
          <span data-ttu-id="d08f4-195">Obiekt do porównania z tym obiektem.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d08f4-195">An object to compare with this object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d08f4-196">Wskazuje, czy bieżący obiekt jest taki sam, jak inny obiekt tego samego typu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d08f4-196">Indicates whether the current object is equal to another object of the same type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d08f4-197">
            <see langword="true" /> Jeśli bieżący obiekt jest taki sam <paramref name="other" /> parametru; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d08f4-197">
              <see langword="true" /> if the current object is equal to the <paramref name="other" /> parameter; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAliasedProperty">
      <MemberSignature Language="C#" Value="public System.Xaml.XamlMember GetAliasedProperty (System.Xaml.XamlDirective directive);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xaml.XamlMember GetAliasedProperty(class System.Xaml.XamlDirective directive) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.GetAliasedProperty(System.Xaml.XamlDirective)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAliasedProperty (directive As XamlDirective) As XamlMember" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xaml::XamlMember ^ GetAliasedProperty(System::Xaml::XamlDirective ^ directive);" />
      <MemberSignature Language="F#" Value="member this.GetAliasedProperty : System.Xaml.XamlDirective -&gt; System.Xaml.XamlMember" Usage="xamlType.GetAliasedProperty directive" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlMember</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="directive" Type="System.Xaml.XamlDirective" />
      </Parameters>
      <Docs>
        <param name="directive">
          <span data-ttu-id="d08f4-198">Dyrektywa, dla którego można znaleźć elementu członkowskiego aliasu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d08f4-198">The directive for which to find the aliased member.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d08f4-199">Zwraca element członkowski XAML, który jest aliasem do dyrektywy XAML, to <see cref="T:System.Xaml.XamlType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d08f4-199">Returns the XAML member that is aliased to a XAML directive by this <see cref="T:System.Xaml.XamlType" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d08f4-200">Alias elementu członkowskiego, jeśli znaleziono; w przeciwnym razie <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d08f4-200">The aliased member, if found; otherwise, <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d08f4-201">Jeśli nie używasz domyślne wewnętrzny CLR odbicia technika <xref:System.Xaml.XamlType>, wywołania tej metody można wywoływać <xref:System.Xaml.XamlType.LookupAliasedProperty%2A> zastępuje na <xref:System.Xaml.XamlType> klas pochodnych.</span><span class="sxs-lookup"><span data-stu-id="d08f4-201">If you do not use the default internal CLR reflection technique for a <xref:System.Xaml.XamlType>, calls to this method can invoke <xref:System.Xaml.XamlType.LookupAliasedProperty%2A> overrides on <xref:System.Xaml.XamlType> derived classes.</span></span> <span data-ttu-id="d08f4-202">Aby uzyskać więcej informacji na temat zwracanych wartości i inne zachowanie, zobacz dokumentację <xref:System.Xaml.XamlType.LookupAliasedProperty%2A> dla tego typu.</span><span class="sxs-lookup"><span data-stu-id="d08f4-202">For more information about return values and other behavior, see the documentation for <xref:System.Xaml.XamlType.LookupAliasedProperty%2A> on this type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAllAttachableMembers">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.ICollection&lt;System.Xaml.XamlMember&gt; GetAllAttachableMembers ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.ICollection`1&lt;class System.Xaml.XamlMember&gt; GetAllAttachableMembers() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.GetAllAttachableMembers" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAllAttachableMembers () As ICollection(Of XamlMember)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::ICollection&lt;System::Xaml::XamlMember ^&gt; ^ GetAllAttachableMembers();" />
      <MemberSignature Language="F#" Value="member this.GetAllAttachableMembers : unit -&gt; System.Collections.Generic.ICollection&lt;System.Xaml.XamlMember&gt;" Usage="xamlType.GetAllAttachableMembers " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;System.Xaml.XamlMember&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="d08f4-203">Zwraca kolekcję, która zawiera wszystkie możliwe do dołączenia właściwości, które są udostępniane przez to <see cref="T:System.Xaml.XamlType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d08f4-203">Returns a collection that contains all the attachable properties that are exposed by this <see cref="T:System.Xaml.XamlType" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d08f4-204">Kolekcja, która zawiera zero lub więcej <see cref="T:System.Xaml.XamlMember" /> wartości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d08f4-204">A collection that contains zero or more <see cref="T:System.Xaml.XamlMember" /> values.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d08f4-205">Każdy <xref:System.Xaml.XamlMember> zwracana Kolekcja powinna zawierać wartości, które obsługują pojęcie który <xref:System.Xaml.XamlMember> jest dołączalny element członkowski.</span><span class="sxs-lookup"><span data-stu-id="d08f4-205">Each <xref:System.Xaml.XamlMember> in the returned collection should contain values that support the concept that the <xref:System.Xaml.XamlMember> is an attachable member.</span></span> <span data-ttu-id="d08f4-206">Na przykład członkowie powinien zwrócić `true` dla <xref:System.Xaml.XamlMember.IsAttachable%2A>, typ <xref:System.Xaml.XamlMember.TargetType%2A>i tak dalej.</span><span class="sxs-lookup"><span data-stu-id="d08f4-206">For example, members should return `true` for <xref:System.Xaml.XamlMember.IsAttachable%2A>, a type for <xref:System.Xaml.XamlMember.TargetType%2A>, and so on.</span></span>  
  
 <span data-ttu-id="d08f4-207">Jeśli nie używasz domyślne wewnętrzny CLR odbicia technika <xref:System.Xaml.XamlType>, wywołania tej metody można wywoływać <xref:System.Xaml.XamlType.LookupAllAttachableMembers%2A> zastępuje na <xref:System.Xaml.XamlType> klas pochodnych.</span><span class="sxs-lookup"><span data-stu-id="d08f4-207">If you do not use the default internal CLR reflection technique for a <xref:System.Xaml.XamlType>, calls to this method can invoke <xref:System.Xaml.XamlType.LookupAllAttachableMembers%2A> overrides on <xref:System.Xaml.XamlType> derived classes.</span></span> <span data-ttu-id="d08f4-208">Aby uzyskać więcej informacji na temat zwracanych wartości i inne zachowanie, zobacz dokumentację <xref:System.Xaml.XamlType.LookupAllAttachableMembers%2A> dla tego typu.</span><span class="sxs-lookup"><span data-stu-id="d08f4-208">For more information about return values and other behavior, see the documentation for <xref:System.Xaml.XamlType.LookupAllAttachableMembers%2A> on this type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAllMembers">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.ICollection&lt;System.Xaml.XamlMember&gt; GetAllMembers ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.ICollection`1&lt;class System.Xaml.XamlMember&gt; GetAllMembers() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.GetAllMembers" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAllMembers () As ICollection(Of XamlMember)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::ICollection&lt;System::Xaml::XamlMember ^&gt; ^ GetAllMembers();" />
      <MemberSignature Language="F#" Value="member this.GetAllMembers : unit -&gt; System.Collections.Generic.ICollection&lt;System.Xaml.XamlMember&gt;" Usage="xamlType.GetAllMembers " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;System.Xaml.XamlMember&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="d08f4-209">Zwraca kolekcję, która zawiera wszystkie elementy członkowskie, które są dostępne w tym <see cref="T:System.Xaml.XamlType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d08f4-209">Returns a collection that contains all the members that are exposed by this <see cref="T:System.Xaml.XamlType" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d08f4-210">Kolekcja, która zawiera zero lub więcej <see cref="T:System.Xaml.XamlMember" /> wartości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d08f4-210">A collection that contains zero or more <see cref="T:System.Xaml.XamlMember" /> values.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d08f4-211">Wywołania tej metody można wywoływać <xref:System.Xaml.XamlType.LookupAllMembers%2A> zastępuje na <xref:System.Xaml.XamlType> klas pochodnych.</span><span class="sxs-lookup"><span data-stu-id="d08f4-211">Calls to this method can invoke <xref:System.Xaml.XamlType.LookupAllMembers%2A> overrides on <xref:System.Xaml.XamlType> derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAttachableMember">
      <MemberSignature Language="C#" Value="public System.Xaml.XamlMember GetAttachableMember (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xaml.XamlMember GetAttachableMember(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.GetAttachableMember(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAttachableMember (name As String) As XamlMember" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xaml::XamlMember ^ GetAttachableMember(System::String ^ name);" />
      <MemberSignature Language="F#" Value="member this.GetAttachableMember : string -&gt; System.Xaml.XamlMember" Usage="xamlType.GetAttachableMember name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlMember</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="d08f4-212">Nazwa elementu członkowskiego możliwej do pobrania w <c>ownerTypeName.MemberName</c> formularza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d08f4-212">The name of the attachable member to get, in <c>ownerTypeName.MemberName</c> form.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d08f4-213">Zwraca <see cref="T:System.Xaml.XamlMember" /> reprezentującą określony o nazwie dołączalny element członkowski tego <see cref="T:System.Xaml.XamlType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d08f4-213">Returns a <see cref="T:System.Xaml.XamlMember" /> representing a specific named attachable member of this <see cref="T:System.Xaml.XamlType" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d08f4-214">A <see cref="T:System.Xaml.XamlMember" /> obiektu dla żądanego dołączalny element członkowski; w przeciwnym razie <see langword="null" />, jeśli istnieje nie dołączalny element członkowski o takiej nazwie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d08f4-214">A <see cref="T:System.Xaml.XamlMember" /> object for the requested attachable member; otherwise, <see langword="null" />, if no attachable member by that name exists.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d08f4-215">Wywołania tej metody można wywoływać <xref:System.Xaml.XamlType.LookupAttachableMember%2A> zastępuje na <xref:System.Xaml.XamlType> klas pochodnych.</span><span class="sxs-lookup"><span data-stu-id="d08f4-215">Calls to this method can invoke <xref:System.Xaml.XamlType.LookupAttachableMember%2A> overrides on <xref:System.Xaml.XamlType> derived classes.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="d08f4-216"><xref:System.Xaml.XamlType.LookupAttachableMember%2A> jest wirtualna i w związku z tym może zostać zastąpiona.</span><span class="sxs-lookup"><span data-stu-id="d08f4-216"><xref:System.Xaml.XamlType.LookupAttachableMember%2A> is virtual, and therefore, can be overridden.</span></span> <span data-ttu-id="d08f4-217">Zastąpienie może potencjalnie (czy do celów złośliwego lub w inny sposób) Aby zmienić członków zgłoszonego typu XAML tak, aby już wyrównane, w oczekiwany sposób, z <xref:System.ComponentModel.TypeDescriptor> `Get*` informacji na temat podstawowy typ CLR.</span><span class="sxs-lookup"><span data-stu-id="d08f4-217">The override has the potential (whether for malicious purposes or otherwise) to change the reported members of a XAML type so that they no longer align in an expected way with the <xref:System.ComponentModel.TypeDescriptor> `Get*` information about the underlying CLR type.</span></span> <span data-ttu-id="d08f4-218">Dla kontroli krytyczny dla zabezpieczeń elementu członkowskiego raportowania należy używać podstawowy typ CLR.</span><span class="sxs-lookup"><span data-stu-id="d08f4-218">For any security-critical checks of member reporting, use the underlying CLR type instead.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="xamlType.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="d08f4-219">Zwraca wartość skrótu dla tego obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d08f4-219">Returns the hash code for this object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d08f4-220">Liczba całkowita wartość skrótu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d08f4-220">An integer hash code.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMember">
      <MemberSignature Language="C#" Value="public System.Xaml.XamlMember GetMember (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xaml.XamlMember GetMember(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.GetMember(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetMember (name As String) As XamlMember" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xaml::XamlMember ^ GetMember(System::String ^ name);" />
      <MemberSignature Language="F#" Value="member this.GetMember : string -&gt; System.Xaml.XamlMember" Usage="xamlType.GetMember name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlMember</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="d08f4-221">Nazwa elementu członkowskiego do pobrania (jako ciąg).</span>
          <span class="sxs-lookup">
            <span data-stu-id="d08f4-221">The name of the member to get (as a string).</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d08f4-222">Zwraca <see cref="T:System.Xaml.XamlMember" /> dla określonego o nazwie elementu członkowskiego to <see cref="T:System.Xaml.XamlType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d08f4-222">Returns a <see cref="T:System.Xaml.XamlMember" /> for a specific named member from this <see cref="T:System.Xaml.XamlType" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d08f4-223">
            <see cref="T:System.Xaml.XamlMember" /> Informacji dla elementu członkowskiego, jeśli taki element członkowski został znaleziony, a w przeciwnym razie <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d08f4-223">The <see cref="T:System.Xaml.XamlMember" /> information for the member, if such a member was found; otherwise, <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d08f4-224">Wartość `name` powinien być niekwalifikowane.</span><span class="sxs-lookup"><span data-stu-id="d08f4-224">The value for `name` is expected to be unqualified.</span></span> <span data-ttu-id="d08f4-225">Przesłano kwalifikowanego typu nazwy na wskazujące elementu członkowskiego dołączonych <xref:System.Xaml.XamlType.GetAttachableMember%2A> zamiast tego.</span><span class="sxs-lookup"><span data-stu-id="d08f4-225">Type-qualified names that indicate an attached member should be submitted to <xref:System.Xaml.XamlType.GetAttachableMember%2A> instead.</span></span> <span data-ttu-id="d08f4-226">Prefiks element członkowski, który nie należy używać nazw; Prefiks jest oparty na analizie sytuacji do użytkowania i system typów języka XAML nie może znać kontekście takie użycia i odwzorowania prefiks.</span><span class="sxs-lookup"><span data-stu-id="d08f4-226">Prefixed member names should not be used; a prefix is situational to a usage and the XAML type system cannot know the context of such a usage and how the prefix is mapped.</span></span>  
  
 <span data-ttu-id="d08f4-227">Wywołania tej metody można wywoływać <xref:System.Xaml.XamlType.LookupMember%2A> zastępuje na <xref:System.Xaml.XamlType> klas pochodnych.</span><span class="sxs-lookup"><span data-stu-id="d08f4-227">Calls to this method can invoke <xref:System.Xaml.XamlType.LookupMember%2A> overrides on <xref:System.Xaml.XamlType> derived classes.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="d08f4-228"><xref:System.Xaml.XamlType.LookupMember%2A> jest wirtualna i w związku z tym może zostać zastąpiona.</span><span class="sxs-lookup"><span data-stu-id="d08f4-228"><xref:System.Xaml.XamlType.LookupMember%2A> is virtual, and therefore, can be overridden.</span></span> <span data-ttu-id="d08f4-229">Zastąpienie może potencjalnie (czy do celów złośliwego lub w inny sposób) Aby zmienić członków zgłoszonego typu XAML tak, aby już wyrównane, w oczekiwany sposób, z <xref:System.ComponentModel.TypeDescriptor> `Get*` informacji na temat podstawowy typ CLR.</span><span class="sxs-lookup"><span data-stu-id="d08f4-229">The override has the potential (whether for malicious purposes or otherwise) to change the reported members of a XAML type so that they no longer align in an expected way with the <xref:System.ComponentModel.TypeDescriptor> `Get*` information about the underlying CLR type.</span></span> <span data-ttu-id="d08f4-230">Dla kontroli krytyczny dla zabezpieczeń elementu członkowskiego raportowania należy używać podstawowy typ CLR.</span><span class="sxs-lookup"><span data-stu-id="d08f4-230">For any security-critical checks of member reporting, use the underlying CLR type instead.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPositionalParameters">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt; GetPositionalParameters (int parameterCount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IList`1&lt;class System.Xaml.XamlType&gt; GetPositionalParameters(int32 parameterCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.GetPositionalParameters(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPositionalParameters (parameterCount As Integer) As IList(Of XamlType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IList&lt;System::Xaml::XamlType ^&gt; ^ GetPositionalParameters(int parameterCount);" />
      <MemberSignature Language="F#" Value="member this.GetPositionalParameters : int -&gt; System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt;" Usage="xamlType.GetPositionalParameters parameterCount" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameterCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="parameterCount">
          <span data-ttu-id="d08f4-231">Liczba (argumentów) określonej składni lub konstruktora tryb, w którym chcesz uzyskać informacje.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d08f4-231">The count (arity) of the particular syntax or constructor mode that you want information about.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d08f4-232">W przypadku typów rozszerzenia znaczników zwraca typy parametrów pozycyjnych, które są obsługiwane przez użycie rozszerzenia znaczników określonego dla tego <see cref="T:System.Xaml.XamlType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d08f4-232">For markup extension types, returns the types of the positional parameters that are supported in a specific markup extension usage for this <see cref="T:System.Xaml.XamlType" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d08f4-233">Lista <see cref="T:System.Xaml.XamlType" /> wartości, gdzie każdy <see cref="T:System.Xaml.XamlType" /> typ dla tej pozycji w składni.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d08f4-233">A list of <see cref="T:System.Xaml.XamlType" /> values, where each <see cref="T:System.Xaml.XamlType" /> is the type for that position in the syntax.</span>
          </span>
          <span data-ttu-id="d08f4-234">Jeśli podasz wprowadzania znaczników dla rozszerzenia znacznika, należy określić typy w tej samej kolejności.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d08f4-234">You must specify the types in the same order when you supply markup input for the markup extension.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d08f4-235">Ten interfejs API jest ważne, jeśli to tylko <xref:System.Xaml.XamlType> reprezentuje rozszerzenie znaczników (<xref:System.Xaml.XamlType.IsMarkupExtension%2A> jest `true`).</span><span class="sxs-lookup"><span data-stu-id="d08f4-235">This API is only relevant if this <xref:System.Xaml.XamlType> represents a markup extension (<xref:System.Xaml.XamlType.IsMarkupExtension%2A> is `true`).</span></span>  
  
 <span data-ttu-id="d08f4-236">Dane wejściowe `parameterCount` nie jest przeznaczony dla żądania typu określonych parametrów pozycyjnych.</span><span class="sxs-lookup"><span data-stu-id="d08f4-236">The input `parameterCount` is not for requesting the type of a specific positional parameter.</span></span> <span data-ttu-id="d08f4-237">Jest określenie liczby argumentów użycie rozszerzenia znaczników.</span><span class="sxs-lookup"><span data-stu-id="d08f4-237">It is for specifying the arity of a markup extension usage.</span></span> <span data-ttu-id="d08f4-238">Użycie rozszerzenia znaczników często ma wiele "podpisów" i używa parametru innej liczby argumentów skonkretyzowanego (licznik) parametrów pozycyjnych do odróżnienia.</span><span class="sxs-lookup"><span data-stu-id="d08f4-238">Markup extension usage often has multiple "signatures" and uses different parameter arity (count) of positional parameters to differentiate.</span></span> <span data-ttu-id="d08f4-239">Można jednak skonfigurować kontekst schematu zezwala na zduplikowane arities i typy parametrów pozycyjnych na użytek zróżnicowanie.</span><span class="sxs-lookup"><span data-stu-id="d08f4-239">However, you can configure a schema context to allow duplicate arities and use types of the positional parameters for differentiation.</span></span> <span data-ttu-id="d08f4-240">Aby uzyskać więcej informacji, zobacz <xref:System.Xaml.XamlSchemaContext.SupportMarkupExtensionsWithDuplicateArity%2A>.</span><span class="sxs-lookup"><span data-stu-id="d08f4-240">For more information, see <xref:System.Xaml.XamlSchemaContext.SupportMarkupExtensionsWithDuplicateArity%2A>.</span></span> <span data-ttu-id="d08f4-241">Dla określonych argumentów (licznik) może się różnić pozycji parametrów i typy.</span><span class="sxs-lookup"><span data-stu-id="d08f4-241">For a specific arity (count), the parameter positions and types can vary.</span></span> <span data-ttu-id="d08f4-242">Można pobrać typu pozycyjnych użycia rozszerzenia znaczników określonej liczby argumentów, należy najpierw wywołać <xref:System.Xaml.XamlType.GetPositionalParameters%2A> określenie liczby argumentów.</span><span class="sxs-lookup"><span data-stu-id="d08f4-242">To get the positional type of a specific arity's markup extension usage, you first call <xref:System.Xaml.XamlType.GetPositionalParameters%2A> specifying the arity count.</span></span> <span data-ttu-id="d08f4-243">Następnie Pobierz elementu na tej pozycji z zwracana kolekcja.</span><span class="sxs-lookup"><span data-stu-id="d08f4-243">Then get the item at that position from the returned collection.</span></span>  
  
 <span data-ttu-id="d08f4-244">Wywołania tej metody można wywoływać <xref:System.Xaml.XamlType.LookupPositionalParameters%2A> zastępuje na <xref:System.Xaml.XamlType> klas pochodnych.</span><span class="sxs-lookup"><span data-stu-id="d08f4-244">Calls to this method can invoke <xref:System.Xaml.XamlType.LookupPositionalParameters%2A> overrides on <xref:System.Xaml.XamlType> derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetXamlNamespaces">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IList&lt;string&gt; GetXamlNamespaces ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IList`1&lt;string&gt; GetXamlNamespaces() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.GetXamlNamespaces" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetXamlNamespaces () As IList(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::Generic::IList&lt;System::String ^&gt; ^ GetXamlNamespaces();" />
      <MemberSignature Language="F#" Value="abstract member GetXamlNamespaces : unit -&gt; System.Collections.Generic.IList&lt;string&gt;&#xA;override this.GetXamlNamespaces : unit -&gt; System.Collections.Generic.IList&lt;string&gt;" Usage="xamlType.GetXamlNamespaces " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="d08f4-245">Zwraca listę identyfikatorów ciągu dla tego typu znajduje się w przestrzeni nazw XAML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d08f4-245">Returns a list of string identifiers for XAML namespaces that the type is included in.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d08f4-246">Lista wartości ciągu, w których każdy ciąg jest identyfikator URI przestrzeni nazw XAML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d08f4-246">A list of string values, where each string is the URI identifier for a XAML namespace.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d08f4-247">Typowy identyfikatory przestrzeni nazw XAML są ciągami w formie identyfikatora URI.</span><span class="sxs-lookup"><span data-stu-id="d08f4-247">Typical XAML namespace identifiers are strings in URI form.</span></span>  
  
 <span data-ttu-id="d08f4-248">Domyślna implementacja sprawdza następujące polecenie, w kolejności: przestrzeni nazw XAML, która jest dostarczana w konstrukcji (<xref:System.Xaml.XamlType.%23ctor%28System.String%2CSystem.String%2CSystem.Collections.Generic.IList%7BSystem.Xaml.XamlType%7D%2CSystem.Xaml.XamlSchemaContext%29> tylko podpis); i przestrzenie nazw, które są dostępne w kontekście schematu.</span><span class="sxs-lookup"><span data-stu-id="d08f4-248">The default implementation checks the following, in order: the XAML namespace that is supplied in construction (<xref:System.Xaml.XamlType.%23ctor%28System.String%2CSystem.String%2CSystem.Collections.Generic.IList%7BSystem.Xaml.XamlType%7D%2CSystem.Xaml.XamlSchemaContext%29> signature only); and the namespaces that are available from the schema context.</span></span> <span data-ttu-id="d08f4-249">Jeśli są one każdego `null`, Nowa lista jest generowana zawierający pojedynczy ciąg pusty.</span><span class="sxs-lookup"><span data-stu-id="d08f4-249">If these are each `null`, a new list is generated that contains a single empty string.</span></span> <span data-ttu-id="d08f4-250">Można zastąpić tę metodę, aby zmienić metodę wyszukiwania.</span><span class="sxs-lookup"><span data-stu-id="d08f4-250">You can override this method to change the lookup methodology.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Invoker">
      <MemberSignature Language="C#" Value="public System.Xaml.Schema.XamlTypeInvoker Invoker { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xaml.Schema.XamlTypeInvoker Invoker" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.Invoker" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Invoker As XamlTypeInvoker" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xaml::Schema::XamlTypeInvoker ^ Invoker { System::Xaml::Schema::XamlTypeInvoker ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Invoker : System.Xaml.Schema.XamlTypeInvoker" Usage="System.Xaml.XamlType.Invoker" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.Schema.XamlTypeInvoker</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d08f4-251">Pobiera <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> implementację, która jest skojarzona z tym <see cref="T:System.Xaml.XamlType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d08f4-251">Gets the <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> implementation that is associated with this <see cref="T:System.Xaml.XamlType" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d08f4-252">
            <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> Implementację, która jest skojarzona z tym <see cref="T:System.Xaml.XamlType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d08f4-252">The <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> implementation that is associated with this <see cref="T:System.Xaml.XamlType" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d08f4-253">Jeśli nie używasz domyślne wewnętrzny CLR odbicia technika <xref:System.Xaml.XamlType>, wywoływania <xref:System.Xaml.XamlType.Invoker%2A> może wywołać albo <xref:System.Xaml.XamlType.LookupInvoker%2A> lub określonego zastąpienia tej metody.</span><span class="sxs-lookup"><span data-stu-id="d08f4-253">If you do not use the default internal CLR reflection technique for a <xref:System.Xaml.XamlType>, calling <xref:System.Xaml.XamlType.Invoker%2A> can invoke either <xref:System.Xaml.XamlType.LookupInvoker%2A> or a specific override of that method.</span></span> <span data-ttu-id="d08f4-254">Aby uzyskać więcej informacji na temat zwracanych wartości i inne zachowanie, zobacz dokumentację <xref:System.Xaml.XamlType.LookupInvoker%2A> dla tego typu.</span><span class="sxs-lookup"><span data-stu-id="d08f4-254">For more information about return values and other behavior, see the documentation for <xref:System.Xaml.XamlType.LookupInvoker%2A> on this type.</span></span>  
  
 <span data-ttu-id="d08f4-255">Jeśli <xref:System.Xaml.XamlType.LookupInvoker%2A> zastąpienia zwraca `null`, lub Jeśli domyślna implementacja zwraca `null` z powodu braku <xref:System.Xaml.XamlType.UnderlyingType%2A> tego <xref:System.Xaml.XamlType>, następnie <xref:System.Xaml.XamlType.Invoker%2A> zwraca <xref:System.Xaml.Schema.XamlTypeInvoker.UnknownInvoker%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="d08f4-255">If a <xref:System.Xaml.XamlType.LookupInvoker%2A> override returns `null`, or if the default implementation returns `null` because of lack of <xref:System.Xaml.XamlType.UnderlyingType%2A> for this <xref:System.Xaml.XamlType>, then <xref:System.Xaml.XamlType.Invoker%2A> returns <xref:System.Xaml.Schema.XamlTypeInvoker.UnknownInvoker%2A?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsAmbient">
      <MemberSignature Language="C#" Value="public bool IsAmbient { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAmbient" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.IsAmbient" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsAmbient As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsAmbient { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsAmbient : bool" Usage="System.Xaml.XamlType.IsAmbient" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d08f4-256">Pobiera wartość wskazującą, czy to <see cref="T:System.Xaml.XamlType" /> reprezentuje typem otoczenia, zgodnie z definicją XAML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d08f4-256">Gets a value that indicates whether this <see cref="T:System.Xaml.XamlType" /> represents an ambient type, as per the XAML definition.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d08f4-257">
            <see langword="true" /> Jeśli <see cref="T:System.Xaml.XamlType" /> reprezentuje typem otoczenia; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d08f4-257">
              <see langword="true" /> if this <see cref="T:System.Xaml.XamlType" /> represents an ambient type; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d08f4-258">Jeśli nie używasz domyślne wewnętrzny CLR odbicia technika <xref:System.Xaml.XamlType>, wywołania do tej właściwości może wywołać <xref:System.Xaml.XamlType.LookupIsAmbient%2A> zastępuje na <xref:System.Xaml.XamlType> klas pochodnych.</span><span class="sxs-lookup"><span data-stu-id="d08f4-258">If you do not use the default internal CLR reflection technique for a <xref:System.Xaml.XamlType>, calls to this property can invoke <xref:System.Xaml.XamlType.LookupIsAmbient%2A> overrides on <xref:System.Xaml.XamlType> derived classes.</span></span> <span data-ttu-id="d08f4-259">Aby uzyskać więcej informacji na temat zwracanych wartości i inne zachowanie, zobacz dokumentację <xref:System.Xaml.XamlType.LookupIsAmbient%2A> dla tego typu.</span><span class="sxs-lookup"><span data-stu-id="d08f4-259">For more information about return values and other behavior, see the documentation for <xref:System.Xaml.XamlType.LookupIsAmbient%2A> on this type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsArray">
      <MemberSignature Language="C#" Value="public bool IsArray { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsArray" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.IsArray" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsArray As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsArray { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsArray : bool" Usage="System.Xaml.XamlType.IsArray" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d08f4-260">Pobiera wartość wskazującą, czy to <see cref="T:System.Xaml.XamlType" /> reprezentuje tablicę.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d08f4-260">Gets a value that indicates whether this <see cref="T:System.Xaml.XamlType" /> represents an array.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d08f4-261">
            <see langword="true" /> Jeśli <see cref="T:System.Xaml.XamlType" /> reprezentuje tablicę; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d08f4-261">
              <see langword="true" /> if this <see cref="T:System.Xaml.XamlType" /> represents an array; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d08f4-262">Jeśli nie używasz domyślne wewnętrzny CLR odbicia technika <xref:System.Xaml.XamlType>, wywołania do tej właściwości może wywołać <xref:System.Xaml.XamlType.LookupCollectionKind%2A> zastępuje na <xref:System.Xaml.XamlType> klas pochodnych.</span><span class="sxs-lookup"><span data-stu-id="d08f4-262">If you do not use the default internal CLR reflection technique for a <xref:System.Xaml.XamlType>, calls to this property can invoke <xref:System.Xaml.XamlType.LookupCollectionKind%2A> overrides on <xref:System.Xaml.XamlType> derived classes.</span></span> <span data-ttu-id="d08f4-263">Aby uzyskać więcej informacji na temat zwracanych wartości i inne zachowanie, zobacz dokumentację <xref:System.Xaml.XamlType.LookupCollectionKind%2A> dla tego typu.</span><span class="sxs-lookup"><span data-stu-id="d08f4-263">For more information about return values and other behavior, see the documentation for <xref:System.Xaml.XamlType.LookupCollectionKind%2A> on this type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsCollection">
      <MemberSignature Language="C#" Value="public bool IsCollection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsCollection" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.IsCollection" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsCollection As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsCollection { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsCollection : bool" Usage="System.Xaml.XamlType.IsCollection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d08f4-264">Pobiera wartość wskazującą, czy to <see cref="T:System.Xaml.XamlType" /> reprezentuje kolekcję.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d08f4-264">Gets a value that indicates whether this <see cref="T:System.Xaml.XamlType" /> represents a collection.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d08f4-265">
            <see langword="true" /> Jeśli <see cref="T:System.Xaml.XamlType" /> reprezentuje kolekcję; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d08f4-265">
              <see langword="true" /> if this <see cref="T:System.Xaml.XamlType" /> represents a collection; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d08f4-266">Jeśli nie używasz domyślne wewnętrzny CLR odbicia technika <xref:System.Xaml.XamlType>, wywołania do tej właściwości może wywołać <xref:System.Xaml.XamlType.LookupCollectionKind%2A> zastępuje na <xref:System.Xaml.XamlType> klas pochodnych.</span><span class="sxs-lookup"><span data-stu-id="d08f4-266">If you do not use the default internal CLR reflection technique for a <xref:System.Xaml.XamlType>, calls to this property can invoke <xref:System.Xaml.XamlType.LookupCollectionKind%2A> overrides on <xref:System.Xaml.XamlType> derived classes.</span></span> <span data-ttu-id="d08f4-267">Aby uzyskać więcej informacji na temat zwracanych wartości i inne zachowanie, zobacz dokumentację <xref:System.Xaml.XamlType.LookupCollectionKind%2A> dla tego typu.</span><span class="sxs-lookup"><span data-stu-id="d08f4-267">For more information about return values and other behavior, see the documentation for <xref:System.Xaml.XamlType.LookupCollectionKind%2A> on this type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsConstructible">
      <MemberSignature Language="C#" Value="public bool IsConstructible { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsConstructible" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.IsConstructible" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsConstructible As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsConstructible { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsConstructible : bool" Usage="System.Xaml.XamlType.IsConstructible" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d08f4-268">Pobiera wartość wskazującą, czy to <see cref="T:System.Xaml.XamlType" /> reprezentuje typ umożliwia konstrukcji, zgodnie z definicją XAML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d08f4-268">Gets a value that indicates whether this <see cref="T:System.Xaml.XamlType" /> represents a constructible type, as per the XAML definition.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d08f4-269">
            <see langword="true" /> Jeśli <see cref="T:System.Xaml.XamlType" /> reprezentuje umożliwia konstrukcji typu; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d08f4-269">
              <see langword="true" /> if this <see cref="T:System.Xaml.XamlType" /> represents a constructible type; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d08f4-270">Ta właściwość jest wyrównywany do `[is default constructible]` elementu informacji w specification [MS-XAML].</span><span class="sxs-lookup"><span data-stu-id="d08f4-270">This property aligns to the `[is default constructible]` information item in the [MS-XAML] specification.</span></span>  
  
 <span data-ttu-id="d08f4-271">Jeśli nie używasz domyślne wewnętrzny CLR odbicia technika <xref:System.Xaml.XamlType>, wywołania do tej właściwości może wywołać <xref:System.Xaml.XamlType.LookupIsConstructible%2A> zastępuje na <xref:System.Xaml.XamlType> klas pochodnych.</span><span class="sxs-lookup"><span data-stu-id="d08f4-271">If you do not use the default internal CLR reflection technique for a <xref:System.Xaml.XamlType>, calls to this property can invoke <xref:System.Xaml.XamlType.LookupIsConstructible%2A> overrides on <xref:System.Xaml.XamlType> derived classes.</span></span> <span data-ttu-id="d08f4-272">Aby uzyskać więcej informacji na temat zwracanych wartości i inne zachowanie, zobacz dokumentację <xref:System.Xaml.XamlType.LookupIsConstructible%2A> dla tego typu.</span><span class="sxs-lookup"><span data-stu-id="d08f4-272">For more information about return values and other behavior, see the documentation for <xref:System.Xaml.XamlType.LookupIsConstructible%2A> on this type.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlType.ConstructionRequiresArguments" />
      </Docs>
    </Member>
    <Member MemberName="IsDictionary">
      <MemberSignature Language="C#" Value="public bool IsDictionary { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDictionary" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.IsDictionary" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsDictionary As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsDictionary { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsDictionary : bool" Usage="System.Xaml.XamlType.IsDictionary" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d08f4-273">Pobiera wartość wskazującą, czy to <see cref="T:System.Xaml.XamlType" /> reprezentuje słownik, zgodnie z definicją XAML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d08f4-273">Gets a value that indicates whether this <see cref="T:System.Xaml.XamlType" /> represents a dictionary, as per the XAML definition.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d08f4-274">
            <see langword="true" /> Jeśli <see cref="T:System.Xaml.XamlType" /> reprezentuje słownik; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d08f4-274">
              <see langword="true" /> if this <see cref="T:System.Xaml.XamlType" /> represents a dictionary; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d08f4-275">Ta właściwość jest wyrównywany do `[is dictionary]` elementu informacji w specification [MS-XAML].</span><span class="sxs-lookup"><span data-stu-id="d08f4-275">This property aligns to the `[is dictionary]` information item in the [MS-XAML] specification.</span></span>  
  
 <span data-ttu-id="d08f4-276">Jeśli nie używasz domyślne wewnętrzny CLR odbicia technika <xref:System.Xaml.XamlType>, wywołania do tej właściwości może wywołać <xref:System.Xaml.XamlType.LookupCollectionKind%2A> zastępuje na <xref:System.Xaml.XamlType> klas pochodnych.</span><span class="sxs-lookup"><span data-stu-id="d08f4-276">If you do not use the default internal CLR reflection technique for a <xref:System.Xaml.XamlType>, calls to this property can invoke <xref:System.Xaml.XamlType.LookupCollectionKind%2A> overrides on <xref:System.Xaml.XamlType> derived classes.</span></span> <span data-ttu-id="d08f4-277">Aby uzyskać więcej informacji na temat zwracanych wartości i inne zachowanie, zobacz dokumentację <xref:System.Xaml.XamlType.LookupCollectionKind%2A> dla tego typu.</span><span class="sxs-lookup"><span data-stu-id="d08f4-277">For more information about return values and other behavior, see the documentation for <xref:System.Xaml.XamlType.LookupCollectionKind%2A> on this type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsGeneric">
      <MemberSignature Language="C#" Value="public bool IsGeneric { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsGeneric" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.IsGeneric" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsGeneric As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsGeneric { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsGeneric : bool" Usage="System.Xaml.XamlType.IsGeneric" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d08f4-278">Pobiera wartość wskazującą, czy to <see cref="T:System.Xaml.XamlType" /> reprezentuje typu ogólnego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d08f4-278">Gets a value that indicates whether this <see cref="T:System.Xaml.XamlType" /> represents a generic type.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d08f4-279">
            <see langword="true" /> Jeśli <see cref="T:System.Xaml.XamlType" /> reprezentuje typ ogólny; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d08f4-279">
              <see langword="true" /> if this <see cref="T:System.Xaml.XamlType" /> represents a generic type; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d08f4-280">Ta właściwość jest właściwością pomocnika, która sprawdza, czy wartości równej null <xref:System.Xaml.XamlType.TypeArguments%2A>.</span><span class="sxs-lookup"><span data-stu-id="d08f4-280">This property is a helper property that checks for a null value of <xref:System.Xaml.XamlType.TypeArguments%2A>.</span></span> <span data-ttu-id="d08f4-281">Nie istnieje żadne określonych `Lookup` metody związane z <xref:System.Xaml.XamlType.IsGeneric%2A>.</span><span class="sxs-lookup"><span data-stu-id="d08f4-281">There is no specific `Lookup` method related to <xref:System.Xaml.XamlType.IsGeneric%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsMarkupExtension">
      <MemberSignature Language="C#" Value="public bool IsMarkupExtension { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsMarkupExtension" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.IsMarkupExtension" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsMarkupExtension As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsMarkupExtension { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsMarkupExtension : bool" Usage="System.Xaml.XamlType.IsMarkupExtension" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d08f4-282">Pobiera wartość wskazującą, czy to <see cref="T:System.Xaml.XamlType" /> reprezentuje rozszerzenie znaczników.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d08f4-282">Gets a value that indicates whether this <see cref="T:System.Xaml.XamlType" /> represents a markup extension.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d08f4-283">
            <see langword="true" /> Jeśli <see cref="T:System.Xaml.XamlType" /> reprezentuje rozszerzenie znaczników; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d08f4-283">
              <see langword="true" /> if this <see cref="T:System.Xaml.XamlType" /> represents a markup extension; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d08f4-284">W warunkach specyfikacji języka XAML, ten typ musi być można przypisać do `x:MarkupExtension` celu powrotu `true` dla <xref:System.Xaml.XamlType.IsMarkupExtension%2A>.</span><span class="sxs-lookup"><span data-stu-id="d08f4-284">In XAML specification terms, this type must be assignable to `x:MarkupExtension` in order to return `true` for <xref:System.Xaml.XamlType.IsMarkupExtension%2A>.</span></span>  
  
 <span data-ttu-id="d08f4-285">Jeśli nie używasz domyślne wewnętrzny CLR odbicia technika <xref:System.Xaml.XamlType>, wywołania do tej właściwości może wywołać <xref:System.Xaml.XamlType.LookupIsMarkupExtension%2A> zastępuje na <xref:System.Xaml.XamlType> klas pochodnych.</span><span class="sxs-lookup"><span data-stu-id="d08f4-285">If you do not use the default internal CLR reflection technique for a <xref:System.Xaml.XamlType>, calls to this property can invoke <xref:System.Xaml.XamlType.LookupIsMarkupExtension%2A> overrides on <xref:System.Xaml.XamlType> derived classes.</span></span> <span data-ttu-id="d08f4-286">Aby uzyskać więcej informacji na temat zwracanych wartości i inne zachowanie, zobacz dokumentację <xref:System.Xaml.XamlType.LookupIsMarkupExtension%2A> dla tego typu.</span><span class="sxs-lookup"><span data-stu-id="d08f4-286">For more information about return values and other behavior, see the documentation for <xref:System.Xaml.XamlType.LookupIsMarkupExtension%2A> on this type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsNameScope">
      <MemberSignature Language="C#" Value="public bool IsNameScope { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsNameScope" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.IsNameScope" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsNameScope As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsNameScope { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsNameScope : bool" Usage="System.Xaml.XamlType.IsNameScope" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d08f4-287">Pobiera wartość wskazującą, czy to <see cref="T:System.Xaml.XamlType" /> reprezentuje namescope XAML, zgodnie z definicją XAML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d08f4-287">Gets a value that indicates whether this <see cref="T:System.Xaml.XamlType" /> represents a XAML namescope, as per the XAML definition.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d08f4-288">
            <see langword="true" /> Jeśli <see cref="T:System.Xaml.XamlType" /> reprezentuje XAML namescope; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d08f4-288">
              <see langword="true" /> if this <see cref="T:System.Xaml.XamlType" /> represents a XAML namescope; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d08f4-289">XAML namescope Wymusza unikatowość nazwy właściwości lub właściwości używanej do `x:Name`  /  `[name property]`.</span><span class="sxs-lookup"><span data-stu-id="d08f4-289">A XAML namescope enforces the name uniqueness of the property or properties used for `x:Name` / `[name property]`.</span></span> <span data-ttu-id="d08f4-290">Jeśli <xref:System.Xaml.XamlType.IsNameScope%2A> jest `true`, mechanizmu wymuszania unikatowości powinna istnieć i należy ocenić, z punktu widzenia ten typ będący właścicielem XAML namescope.</span><span class="sxs-lookup"><span data-stu-id="d08f4-290">If <xref:System.Xaml.XamlType.IsNameScope%2A> is `true`, some mechanism for enforcing uniqueness should exist and should evaluate from the perspective of this type owning a XAML namescope.</span></span> <span data-ttu-id="d08f4-291">XAML namescope następnie rozszerza do typu zawartości, dopóki napotkano inny typ będący właścicielem namescope XAML.</span><span class="sxs-lookup"><span data-stu-id="d08f4-291">The XAML namescope then extends to the content of the type until another XAML namescope-owning type is encountered.</span></span>  
  
 <span data-ttu-id="d08f4-292">Ta właściwość jest wyrównywany do `[is name scope]` elementu informacji w specification [MS-XAML].</span><span class="sxs-lookup"><span data-stu-id="d08f4-292">This property aligns to the `[is name scope]` information item in the [MS-XAML] specification.</span></span>  
  
 <span data-ttu-id="d08f4-293">Jeśli nie używasz domyślne wewnętrzny CLR odbicia technika <xref:System.Xaml.XamlType>, wywołania do tej właściwości może wywołać <xref:System.Xaml.XamlType.LookupIsNameScope%2A> zastępuje na <xref:System.Xaml.XamlType> klas pochodnych.</span><span class="sxs-lookup"><span data-stu-id="d08f4-293">If you do not use the default internal CLR reflection technique for a <xref:System.Xaml.XamlType>, calls to this property can invoke <xref:System.Xaml.XamlType.LookupIsNameScope%2A> overrides on <xref:System.Xaml.XamlType> derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsNameValid">
      <MemberSignature Language="C#" Value="public bool IsNameValid { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsNameValid" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.IsNameValid" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsNameValid As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsNameValid { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsNameValid : bool" Usage="System.Xaml.XamlType.IsNameValid" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d08f4-294">Pobiera wartość wskazującą, czy to <see cref="T:System.Xaml.XamlType" /> została zainicjowana przy użyciu prawidłowej <see langword="xamlName" /> ciąg jako jego <see cref="P:System.Xaml.XamlType.Name" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d08f4-294">Gets a value that indicates whether this <see cref="T:System.Xaml.XamlType" /> is initialized by using a valid <see langword="xamlName" /> string as its <see cref="P:System.Xaml.XamlType.Name" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d08f4-295">
            <see langword="true" /> Jeśli <see cref="T:System.Xaml.XamlType" /> została zainicjowana przy użyciu prawidłowej <see langword="xamlName" /> , ciąg; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d08f4-295">
              <see langword="true" /> if this <see cref="T:System.Xaml.XamlType" /> is initialized by using a valid <see langword="xamlName" /> string; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsNullable">
      <MemberSignature Language="C#" Value="public bool IsNullable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsNullable" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.IsNullable" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsNullable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsNullable { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsNullable : bool" Usage="System.Xaml.XamlType.IsNullable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d08f4-296">Pobiera wartość wskazującą, czy to <see cref="T:System.Xaml.XamlType" /> reprezentuje typ dopuszczający wartość null, zgodnie z definicją XAML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d08f4-296">Gets a value that indicates whether this <see cref="T:System.Xaml.XamlType" /> represents a nullable type, as per the XAML definition.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d08f4-297">
            <see langword="true" /> Jeśli <see cref="T:System.Xaml.XamlType" /> reprezentuje typ dopuszczający wartość null; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d08f4-297">
              <see langword="true" /> if this <see cref="T:System.Xaml.XamlType" /> represents a nullable type; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d08f4-298">Ta właściwość jest wyrównywany do `[is nullable]` elementu informacji w specification [MS-XAML].</span><span class="sxs-lookup"><span data-stu-id="d08f4-298">This property aligns to the `[is nullable]` information item in the [MS-XAML] specification.</span></span>  
  
 <span data-ttu-id="d08f4-299">Jeśli nie używasz domyślne wewnętrzny CLR odbicia technika <xref:System.Xaml.XamlType>, wywołania tej właściwości może wywołać <xref:System.Xaml.XamlType.LookupIsNullable%2A> zastępuje na <xref:System.Xaml.XamlType> klas pochodnych.</span><span class="sxs-lookup"><span data-stu-id="d08f4-299">If you are not using the default internal CLR reflection technique for a <xref:System.Xaml.XamlType>, calls to this property can invoke <xref:System.Xaml.XamlType.LookupIsNullable%2A> overrides on <xref:System.Xaml.XamlType> derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsPublic">
      <MemberSignature Language="C#" Value="public bool IsPublic { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsPublic" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.IsPublic" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsPublic As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsPublic { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsPublic : bool" Usage="System.Xaml.XamlType.IsPublic" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d08f4-300">Pobiera wartość wskazującą, czy to <see cref="T:System.Xaml.XamlType" /> reprezentuje typ publiczny w systemie odpowiedniego typu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d08f4-300">Gets a value that indicates whether this <see cref="T:System.Xaml.XamlType" /> represents a public type in the relevant type system.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d08f4-301">
            <see langword="true" /> Jeśli <see cref="T:System.Xaml.XamlType" /> reprezentuje typ publiczny; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d08f4-301">
              <see langword="true" /> if this <see cref="T:System.Xaml.XamlType" /> represents a public type; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d08f4-302">Jeśli nie używasz domyślne wewnętrzny CLR odbicia technika <xref:System.Xaml.XamlType>, wywołania do tej właściwości może wywołać <xref:System.Xaml.XamlType.LookupIsPublic%2A> zastępuje na <xref:System.Xaml.XamlType> klas pochodnych.</span><span class="sxs-lookup"><span data-stu-id="d08f4-302">If you do not use the default internal CLR reflection technique for a <xref:System.Xaml.XamlType>, calls to this property can invoke <xref:System.Xaml.XamlType.LookupIsPublic%2A> overrides on <xref:System.Xaml.XamlType> derived classes.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="d08f4-303"><xref:System.Xaml.XamlType.LookupIsPublic%2A> jest wirtualna i w związku z tym może zostać zastąpiona.</span><span class="sxs-lookup"><span data-stu-id="d08f4-303"><xref:System.Xaml.XamlType.LookupIsPublic%2A> is virtual, and therefore, can be overridden.</span></span> <span data-ttu-id="d08f4-304">Zastąpienie może potencjalnie (czy do celów złośliwego lub w inny sposób) Aby zmienić informacje zgłoszone dostępu typu XAML, tak aby go już wyrównuje w oczekiwany sposób, przy użyciu typu systemu i dostęp do informacji o jego typem podstawowym CLR.</span><span class="sxs-lookup"><span data-stu-id="d08f4-304">The override has the potential (whether for malicious purposes or otherwise) to change the reported access information about a XAML type so that it no longer aligns in an expected way with the type system and access information of its underlying CLR type.</span></span> <span data-ttu-id="d08f4-305">Dla żadnych krytyczny dla zabezpieczeń kontroli dostępu i przypisania operacji w zamian użyj podstawowego typu środowiska CLR.</span><span class="sxs-lookup"><span data-stu-id="d08f4-305">For any security-critical checks of assignment operations and access, use the underlying CLR type instead.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsUnknown">
      <MemberSignature Language="C#" Value="public bool IsUnknown { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsUnknown" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.IsUnknown" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsUnknown As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsUnknown { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsUnknown : bool" Usage="System.Xaml.XamlType.IsUnknown" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d08f4-306">Pobiera wartość wskazującą, czy to <see cref="T:System.Xaml.XamlType" /> reprezentuje typ, który nie jest rozpoznawany w podstawowym systemie typu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d08f4-306">Gets a value that indicates whether this <see cref="T:System.Xaml.XamlType" /> represents a type that cannot be resolved in the underlying type system.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d08f4-307">
            <see langword="true" /> Jeśli <see cref="T:System.Xaml.XamlType" /> reprezentuje nierozpoznany typ; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d08f4-307">
              <see langword="true" /> if this <see cref="T:System.Xaml.XamlType" /> represents an unresolvable type; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d08f4-308">Jeśli nie używasz domyślne wewnętrzny CLR odbicia technika <xref:System.Xaml.XamlType>, wywołania do tej właściwości może wywołać <xref:System.Xaml.XamlType.LookupIsUnknown%2A> zastępuje na <xref:System.Xaml.XamlType> klas pochodnych.</span><span class="sxs-lookup"><span data-stu-id="d08f4-308">If you do not use the default internal CLR reflection technique for a <xref:System.Xaml.XamlType>, calls to this property can invoke <xref:System.Xaml.XamlType.LookupIsUnknown%2A> overrides on <xref:System.Xaml.XamlType> derived classes.</span></span>  
  
 <span data-ttu-id="d08f4-309">Dla ścieżki obciążenia, która obejmuje <xref:System.Xaml.XamlObjectWriter>, <xref:System.Xaml.XamlType> mający `true` dla <xref:System.Xaml.XamlType.IsUnknown%2A> nie można zapisać do obiektu wykresu.</span><span class="sxs-lookup"><span data-stu-id="d08f4-309">For a load path that involves <xref:System.Xaml.XamlObjectWriter>, a <xref:System.Xaml.XamlType> that has `true` for <xref:System.Xaml.XamlType.IsUnknown%2A> cannot be written into an object graph.</span></span> <span data-ttu-id="d08f4-310">W domyślnej implementacji w <xref:System.Xaml> , <xref:System.Xaml.XamlObjectWriter.WriteStartObject%2A?displayProperty=nameWithType> wywołać zgłasza <xref:System.Xaml.XamlObjectWriterException> podczas odpowiedniego <xref:System.Xaml.XamlType> raporty `true` dla <xref:System.Xaml.XamlType.IsUnknown%2A>.</span><span class="sxs-lookup"><span data-stu-id="d08f4-310">Under the default implementations in <xref:System.Xaml> , the <xref:System.Xaml.XamlObjectWriter.WriteStartObject%2A?displayProperty=nameWithType> call throws a <xref:System.Xaml.XamlObjectWriterException> when the relevant <xref:System.Xaml.XamlType> reports `true` for <xref:System.Xaml.XamlType.IsUnknown%2A>.</span></span> <span data-ttu-id="d08f4-311">Nie należy przekazać <xref:System.Xaml.XamlType> mający <xref:System.Xaml.XamlType.IsUnknown%2A> jako `true` o ile nie jest przygotowana do obsługi wyjątków z <xref:System.Xaml.XamlObjectWriter>, lub w inny sposób, aby dopasować <xref:System.Xaml.XamlObjectWriter> zachowanie lub strumień węzłów XAML przed zapisywanie obiektu wykres.</span><span class="sxs-lookup"><span data-stu-id="d08f4-311">You should not pass a <xref:System.Xaml.XamlType> that has <xref:System.Xaml.XamlType.IsUnknown%2A> as `true` unless you are prepared to handle the exceptions from <xref:System.Xaml.XamlObjectWriter>, or you have other ways to adjust the <xref:System.Xaml.XamlObjectWriter> behavior or the XAML node stream prior to writing the object graph.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsUsableDuringInitialization">
      <MemberSignature Language="C#" Value="public bool IsUsableDuringInitialization { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsUsableDuringInitialization" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.IsUsableDuringInitialization" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsUsableDuringInitialization As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsUsableDuringInitialization { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsUsableDuringInitialization : bool" Usage="System.Xaml.XamlType.IsUsableDuringInitialization" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d08f4-312">Pobiera wartość wskazującą, czy to <see cref="T:System.Xaml.XamlType" /> jest wbudowana góra dół podczas inicjowania XAML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d08f4-312">Gets a value that indicates whether this <see cref="T:System.Xaml.XamlType" /> is built top-down during XAML initialization.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d08f4-313">
            <see langword="true" /> Jeśli <see cref="T:System.Xaml.XamlType" /> jest wbudowana góra dół podczas inicjowania XAML; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d08f4-313">
              <see langword="true" /> if this <see cref="T:System.Xaml.XamlType" /> is built top-down during XAML initialization; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="d08f4-314">Wartość domyślna to <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d08f4-314">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d08f4-315">Góra dół jest metaphor, zbliżony zachowanie procesora XAML podczas tworzenia wykresu obiektu.</span><span class="sxs-lookup"><span data-stu-id="d08f4-315">Top-down is a metaphor that approximates XAML processor behavior when creating the object graph.</span></span> <span data-ttu-id="d08f4-316">Podczas tworzenia góry do dołu, typem wystąpienia dołączony do obiektu nadrzędnego, a następnie jego właściwości ma Ustaw.</span><span class="sxs-lookup"><span data-stu-id="d08f4-316">When built top-down, a type is instantiated, attached to the parent, and then has its properties set.</span></span> <span data-ttu-id="d08f4-317">Góra dół konstrukcji pozwala uniknąć wywoływania obsługi zmienić właściwości wiele razy.</span><span class="sxs-lookup"><span data-stu-id="d08f4-317">Top-down construction avoids invoking property-changed handlers multiple times.</span></span> <span data-ttu-id="d08f4-318">Takie Obsługa fale się wykres obiektu i w związku z tym eliminuje wiele wywołań obsługi oraz zapewnia optymalizację wydajności podczas uruchamiania obiektu wykresu.</span><span class="sxs-lookup"><span data-stu-id="d08f4-318">Such handling ripples up the object graph and therefore, eliminates the multiple handler calls and provides a performance optimization for startup of the object graph.</span></span>  
  
 <span data-ttu-id="d08f4-319">Jeśli nie używasz domyślne wewnętrzny CLR odbicia technika <xref:System.Xaml.XamlType>, wywołania do tej właściwości może wywołać <xref:System.Xaml.XamlType.LookupUsableDuringInitialization%2A> zastępuje na <xref:System.Xaml.XamlType> klas pochodnych.</span><span class="sxs-lookup"><span data-stu-id="d08f4-319">If you do not use the default internal CLR reflection technique for a <xref:System.Xaml.XamlType>, calls to this property can invoke <xref:System.Xaml.XamlType.LookupUsableDuringInitialization%2A> overrides on <xref:System.Xaml.XamlType> derived classes.</span></span> <span data-ttu-id="d08f4-320">Aby uzyskać więcej informacji na temat zwracanych wartości i inne zachowanie, zobacz dokumentację <xref:System.Xaml.XamlType.LookupUsableDuringInitialization%2A> dla tego typu.</span><span class="sxs-lookup"><span data-stu-id="d08f4-320">For more information about return values and other behavior, see the documentation for <xref:System.Xaml.XamlType.LookupUsableDuringInitialization%2A> on this type.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Markup.XamlReader.LoadAsync(System.IO.Stream)" />
        <altmember cref="P:System.Windows.FrameworkElement.IsInitialized" />
      </Docs>
    </Member>
    <Member MemberName="IsWhitespaceSignificantCollection">
      <MemberSignature Language="C#" Value="public bool IsWhitespaceSignificantCollection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsWhitespaceSignificantCollection" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.IsWhitespaceSignificantCollection" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsWhitespaceSignificantCollection As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsWhitespaceSignificantCollection { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsWhitespaceSignificantCollection : bool" Usage="System.Xaml.XamlType.IsWhitespaceSignificantCollection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d08f4-321">Pobiera wartość wskazującą, czy to <see cref="T:System.Xaml.XamlType" /> reprezentuje kolekcję znaczących odstępu, zgodnie z harmonogramem definicji XML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d08f4-321">Gets a value that indicates whether this <see cref="T:System.Xaml.XamlType" /> represents a whitespace significant collection, as per the XML definition.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d08f4-322">
            <see langword="true" /> Jeśli <see cref="T:System.Xaml.XamlType" /> reprezentuje kolekcję znaczące światła; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d08f4-322">
              <see langword="true" /> if this <see cref="T:System.Xaml.XamlType" /> represents a whitespace significant collection; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d08f4-323">Jeśli nie używasz domyślne wewnętrzny CLR odbicia technika <xref:System.Xaml.XamlType>, wywołania do tej właściwości może wywołać <xref:System.Xaml.XamlType.LookupIsWhitespaceSignificantCollection%2A> zastępuje na <xref:System.Xaml.XamlType> klas pochodnych.</span><span class="sxs-lookup"><span data-stu-id="d08f4-323">If you do not use the default internal CLR reflection technique for a <xref:System.Xaml.XamlType>, calls to this property can invoke <xref:System.Xaml.XamlType.LookupIsWhitespaceSignificantCollection%2A> overrides on <xref:System.Xaml.XamlType> derived classes.</span></span> <span data-ttu-id="d08f4-324">Aby uzyskać więcej informacji na temat zwracanych wartości i inne zachowanie, zobacz dokumentację <xref:System.Xaml.XamlType.LookupIsWhitespaceSignificantCollection%2A> dla tego typu.</span><span class="sxs-lookup"><span data-stu-id="d08f4-324">For more information about return values and other behavior, see the documentation for <xref:System.Xaml.XamlType.LookupIsWhitespaceSignificantCollection%2A> on this type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsXData">
      <MemberSignature Language="C#" Value="public bool IsXData { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsXData" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.IsXData" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsXData As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsXData { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsXData : bool" Usage="System.Xaml.XamlType.IsXData" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d08f4-325">Pobiera wartość wskazującą, czy to <see cref="T:System.Xaml.XamlType" /> reprezentuje XML <see langword="XDATA" />, jak na definicji XAML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d08f4-325">Gets a value that indicates whether this <see cref="T:System.Xaml.XamlType" /> represents XML <see langword="XDATA" />, as per the XAML definition.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d08f4-326">
            <see langword="true" /> Jeśli <see cref="T:System.Xaml.XamlType" /> reprezentuje <see langword="XDATA" />; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d08f4-326">
              <see langword="true" /> if this <see cref="T:System.Xaml.XamlType" /> represents <see langword="XDATA" />; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d08f4-327">Ta właściwość jest wyrównywany do `[is xdata]` elementu informacji w specification [MS-XAML].</span><span class="sxs-lookup"><span data-stu-id="d08f4-327">This property aligns to the `[is xdata]` information item in the [MS-XAML] specification.</span></span>  
  
 <span data-ttu-id="d08f4-328">Jeśli nie używasz domyślne wewnętrzny CLR odbicia technika <xref:System.Xaml.XamlType>, wywołania do tej właściwości może wywołać <xref:System.Xaml.XamlType.LookupIsXData%2A> zastępuje na <xref:System.Xaml.XamlType> klas pochodnych.</span><span class="sxs-lookup"><span data-stu-id="d08f4-328">If you do not use the default internal CLR reflection technique for a <xref:System.Xaml.XamlType>, calls to this property can invoke <xref:System.Xaml.XamlType.LookupIsXData%2A> overrides on <xref:System.Xaml.XamlType> derived classes.</span></span> <span data-ttu-id="d08f4-329">Aby uzyskać więcej informacji na temat zwracanych wartości i inne zachowanie, zobacz dokumentację <xref:System.Xaml.XamlType.LookupIsXData%2A> dla tego typu.</span><span class="sxs-lookup"><span data-stu-id="d08f4-329">For more information about return values and other behavior, see the documentation for <xref:System.Xaml.XamlType.LookupIsXData%2A> on this type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemType">
      <MemberSignature Language="C#" Value="public System.Xaml.XamlType ItemType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xaml.XamlType ItemType" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.ItemType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ItemType As XamlType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xaml::XamlType ^ ItemType { System::Xaml::XamlType ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ItemType : System.Xaml.XamlType" Usage="System.Xaml.XamlType.ItemType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d08f4-330">Pobiera wartość, która zawiera informacje o typie dla <see langword="Items" /> właściwości tego <see cref="T:System.Xaml.XamlType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d08f4-330">Gets a value that provides the type information for the <see langword="Items" /> property of this <see cref="T:System.Xaml.XamlType" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d08f4-331">A <see cref="T:System.Xaml.XamlType" /> obiektu dla typu elementów w kolekcji; w przeciwnym razie <see langword="null" />, jeśli to <see cref="T:System.Xaml.XamlType" /> nie reprezentuje kolekcję.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d08f4-331">A <see cref="T:System.Xaml.XamlType" /> object for the type of the items in the collection; otherwise, <see langword="null" />, if this <see cref="T:System.Xaml.XamlType" /> does not represent a collection.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d08f4-332">Ta właściwość dotyczy tylko jeśli <xref:System.Xaml.XamlType> reprezentuje kolekcję (<xref:System.Xaml.XamlType.IsCollection%2A> jest `true`).</span><span class="sxs-lookup"><span data-stu-id="d08f4-332">This property is only relevant if this <xref:System.Xaml.XamlType> represents a collection (<xref:System.Xaml.XamlType.IsCollection%2A> is `true`).</span></span> <span data-ttu-id="d08f4-333">`Items` Właściwość jest niezależnie od właściwość przechowuje elementy w kolekcji lub tablicy typu.</span><span class="sxs-lookup"><span data-stu-id="d08f4-333">The `Items` property is whatever property holds items in that type of collection or array.</span></span>  
  
 <span data-ttu-id="d08f4-334">Jeśli nie używasz domyślne wewnętrzny CLR odbicia technika <xref:System.Xaml.XamlType>, wywołania do tej właściwości może wywołać <xref:System.Xaml.XamlType.LookupItemType%2A> zastępuje na <xref:System.Xaml.XamlType> klas pochodnych.</span><span class="sxs-lookup"><span data-stu-id="d08f4-334">If you do not use the default internal CLR reflection technique for a <xref:System.Xaml.XamlType>, calls to this property can invoke <xref:System.Xaml.XamlType.LookupItemType%2A> overrides on <xref:System.Xaml.XamlType> derived classes.</span></span> <span data-ttu-id="d08f4-335">Aby uzyskać więcej informacji na temat zwracanych wartości i inne zachowanie, zobacz dokumentację <xref:System.Xaml.XamlType.LookupItemType%2A> dla tego typu.</span><span class="sxs-lookup"><span data-stu-id="d08f4-335">For more information about return values and other behavior, see the documentation for <xref:System.Xaml.XamlType.LookupItemType%2A> on this type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="KeyType">
      <MemberSignature Language="C#" Value="public System.Xaml.XamlType KeyType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xaml.XamlType KeyType" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.KeyType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property KeyType As XamlType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xaml::XamlType ^ KeyType { System::Xaml::XamlType ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.KeyType : System.Xaml.XamlType" Usage="System.Xaml.XamlType.KeyType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d08f4-336">Pobiera wartość, która zawiera informacje o typie dla właściwości klucza tego <see cref="T:System.Xaml.XamlType" />, jeśli <see cref="T:System.Xaml.XamlType" /> reprezentuje słownik.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d08f4-336">Gets a value that provides the type information for the key property of this <see cref="T:System.Xaml.XamlType" />, if the <see cref="T:System.Xaml.XamlType" /> represents a dictionary.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d08f4-337">A <see cref="T:System.Xaml.XamlType" /> obiektu dla typu klucza słownika użycia, w przeciwnym razie <see langword="null" />, jeśli to <see cref="T:System.Xaml.XamlType" /> nie reprezentuje słownik.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d08f4-337">A <see cref="T:System.Xaml.XamlType" /> object for the type of the key for dictionary usage, otherwise, <see langword="null" />, if this <see cref="T:System.Xaml.XamlType" /> does not represent a dictionary.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d08f4-338">Ta właściwość dotyczy tylko jeśli <xref:System.Xaml.XamlType> reprezentuje słownik (<xref:System.Xaml.XamlType.IsDictionary%2A> jest `true`).</span><span class="sxs-lookup"><span data-stu-id="d08f4-338">This property is only relevant if this <xref:System.Xaml.XamlType> represents a dictionary (<xref:System.Xaml.XamlType.IsDictionary%2A> is `true`).</span></span>  
  
 <span data-ttu-id="d08f4-339">Jeśli nie używasz domyślne wewnętrzny CLR odbicia technika <xref:System.Xaml.XamlType>, wywołania do tej właściwości może wywołać <xref:System.Xaml.XamlType.LookupKeyType%2A> zastępuje na <xref:System.Xaml.XamlType> klas pochodnych.</span><span class="sxs-lookup"><span data-stu-id="d08f4-339">If you do not use the default internal CLR reflection technique for a <xref:System.Xaml.XamlType>, calls to this property can invoke <xref:System.Xaml.XamlType.LookupKeyType%2A> overrides on <xref:System.Xaml.XamlType> derived classes.</span></span> <span data-ttu-id="d08f4-340">Aby uzyskać więcej informacji na temat zwracanych wartości i inne zachowanie, zobacz dokumentację <xref:System.Xaml.XamlType.LookupKeyType%2A> dla tego typu.</span><span class="sxs-lookup"><span data-stu-id="d08f4-340">For more information about return values and other behavior, see the documentation for <xref:System.Xaml.XamlType.LookupKeyType%2A> on this type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupAliasedProperty">
      <MemberSignature Language="C#" Value="protected virtual System.Xaml.XamlMember LookupAliasedProperty (System.Xaml.XamlDirective directive);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Xaml.XamlMember LookupAliasedProperty(class System.Xaml.XamlDirective directive) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupAliasedProperty(System.Xaml.XamlDirective)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupAliasedProperty (directive As XamlDirective) As XamlMember" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Xaml::XamlMember ^ LookupAliasedProperty(System::Xaml::XamlDirective ^ directive);" />
      <MemberSignature Language="F#" Value="abstract member LookupAliasedProperty : System.Xaml.XamlDirective -&gt; System.Xaml.XamlMember&#xA;override this.LookupAliasedProperty : System.Xaml.XamlDirective -&gt; System.Xaml.XamlMember" Usage="xamlType.LookupAliasedProperty directive" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlMember</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="directive" Type="System.Xaml.XamlDirective" />
      </Parameters>
      <Docs>
        <param name="directive">
          <span data-ttu-id="d08f4-341">Dyrektywa, dla którego można znaleźć elementu członkowskiego aliasu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d08f4-341">The directive for which to find the aliased member.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d08f4-342">Zwraca element członkowski XAML, który jest aliasem do dyrektywy XAML, to <see cref="T:System.Xaml.XamlType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d08f4-342">Returns the XAML member that is aliased to a XAML directive by this <see cref="T:System.Xaml.XamlType" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d08f4-343">Alias elementu członkowskiego, jeśli znaleziono; w przeciwnym razie <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d08f4-343">The aliased member, if found; otherwise, <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d08f4-344">Ta metoda może być wywoływana, gdy obiekt wywołujący pobiera wartość z zakresu od <xref:System.Xaml.XamlType.GetAliasedProperty%2A>.</span><span class="sxs-lookup"><span data-stu-id="d08f4-344">This method can be invoked when a caller gets a value from <xref:System.Xaml.XamlType.GetAliasedProperty%2A>.</span></span>  
  
 <span data-ttu-id="d08f4-345">Domyślna implementacja może zwrócić wyniki dla następujących dyrektyw XAML: `Key`; `Name`; `Uid`; i `xml:lang`.</span><span class="sxs-lookup"><span data-stu-id="d08f4-345">The default implementation can return results for the following XAML directives: `Key`; `Name`; `Uid`; and `xml:lang`.</span></span> <span data-ttu-id="d08f4-346">Wartości te są zależne od podstawowej odbicia i nadal mogą zwracać `null` przypadku nieznalezienia żadnej właściwości aliasu.</span><span class="sxs-lookup"><span data-stu-id="d08f4-346">Values for these depend on underlying reflection and might still return `null` if no aliased property is found.</span></span>  
  
 <span data-ttu-id="d08f4-347">Należy przesłonić tę metodę, jeśli nie jednostki uzależnionej na podstawie odbicia domyślne wewnętrzny CLR i używania metadanych lub innych technik raportowania informacji o systemie typu XAML lub informacji o schemacie typu.</span><span class="sxs-lookup"><span data-stu-id="d08f4-347">Override this method if you are not relying on default internal CLR reflection and are using metadata or other techniques for reporting the XAML type system information or the schema information of a type.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xaml.XamlDirective" />
        <altmember cref="T:System.Xaml.XamlLanguage" />
      </Docs>
    </Member>
    <Member MemberName="LookupAllAttachableMembers">
      <MemberSignature Language="C#" Value="protected virtual System.Collections.Generic.IEnumerable&lt;System.Xaml.XamlMember&gt; LookupAllAttachableMembers ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;class System.Xaml.XamlMember&gt; LookupAllAttachableMembers() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupAllAttachableMembers" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupAllAttachableMembers () As IEnumerable(Of XamlMember)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Collections::Generic::IEnumerable&lt;System::Xaml::XamlMember ^&gt; ^ LookupAllAttachableMembers();" />
      <MemberSignature Language="F#" Value="abstract member LookupAllAttachableMembers : unit -&gt; seq&lt;System.Xaml.XamlMember&gt;&#xA;override this.LookupAllAttachableMembers : unit -&gt; seq&lt;System.Xaml.XamlMember&gt;" Usage="xamlType.LookupAllAttachableMembers " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Xaml.XamlMember&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="d08f4-348">Zwraca zestaw zawierający wszystkie możliwe do dołączenia właściwości, które są udostępniane przez to <see cref="T:System.Xaml.XamlType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d08f4-348">Returns an enumerable set that contains all attachable properties that are exposed by this <see cref="T:System.Xaml.XamlType" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d08f4-349">Wyliczalny zestaw zawierający zero lub więcej <see cref="T:System.Xaml.XamlMember" /> wartości; w przeciwnym razie <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d08f4-349">An enumerable set that contains zero or more <see cref="T:System.Xaml.XamlMember" /> values; otherwise, <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d08f4-350">Ta metoda może być wywoływana, gdy obiekt wywołujący pobiera wartość z zakresu od <xref:System.Xaml.XamlType.GetAllAttachableMembers%2A>.</span><span class="sxs-lookup"><span data-stu-id="d08f4-350">This method can be invoked when a caller gets a value from <xref:System.Xaml.XamlType.GetAllAttachableMembers%2A>.</span></span>  
  
 <span data-ttu-id="d08f4-351">Mimo że <xref:System.Xaml.XamlType.GetAllAttachableMembers%2A> zwraca kolekcję ogólną to `Lookup` metoda zwraca ogólnego wyliczalny zestaw.</span><span class="sxs-lookup"><span data-stu-id="d08f4-351">Although <xref:System.Xaml.XamlType.GetAllAttachableMembers%2A> returns a generic collection, this `Lookup` method returns a generic enumerable set.</span></span>  
  
 <span data-ttu-id="d08f4-352">Domyślna implementacja używa wewnętrznego odbicia CLR.</span><span class="sxs-lookup"><span data-stu-id="d08f4-352">The default implementation uses the internal CLR reflection.</span></span> <span data-ttu-id="d08f4-353">Gdy <xref:System.Xaml.XamlType.UnderlyingType%2A> jest `null`, można użyć w implementacji domyślnej <xref:System.Xaml.XamlType.BaseType%2A>, jeśli jest dostępna.</span><span class="sxs-lookup"><span data-stu-id="d08f4-353">When <xref:System.Xaml.XamlType.UnderlyingType%2A> is `null`, the default implementation can use <xref:System.Xaml.XamlType.BaseType%2A>, if it is available.</span></span> <span data-ttu-id="d08f4-354">Wymaga to zachowanie <xref:System.Xaml.XamlType.LookupAllAttachableMembers%2A> rekursywnie próbuje odnaleźć prawidłowym typem podstawowym i zwraca `null` Jeśli nie ma prawidłową typu podstawowego.</span><span class="sxs-lookup"><span data-stu-id="d08f4-354">This behavior calls <xref:System.Xaml.XamlType.LookupAllAttachableMembers%2A> recursively to attempt to find a valid base type and returns `null` if no valid base type exists.</span></span>  
  
 <span data-ttu-id="d08f4-355">Należy przesłonić tę metodę, jeśli nie jednostki uzależnionej na podstawie odbicia domyślne wewnętrzny CLR i używania metadanych lub innych technik raportowania informacji o systemie typu XAML lub informacji o schemacie typu.</span><span class="sxs-lookup"><span data-stu-id="d08f4-355">Override this method if you are not relying on default internal CLR reflection and are using metadata or other techniques for reporting the XAML type system information or schema information of a type.</span></span> <span data-ttu-id="d08f4-356">Zwracane wartości null ma być zarezerwowana dla przypadków, w których nie można ustalić informacji ze względu na brak obsługi typu systemu lub odbicia.</span><span class="sxs-lookup"><span data-stu-id="d08f4-356">A null return should be reserved for cases where information cannot be determined because of lack of type system or reflection support.</span></span> <span data-ttu-id="d08f4-357">Jeśli typ jest nieprawidłowy i odbicia lub innych technik są dostępne, ale typ nie ma możliwe do dołączenia elementy członkowskie, zamiast tego powinien zwrócić pustą <xref:System.Collections.Generic.IEnumerable%601> ustawiony.</span><span class="sxs-lookup"><span data-stu-id="d08f4-357">If a type is valid and reflection or other techniques are available, but a type does not have attachable members, you should instead return an empty <xref:System.Collections.Generic.IEnumerable%601> set.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupAllMembers">
      <MemberSignature Language="C#" Value="protected virtual System.Collections.Generic.IEnumerable&lt;System.Xaml.XamlMember&gt; LookupAllMembers ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;class System.Xaml.XamlMember&gt; LookupAllMembers() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupAllMembers" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupAllMembers () As IEnumerable(Of XamlMember)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Collections::Generic::IEnumerable&lt;System::Xaml::XamlMember ^&gt; ^ LookupAllMembers();" />
      <MemberSignature Language="F#" Value="abstract member LookupAllMembers : unit -&gt; seq&lt;System.Xaml.XamlMember&gt;&#xA;override this.LookupAllMembers : unit -&gt; seq&lt;System.Xaml.XamlMember&gt;" Usage="xamlType.LookupAllMembers " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Xaml.XamlMember&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="d08f4-358">Zwraca zestaw zawierający wszystkie elementy członkowskie, które są dostępne w tym <see cref="T:System.Xaml.XamlType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d08f4-358">Returns an enumerable set that contains all the members that are exposed by this <see cref="T:System.Xaml.XamlType" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d08f4-359">Wyliczalny zestaw zawierający zero lub więcej <see cref="T:System.Xaml.XamlMember" /> wartości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d08f4-359">An enumerable set that contains zero or more <see cref="T:System.Xaml.XamlMember" /> values.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d08f4-360">Ta metoda może być wywoływana, gdy obiekt wywołujący pobiera wartość z zakresu od <xref:System.Xaml.XamlType.GetAllMembers%2A>.</span><span class="sxs-lookup"><span data-stu-id="d08f4-360">This method can be invoked when a caller gets a value from <xref:System.Xaml.XamlType.GetAllMembers%2A>.</span></span>  
  
 <span data-ttu-id="d08f4-361">Mimo że <xref:System.Xaml.XamlType.GetAllMembers%2A> zwraca kolekcję ogólną to `Lookup` metoda zwraca ogólnego wyliczalny zestaw.</span><span class="sxs-lookup"><span data-stu-id="d08f4-361">Although <xref:System.Xaml.XamlType.GetAllMembers%2A> returns a generic collection, this `Lookup` method returns a generic enumerable set.</span></span>  
  
 <span data-ttu-id="d08f4-362">Domyślna implementacja używa wewnętrznego odbicia CLR.</span><span class="sxs-lookup"><span data-stu-id="d08f4-362">The default implementation uses the internal CLR reflection.</span></span> <span data-ttu-id="d08f4-363">W przypadkach, gdzie <xref:System.Xaml.XamlType.UnderlyingType%2A> jest `null`, można użyć w implementacji domyślnej <xref:System.Xaml.XamlType.BaseType%2A>, jeśli jest dostępna.</span><span class="sxs-lookup"><span data-stu-id="d08f4-363">For cases where <xref:System.Xaml.XamlType.UnderlyingType%2A> is `null`, the default implementation can use <xref:System.Xaml.XamlType.BaseType%2A>, if it is available.</span></span> <span data-ttu-id="d08f4-364">Wymaga to zachowanie <xref:System.Xaml.XamlType.LookupAllMembers%2A> rekursywnie próbuje odnaleźć prawidłowym typem podstawowym i zwraca `null` Jeśli nie ma prawidłową typu podstawowego.</span><span class="sxs-lookup"><span data-stu-id="d08f4-364">This behavior calls <xref:System.Xaml.XamlType.LookupAllMembers%2A> recursively to attempt to find a valid base type, and returns `null` if no valid base type exists.</span></span>  
  
 <span data-ttu-id="d08f4-365">Należy przesłonić tę metodę, jeśli nie jednostki uzależnionej na podstawie odbicia domyślne wewnętrzny CLR i używania metadanych lub innych technik raportowania informacji o systemie typu XAML lub informacji o schemacie typu.</span><span class="sxs-lookup"><span data-stu-id="d08f4-365">Override this method if you are not relying on default internal CLR reflection and are using metadata or other techniques for reporting the XAML type system information or schema information of a type.</span></span> <span data-ttu-id="d08f4-366">Zwracane wartości null ma być zarezerwowana dla przypadków, w których nie można ustalić informacji ze względu na brak obsługi typu systemu lub odbicia.</span><span class="sxs-lookup"><span data-stu-id="d08f4-366">A null return should be reserved for cases where information cannot be determined because of lack of type system or reflection support.</span></span> <span data-ttu-id="d08f4-367">Jeśli typ jest prawidłowy, odbicia lub innych technik są dostępne; Jeśli typ nie ma elementów członkowskich, zamiast tego powinien zwrócić pustą <xref:System.Collections.Generic.IEnumerable%601> ustawiony.</span><span class="sxs-lookup"><span data-stu-id="d08f4-367">If a type is valid, reflection or other techniques are available; if a type does not have members, you should instead return an empty <xref:System.Collections.Generic.IEnumerable%601> set.</span></span>  
  
 <span data-ttu-id="d08f4-368">Zwracane wartości dla <xref:System.Xaml.XamlType.LookupAllMembers%2A> i <xref:System.Xaml.XamlType.LookupAllAttachableMembers%2A> powinny być wykluczają się wzajemnie.</span><span class="sxs-lookup"><span data-stu-id="d08f4-368">Return values for <xref:System.Xaml.XamlType.LookupAllMembers%2A> and <xref:System.Xaml.XamlType.LookupAllAttachableMembers%2A> should be mutually exclusive.</span></span> <span data-ttu-id="d08f4-369">Jeśli sytuacja, w której właściwością zapasowy typ systemu może obsługiwać użycie standardowego wystąpienia, a także możliwe do dołączenia do użycia, należy podać ten element członkowski jako dwa różne <xref:System.Xaml.XamlMember> wartości z jednej wartości znajdujących się na liście możliwej i inną w listę standardowych członków.</span><span class="sxs-lookup"><span data-stu-id="d08f4-369">If you have a situation where a backing type system property can support a standard instance usage as well as an attachable usage, that member should be reported as two different <xref:System.Xaml.XamlMember> values, with one value appearing in the attachable list and another in the standard members list.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupAllowedContentTypes">
      <MemberSignature Language="C#" Value="protected virtual System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt; LookupAllowedContentTypes ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Collections.Generic.IList`1&lt;class System.Xaml.XamlType&gt; LookupAllowedContentTypes() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupAllowedContentTypes" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupAllowedContentTypes () As IList(Of XamlType)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Collections::Generic::IList&lt;System::Xaml::XamlType ^&gt; ^ LookupAllowedContentTypes();" />
      <MemberSignature Language="F#" Value="abstract member LookupAllowedContentTypes : unit -&gt; System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt;&#xA;override this.LookupAllowedContentTypes : unit -&gt; System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt;" Usage="xamlType.LookupAllowedContentTypes " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="d08f4-370">Zwraca listę typów, które są możliwe do użycia jako <see cref="P:System.Xaml.XamlType.ContentProperty" /> wartość to <see cref="T:System.Xaml.XamlType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d08f4-370">Returns a list of the types that are usable as the <see cref="P:System.Xaml.XamlType.ContentProperty" /> value for this <see cref="T:System.Xaml.XamlType" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d08f4-371">Lista możliwych typów zawartości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d08f4-371">A list of possible content types.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d08f4-372">Ta metoda może być wywoływana, gdy obiekt wywołujący pobiera wartość z zakresu od <xref:System.Xaml.XamlType.AllowedContentTypes%2A>.</span><span class="sxs-lookup"><span data-stu-id="d08f4-372">This method can be invoked when a caller gets a value from <xref:System.Xaml.XamlType.AllowedContentTypes%2A>.</span></span>  
  
 <span data-ttu-id="d08f4-373">Typy, które są interpretowane jako <xref:System.Xaml.XamlType.CanAssignTo%2A> dla określonego typu zawartości nie są uznawane za wiele typów dla celów <xref:System.Xaml.XamlType.AllowedContentTypes%2A>.</span><span class="sxs-lookup"><span data-stu-id="d08f4-373">Types that evaluate as <xref:System.Xaml.XamlType.CanAssignTo%2A> for a specific content type are not considered multiple types for purposes of <xref:System.Xaml.XamlType.AllowedContentTypes%2A>.</span></span>  
  
 <span data-ttu-id="d08f4-374">Domyślna implementacja można użyć innych właściwości <xref:System.Xaml.XamlType> (<xref:System.Xaml.XamlType.ContentWrappers%2A>, <xref:System.Xaml.XamlType.ContentProperty%2A>, lub <xref:System.Xaml.XamlType.ItemType%2A>) do uzyskania wyniku.</span><span class="sxs-lookup"><span data-stu-id="d08f4-374">The default implementation can use other properties of <xref:System.Xaml.XamlType> (<xref:System.Xaml.XamlType.ContentWrappers%2A>, <xref:System.Xaml.XamlType.ContentProperty%2A>, or <xref:System.Xaml.XamlType.ItemType%2A>) to obtain a result.</span></span> <span data-ttu-id="d08f4-375">`Lookup` Zastąpienia dla w to również można wywołać z powyższej listy właściwości.</span><span class="sxs-lookup"><span data-stu-id="d08f4-375">The `Lookup` overrides for the preceding property list can also be invoked in this determination.</span></span>  
  
 <span data-ttu-id="d08f4-376">Należy przesłonić tę metodę, jeśli nie jednostki uzależnionej na podstawie odbicia domyślne wewnętrzny CLR i używania metadanych lub innych technik raportowania informacji o systemie typu XAML lub informacji o schemacie typu.</span><span class="sxs-lookup"><span data-stu-id="d08f4-376">Override this method if you are not relying on default internal CLR reflection and are using metadata or other techniques for reporting the XAML type system information or schema information of a type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupAttachableMember">
      <MemberSignature Language="C#" Value="protected virtual System.Xaml.XamlMember LookupAttachableMember (string name);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Xaml.XamlMember LookupAttachableMember(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupAttachableMember(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupAttachableMember (name As String) As XamlMember" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Xaml::XamlMember ^ LookupAttachableMember(System::String ^ name);" />
      <MemberSignature Language="F#" Value="abstract member LookupAttachableMember : string -&gt; System.Xaml.XamlMember&#xA;override this.LookupAttachableMember : string -&gt; System.Xaml.XamlMember" Usage="xamlType.LookupAttachableMember name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlMember</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="d08f4-377">Nazwa elementu członkowskiego możliwej do pobrania w <c>ownerTypeName.MemberName</c> formularza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d08f4-377">The name of the attachable member to get, in <c>ownerTypeName.MemberName</c> form.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d08f4-378">Zwraca <see cref="T:System.Xaml.XamlMember" /> dla określonego o nazwie możliwej tego <see cref="T:System.Xaml.XamlType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d08f4-378">Returns a <see cref="T:System.Xaml.XamlMember" /> for a specific named attachable from this <see cref="T:System.Xaml.XamlType" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d08f4-379">A <see cref="T:System.Xaml.XamlMember" /> obiektu dla żądanego dołączalny element członkowski; w przeciwnym razie <see langword="null" />, jeśli istnieje nie dołączalny element członkowski o takiej nazwie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d08f4-379">A <see cref="T:System.Xaml.XamlMember" /> object for the requested attachable member; otherwise, <see langword="null" />, if no attachable member by that name exists.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d08f4-380">Ta metoda może być wywoływana, gdy obiekt wywołujący pobiera wartość z zakresu od <xref:System.Xaml.XamlType.GetAttachableMember%2A>.</span><span class="sxs-lookup"><span data-stu-id="d08f4-380">This method can be invoked when a caller gets a value from <xref:System.Xaml.XamlType.GetAttachableMember%2A>.</span></span>  
  
 <span data-ttu-id="d08f4-381">Domyślna implementacja używa wewnętrznego odbicia CLR.</span><span class="sxs-lookup"><span data-stu-id="d08f4-381">The default implementation uses the internal CLR reflection.</span></span> <span data-ttu-id="d08f4-382">Gdy <xref:System.Xaml.XamlType.UnderlyingType%2A> jest `null`, można użyć w implementacji domyślnej <xref:System.Xaml.XamlType.BaseType%2A>, jeśli jest dostępna.</span><span class="sxs-lookup"><span data-stu-id="d08f4-382">When <xref:System.Xaml.XamlType.UnderlyingType%2A> is `null`, the default implementation can use <xref:System.Xaml.XamlType.BaseType%2A>, if it is available.</span></span> <span data-ttu-id="d08f4-383">Wymaga to zachowanie <xref:System.Xaml.XamlType.LookupAttachableMember%2A> rekursywnie próbuje odnaleźć prawidłowym typem podstawowym i zwraca `null` Jeśli nie ma prawidłową typu podstawowego.</span><span class="sxs-lookup"><span data-stu-id="d08f4-383">This behavior calls <xref:System.Xaml.XamlType.LookupAttachableMember%2A> recursively to attempt to find a valid base type and returns `null` if no valid base type exists.</span></span>  
  
 <span data-ttu-id="d08f4-384">Należy przesłonić tę metodę, jeśli nie jednostki uzależnionej na podstawie odbicia domyślne wewnętrzny CLR i używania metadanych lub innych technik raportowania informacji o systemie typu XAML lub informacji o schemacie typu.</span><span class="sxs-lookup"><span data-stu-id="d08f4-384">Override this method if you are not relying on default internal CLR reflection and are using metadata or other techniques for reporting the XAML type system information or schema information of a type.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="d08f4-385"><xref:System.Xaml.XamlType.LookupAttachableMember%2A> jest wirtualna i w związku z tym może zostać zastąpiona.</span><span class="sxs-lookup"><span data-stu-id="d08f4-385"><xref:System.Xaml.XamlType.LookupAttachableMember%2A> is virtual, and therefore, can be overridden.</span></span> <span data-ttu-id="d08f4-386">Zastąpienie może potencjalnie (czy do celów złośliwego lub w inny sposób) Aby zmienić członków zgłoszonego typu XAML tak, aby już wyrównane, w oczekiwany sposób, z <xref:System.ComponentModel.TypeDescriptor> `Get*` informacji na temat podstawowy typ CLR.</span><span class="sxs-lookup"><span data-stu-id="d08f4-386">The override has the potential (whether for malicious purposes or otherwise) to change the reported members of a XAML type so that they no longer align in an expected way with the <xref:System.ComponentModel.TypeDescriptor> `Get*` information about the underlying CLR type.</span></span> <span data-ttu-id="d08f4-387">Dla kontroli krytyczny dla zabezpieczeń elementu członkowskiego raportowania należy używać podstawowy typ CLR.</span><span class="sxs-lookup"><span data-stu-id="d08f4-387">For any security-critical checks of member reporting, use the underlying CLR type instead.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupBaseType">
      <MemberSignature Language="C#" Value="protected virtual System.Xaml.XamlType LookupBaseType ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Xaml.XamlType LookupBaseType() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupBaseType" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupBaseType () As XamlType" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Xaml::XamlType ^ LookupBaseType();" />
      <MemberSignature Language="F#" Value="abstract member LookupBaseType : unit -&gt; System.Xaml.XamlType&#xA;override this.LookupBaseType : unit -&gt; System.Xaml.XamlType" Usage="xamlType.LookupBaseType " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlType</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="d08f4-388">Zwraca <see cref="T:System.Xaml.XamlType" /> do natychmiastowego typ bazowy tego typu XAML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d08f4-388">Returns the <see cref="T:System.Xaml.XamlType" /> for the immediate base type of this XAML type.</span>
          </span>
          <span data-ttu-id="d08f4-389">Określenie tej wartości jest oparte na typ bazowy <see cref="T:System.Xaml.XamlType" /> i kontekst schematu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d08f4-389">Determination of this value is based on the underlying type of this <see cref="T:System.Xaml.XamlType" /> and schema context.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d08f4-390">
            <see cref="T:System.Xaml.XamlType" /> Do natychmiastowego typ bazowy tego typu XAML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d08f4-390">The <see cref="T:System.Xaml.XamlType" /> for the immediate base type of this XAML type.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d08f4-391">Ta metoda może być wywoływana, gdy obiekt wywołujący pobiera wartość z zakresu od <xref:System.Xaml.XamlType.BaseType%2A>.</span><span class="sxs-lookup"><span data-stu-id="d08f4-391">This method can be invoked when a caller gets a value from <xref:System.Xaml.XamlType.BaseType%2A>.</span></span>  
  
 <span data-ttu-id="d08f4-392">Domyślna implementacja może zwrócić wewnętrzny stała, który reprezentuje <xref:System.Object> Jeśli <xref:System.Xaml.XamlType.UnderlyingType%2A> jest `null`.</span><span class="sxs-lookup"><span data-stu-id="d08f4-392">The default implementation might return an internal constant that represents the <xref:System.Object> if <xref:System.Xaml.XamlType.UnderlyingType%2A> is `null`.</span></span>  
  
 <span data-ttu-id="d08f4-393">Należy przesłonić tę metodę, jeśli nie jednostki uzależnionej na podstawie odbicia domyślne wewnętrzny CLR i używania metadanych lub innych technik raportowania informacji o systemie typu XAML lub informacji o schemacie typu.</span><span class="sxs-lookup"><span data-stu-id="d08f4-393">Override this method if you are not relying on default internal CLR reflection and are using metadata or other techniques for reporting the XAML type system information or schema information of a type.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="d08f4-394"><xref:System.Xaml.XamlType.LookupBaseType%2A> jest wirtualna i w związku z tym może zostać zastąpiona.</span><span class="sxs-lookup"><span data-stu-id="d08f4-394"><xref:System.Xaml.XamlType.LookupBaseType%2A> is virtual, and therefore, can be overridden.</span></span> <span data-ttu-id="d08f4-395">Zastąpienie może potencjalnie (czy do celów złośliwego lub w inny sposób) Aby zmienić zgłoszone informacje o typie XAML, aby go już wyrównane w oczekiwany sposób informacje o systemie typ podstawowy typu CLR.</span><span class="sxs-lookup"><span data-stu-id="d08f4-395">The override has the potential (whether for malicious purposes or otherwise) to change the reported type information about a XAML type so that it no longer aligns in an expected way with the type system information of its underlying CLR type.</span></span> <span data-ttu-id="d08f4-396">Dla żadnych krytyczny dla zabezpieczeń kontroli dostępu i przypisania operacji w zamian użyj podstawowego typu środowiska CLR.</span><span class="sxs-lookup"><span data-stu-id="d08f4-396">For any security-critical checks of assignment operations and access, use the underlying CLR type instead.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupCollectionKind">
      <MemberSignature Language="C#" Value="protected virtual System.Xaml.Schema.XamlCollectionKind LookupCollectionKind ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance valuetype System.Xaml.Schema.XamlCollectionKind LookupCollectionKind() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupCollectionKind" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupCollectionKind () As XamlCollectionKind" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Xaml::Schema::XamlCollectionKind LookupCollectionKind();" />
      <MemberSignature Language="F#" Value="abstract member LookupCollectionKind : unit -&gt; System.Xaml.Schema.XamlCollectionKind&#xA;override this.LookupCollectionKind : unit -&gt; System.Xaml.Schema.XamlCollectionKind" Usage="xamlType.LookupCollectionKind " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.Schema.XamlCollectionKind</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="d08f4-397">Zwraca wartość <see cref="T:System.Xaml.Schema.XamlCollectionKind" /> wyliczenia, który deklaruje które określonej kolekcji, wpisz to <see cref="T:System.Xaml.XamlType" /> używa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d08f4-397">Returns a value of the <see cref="T:System.Xaml.Schema.XamlCollectionKind" /> enumeration that declares which specific collection type this <see cref="T:System.Xaml.XamlType" /> uses.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d08f4-398">Wartość <see cref="T:System.Xaml.Schema.XamlCollectionKind" /> wyliczenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d08f4-398">A value of the <see cref="T:System.Xaml.Schema.XamlCollectionKind" /> enumeration.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d08f4-399">Ta metoda jest wywoływana przez metodę prywatnej wewnętrzny (żadnego elementu publicznego public `CollectionKind` lub `GetCollectionKind` interfejsu API istnieje na <xref:System.Xaml.XamlType>).</span><span class="sxs-lookup"><span data-stu-id="d08f4-399">This method is invoked by an internal private method (no public `CollectionKind` or `GetCollectionKind` API exists on <xref:System.Xaml.XamlType>).</span></span>  
  
 <span data-ttu-id="d08f4-400">Domyślna implementacja używa wewnętrznego odbicia CLR.</span><span class="sxs-lookup"><span data-stu-id="d08f4-400">The default implementation uses the internal CLR reflection.</span></span> <span data-ttu-id="d08f4-401">W przypadkach, gdzie <xref:System.Xaml.XamlType.UnderlyingType%2A> jest `null`, można użyć w implementacji domyślnej <xref:System.Xaml.XamlType.BaseType%2A>, jeśli jest dostępna.</span><span class="sxs-lookup"><span data-stu-id="d08f4-401">For cases where <xref:System.Xaml.XamlType.UnderlyingType%2A> is `null`, the default implementation can use <xref:System.Xaml.XamlType.BaseType%2A>, if it is available.</span></span> <span data-ttu-id="d08f4-402">To zachowanie pośrednio wywołuje <xref:System.Xaml.XamlType.LookupCollectionKind%2A> rekursywnie próbuje odnaleźć prawidłowym typem podstawowym; zwraca <xref:System.Xaml.Schema.XamlCollectionKind.None?displayProperty=nameWithType> Jeśli nie ma prawidłową typu podstawowego.</span><span class="sxs-lookup"><span data-stu-id="d08f4-402">This behavior indirectly calls <xref:System.Xaml.XamlType.LookupCollectionKind%2A> recursively to attempt to find a valid base type; it returns <xref:System.Xaml.Schema.XamlCollectionKind.None?displayProperty=nameWithType> if no valid base type exists.</span></span> <span data-ttu-id="d08f4-403">Ogólnie rzecz biorąc, próbuje odnaleźć Domyślna implementacja `Add` metody typu podstawowego przez odbicie.</span><span class="sxs-lookup"><span data-stu-id="d08f4-403">In general, the default implementation attempts to find the `Add` method of the underlying type by reflection.</span></span> <span data-ttu-id="d08f4-404">Jeśli znaleziono <xref:System.Reflection.MethodInfo> z `Add` metoda jest zebranie informacji umożliwiających ustalenie, który <xref:System.Xaml.Schema.XamlCollectionKind> powinna zostać zwrócona wartość.</span><span class="sxs-lookup"><span data-stu-id="d08f4-404">If found, the <xref:System.Reflection.MethodInfo> of the `Add` method is enough information to determine which <xref:System.Xaml.Schema.XamlCollectionKind> value should be returned.</span></span> <span data-ttu-id="d08f4-405">W przeciwnym razie zwraca <xref:System.Xaml.Schema.XamlCollectionKind.None?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="d08f4-405">Otherwise, it returns <xref:System.Xaml.Schema.XamlCollectionKind.None?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="d08f4-406">Należy przesłonić tę metodę, jeśli nie jednostki uzależnionej na podstawie odbicia domyślne wewnętrzny CLR i używania metadanych lub innych technik raportowania informacji o systemie typu XAML lub informacji o schemacie typu.</span><span class="sxs-lookup"><span data-stu-id="d08f4-406">Override this method if you are not relying on default internal CLR reflection and are using metadata or other techniques for reporting the XAML type system information or schema information of a type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupConstructionRequiresArguments">
      <MemberSignature Language="C#" Value="protected virtual bool LookupConstructionRequiresArguments ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool LookupConstructionRequiresArguments() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupConstructionRequiresArguments" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupConstructionRequiresArguments () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool LookupConstructionRequiresArguments();" />
      <MemberSignature Language="F#" Value="abstract member LookupConstructionRequiresArguments : unit -&gt; bool&#xA;override this.LookupConstructionRequiresArguments : unit -&gt; bool" Usage="xamlType.LookupConstructionRequiresArguments " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="d08f4-407">Zwraca wartość wskazującą, czy to <see cref="T:System.Xaml.XamlType" /> może mieć argumentów (ograniczenia ogólne za pośrednictwem <see langword="x:TypeArguments" />, tekst inicjowania lub innych technik XAML) do utworzenia prawidłowe wystąpienie typu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d08f4-407">Returns a value that indicates whether this <see cref="T:System.Xaml.XamlType" /> must have arguments (generic constraints through <see langword="x:TypeArguments" />, initialization text, or other XAML techniques) to construct a valid instance of the type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d08f4-408">
            <see langword="true" /> Jeśli konstrukcji wystąpienia wymaga niektórych wartości argumentu; w przeciwnym razie wartość false.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d08f4-408">
              <see langword="true" /> if construction of an instance requires some argument value; otherwise, false.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d08f4-409">Ta metoda może być wywoływana, gdy obiekt wywołujący pobiera wartość z zakresu od <xref:System.Xaml.XamlType.ConstructionRequiresArguments%2A>.</span><span class="sxs-lookup"><span data-stu-id="d08f4-409">This method can be invoked when a caller gets a value from <xref:System.Xaml.XamlType.ConstructionRequiresArguments%2A>.</span></span>  
  
 <span data-ttu-id="d08f4-410">Domyślna implementacja zwraca `false` system typów dla typów traktowane jako typów wartości w środowisku CLR.</span><span class="sxs-lookup"><span data-stu-id="d08f4-410">The default implementation returns `false` for types considered value types in the CLR type system.</span></span> <span data-ttu-id="d08f4-411">Dla innych niż typy wartości, odbicia CLR <xref:System.Reflection.ConstructorInfo> służy do określania, czy istnieje konstruktora domyślnego.</span><span class="sxs-lookup"><span data-stu-id="d08f4-411">For other than value types, CLR reflection <xref:System.Reflection.ConstructorInfo> is used to determine whether a default constructor exists.</span></span>  
  
 <span data-ttu-id="d08f4-412">Należy przesłonić tę metodę, jeśli nie jednostki uzależnionej na podstawie odbicia domyślne wewnętrzny CLR i używania metadanych lub innych technik raportowania informacji o systemie typu XAML lub informacji o schemacie typu.</span><span class="sxs-lookup"><span data-stu-id="d08f4-412">Override this method if you are not relying on default internal CLR reflection and are using metadata or other techniques for reporting the XAML type system information or schema information of a type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupContentProperty">
      <MemberSignature Language="C#" Value="protected virtual System.Xaml.XamlMember LookupContentProperty ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Xaml.XamlMember LookupContentProperty() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupContentProperty" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupContentProperty () As XamlMember" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Xaml::XamlMember ^ LookupContentProperty();" />
      <MemberSignature Language="F#" Value="abstract member LookupContentProperty : unit -&gt; System.Xaml.XamlMember&#xA;override this.LookupContentProperty : unit -&gt; System.Xaml.XamlMember" Usage="xamlType.LookupContentProperty " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlMember</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="d08f4-413">Zwraca <see cref="T:System.Xaml.XamlMember" /> informacji dla właściwości content tego <see cref="T:System.Xaml.XamlType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d08f4-413">Returns <see cref="T:System.Xaml.XamlMember" /> information for the content property of this <see cref="T:System.Xaml.XamlType" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d08f4-414">
            <see cref="T:System.Xaml.XamlMember" /> informacje dla właściwości content tego <see cref="T:System.Xaml.XamlType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d08f4-414">
              <see cref="T:System.Xaml.XamlMember" /> information for the content property of this <see cref="T:System.Xaml.XamlType" />.</span>
          </span>
          <span data-ttu-id="d08f4-415">Może być <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d08f4-415">May be <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d08f4-416">Ta metoda może być wywoływana, gdy obiekt wywołujący pobiera wartość z zakresu od <xref:System.Xaml.XamlType.ContentProperty%2A>.</span><span class="sxs-lookup"><span data-stu-id="d08f4-416">This method can be invoked when a caller gets a value from <xref:System.Xaml.XamlType.ContentProperty%2A>.</span></span>  
  
 <span data-ttu-id="d08f4-417">Sprawdza, czy domyślna implementacja <xref:System.Windows.Markup.ContentPropertyAttribute> w definicji typu.</span><span class="sxs-lookup"><span data-stu-id="d08f4-417">The default implementation checks for <xref:System.Windows.Markup.ContentPropertyAttribute> on the type definition.</span></span> <span data-ttu-id="d08f4-418">Można również sprawdzić <xref:System.Xaml.XamlType.BaseType%2A> dla atrybutu, jeśli nie jest odnaleźć atrybutu w typie podstawowym natychmiastowego.</span><span class="sxs-lookup"><span data-stu-id="d08f4-418">It can also check <xref:System.Xaml.XamlType.BaseType%2A> for the attribute if no attribute is found on the immediate underlying type.</span></span> <span data-ttu-id="d08f4-419">Jeśli te testy nie odnajdzie typu zawartości, domyślna implementacja zwraca `null`.</span><span class="sxs-lookup"><span data-stu-id="d08f4-419">If these checks do not discover a content type, the default implementation returns `null`.</span></span>  
  
 <span data-ttu-id="d08f4-420">Należy przesłonić tę metodę, jeśli nie jednostki uzależnionej na podstawie odbicia domyślne wewnętrzny CLR i używania metadanych lub innych technik raportowania informacji o systemie typu XAML lub informacji o schemacie typu.</span><span class="sxs-lookup"><span data-stu-id="d08f4-420">Override this method if you are not relying on default internal CLR reflection and are using metadata or other techniques for reporting the XAML type system information or schema information of a type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupContentWrappers">
      <MemberSignature Language="C#" Value="protected virtual System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt; LookupContentWrappers ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Collections.Generic.IList`1&lt;class System.Xaml.XamlType&gt; LookupContentWrappers() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupContentWrappers" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupContentWrappers () As IList(Of XamlType)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Collections::Generic::IList&lt;System::Xaml::XamlType ^&gt; ^ LookupContentWrappers();" />
      <MemberSignature Language="F#" Value="abstract member LookupContentWrappers : unit -&gt; System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt;&#xA;override this.LookupContentWrappers : unit -&gt; System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt;" Usage="xamlType.LookupContentWrappers " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="d08f4-421">Pobiera listę <see cref="T:System.Xaml.XamlType" /> wartości, które reprezentują zawartości otoki dla tego <see cref="T:System.Xaml.XamlType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d08f4-421">Gets a list of <see cref="T:System.Xaml.XamlType" /> values that represent the content wrappers for this <see cref="T:System.Xaml.XamlType" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d08f4-422">Lista <see cref="T:System.Xaml.XamlType" /> wartości, które reprezentują zawartości otoki dla tego <see cref="T:System.Xaml.XamlType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d08f4-422">A list of <see cref="T:System.Xaml.XamlType" /> values that represent the content wrappers for this <see cref="T:System.Xaml.XamlType" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d08f4-423">Otoka zawartości jest klasa, która reprezentuje typu zawartości kolekcji, gdy typy, które są używane w tej kolekcji nie są ciągłe w systemie typów.</span><span class="sxs-lookup"><span data-stu-id="d08f4-423">A content wrapper is a class that represents the content collection type when the types that are used in that collection are not contiguous to the type system.</span></span> <span data-ttu-id="d08f4-424">Typy kolekcji elementów dla zawartości otoki powinny być ograniczone w jakikolwiek sposób poza <xref:System.Object> lub obiektu neutralne równoważne.</span><span class="sxs-lookup"><span data-stu-id="d08f4-424">The types of collection items for the content wrapper are expected to be limited in some manner beyond <xref:System.Object> or a neutral object equivalent.</span></span> <span data-ttu-id="d08f4-425">Jednak to ograniczenie jest wymuszane tylko przez projekt lub cel właściwości, które używają tego typu, a nie przez system typów.</span><span class="sxs-lookup"><span data-stu-id="d08f4-425">However, this limitation is only enforced by the design or purpose of the properties that use that type, and not by the type system.</span></span> <span data-ttu-id="d08f4-426">Więcej niż jeden otoki zawartości może istnieć w danym typie.</span><span class="sxs-lookup"><span data-stu-id="d08f4-426">More than one content wrapper can exist on a type.</span></span>  
  
 <span data-ttu-id="d08f4-427">Przykład klasy i scenariusz od wdrożenia programu WPF XAML, zobacz <xref:System.Windows.Documents.InlineCollection>.</span><span class="sxs-lookup"><span data-stu-id="d08f4-427">For an example class and scenario from the WPF XAML implementation, see <xref:System.Windows.Documents.InlineCollection>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupCustomAttributeProvider">
      <MemberSignature Language="C#" Value="protected virtual System.Reflection.ICustomAttributeProvider LookupCustomAttributeProvider ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Reflection.ICustomAttributeProvider LookupCustomAttributeProvider() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupCustomAttributeProvider" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupCustomAttributeProvider () As ICustomAttributeProvider" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Reflection::ICustomAttributeProvider ^ LookupCustomAttributeProvider();" />
      <MemberSignature Language="F#" Value="abstract member LookupCustomAttributeProvider : unit -&gt; System.Reflection.ICustomAttributeProvider&#xA;override this.LookupCustomAttributeProvider : unit -&gt; System.Reflection.ICustomAttributeProvider" Usage="xamlType.LookupCustomAttributeProvider " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.ICustomAttributeProvider</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="d08f4-428">Po zaimplementowaniu w klasie pochodnej zwraca <see cref="T:System.Reflection.ICustomAttributeProvider" /> implementacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d08f4-428">When implemented in a derived class, returns an <see cref="T:System.Reflection.ICustomAttributeProvider" /> implementation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d08f4-429">
            <see cref="T:System.Reflection.ICustomAttributeProvider" /> Implementacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d08f4-429">An <see cref="T:System.Reflection.ICustomAttributeProvider" /> implementation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d08f4-430">Przesłonić tę metodę, aby zapewnić wewnętrzny odbicia z alternatywny sposób uzyskiwania wartości atrybutów CLR.</span><span class="sxs-lookup"><span data-stu-id="d08f4-430">Override this method to provide the internal reflection with an alternative way to obtain CLR attribute values.</span></span> <span data-ttu-id="d08f4-431">W przypadku braku zastąpienia wewnętrzny reflektora używa typowej logiki odbicia CLR.</span><span class="sxs-lookup"><span data-stu-id="d08f4-431">In absence of an override, the internal reflector uses typical CLR reflection logic.</span></span>  
  
 <span data-ttu-id="d08f4-432">Domyślna implementacja zwraca `null`.</span><span class="sxs-lookup"><span data-stu-id="d08f4-432">The default implementation returns `null`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupDeferringLoader">
      <MemberSignature Language="C#" Value="protected virtual System.Xaml.Schema.XamlValueConverter&lt;System.Xaml.XamlDeferringLoader&gt; LookupDeferringLoader ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Xaml.Schema.XamlValueConverter`1&lt;class System.Xaml.XamlDeferringLoader&gt; LookupDeferringLoader() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupDeferringLoader" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupDeferringLoader () As XamlValueConverter(Of XamlDeferringLoader)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Xaml::Schema::XamlValueConverter&lt;System::Xaml::XamlDeferringLoader ^&gt; ^ LookupDeferringLoader();" />
      <MemberSignature Language="F#" Value="abstract member LookupDeferringLoader : unit -&gt; System.Xaml.Schema.XamlValueConverter&lt;System.Xaml.XamlDeferringLoader&gt;&#xA;override this.LookupDeferringLoader : unit -&gt; System.Xaml.Schema.XamlValueConverter&lt;System.Xaml.XamlDeferringLoader&gt;" Usage="xamlType.LookupDeferringLoader " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.Schema.XamlValueConverter&lt;System.Xaml.XamlDeferringLoader&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="d08f4-433">Zwraca <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> obiektu, który jest używany dla ładowanie odłożone zadeklarowany XAML obiektów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d08f4-433">Returns a <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> object, which is used for deferred loading of XAML-declared objects.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d08f4-434">A <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> mający <see cref="T:System.Xaml.XamlDeferringLoader" /> ograniczenie ogólnego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d08f4-434">A <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> that has a <see cref="T:System.Xaml.XamlDeferringLoader" /> constraint on the generic.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d08f4-435">Ta metoda może być wywoływana, gdy obiekt wywołujący pobiera wartość z zakresu od <xref:System.Xaml.XamlType.DeferringLoader%2A>.</span><span class="sxs-lookup"><span data-stu-id="d08f4-435">This method can be invoked when a caller gets a value from <xref:System.Xaml.XamlType.DeferringLoader%2A>.</span></span> <span data-ttu-id="d08f4-436">Przesłonić tę metodę, jeśli chcesz <xref:System.Xaml.XamlType.DeferringLoader%2A> zwraca wartość inną niż jest włączana przez odbicie wewnętrzny domyślne, a także podaje niestandardowych <xref:System.Xaml.Schema.XamlTypeInvoker> informacji.</span><span class="sxs-lookup"><span data-stu-id="d08f4-436">Override this method if you want <xref:System.Xaml.XamlType.DeferringLoader%2A> to return a different value than is enabled by default internal reflection and are also providing custom <xref:System.Xaml.Schema.XamlTypeInvoker> information.</span></span>  
  
 <span data-ttu-id="d08f4-437">Domyślna implementacja zwraca obiekt na podstawie odczytu <xref:System.Windows.Markup.XamlDeferLoadAttribute>.</span><span class="sxs-lookup"><span data-stu-id="d08f4-437">The default implementation returns an object on the basis of reading <xref:System.Windows.Markup.XamlDeferLoadAttribute>.</span></span> <span data-ttu-id="d08f4-438">Można również sprawdzić <xref:System.Xaml.XamlType.BaseType%2A> dla atrybutu, jeśli nie jest odnaleźć atrybutu w typie podstawowym natychmiastowego.</span><span class="sxs-lookup"><span data-stu-id="d08f4-438">It can also  check <xref:System.Xaml.XamlType.BaseType%2A> for the attribute if no attribute is found on the immediate underlying type.</span></span> <span data-ttu-id="d08f4-439">Jeśli wartość jest niedostępna, ta metoda zwraca `null`.</span><span class="sxs-lookup"><span data-stu-id="d08f4-439">If a value is unavailable, this method returns `null`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupInvoker">
      <MemberSignature Language="C#" Value="protected virtual System.Xaml.Schema.XamlTypeInvoker LookupInvoker ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Xaml.Schema.XamlTypeInvoker LookupInvoker() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupInvoker" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupInvoker () As XamlTypeInvoker" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Xaml::Schema::XamlTypeInvoker ^ LookupInvoker();" />
      <MemberSignature Language="F#" Value="abstract member LookupInvoker : unit -&gt; System.Xaml.Schema.XamlTypeInvoker&#xA;override this.LookupInvoker : unit -&gt; System.Xaml.Schema.XamlTypeInvoker" Usage="xamlType.LookupInvoker " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.Schema.XamlTypeInvoker</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="d08f4-440">Zwraca <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> skojarzonego z tym <see cref="T:System.Xaml.XamlType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d08f4-440">Returns a <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> that is associated with this <see cref="T:System.Xaml.XamlType" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d08f4-441">
            <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> Informacje na temat tego <see cref="T:System.Xaml.XamlType" />; w przeciwnym razie <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d08f4-441">The <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> information for this <see cref="T:System.Xaml.XamlType" />; otherwise, <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d08f4-442">Ta metoda może być wywoływany przez wywołania <xref:System.Xaml.XamlType.Invoker%2A>.</span><span class="sxs-lookup"><span data-stu-id="d08f4-442">This method can be invoked by calls to <xref:System.Xaml.XamlType.Invoker%2A>.</span></span>  
  
 <span data-ttu-id="d08f4-443">Domyślna implementacja nie wymaga, aby <xref:System.Xaml.XamlType> można skonstruować za pomocą jednego z konstruktorów, które przekazują początkowej <xref:System.Xaml.Schema.XamlTypeInvoker>.</span><span class="sxs-lookup"><span data-stu-id="d08f4-443">The default implementation does not require that a <xref:System.Xaml.XamlType> be constructed by using one of the constructors that pass an initial <xref:System.Xaml.Schema.XamlTypeInvoker>.</span></span> <span data-ttu-id="d08f4-444">Jednak <xref:System.Xaml.XamlType.UnderlyingType%2A> wartości musi istnieć dla <xref:System.Xaml.XamlType>; w przeciwnym razie wartość domyślna implementacja zwraca `null`.</span><span class="sxs-lookup"><span data-stu-id="d08f4-444">However, an <xref:System.Xaml.XamlType.UnderlyingType%2A> value must exist for the <xref:System.Xaml.XamlType>; otherwise, the default implementation returns `null`.</span></span>  
  
 <span data-ttu-id="d08f4-445">Przesłonić tę metodę, jeśli tworzysz klasy pochodnej z <xref:System.Xaml.Schema.XamlTypeInvoker> i zamierzony zwracany typ klasy pochodnej.</span><span class="sxs-lookup"><span data-stu-id="d08f4-445">Override this method if you also create a derived class from <xref:System.Xaml.Schema.XamlTypeInvoker> and intend to return the derived class.</span></span> <span data-ttu-id="d08f4-446">Jeśli `null`, <xref:System.Xaml.XamlType.Invoker%2A> zwraca <xref:System.Xaml.Schema.XamlTypeInvoker.UnknownInvoker%2A?displayProperty=nameWithType> dotyczące obiektów wywołujących.</span><span class="sxs-lookup"><span data-stu-id="d08f4-446">If you return `null`, <xref:System.Xaml.XamlType.Invoker%2A> returns <xref:System.Xaml.Schema.XamlTypeInvoker.UnknownInvoker%2A?displayProperty=nameWithType> to callers.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupIsAmbient">
      <MemberSignature Language="C#" Value="protected virtual bool LookupIsAmbient ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool LookupIsAmbient() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupIsAmbient" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupIsAmbient () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool LookupIsAmbient();" />
      <MemberSignature Language="F#" Value="abstract member LookupIsAmbient : unit -&gt; bool&#xA;override this.LookupIsAmbient : unit -&gt; bool" Usage="xamlType.LookupIsAmbient " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="d08f4-447">Zwraca wartość wskazującą, czy to <see cref="T:System.Xaml.XamlType" /> reprezentuje typem otoczenia, zgodnie z definicją XAML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d08f4-447">Returns a value that indicates whether this <see cref="T:System.Xaml.XamlType" /> represents an ambient type, as per the XAML definition.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d08f4-448">
            <see langword="true" /> Jeśli <see cref="T:System.Xaml.XamlType" /> reprezentuje typem otoczenia; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d08f4-448">
              <see langword="true" /> if this <see cref="T:System.Xaml.XamlType" /> represents an ambient type; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d08f4-449">Ta metoda może być wywoływany przez wywołania <xref:System.Xaml.XamlType.IsAmbient%2A>.</span><span class="sxs-lookup"><span data-stu-id="d08f4-449">This method can be invoked by calls to <xref:System.Xaml.XamlType.IsAmbient%2A>.</span></span>  
  
 <span data-ttu-id="d08f4-450">Domyślna implementacja używa odbicia CLR na <xref:System.Xaml.XamlType.UnderlyingType%2A> i sprawdź, czy typy podstawowe.</span><span class="sxs-lookup"><span data-stu-id="d08f4-450">The default implementation uses CLR reflection on the <xref:System.Xaml.XamlType.UnderlyingType%2A> and can check the base types.</span></span> <span data-ttu-id="d08f4-451">Sprawdza, czy ta implementacja <xref:System.Windows.Markup.AmbientAttribute> jest stosowany do definicji odpowiedniego typu na poziomie klasy i zwraca `true` w takim przypadku.</span><span class="sxs-lookup"><span data-stu-id="d08f4-451">This implementation checks for the <xref:System.Windows.Markup.AmbientAttribute> that is applied to the relevant type's definition at the class level and returns `true` in this case.</span></span> <span data-ttu-id="d08f4-452">Zwraca wszystkich innych przypadkach `false`.</span><span class="sxs-lookup"><span data-stu-id="d08f4-452">All other cases return `false`.</span></span>  
  
 <span data-ttu-id="d08f4-453">Przesłonić tę metodę, jeśli chcesz <xref:System.Xaml.XamlType.IsAmbient%2A> aby zwracać wartość inną niż jest włączana przez domyślny odbicia wewnętrznych.</span><span class="sxs-lookup"><span data-stu-id="d08f4-453">Override this method if you want <xref:System.Xaml.XamlType.IsAmbient%2A> to return a different value than is enabled by default internal reflection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupIsConstructible">
      <MemberSignature Language="C#" Value="protected virtual bool LookupIsConstructible ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool LookupIsConstructible() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupIsConstructible" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupIsConstructible () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool LookupIsConstructible();" />
      <MemberSignature Language="F#" Value="abstract member LookupIsConstructible : unit -&gt; bool&#xA;override this.LookupIsConstructible : unit -&gt; bool" Usage="xamlType.LookupIsConstructible " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="d08f4-454">Zwraca wartość wskazującą, czy to <see cref="T:System.Xaml.XamlType" /> reprezentuje typ umożliwia konstrukcji, zgodnie z definicją XAML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d08f4-454">Returns a value that indicates whether this <see cref="T:System.Xaml.XamlType" /> represents a constructible type, as per the XAML definition.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d08f4-455">
            <see langword="true" /> Jeśli <see cref="T:System.Xaml.XamlType" /> reprezentuje umożliwia konstrukcji typu; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d08f4-455">
              <see langword="true" /> if this <see cref="T:System.Xaml.XamlType" /> represents a constructible type; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d08f4-456">Ta metoda może być wywoływany przez wywołania <xref:System.Xaml.XamlType.IsConstructible%2A>.</span><span class="sxs-lookup"><span data-stu-id="d08f4-456">This method can be invoked by calls to <xref:System.Xaml.XamlType.IsConstructible%2A>.</span></span>  
  
 <span data-ttu-id="d08f4-457">Domyślna implementacja używa odbicia CLR na <xref:System.Xaml.XamlType.UnderlyingType%2A>.</span><span class="sxs-lookup"><span data-stu-id="d08f4-457">The default implementation uses CLR reflection on the <xref:System.Xaml.XamlType.UnderlyingType%2A>.</span></span> <span data-ttu-id="d08f4-458">Typ musi być konkretnych-nested i zamknięte.</span><span class="sxs-lookup"><span data-stu-id="d08f4-458">The type must be concrete, non-nested, and closed.</span></span> <span data-ttu-id="d08f4-459">Domyślna implementacja sprawdza, czy typ jest typem wartości i powrotu <xref:System.Xaml.XamlType.ConstructionRequiresArguments%2A>.</span><span class="sxs-lookup"><span data-stu-id="d08f4-459">The default implementation checks whether the type is a value type and the return of <xref:System.Xaml.XamlType.ConstructionRequiresArguments%2A>.</span></span> <span data-ttu-id="d08f4-460">Null <xref:System.Xaml.XamlType.UnderlyingType%2A>, ta metoda zwraca `true`.</span><span class="sxs-lookup"><span data-stu-id="d08f4-460">For a null <xref:System.Xaml.XamlType.UnderlyingType%2A>, this method returns `true`.</span></span>  
  
 <span data-ttu-id="d08f4-461">Przesłonić tę metodę, jeśli chcesz <xref:System.Xaml.XamlType.IsConstructible%2A> aby zwracać wartość inną niż jest włączana przez domyślny odbicia wewnętrznych.</span><span class="sxs-lookup"><span data-stu-id="d08f4-461">Override this method if you want <xref:System.Xaml.XamlType.IsConstructible%2A> to return a different value than is enabled by default internal reflection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupIsMarkupExtension">
      <MemberSignature Language="C#" Value="protected virtual bool LookupIsMarkupExtension ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool LookupIsMarkupExtension() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupIsMarkupExtension" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupIsMarkupExtension () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool LookupIsMarkupExtension();" />
      <MemberSignature Language="F#" Value="abstract member LookupIsMarkupExtension : unit -&gt; bool&#xA;override this.LookupIsMarkupExtension : unit -&gt; bool" Usage="xamlType.LookupIsMarkupExtension " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="d08f4-462">Zwraca wartość wskazującą, czy to <see cref="T:System.Xaml.XamlType" /> reprezentuje rozszerzenie znaczników.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d08f4-462">Returns a value that indicates whether this <see cref="T:System.Xaml.XamlType" /> represents a markup extension.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d08f4-463">
            <see langword="true" /> Jeśli <see cref="T:System.Xaml.XamlType" /> reprezentuje rozszerzenie znaczników; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d08f4-463">
              <see langword="true" /> if this <see cref="T:System.Xaml.XamlType" /> represents a markup extension; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d08f4-464">Ta metoda może być wywoływany przez wywołania <xref:System.Xaml.XamlType.IsMarkupExtension%2A>.</span><span class="sxs-lookup"><span data-stu-id="d08f4-464">This method can be invoked by calls to <xref:System.Xaml.XamlType.IsMarkupExtension%2A>.</span></span>  
  
 <span data-ttu-id="d08f4-465">Domyślna implementacja składa się tylko z tego połączenia:</span><span class="sxs-lookup"><span data-stu-id="d08f4-465">The default implementation consists only of this call:</span></span>  
  
 `return CanAssignTo(XamlLanguage.MarkupExtension);`  
  
 <span data-ttu-id="d08f4-466">Przesłonić tę metodę, jeśli chcesz <xref:System.Xaml.XamlType.IsMarkupExtension%2A> do używania różnych logiki.</span><span class="sxs-lookup"><span data-stu-id="d08f4-466">Override this method if you want <xref:System.Xaml.XamlType.IsMarkupExtension%2A> to use different logic.</span></span>  
  
 <span data-ttu-id="d08f4-467">W warunkach specyfikacji języka XAML, ten typ musi być można przypisać do `x:MarkupExtension` celu powrotu `true` dla <xref:System.Xaml.XamlType.IsMarkupExtension%2A>.</span><span class="sxs-lookup"><span data-stu-id="d08f4-467">In XAML specification terms, this type must be assignable to `x:MarkupExtension` in order to return `true` for <xref:System.Xaml.XamlType.IsMarkupExtension%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupIsNameScope">
      <MemberSignature Language="C#" Value="protected virtual bool LookupIsNameScope ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool LookupIsNameScope() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupIsNameScope" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupIsNameScope () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool LookupIsNameScope();" />
      <MemberSignature Language="F#" Value="abstract member LookupIsNameScope : unit -&gt; bool&#xA;override this.LookupIsNameScope : unit -&gt; bool" Usage="xamlType.LookupIsNameScope " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="d08f4-468">Zwraca wartość wskazującą, czy to <see cref="T:System.Xaml.XamlType" /> reprezentuje namescope XAML, zgodnie z definicją XAML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d08f4-468">Returns a value that indicates whether this <see cref="T:System.Xaml.XamlType" /> represents a XAML namescope, as per the XAML definition.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d08f4-469">
            <see langword="true" /> Jeśli <see cref="T:System.Xaml.XamlType" /> reprezentuje XAML namescope; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d08f4-469">
              <see langword="true" /> if this <see cref="T:System.Xaml.XamlType" /> represents a XAML namescope; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d08f4-470">Ta metoda może być wywoływany przez wywołania <xref:System.Xaml.XamlType.IsNameScope%2A>.</span><span class="sxs-lookup"><span data-stu-id="d08f4-470">This method can be invoked by calls to <xref:System.Xaml.XamlType.IsNameScope%2A>.</span></span>  
  
 <span data-ttu-id="d08f4-471">Udostępnia domyślną implementację <xref:System.Xaml.XamlType.CanAssignTo%2A> pośrednio wywoływać względem typu <xref:System.Windows.Markup.INameScope>.</span><span class="sxs-lookup"><span data-stu-id="d08f4-471">The default implementation makes a <xref:System.Xaml.XamlType.CanAssignTo%2A> call indirectly against the type <xref:System.Windows.Markup.INameScope>.</span></span> <span data-ttu-id="d08f4-472"><xref:System.Windows.Markup.INameScope> to interfejs, który jest zdefiniowany w zestawie WindowsBase.dll.</span><span class="sxs-lookup"><span data-stu-id="d08f4-472"><xref:System.Windows.Markup.INameScope> is an interface that is defined in the assembly WindowsBase.dll.</span></span> <span data-ttu-id="d08f4-473">Ta technika identyfikacji namescope XAML jest używany zarówno przez implementacje WPF i Windows Workflow Foundation języka XAML.</span><span class="sxs-lookup"><span data-stu-id="d08f4-473">This technique for XAML namescope identification is used both by WPF and Windows Workflow Foundation implementations of XAML.</span></span>  
  
 <span data-ttu-id="d08f4-474">Przesłonić tę metodę, jeśli chcesz <xref:System.Xaml.XamlType.IsNameScope%2A> do używania różnych logiki.</span><span class="sxs-lookup"><span data-stu-id="d08f4-474">Override this method if you want <xref:System.Xaml.XamlType.IsNameScope%2A> to use different logic.</span></span>  
  
 <span data-ttu-id="d08f4-475">XAML namescope Wymusza unikatowość nazwy właściwości lub właściwości, które są używane do `x:Name`  /  `[name property]`.</span><span class="sxs-lookup"><span data-stu-id="d08f4-475">A XAML namescope enforces the name uniqueness of the property or properties that are used for `x:Name` / `[name property]`.</span></span> <span data-ttu-id="d08f4-476">Jeśli <xref:System.Xaml.XamlType.IsNameScope%2A> jest `true`, a następnie mechanizmu wymuszania unikatowości powinny istnieć i należy ocenić, z punktu widzenia ten typ będący właścicielem XAML namescope.</span><span class="sxs-lookup"><span data-stu-id="d08f4-476">If <xref:System.Xaml.XamlType.IsNameScope%2A> is `true`, then some mechanism for enforcing uniqueness should exist and should evaluate from the perspective of this type owning a XAML namescope.</span></span> <span data-ttu-id="d08f4-477">XAML namescope następnie rozszerza do typu zawartości, dopóki napotkano inny typ będący właścicielem namescope XAML.</span><span class="sxs-lookup"><span data-stu-id="d08f4-477">The XAML namescope then extends to the content of the type until another XAML namescope owning type is encountered.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlObjectWriter.RootNameScope" />
      </Docs>
    </Member>
    <Member MemberName="LookupIsNullable">
      <MemberSignature Language="C#" Value="protected virtual bool LookupIsNullable ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool LookupIsNullable() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupIsNullable" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupIsNullable () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool LookupIsNullable();" />
      <MemberSignature Language="F#" Value="abstract member LookupIsNullable : unit -&gt; bool&#xA;override this.LookupIsNullable : unit -&gt; bool" Usage="xamlType.LookupIsNullable " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="d08f4-478">Zwraca wartość wskazującą, czy to <see cref="T:System.Xaml.XamlType" /> reprezentuje typ dopuszczający wartość null, zgodnie z definicją XAML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d08f4-478">Returns a value that indicates whether this <see cref="T:System.Xaml.XamlType" /> represents a nullable type, as per the XAML definition.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d08f4-479">
            <see langword="true" /> Jeśli <see cref="T:System.Xaml.XamlType" /> reprezentuje typ dopuszczający wartość null; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d08f4-479">
              <see langword="true" /> if this <see cref="T:System.Xaml.XamlType" /> represents a nullable type; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d08f4-480">Ta metoda może być wywoływany przez wywołania <xref:System.Xaml.XamlType.IsNullable%2A>.</span><span class="sxs-lookup"><span data-stu-id="d08f4-480">This method can be invoked by calls to <xref:System.Xaml.XamlType.IsNullable%2A>.</span></span>  
  
 <span data-ttu-id="d08f4-481">Domyślna implementacja sprawdza oparty na CLR core biblioteki nullable koncepcji, sprawdza, czy <xref:System.Xaml.XamlType.UnderlyingType%2A>.</span><span class="sxs-lookup"><span data-stu-id="d08f4-481">The default implementation makes a determination based on the CLR core library nullable concept, checked against <xref:System.Xaml.XamlType.UnderlyingType%2A>.</span></span> <span data-ttu-id="d08f4-482">Null <xref:System.Xaml.XamlType.UnderlyingType%2A>, zwraca `true`.</span><span class="sxs-lookup"><span data-stu-id="d08f4-482">For a null <xref:System.Xaml.XamlType.UnderlyingType%2A>, it returns `true`.</span></span>  
  
 <span data-ttu-id="d08f4-483">Przesłonić tę metodę, jeśli chcesz <xref:System.Xaml.XamlType.IsNullable%2A> do używania różnych logiki.</span><span class="sxs-lookup"><span data-stu-id="d08f4-483">Override this method if you want <xref:System.Xaml.XamlType.IsNullable%2A> to use different logic.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupIsPublic">
      <MemberSignature Language="C#" Value="protected virtual bool LookupIsPublic ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool LookupIsPublic() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupIsPublic" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupIsPublic () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool LookupIsPublic();" />
      <MemberSignature Language="F#" Value="abstract member LookupIsPublic : unit -&gt; bool&#xA;override this.LookupIsPublic : unit -&gt; bool" Usage="xamlType.LookupIsPublic " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="d08f4-484">Zwraca wartość wskazującą, czy to <see cref="T:System.Xaml.XamlType" /> reprezentuje typ publiczny w systemie odpowiedniego typu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d08f4-484">Returns a value that indicates whether this <see cref="T:System.Xaml.XamlType" /> represents a public type in the relevant type system.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d08f4-485">
            <see langword="true" /> Jeśli <see cref="T:System.Xaml.XamlType" /> reprezentuje typ publiczny; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d08f4-485">
              <see langword="true" /> if this <see cref="T:System.Xaml.XamlType" /> represents a public type; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d08f4-486">Ta metoda może być wywoływany przez wywołania <xref:System.Xaml.XamlType.IsPublic%2A>.</span><span class="sxs-lookup"><span data-stu-id="d08f4-486">This method can be invoked by calls to <xref:System.Xaml.XamlType.IsPublic%2A>.</span></span>  
  
 <span data-ttu-id="d08f4-487">Domyślna implementacja używa odbicia CLR względem innych niż null <xref:System.Xaml.XamlType.UnderlyingType%2A>.</span><span class="sxs-lookup"><span data-stu-id="d08f4-487">The default implementation uses CLR reflection against a non-null <xref:System.Xaml.XamlType.UnderlyingType%2A>.</span></span> <span data-ttu-id="d08f4-488">Null <xref:System.Xaml.XamlType.UnderlyingType%2A>, zwraca `true`.</span><span class="sxs-lookup"><span data-stu-id="d08f4-488">For a null <xref:System.Xaml.XamlType.UnderlyingType%2A>, it returns `true`.</span></span>  
  
 <span data-ttu-id="d08f4-489">Przesłonić tę metodę, jeśli chcesz <xref:System.Xaml.XamlType.IsPublic%2A> do używania różnych logiki.</span><span class="sxs-lookup"><span data-stu-id="d08f4-489">Override this method if you want <xref:System.Xaml.XamlType.IsPublic%2A> to use different logic.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="d08f4-490"><xref:System.Xaml.XamlType.LookupIsPublic%2A> jest wirtualna i w związku z tym może zostać zastąpiona.</span><span class="sxs-lookup"><span data-stu-id="d08f4-490"><xref:System.Xaml.XamlType.LookupIsPublic%2A> is virtual, and therefore, can be overridden.</span></span> <span data-ttu-id="d08f4-491">Zastąpienie może potencjalnie (czy do celów złośliwego lub w inny sposób) Aby zmienić informacje zgłoszone dostępu typu XAML, tak aby go już wyrównuje w oczekiwany sposób, przy użyciu typu systemu lub dostępu do informacji o jego typem podstawowym CLR.</span><span class="sxs-lookup"><span data-stu-id="d08f4-491">The override has the potential (whether for malicious purposes or otherwise) to change the reported access information about a XAML type so that it no longer aligns in an expected way with the type system or access information of its underlying CLR type.</span></span> <span data-ttu-id="d08f4-492">Dla żadnych krytyczny dla zabezpieczeń kontroli dostępu i przypisania operacji w zamian użyj podstawowego typu środowiska CLR.</span><span class="sxs-lookup"><span data-stu-id="d08f4-492">For any security-critical checks of assignment operations and access, use the underlying CLR type instead.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupIsUnknown">
      <MemberSignature Language="C#" Value="protected virtual bool LookupIsUnknown ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool LookupIsUnknown() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupIsUnknown" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupIsUnknown () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool LookupIsUnknown();" />
      <MemberSignature Language="F#" Value="abstract member LookupIsUnknown : unit -&gt; bool&#xA;override this.LookupIsUnknown : unit -&gt; bool" Usage="xamlType.LookupIsUnknown " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="d08f4-493">Zwraca wartość wskazującą, czy to <see cref="T:System.Xaml.XamlType" /> reprezentuje typ, który nie jest rozpoznawany w podstawowym systemie typu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d08f4-493">Returns a value that indicates whether this <see cref="T:System.Xaml.XamlType" /> represents a type that cannot be resolved in the underlying type system.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d08f4-494">
            <see langword="true" /> Jeśli <see cref="T:System.Xaml.XamlType" /> reprezentuje nonresolvable typu; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d08f4-494">
              <see langword="true" /> if this <see cref="T:System.Xaml.XamlType" /> represents a nonresolvable type; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d08f4-495">Ta metoda może być wywoływany przez wywołania <xref:System.Xaml.XamlType.IsUnknown%2A>.</span><span class="sxs-lookup"><span data-stu-id="d08f4-495">This method can be invoked by calls to <xref:System.Xaml.XamlType.IsUnknown%2A>.</span></span>  
  
 <span data-ttu-id="d08f4-496">Domyślna implementacja służy odbicia CLR.</span><span class="sxs-lookup"><span data-stu-id="d08f4-496">The default implementation can use CLR reflection.</span></span> <span data-ttu-id="d08f4-497">Null <xref:System.Xaml.XamlType.UnderlyingType%2A>, zwraca `true`.</span><span class="sxs-lookup"><span data-stu-id="d08f4-497">For a null <xref:System.Xaml.XamlType.UnderlyingType%2A>, it returns `true`.</span></span>  
  
 <span data-ttu-id="d08f4-498">Przesłonić tę metodę, jeśli chcesz <xref:System.Xaml.XamlType.IsUnknown%2A> do używania różnych logiki.</span><span class="sxs-lookup"><span data-stu-id="d08f4-498">Override this method if you want <xref:System.Xaml.XamlType.IsUnknown%2A> to use different logic.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupIsWhitespaceSignificantCollection">
      <MemberSignature Language="C#" Value="protected virtual bool LookupIsWhitespaceSignificantCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool LookupIsWhitespaceSignificantCollection() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupIsWhitespaceSignificantCollection" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupIsWhitespaceSignificantCollection () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool LookupIsWhitespaceSignificantCollection();" />
      <MemberSignature Language="F#" Value="abstract member LookupIsWhitespaceSignificantCollection : unit -&gt; bool&#xA;override this.LookupIsWhitespaceSignificantCollection : unit -&gt; bool" Usage="xamlType.LookupIsWhitespaceSignificantCollection " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="d08f4-499">Zwraca wartość wskazującą, czy to <see cref="T:System.Xaml.XamlType" /> reprezentuje kolekcję znaczących odstępu, zgodnie z harmonogramem definicji XML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d08f4-499">Returns a value that indicates whether this <see cref="T:System.Xaml.XamlType" /> represents a whitespace significant collection, as per the XML definition.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d08f4-500">
            <see langword="true" /> Jeśli <see cref="T:System.Xaml.XamlType" /> reprezentuje kolekcję znaczące białe; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d08f4-500">
              <see langword="true" /> if this <see cref="T:System.Xaml.XamlType" /> represents a white-space significant collection; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d08f4-501">Ta metoda może być wywoływany przez wywołania <xref:System.Xaml.XamlType.IsWhitespaceSignificantCollection%2A>.</span><span class="sxs-lookup"><span data-stu-id="d08f4-501">This method can be invoked by calls to <xref:System.Xaml.XamlType.IsWhitespaceSignificantCollection%2A>.</span></span>  
  
 <span data-ttu-id="d08f4-502">Domyślna implementacja zwraca wartość opartą na odczyt <xref:System.Windows.Markup.WhitespaceSignificantCollectionAttribute>.</span><span class="sxs-lookup"><span data-stu-id="d08f4-502">The default implementation returns a value based on reading <xref:System.Windows.Markup.WhitespaceSignificantCollectionAttribute>.</span></span> <span data-ttu-id="d08f4-503">Można również sprawdzić <xref:System.Xaml.XamlType.BaseType%2A> dla atrybutu, jeśli nie jest odnaleźć atrybutu w typie podstawowym natychmiastowego.</span><span class="sxs-lookup"><span data-stu-id="d08f4-503">It can also check the <xref:System.Xaml.XamlType.BaseType%2A> for the attribute if no attribute is found on the immediate underlying type.</span></span> <span data-ttu-id="d08f4-504">Jeśli wartość jest niedostępny, zwraca `false`.</span><span class="sxs-lookup"><span data-stu-id="d08f4-504">If a value is not available, it returns `false`.</span></span>  
  
 <span data-ttu-id="d08f4-505">Przesłonić tę metodę, jeśli chcesz <xref:System.Xaml.XamlType.IsWhitespaceSignificantCollection%2A> do używania różnych logiki.</span><span class="sxs-lookup"><span data-stu-id="d08f4-505">Override this method if you want <xref:System.Xaml.XamlType.IsWhitespaceSignificantCollection%2A> to use different logic.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupIsXData">
      <MemberSignature Language="C#" Value="protected virtual bool LookupIsXData ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool LookupIsXData() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupIsXData" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupIsXData () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool LookupIsXData();" />
      <MemberSignature Language="F#" Value="abstract member LookupIsXData : unit -&gt; bool&#xA;override this.LookupIsXData : unit -&gt; bool" Usage="xamlType.LookupIsXData " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="d08f4-506">Zwraca wartość wskazującą, czy to <see cref="T:System.Xaml.XamlType" /> reprezentuje XML <see langword="XDATA" />, jak na definicji XAML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d08f4-506">Returns a value that indicates whether this <see cref="T:System.Xaml.XamlType" /> represents XML <see langword="XDATA" />, as per the XAML definition.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d08f4-507">
            <see langword="true" /> Jeśli <see cref="T:System.Xaml.XamlType" /> reprezentuje <see langword="XDATA" />; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d08f4-507">
              <see langword="true" /> if this <see cref="T:System.Xaml.XamlType" /> represents <see langword="XDATA" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d08f4-508">Ta metoda może być wywoływany przez wywołania <xref:System.Xaml.XamlType.IsXData%2A>.</span><span class="sxs-lookup"><span data-stu-id="d08f4-508">This method can be invoked by calls to <xref:System.Xaml.XamlType.IsXData%2A>.</span></span>  
  
 <span data-ttu-id="d08f4-509">Udostępnia domyślną implementację <xref:System.Xaml.XamlType.CanAssignTo%2A> pośrednio wywoływać względem typu <xref:System.Xml.Serialization.IXmlSerializable>.</span><span class="sxs-lookup"><span data-stu-id="d08f4-509">The default implementation makes a <xref:System.Xaml.XamlType.CanAssignTo%2A> call indirectly against the type <xref:System.Xml.Serialization.IXmlSerializable>.</span></span>  
  
 <span data-ttu-id="d08f4-510">Przesłonić tę metodę, jeśli chcesz <xref:System.Xaml.XamlType.IsXData%2A> do używania różnych logiki.</span><span class="sxs-lookup"><span data-stu-id="d08f4-510">Override this method if you want <xref:System.Xaml.XamlType.IsXData%2A> to use different logic.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupItemType">
      <MemberSignature Language="C#" Value="protected virtual System.Xaml.XamlType LookupItemType ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Xaml.XamlType LookupItemType() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupItemType" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupItemType () As XamlType" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Xaml::XamlType ^ LookupItemType();" />
      <MemberSignature Language="F#" Value="abstract member LookupItemType : unit -&gt; System.Xaml.XamlType&#xA;override this.LookupItemType : unit -&gt; System.Xaml.XamlType" Usage="xamlType.LookupItemType " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlType</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="d08f4-511">Zwraca wartość, która zawiera informacje o typie dla <see langword="Items" /> właściwości tego <see cref="T:System.Xaml.XamlType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d08f4-511">Returns a value that provides the type information for the <see langword="Items" /> property of this <see cref="T:System.Xaml.XamlType" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d08f4-512">A <see cref="T:System.Xaml.XamlType" /> obiektu dla typu elementów w kolekcji; w przeciwnym razie <see langword="null" /> Jeśli <see cref="T:System.Xaml.XamlType" /> nie reprezentuje kolekcję.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d08f4-512">A <see cref="T:System.Xaml.XamlType" /> object for the type of the items in the collection; otherwise, <see langword="null" /> if this <see cref="T:System.Xaml.XamlType" /> does not represent a collection.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d08f4-513">Ta metoda może być wywoływany przez wywołania <xref:System.Xaml.XamlType.ItemType%2A>.</span><span class="sxs-lookup"><span data-stu-id="d08f4-513">This method can be invoked by calls to <xref:System.Xaml.XamlType.ItemType%2A>.</span></span>  
  
 <span data-ttu-id="d08f4-514">Domyślna implementacja można użyć koncepcji odbicia CLR, takich jak sprawdzanie `Add` metody <xref:System.Reflection.MethodInfo> i przy użyciu <xref:System.Reflection.ParameterInfo>; sprawdzanie <xref:System.Xaml.XamlType.IsArray%2A>; i sprawdzanie <xref:System.Xaml.XamlType.BaseType%2A> i podjęcie próby tej samej logiki.</span><span class="sxs-lookup"><span data-stu-id="d08f4-514">The default implementation can use CLR reflection concepts, such as checking for an `Add` method by <xref:System.Reflection.MethodInfo> and using the <xref:System.Reflection.ParameterInfo>; checking <xref:System.Xaml.XamlType.IsArray%2A>; and checking <xref:System.Xaml.XamlType.BaseType%2A> and trying the same logic there.</span></span>  
  
 <span data-ttu-id="d08f4-515">Przesłonić tę metodę, jeśli chcesz <xref:System.Xaml.XamlType.ItemType%2A> do używania różnych logiki.</span><span class="sxs-lookup"><span data-stu-id="d08f4-515">Override this method if you want <xref:System.Xaml.XamlType.ItemType%2A> to use different logic.</span></span> <span data-ttu-id="d08f4-516">Przypadków, gdy <xref:System.Xaml.XamlType.LookupCollectionKind%2A> zwraca <xref:System.Xaml.Schema.XamlCollectionKind.None?displayProperty=nameWithType> powinien zwrócić `null`.</span><span class="sxs-lookup"><span data-stu-id="d08f4-516">Cases where <xref:System.Xaml.XamlType.LookupCollectionKind%2A> returns <xref:System.Xaml.Schema.XamlCollectionKind.None?displayProperty=nameWithType> should return `null`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupKeyType">
      <MemberSignature Language="C#" Value="protected virtual System.Xaml.XamlType LookupKeyType ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Xaml.XamlType LookupKeyType() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupKeyType" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupKeyType () As XamlType" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Xaml::XamlType ^ LookupKeyType();" />
      <MemberSignature Language="F#" Value="abstract member LookupKeyType : unit -&gt; System.Xaml.XamlType&#xA;override this.LookupKeyType : unit -&gt; System.Xaml.XamlType" Usage="xamlType.LookupKeyType " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlType</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="d08f4-517">Zwraca wartość, która zawiera informacje o typie dla właściwości klucza tego <see cref="T:System.Xaml.XamlType" />, jeśli <see cref="T:System.Xaml.XamlType" /> reprezentuje słownik.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d08f4-517">Returns a value that provides the type information for the key property of this <see cref="T:System.Xaml.XamlType" />, if the <see cref="T:System.Xaml.XamlType" /> represents a dictionary.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d08f4-518">A <see cref="T:System.Xaml.XamlType" /> obiektu dla typu klucza słownika użycia, lub <see langword="null" /> Jeśli <see cref="T:System.Xaml.XamlType" /> nie reprezentuje słownik</span>
          <span class="sxs-lookup">
            <span data-stu-id="d08f4-518">A <see cref="T:System.Xaml.XamlType" /> object for the type of the key for dictionary usage, or <see langword="null" /> if this <see cref="T:System.Xaml.XamlType" /> does not represent a dictionary,</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d08f4-519">Ta metoda może być wywoływany przez wywołania <xref:System.Xaml.XamlType.KeyType%2A>.</span><span class="sxs-lookup"><span data-stu-id="d08f4-519">This method can be invoked by calls to <xref:System.Xaml.XamlType.KeyType%2A>.</span></span>  
  
 <span data-ttu-id="d08f4-520">Domyślna implementacja można użyć koncepcji odbicia CLR, takich jak sprawdzanie `Add` metody <xref:System.Reflection.MethodInfo> i przy użyciu <xref:System.Reflection.ParameterInfo>; i sprawdzanie <xref:System.Xaml.XamlType.BaseType%2A> i podjęcie próby tej samej logiki.</span><span class="sxs-lookup"><span data-stu-id="d08f4-520">The default implementation can use CLR reflection concepts, such as checking for an `Add` method by <xref:System.Reflection.MethodInfo> and using the <xref:System.Reflection.ParameterInfo>; and checking <xref:System.Xaml.XamlType.BaseType%2A> and trying the same logic there.</span></span>  
  
 <span data-ttu-id="d08f4-521">Przesłonić tę metodę, jeśli chcesz <xref:System.Xaml.XamlType.KeyType%2A> do używania różnych logiki.</span><span class="sxs-lookup"><span data-stu-id="d08f4-521">Override this method if you want <xref:System.Xaml.XamlType.KeyType%2A> to use different logic.</span></span> <span data-ttu-id="d08f4-522">Przypadków, gdy <xref:System.Xaml.XamlType.LookupCollectionKind%2A> nie zwraca <xref:System.Xaml.Schema.XamlCollectionKind.Dictionary?displayProperty=nameWithType> powinien zwrócić `null`.</span><span class="sxs-lookup"><span data-stu-id="d08f4-522">Cases where <xref:System.Xaml.XamlType.LookupCollectionKind%2A> does not return <xref:System.Xaml.Schema.XamlCollectionKind.Dictionary?displayProperty=nameWithType> should return `null`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupMarkupExtensionReturnType">
      <MemberSignature Language="C#" Value="protected virtual System.Xaml.XamlType LookupMarkupExtensionReturnType ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Xaml.XamlType LookupMarkupExtensionReturnType() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupMarkupExtensionReturnType" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupMarkupExtensionReturnType () As XamlType" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Xaml::XamlType ^ LookupMarkupExtensionReturnType();" />
      <MemberSignature Language="F#" Value="abstract member LookupMarkupExtensionReturnType : unit -&gt; System.Xaml.XamlType&#xA;override this.LookupMarkupExtensionReturnType : unit -&gt; System.Xaml.XamlType" Usage="xamlType.LookupMarkupExtensionReturnType " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlType</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="d08f4-523">Zwraca wartość, która zawiera informacje o typie dla zwróconego <see langword="ProvideValue" /> tego <see cref="T:System.Xaml.XamlType" />, jeśli stanowi rozszerzenie znaczników.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d08f4-523">Returns a value that provides the type information for the returned <see langword="ProvideValue" /> of this <see cref="T:System.Xaml.XamlType" />, if it represents a markup extension.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d08f4-524">A <see cref="T:System.Xaml.XamlType" /> obiektu dla typu zwracanych danych użycia rozszerzenia znaczników; w przeciwnym razie <see langword="null" />, jeśli to <see cref="T:System.Xaml.XamlType" /> nie reprezentuje rozszerzenie znaczników.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d08f4-524">A <see cref="T:System.Xaml.XamlType" /> object for the return type for markup extension usage; otherwise, <see langword="null" />, if this <see cref="T:System.Xaml.XamlType" /> does not represent a markup extension.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d08f4-525">Ta metoda może być wywoływany przez wywołania <xref:System.Xaml.XamlType.MarkupExtensionReturnType%2A>.</span><span class="sxs-lookup"><span data-stu-id="d08f4-525">This method can be invoked by calls to <xref:System.Xaml.XamlType.MarkupExtensionReturnType%2A>.</span></span>  
  
 <span data-ttu-id="d08f4-526">Domyślna implementacja zwraca <xref:System.Xaml.XamlType> na podstawie odczytu <xref:System.Windows.Markup.MarkupExtensionReturnTypeAttribute>.</span><span class="sxs-lookup"><span data-stu-id="d08f4-526">The default implementation returns a <xref:System.Xaml.XamlType> on the basis of reading <xref:System.Windows.Markup.MarkupExtensionReturnTypeAttribute>.</span></span> <span data-ttu-id="d08f4-527">Można również sprawdzić <xref:System.Xaml.XamlType.BaseType%2A> dla atrybutu, jeśli nie jest odnaleźć atrybutu w typie podstawowym natychmiastowego.</span><span class="sxs-lookup"><span data-stu-id="d08f4-527">It can also check <xref:System.Xaml.XamlType.BaseType%2A> for the attribute if no attribute is found on the immediate underlying type.</span></span> <span data-ttu-id="d08f4-528">Jeśli wartość jest niedostępny, zwraca `null`.</span><span class="sxs-lookup"><span data-stu-id="d08f4-528">If a value is not available, it returns `null`.</span></span>  
  
 <span data-ttu-id="d08f4-529">Przesłonić tę metodę, jeśli chcesz <xref:System.Xaml.XamlType.MarkupExtensionReturnType%2A> do używania różnych logiki.</span><span class="sxs-lookup"><span data-stu-id="d08f4-529">Override this method if you want <xref:System.Xaml.XamlType.MarkupExtensionReturnType%2A> to use different logic.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupMember">
      <MemberSignature Language="C#" Value="protected virtual System.Xaml.XamlMember LookupMember (string name, bool skipReadOnlyCheck);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Xaml.XamlMember LookupMember(string name, bool skipReadOnlyCheck) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupMember(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupMember (name As String, skipReadOnlyCheck As Boolean) As XamlMember" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Xaml::XamlMember ^ LookupMember(System::String ^ name, bool skipReadOnlyCheck);" />
      <MemberSignature Language="F#" Value="abstract member LookupMember : string * bool -&gt; System.Xaml.XamlMember&#xA;override this.LookupMember : string * bool -&gt; System.Xaml.XamlMember" Usage="xamlType.LookupMember (name, skipReadOnlyCheck)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlMember</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="skipReadOnlyCheck" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="d08f4-530">Nazwa elementu członkowskiego do pobrania (jako ciąg).</span>
          <span class="sxs-lookup">
            <span data-stu-id="d08f4-530">The name of the member to get (as a string).</span>
          </span>
        </param>
        <param name="skipReadOnlyCheck">
          <span data-ttu-id="d08f4-531">
            <see langword="true" /> Aby zwrócić elementu członkowskiego, nawet jeśli ten element członkowski ma <see langword="true" /> wartość <see cref="P:System.Xaml.XamlMember.IsReadOnly" />; <see langword="false" /> aby nie zwracał <see cref="P:System.Xaml.XamlMember.IsReadOnly" /> elementu członkowskiego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d08f4-531">
              <see langword="true" /> to return a member even if that member has a <see langword="true" /> value for <see cref="P:System.Xaml.XamlMember.IsReadOnly" />; <see langword="false" /> to not return a <see cref="P:System.Xaml.XamlMember.IsReadOnly" /> member.</span>
          </span>
          <span data-ttu-id="d08f4-532">Wartość domyślna to <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d08f4-532">The default is <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d08f4-533">Zwraca <see cref="T:System.Xaml.XamlMember" /> dla określonego o nazwie elementu członkowskiego to <see cref="T:System.Xaml.XamlType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d08f4-533">Returns the <see cref="T:System.Xaml.XamlMember" /> for a specific named member from this <see cref="T:System.Xaml.XamlType" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d08f4-534">
            <see cref="T:System.Xaml.XamlMember" /> Informacji dla elementu członkowskiego, jeśli element członkowski został znaleziony, a w przeciwnym razie <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d08f4-534">The <see cref="T:System.Xaml.XamlMember" /> information for the member, if a member was found; otherwise, <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d08f4-535">Ta metoda może być wywoływany przez wywołania <xref:System.Xaml.XamlType.GetMember%2A>.</span><span class="sxs-lookup"><span data-stu-id="d08f4-535">This method can be invoked by calls to <xref:System.Xaml.XamlType.GetMember%2A>.</span></span>  
  
 <span data-ttu-id="d08f4-536">Domyślna implementacja zwraca <xref:System.Xaml.XamlType> na podstawie wewnętrznych odbicia CLR i kontekst schematu, dopasowując.</span><span class="sxs-lookup"><span data-stu-id="d08f4-536">The default implementation returns a <xref:System.Xaml.XamlType> based on internal CLR reflection and evaluation against the schema context.</span></span>  
  
 <span data-ttu-id="d08f4-537">Przesłonić tę metodę, jeśli chcesz <xref:System.Xaml.XamlType.GetMember%2A> do używania różnych logiki.</span><span class="sxs-lookup"><span data-stu-id="d08f4-537">Override this method if you want <xref:System.Xaml.XamlType.GetMember%2A> to use different logic.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="d08f4-538"><xref:System.Xaml.XamlType.LookupMember%2A> jest wirtualna i w związku z tym może zostać zastąpiona.</span><span class="sxs-lookup"><span data-stu-id="d08f4-538"><xref:System.Xaml.XamlType.LookupMember%2A> is virtual, and therefore, can be overridden.</span></span> <span data-ttu-id="d08f4-539">Zastąpienie może potencjalnie (czy do celów złośliwego lub w inny sposób) Aby zmienić członków zgłoszonego typu XAML tak, aby już wyrównane, w oczekiwany sposób, z <xref:System.ComponentModel.TypeDescriptor> `Get*` informacji na temat podstawowy typ CLR.</span><span class="sxs-lookup"><span data-stu-id="d08f4-539">The override has the potential (whether for malicious purposes or otherwise) to change the reported members of a XAML type so that they no longer align in an expected way with the <xref:System.ComponentModel.TypeDescriptor> `Get*` information about the underlying CLR type.</span></span> <span data-ttu-id="d08f4-540">Dla kontroli krytyczny dla zabezpieczeń elementu członkowskiego raportowania należy używać podstawowy typ CLR.</span><span class="sxs-lookup"><span data-stu-id="d08f4-540">For any security-critical checks of member reporting, use the underlying CLR type instead.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupPositionalParameters">
      <MemberSignature Language="C#" Value="protected virtual System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt; LookupPositionalParameters (int parameterCount);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Collections.Generic.IList`1&lt;class System.Xaml.XamlType&gt; LookupPositionalParameters(int32 parameterCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupPositionalParameters(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupPositionalParameters (parameterCount As Integer) As IList(Of XamlType)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Collections::Generic::IList&lt;System::Xaml::XamlType ^&gt; ^ LookupPositionalParameters(int parameterCount);" />
      <MemberSignature Language="F#" Value="abstract member LookupPositionalParameters : int -&gt; System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt;&#xA;override this.LookupPositionalParameters : int -&gt; System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt;" Usage="xamlType.LookupPositionalParameters parameterCount" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameterCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="parameterCount">
          <span data-ttu-id="d08f4-541">Liczba (argumentów) określonej składni lub konstruktora tryb, w którym chcesz uzyskać informacje.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d08f4-541">The count (arity) of the particular syntax or constructor mode that you want information about.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d08f4-542">W przypadku typów rozszerzenia znaczników zwraca typy parametrów pozycyjnych, które są obsługiwane przez użycie rozszerzenia znaczników określonego dla tego <see cref="T:System.Xaml.XamlType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d08f4-542">For markup extension types, returns the types of the positional parameters that are supported in a specific markup extension usage for this <see cref="T:System.Xaml.XamlType" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d08f4-543">Lista <see cref="T:System.Xaml.XamlType" /> wartości gdzie każdy taki <see cref="T:System.Xaml.XamlType" /> typ dla tej pozycji w składni.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d08f4-543">A list of <see cref="T:System.Xaml.XamlType" /> values where each such <see cref="T:System.Xaml.XamlType" /> is the type for that position in the syntax.</span>
          </span>
          <span data-ttu-id="d08f4-544">Należy określić tych typów w tej samej kolejności, dostarczając danych wejściowych znaczników dla rozszerzenia znacznika.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d08f4-544">You must specify those types in the same order when supplying markup input for the markup extension.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d08f4-545">Ta metoda może być wywoływany przez wywołania <xref:System.Xaml.XamlType.GetPositionalParameters%2A>.</span><span class="sxs-lookup"><span data-stu-id="d08f4-545">This method can be invoked by calls to <xref:System.Xaml.XamlType.GetPositionalParameters%2A>.</span></span>  
  
 <span data-ttu-id="d08f4-546">Domyślna implementacja używa informacji wewnętrznych odbicia na podstawie znajdowanie konstruktory i sprawdzanie liczby argumentów.</span><span class="sxs-lookup"><span data-stu-id="d08f4-546">The default implementation uses internal reflection information based on finding constructors and checking the arity.</span></span> <span data-ttu-id="d08f4-547">Przesłonić tę metodę, jeśli chcesz <xref:System.Xaml.XamlType.GetPositionalParameters%2A> do używania różnych logiki.</span><span class="sxs-lookup"><span data-stu-id="d08f4-547">Override this method if you want <xref:System.Xaml.XamlType.GetPositionalParameters%2A> to use different logic.</span></span>  
  
 <span data-ttu-id="d08f4-548">Ten interfejs API jest ważne, jeśli to tylko <xref:System.Xaml.XamlType> reprezentuje rozszerzenie znaczników (<xref:System.Xaml.XamlType.IsMarkupExtension%2A> jest `true`).</span><span class="sxs-lookup"><span data-stu-id="d08f4-548">This API is only relevant if this <xref:System.Xaml.XamlType> represents a markup extension (<xref:System.Xaml.XamlType.IsMarkupExtension%2A> is `true`).</span></span>  
  
 <span data-ttu-id="d08f4-549">Dane wejściowe `parameterCount` nie jest przeznaczony dla żądania typu określonych parametrów pozycyjnych.</span><span class="sxs-lookup"><span data-stu-id="d08f4-549">The input `parameterCount` is not for requesting the type of a specific positional parameter.</span></span> <span data-ttu-id="d08f4-550">Jest określenie liczby argumentów użycie rozszerzenia znaczników.</span><span class="sxs-lookup"><span data-stu-id="d08f4-550">It is for specifying the arity of a markup extension usage.</span></span> <span data-ttu-id="d08f4-551">Użycie rozszerzenia znaczników często posiada wiele sygnatur i używa parametru innej liczby argumentów skonkretyzowanego (licznik) parametrów pozycyjnych do odróżnienia.</span><span class="sxs-lookup"><span data-stu-id="d08f4-551">Markup extension usage often has multiple signatures and uses different parameter arity (count) of positional parameters to differentiate.</span></span> <span data-ttu-id="d08f4-552">Można jednak skonfigurować kontekst schematu zezwala na zduplikowane arities i typy parametrów pozycyjnych na użytek zróżnicowanie.</span><span class="sxs-lookup"><span data-stu-id="d08f4-552">However, you can configure a schema context to allow duplicate arities and use types of the positional parameters for differentiation.</span></span> <span data-ttu-id="d08f4-553">Aby uzyskać więcej informacji, zobacz <xref:System.Xaml.XamlSchemaContext.SupportMarkupExtensionsWithDuplicateArity%2A>.</span><span class="sxs-lookup"><span data-stu-id="d08f4-553">For more information, see <xref:System.Xaml.XamlSchemaContext.SupportMarkupExtensionsWithDuplicateArity%2A>.</span></span> <span data-ttu-id="d08f4-554">Liczba określonych argumentów może się różnić pozycji parametrów i typy.</span><span class="sxs-lookup"><span data-stu-id="d08f4-554">For a specific arity count, the parameter positions and types can vary.</span></span> <span data-ttu-id="d08f4-555">Można pobrać typu pozycyjnych użycia rozszerzenia znaczników określonej liczby argumentów, należy najpierw wywołać <xref:System.Xaml.XamlType.GetPositionalParameters%2A> o liczbie argumentów.</span><span class="sxs-lookup"><span data-stu-id="d08f4-555">To get the positional type of a specific arity's markup extension usage, you first call <xref:System.Xaml.XamlType.GetPositionalParameters%2A> with the arity count.</span></span> <span data-ttu-id="d08f4-556">Następnie Pobierz elementu na tej pozycji z zwracana kolekcja.</span><span class="sxs-lookup"><span data-stu-id="d08f4-556">Then get the item at that position from the returned collection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupSetMarkupExtensionHandler">
      <MemberSignature Language="C#" Value="protected virtual EventHandler&lt;System.Windows.Markup.XamlSetMarkupExtensionEventArgs&gt; LookupSetMarkupExtensionHandler ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.EventHandler`1&lt;class System.Windows.Markup.XamlSetMarkupExtensionEventArgs&gt; LookupSetMarkupExtensionHandler() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupSetMarkupExtensionHandler" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupSetMarkupExtensionHandler () As EventHandler(Of XamlSetMarkupExtensionEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual EventHandler&lt;System::Windows::Markup::XamlSetMarkupExtensionEventArgs ^&gt; ^ LookupSetMarkupExtensionHandler();" />
      <MemberSignature Language="F#" Value="abstract member LookupSetMarkupExtensionHandler : unit -&gt; EventHandler&lt;System.Windows.Markup.XamlSetMarkupExtensionEventArgs&gt;&#xA;override this.LookupSetMarkupExtensionHandler : unit -&gt; EventHandler&lt;System.Windows.Markup.XamlSetMarkupExtensionEventArgs&gt;" Usage="xamlType.LookupSetMarkupExtensionHandler " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Markup.XamlSetMarkupExtensionEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="d08f4-557">Zwraca program obsługi wywołania zwrotnego na potrzeby operacji zestaw rozszerzeń znaczników.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d08f4-557">Returns a handler callback to use for the set operations of markup extensions.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d08f4-558">Wywołanie zwrotne obsługi do użycia dla operacji zestaw rozszerzeń znaczników.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d08f4-558">A handler callback to use for the set operations of markup extensions.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d08f4-559">Domyślna implementacja zwraca wartość opartą na odczyt <xref:System.Windows.Markup.XamlSetMarkupExtensionAttribute>.</span><span class="sxs-lookup"><span data-stu-id="d08f4-559">The default implementation returns a value based on reading <xref:System.Windows.Markup.XamlSetMarkupExtensionAttribute>.</span></span> <span data-ttu-id="d08f4-560">Można również sprawdzić <xref:System.Xaml.XamlType.BaseType%2A> dla atrybutu, jeśli nie jest odnaleźć atrybutu w typie podstawowym natychmiastowego.</span><span class="sxs-lookup"><span data-stu-id="d08f4-560">It can also check <xref:System.Xaml.XamlType.BaseType%2A> for the attribute if no attribute is found on the immediate underlying type.</span></span> <span data-ttu-id="d08f4-561">Jeśli wartość jest niedostępny, zwraca `null`.</span><span class="sxs-lookup"><span data-stu-id="d08f4-561">If a value is unavailable, it returns `null`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupSetTypeConverterHandler">
      <MemberSignature Language="C#" Value="protected virtual EventHandler&lt;System.Windows.Markup.XamlSetTypeConverterEventArgs&gt; LookupSetTypeConverterHandler ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.EventHandler`1&lt;class System.Windows.Markup.XamlSetTypeConverterEventArgs&gt; LookupSetTypeConverterHandler() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupSetTypeConverterHandler" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupSetTypeConverterHandler () As EventHandler(Of XamlSetTypeConverterEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual EventHandler&lt;System::Windows::Markup::XamlSetTypeConverterEventArgs ^&gt; ^ LookupSetTypeConverterHandler();" />
      <MemberSignature Language="F#" Value="abstract member LookupSetTypeConverterHandler : unit -&gt; EventHandler&lt;System.Windows.Markup.XamlSetTypeConverterEventArgs&gt;&#xA;override this.LookupSetTypeConverterHandler : unit -&gt; EventHandler&lt;System.Windows.Markup.XamlSetTypeConverterEventArgs&gt;" Usage="xamlType.LookupSetTypeConverterHandler " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Markup.XamlSetTypeConverterEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="d08f4-562">Zwraca program obsługi do użycia dla konwertera typu Ustawianie przypadki.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d08f4-562">Returns a handler to use for type converter setting cases.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d08f4-563">Program obsługi do użycia dla konwertera typu Ustawianie przypadki.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d08f4-563">A handler to use for type converter setting cases.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d08f4-564">Domyślna implementacja zwraca wartość opartą na odczyt <xref:System.Windows.Markup.XamlSetTypeConverterAttribute>.</span><span class="sxs-lookup"><span data-stu-id="d08f4-564">The default implementation returns a value based on reading <xref:System.Windows.Markup.XamlSetTypeConverterAttribute>.</span></span> <span data-ttu-id="d08f4-565">Można również sprawdzić <xref:System.Xaml.XamlType.BaseType%2A> dla atrybutu, jeśli nie jest odnaleźć atrybutu w typie podstawowym natychmiastowego.</span><span class="sxs-lookup"><span data-stu-id="d08f4-565">It can also check <xref:System.Xaml.XamlType.BaseType%2A> for the attribute if no attribute is found on the immediate underlying type.</span></span> <span data-ttu-id="d08f4-566">Jeśli wartość jest niedostępny, zwraca `null`.</span><span class="sxs-lookup"><span data-stu-id="d08f4-566">If a value is unavailable, it returns `null`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupTrimSurroundingWhitespace">
      <MemberSignature Language="C#" Value="protected virtual bool LookupTrimSurroundingWhitespace ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool LookupTrimSurroundingWhitespace() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupTrimSurroundingWhitespace" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupTrimSurroundingWhitespace () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool LookupTrimSurroundingWhitespace();" />
      <MemberSignature Language="F#" Value="abstract member LookupTrimSurroundingWhitespace : unit -&gt; bool&#xA;override this.LookupTrimSurroundingWhitespace : unit -&gt; bool" Usage="xamlType.LookupTrimSurroundingWhitespace " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="d08f4-567">Zwraca wartość wskazującą, czy to <see cref="T:System.Xaml.XamlType" /> powinny być serializowane w trybie przycina otaczającego odstępu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d08f4-567">Returns a value that indicates whether this <see cref="T:System.Xaml.XamlType" /> should be serialized using a mode that  trims surrounding whitespace.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d08f4-568">
            <see langword="true" /> Jeśli <see cref="T:System.Xaml.XamlType" /> powinny być serializowane w trybie przycina odstępu otaczającego je; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d08f4-568">
              <see langword="true" /> if this <see cref="T:System.Xaml.XamlType" /> should be serialized in a mode that trims surrounding whitespace; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d08f4-569">Ta metoda może być wywoływany przez wywołania <xref:System.Xaml.XamlType.TrimSurroundingWhitespace%2A>.</span><span class="sxs-lookup"><span data-stu-id="d08f4-569">This method can be invoked by calls to <xref:System.Xaml.XamlType.TrimSurroundingWhitespace%2A>.</span></span>  
  
 <span data-ttu-id="d08f4-570">Domyślna implementacja zwraca wartość opartą na odczyt <xref:System.Windows.Markup.TrimSurroundingWhitespaceAttribute>.</span><span class="sxs-lookup"><span data-stu-id="d08f4-570">The default implementation returns a value based on reading <xref:System.Windows.Markup.TrimSurroundingWhitespaceAttribute>.</span></span> <span data-ttu-id="d08f4-571">Można również sprawdzić <xref:System.Xaml.XamlType.BaseType%2A> dla atrybutu, jeśli nie jest odnaleźć atrybutu w typie podstawowym natychmiastowego.</span><span class="sxs-lookup"><span data-stu-id="d08f4-571">It can also check <xref:System.Xaml.XamlType.BaseType%2A> for the attribute if no attribute is found on the immediate underlying type.</span></span> <span data-ttu-id="d08f4-572">Jeśli wartość jest niedostępny, zwraca `false`.</span><span class="sxs-lookup"><span data-stu-id="d08f4-572">If a value is unavailable, it returns `false`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupTypeConverter">
      <MemberSignature Language="C#" Value="protected virtual System.Xaml.Schema.XamlValueConverter&lt;System.ComponentModel.TypeConverter&gt; LookupTypeConverter ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Xaml.Schema.XamlValueConverter`1&lt;class System.ComponentModel.TypeConverter&gt; LookupTypeConverter() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupTypeConverter" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupTypeConverter () As XamlValueConverter(Of TypeConverter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Xaml::Schema::XamlValueConverter&lt;System::ComponentModel::TypeConverter ^&gt; ^ LookupTypeConverter();" />
      <MemberSignature Language="F#" Value="abstract member LookupTypeConverter : unit -&gt; System.Xaml.Schema.XamlValueConverter&lt;System.ComponentModel.TypeConverter&gt;&#xA;override this.LookupTypeConverter : unit -&gt; System.Xaml.Schema.XamlValueConverter&lt;System.ComponentModel.TypeConverter&gt;" Usage="xamlType.LookupTypeConverter " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.Schema.XamlValueConverter&lt;System.ComponentModel.TypeConverter&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="d08f4-573">Zwraca <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> mający <see cref="T:System.ComponentModel.TypeConverter" /> ograniczenia, która reprezentuje zachowanie konwersji typu wartości tego <see cref="T:System.Xaml.XamlType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d08f4-573">Returns a <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> that has a <see cref="T:System.ComponentModel.TypeConverter" /> constraint, which represents type-conversion behavior for values of this <see cref="T:System.Xaml.XamlType" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d08f4-574">A <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> z <see cref="T:System.ComponentModel.TypeConverter" /> ograniczenia, która reprezentuje zachowanie konwersji typu wartości tego <see cref="T:System.Xaml.XamlType" />; w przeciwnym razie <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d08f4-574">A <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> with <see cref="T:System.ComponentModel.TypeConverter" /> constraint that represents type-conversion behavior for values of this <see cref="T:System.Xaml.XamlType" />; otherwise, <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d08f4-575">Ta metoda może być wywoływany przez wywołania <xref:System.Xaml.XamlType.TypeConverter%2A>.</span><span class="sxs-lookup"><span data-stu-id="d08f4-575">This method can be invoked by calls to <xref:System.Xaml.XamlType.TypeConverter%2A>.</span></span>  
  
 <span data-ttu-id="d08f4-576">Domyślna implementacja zwraca wartość opartą na odczyt <xref:System.ComponentModel.TypeConverterAttribute>.</span><span class="sxs-lookup"><span data-stu-id="d08f4-576">The default implementation returns a value based on reading <xref:System.ComponentModel.TypeConverterAttribute>.</span></span> <span data-ttu-id="d08f4-577">Domyślna implementacja można również sprawdzić <xref:System.Xaml.XamlType.BaseType%2A> dla atrybutu, jeśli nie jest odnaleźć atrybutu w typie podstawowym natychmiastowego.</span><span class="sxs-lookup"><span data-stu-id="d08f4-577">The default implementation can also check <xref:System.Xaml.XamlType.BaseType%2A> for the attribute if no attribute is found on the immediate underlying type.</span></span> <span data-ttu-id="d08f4-578">Obejmuje on też specjalną logikę przetwarzania domyślne wyliczenia, Popularne typy wartości i typy ogólne.</span><span class="sxs-lookup"><span data-stu-id="d08f4-578">It also includes special logic for default conversion of enumerations, common value types, and generics.</span></span> <span data-ttu-id="d08f4-579">Jeśli wartość jest niedostępny, zwraca `null`.</span><span class="sxs-lookup"><span data-stu-id="d08f4-579">If a value is unavailable, it returns `null`.</span></span>  
  
 <span data-ttu-id="d08f4-580">Przesłonić tę metodę, jeśli chcesz <xref:System.Xaml.XamlType.TypeConverter%2A> do używania różnych logiki.</span><span class="sxs-lookup"><span data-stu-id="d08f4-580">Override this method if you want <xref:System.Xaml.XamlType.TypeConverter%2A> to use different logic.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupUnderlyingType">
      <MemberSignature Language="C#" Value="protected virtual Type LookupUnderlyingType ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Type LookupUnderlyingType() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupUnderlyingType" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupUnderlyingType () As Type" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual Type ^ LookupUnderlyingType();" />
      <MemberSignature Language="F#" Value="abstract member LookupUnderlyingType : unit -&gt; Type&#xA;override this.LookupUnderlyingType : unit -&gt; Type" Usage="xamlType.LookupUnderlyingType " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="d08f4-581">Zwraca CLR <see cref="T:System.Type" /> który źródłową to <see cref="T:System.Xaml.XamlType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d08f4-581">Returns the CLR <see cref="T:System.Type" /> that underlies this <see cref="T:System.Xaml.XamlType" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d08f4-582">Środowisko CLR <see cref="T:System.Type" /> który źródłową to <see cref="T:System.Xaml.XamlType" />; w przeciwnym razie <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d08f4-582">The CLR <see cref="T:System.Type" /> that underlies this <see cref="T:System.Xaml.XamlType" />; otherwise, <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d08f4-583">Ta metoda może być wywoływany przez wywołania <xref:System.Xaml.XamlType.UnderlyingType%2A>.</span><span class="sxs-lookup"><span data-stu-id="d08f4-583">This method can be invoked by calls to <xref:System.Xaml.XamlType.UnderlyingType%2A>.</span></span>  
  
 <span data-ttu-id="d08f4-584">Domyślna implementacja zwraca pola wewnętrznego.</span><span class="sxs-lookup"><span data-stu-id="d08f4-584">The default implementation returns an internal field.</span></span> <span data-ttu-id="d08f4-585">To pole jest zazwyczaj zainicjowany podczas konstruowania i jego wartość jest oparta na konstruktora, która została wywołana i podane informacje.</span><span class="sxs-lookup"><span data-stu-id="d08f4-585">That field is generally initialized during construction and its value is based on which constructor was called and the information that you provided.</span></span>  
  
 <span data-ttu-id="d08f4-586">Przesłonić tę metodę, jeśli chcesz <xref:System.Xaml.XamlType.UnderlyingType%2A> do używania różnych logiki.</span><span class="sxs-lookup"><span data-stu-id="d08f4-586">Override this method if you want <xref:System.Xaml.XamlType.UnderlyingType%2A> to use different logic.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupUsableDuringInitialization">
      <MemberSignature Language="C#" Value="protected virtual bool LookupUsableDuringInitialization ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool LookupUsableDuringInitialization() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupUsableDuringInitialization" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupUsableDuringInitialization () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool LookupUsableDuringInitialization();" />
      <MemberSignature Language="F#" Value="abstract member LookupUsableDuringInitialization : unit -&gt; bool&#xA;override this.LookupUsableDuringInitialization : unit -&gt; bool" Usage="xamlType.LookupUsableDuringInitialization " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="d08f4-587">Zwraca wartość wskazującą, czy to <see cref="T:System.Xaml.XamlType" /> jest wbudowana góra dół podczas inicjowania XAML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d08f4-587">Returns a value that indicates whether this <see cref="T:System.Xaml.XamlType" /> is built top-down during XAML initialization.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d08f4-588">
            <see langword="true" /> Jeśli <see cref="T:System.Xaml.XamlType" /> jest wbudowana góra dół podczas inicjowania XAML; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d08f4-588">
              <see langword="true" /> if this <see cref="T:System.Xaml.XamlType" /> is built top-down during XAML initialization; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d08f4-589">Góra dół jest metaphor, zbliżony zachowanie procesora XAML podczas tworzenia wykresu obiektu.</span><span class="sxs-lookup"><span data-stu-id="d08f4-589">Top-down is a metaphor that approximates XAML processor behavior when it creates the object graph.</span></span> <span data-ttu-id="d08f4-590">Podczas tworzenia góry do dołu, wystąpienia typu dołączony do obiektu nadrzędnego, i ma ustawiony jego właściwości.</span><span class="sxs-lookup"><span data-stu-id="d08f4-590">When built top-down, a type is instantiated, attached to the parent, and has its properties set.</span></span> <span data-ttu-id="d08f4-591">Góra dół konstrukcji pozwala uniknąć wywoływania obsługi zmienić właściwości wiele razy.</span><span class="sxs-lookup"><span data-stu-id="d08f4-591">Top-down construction avoids invoking property-changed handlers multiple times.</span></span> <span data-ttu-id="d08f4-592">Takie Obsługa fale się wykres obiektu i w związku z tym eliminuje wiele wywołań obsługi oraz zapewnia optymalizację wydajności podczas uruchamiania obiektu wykresu.</span><span class="sxs-lookup"><span data-stu-id="d08f4-592">Such handling ripples up the object graph and therefore, eliminates the multiple handler calls and provides a performance optimization for startup of the object graph.</span></span>  
  
 <span data-ttu-id="d08f4-593">Ta metoda może być wywoływany przez wywołania <xref:System.Xaml.XamlType.IsUsableDuringInitialization%2A>.</span><span class="sxs-lookup"><span data-stu-id="d08f4-593">This method can be invoked by calls to <xref:System.Xaml.XamlType.IsUsableDuringInitialization%2A>.</span></span>  
  
 <span data-ttu-id="d08f4-594">Domyślna implementacja zwraca wartość opartą na odczyt <xref:System.Windows.Markup.UsableDuringInitializationAttribute>.</span><span class="sxs-lookup"><span data-stu-id="d08f4-594">The default implementation returns a value based on reading <xref:System.Windows.Markup.UsableDuringInitializationAttribute>.</span></span> <span data-ttu-id="d08f4-595">Można również sprawdzić <xref:System.Xaml.XamlType.BaseType%2A> dla atrybutu, jeśli nie jest odnaleźć atrybutu w typie podstawowym natychmiastowego.</span><span class="sxs-lookup"><span data-stu-id="d08f4-595">It can also check <xref:System.Xaml.XamlType.BaseType%2A> for the attribute if no attribute is found on the immediate underlying type.</span></span> <span data-ttu-id="d08f4-596">Jeśli wartość jest niedostępny, zwraca `false`.</span><span class="sxs-lookup"><span data-stu-id="d08f4-596">If a value is unavailable, it returns `false`.</span></span>  
  
 <span data-ttu-id="d08f4-597">Przesłonić tę metodę, jeśli chcesz <xref:System.Xaml.XamlType.IsUsableDuringInitialization%2A> do używania różnych logiki.</span><span class="sxs-lookup"><span data-stu-id="d08f4-597">Override this method if you want <xref:System.Xaml.XamlType.IsUsableDuringInitialization%2A> to use different logic.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupValueSerializer">
      <MemberSignature Language="C#" Value="protected virtual System.Xaml.Schema.XamlValueConverter&lt;System.Windows.Markup.ValueSerializer&gt; LookupValueSerializer ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Xaml.Schema.XamlValueConverter`1&lt;class System.Windows.Markup.ValueSerializer&gt; LookupValueSerializer() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupValueSerializer" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupValueSerializer () As XamlValueConverter(Of ValueSerializer)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Xaml::Schema::XamlValueConverter&lt;System::Windows::Markup::ValueSerializer ^&gt; ^ LookupValueSerializer();" />
      <MemberSignature Language="F#" Value="abstract member LookupValueSerializer : unit -&gt; System.Xaml.Schema.XamlValueConverter&lt;System.Windows.Markup.ValueSerializer&gt;&#xA;override this.LookupValueSerializer : unit -&gt; System.Xaml.Schema.XamlValueConverter&lt;System.Windows.Markup.ValueSerializer&gt;" Usage="xamlType.LookupValueSerializer " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.Schema.XamlValueConverter&lt;System.Windows.Markup.ValueSerializer&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="d08f4-598">Zwraca <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> mający <see cref="T:System.Windows.Markup.ValueSerializer" /> ograniczenia, która reprezentuje zachowanie serializacji wartości dla wartości tego <see cref="T:System.Xaml.XamlType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d08f4-598">Returns a <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> that has a <see cref="T:System.Windows.Markup.ValueSerializer" /> constraint, which represents value serialization behavior for values of this <see cref="T:System.Xaml.XamlType" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d08f4-599">A <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> z <see cref="T:System.Windows.Markup.ValueSerializer" /> ograniczenie, które reprezentuje wartość zachowanie serializacji dla wartości to <see cref="T:System.Xaml.XamlType" />; w przeciwnym razie <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d08f4-599">A <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> with <see cref="T:System.Windows.Markup.ValueSerializer" /> constraint that represents value serialization behavior for values of this <see cref="T:System.Xaml.XamlType" />; otherwise, <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d08f4-600">Ta metoda może być wywoływany przez wywołania <xref:System.Xaml.XamlType.ValueSerializer%2A>.</span><span class="sxs-lookup"><span data-stu-id="d08f4-600">This method can be invoked by calls to <xref:System.Xaml.XamlType.ValueSerializer%2A>.</span></span>  
  
 <span data-ttu-id="d08f4-601">Domyślna implementacja zwraca wartość opartą na odczyt <xref:System.Windows.Markup.ValueSerializerAttribute>.</span><span class="sxs-lookup"><span data-stu-id="d08f4-601">The default implementation returns a value based on reading <xref:System.Windows.Markup.ValueSerializerAttribute>.</span></span> <span data-ttu-id="d08f4-602">Można również sprawdzić <xref:System.Xaml.XamlType.BaseType%2A> dla atrybutu, jeśli nie jest odnaleźć atrybutu w typie podstawowym natychmiastowego.</span><span class="sxs-lookup"><span data-stu-id="d08f4-602">It can also check <xref:System.Xaml.XamlType.BaseType%2A> for the attribute if no attribute is found on the immediate underlying type.</span></span> <span data-ttu-id="d08f4-603">Obejmuje on też specjalne logikę domyślnej serializacji wyliczenia, wspólnych typów wartości lub typów ogólnych.</span><span class="sxs-lookup"><span data-stu-id="d08f4-603">It also includes special logic for default serialization of enumerations, common value types, or generics.</span></span> <span data-ttu-id="d08f4-604">Jeśli wartość jest niedostępny, zwraca `null`.</span><span class="sxs-lookup"><span data-stu-id="d08f4-604">If a value is unavailable, it returns `null`.</span></span>  
  
 <span data-ttu-id="d08f4-605">Przesłonić tę metodę, jeśli chcesz <xref:System.Xaml.XamlType.ValueSerializer%2A> do używania różnych logiki.</span><span class="sxs-lookup"><span data-stu-id="d08f4-605">Override this method if you want <xref:System.Xaml.XamlType.ValueSerializer%2A> to use different logic.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MarkupExtensionReturnType">
      <MemberSignature Language="C#" Value="public System.Xaml.XamlType MarkupExtensionReturnType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xaml.XamlType MarkupExtensionReturnType" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.MarkupExtensionReturnType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MarkupExtensionReturnType As XamlType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xaml::XamlType ^ MarkupExtensionReturnType { System::Xaml::XamlType ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.MarkupExtensionReturnType : System.Xaml.XamlType" Usage="System.Xaml.XamlType.MarkupExtensionReturnType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d08f4-606">Pobiera wartość, która zawiera informacje o typie dla zwróconego <see langword="ProvideValue" /> tego <see cref="T:System.Xaml.XamlType" />, jeśli stanowi rozszerzenie znaczników.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d08f4-606">Gets a value that provides the type information for the returned <see langword="ProvideValue" /> of this <see cref="T:System.Xaml.XamlType" />, if it represents a markup extension.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d08f4-607">A <see cref="T:System.Xaml.XamlType" /> obiektu dla typu zwracanych danych użycia rozszerzenia znaczników; w przeciwnym razie <see langword="null" />, jeśli to <see cref="T:System.Xaml.XamlType" /> nie reprezentuje rozszerzenie znaczników.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d08f4-607">A <see cref="T:System.Xaml.XamlType" /> object for the return type for markup extension usage; otherwise, <see langword="null" />, if this <see cref="T:System.Xaml.XamlType" /> does not represent a markup extension.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d08f4-608">Ta właściwość dotyczy tylko jeśli <xref:System.Xaml.XamlType> reprezentuje rozszerzenie znaczników (`x:MarkupExtension` znajduje się na liście można przypisać typów).</span><span class="sxs-lookup"><span data-stu-id="d08f4-608">This property is only relevant if this <xref:System.Xaml.XamlType> represents a markup extension (`x:MarkupExtension` is in the assignable types list).</span></span>  
  
 <span data-ttu-id="d08f4-609">Jeśli nie używasz domyślne wewnętrzny CLR odbicia technika <xref:System.Xaml.XamlType>, wywołania do tej właściwości może wywołać <xref:System.Xaml.XamlType.LookupMarkupExtensionReturnType%2A> zastępuje na <xref:System.Xaml.XamlType> klas pochodnych.</span><span class="sxs-lookup"><span data-stu-id="d08f4-609">If you do not use the default internal CLR reflection technique for a <xref:System.Xaml.XamlType>, calls to this property can invoke <xref:System.Xaml.XamlType.LookupMarkupExtensionReturnType%2A> overrides on <xref:System.Xaml.XamlType> derived classes.</span></span> <span data-ttu-id="d08f4-610">Aby uzyskać więcej informacji na temat zwracanych wartości i inne zachowanie, zobacz dokumentację <xref:System.Xaml.XamlType.LookupMarkupExtensionReturnType%2A> dla tego typu.</span><span class="sxs-lookup"><span data-stu-id="d08f4-610">For more information about return values and other behavior, see the documentation for <xref:System.Xaml.XamlType.LookupMarkupExtensionReturnType%2A> on this type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.Name" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="System.Xaml.XamlType.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d08f4-611">Pobiera nazwę ciągu typu, który to <see cref="T:System.Xaml.XamlType" /> reprezentuje.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d08f4-611">Gets the string name of the type that this <see cref="T:System.Xaml.XamlType" /> represents.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d08f4-612">Nazwa ciągu tego typu XAML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d08f4-612">The string name of this XAML type.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d08f4-613">Ta właściwość zazwyczaj pobiera nazwę skonstruowany schematu (na <xref:System.Xaml.XamlType.%23ctor%2A> podpis), lub nazwę <xref:System.Type>, jeśli jest tworzony przy użyciu odpowiednich konstruktora system typów CLR.</span><span class="sxs-lookup"><span data-stu-id="d08f4-613">This property typically gets the schema-constructed name (per the <xref:System.Xaml.XamlType.%23ctor%2A> signature), or the name of the <xref:System.Type>, if it is constructed by using the pertinent constructor of the CLR type system.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (System.Xaml.XamlType xamlType1, System.Xaml.XamlType xamlType2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(class System.Xaml.XamlType xamlType1, class System.Xaml.XamlType xamlType2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.op_Equality(System.Xaml.XamlType,System.Xaml.XamlType)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (xamlType1 As XamlType, xamlType2 As XamlType) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(System::Xaml::XamlType ^ xamlType1, System::Xaml::XamlType ^ xamlType2);" />
      <MemberSignature Language="F#" Value="static member ( = ) : System.Xaml.XamlType * System.Xaml.XamlType -&gt; bool" Usage="xamlType1 = xamlType2" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xamlType1" Type="System.Xaml.XamlType" />
        <Parameter Name="xamlType2" Type="System.Xaml.XamlType" />
      </Parameters>
      <Docs>
        <param name="xamlType1">
          <span data-ttu-id="d08f4-614">A <see cref="T:System.Xaml.XamlType" /> lub <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d08f4-614">A <see cref="T:System.Xaml.XamlType" /> or <see langword="null" />.</span>
          </span>
        </param>
        <param name="xamlType2">
          <span data-ttu-id="d08f4-615">A <see cref="T:System.Xaml.XamlType" /> lub <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d08f4-615">A <see cref="T:System.Xaml.XamlType" /> or <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d08f4-616">Określa, czy dwa określone <see cref="T:System.Xaml.XamlType" /> obiekty mają taką samą wartość.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d08f4-616">Determines whether two specified <see cref="T:System.Xaml.XamlType" /> objects have the same value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d08f4-617">
            <see langword="true" /> Jeśli wartość <paramref name="xamlType1" /> jest taka sama jak wartość <paramref name="xamlType2" />; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d08f4-617">
              <see langword="true" /> if the value of <paramref name="xamlType1" /> is the same as the value of <paramref name="xamlType2" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (System.Xaml.XamlType xamlType1, System.Xaml.XamlType xamlType2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(class System.Xaml.XamlType xamlType1, class System.Xaml.XamlType xamlType2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.op_Inequality(System.Xaml.XamlType,System.Xaml.XamlType)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (xamlType1 As XamlType, xamlType2 As XamlType) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(System::Xaml::XamlType ^ xamlType1, System::Xaml::XamlType ^ xamlType2);" />
      <MemberSignature Language="F#" Value="static member op_Inequality : System.Xaml.XamlType * System.Xaml.XamlType -&gt; bool" Usage="System.Xaml.XamlType.op_Inequality (xamlType1, xamlType2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xamlType1" Type="System.Xaml.XamlType" />
        <Parameter Name="xamlType2" Type="System.Xaml.XamlType" />
      </Parameters>
      <Docs>
        <param name="xamlType1">
          <span data-ttu-id="d08f4-618">A <see cref="T:System.Xaml.XamlType" /> lub <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d08f4-618">A <see cref="T:System.Xaml.XamlType" /> or <see langword="null" />.</span>
          </span>
        </param>
        <param name="xamlType2">
          <span data-ttu-id="d08f4-619">A <see cref="T:System.Xaml.XamlType" /> lub <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d08f4-619">A <see cref="T:System.Xaml.XamlType" /> or <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d08f4-620">Określa, czy dwa określone <see cref="T:System.Xaml.XamlType" /> obiekty mają różne wartości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d08f4-620">Determines whether two specified <see cref="T:System.Xaml.XamlType" /> objects have different values.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d08f4-621">
            <see langword="true" /> Jeśli wartość <paramref name="xamlType1" /> różni się od wartości <paramref name="xamlType2" />; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d08f4-621">
              <see langword="true" /> if the value of <paramref name="xamlType1" /> is different from the value of <paramref name="xamlType2" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PreferredXamlNamespace">
      <MemberSignature Language="C#" Value="public string PreferredXamlNamespace { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PreferredXamlNamespace" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.PreferredXamlNamespace" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PreferredXamlNamespace As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ PreferredXamlNamespace { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PreferredXamlNamespace : string" Usage="System.Xaml.XamlType.PreferredXamlNamespace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d08f4-622">Pobiera jednej przestrzeni nazw XAML, która jest głównej przestrzeni nazw XAML dla tego <see cref="T:System.Xaml.XamlType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d08f4-622">Gets the single XAML namespace that is the primary XAML namespace for this <see cref="T:System.Xaml.XamlType" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d08f4-623">Identyfikator jako ciąg głównej przestrzeni nazw XAML dla tego typu XAML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d08f4-623">The identifier, as a string, of the primary XAML namespace for this XAML type.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d08f4-624">Ta implementacja udostępnia taką samą wartość jak wywołanie <xref:System.Xaml.XamlType.GetXamlNamespaces%2A> i następnie pobieranie pierwszy ciąg wartości z zwrócony wyliczalny zestaw.</span><span class="sxs-lookup"><span data-stu-id="d08f4-624">This implementation provides the same value as calling <xref:System.Xaml.XamlType.GetXamlNamespaces%2A> and then getting the first value string from the returned enumerable set.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SchemaContext">
      <MemberSignature Language="C#" Value="public System.Xaml.XamlSchemaContext SchemaContext { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xaml.XamlSchemaContext SchemaContext" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.SchemaContext" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SchemaContext As XamlSchemaContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xaml::XamlSchemaContext ^ SchemaContext { System::Xaml::XamlSchemaContext ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SchemaContext : System.Xaml.XamlSchemaContext" Usage="System.Xaml.XamlType.SchemaContext" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlSchemaContext</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d08f4-625">Pobiera aktywny <see cref="T:System.Xaml.XamlSchemaContext" /> przetwarzania to <see cref="T:System.Xaml.XamlType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d08f4-625">Gets the active <see cref="T:System.Xaml.XamlSchemaContext" /> for processing this <see cref="T:System.Xaml.XamlType" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d08f4-626">Aktywne <see cref="T:System.Xaml.XamlSchemaContext" /> przetwarzania to <see cref="T:System.Xaml.XamlType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d08f4-626">The active <see cref="T:System.Xaml.XamlSchemaContext" /> for processing this <see cref="T:System.Xaml.XamlType" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d08f4-627"><xref:System.Xaml.XamlSchemaContext> jest wpisem wymaganego parametru podczas tworzenia <xref:System.Xaml.XamlType>.</span><span class="sxs-lookup"><span data-stu-id="d08f4-627"><xref:System.Xaml.XamlSchemaContext> is a required parameter entry when constructing a <xref:System.Xaml.XamlType>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="xamlType.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="d08f4-628">Zwraca reprezentację ciągu tego <see cref="T:System.Xaml.XamlType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d08f4-628">Returns a string representation of this <see cref="T:System.Xaml.XamlType" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d08f4-629">Reprezentacja ciągu tego <see cref="T:System.Xaml.XamlType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d08f4-629">A string representation of this <see cref="T:System.Xaml.XamlType" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d08f4-630"><xref:System.Xaml.XamlType> Implementacja <xref:System.Object.ToString%2A> zwraca <xref:System.Xaml.XamlType.Name%2A> właściwość <xref:System.Xaml.XamlType>.</span><span class="sxs-lookup"><span data-stu-id="d08f4-630">The <xref:System.Xaml.XamlType> implementation of <xref:System.Object.ToString%2A> returns the <xref:System.Xaml.XamlType.Name%2A> property of the <xref:System.Xaml.XamlType>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TrimSurroundingWhitespace">
      <MemberSignature Language="C#" Value="public bool TrimSurroundingWhitespace { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool TrimSurroundingWhitespace" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.TrimSurroundingWhitespace" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TrimSurroundingWhitespace As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool TrimSurroundingWhitespace { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.TrimSurroundingWhitespace : bool" Usage="System.Xaml.XamlType.TrimSurroundingWhitespace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d08f4-631">Pobiera wartość wskazującą, czy to <see cref="T:System.Xaml.XamlType" /> ma odstępu obsługi zachowania w przypadku serializacji, który przycina otaczającego odstęp w jego zawartości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d08f4-631">Gets a value that indicates whether this <see cref="T:System.Xaml.XamlType" /> has whitespace handling behavior for serialization that trims the surrounding whitespace in its content.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d08f4-632">
            <see langword="true" /> Jeśli <see cref="T:System.Xaml.XamlType" /> reprezentuje typ, który korzysta z odstępem przycinanie; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d08f4-632">
              <see langword="true" /> if this <see cref="T:System.Xaml.XamlType" /> represents a type that uses whitespace trimming; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d08f4-633">Jeśli nie używasz domyślne wewnętrzny CLR odbicia technika <xref:System.Xaml.XamlType>, wywołania do tej właściwości może wywołać <xref:System.Xaml.XamlType.LookupIsWhitespaceSignificantCollection%2A> zastępuje na <xref:System.Xaml.XamlType> klas pochodnych.</span><span class="sxs-lookup"><span data-stu-id="d08f4-633">If you do not use the default internal CLR reflection technique for a <xref:System.Xaml.XamlType>, calls to this property can invoke <xref:System.Xaml.XamlType.LookupIsWhitespaceSignificantCollection%2A> overrides on <xref:System.Xaml.XamlType> derived classes.</span></span> <span data-ttu-id="d08f4-634">Aby uzyskać więcej informacji na temat zwracanych wartości i inne zachowanie, zobacz dokumentację <xref:System.Xaml.XamlType.LookupIsWhitespaceSignificantCollection%2A> dla tego typu.</span><span class="sxs-lookup"><span data-stu-id="d08f4-634">For more information about return values and other behavior, see the documentation for <xref:System.Xaml.XamlType.LookupIsWhitespaceSignificantCollection%2A> on this type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TypeArguments">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt; TypeArguments { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;class System.Xaml.XamlType&gt; TypeArguments" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.TypeArguments" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TypeArguments As IList(Of XamlType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IList&lt;System::Xaml::XamlType ^&gt; ^ TypeArguments { System::Collections::Generic::IList&lt;System::Xaml::XamlType ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TypeArguments : System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt;" Usage="System.Xaml.XamlType.TypeArguments" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d08f4-635">Pobiera listę argumentów typu dla przypadków, gdy to <see cref="T:System.Xaml.XamlType" /> reprezentuje ogólnego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d08f4-635">Gets a list of type arguments for cases where this <see cref="T:System.Xaml.XamlType" /> represents a generic.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d08f4-636">Lista typów argumentów typu. w przeciwnym razie <see langword="null" />, jeśli to <see cref="T:System.Xaml.XamlType" /> nie reprezentuje ogólnego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d08f4-636">A list of type argument types; otherwise, <see langword="null" />, if this <see cref="T:System.Xaml.XamlType" /> does not represent a generic.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d08f4-637">Istnieją pewne scenariusze <xref:System.Xaml.XamlType> w przypadku, gdy wywołanie <xref:System.Xaml.XamlType.TypeArguments%2A> parametru zwraca listę, których typy są nadal otwarte.</span><span class="sxs-lookup"><span data-stu-id="d08f4-637">There are certain scenarios for a <xref:System.Xaml.XamlType> where calling the <xref:System.Xaml.XamlType.TypeArguments%2A> parameter returns a list where the types are still open.</span></span> <span data-ttu-id="d08f4-638">W tym przypadku co najmniej więcej zwracana <xref:System.Xaml.XamlType> wartości będą miały wartości symbolu zastępczego dla <xref:System.Xaml.XamlType.Name%2A?displayProperty=nameWithType>, takich jak `T`, do reprezentowania, że ogólnego jest wciąż otwarty.</span><span class="sxs-lookup"><span data-stu-id="d08f4-638">In this case, one or more of the returned <xref:System.Xaml.XamlType> values will have placeholder values for <xref:System.Xaml.XamlType.Name%2A?displayProperty=nameWithType>, such as `T`, to represent that the generic is still open.</span></span> <span data-ttu-id="d08f4-639">Ten scenariusz może wystąpić, jeśli <xref:System.Xaml.XamlType> po wywołaniu <xref:System.Xaml.XamlSchemaContext.GetXamlType%2A>, a nie z implementacją czytnika XAML.</span><span class="sxs-lookup"><span data-stu-id="d08f4-639">This scenario can occur if you get a <xref:System.Xaml.XamlType> from a call to <xref:System.Xaml.XamlSchemaContext.GetXamlType%2A>, instead of from a XAML reader implementation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TypeConverter">
      <MemberSignature Language="C#" Value="public System.Xaml.Schema.XamlValueConverter&lt;System.ComponentModel.TypeConverter&gt; TypeConverter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xaml.Schema.XamlValueConverter`1&lt;class System.ComponentModel.TypeConverter&gt; TypeConverter" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.TypeConverter" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TypeConverter As XamlValueConverter(Of TypeConverter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xaml::Schema::XamlValueConverter&lt;System::ComponentModel::TypeConverter ^&gt; ^ TypeConverter { System::Xaml::Schema::XamlValueConverter&lt;System::ComponentModel::TypeConverter ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TypeConverter : System.Xaml.Schema.XamlValueConverter&lt;System.ComponentModel.TypeConverter&gt;" Usage="System.Xaml.XamlType.TypeConverter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.Schema.XamlValueConverter&lt;System.ComponentModel.TypeConverter&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d08f4-640">Pobiera <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> z <see cref="T:System.ComponentModel.TypeConverter" /> ograniczenie, aby reprezentuje typ zachowanie konwersji wartości to <see cref="T:System.Xaml.XamlType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d08f4-640">Gets a <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> with <see cref="T:System.ComponentModel.TypeConverter" /> constraint that represents type conversion behavior for values of this <see cref="T:System.Xaml.XamlType" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d08f4-641">A <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> z <see cref="T:System.ComponentModel.TypeConverter" /> ograniczenie, aby reprezentuje typ zachowanie konwersji wartości to <see cref="T:System.Xaml.XamlType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d08f4-641">A <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> with <see cref="T:System.ComponentModel.TypeConverter" /> constraint that represents type conversion behavior for values of this <see cref="T:System.Xaml.XamlType" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d08f4-642">Jeśli nie używasz domyślne wewnętrzny CLR odbicia technika <xref:System.Xaml.XamlType>, wywołania do tej właściwości może wywołać <xref:System.Xaml.XamlType.LookupTypeConverter%2A> zastępuje na <xref:System.Xaml.XamlType> klas pochodnych.</span><span class="sxs-lookup"><span data-stu-id="d08f4-642">If you do not use the default internal CLR reflection technique for a <xref:System.Xaml.XamlType>, calls to this property can invoke <xref:System.Xaml.XamlType.LookupTypeConverter%2A> overrides on <xref:System.Xaml.XamlType> derived classes.</span></span> <span data-ttu-id="d08f4-643">Aby uzyskać więcej informacji na temat zwracanych wartości i inne zachowanie, zobacz dokumentację <xref:System.Xaml.XamlType.LookupTypeConverter%2A> dla tego typu.</span><span class="sxs-lookup"><span data-stu-id="d08f4-643">For more information about return values and other behavior, see the documentation for <xref:System.Xaml.XamlType.LookupTypeConverter%2A> on this type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UnderlyingType">
      <MemberSignature Language="C#" Value="public Type UnderlyingType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type UnderlyingType" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.UnderlyingType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UnderlyingType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ UnderlyingType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.UnderlyingType : Type" Usage="System.Xaml.XamlType.UnderlyingType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d08f4-644">Pobiera środowisko CLR <see cref="T:System.Type" /> który źródłową to <see cref="T:System.Xaml.XamlType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d08f4-644">Gets the CLR <see cref="T:System.Type" /> that underlies this <see cref="T:System.Xaml.XamlType" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d08f4-645">Środowisko CLR <see cref="T:System.Type" /> który źródłową to <see cref="T:System.Xaml.XamlType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d08f4-645">The CLR <see cref="T:System.Type" /> that underlies this <see cref="T:System.Xaml.XamlType" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ValueSerializer">
      <MemberSignature Language="C#" Value="public System.Xaml.Schema.XamlValueConverter&lt;System.Windows.Markup.ValueSerializer&gt; ValueSerializer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xaml.Schema.XamlValueConverter`1&lt;class System.Windows.Markup.ValueSerializer&gt; ValueSerializer" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.ValueSerializer" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ValueSerializer As XamlValueConverter(Of ValueSerializer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xaml::Schema::XamlValueConverter&lt;System::Windows::Markup::ValueSerializer ^&gt; ^ ValueSerializer { System::Xaml::Schema::XamlValueConverter&lt;System::Windows::Markup::ValueSerializer ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ValueSerializer : System.Xaml.Schema.XamlValueConverter&lt;System.Windows.Markup.ValueSerializer&gt;" Usage="System.Xaml.XamlType.ValueSerializer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.Schema.XamlValueConverter&lt;System.Windows.Markup.ValueSerializer&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d08f4-646">Pobiera <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> z <see cref="T:System.Windows.Markup.ValueSerializer" /> ograniczenie, które reprezentuje wartość zachowanie serializacji dla wartości to <see cref="T:System.Xaml.XamlType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d08f4-646">Gets a <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> with <see cref="T:System.Windows.Markup.ValueSerializer" /> constraint that represents value serialization behavior for values of this <see cref="T:System.Xaml.XamlType" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d08f4-647">A <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> z <see cref="T:System.Windows.Markup.ValueSerializer" /> ograniczenie, które reprezentuje wartość zachowanie serializacji dla wartości to <see cref="T:System.Xaml.XamlType" />; w przeciwnym razie <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d08f4-647">A <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> with <see cref="T:System.Windows.Markup.ValueSerializer" /> constraint that represents value serialization behavior for values of this <see cref="T:System.Xaml.XamlType" />; otherwise, <see langword="null" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d08f4-648">Jeśli nie używasz domyślne wewnętrzny CLR odbicia technika <xref:System.Xaml.XamlType>, wywołania do tej właściwości może wywołać <xref:System.Xaml.XamlType.LookupValueSerializer%2A> zastępuje na <xref:System.Xaml.XamlType> klas pochodnych.</span><span class="sxs-lookup"><span data-stu-id="d08f4-648">If you do not use the default internal CLR reflection technique for a <xref:System.Xaml.XamlType>, calls to this property can invoke <xref:System.Xaml.XamlType.LookupValueSerializer%2A> overrides on <xref:System.Xaml.XamlType> derived classes.</span></span> <span data-ttu-id="d08f4-649">Aby uzyskać więcej informacji na temat zwracanych wartości i inne zachowanie, zobacz dokumentację <xref:System.Xaml.XamlType.LookupValueSerializer%2A> dla tego typu.</span><span class="sxs-lookup"><span data-stu-id="d08f4-649">For more information about return values and other behavior, see the documentation for <xref:System.Xaml.XamlType.LookupValueSerializer%2A> on this type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>