<Type Name="XamlSchemaContext" FullName="System.Xaml.XamlSchemaContext">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="ca57d453aac5cc8999eec238f44546bc66c4ec03" />
    <Meta Name="ms.sourcegitcommit" Value="d877ae76e9e11799bf919379507239e2c4072742" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="08/09/2018" />
    <Meta Name="ms.locfileid" Value="39845178" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class XamlSchemaContext" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XamlSchemaContext extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Xaml.XamlSchemaContext" />
  <TypeSignature Language="VB.NET" Value="Public Class XamlSchemaContext" />
  <TypeSignature Language="C++ CLI" Value="public ref class XamlSchemaContext" />
  <TypeSignature Language="F#" Value="type XamlSchemaContext = class" />
  <AssemblyInfo>
    <AssemblyName>System.Xaml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="d3659-101">Definiuje kontekst wielokrotnego użytku dla interpretacji lub mapowania typów XAML i typów w zestawach, które opierają się je.</span>
      <span class="sxs-lookup">
        <span data-stu-id="d3659-101">Defines a reusable context for interpreting or mapping XAML types, and the types in the assemblies that underlie them.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d3659-102">Kontekst schematu XAML zapewnia warstwę abstrakcji między schematu lub słownika dla XAML i implementacji określonego analizatora.</span><span class="sxs-lookup"><span data-stu-id="d3659-102">A XAML schema context provides a layer of abstraction between a schema or vocabulary for XAML, and a specific parser implementation.</span></span> <span data-ttu-id="d3659-103">Wstawiając koncepcji kontekst schematu, schemat może być używany z różnych parsery XAML i kontekst schematu wypełnia szczegółowe informacje, które są potrzebne do interakcji z określonego analizatora XAML.</span><span class="sxs-lookup"><span data-stu-id="d3659-103">By inserting the concept of a schema context, the schema can be used with different XAML parsers, and the schema context fills in the details that are needed to interact with a specific XAML parser.</span></span> <span data-ttu-id="d3659-104">Na przykład kontekst schematu XAML zawiera zapytanie interfejsów API, które odnoszą się do koncepcji XAML lub do powiązania CLR w systemie typu XAML.</span><span class="sxs-lookup"><span data-stu-id="d3659-104">For example, the XAML schema context provides query APIs that relate to XAML concepts or to the CLR binding to the XAML type system.</span></span> <span data-ttu-id="d3659-105">Kontekst schematu XAML jest również odpowiedzialna za listy zestawów załadowanych zestawów, definiujący, gdzie analizatora XAML szuka kopii typów.</span><span class="sxs-lookup"><span data-stu-id="d3659-105">The XAML schema context is also responsible for maintaining the assembly list of loaded assemblies, which defines where a XAML parser looks for backing types.</span></span>  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <span data-ttu-id="d3659-106">
        <para>W <see cref="T:System.AppDomain" />, <see cref="T:System.Xaml.XamlSchemaContext" /> mogą być współużytkowane w wielu wywołań, które obejmują zarówno pełne i wywoływania w częściowej relacji zaufania. Takiej sytuacji istnieje w struktur, takich jak WPF, które umożliwiają dostęp do częściowego zaufania XAML podczas ładowania dla części modelu aplikacji WPF. Wartość domyślna <see cref="T:System.Xaml.XamlSchemaContext" /> implementacja udostępnia zabezpieczenia, w tym scenariuszu przechowując jej właściwości i ustawienia niezmienne. Pochodne implementacji należy również rozważyć następujące ten model systemu niezmienność we właściwościach i ustawieniach kontekst schematu XAML.  <see cref="T:System.Xaml.XamlSchemaContext" /> Klasy bazowej jest zaprojektowana tak, że wyszukiwanie nie ma żadnych widocznych zewnętrznie efektów ubocznych. Typy, które są przywoływane przez <see cref="T:System.Xaml.XamlSchemaContext" /> klasy interfejsów API w podstawowym, takich jak <see cref="T:System.Xaml.XamlType" /> lub <see cref="T:System.Xaml.XamlMember" />, utworzyć również żadnych efektów ubocznych z wyszukiwania. Wszystkie dane, które jest potrzebne zapewnienie określenie schematu powinien być dostępny na konstrukcji i ustawienia <see cref="T:System.AppDomain" />. Zwróć uwagę, że żadne wyszukiwanie interfejsów API nie korzysta z usług jawnie przekazanego; swoje dane wejściowe, zależy od parametrów tylko wejściowych.  <see cref="T:System.Xaml.XamlSchemaContext" /> Klasy, podstawowej i <see cref="T:System.Xaml.XamlType" /> i <see cref="T:System.Xaml.XamlMember" /> są bezpieczne w podstawowej implementacji wszystkich wątków. W przypadku klasy wyprowadzonej z <see cref="T:System.Xaml.XamlSchemaContext" /> lub pochodzić klasy systemie typu XAML, takich jak <see cref="T:System.Xaml.XamlType" /> i <see cref="T:System.Xaml.XamlMember" /> , można wybrać, czy Twoich zajęciach, będzie ona działać jak bezpieczne dla wątków.</para>
      </span>
      <span class="sxs-lookup">
        <span data-stu-id="d3659-106">
          <para>In an <see cref="T:System.AppDomain" />, a <see cref="T:System.Xaml.XamlSchemaContext" /> can be shared between multiple callers, which include both full and partial trust callers. This situation exists in frameworks such as WPF, which provide partial-trust access to XAML loading for portions of the WPF application model. The default <see cref="T:System.Xaml.XamlSchemaContext" /> implementation provides safeguards in this scenario by keeping all its properties and settings immutable. Derived implementations should also consider following this model of immutability for properties and settings of a XAML schema context.  The <see cref="T:System.Xaml.XamlSchemaContext" /> base class is designed so that lookups have no externally observable side effects. The types that are referenced by <see cref="T:System.Xaml.XamlSchemaContext" /> APIs in the base class, such as <see cref="T:System.Xaml.XamlType" /> or <see cref="T:System.Xaml.XamlMember" />, also produce no side effects from lookups. All data that is needed to make a schema determination should be available from the construction and settings of the <see cref="T:System.AppDomain" />. Notice that no lookup APIs rely on explicitly passed-in services; their input relies on string input only.  The <see cref="T:System.Xaml.XamlSchemaContext" /> base class, and <see cref="T:System.Xaml.XamlType" /> and <see cref="T:System.Xaml.XamlMember" /> are all thread safe in their base implementations. If you derive from <see cref="T:System.Xaml.XamlSchemaContext" /> or derive XAML type system classes such as <see cref="T:System.Xaml.XamlType" /> and <see cref="T:System.Xaml.XamlMember" /> , you can choose whether your classes will behave as thread safe.</para>
        </span>
      </span>
    </block>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="d3659-107">Inicjuje nowe wystąpienie klasy <see cref="T:System.Xaml.XamlSchemaContext" /> klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3659-107">Initializes a new instance of the <see cref="T:System.Xaml.XamlSchemaContext" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlSchemaContext ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlSchemaContext.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlSchemaContext();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="d3659-108">Inicjuje nowe wystąpienie klasy <see cref="T:System.Xaml.XamlSchemaContext" /> klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3659-108">Initializes a new instance of the <see cref="T:System.Xaml.XamlSchemaContext" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlSchemaContext (System.Collections.Generic.IEnumerable&lt;System.Reflection.Assembly&gt; referenceAssemblies);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IEnumerable`1&lt;class System.Reflection.Assembly&gt; referenceAssemblies) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlSchemaContext.#ctor(System.Collections.Generic.IEnumerable{System.Reflection.Assembly})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (referenceAssemblies As IEnumerable(Of Assembly))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlSchemaContext(System::Collections::Generic::IEnumerable&lt;System::Reflection::Assembly ^&gt; ^ referenceAssemblies);" />
      <MemberSignature Language="F#" Value="new System.Xaml.XamlSchemaContext : seq&lt;System.Reflection.Assembly&gt; -&gt; System.Xaml.XamlSchemaContext" Usage="new System.Xaml.XamlSchemaContext referenceAssemblies" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="referenceAssemblies" Type="System.Collections.Generic.IEnumerable&lt;System.Reflection.Assembly&gt;" />
      </Parameters>
      <Docs>
        <param name="referenceAssemblies">
          <span data-ttu-id="d3659-109">Wyliczalny zestaw elementów informacji zestawu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3659-109">An enumerable set of assembly information items.</span>
          </span>
          <span data-ttu-id="d3659-110">Każdy element informacji zestaw jest określony przez <see cref="T:System.Reflection.Assembly" /> wartość.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3659-110">Each assembly information item is specified by an <see cref="T:System.Reflection.Assembly" /> value.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d3659-111">Inicjuje nowe wystąpienie klasy <see cref="T:System.Xaml.XamlSchemaContext" /> klasy, na podstawie zestawu zestawów odwołań.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3659-111">Initializes a new instance of the <see cref="T:System.Xaml.XamlSchemaContext" /> class, based on a set of reference assemblies.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlSchemaContext (System.Xaml.XamlSchemaContextSettings settings);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xaml.XamlSchemaContextSettings settings) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlSchemaContext.#ctor(System.Xaml.XamlSchemaContextSettings)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (settings As XamlSchemaContextSettings)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlSchemaContext(System::Xaml::XamlSchemaContextSettings ^ settings);" />
      <MemberSignature Language="F#" Value="new System.Xaml.XamlSchemaContext : System.Xaml.XamlSchemaContextSettings -&gt; System.Xaml.XamlSchemaContext" Usage="new System.Xaml.XamlSchemaContext settings" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="settings" Type="System.Xaml.XamlSchemaContextSettings" />
      </Parameters>
      <Docs>
        <param name="settings">
          <span data-ttu-id="d3659-112">Obiekt ustawień do użycia do konstruowania <see cref="T:System.Xaml.XamlSchemaContext" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3659-112">The settings object to use to construct the <see cref="T:System.Xaml.XamlSchemaContext" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d3659-113">Inicjuje nowe wystąpienie klasy <see cref="T:System.Xaml.XamlSchemaContext" /> klasy, w oparciu o obiekt ustawień.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3659-113">Initializes a new instance of the <see cref="T:System.Xaml.XamlSchemaContext" /> class, based on a settings object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d3659-114">Obiekt ustawień przechowuje informacje dotyczące konwerter tekstu i charakterystyki rozszerzenia znaczników dla kontekst schematu.</span><span class="sxs-lookup"><span data-stu-id="d3659-114">The settings object stores information about text converter and markup extension specifics for the schema context.</span></span> <span data-ttu-id="d3659-115">Aby uzyskać więcej informacji, zobacz <xref:System.Xaml.XamlSchemaContextSettings>.</span><span class="sxs-lookup"><span data-stu-id="d3659-115">For more information, see <xref:System.Xaml.XamlSchemaContextSettings>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlSchemaContext (System.Collections.Generic.IEnumerable&lt;System.Reflection.Assembly&gt; referenceAssemblies, System.Xaml.XamlSchemaContextSettings settings);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IEnumerable`1&lt;class System.Reflection.Assembly&gt; referenceAssemblies, class System.Xaml.XamlSchemaContextSettings settings) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlSchemaContext.#ctor(System.Collections.Generic.IEnumerable{System.Reflection.Assembly},System.Xaml.XamlSchemaContextSettings)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (referenceAssemblies As IEnumerable(Of Assembly), settings As XamlSchemaContextSettings)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlSchemaContext(System::Collections::Generic::IEnumerable&lt;System::Reflection::Assembly ^&gt; ^ referenceAssemblies, System::Xaml::XamlSchemaContextSettings ^ settings);" />
      <MemberSignature Language="F#" Value="new System.Xaml.XamlSchemaContext : seq&lt;System.Reflection.Assembly&gt; * System.Xaml.XamlSchemaContextSettings -&gt; System.Xaml.XamlSchemaContext" Usage="new System.Xaml.XamlSchemaContext (referenceAssemblies, settings)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="referenceAssemblies" Type="System.Collections.Generic.IEnumerable&lt;System.Reflection.Assembly&gt;" />
        <Parameter Name="settings" Type="System.Xaml.XamlSchemaContextSettings" />
      </Parameters>
      <Docs>
        <param name="referenceAssemblies">
          <span data-ttu-id="d3659-116">Wyliczalny zestaw informacji o zestawie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3659-116">An enumerable set of assembly information.</span>
          </span>
          <span data-ttu-id="d3659-117">Każdy element informacji zestaw jest określony przez <see cref="T:System.Reflection.Assembly" /> wartość.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3659-117">Each assembly information item is specified by an <see cref="T:System.Reflection.Assembly" /> value.</span>
          </span>
        </param>
        <param name="settings">
          <span data-ttu-id="d3659-118">Obiekt ustawień do użycia do konstruowania <see cref="T:System.Xaml.XamlSchemaContext" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3659-118">The settings object to use to construct the <see cref="T:System.Xaml.XamlSchemaContext" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d3659-119">Inicjuje nowe wystąpienie klasy <see cref="T:System.Xaml.XamlSchemaContext" /> klasy, na podstawie zestawu zestawów odwołań i obiekt ustawień.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3659-119">Initializes a new instance of the <see cref="T:System.Xaml.XamlSchemaContext" /> class, based on a set of reference assemblies and a settings object.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~XamlSchemaContext ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlSchemaContext.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!XamlSchemaContext ()" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; unit" Usage="xamlSchemaContext.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="d3659-120">Zawiera niestandardowy <see langword="Finalize" /> implementację, która nie jest wywoływany <see langword="Dispose" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3659-120">Provides a nonstandard <see langword="Finalize" /> implementation that does not invoke <see langword="Dispose" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d3659-121">Kontekst schematu XAML nie powinny zostać usunięte, przez automatyczne wyrzucanie elementów bezużytecznych lub operacji ręcznych.</span><span class="sxs-lookup"><span data-stu-id="d3659-121">XAML schema contexts should not be disposed by automatic garbage collection or by manual operations.</span></span> <span data-ttu-id="d3659-122">Mimo że kontekst schematu XAML nie ma żadnych niezarządzanych zasobów, <xref:System.Windows.Markup.XamlDeferLoadAttribute> właściwości mogą być aktywne i usuwania kontekst schematu XAML może zakłócać operacji powiązanych odroczone obciążenia.</span><span class="sxs-lookup"><span data-stu-id="d3659-122">Although XAML schema contexts  have no unmanaged resources, <xref:System.Windows.Markup.XamlDeferLoadAttribute> properties might still be active, and disposing a XAML schema context can interfere with the related defer-load operation.</span></span>  
  
 <span data-ttu-id="d3659-123"><xref:System.AppDomain.AssemblyLoad> procedury obsługi zdarzeń, które są podłączone wewnętrznie jako słabe odwołania, są czyszczone przez tę implementację.</span><span class="sxs-lookup"><span data-stu-id="d3659-123"><xref:System.AppDomain.AssemblyLoad> event handlers, which are hooked internally as weak references, are cleaned up by this implementation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FullyQualifyAssemblyNamesInClrNamespaces">
      <MemberSignature Language="C#" Value="public bool FullyQualifyAssemblyNamesInClrNamespaces { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool FullyQualifyAssemblyNamesInClrNamespaces" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlSchemaContext.FullyQualifyAssemblyNamesInClrNamespaces" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FullyQualifyAssemblyNamesInClrNamespaces As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool FullyQualifyAssemblyNamesInClrNamespaces { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.FullyQualifyAssemblyNamesInClrNamespaces : bool" Usage="System.Xaml.XamlSchemaContext.FullyQualifyAssemblyNamesInClrNamespaces" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d3659-124">Pobiera wartość określającą, czy schematu XAML i kontekst jej użyć w pełni kwalifikowane nazwy zestawów w wartości, które są zwracane przez interfejs API wyszukiwania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3659-124">Gets a value that specifies whether a XAML schema and its context use fully qualified assembly names in the values that are returned by the lookup API.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d3659-125">
            <see langword="true" /> Użycie schematu XAML i kontekst w pełni kwalifikowane nazwy zestawów w wartości, które są zwracane przez wyszukiwanie interfejsów API; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3659-125">
              <see langword="true" /> if a XAML schema and its context use fully qualified assembly names in the values that are returned by the lookup APIs; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d3659-126">Ta właściwość zwraca <xref:System.Xaml.XamlSchemaContextSettings.FullyQualifyAssemblyNamesInClrNamespaces%2A?displayProperty=nameWithType> wartość, która jest określana w ustawienia <xref:System.Xaml.XamlSchemaContext.%23ctor%28System.Xaml.XamlSchemaContextSettings%29> sygnatury konstruktora.</span><span class="sxs-lookup"><span data-stu-id="d3659-126">This property returns the <xref:System.Xaml.XamlSchemaContextSettings.FullyQualifyAssemblyNamesInClrNamespaces%2A?displayProperty=nameWithType> value that is established in the settings for the <xref:System.Xaml.XamlSchemaContext.%23ctor%28System.Xaml.XamlSchemaContextSettings%29> constructor signature.</span></span> <span data-ttu-id="d3659-127">Jeśli inne podpisy były używane do tworzenia lub <xref:System.Xaml.XamlSchemaContextSettings.FullyQualifyAssemblyNamesInClrNamespaces%2A?displayProperty=nameWithType> specjalnie nie jest ustawiony na `true`, wartość tej właściwości jest `false`.</span><span class="sxs-lookup"><span data-stu-id="d3659-127">If other signatures were used for construction or if <xref:System.Xaml.XamlSchemaContextSettings.FullyQualifyAssemblyNamesInClrNamespaces%2A?displayProperty=nameWithType> is not specifically set to `true`, the value of this property is `false`.</span></span>  
  
 <span data-ttu-id="d3659-128">Wartość ta właściwość ma wpływ na ciągi, które są zwracane przez <xref:System.Xaml.XamlSchemaContext.GetAllXamlNamespaces%2A>.</span><span class="sxs-lookup"><span data-stu-id="d3659-128">The value of this property influences the strings that are returned by <xref:System.Xaml.XamlSchemaContext.GetAllXamlNamespaces%2A>.</span></span> <span data-ttu-id="d3659-129">Jeśli <xref:System.Xaml.XamlSchemaContext.FullyQualifyAssemblyNamesInClrNamespaces%2A> jest `true`, część zestawu ciągu raportuje odpowiednik <xref:System.Reflection.Assembly.FullName%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="d3659-129">If <xref:System.Xaml.XamlSchemaContext.FullyQualifyAssemblyNamesInClrNamespaces%2A> is `true`, the assembly portion of the string reports the equivalent of <xref:System.Reflection.Assembly.FullName%2A?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAllXamlNamespaces">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IEnumerable&lt;string&gt; GetAllXamlNamespaces ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;string&gt; GetAllXamlNamespaces() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlSchemaContext.GetAllXamlNamespaces" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAllXamlNamespaces () As IEnumerable(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::Generic::IEnumerable&lt;System::String ^&gt; ^ GetAllXamlNamespaces();" />
      <MemberSignature Language="F#" Value="abstract member GetAllXamlNamespaces : unit -&gt; seq&lt;string&gt;&#xA;override this.GetAllXamlNamespaces : unit -&gt; seq&lt;string&gt;" Usage="xamlSchemaContext.GetAllXamlNamespaces " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="d3659-130">Wyszukuje zestawy, które są przechowywane w tym <see cref="T:System.Xaml.XamlSchemaContext" /> i zwraca zestaw przestrzeni nazw.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3659-130">Searches the assemblies that are held by this <see cref="T:System.Xaml.XamlSchemaContext" /> and returns a set of namespaces.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d3659-131">Wyliczalny zestaw przestrzeni nazw identyfikatorów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3659-131">An enumerable set of namespace identifiers.</span>
          </span>
          <span data-ttu-id="d3659-132">Te identyfikatory są dostarczane jako ciągi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3659-132">These identifiers are provided as strings.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d3659-133">Metoda ta wyszukuje zestawy referencyjne tylko, jeśli są one przekazywane za pomocą ustawienia konstrukcji lub właściwość.</span><span class="sxs-lookup"><span data-stu-id="d3659-133">This method only searches the reference assemblies if they are passed in through construction or property setting.</span></span> <span data-ttu-id="d3659-134">Jeśli żadne zestawy nie są określane jako zestawy odwołań, logika ta metoda sprawdza, czy wszystkie załadowane zestawy gdzie to <xref:System.Xaml.XamlSchemaContext> jest aktywny.</span><span class="sxs-lookup"><span data-stu-id="d3659-134">If no assemblies are established as reference assemblies, the logic of this method examines all loaded assemblies where this <xref:System.Xaml.XamlSchemaContext> is active.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAllXamlTypes">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.ICollection&lt;System.Xaml.XamlType&gt; GetAllXamlTypes (string xamlNamespace);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.ICollection`1&lt;class System.Xaml.XamlType&gt; GetAllXamlTypes(string xamlNamespace) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlSchemaContext.GetAllXamlTypes(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAllXamlTypes (xamlNamespace As String) As ICollection(Of XamlType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::Generic::ICollection&lt;System::Xaml::XamlType ^&gt; ^ GetAllXamlTypes(System::String ^ xamlNamespace);" />
      <MemberSignature Language="F#" Value="abstract member GetAllXamlTypes : string -&gt; System.Collections.Generic.ICollection&lt;System.Xaml.XamlType&gt;&#xA;override this.GetAllXamlTypes : string -&gt; System.Collections.Generic.ICollection&lt;System.Xaml.XamlType&gt;" Usage="xamlSchemaContext.GetAllXamlTypes xamlNamespace" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;System.Xaml.XamlType&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xamlNamespace" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="xamlNamespace">
          <span data-ttu-id="d3659-135">Przestrzeń nazw XAML do zwracanych typów dla.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3659-135">The XAML namespace to return types for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d3659-136">Wyszukuje zestawy, które są przechowywane w tym <see cref="T:System.Xaml.XamlSchemaContext" /> i zwraca zestaw typów z określonego obszaru nazw XAML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3659-136">Searches the assemblies that are held by this <see cref="T:System.Xaml.XamlSchemaContext" /> and returns a set of types from the specified XAML namespace.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d3659-137">Wyliczalny zestaw typów XAML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3659-137">An enumerable set of XAML types.</span>
          </span>
          <span data-ttu-id="d3659-138">Każdy typ XAML w zestawie jest reprezentowane przez <see cref="T:System.Xaml.XamlType" /> obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3659-138">Each XAML type in the set is represented by a <see cref="T:System.Xaml.XamlType" /> object.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPreferredPrefix">
      <MemberSignature Language="C#" Value="public virtual string GetPreferredPrefix (string xmlns);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetPreferredPrefix(string xmlns) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlSchemaContext.GetPreferredPrefix(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetPreferredPrefix (xmlns As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetPreferredPrefix(System::String ^ xmlns);" />
      <MemberSignature Language="F#" Value="abstract member GetPreferredPrefix : string -&gt; string&#xA;override this.GetPreferredPrefix : string -&gt; string" Usage="xamlSchemaContext.GetPreferredPrefix xmlns" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xmlns" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="xmlns">
          <span data-ttu-id="d3659-139">Przestrzeń nazw XAML można pobrać preferowanych prefiks.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3659-139">The XAML namespace to get the preferred prefix for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d3659-140">Pobiera ciąg, który jest zgłaszany jako prefiks preferowane dla klientów do użycia podczas mapowania ich określonego obszaru nazw XAML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3659-140">Gets a string that is reported as the preferred prefix for consumers to use when they map the specified XAML namespace.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d3659-141">Użyj ciągu, którego konsumentów ma używać podczas mapowania ich określonego obszaru nazw XAML dla kodu znaczników.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3659-141">A string that consumers should use when they map the specified XAML namespace for markup use.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d3659-142">Najbardziej bezpośrednim konsumenta informacji jest zazwyczaj Edytor XAML.</span><span class="sxs-lookup"><span data-stu-id="d3659-142">The most immediate consumer of the information is typically a XAML writer.</span></span> <span data-ttu-id="d3659-143">Innych klientów pośrednich obejmują narzędzia do projektowania.</span><span class="sxs-lookup"><span data-stu-id="d3659-143">Other indirect consumers include design tools.</span></span>  
  
 <span data-ttu-id="d3659-144">Te informacje jako część powiązania XAML dla środowisko uruchomieniowe języka wspólnego (CLR), można określić, stosując <xref:System.Windows.Markup.XmlnsPrefixAttribute> na poziomie zestawu.</span><span class="sxs-lookup"><span data-stu-id="d3659-144">As part of the XAML binding for the common language runtime (CLR), you can specify this information by applying <xref:System.Windows.Markup.XmlnsPrefixAttribute> at the assembly level.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d3659-145">
            <paramref name="xmlns" /> ma wartość null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3659-145">
              <paramref name="xmlns" /> is null.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetValueConverter&lt;TConverterBase&gt;">
      <MemberSignature Language="C#" Value="protected internal System.Xaml.Schema.XamlValueConverter&lt;TConverterBase&gt; GetValueConverter&lt;TConverterBase&gt; (Type converterType, System.Xaml.XamlType targetType) where TConverterBase : class;" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance class System.Xaml.Schema.XamlValueConverter`1&lt;!!TConverterBase&gt; GetValueConverter&lt;class TConverterBase&gt;(class System.Type converterType, class System.Xaml.XamlType targetType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlSchemaContext.GetValueConverter``1(System.Type,System.Xaml.XamlType)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Function GetValueConverter(Of TConverterBase As Class) (converterType As Type, targetType As XamlType) As XamlValueConverter(Of TConverterBase)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA;generic &lt;typename TConverterBase&gt;&#xA; where TConverterBase : class System::Xaml::Schema::XamlValueConverter&lt;TConverterBase&gt; ^ GetValueConverter(Type ^ converterType, System::Xaml::XamlType ^ targetType);" />
      <MemberSignature Language="F#" Value="member this.GetValueConverter : Type * System.Xaml.XamlType -&gt; System.Xaml.Schema.XamlValueConverter&lt;'ConverterBase (requires 'ConverterBase : null)&gt; (requires 'ConverterBase : null)" Usage="xamlSchemaContext.GetValueConverter (converterType, targetType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.Schema.XamlValueConverter&lt;TConverterBase&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TConverterBase">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="converterType" Type="System.Type" />
        <Parameter Name="targetType" Type="System.Xaml.XamlType" />
      </Parameters>
      <Docs>
        <typeparam name="TConverterBase">
          <span data-ttu-id="d3659-146">Klasa bazowa określonego konwertera.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3659-146">The specific converter base class.</span>
          </span>
        </typeparam>
        <param name="converterType">
          <span data-ttu-id="d3659-147">Implementacji konwertera.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3659-147">The converter implementation.</span>
          </span>
        </param>
        <param name="targetType">
          <span data-ttu-id="d3659-148">Typ docelowej lokalizacji dla konwertera.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3659-148">The desired destination type for the converter.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d3659-149">Zwraca konwerter wartości, który można przekonwertować na żądany <paramref name="targetType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3659-149">Returns a value converter that can convert to the requested <paramref name="targetType" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d3659-150">A <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> z ograniczeniem, odpowiadający ograniczenie, które jest umieszczany na wywołania metody.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3659-150">A <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> with a constraint that matches the constraint that is put on the method call.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetXamlDirective">
      <MemberSignature Language="C#" Value="public virtual System.Xaml.XamlDirective GetXamlDirective (string xamlNamespace, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xaml.XamlDirective GetXamlDirective(string xamlNamespace, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlSchemaContext.GetXamlDirective(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetXamlDirective (xamlNamespace As String, name As String) As XamlDirective" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Xaml::XamlDirective ^ GetXamlDirective(System::String ^ xamlNamespace, System::String ^ name);" />
      <MemberSignature Language="F#" Value="abstract member GetXamlDirective : string * string -&gt; System.Xaml.XamlDirective&#xA;override this.GetXamlDirective : string * string -&gt; System.Xaml.XamlDirective" Usage="xamlSchemaContext.GetXamlDirective (xamlNamespace, name)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlDirective</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xamlNamespace" Type="System.String" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="xamlNamespace">
          <span data-ttu-id="d3659-151">Przestrzeń nazw XAML, który zawiera dyrektywy o nazwie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3659-151">The XAML namespace that contains the named directive.</span>
          </span>
        </param>
        <param name="name">
          <span data-ttu-id="d3659-152">Nazwa dyrektywy w celu uzyskania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3659-152">The name of the directive to obtain.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d3659-153">Zwraca <see cref="T:System.Xaml.XamlDirective" /> wartość, która reprezentuje dyrektywę dla języka XAML lub dla określonej implementacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3659-153">Returns a <see cref="T:System.Xaml.XamlDirective" /> value that represents a directive, either for the XAML language or for a particular implementation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d3659-154">A <see cref="T:System.Xaml.XamlDirective" /> obiekt, który reprezentuje żądany dyrektywy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3659-154">A <see cref="T:System.Xaml.XamlDirective" /> object that represents the requested directive.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d3659-155">Należy przesłonić tę metodę w przypadku tworzenia klasy pochodnej od <xref:System.Xaml.XamlDirective> w ramach scenariusza rozszerzenia systemie typu XAML.</span><span class="sxs-lookup"><span data-stu-id="d3659-155">Override this method if you create a derived class from <xref:System.Xaml.XamlDirective> as part of a XAML type system extension scenario.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d3659-156">
            <paramref name="xamlNamespace" /> lub <paramref name="name" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3659-156">
              <paramref name="xamlNamespace" /> or <paramref name="name" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetXamlType">
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="d3659-157">Zwraca <see cref="T:System.Xaml.XamlType" /> opartego na identyfikator typu CLR lub XAML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3659-157">Returns a <see cref="T:System.Xaml.XamlType" /> that is based on either a CLR or XAML type identifier.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetXamlType">
      <MemberSignature Language="C#" Value="public virtual System.Xaml.XamlType GetXamlType (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xaml.XamlType GetXamlType(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlSchemaContext.GetXamlType(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Xaml::XamlType ^ GetXamlType(Type ^ type);" />
      <MemberSignature Language="F#" Value="abstract member GetXamlType : Type -&gt; System.Xaml.XamlType&#xA;override this.GetXamlType : Type -&gt; System.Xaml.XamlType" Usage="xamlSchemaContext.GetXamlType type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="d3659-158">Typ do pobrania <see cref="T:System.Xaml.XamlType" /> dla.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3659-158">The type to get a <see cref="T:System.Xaml.XamlType" /> for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d3659-159">Zwraca <see cref="T:System.Xaml.XamlType" /> opartego na identyfikator typu CLR.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3659-159">Returns a <see cref="T:System.Xaml.XamlType" /> that is based on a CLR type identifier.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d3659-160">
            <see cref="T:System.Xaml.XamlType" /> Danych wejściowych, które odpowiadają <paramref name="type" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3659-160">The <see cref="T:System.Xaml.XamlType" /> that matches the input <paramref name="type" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d3659-161">To przeciążenie przyjęto założenie, że używasz środowiska CLR zapasowy typ systemu.</span><span class="sxs-lookup"><span data-stu-id="d3659-161">This overload assumes that you are using the CLR for the backing type system.</span></span> <span data-ttu-id="d3659-162">Jeśli nie używasz systemu typu CLR, użyj <xref:System.Xaml.XamlSchemaContext.GetXamlType%28System.Xaml.Schema.XamlTypeName%29>.</span><span class="sxs-lookup"><span data-stu-id="d3659-162">If you are not using the CLR type system, use <xref:System.Xaml.XamlSchemaContext.GetXamlType%28System.Xaml.Schema.XamlTypeName%29>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d3659-163">
            <paramref name="type" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3659-163">
              <paramref name="type" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetXamlType">
      <MemberSignature Language="C#" Value="public System.Xaml.XamlType GetXamlType (System.Xaml.Schema.XamlTypeName xamlTypeName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xaml.XamlType GetXamlType(class System.Xaml.Schema.XamlTypeName xamlTypeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlSchemaContext.GetXamlType(System.Xaml.Schema.XamlTypeName)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xaml::XamlType ^ GetXamlType(System::Xaml::Schema::XamlTypeName ^ xamlTypeName);" />
      <MemberSignature Language="F#" Value="member this.GetXamlType : System.Xaml.Schema.XamlTypeName -&gt; System.Xaml.XamlType" Usage="xamlSchemaContext.GetXamlType xamlTypeName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xamlTypeName" Type="System.Xaml.Schema.XamlTypeName" />
      </Parameters>
      <Docs>
        <param name="xamlTypeName">
          <span data-ttu-id="d3659-164">Nazwa typu XAML, aby uzyskać <see cref="T:System.Xaml.XamlType" /> dla.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3659-164">The XAML type name to get a <see cref="T:System.Xaml.XamlType" /> for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d3659-165">Zwraca <see cref="T:System.Xaml.XamlType" /> opartego na Nazwa typu systemu XAML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3659-165">Returns a <see cref="T:System.Xaml.XamlType" /> that is based on a XAML system type name.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d3659-166">
            <see cref="T:System.Xaml.XamlType" /> Danych wejściowych, które odpowiadają <paramref name="xamlTypeName" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3659-166">The <see cref="T:System.Xaml.XamlType" /> that matches the input <paramref name="xamlTypeName" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="d3659-167">Składnik <paramref name="xamlTypeName" /> (<see cref="P:System.Xaml.Schema.XamlTypeName.Name" /> lub <see cref="P:System.Xaml.Schema.XamlTypeName.Namespace" />) jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3659-167">A component of <paramref name="xamlTypeName" /> (<see cref="P:System.Xaml.Schema.XamlTypeName.Name" /> or <see cref="P:System.Xaml.Schema.XamlTypeName.Namespace" />) is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d3659-168">
            <paramref name="xamlTypeName" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3659-168">
              <paramref name="xamlTypeName" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Xaml.Schema.XamlTypeName" />
      </Docs>
    </Member>
    <Member MemberName="GetXamlType">
      <MemberSignature Language="C#" Value="protected internal virtual System.Xaml.XamlType GetXamlType (string xamlNamespace, string name, params System.Xaml.XamlType[] typeArguments);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance class System.Xaml.XamlType GetXamlType(string xamlNamespace, string name, class System.Xaml.XamlType[] typeArguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlSchemaContext.GetXamlType(System.String,System.String,System.Xaml.XamlType[])" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function GetXamlType (xamlNamespace As String, name As String, ParamArray typeArguments As XamlType()) As XamlType" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual System::Xaml::XamlType ^ GetXamlType(System::String ^ xamlNamespace, System::String ^ name, ... cli::array &lt;System::Xaml::XamlType ^&gt; ^ typeArguments);" />
      <MemberSignature Language="F#" Value="abstract member GetXamlType : string * string * System.Xaml.XamlType[] -&gt; System.Xaml.XamlType&#xA;override this.GetXamlType : string * string * System.Xaml.XamlType[] -&gt; System.Xaml.XamlType" Usage="xamlSchemaContext.GetXamlType (xamlNamespace, name, typeArguments)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xamlNamespace" Type="System.String" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="typeArguments" Type="System.Xaml.XamlType[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="xamlNamespace">
          <span data-ttu-id="d3659-169">Przestrzeń nazw XAML, zawierająca żądanego typu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3659-169">The XAML namespace that contains the desired type.</span>
          </span>
        </param>
        <param name="name">
          <span data-ttu-id="d3659-170">Nazwa ciągu żądanego typu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3659-170">The string name of the desired type.</span>
          </span>
        </param>
        <param name="typeArguments">
          <span data-ttu-id="d3659-171">Inicjowanie argumentów typu dla typu ogólnego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3659-171">The initialization type arguments for a generic type.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d3659-172">Zwraca <see cref="T:System.Xaml.XamlType" /> opartego na przestrzeń nazw XAML i ciągu dla nazwy typu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3659-172">Returns a <see cref="T:System.Xaml.XamlType" /> that is based on a XAML namespace and a string for the type name.</span>
          </span>
          <span data-ttu-id="d3659-173">Ta sygnatura można określić argumentów typu w przypadkach, w których żądany typ jest typem ogólnym.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3659-173">This signature can specify the type arguments for cases where the desired type is a generic type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d3659-174">
            <see cref="T:System.Xaml.XamlType" /> Kryteria wejściowe, które odpowiadają.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3659-174">The <see cref="T:System.Xaml.XamlType" /> that matches the input criteria.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnAssemblyResolve">
      <MemberSignature Language="C#" Value="protected internal virtual System.Reflection.Assembly OnAssemblyResolve (string assemblyName);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance class System.Reflection.Assembly OnAssemblyResolve(string assemblyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlSchemaContext.OnAssemblyResolve(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function OnAssemblyResolve (assemblyName As String) As Assembly" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual System::Reflection::Assembly ^ OnAssemblyResolve(System::String ^ assemblyName);" />
      <MemberSignature Language="F#" Value="abstract member OnAssemblyResolve : string -&gt; System.Reflection.Assembly&#xA;override this.OnAssemblyResolve : string -&gt; System.Reflection.Assembly" Usage="xamlSchemaContext.OnAssemblyResolve assemblyName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Assembly</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assemblyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="assemblyName">
          <span data-ttu-id="d3659-175">Nazwa zestawu do załadowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3659-175">The name of the assembly to load.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d3659-176">Wywołuje się, gdy operacje używać ten kontekst schematu do rozpoznawania zestawu, który jest wymagany w celu rozwiązania przestrzeni nazw XAML, które zawiera.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3659-176">Called when operations use this schema context to resolve an assembly that is required in order to resolve the XAML namespaces that it contains.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d3659-177">Rozpoznanego zestawu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3659-177">The resolved assembly.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d3659-178">Podstawowy technika rozpoznawania zestawu, czyli wewnętrznego interfejsu API ma wbudowane tolerancji innym ciągiem formularze nazwy zestawu, jak na podstawie <xref:System.Reflection.AssemblyName> zachowanie konstrukcji.</span><span class="sxs-lookup"><span data-stu-id="d3659-178">The underlying assembly resolution technique, which is an internal API, has built-in tolerances for different string forms of an assembly name as based on the <xref:System.Reflection.AssemblyName> construction behavior.</span></span>  
  
 <span data-ttu-id="d3659-179">Celem tego interfejsu API jest umożliwiające rozpoznawanie szansy sprzedaży pierwszy względem znanych zbiory zestawów, takich jak względem zestawów odwołań zamiast z globalnej pamięci podręcznej.</span><span class="sxs-lookup"><span data-stu-id="d3659-179">The purpose of this API is to enable first-opportunity resolution against known sets of assemblies, such as against reference assemblies instead of against a global assembly cache.</span></span> <span data-ttu-id="d3659-180">Lista zestawów odwołań zostanie wypełnione, domyślna implementacja przejść do zestawów odwołań znane.</span><span class="sxs-lookup"><span data-stu-id="d3659-180">If the list of reference assemblies is populated, the default implementation can access the known reference assemblies.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReferenceAssemblies">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;System.Reflection.Assembly&gt; ReferenceAssemblies { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;class System.Reflection.Assembly&gt; ReferenceAssemblies" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlSchemaContext.ReferenceAssemblies" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ReferenceAssemblies As IList(Of Assembly)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IList&lt;System::Reflection::Assembly ^&gt; ^ ReferenceAssemblies { System::Collections::Generic::IList&lt;System::Reflection::Assembly ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ReferenceAssemblies : System.Collections.Generic.IList&lt;System.Reflection.Assembly&gt;" Usage="System.Xaml.XamlSchemaContext.ReferenceAssemblies" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Reflection.Assembly&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d3659-181">Pobiera wyliczalny zestaw zestawów referencyjnych dla kontekst schematu XAML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3659-181">Gets an enumerable set of reference assemblies for the XAML schema context.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d3659-182">Wyliczalny zestaw zestawów referencyjnych dla kontekst schematu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3659-182">An enumerable set of reference assemblies for the schema context.</span>
          </span>
          <span data-ttu-id="d3659-183">Każdy element informacji zestaw jest określony przez <see cref="T:System.Reflection.Assembly" /> wartość.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3659-183">Each assembly information item is specified by an <see cref="T:System.Reflection.Assembly" /> value.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportMarkupExtensionsWithDuplicateArity">
      <MemberSignature Language="C#" Value="public bool SupportMarkupExtensionsWithDuplicateArity { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportMarkupExtensionsWithDuplicateArity" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlSchemaContext.SupportMarkupExtensionsWithDuplicateArity" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SupportMarkupExtensionsWithDuplicateArity As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool SupportMarkupExtensionsWithDuplicateArity { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.SupportMarkupExtensionsWithDuplicateArity : bool" Usage="System.Xaml.XamlSchemaContext.SupportMarkupExtensionsWithDuplicateArity" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d3659-184">Pobiera wartość określającą, czy schematu XAML i kontekst obsługiwać rozszerzenia znaczników, które mają dwa konstruktory przy użyciu tej samej liczby argumentów (liczba parametrów wejściowych).</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3659-184">Gets a value that specifies whether a XAML schema and its context support markup extensions that have two constructors with the same arity (number of input parameters).</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d3659-185">
            <see langword="true" /> Jeśli kontekst schematu zezwala na — rozszerzenia znaczników, które mają zduplikowane argumentów; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3659-185">
              <see langword="true" /> if the schema context permits markup extensions that have duplicate arity; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="d3659-186">Wartość domyślna to <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3659-186">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d3659-187">Ta właściwość zwraca <xref:System.Xaml.XamlSchemaContextSettings.SupportMarkupExtensionsWithDuplicateArity%2A?displayProperty=nameWithType> wartość, która jest określana w ustawienia <xref:System.Xaml.XamlSchemaContext.%23ctor%28System.Xaml.XamlSchemaContextSettings%29> sygnatury konstruktora.</span><span class="sxs-lookup"><span data-stu-id="d3659-187">This property returns the <xref:System.Xaml.XamlSchemaContextSettings.SupportMarkupExtensionsWithDuplicateArity%2A?displayProperty=nameWithType> value that is established in the settings for the <xref:System.Xaml.XamlSchemaContext.%23ctor%28System.Xaml.XamlSchemaContextSettings%29> constructor signature.</span></span> <span data-ttu-id="d3659-188">Jeśli inne podpisy są używane do tworzenia lub <xref:System.Xaml.XamlSchemaContextSettings.SupportMarkupExtensionsWithDuplicateArity%2A?displayProperty=nameWithType> specjalnie nie jest ustawiony na `true`, wartość tej właściwości jest `false`.</span><span class="sxs-lookup"><span data-stu-id="d3659-188">If other signatures are used for construction or if <xref:System.Xaml.XamlSchemaContextSettings.SupportMarkupExtensionsWithDuplicateArity%2A?displayProperty=nameWithType> is not specifically set to `true`, the value of this property is `false`.</span></span>  
  
 <span data-ttu-id="d3659-189">Zduplikowane liczby argumentów — rozszerzenia znaczników nie jest specjalnie opisane w specyfikacji XAML [MS-XAML] sekcja 6.6.7.2.</span><span class="sxs-lookup"><span data-stu-id="d3659-189">Duplicate arity of markup extensions is not specifically addressed by the XAML specification [MS-XAML], section 6.6.7.2.</span></span> <span data-ttu-id="d3659-190">Jest to spowodowane tworzenia elementu informacji XAML dla rozszerzenia znaczników jest taka sama niezależnie od tego, zduplikowane liczby argumentów, które mogą istnieć w implementacji rozszerzenia znaczników.</span><span class="sxs-lookup"><span data-stu-id="d3659-190">This is because formation of the XAML information item for a markup extension is identical regardless of duplicate arity that might exist in the markup extension implementation.</span></span> <span data-ttu-id="d3659-191">Rzeczywiste wywołanie rozszerzenie znaczników i jego `ProvideValue` uwidacznia wszystkie problemy związane z liczbą zduplikowanych ról.</span><span class="sxs-lookup"><span data-stu-id="d3659-191">Only the actual invocation of the markup extension and its `ProvideValue` exposes any issues associated with duplicate arity.</span></span> <span data-ttu-id="d3659-192">Zachowanie dotyczące obsługi zduplikowane specifikaci związku z tym jest nieokreślone i pozostanie do każdego implementującej kontekst schematu XAML i jej włączania zapisywania XAML.</span><span class="sxs-lookup"><span data-stu-id="d3659-192">Behavior for handling duplicate arity is thus undefined and is left up to each implementing XAML schema context and its XAML writer integration.</span></span> <span data-ttu-id="d3659-193">Domyślny kontekst schematu XAML zaimplementowany dla operacji programu .NET Framework XAML Services nie obsługuje zduplikowane argumentów; różne platformy .NET Framework XAML Services interfejsy API będzie zgłaszają wyjątki, gdy przetwarzania użycia rozszerzenia znaczników przy użyciu podstawowych zduplikowane liczby argumentów.</span><span class="sxs-lookup"><span data-stu-id="d3659-193">The default XAML schema context as implemented for .NET Framework XAML Services operations does not support duplicate arity; various .NET Framework XAML Services APIs will throw exceptions when processing markup extension usage with underlying duplicate arity.</span></span>  
  
 <span data-ttu-id="d3659-194">Aby uzyskać więcej informacji na temat definiowania rozszerzenia znaczników, zobacz [rozszerzenia znaczników dla przeglądu XAML](~/docs/framework/xaml-services/markup-extensions-for-xaml-overview.md).</span><span class="sxs-lookup"><span data-stu-id="d3659-194">For more information about defining markup extensions, see [Markup Extensions for XAML Overview](~/docs/framework/xaml-services/markup-extensions-for-xaml-overview.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryGetCompatibleXamlNamespace">
      <MemberSignature Language="C#" Value="public virtual bool TryGetCompatibleXamlNamespace (string xamlNamespace, out string compatibleNamespace);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool TryGetCompatibleXamlNamespace(string xamlNamespace, [out] string&amp; compatibleNamespace) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlSchemaContext.TryGetCompatibleXamlNamespace(System.String,System.String@)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function TryGetCompatibleXamlNamespace (xamlNamespace As String, ByRef compatibleNamespace As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool TryGetCompatibleXamlNamespace(System::String ^ xamlNamespace, [Runtime::InteropServices::Out] System::String ^ % compatibleNamespace);" />
      <MemberSignature Language="F#" Value="abstract member TryGetCompatibleXamlNamespace : string *  -&gt; bool&#xA;override this.TryGetCompatibleXamlNamespace : string *  -&gt; bool" Usage="xamlSchemaContext.TryGetCompatibleXamlNamespace (xamlNamespace, compatibleNamespace)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xamlNamespace" Type="System.String" />
        <Parameter Name="compatibleNamespace" Type="System.String" RefType="out" />
      </Parameters>
      <Docs>
        <param name="xamlNamespace">
          <span data-ttu-id="d3659-195">
            <see langword="xmlns" /> Parametrów dla przestrzeni nazw XAML, które mają być sprawdzane zgodnych wyników.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3659-195">The <see langword="xmlns" /> string for the XAML namespace to be checked for a compatible result.</span>
          </span>
        </param>
        <param name="compatibleNamespace">
          <span data-ttu-id="d3659-196">Po powrocie z tej metody <see langword="xmlns" /> ciąg zgodny żądania przestrzeń nazw XAML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3659-196">When this method returns, the <see langword="xmlns" /> string for a compatible XAML namespace request.</span>
          </span>
          <span data-ttu-id="d3659-197">Może to być taka sama jak <c>xamlNamespace</c> Jeśli metoda zwraca <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3659-197">This might be identical to <c>xamlNamespace</c> if the method returns <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d3659-198">Zwraca powodzenie lub Niepowodzenie żądania zgodne przestrzeni nazw XAML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3659-198">Returns the success or failure of a request for a compatible XAML namespace.</span>
          </span>
          <span data-ttu-id="d3659-199">Żądania zakończonego powodzeniem raportuje tej przestrzeni nazw XAML jako parametrem out.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3659-199">A successful request reports that XAML namespace as an out parameter.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d3659-200">
            <see langword="true" /> Jeśli <paramref name="compatibleNamespace" /> zawiera użyteczne wynik; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3659-200">
              <see langword="true" /> if <paramref name="compatibleNamespace" /> contains a usable result; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d3659-201">Wewnętrznie ta metoda używa następującej kolejności wyszukiwania:</span><span class="sxs-lookup"><span data-stu-id="d3659-201">Internally, this method uses the following lookup order:</span></span>  
  
1.  <span data-ttu-id="d3659-202">Słownik zaimplementowany wewnętrznie zgodności, który może być wypełnione przez wcześniejszego wyszukiwania.</span><span class="sxs-lookup"><span data-stu-id="d3659-202">An internally implemented compatibility dictionary, which may have been populated by an earlier lookup.</span></span>  
  
2.  <span data-ttu-id="d3659-203"><xref:System.Windows.Markup.XmlnsCompatibleWithAttribute> Parametru oceny.</span><span class="sxs-lookup"><span data-stu-id="d3659-203">The <xref:System.Windows.Markup.XmlnsCompatibleWithAttribute> parameter evaluation.</span></span>  
  
 <span data-ttu-id="d3659-204">Jeśli został odnaleziony innych nazw zgodnych, a ta metoda zwraca `false`, `compatibleNamespace` parametr wyjściowy może mieć taką samą wartość jak `xamlNamespace` danych wejściowych.</span><span class="sxs-lookup"><span data-stu-id="d3659-204">If no other compatible namespace is discovered and this method returns `false`, the `compatibleNamespace` parameter output might have the same value as the `xamlNamespace` input.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d3659-205">
            <paramref name="xamlNamespace" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3659-205">
              <paramref name="xamlNamespace" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>