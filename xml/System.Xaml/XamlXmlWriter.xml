<Type Name="XamlXmlWriter" FullName="System.Xaml.XamlXmlWriter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="5db12b0b313c0c2b62fbd959982afe9fc1ab4266" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36443851" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class XamlXmlWriter : System.Xaml.XamlWriter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XamlXmlWriter extends System.Xaml.XamlWriter" />
  <TypeSignature Language="DocId" Value="T:System.Xaml.XamlXmlWriter" />
  <TypeSignature Language="VB.NET" Value="Public Class XamlXmlWriter&#xA;Inherits XamlWriter" />
  <TypeSignature Language="C++ CLI" Value="public ref class XamlXmlWriter : System::Xaml::XamlWriter" />
  <TypeSignature Language="F#" Value="type XamlXmlWriter = class&#xA;    inherit XamlWriter" />
  <AssemblyInfo>
    <AssemblyName>System.Xaml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Xaml.XamlWriter</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Używa <see cref="T:System.IO.TextWriter" /> lub <see cref="T:System.Xml.XmlWriter" /> klasy pomocy technicznej można zapisać strumień węzłów XAML w pliku tekstowym lub znacznika serializacji formularza.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta klasa jest zazwyczaj używana w scenariuszach serializacji.  
  
## <a name="how-to-use-xamlxmlwriter"></a>Jak używać obiekt xamlxmlwriter będzie  
 <xref:System.Xaml.XamlWriter> Interfejs API ma kilka metod, które zapisać różne typy węzłów XAML. Zbiorczo te są określane w dokumentacji jako `Write` metody <xref:System.Xaml.XamlWriter>. <xref:System.Xaml.XamlXmlWriter> używa kilku wewnętrzny stan klasy w celu ustalenia, co należy zrobić, gdy jeden z jego `Write` nosi nazwę implementacji. A `Write` wywołania używa stanów w celu określenia, czy mogą być zapisywane żądanego elementu, atrybutu lub wartość lub czy jest zgłaszany wyjątek. Na przykład, jeśli wywołujesz <xref:System.Xaml.XamlXmlWriter.WriteEndObject%2A> i stan <xref:System.Xaml.XamlXmlWriter> bieżącego położenia węzeł znajduje się na wartości, lub do członka, jest zgłaszany wyjątek. Zazwyczaj wywołaniach <xref:System.Xaml.XamlXmlWriter> interfejsu API należy zwrócić uwagę typu bieżącego węzła XAML, która pochodzi z czytnika XAML i strumień węzłów XAML. Na podstawie tej wiedzy, wywołań należy unikać wywoływania `Write` interfejsów API, które nie mają znaczenia dla bieżącego typu węzła.  
  
## <a name="xaml-namespaces-and-xamlxmlwriter"></a>Przestrzeń nazw XAML i obiekt xamlxmlwriter będzie  
 Przestrzeń nazw XAML zapisywania zachowanie <xref:System.Xaml.XamlXmlWriter> jest złożony i nie jest ograniczona do jawnego wywołania <xref:System.Xaml.XamlXmlWriter.WriteNamespace%2A>. Zamiast tego innych `Write` wywołuje, takich jak <xref:System.Xaml.XamlXmlWriter.WriteStartObject%2A>, może być wymagane, że deklaracja przestrzeni nazw można zapisywać w szczególności punktach w strukturze węzła. Moduł zapisujący XAML albo tworzy prefiks własnej logiki lub używa informacji z <xref:System.Xaml.INamespacePrefixLookup> usługę, aby określić preferowany prefiks. Ponadto jawne <xref:System.Xaml.XamlXmlWriter.WriteNamespace%2A> wywołań może odroczyć lub może nie zwrócić Jeśli deklaracji przestrzeni nazw XAML jest już stosowane i zadeklarowane w innym miejscu.  
  
## <a name="write-method-exceptions"></a>Zapis wyjątki — metoda  
 Wyjątki generowane przez <xref:System.Xaml.XamlXmlWriter> `Write` metody są zwykle <xref:System.InvalidOperationException> lub <xref:System.Xaml.XamlXmlWriterException>.  
  
 <xref:System.InvalidOperationException> Często oznacza to, że czytnik XAML przekazany nieprawidłowy węzeł struktury strumień węzłów XAML. W takim przypadku struktury węzła jest nieprawidłowy dla przyczyn, które nie są powiązane z weryfikacją schematu XAML i kontekst schematu XAML. Zamiast strumień węzła jest nieprawidłowy w postaci podstawowe. Na przykład, jeśli błędną implementację czytnika XAML wygenerowany strumień węzłów XAML, zawierający dwóch kolejnych `StartObject` węzłów, próba wywołania drugiej <xref:System.Xaml.XamlXmlWriter.WriteStartObject%2A> spowoduje zgłoszenie <xref:System.InvalidOperationException>. Wszystkie składniki zapisywania XAML może wziąć pod uwagę operacji jest nieprawidłowy. Innym przykładem <xref:System.InvalidOperationException> jest w przypadku informacji dotyczących przestrzeni nazw XAML nie jest dostępny przez kontekst schematu XAML, która ma zastosowanie do bieżącego położenia strumienia węzłów.  
  
 A <xref:System.Xaml.XamlXmlWriterException> wskazuje wyjątek, gdy wybiera tej konkretnej implementacji składnika zapisywania języka XAML zostać zgłoszony wyjątek w oparciu o jego funkcje. A <xref:System.Xaml.XamlXmlWriterException> może wskazywać szczególnych przypadkach gdy <xref:System.Xaml.XamlXmlWriter> narusza własnej stanu lub ustawienia. Na przykład <xref:System.Xaml.XamlXmlWriterException> mogą być wynikiem próby zapisu informacji dotyczących przestrzeni nazw XAML w pozycji który <xref:System.Xaml.XamlXmlWriter> i nie chcesz jej format serializacji pomocy technicznej lub zapisywanie zduplikowane elementy członkowskie podczas wystąpienia <xref:System.Xaml.XamlXmlWriterSettings> zabraniać go.  
  
 ]]></format>
    </remarks>
    <altmember cref="M:System.Xaml.XamlServices.Save(System.IO.Stream,System.Object)" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Xaml.XamlXmlWriter" /> klasy.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlXmlWriter (System.IO.Stream stream, System.Xaml.XamlSchemaContext schemaContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream stream, class System.Xaml.XamlSchemaContext schemaContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlXmlWriter.#ctor(System.IO.Stream,System.Xaml.XamlSchemaContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlXmlWriter(System::IO::Stream ^ stream, System::Xaml::XamlSchemaContext ^ schemaContext);" />
      <MemberSignature Language="F#" Value="new System.Xaml.XamlXmlWriter : System.IO.Stream * System.Xaml.XamlSchemaContext -&gt; System.Xaml.XamlXmlWriter" Usage="new System.Xaml.XamlXmlWriter (stream, schemaContext)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="schemaContext" Type="System.Xaml.XamlSchemaContext" />
      </Parameters>
      <Docs>
        <param name="stream">Strumień do zapisania.</param>
        <param name="schemaContext">Kontekst schematu XAML dla edytora XAML.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Xaml.XamlXmlWriter" /> klasy ze strumienia.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="stream" /> jest <see langword="null" />.  - lub - <paramref name="schemaContext" /> jest <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlXmlWriter (System.IO.TextWriter textWriter, System.Xaml.XamlSchemaContext schemaContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.TextWriter textWriter, class System.Xaml.XamlSchemaContext schemaContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlXmlWriter.#ctor(System.IO.TextWriter,System.Xaml.XamlSchemaContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlXmlWriter(System::IO::TextWriter ^ textWriter, System::Xaml::XamlSchemaContext ^ schemaContext);" />
      <MemberSignature Language="F#" Value="new System.Xaml.XamlXmlWriter : System.IO.TextWriter * System.Xaml.XamlSchemaContext -&gt; System.Xaml.XamlXmlWriter" Usage="new System.Xaml.XamlXmlWriter (textWriter, schemaContext)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="textWriter" Type="System.IO.TextWriter" />
        <Parameter Name="schemaContext" Type="System.Xaml.XamlSchemaContext" />
      </Parameters>
      <Docs>
        <param name="textWriter">
          <see cref="T:System.IO.TextWriter" /> Który zapisuje dane wyjściowe.</param>
        <param name="schemaContext">Kontekst schematu XAML dla edytora XAML.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Xaml.XamlXmlWriter" /> klasę z <see cref="T:System.IO.TextWriter" /> podstawy.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="textWriter" /> lub <paramref name="schemaContext" /> jest <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlXmlWriter (System.Xml.XmlWriter xmlWriter, System.Xaml.XamlSchemaContext schemaContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xml.XmlWriter xmlWriter, class System.Xaml.XamlSchemaContext schemaContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlXmlWriter.#ctor(System.Xml.XmlWriter,System.Xaml.XamlSchemaContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlXmlWriter(System::Xml::XmlWriter ^ xmlWriter, System::Xaml::XamlSchemaContext ^ schemaContext);" />
      <MemberSignature Language="F#" Value="new System.Xaml.XamlXmlWriter : System.Xml.XmlWriter * System.Xaml.XamlSchemaContext -&gt; System.Xaml.XamlXmlWriter" Usage="new System.Xaml.XamlXmlWriter (xmlWriter, schemaContext)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="xmlWriter" Type="System.Xml.XmlWriter" />
        <Parameter Name="schemaContext" Type="System.Xaml.XamlSchemaContext" />
      </Parameters>
      <Docs>
        <param name="xmlWriter">
          <see cref="T:System.Xml.XmlWriter" /> Który zapisuje dane wyjściowe.</param>
        <param name="schemaContext">Kontekst schematu XAML dla edytora XAML.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Xaml.XamlXmlWriter" /> klasę z <see cref="T:System.Xml.XmlWriter" /> podstawy.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="xmlWriter" /> lub <paramref name="schemaContext" /> jest <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlXmlWriter (System.IO.Stream stream, System.Xaml.XamlSchemaContext schemaContext, System.Xaml.XamlXmlWriterSettings settings);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream stream, class System.Xaml.XamlSchemaContext schemaContext, class System.Xaml.XamlXmlWriterSettings settings) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlXmlWriter.#ctor(System.IO.Stream,System.Xaml.XamlSchemaContext,System.Xaml.XamlXmlWriterSettings)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlXmlWriter(System::IO::Stream ^ stream, System::Xaml::XamlSchemaContext ^ schemaContext, System::Xaml::XamlXmlWriterSettings ^ settings);" />
      <MemberSignature Language="F#" Value="new System.Xaml.XamlXmlWriter : System.IO.Stream * System.Xaml.XamlSchemaContext * System.Xaml.XamlXmlWriterSettings -&gt; System.Xaml.XamlXmlWriter" Usage="new System.Xaml.XamlXmlWriter (stream, schemaContext, settings)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="schemaContext" Type="System.Xaml.XamlSchemaContext" />
        <Parameter Name="settings" Type="System.Xaml.XamlXmlWriterSettings" />
      </Parameters>
      <Docs>
        <param name="stream">Strumień do zapisania.</param>
        <param name="schemaContext">Kontekst schematu XAML dla edytora XAML.</param>
        <param name="settings">Wystąpienie <see cref="T:System.Xaml.XamlXmlWriterSettings" />, której zwykle ma określonych ustawień innych niż domyślne.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Xaml.XamlXmlWriter" /> klasy ze strumienia za pomocą obiektu składnika zapisywania ustawień.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Nie należy zmieniać wartości `settings` obiektu po <xref:System.Xaml.XamlXmlWriter> wystąpienia jest tworzony. <xref:System.Xaml.XamlXmlWriter> Nie można zaktualizować wewnętrznego ustawienia na podstawie wartości ustawień, które są modyfikowalne w czasie wykonywania. Ustawienia należy podać tylko inicjowania. Ustawienia aktywnego Autor XAML można scalić za pomocą jednego z <xref:System.Xaml.XamlXmlWriterSettings> sygnatury konstruktora; następnie należy zastosować te ustawienia do nowego wystąpienia modułu zapisującego XAML zamiast próby dostosować istniejący.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="stream" /> lub <paramref name="schemaContext" /> jest <see langword="null" /></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlXmlWriter (System.IO.TextWriter textWriter, System.Xaml.XamlSchemaContext schemaContext, System.Xaml.XamlXmlWriterSettings settings);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.TextWriter textWriter, class System.Xaml.XamlSchemaContext schemaContext, class System.Xaml.XamlXmlWriterSettings settings) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlXmlWriter.#ctor(System.IO.TextWriter,System.Xaml.XamlSchemaContext,System.Xaml.XamlXmlWriterSettings)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlXmlWriter(System::IO::TextWriter ^ textWriter, System::Xaml::XamlSchemaContext ^ schemaContext, System::Xaml::XamlXmlWriterSettings ^ settings);" />
      <MemberSignature Language="F#" Value="new System.Xaml.XamlXmlWriter : System.IO.TextWriter * System.Xaml.XamlSchemaContext * System.Xaml.XamlXmlWriterSettings -&gt; System.Xaml.XamlXmlWriter" Usage="new System.Xaml.XamlXmlWriter (textWriter, schemaContext, settings)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="textWriter" Type="System.IO.TextWriter" />
        <Parameter Name="schemaContext" Type="System.Xaml.XamlSchemaContext" />
        <Parameter Name="settings" Type="System.Xaml.XamlXmlWriterSettings" />
      </Parameters>
      <Docs>
        <param name="textWriter">
          <see cref="T:System.IO.TextWriter" /> Który zapisuje dane wyjściowe.</param>
        <param name="schemaContext">Kontekst schematu XAML dla edytora XAML.</param>
        <param name="settings">Wystąpienie <see cref="T:System.Xaml.XamlXmlWriterSettings" />, której zwykle ma określonych ustawień innych niż domyślne.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Xaml.XamlXmlWriter" /> klasę z <see cref="T:System.IO.TextWriter" /> przy użyciu obiektu ustawień.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Nie należy zmieniać wartości `settings` obiektu po <xref:System.Xaml.XamlXmlWriter> wystąpienia jest tworzony. <xref:System.Xaml.XamlXmlWriter> Nie można zaktualizować wewnętrznego ustawienia na podstawie wartości ustawień, które są modyfikowalne w czasie wykonywania. Ustawienia należy podać tylko inicjowania. Ustawienia aktywnego Autor XAML można scalić za pomocą jednego z <xref:System.Xaml.XamlXmlWriterSettings> sygnatury konstruktora; następnie należy zastosować te ustawienia do nowego wystąpienia modułu zapisującego XAML zamiast próby dostosować istniejący.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="textWriter" /> lub <paramref name="schemaContext" /> jest <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlXmlWriter (System.Xml.XmlWriter xmlWriter, System.Xaml.XamlSchemaContext schemaContext, System.Xaml.XamlXmlWriterSettings settings);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xml.XmlWriter xmlWriter, class System.Xaml.XamlSchemaContext schemaContext, class System.Xaml.XamlXmlWriterSettings settings) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlXmlWriter.#ctor(System.Xml.XmlWriter,System.Xaml.XamlSchemaContext,System.Xaml.XamlXmlWriterSettings)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlXmlWriter(System::Xml::XmlWriter ^ xmlWriter, System::Xaml::XamlSchemaContext ^ schemaContext, System::Xaml::XamlXmlWriterSettings ^ settings);" />
      <MemberSignature Language="F#" Value="new System.Xaml.XamlXmlWriter : System.Xml.XmlWriter * System.Xaml.XamlSchemaContext * System.Xaml.XamlXmlWriterSettings -&gt; System.Xaml.XamlXmlWriter" Usage="new System.Xaml.XamlXmlWriter (xmlWriter, schemaContext, settings)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="xmlWriter" Type="System.Xml.XmlWriter" />
        <Parameter Name="schemaContext" Type="System.Xaml.XamlSchemaContext" />
        <Parameter Name="settings" Type="System.Xaml.XamlXmlWriterSettings" />
      </Parameters>
      <Docs>
        <param name="xmlWriter">
          <see cref="T:System.Xml.XmlWriter" /> Który zapisuje dane wyjściowe.</param>
        <param name="schemaContext">Kontekst schematu XAML dla edytora XAML.</param>
        <param name="settings">Wystąpienie <see cref="T:System.Xaml.XamlXmlWriterSettings" />, której zwykle ma określonych ustawień innych niż domyślne.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Xaml.XamlXmlWriter" /> klasę z <see cref="T:System.Xml.XmlWriter" /> przy użyciu obiektu ustawień.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Nie należy zmieniać wartości `settings` obiektu po <xref:System.Xaml.XamlXmlWriter> wystąpienia jest tworzony. <xref:System.Xaml.XamlXmlWriter> Nie można zaktualizować wewnętrznego ustawienia na podstawie wartości ustawień, które są modyfikowalne w czasie wykonywania. Ustawienia należy podać tylko inicjowania. Ustawienia aktywnego Autor XAML można scalić za pomocą jednego z <xref:System.Xaml.XamlXmlWriterSettings> sygnatury konstruktora; następnie należy zastosować te ustawienia do nowego wystąpienia modułu zapisującego XAML zamiast próby dostosować istniejący.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="xmlWriter" /> lub <paramref name="schemaContext" /> jest <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlXmlWriter.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="xamlXmlWriter.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <see langword="true" /> Aby zwolnić zasoby niezarządzane; w przeciwnym razie <see langword="false" />.</param>
        <summary>Zwalnia zasoby niezarządzane używane przez <see cref="T:System.Xaml.XamlXmlWriter" /> i opcjonalnie zwalnia zasoby zarządzane.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta implementacja wywołuje `Close` na podstawowych <xref:System.Xml.XmlWriter> lub <xref:System.IO.TextWriter> w przypadkach, gdzie <xref:System.Xaml.XamlXmlWriterSettings.CloseOutput%2A> jest `true` w żadnym dostarczony <xref:System.Xaml.XamlXmlWriterSettings>. W przeciwnym razie wywołuje <xref:System.Xaml.XamlXmlWriter.Flush%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Flush">
      <MemberSignature Language="C#" Value="public void Flush ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Flush() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlXmlWriter.Flush" />
      <MemberSignature Language="VB.NET" Value="Public Sub Flush ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Flush();" />
      <MemberSignature Language="F#" Value="member this.Flush : unit -&gt; unit" Usage="xamlXmlWriter.Flush " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Wywołania <see langword="Flush" /> metody podstawowych <see cref="T:System.Xml.XmlWriter" /> lub <see cref="T:System.IO.TextWriter" />, który zapisuje wszystko, co jest obecnie w buforze, a następnie zamyka modułu zapisującego.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `Dispose` Zachowanie <xref:System.Xaml.XamlXmlWriter> mogą być zależne od swoich ustawień edytora, szczególnie przez <xref:System.Xaml.XamlXmlWriterSettings.CloseOutput%2A?displayProperty=nameWithType>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SchemaContext">
      <MemberSignature Language="C#" Value="public override System.Xaml.XamlSchemaContext SchemaContext { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xaml.XamlSchemaContext SchemaContext" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlXmlWriter.SchemaContext" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property SchemaContext As XamlSchemaContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xaml::XamlSchemaContext ^ SchemaContext { System::Xaml::XamlSchemaContext ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SchemaContext : System.Xaml.XamlSchemaContext" Usage="System.Xaml.XamlXmlWriter.SchemaContext" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlSchemaContext</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera kontekst schematu XAML, który to <see cref="T:System.Xaml.XamlXmlWriter" /> używa do przetwarzania.</summary>
        <value>Kontekst schematu XAML tego <see cref="T:System.Xaml.XamlXmlWriter" /> używa do przetwarzania XAML.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Edytor XAML zwykle pobiera kontekst schematu XAML z skojarzone czytnika XAML, który udostępnia strumień węzłów XAML.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Settings">
      <MemberSignature Language="C#" Value="public System.Xaml.XamlXmlWriterSettings Settings { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xaml.XamlXmlWriterSettings Settings" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlXmlWriter.Settings" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Settings As XamlXmlWriterSettings" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xaml::XamlXmlWriterSettings ^ Settings { System::Xaml::XamlXmlWriterSettings ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Settings : System.Xaml.XamlXmlWriterSettings" Usage="System.Xaml.XamlXmlWriter.Settings" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlXmlWriterSettings</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera ustawienia modułu zapisującego, który to <see cref="T:System.Xaml.XamlXmlWriter" /> używa do przetwarzania XAML.</summary>
        <value>Ustawienia modułu zapisującego tego <see cref="T:System.Xaml.XamlXmlWriter" /> używa do przetwarzania XAML.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wartość, której można korzystać z tej właściwości jest kopią i nie odwołanie. Zmiana wartości właściwości w ustawieniach nie wpływa na aktywne <xref:System.Xaml.XamlXmlWriter>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteEndMember">
      <MemberSignature Language="C#" Value="public override void WriteEndMember ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteEndMember() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlXmlWriter.WriteEndMember" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteEndMember ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteEndMember();" />
      <MemberSignature Language="F#" Value="override this.WriteEndMember : unit -&gt; unit" Usage="xamlXmlWriter.WriteEndMember " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zapisuje węzła XAML zakończenia elementu członkowskiego odpowiadającego <see cref="T:System.Xml.XmlWriter" /> lub <see cref="T:System.IO.TextWriter" />. Zgłasza wyjątek, jeśli bieżąca pozycja strumień węzłów XAML nie mieści się w element członkowski lub stan wewnętrzny moduł zapisujący nie obsługuje operacji zapisu do elementu członkowskiego końca.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">Bieżąca pozycja strumień węzłów XAML nie mieści się w element członkowski.</exception>
        <exception cref="T:System.Xaml.XamlXmlWriterException">Bieżący stan modułu zapisywania nie obsługuje zapisu elementu członkowskiego końca.</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteEndObject">
      <MemberSignature Language="C#" Value="public override void WriteEndObject ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteEndObject() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlXmlWriter.WriteEndObject" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteEndObject ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteEndObject();" />
      <MemberSignature Language="F#" Value="override this.WriteEndObject : unit -&gt; unit" Usage="xamlXmlWriter.WriteEndObject " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zapisuje węzła XAML końcowego obiektu odpowiadającego <see cref="T:System.Xml.XmlWriter" /> lub <see cref="T:System.IO.TextWriter" />. Zgłasza wyjątek, jeśli bieżącej pozycji strumienia węzłów XAML, który jest przetwarzana jest niezgodny z zapisu obiektu zakończenia.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 W reprezentacji znacznika i tekst XAML obiekt zakończenia jest tagu zamykającego.  
  
 Najbardziej typowe przypadek where <xref:System.InvalidOperationException> jest generowany przez <xref:System.Xaml.XamlXmlWriter.WriteEndObject%2A> jest podczas bieżącej pozycji strumienia węzłów XAML nadal mieści się członkiem, i <xref:System.Xaml.XamlXmlWriter.WriteEndObject%2A> jest wywoływana.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Bieżąca pozycja strumień węzłów XAML nie jest w zakresie, w którym można zapisać elementu członkowskiego końca.</exception>
        <exception cref="T:System.Xaml.XamlXmlWriterException">Bieżący stan modułu zapisywania nie obsługuje zapisu obiektu zakończenia.</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteGetObject">
      <MemberSignature Language="C#" Value="public override void WriteGetObject ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteGetObject() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlXmlWriter.WriteGetObject" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteGetObject ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteGetObject();" />
      <MemberSignature Language="F#" Value="override this.WriteGetObject : unit -&gt; unit" Usage="xamlXmlWriter.WriteGetObject " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zapisuje obiekt do przypadkach, gdy określony obiekt jest domyślne lub niejawne wartości właściwości, która jest zapisywana, zamiast określany jako wartość obiektu w zestawie wejściowym węzła XAML.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteNamespace">
      <MemberSignature Language="C#" Value="public override void WriteNamespace (System.Xaml.NamespaceDeclaration namespaceDeclaration);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteNamespace(class System.Xaml.NamespaceDeclaration namespaceDeclaration) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlXmlWriter.WriteNamespace(System.Xaml.NamespaceDeclaration)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteNamespace(System::Xaml::NamespaceDeclaration ^ namespaceDeclaration);" />
      <MemberSignature Language="F#" Value="override this.WriteNamespace : System.Xaml.NamespaceDeclaration -&gt; unit" Usage="xamlXmlWriter.WriteNamespace namespaceDeclaration" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="namespaceDeclaration" Type="System.Xaml.NamespaceDeclaration" />
      </Parameters>
      <Docs>
        <param name="namespaceDeclaration">Deklaracja przestrzeni nazw XAML do zapisu.</param>
        <summary>Zapisuje informacje w przestrzeni nazw do odpowiadającego <see cref="T:System.Xml.XmlWriter" /> lub <see cref="T:System.IO.TextWriter" />. Może zgłosić wyjątek dla niektórych stanów; Zamiast tego jednak odroczy zapisywania informacji dotyczących przestrzeni nazw do twórcę i strumień węzłów XAML, który jest przetwarzana przez nią miejsce osiągnie pozycji, gdzie mogą być wstawiane deklaracji przestrzeni nazw XAML.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="namespaceDeclaration" /> jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="namespaceDeclaration" /> nie jest prawidłową deklaracji przestrzeni nazw XAML (ma prefiks wartość null lub pusty identyfikator składnika).</exception>
        <exception cref="T:System.Xaml.XamlXmlWriterException">Bieżący stan modułu zapisywania nie obsługuje zapisywania deklaracji przestrzeni nazw XAML.</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteStartMember">
      <MemberSignature Language="C#" Value="public override void WriteStartMember (System.Xaml.XamlMember property);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteStartMember(class System.Xaml.XamlMember property) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlXmlWriter.WriteStartMember(System.Xaml.XamlMember)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteStartMember (property As XamlMember)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteStartMember(System::Xaml::XamlMember ^ property);" />
      <MemberSignature Language="F#" Value="override this.WriteStartMember : System.Xaml.XamlMember -&gt; unit" Usage="xamlXmlWriter.WriteStartMember property" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="System.Xaml.XamlMember" />
      </Parameters>
      <Docs>
        <param name="property">Identyfikator elementu członkowskiego XAML dla elementu członkowskiego do zapisu.</param>
        <summary>Zapisuje element członkowski węzeł początkowy XAML odpowiadającego <see cref="T:System.Xml.XmlWriter" /> lub <see cref="T:System.IO.TextWriter" />. Zgłasza wyjątek, jeśli bieżącą pozycję strumienia węzłów XAML znajduje się wewnątrz innego elementu członkowskiego lub nie jest w zakresie lub zapisywania stanu, gdzie mogą być zapisywane członka start.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wewnętrzny domyślna logika w <xref:System.Xaml.XamlXmlWriter> najpierw próbuje zapisać element członkowski w formie atrybutu. Jeśli żaden formularz atrybut jest obsługiwany, ponieważ właściwość lub jego wartość nie obsługuje tekstu składni, zamiast tego są zapisywane elementu właściwości. Jeśli właściwość jest właściwością zawartości XAML, `GetObject` przypadek lub właściwości niejawnej, inne formy XAML mogą być zapisane, takich jak tekstu wewnętrznego lub obiektu podrzędnego, który ma pośredniczące elementu członkowskiego.  
  
 Jeśli nigdy nie jest zgłaszany wyjątek zduplikowanego elementu członkowskiego <xref:System.Xaml.XamlXmlWriterSettings.AssumeValidInput%2A> jest `true` w <xref:System.Xaml.XamlXmlWriterSettings> obiektu, który został użyty do ustawienia dla tego <xref:System.Xaml.XamlXmlWriter>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="property" /> jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="property" /> nie jest prawidłową <see cref="T:System.Xaml.XamlMember" />.</exception>
        <exception cref="T:System.InvalidOperationException">Bieżącej pozycji strumienia węzłów XAML jest nieprawidłowa dla zapisywania członka rozpoczęcia.</exception>
        <exception cref="T:System.Xaml.XamlXmlWriterException">Stan modułu zapisywania nie nadaje się do pisania członka rozpoczęcia.  - lub - zapis XAML podjął próbę zapisu zduplikowanego elementu członkowskiego. Ten wyjątek może być bardziej dokładne wyjątek wewnętrzny.</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteStartObject">
      <MemberSignature Language="C#" Value="public override void WriteStartObject (System.Xaml.XamlType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteStartObject(class System.Xaml.XamlType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlXmlWriter.WriteStartObject(System.Xaml.XamlType)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteStartObject (type As XamlType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteStartObject(System::Xaml::XamlType ^ type);" />
      <MemberSignature Language="F#" Value="override this.WriteStartObject : System.Xaml.XamlType -&gt; unit" Usage="xamlXmlWriter.WriteStartObject type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Xaml.XamlType" />
      </Parameters>
      <Docs>
        <param name="type">
          <see cref="T:System.Xaml.XamlType" /> (Identyfikator typu XAML) dla obiekt do zapisania.</param>
        <summary>Zapisuje obiekt węzła początkowego XAML odpowiadającego <see cref="T:System.Xml.XmlWriter" /> lub <see cref="T:System.IO.TextWriter" />. Zgłasza wyjątek, jeśli bieżącą pozycję strumienia węzłów XAML nie jest w zakresie, w którym można zapisać obiektu start lub jeśli moduł zapisujący nie jest w stanie, który można zapisać obiektu rozpoczęcia.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="type" /> jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="type" /> nie jest prawidłową <see cref="T:System.Xaml.XamlType" />.</exception>
        <exception cref="T:System.InvalidOperationException">Bieżąca pozycja strumień węzłów XAML jest nieprawidłowa dla zapisywania nowego obiektu rozpoczęcia.</exception>
        <exception cref="T:System.Xaml.XamlXmlWriterException">Stan modułu zapisywania XAML nie nadaje się do pisania nowy obiekt rozpoczęcia.</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteValue">
      <MemberSignature Language="C#" Value="public override void WriteValue (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteValue(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlXmlWriter.WriteValue(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteValue (value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteValue(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="override this.WriteValue : obj -&gt; unit" Usage="xamlXmlWriter.WriteValue value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">Informacje o wartości do zapisania.</param>
        <summary>Zapisuje wartość węzła XAML odpowiadającego <see cref="T:System.Xml.XmlWriter" /> lub <see cref="T:System.IO.TextWriter" />. Zgłasza wyjątek, jeśli bieżącą pozycję strumienia węzłów XAML jest nieprawidłowa dla zapisu wartości lub moduł zapisujący jest w stanie, w których nie można zapisać wartości.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dane wejściowe `value` może być `null`, który obsługuje jawnie wypisywanie wartości null jako wartość serializacji. To zachowanie używa <xref:System.Xaml.XamlLanguage.Null%2A?displayProperty=nameWithType> definicji jako <xref:System.Xaml.XamlXmlWriter.WriteStartObject%2A> danych wejściowych, a następnie natychmiast wywołuje <xref:System.Xaml.XamlXmlWriter.WriteEndObject%2A>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Bieżąca pozycja strumień węzłów XAML jest nieprawidłowa dla zapisu wartości.</exception>
        <exception cref="T:System.Xaml.XamlXmlWriterException">Stan modułu zapisywania XAML nie obsługuje zapisywania węzła wartości.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="value" /> Określa wartość, która nie jest równa null lub ciągu.</exception>
      </Docs>
    </Member>
  </Members>
</Type>