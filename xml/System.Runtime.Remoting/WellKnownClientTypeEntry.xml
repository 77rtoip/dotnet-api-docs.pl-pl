<Type Name="WellKnownClientTypeEntry" FullName="System.Runtime.Remoting.WellKnownClientTypeEntry">
  <TypeSignature Language="C#" Value="public class WellKnownClientTypeEntry : System.Runtime.Remoting.TypeEntry" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit WellKnownClientTypeEntry extends System.Runtime.Remoting.TypeEntry" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.Remoting.WellKnownClientTypeEntry" />
  <TypeSignature Language="VB.NET" Value="Public Class WellKnownClientTypeEntry&#xA;Inherits TypeEntry" />
  <TypeSignature Language="C++ CLI" Value="public ref class WellKnownClientTypeEntry : System::Runtime::Remoting::TypeEntry" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Runtime.Remoting.TypeEntry</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="c4a7a-101">Wartości blokady dla typu obiektu zarejestrowane na komputerze klienckim jako serwer aktywowany typu (jednego wywołania lub singleton).</span><span class="sxs-lookup"><span data-stu-id="c4a7a-101">Holds values for an object type registered on the client as a server-activated type (single call or singleton).</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4a7a-102">Serwer aktywowany typów może być pojedynczym wywołaniu ani singleton.</span><span class="sxs-lookup"><span data-stu-id="c4a7a-102">Server-activated types can be either single call or singleton.</span></span> <span data-ttu-id="c4a7a-103">Jeśli klasa jest zarejestrowany jako typ jednego wywołania, nowe wystąpienie jest tworzony zawsze, gdy dociera do wywołania klienta.</span><span class="sxs-lookup"><span data-stu-id="c4a7a-103">If a class is registered as a single call type, a new instance is created each time a call from the client arrives.</span></span> <span data-ttu-id="c4a7a-104">Wszystkie wywołania do pojedynczego obiektu są obsługiwane przez jedno wystąpienie tego obiektu, chyba że zostały zebrane tego obiektu.</span><span class="sxs-lookup"><span data-stu-id="c4a7a-104">All calls to a singleton object are handled by one instance of that object, unless that object has been collected.</span></span>  
  
 <span data-ttu-id="c4a7a-105">Każdy klient, który zna identyfikator URI zarejestrowanego obiektu Serwer aktywowany uzyskać serwer proxy dla tego obiektu, rejestrując kanału preferuje go z <xref:System.Runtime.Remoting.Channels.ChannelServices> i aktywowanie obiektu przez wywołanie metody `new` lub <xref:System.Activator.GetObject%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="c4a7a-105">Any client that knows the URI of a registered server-activated object can obtain a proxy for this object by registering the channel it prefers with <xref:System.Runtime.Remoting.Channels.ChannelServices> and activating the object by calling `new` or <xref:System.Activator.GetObject%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="c4a7a-106">Aby aktywować serwer aktywowany obiektu o `new`, najpierw należy zarejestrować typ serwer aktywowany obiektu na kliencie przy użyciu <xref:System.Runtime.Remoting.RemotingConfiguration.RegisterWellKnownClientType%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="c4a7a-106">To activate a server-activated object with `new`, you must first register the server-activated object type on the client using the <xref:System.Runtime.Remoting.RemotingConfiguration.RegisterWellKnownClientType%2A> method.</span></span> <span data-ttu-id="c4a7a-107">Wywołując <xref:System.Runtime.Remoting.RemotingConfiguration.RegisterWellKnownClientType%2A>, w zdalnej infrastrukturze nadanie lokalizacji obiektu zdalnego, dzięki czemu `new` — słowo kluczowe, aby go utworzyć.</span><span class="sxs-lookup"><span data-stu-id="c4a7a-107">By calling <xref:System.Runtime.Remoting.RemotingConfiguration.RegisterWellKnownClientType%2A>, you are giving the remoting infrastructure the location of the remote object, which allows the `new` keyword to create it.</span></span> <span data-ttu-id="c4a7a-108">Jeśli korzystasz z drugiej strony, <xref:System.Activator.GetObject%2A?displayProperty=nameWithType> metodę, aby uaktywnić serwer aktywowany obiektu, należy podać go z adresem URL obiektu jako argument, niezbędne jest nie uprzedniej rejestracji na kliencie.</span><span class="sxs-lookup"><span data-stu-id="c4a7a-108">If, on the other hand, you use the <xref:System.Activator.GetObject%2A?displayProperty=nameWithType> method to activate a server-activated object, you must supply it with the object's URL as an argument, so no prior registration on the client is necessary.</span></span>  
  
 <span data-ttu-id="c4a7a-109">Szczegółowy opis serwer aktywowany obiektów i aktywacji obiektu zdalnego, zobacz [ &#91; \<topic://cpconActivation >&#93;](http://msdn.microsoft.com/library/e90d0c64-00da-4080-ae78-a6c558825c25).</span><span class="sxs-lookup"><span data-stu-id="c4a7a-109">For a detailed description of server-activated objects and remote object activation, see [&#91;\<topic://cpconActivation>&#93;](http://msdn.microsoft.com/library/e90d0c64-00da-4080-ae78-a6c558825c25).</span></span>  
  
   
  
## Examples  
 [!code-cpp[WellKnownClientTypeEntry_Client#1](~/samples/snippets/cpp/VS_Snippets_Remoting/WellKnownClientTypeEntry_Client/CPP/wellknownclienttypeentry_client.cpp#1)]
 [!code-csharp[WellKnownClientTypeEntry_Client#1](~/samples/snippets/csharp/VS_Snippets_Remoting/WellKnownClientTypeEntry_Client/CS/wellknownclienttypeentry_client.cs#1)]
 [!code-vb[WellKnownClientTypeEntry_Client#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WellKnownClientTypeEntry_Client/VB/wellknownclienttypeentry_client.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="M:System.Runtime.Remoting.RemotingConfiguration.RegisterWellKnownClientType(System.Type,System.String)" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="c4a7a-110">Inicjuje nowe wystąpienie klasy <see cref="T:System.Runtime.Remoting.WellKnownClientTypeEntry" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="c4a7a-110">Initializes a new instance of the <see cref="T:System.Runtime.Remoting.WellKnownClientTypeEntry" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WellKnownClientTypeEntry (Type type, string objectUrl);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type type, string objectUrl) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.WellKnownClientTypeEntry.#ctor(System.Type,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WellKnownClientTypeEntry(Type ^ type, System::String ^ objectUrl);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="objectUrl" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="c4a7a-111"><see cref="T:System.Type" /> Typu serwer aktywowany.</span><span class="sxs-lookup"><span data-stu-id="c4a7a-111">The <see cref="T:System.Type" /> of the server-activated type.</span></span></param>
        <param name="objectUrl"><span data-ttu-id="c4a7a-112">Adres URL typu serwer aktywowany.</span><span class="sxs-lookup"><span data-stu-id="c4a7a-112">The URL of the server-activated type.</span></span></param>
        <summary><span data-ttu-id="c4a7a-113">Inicjuje nowe wystąpienie klasy <see cref="T:System.Runtime.Remoting.WellKnownClientTypeEntry" /> z danego typu i adres URL.</span><span class="sxs-lookup"><span data-stu-id="c4a7a-113">Initializes a new instance of the <see cref="T:System.Runtime.Remoting.WellKnownClientTypeEntry" /> class with the given type and URL.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WellKnownClientTypeEntry (string typeName, string assemblyName, string objectUrl);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string typeName, string assemblyName, string objectUrl) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.WellKnownClientTypeEntry.#ctor(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (typeName As String, assemblyName As String, objectUrl As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WellKnownClientTypeEntry(System::String ^ typeName, System::String ^ assemblyName, System::String ^ objectUrl);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="typeName" Type="System.String" />
        <Parameter Name="assemblyName" Type="System.String" />
        <Parameter Name="objectUrl" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="typeName"><span data-ttu-id="c4a7a-114">Nazwa typu typu serwer aktywowany.</span><span class="sxs-lookup"><span data-stu-id="c4a7a-114">The type name of the server-activated type.</span></span></param>
        <param name="assemblyName"><span data-ttu-id="c4a7a-115">Nazwa zestawu typu serwer aktywowany.</span><span class="sxs-lookup"><span data-stu-id="c4a7a-115">The assembly name of the server-activated type.</span></span></param>
        <param name="objectUrl"><span data-ttu-id="c4a7a-116">Adres URL typu serwer aktywowany.</span><span class="sxs-lookup"><span data-stu-id="c4a7a-116">The URL of the server-activated type.</span></span></param>
        <summary><span data-ttu-id="c4a7a-117">Inicjuje nowe wystąpienie klasy <see cref="T:System.Runtime.Remoting.WellKnownClientTypeEntry" /> z danego typu, nazwa zestawu i adres URL.</span><span class="sxs-lookup"><span data-stu-id="c4a7a-117">Initializes a new instance of the <see cref="T:System.Runtime.Remoting.WellKnownClientTypeEntry" /> class with the given type, assembly name, and URL.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplicationUrl">
      <MemberSignature Language="C#" Value="public string ApplicationUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ApplicationUrl" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Remoting.WellKnownClientTypeEntry.ApplicationUrl" />
      <MemberSignature Language="VB.NET" Value="Public Property ApplicationUrl As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ApplicationUrl { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c4a7a-118">Pobiera lub ustawia adres URL aplikacji do aktywowania tego typu.</span><span class="sxs-lookup"><span data-stu-id="c4a7a-118">Gets or sets the URL of the application to activate the type in.</span></span></summary>
        <value><span data-ttu-id="c4a7a-119">Adres URL aplikacji do aktywowania tego typu.</span><span class="sxs-lookup"><span data-stu-id="c4a7a-119">The URL of the application to activate the type in.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4a7a-120">Adres URL aplikacji jest opcjonalna i powinna być ustawiona na adres URL aplikacji odpowiadającego obiektowi serwer aktywowany.</span><span class="sxs-lookup"><span data-stu-id="c4a7a-120">The application URL is optional and should be set to the URL of the application corresponding to the server-activated object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ObjectType">
      <MemberSignature Language="C#" Value="public Type ObjectType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ObjectType" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Remoting.WellKnownClientTypeEntry.ObjectType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ObjectType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ ObjectType { Type ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c4a7a-121">Pobiera <see cref="T:System.Type" /> typu klienta serwer aktywowany.</span><span class="sxs-lookup"><span data-stu-id="c4a7a-121">Gets the <see cref="T:System.Type" /> of the server-activated client type.</span></span></summary>
        <value><span data-ttu-id="c4a7a-122">Pobiera <see cref="T:System.Type" /> typu klienta serwer aktywowany.</span><span class="sxs-lookup"><span data-stu-id="c4a7a-122">Gets the <see cref="T:System.Type" /> of the server-activated client type.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ObjectUrl">
      <MemberSignature Language="C#" Value="public string ObjectUrl { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ObjectUrl" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Remoting.WellKnownClientTypeEntry.ObjectUrl" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ObjectUrl As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ObjectUrl { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c4a7a-123">Pobiera adres URL obiektu klienta serwer aktywowany.</span><span class="sxs-lookup"><span data-stu-id="c4a7a-123">Gets the URL of the server-activated client object.</span></span></summary>
        <value><span data-ttu-id="c4a7a-124">Adres URL obiektu klienta serwer aktywowany.</span><span class="sxs-lookup"><span data-stu-id="c4a7a-124">The URL of the server-activated client object.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.WellKnownClientTypeEntry.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c4a7a-125">Zwraca pełną nazwę typu, nazwa zestawu i adres URL obiektu typu serwer aktywowany klienta jako <see cref="T:System.String" />.</span><span class="sxs-lookup"><span data-stu-id="c4a7a-125">Returns the full type name, assembly name, and object URL of the server-activated client type as a <see cref="T:System.String" />.</span></span></summary>
        <returns><span data-ttu-id="c4a7a-126">Pełna nazwa typu, nazwa zestawu i adresu URL obiektu klienta serwer aktywowany wpisać jako <see cref="T:System.String" />.</span><span class="sxs-lookup"><span data-stu-id="c4a7a-126">The full type name, assembly name, and object URL of the server-activated client type as a <see cref="T:System.String" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4a7a-127">Jeśli <xref:System.Runtime.Remoting.WellKnownClientTypeEntry.ApplicationUrl%2A> nie jest `null`, jest zwracana na końcu ciągu.</span><span class="sxs-lookup"><span data-stu-id="c4a7a-127">If <xref:System.Runtime.Remoting.WellKnownClientTypeEntry.ApplicationUrl%2A> is not `null`, it is returned at the end of the string.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>