<Type Name="SoapServices" FullName="System.Runtime.Remoting.SoapServices">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="bdb11358afe1c6469f61683e16348f99d976133e" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30567709" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class SoapServices" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SoapServices extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.Remoting.SoapServices" />
  <TypeSignature Language="VB.NET" Value="Public Class SoapServices" />
  <TypeSignature Language="C++ CLI" Value="public ref class SoapServices" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Zapewnia kilka metod przy użyciu i publikowania zdalny obiektów w formacie protokołu SOAP.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta klasa sprawia, że żądanie łącza. Wyjątek zabezpieczeń jest generowany, jeśli bezpośredniego obiektu wywołującego nie ma uprawnienia infrastruktury. Zobacz [Linkdemand](~/docs/framework/misc/link-demands.md) Aby uzyskać więcej informacji.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje sposób używania elementów członkowskich w <xref:System.Runtime.Remoting.SoapServices> klasy, które umożliwia konwersję pomiędzy <xref:System.Type> typu obiektu i XML.  
  
 [!code-cpp[System.Runtime.Remoting.SoapServices#100](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Runtime.Remoting.SoapServices/CPP/demo.cpp#100)]
 [!code-csharp[System.Runtime.Remoting.SoapServices#100](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Runtime.Remoting.SoapServices/CS/demo.cs#100)]  
  
 ]]></format>
    </remarks>
    <permission cref="T:System.Security.Permissions.SecurityPermission">do pracy z kodem infrastruktury. Żądanie wartość: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; Wartość uprawnienia: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.Infrastructure" /></permission>
  </Docs>
  <Members>
    <Member MemberName="CodeXmlNamespaceForClrTypeNamespace">
      <MemberSignature Language="C#" Value="public static string CodeXmlNamespaceForClrTypeNamespace (string typeNamespace, string assemblyName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string CodeXmlNamespaceForClrTypeNamespace(string typeNamespace, string assemblyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.SoapServices.CodeXmlNamespaceForClrTypeNamespace(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CodeXmlNamespaceForClrTypeNamespace (typeNamespace As String, assemblyName As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ CodeXmlNamespaceForClrTypeNamespace(System::String ^ typeNamespace, System::String ^ assemblyName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeNamespace" Type="System.String" />
        <Parameter Name="assemblyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="typeNamespace">Przestrzeń nazw, który ma być zakodowane.</param>
        <param name="assemblyName">Nazwa zestawu, który ma być stałe.</param>
        <summary>Zwraca nazwy przestrzeni nazw typu środowiska uruchomieniowego języka wspólnego z podanego obszaru nazw i zestawu nazw.</summary>
        <returns>Wspólnego języka środowiska uruchomieniowego przestrzeni nazw nazwa typu z podanego obszaru nazw i zestawu nazw.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bieżącej metody jest używany przez narzędzie SoapSuds i .NET Framework, można utworzyć nazwy przestrzeni nazw XML dla typu obiektu środowiska uruchomieniowego języka wspólnego.  
  
 Aby uzyskać więcej informacji o SoapSuds, zobacz [Soapsuds narzędzia (Soapsuds.exe)](http://msdn.microsoft.com/library/40f6f8c8-b80c-4e9f-a920-31bcd0cf45c5).  
  
   
  
## Examples  
 Poniższy przykładowy kod przedstawia sposób użycia tej metody. Ten przykładowy kod jest częścią większego przykładu udostępnionego dla <xref:System.Runtime.Remoting.SoapServices> klasy.  
  
 [!code-cpp[System.Runtime.Remoting.SoapServices#101](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Runtime.Remoting.SoapServices/CPP/demo.cpp#101)]
 [!code-csharp[System.Runtime.Remoting.SoapServices#101](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Runtime.Remoting.SoapServices/CS/demo.cs#101)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="assemblyName" /> i <paramref name="typeNamespace" /> parametry są albo <see langword="null" /> lub jest pusty.</exception>
        <exception cref="T:System.Security.SecurityException">Bezpośredniego obiektu wywołującego nie ma uprawnienia infrastruktury.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">do pracy z kodem infrastruktury. Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.Infrastructure" /></permission>
      </Docs>
    </Member>
    <Member MemberName="DecodeXmlNamespaceForClrTypeNamespace">
      <MemberSignature Language="C#" Value="public static bool DecodeXmlNamespaceForClrTypeNamespace (string inNamespace, out string typeNamespace, out string assemblyName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool DecodeXmlNamespaceForClrTypeNamespace(string inNamespace, [out] string&amp; typeNamespace, [out] string&amp; assemblyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.SoapServices.DecodeXmlNamespaceForClrTypeNamespace(System.String,System.String@,System.String@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DecodeXmlNamespaceForClrTypeNamespace (inNamespace As String, ByRef typeNamespace As String, ByRef assemblyName As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool DecodeXmlNamespaceForClrTypeNamespace(System::String ^ inNamespace, [Runtime::InteropServices::Out] System::String ^ % typeNamespace, [Runtime::InteropServices::Out] System::String ^ % assemblyName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inNamespace" Type="System.String" />
        <Parameter Name="typeNamespace" Type="System.String&amp;" RefType="out" />
        <Parameter Name="assemblyName" Type="System.String&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="inNamespace">Wspólnego języka środowiska uruchomieniowego przestrzeń nazw.</param>
        <param name="typeNamespace">Po powrocie z tej metody zawiera <see cref="T:System.String" /> zawierający nazwę dekodowane przestrzeni nazw. Ten parametr jest przekazywany niezainicjowany.</param>
        <param name="assemblyName">Po powrocie z tej metody zawiera <see cref="T:System.String" /> przechowuje nazwy zestawu zdekodowana. Ten parametr jest przekazywany niezainicjowany.</param>
        <summary>Dekoduje nazwy przestrzeni nazw i zestawu XML z nazw podana środowiska uruchomieniowego języka wspólnego.</summary>
        <returns>
          <see langword="true" /> Jeśli nazwy przestrzeni nazw i zestawu zostały pomyślnie dekodowane; w przeciwnym razie <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 .NET Framework analizy strumienia XML musi wiedzieć, jak przekonwertować odczytany ze strumienia do typowych środowiska uruchomieniowego języka XML. Informacja o tym, jak powinna generować programu .NET Framework i analizy strumienia XML są przechowywane w atrybutach niestandardowych, które znajdują się w <xref:System.Runtime.Remoting.Metadata> przestrzeni nazw. Istnieją dwa sposoby, aby określić te informacje w pliku konfiguracji: jawnie określając mapowania lub określając typy obiektu, który wstępnie. Bieżąca metoda obsługuje pobieranie takie mapowania.  
  
   
  
## Examples  
 Poniższy przykładowy kod przedstawia sposób użycia tej metody. Ten przykładowy kod jest częścią większego przykładu udostępnionego dla <xref:System.Runtime.Remoting.SoapServices> klasy.  
  
 [!code-cpp[System.Runtime.Remoting.SoapServices#102](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Runtime.Remoting.SoapServices/CPP/demo.cpp#102)]
 [!code-csharp[System.Runtime.Remoting.SoapServices#102](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Runtime.Remoting.SoapServices/CS/demo.cs#102)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="inNamespace" /> Parametr jest <see langword="null" /> lub jest pusty.</exception>
        <exception cref="T:System.Security.SecurityException">Bezpośredniego obiektu wywołującego nie ma uprawnienia infrastruktury.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">do pracy z kodem infrastruktury. Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.Infrastructure" /></permission>
      </Docs>
    </Member>
    <Member MemberName="GetInteropFieldTypeAndNameFromXmlAttribute">
      <MemberSignature Language="C#" Value="public static void GetInteropFieldTypeAndNameFromXmlAttribute (Type containingType, string xmlAttribute, string xmlNamespace, out Type type, out string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GetInteropFieldTypeAndNameFromXmlAttribute(class System.Type containingType, string xmlAttribute, string xmlNamespace, [out] class System.Type&amp; type, [out] string&amp; name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.SoapServices.GetInteropFieldTypeAndNameFromXmlAttribute(System.Type,System.String,System.String,System.Type@,System.String@)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void GetInteropFieldTypeAndNameFromXmlAttribute(Type ^ containingType, System::String ^ xmlAttribute, System::String ^ xmlNamespace, [Runtime::InteropServices::Out] Type ^ % type, [Runtime::InteropServices::Out] System::String ^ % name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingType" Type="System.Type" />
        <Parameter Name="xmlAttribute" Type="System.String" />
        <Parameter Name="xmlNamespace" Type="System.String" />
        <Parameter Name="type" Type="System.Type&amp;" RefType="out" />
        <Parameter Name="name" Type="System.String&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="containingType">
          <see cref="T:System.Type" /> Obiektu, który zawiera pole.</param>
        <param name="xmlAttribute">Nazwa atrybutu XML typu pola.</param>
        <param name="xmlNamespace">Typ pola przestrzeni nazw XML.</param>
        <param name="type">Po powrocie z tej metody zawiera <see cref="T:System.Type" /> pola. Ten parametr jest przekazywany niezainicjowany.</param>
        <param name="name">Po powrocie z tej metody zawiera <see cref="T:System.String" /> zawierający nazwę pola. Ten parametr jest przekazywany niezainicjowany.</param>
        <summary>Pobiera typ pola z nazwa atrybutu XML, obszar nazw i <see cref="T:System.Type" /> krawędzi zawierającego go obiektu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Danego typu obiektu zawierającego atrybut XML i przestrzeni nazw XML, który jest do odczytu w programie .NET Framework, bieżąca metoda zwraca rzeczywiste typowych nazwa pola środowiska wykonawczego języka i typ pola. .NET Framework następnie używa tych informacji do wypełnienia pola z danymi odczytywać strumień XML.  
  
   
  
## Examples  
 Poniższy przykładowy kod przedstawia sposób użycia tej metody. Ten przykładowy kod jest częścią większego przykładu udostępnionego dla <xref:System.Runtime.Remoting.SoapServices> klasy.  
  
 [!code-cpp[System.Runtime.Remoting.SoapServices#150](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Runtime.Remoting.SoapServices/CPP/demo.cpp#150)]
 [!code-csharp[System.Runtime.Remoting.SoapServices#150](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Runtime.Remoting.SoapServices/CS/demo.cs#150)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">Bezpośredniego obiektu wywołującego nie ma uprawnienia infrastruktury.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">do pracy z kodem infrastruktury. Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.Infrastructure" /></permission>
      </Docs>
    </Member>
    <Member MemberName="GetInteropFieldTypeAndNameFromXmlElement">
      <MemberSignature Language="C#" Value="public static void GetInteropFieldTypeAndNameFromXmlElement (Type containingType, string xmlElement, string xmlNamespace, out Type type, out string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GetInteropFieldTypeAndNameFromXmlElement(class System.Type containingType, string xmlElement, string xmlNamespace, [out] class System.Type&amp; type, [out] string&amp; name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.SoapServices.GetInteropFieldTypeAndNameFromXmlElement(System.Type,System.String,System.String,System.Type@,System.String@)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void GetInteropFieldTypeAndNameFromXmlElement(Type ^ containingType, System::String ^ xmlElement, System::String ^ xmlNamespace, [Runtime::InteropServices::Out] Type ^ % type, [Runtime::InteropServices::Out] System::String ^ % name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingType" Type="System.Type" />
        <Parameter Name="xmlElement" Type="System.String" />
        <Parameter Name="xmlNamespace" Type="System.String" />
        <Parameter Name="type" Type="System.Type&amp;" RefType="out" />
        <Parameter Name="name" Type="System.String&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="containingType">
          <see cref="T:System.Type" /> Obiektu, który zawiera pole.</param>
        <param name="xmlElement">Nazwa elementu XML pola.</param>
        <param name="xmlNamespace">Typ pola przestrzeni nazw XML.</param>
        <param name="type">Po powrocie z tej metody zawiera <see cref="T:System.Type" /> pola. Ten parametr jest przekazywany niezainicjowany.</param>
        <param name="name">Po powrocie z tej metody zawiera <see cref="T:System.String" /> zawierający nazwę pola. Ten parametr jest przekazywany niezainicjowany.</param>
        <summary>Pobiera <see cref="T:System.Type" /> i nazwy pola podana nazwa elementu XML, obszar nazw i zawierający typu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Danego typu obiektu zawierającego — element XML i przestrzeni nazw XML, który jest do odczytu w programie .NET Framework, ta metoda zwraca rzeczywiste typowych nazwa pola środowiska wykonawczego języka i typ pola. .NET Framework następnie używa tych informacji do wypełnienia pola z danymi odczytywać strumień XML.  
  
   
  
## Examples  
 Poniższy przykładowy kod przedstawia sposób użycia tej metody. Ten przykładowy kod jest częścią większego przykładu udostępnionego dla <xref:System.Runtime.Remoting.SoapServices> klasy.  
  
 [!code-cpp[System.Runtime.Remoting.SoapServices#150](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Runtime.Remoting.SoapServices/CPP/demo.cpp#150)]
 [!code-csharp[System.Runtime.Remoting.SoapServices#150](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Runtime.Remoting.SoapServices/CS/demo.cs#150)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">Bezpośredniego obiektu wywołującego nie ma uprawnienia infrastruktury.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">do pracy z kodem infrastruktury. Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.Infrastructure" /></permission>
      </Docs>
    </Member>
    <Member MemberName="GetInteropTypeFromXmlElement">
      <MemberSignature Language="C#" Value="public static Type GetInteropTypeFromXmlElement (string xmlElement, string xmlNamespace);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Type GetInteropTypeFromXmlElement(string xmlElement, string xmlNamespace) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.SoapServices.GetInteropTypeFromXmlElement(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetInteropTypeFromXmlElement (xmlElement As String, xmlNamespace As String) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Type ^ GetInteropTypeFromXmlElement(System::String ^ xmlElement, System::String ^ xmlNamespace);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xmlElement" Type="System.String" />
        <Parameter Name="xmlNamespace" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="xmlElement">Nazwa elementu XML typu nieznanego obiektu.</param>
        <param name="xmlNamespace">Nieznany typ obiektu przestrzeni nazw XML.</param>
        <summary>Pobiera <see cref="T:System.Type" /> która powinna być używana podczas deserializacji nierozpoznany typ obiektu z danym nazwa elementu XML i przestrzeni nazw.</summary>
        <returns>
          <see cref="T:System.Type" /> Obiektu skojarzone z określoną nazwę elementu XML i przestrzeni nazw.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bieżąca metoda zwraca skonfigurowana przy użyciu wartości <xref:System.Runtime.Remoting.SoapServices.RegisterInteropXmlElement%2A> i <xref:System.Runtime.Remoting.SoapServices.PreLoad%2A>.  
  
   
  
## Examples  
 Poniższy przykładowy kod przedstawia sposób użycia tej metody. Ten przykładowy kod jest częścią większego przykładu udostępnionego dla <xref:System.Runtime.Remoting.SoapServices> klasy.  
  
 [!code-cpp[System.Runtime.Remoting.SoapServices#160](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Runtime.Remoting.SoapServices/CPP/demo.cpp#160)]
 [!code-csharp[System.Runtime.Remoting.SoapServices#160](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Runtime.Remoting.SoapServices/CS/demo.cs#160)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">Bezpośredniego obiektu wywołującego nie ma uprawnienia infrastruktury.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">do pracy z kodem infrastruktury. Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.Infrastructure" /></permission>
      </Docs>
    </Member>
    <Member MemberName="GetInteropTypeFromXmlType">
      <MemberSignature Language="C#" Value="public static Type GetInteropTypeFromXmlType (string xmlType, string xmlTypeNamespace);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Type GetInteropTypeFromXmlType(string xmlType, string xmlTypeNamespace) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.SoapServices.GetInteropTypeFromXmlType(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetInteropTypeFromXmlType (xmlType As String, xmlTypeNamespace As String) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Type ^ GetInteropTypeFromXmlType(System::String ^ xmlType, System::String ^ xmlTypeNamespace);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xmlType" Type="System.String" />
        <Parameter Name="xmlTypeNamespace" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="xmlType">Typ XML typu nieznanego obiektu.</param>
        <param name="xmlTypeNamespace">Przestrzeń nazw typu XML typu nieznanego obiektu.</param>
        <summary>Pobiera obiekt <see cref="T:System.Type" /> która powinna być używana podczas deserializacji obiektu typu nierozpoznanego obiektu o podana nazwa typu XML i przestrzeni nazw.</summary>
        <returns>
          <see cref="T:System.Type" /> Obiektu skojarzone z określonego pliku XML, wpisz nazwę i przestrzeń nazw.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bieżąca metoda zwraca skonfigurowana przy użyciu wartości <xref:System.Runtime.Remoting.SoapServices.RegisterInteropXmlType%2A> i <xref:System.Runtime.Remoting.SoapServices.PreLoad%2A>.  
  
   
  
## Examples  
 Poniższy przykładowy kod przedstawia sposób użycia tej metody. Ten przykładowy kod jest częścią większego przykładu udostępnionego dla <xref:System.Runtime.Remoting.SoapServices> klasy.  
  
 [!code-cpp[System.Runtime.Remoting.SoapServices#160](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Runtime.Remoting.SoapServices/CPP/demo.cpp#160)]
 [!code-csharp[System.Runtime.Remoting.SoapServices#160](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Runtime.Remoting.SoapServices/CS/demo.cs#160)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">Bezpośredniego obiektu wywołującego nie ma uprawnienia infrastruktury.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">do pracy z kodem infrastruktury. Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.Infrastructure" /></permission>
      </Docs>
    </Member>
    <Member MemberName="GetSoapActionFromMethodBase">
      <MemberSignature Language="C#" Value="public static string GetSoapActionFromMethodBase (System.Reflection.MethodBase mb);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetSoapActionFromMethodBase(class System.Reflection.MethodBase mb) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.SoapServices.GetSoapActionFromMethodBase(System.Reflection.MethodBase)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetSoapActionFromMethodBase (mb As MethodBase) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetSoapActionFromMethodBase(System::Reflection::MethodBase ^ mb);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mb" Type="System.Reflection.MethodBase" />
      </Parameters>
      <Docs>
        <param name="mb">
          <see cref="T:System.Reflection.MethodBase" /> Zawierający metody, dla którego wnioskuje się SOAPAction.</param>
        <summary>Zwraca wartość atrybutu SOAPAction skojarzone z metody określonej w danym <see cref="T:System.Reflection.MethodBase" />.</summary>
        <returns>Wartość atrybutu SOAPAction skojarzone z metody określonej w danym <see cref="T:System.Reflection.MethodBase" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli dany <xref:System.Reflection.MethodBase> nie został zarejestrowany z dowolną wartością SOAPAction <xref:System.Runtime.Remoting.SoapServices.GetSoapActionFromMethodBase%2A> metoda zwróci wartość SOAPAction automatycznie w pamięci podręcznej z <xref:System.Reflection.MethodBase>.  
  
   
  
## Examples  
 Poniższy przykładowy kod przedstawia sposób użycia tej metody. Ten przykładowy kod jest częścią większego przykładu udostępnionego dla <xref:System.Runtime.Remoting.SoapServices> klasy.  
  
 [!code-cpp[System.Runtime.Remoting.SoapServices#140](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Runtime.Remoting.SoapServices/CPP/demo.cpp#140)]
 [!code-csharp[System.Runtime.Remoting.SoapServices#140](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Runtime.Remoting.SoapServices/CS/demo.cs#140)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">Bezpośredniego obiektu wywołującego nie ma uprawnienia infrastruktury.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">do pracy z kodem infrastruktury. Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.Infrastructure" /></permission>
      </Docs>
    </Member>
    <Member MemberName="GetTypeAndMethodNameFromSoapAction">
      <MemberSignature Language="C#" Value="public static bool GetTypeAndMethodNameFromSoapAction (string soapAction, out string typeName, out string methodName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool GetTypeAndMethodNameFromSoapAction(string soapAction, [out] string&amp; typeName, [out] string&amp; methodName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.SoapServices.GetTypeAndMethodNameFromSoapAction(System.String,System.String@,System.String@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetTypeAndMethodNameFromSoapAction (soapAction As String, ByRef typeName As String, ByRef methodName As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool GetTypeAndMethodNameFromSoapAction(System::String ^ soapAction, [Runtime::InteropServices::Out] System::String ^ % typeName, [Runtime::InteropServices::Out] System::String ^ % methodName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="soapAction" Type="System.String" />
        <Parameter Name="typeName" Type="System.String&amp;" RefType="out" />
        <Parameter Name="methodName" Type="System.String&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="soapAction">Element SOAPAction metody, dla którego wystąpiło nazwy typu i metody.</param>
        <param name="typeName">Po powrocie z tej metody zawiera <see cref="T:System.String" /> zawierający nazwę typu metody zagrożona. Ten parametr jest przekazywany niezainicjowany.</param>
        <param name="methodName">Po powrocie z tej metody zawiera <see cref="T:System.String" /> zawierający nazwę metody metody zagrożona. Ten parametr jest przekazywany niezainicjowany.</param>
        <summary>Określa nazwę metody i typu metody skojarzone z określoną wartością SOAPAction.</summary>
        <returns>
          <see langword="true" /> Jeśli nazwa metody i typu pomyślnie zostały odzyskane; w przeciwnym razie <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `true` Jeśli wyszukiwanie nazw typu i metody zostały pomyślnie; w przeciwnym razie `false`.  
  
   
  
## Examples  
 Poniższy przykładowy kod przedstawia sposób użycia tej metody. Ten przykładowy kod jest częścią większego przykładu udostępnionego dla <xref:System.Runtime.Remoting.SoapServices> klasy.  
  
 [!code-cpp[System.Runtime.Remoting.SoapServices#140](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Runtime.Remoting.SoapServices/CPP/demo.cpp#140)]
 [!code-csharp[System.Runtime.Remoting.SoapServices#140](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Runtime.Remoting.SoapServices/CS/demo.cs#140)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.Remoting.RemotingException">Wartość atrybutu SOAPAction nie pierwszym i ostatnim znakiem cudzysłowu.</exception>
        <exception cref="T:System.Security.SecurityException">Bezpośredniego obiektu wywołującego nie ma uprawnienia infrastruktury.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">do pracy z kodem infrastruktury. Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.Infrastructure" /></permission>
      </Docs>
    </Member>
    <Member MemberName="GetXmlElementForInteropType">
      <MemberSignature Language="C#" Value="public static bool GetXmlElementForInteropType (Type type, out string xmlElement, out string xmlNamespace);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool GetXmlElementForInteropType(class System.Type type, [out] string&amp; xmlElement, [out] string&amp; xmlNamespace) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.SoapServices.GetXmlElementForInteropType(System.Type,System.String@,System.String@)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool GetXmlElementForInteropType(Type ^ type, [Runtime::InteropServices::Out] System::String ^ % xmlElement, [Runtime::InteropServices::Out] System::String ^ % xmlNamespace);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="xmlElement" Type="System.String&amp;" RefType="out" />
        <Parameter Name="xmlNamespace" Type="System.String&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="type">Obiekt <see cref="T:System.Type" /> dla żądanego zostały nazwy elementu i przestrzeń nazw XML.</param>
        <param name="xmlElement">Po powrocie z tej metody zawiera <see cref="T:System.String" /> przechowuje nazwa elementu XML typu określonego obiektu. Ten parametr jest przekazywany niezainicjowany.</param>
        <param name="xmlNamespace">Po powrocie z tej metody zawiera <see cref="T:System.String" /> zawierający nazwę przestrzeni nazw XML typu określonego obiektu. Ten parametr jest przekazywany niezainicjowany.</param>
        <summary>Zwraca informacje o elementach XML, który ma być używany podczas serializowania danego typu.</summary>
        <returns>
          <see langword="true" /> Jeśli wymagane wartości zostały ustawione oflagowane z <see cref="T:System.Runtime.Remoting.Metadata.SoapTypeAttribute" />; w przeciwnym razie <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykładowy kod przedstawia sposób użycia tej metody. Ten przykładowy kod jest częścią większego przykładu udostępnionego dla <xref:System.Runtime.Remoting.SoapServices> klasy.  
  
 [!code-cpp[System.Runtime.Remoting.SoapServices#103](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Runtime.Remoting.SoapServices/CPP/demo.cpp#103)]
 [!code-csharp[System.Runtime.Remoting.SoapServices#103](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Runtime.Remoting.SoapServices/CS/demo.cs#103)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">Bezpośredniego obiektu wywołującego nie ma uprawnienia infrastruktury.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">do pracy z kodem infrastruktury. Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.Infrastructure" /></permission>
        <altmember cref="M:System.Runtime.Remoting.SoapServices.GetInteropFieldTypeAndNameFromXmlElement(System.Type,System.String,System.String,System.Type@,System.String@)" />
      </Docs>
    </Member>
    <Member MemberName="GetXmlNamespaceForMethodCall">
      <MemberSignature Language="C#" Value="public static string GetXmlNamespaceForMethodCall (System.Reflection.MethodBase mb);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetXmlNamespaceForMethodCall(class System.Reflection.MethodBase mb) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.SoapServices.GetXmlNamespaceForMethodCall(System.Reflection.MethodBase)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetXmlNamespaceForMethodCall (mb As MethodBase) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetXmlNamespaceForMethodCall(System::Reflection::MethodBase ^ mb);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mb" Type="System.Reflection.MethodBase" />
      </Parameters>
      <Docs>
        <param name="mb">
          <see cref="T:System.Reflection.MethodBase" /> Metody, dla którego zażądano przestrzeni nazw XML.</param>
        <summary>Pobiera obszar nazw XML używane podczas zdalnego wywoływania metody określonej w danym <see cref="T:System.Reflection.MethodBase" />.</summary>
        <returns>Przestrzeń nazw XML, używane podczas zdalnego wywoływania określonej metody.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykładowy kod przedstawia sposób użycia tej metody. Ten przykładowy kod jest częścią większego przykładu udostępnionego dla <xref:System.Runtime.Remoting.SoapServices> klasy.  
  
 [!code-cpp[System.Runtime.Remoting.SoapServices#105](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Runtime.Remoting.SoapServices/CPP/demo.cpp#105)]
 [!code-csharp[System.Runtime.Remoting.SoapServices#105](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Runtime.Remoting.SoapServices/CS/demo.cs#105)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">Bezpośredniego obiektu wywołującego nie ma uprawnienia infrastruktury.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">do pracy z kodem infrastruktury. Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.Infrastructure" /></permission>
      </Docs>
    </Member>
    <Member MemberName="GetXmlNamespaceForMethodResponse">
      <MemberSignature Language="C#" Value="public static string GetXmlNamespaceForMethodResponse (System.Reflection.MethodBase mb);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetXmlNamespaceForMethodResponse(class System.Reflection.MethodBase mb) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.SoapServices.GetXmlNamespaceForMethodResponse(System.Reflection.MethodBase)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetXmlNamespaceForMethodResponse (mb As MethodBase) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetXmlNamespaceForMethodResponse(System::Reflection::MethodBase ^ mb);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mb" Type="System.Reflection.MethodBase" />
      </Parameters>
      <Docs>
        <param name="mb">
          <see cref="T:System.Reflection.MethodBase" /> Metody, dla którego zażądano przestrzeni nazw XML.</param>
        <summary>Pobiera obszar nazw XML, używany podczas generowania odpowiedzi na zdalne wywołanie do metody określonej w danym <see cref="T:System.Reflection.MethodBase" />.</summary>
        <returns>Przestrzeń nazw XML, używany podczas generowania odpowiedzi na wywołanie metody zdalnego.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykładowy kod przedstawia sposób użycia tej metody. Ten przykładowy kod jest częścią większego przykładu udostępnionego dla <xref:System.Runtime.Remoting.SoapServices> klasy.  
  
 [!code-cpp[System.Runtime.Remoting.SoapServices#105](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Runtime.Remoting.SoapServices/CPP/demo.cpp#105)]
 [!code-csharp[System.Runtime.Remoting.SoapServices#105](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Runtime.Remoting.SoapServices/CS/demo.cs#105)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">Bezpośredniego obiektu wywołującego nie ma uprawnienia infrastruktury.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">do pracy z kodem infrastruktury. Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.Infrastructure" /></permission>
      </Docs>
    </Member>
    <Member MemberName="GetXmlTypeForInteropType">
      <MemberSignature Language="C#" Value="public static bool GetXmlTypeForInteropType (Type type, out string xmlType, out string xmlTypeNamespace);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool GetXmlTypeForInteropType(class System.Type type, [out] string&amp; xmlType, [out] string&amp; xmlTypeNamespace) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.SoapServices.GetXmlTypeForInteropType(System.Type,System.String@,System.String@)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool GetXmlTypeForInteropType(Type ^ type, [Runtime::InteropServices::Out] System::String ^ % xmlType, [Runtime::InteropServices::Out] System::String ^ % xmlTypeNamespace);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="xmlType" Type="System.String&amp;" RefType="out" />
        <Parameter Name="xmlTypeNamespace" Type="System.String&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="type">Obiekt <see cref="T:System.Type" /> dla żądanego zostały nazwy elementu i przestrzeń nazw XML.</param>
        <param name="xmlType">Typ XML określonego obiektu <see cref="T:System.Type" />.</param>
        <param name="xmlTypeNamespace">Przestrzeń nazw XML typu określonego obiektu <see cref="T:System.Type" />.</param>
        <summary>Zwraca informacje o typie XML, który ma być używany podczas serializowania danego <see cref="T:System.Type" />.</summary>
        <returns>
          <see langword="true" /> Jeśli wymagane wartości zostały ustawione oflagowane z <see cref="T:System.Runtime.Remoting.Metadata.SoapTypeAttribute" />; w przeciwnym razie <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykładowy kod przedstawia sposób użycia tej metody. Ten przykładowy kod jest częścią większego przykładu udostępnionego dla <xref:System.Runtime.Remoting.SoapServices> klasy.  
  
 [!code-cpp[System.Runtime.Remoting.SoapServices#104](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Runtime.Remoting.SoapServices/CPP/demo.cpp#104)]
 [!code-csharp[System.Runtime.Remoting.SoapServices#104](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Runtime.Remoting.SoapServices/CS/demo.cs#104)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">Bezpośredniego obiektu wywołującego nie ma uprawnienia infrastruktury.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">do pracy z kodem infrastruktury. Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.Infrastructure" /></permission>
        <altmember cref="M:System.Runtime.Remoting.SoapServices.GetInteropFieldTypeAndNameFromXmlElement(System.Type,System.String,System.String,System.Type@,System.String@)" />
      </Docs>
    </Member>
    <Member MemberName="IsClrTypeNamespace">
      <MemberSignature Language="C#" Value="public static bool IsClrTypeNamespace (string namespaceString);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsClrTypeNamespace(string namespaceString) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.SoapServices.IsClrTypeNamespace(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsClrTypeNamespace (namespaceString As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsClrTypeNamespace(System::String ^ namespaceString);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="namespaceString" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="namespaceString">Przestrzeń nazw do zaewidencjonowania środowisko uruchomieniowe języka wspólnego.</param>
        <summary>Zwraca wartość logiczną, wskazującą, czy określonego obszaru nazw jest kodu natywnego do środowiska CLR.</summary>
        <returns>
          <see langword="true" /> w przypadku danej przestrzeni nazw z kodu natywnego do środowiska CLR; w przeciwnym razie <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bieżącej metody jest używany przez narzędzie SoapSuds do ustalenia, czy obszar nazw XML reprezentuje typu środowiska uruchomieniowego języka wspólnego lub typ z system plików wykonywalnych języka wspólnego z systemem innym niż.  
  
 Aby uzyskać więcej informacji o SoapSuds, zobacz [Soapsuds narzędzia (Soapsuds.exe)](http://msdn.microsoft.com/library/40f6f8c8-b80c-4e9f-a920-31bcd0cf45c5).  
  
   
  
## Examples  
 Poniższy przykładowy kod przedstawia sposób użycia tej metody. Ten przykładowy kod jest częścią większego przykładu udostępnionego dla <xref:System.Runtime.Remoting.SoapServices> klasy.  
  
 [!code-cpp[System.Runtime.Remoting.SoapServices#106](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Runtime.Remoting.SoapServices/CPP/demo.cpp#106)]
 [!code-csharp[System.Runtime.Remoting.SoapServices#106](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Runtime.Remoting.SoapServices/CS/demo.cs#106)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">Bezpośredniego obiektu wywołującego nie ma uprawnienia infrastruktury.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">do pracy z kodem infrastruktury. Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.Infrastructure" /></permission>
      </Docs>
    </Member>
    <Member MemberName="IsSoapActionValidForMethodBase">
      <MemberSignature Language="C#" Value="public static bool IsSoapActionValidForMethodBase (string soapAction, System.Reflection.MethodBase mb);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsSoapActionValidForMethodBase(string soapAction, class System.Reflection.MethodBase mb) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.SoapServices.IsSoapActionValidForMethodBase(System.String,System.Reflection.MethodBase)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsSoapActionValidForMethodBase (soapAction As String, mb As MethodBase) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsSoapActionValidForMethodBase(System::String ^ soapAction, System::Reflection::MethodBase ^ mb);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="soapAction" Type="System.String" />
        <Parameter Name="mb" Type="System.Reflection.MethodBase" />
      </Parameters>
      <Docs>
        <param name="soapAction">Element SOAPAction sprawdzania zgodności danego <see cref="T:System.Reflection.MethodBase" />.</param>
        <param name="mb">
          <see cref="T:System.Reflection.MethodBase" /> Określonego atrybutu SOAPAction jest porównywane.</param>
        <summary>Określa, czy określony SOAPAction jest możliwa do danego <see cref="T:System.Reflection.MethodBase" />.</summary>
        <returns>
          <see langword="true" /> Jeśli określony element SOAPAction jest akceptowalne dla danego <see cref="T:System.Reflection.MethodBase" />; w przeciwnym razie <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykładowy kod przedstawia sposób użycia tej metody. Ten przykładowy kod jest częścią większego przykładu udostępnionego dla <xref:System.Runtime.Remoting.SoapServices> klasy.  
  
 [!code-cpp[System.Runtime.Remoting.SoapServices#140](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Runtime.Remoting.SoapServices/CPP/demo.cpp#140)]
 [!code-csharp[System.Runtime.Remoting.SoapServices#140](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Runtime.Remoting.SoapServices/CS/demo.cs#140)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">Bezpośredniego obiektu wywołującego nie ma uprawnienia infrastruktury.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">do pracy z kodem infrastruktury. Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.Infrastructure" /></permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="PreLoad">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Preloads określonych typów, na podstawie wartości w <see cref="T:System.Runtime.Remoting.Metadata.SoapTypeAttribute" /> zastosowane do typów.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="PreLoad">
      <MemberSignature Language="C#" Value="public static void PreLoad (System.Reflection.Assembly assembly);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void PreLoad(class System.Reflection.Assembly assembly) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.SoapServices.PreLoad(System.Reflection.Assembly)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void PreLoad(System::Reflection::Assembly ^ assembly);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assembly" Type="System.Reflection.Assembly" />
      </Parameters>
      <Docs>
        <param name="assembly">
          <see cref="T:System.Reflection.Assembly" /> Dla każdego typu do wywołania <see cref="M:System.Runtime.Remoting.SoapServices.PreLoad(System.Type)" />.</param>
        <summary>Preloads co <see cref="T:System.Type" /> w określonym <see cref="T:System.Reflection.Assembly" /> z informacji zamieszczonych w <see cref="T:System.Runtime.Remoting.Metadata.SoapTypeAttribute" /> skojarzone z każdym typem.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 .NET Framework analizy strumienia XML musi wiedzieć, jak przekonwertować odczytany ze strumienia do typowych środowiska uruchomieniowego języka XML. Informacja o tym, jak powinna generować programu .NET Framework i analizy strumienia XML są przechowywane w atrybutach niestandardowych, które znajdują się w <xref:System.Runtime.Remoting.Metadata> przestrzeni nazw. Istnieją dwa sposoby, aby określić te informacje w pliku konfiguracji: jawnie określając mapowania lub określając typy obiektu, który wstępnie. Atrybuty niestandardowe są odczytywane podczas wstępnego ładowania i zawarte w nich informacje są udostępniane analizator protokołu SOAP.  
  
   
  
## Examples  
 Poniższy przykładowy kod przedstawia sposób użycia tej metody. Ten przykładowy kod jest częścią większego przykładu udostępnionego dla <xref:System.Runtime.Remoting.SoapServices> klasy.  
  
 [!code-cpp[System.Runtime.Remoting.SoapServices#120](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Runtime.Remoting.SoapServices/CPP/demo.cpp#120)]
 [!code-csharp[System.Runtime.Remoting.SoapServices#120](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Runtime.Remoting.SoapServices/CS/demo.cs#120)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">Bezpośredniego obiektu wywołującego nie ma uprawnienia infrastruktury.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">do pracy z kodem infrastruktury. Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.Infrastructure" /></permission>
      </Docs>
    </Member>
    <Member MemberName="PreLoad">
      <MemberSignature Language="C#" Value="public static void PreLoad (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void PreLoad(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.SoapServices.PreLoad(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void PreLoad(Type ^ type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">
          <see cref="T:System.Type" /> Wstępnie.</param>
        <summary>Preloads danego <see cref="T:System.Type" /> na podstawie wartości w <see cref="T:System.Runtime.Remoting.Metadata.SoapTypeAttribute" /> w typie.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 .NET Framework analizy strumienia XML musi wiedzieć, jak przekonwertować odczytany ze strumienia do typowych środowiska uruchomieniowego języka XML. Informacja o tym, jak powinna generować programu .NET Framework i analizy strumienia XML są przechowywane w atrybutach niestandardowych, które znajdują się w <xref:System.Runtime.Remoting.Metadata> przestrzeni nazw. Istnieją dwa sposoby, aby określić te informacje w pliku konfiguracji: jawnie określając mapowania lub określając typy obiektu, który wstępnie. Atrybuty niestandardowe są odczytywane podczas wstępnego ładowania i zawarte w nich informacje są udostępniane analizator protokołu SOAP.  
  
   
  
## Examples  
 Poniższy przykładowy kod przedstawia sposób użycia tej metody. Ten przykładowy kod jest częścią większego przykładu udostępnionego dla <xref:System.Runtime.Remoting.SoapServices> klasy.  
  
 [!code-cpp[System.Runtime.Remoting.SoapServices#121](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Runtime.Remoting.SoapServices/CPP/demo.cpp#121)]
 [!code-csharp[System.Runtime.Remoting.SoapServices#121](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Runtime.Remoting.SoapServices/CS/demo.cs#121)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">Bezpośredniego obiektu wywołującego nie ma uprawnienia infrastruktury.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">do pracy z kodem infrastruktury. Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.Infrastructure" /></permission>
      </Docs>
    </Member>
    <Member MemberName="RegisterInteropXmlElement">
      <MemberSignature Language="C#" Value="public static void RegisterInteropXmlElement (string xmlElement, string xmlNamespace, Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RegisterInteropXmlElement(string xmlElement, string xmlNamespace, class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.SoapServices.RegisterInteropXmlElement(System.String,System.String,System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RegisterInteropXmlElement(System::String ^ xmlElement, System::String ^ xmlNamespace, Type ^ type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xmlElement" Type="System.String" />
        <Parameter Name="xmlNamespace" Type="System.String" />
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="xmlElement">Nazwa elementu XML do użycia w deserializacji.</param>
        <param name="xmlNamespace">Przestrzeń nazw XML do użycia w deserializacji.</param>
        <param name="type">Środowiska wykonawczego <see cref="T:System.Type" /> do użycia w deserializacji.</param>
        <summary>Kojarzy dany nazwa elementu XML i przestrzeni nazw z typu run-time, które mają być używane do deserializacji.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykładowy kod przedstawia sposób użycia tej metody. Ten przykładowy kod jest częścią większego przykładu udostępnionego dla <xref:System.Runtime.Remoting.SoapServices> klasy.  
  
 [!code-cpp[System.Runtime.Remoting.SoapServices#180](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Runtime.Remoting.SoapServices/CPP/demo.cpp#180)]
 [!code-csharp[System.Runtime.Remoting.SoapServices#180](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Runtime.Remoting.SoapServices/CS/demo.cs#180)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">Bezpośredniego obiektu wywołującego nie ma uprawnienia infrastruktury.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">do pracy z kodem infrastruktury. Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.Infrastructure" /></permission>
        <altmember cref="M:System.Runtime.Remoting.SoapServices.GetInteropFieldTypeAndNameFromXmlElement(System.Type,System.String,System.String,System.Type@,System.String@)" />
      </Docs>
    </Member>
    <Member MemberName="RegisterInteropXmlType">
      <MemberSignature Language="C#" Value="public static void RegisterInteropXmlType (string xmlType, string xmlTypeNamespace, Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RegisterInteropXmlType(string xmlType, string xmlTypeNamespace, class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.SoapServices.RegisterInteropXmlType(System.String,System.String,System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RegisterInteropXmlType(System::String ^ xmlType, System::String ^ xmlTypeNamespace, Type ^ type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xmlType" Type="System.String" />
        <Parameter Name="xmlTypeNamespace" Type="System.String" />
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="xmlType">Typ XML do użycia w deserializacji.</param>
        <param name="xmlTypeNamespace">Przestrzeń nazw XML do użycia w deserializacji.</param>
        <param name="type">Środowiska wykonawczego <see cref="T:System.Type" /> do użycia w deserializacji.</param>
        <summary>Kojarzy dany Nazwa typu XML i przestrzeni nazw z typu run-time, które mają być używane do deserializacji.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykładowy kod przedstawia sposób użycia tej metody. Ten przykładowy kod jest częścią większego przykładu udostępnionego dla <xref:System.Runtime.Remoting.SoapServices> klasy.  
  
 [!code-cpp[System.Runtime.Remoting.SoapServices#190](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Runtime.Remoting.SoapServices/CPP/demo.cpp#190)]
 [!code-csharp[System.Runtime.Remoting.SoapServices#190](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Runtime.Remoting.SoapServices/CS/demo.cs#190)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">Bezpośredniego obiektu wywołującego nie ma uprawnienia infrastruktury.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">do pracy z kodem infrastruktury. Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.Infrastructure" /></permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="RegisterSoapActionForMethodBase">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Kojarzy wartość atrybutu SOAPAction z dostarczonych <see cref="T:System.Reflection.MethodBase" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="RegisterSoapActionForMethodBase">
      <MemberSignature Language="C#" Value="public static void RegisterSoapActionForMethodBase (System.Reflection.MethodBase mb);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RegisterSoapActionForMethodBase(class System.Reflection.MethodBase mb) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.SoapServices.RegisterSoapActionForMethodBase(System.Reflection.MethodBase)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RegisterSoapActionForMethodBase (mb As MethodBase)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RegisterSoapActionForMethodBase(System::Reflection::MethodBase ^ mb);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mb" Type="System.Reflection.MethodBase" />
      </Parameters>
      <Docs>
        <param name="mb">
          <see cref="T:System.Reflection.MethodBase" /> Metody do skojarzenia z SOAPAction z nim w pamięci podręcznej.</param>
        <summary>Kojarzy określonego <see cref="T:System.Reflection.MethodBase" /> z SOAPAction z nim w pamięci podręcznej.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 SOAPAction określonej metody znajduje się w <xref:System.Runtime.Remoting.Metadata.SoapMethodAttribute.SoapAction%2A?displayProperty=nameWithType> właściwości lub jest odczytywana przesyłania. Bieżąca metoda kojarzy SOAPAction z <xref:System.Reflection.MethodBase> do użycia w wychwytywanie kanału.  
  
 Pola nagłówka żądania SOAPAction HTTP świadczy o zamiarze żądania SOAP HTTP. Wartość jest identyfikatorem URI identyfikujący celem. SOAP nie nakłada żadnych ograniczeń na format lub szczegółowością identyfikatora URI lub że jest rozpoznawana. Klient HTTP musi używać tego pola nagłówka, podczas wystawiania żądania SOAP HTTP.  
  
   
  
## Examples  
 Poniższy przykładowy kod przedstawia sposób użycia tej metody. Ten przykładowy kod jest częścią większego przykładu udostępnionego dla <xref:System.Runtime.Remoting.SoapServices> klasy.  
  
 [!code-cpp[System.Runtime.Remoting.SoapServices#170](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Runtime.Remoting.SoapServices/CPP/demo.cpp#170)]
 [!code-csharp[System.Runtime.Remoting.SoapServices#170](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Runtime.Remoting.SoapServices/CS/demo.cs#170)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">Bezpośredniego obiektu wywołującego nie ma uprawnienia infrastruktury.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">do pracy z kodem infrastruktury. Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.Infrastructure" /></permission>
      </Docs>
    </Member>
    <Member MemberName="RegisterSoapActionForMethodBase">
      <MemberSignature Language="C#" Value="public static void RegisterSoapActionForMethodBase (System.Reflection.MethodBase mb, string soapAction);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RegisterSoapActionForMethodBase(class System.Reflection.MethodBase mb, string soapAction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.SoapServices.RegisterSoapActionForMethodBase(System.Reflection.MethodBase,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RegisterSoapActionForMethodBase (mb As MethodBase, soapAction As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RegisterSoapActionForMethodBase(System::Reflection::MethodBase ^ mb, System::String ^ soapAction);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mb" Type="System.Reflection.MethodBase" />
        <Parameter Name="soapAction" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="mb">
          <see cref="T:System.Reflection.MethodBase" /> Do skojarzenia z podanych SOAPAction.</param>
        <param name="soapAction">Wartość atrybutu SOAPAction do skojarzenia z danym <see cref="T:System.Reflection.MethodBase" />.</param>
        <summary>Kojarzy podana wartość atrybutu SOAPAction z danym <see cref="T:System.Reflection.MethodBase" /> do użycia w wychwytywanie kanału.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Pola nagłówka żądania SOAPAction HTTP świadczy o zamiarze żądania SOAP HTTP. Wartość jest identyfikatorem URI identyfikujący celem. SOAP nie nakłada żadnych ograniczeń na format lub szczegółowością identyfikatora URI lub że jest rozpoznawana. Klient HTTP musi używać tego pola nagłówka, podczas wystawiania żądania SOAP HTTP.  
  
   
  
## Examples  
 Poniższy przykładowy kod przedstawia sposób użycia tej metody. Ten przykładowy kod jest częścią większego przykładu udostępnionego dla <xref:System.Runtime.Remoting.SoapServices> klasy.  
  
 [!code-cpp[System.Runtime.Remoting.SoapServices#170](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Runtime.Remoting.SoapServices/CPP/demo.cpp#170)]
 [!code-csharp[System.Runtime.Remoting.SoapServices#170](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Runtime.Remoting.SoapServices/CS/demo.cs#170)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">Bezpośredniego obiektu wywołującego nie ma uprawnienia infrastruktury.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">do pracy z kodem infrastruktury. Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.Infrastructure" /></permission>
      </Docs>
    </Member>
    <Member MemberName="XmlNsForClrType">
      <MemberSignature Language="C#" Value="public static string XmlNsForClrType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property string XmlNsForClrType" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Remoting.SoapServices.XmlNsForClrType" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property XmlNsForClrType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::String ^ XmlNsForClrType { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera prefiks przestrzeni nazw XML dla popularnych typów środowiska wykonawczego języka.</summary>
        <value>Prefiks przestrzeni nazw XML dla popularnych typów środowiska wykonawczego języka.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Protokoły WSDL i SOAP kodowanie wspólnego języka środowiska uruchomieniowego klasy do przestrzeni nazw XML. Bieżącą właściwość określa format dla obszarów nazw XML. Wszystkie przestrzenie nazw XML dla typowych klasy środowiska uruchomieniowego języka rozpoczynać się od <xref:System.String> zwracające bieżącej właściwości.  
  
   
  
## Examples  
 Poniższy przykładowy kod przedstawia sposób użycia tej właściwości. Ten przykładowy kod jest częścią większego przykładu udostępnionego dla <xref:System.Runtime.Remoting.SoapServices> klasy.  
  
 [!code-cpp[System.Runtime.Remoting.SoapServices#130](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Runtime.Remoting.SoapServices/CPP/demo.cpp#130)]
 [!code-csharp[System.Runtime.Remoting.SoapServices#130](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Runtime.Remoting.SoapServices/CS/demo.cs#130)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">Bezpośredniego obiektu wywołującego nie ma uprawnienia infrastruktury.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">do pracy z kodem infrastruktury. Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.Infrastructure" /></permission>
      </Docs>
    </Member>
    <Member MemberName="XmlNsForClrTypeWithAssembly">
      <MemberSignature Language="C#" Value="public static string XmlNsForClrTypeWithAssembly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property string XmlNsForClrTypeWithAssembly" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Remoting.SoapServices.XmlNsForClrTypeWithAssembly" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property XmlNsForClrTypeWithAssembly As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::String ^ XmlNsForClrTypeWithAssembly { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera prefiks przestrzeni nazw XML domyślne, które mają być używane dla formatu XML, kodowania typowe klasy środowiska uruchomieniowego języka, która zawiera zestaw, ale nie natywnego przestrzeni nazw.</summary>
        <value>Prefiks przestrzeni nazw XML domyślne, które mają być używane dla formatu XML kodowanie wspólnego języka środowiska uruchomieniowego klasy z zestawu, ale bez natywnego przestrzeni nazw.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Protokoły WSDL i SOAP kodowanie wspólnego języka środowiska uruchomieniowego klasy do przestrzeni nazw XML. Bieżącą właściwość określa format dla obszarów nazw XML. Jeśli wspólna klasa środowiska uruchomieniowego języka zestawu, ale bez przestrzeni nazw, bieżącą właściwość zwraca przestrzeni nazw XML domyślny, który jest używany.  
  
   
  
## Examples  
 Poniższy przykładowy kod przedstawia sposób użycia tej właściwości. Ten przykładowy kod jest częścią większego przykładu udostępnionego dla <xref:System.Runtime.Remoting.SoapServices> klasy.  
  
 [!code-cpp[System.Runtime.Remoting.SoapServices#131](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Runtime.Remoting.SoapServices/CPP/demo.cpp#131)]
 [!code-csharp[System.Runtime.Remoting.SoapServices#131](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Runtime.Remoting.SoapServices/CS/demo.cs#131)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">Bezpośredniego obiektu wywołującego nie ma uprawnienia infrastruktury.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">do pracy z kodem infrastruktury. Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.Infrastructure" /></permission>
      </Docs>
    </Member>
    <Member MemberName="XmlNsForClrTypeWithNs">
      <MemberSignature Language="C#" Value="public static string XmlNsForClrTypeWithNs { get; }" />
      <MemberSignature Language="ILAsm" Value=".property string XmlNsForClrTypeWithNs" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Remoting.SoapServices.XmlNsForClrTypeWithNs" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property XmlNsForClrTypeWithNs As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::String ^ XmlNsForClrTypeWithNs { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera prefiks przestrzeni nazw XML, która powinna być używana dla formatu XML kodowanie typowe klasy środowiska uruchomieniowego języka, która jest częścią pliku mscorlib.dll.</summary>
        <value>Prefiks przestrzeni nazw XML, która powinna być używana dla formatu XML kodowanie typowe klasy środowiska uruchomieniowego języka, która jest częścią pliku mscorlib.dll.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Protokoły WSDL i SOAP kodowanie wspólnego języka środowiska uruchomieniowego klasy do przestrzeni nazw XML. Bieżącą właściwość określa format dla obszarów nazw XML. Jeśli wspólna klasa środowiska uruchomieniowego języka jest częścią zestawu mscorlib, używana jest przestrzeń nazw XML zwrócony przez bieżącą właściwość.  
  
   
  
## Examples  
 Poniższy przykładowy kod przedstawia sposób użycia tej właściwości. Ten przykładowy kod jest częścią większego przykładu udostępnionego dla <xref:System.Runtime.Remoting.SoapServices> klasy.  
  
 [!code-cpp[System.Runtime.Remoting.SoapServices#132](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Runtime.Remoting.SoapServices/CPP/demo.cpp#132)]
 [!code-csharp[System.Runtime.Remoting.SoapServices#132](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Runtime.Remoting.SoapServices/CS/demo.cs#132)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">Bezpośredniego obiektu wywołującego nie ma uprawnienia infrastruktury.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">do pracy z kodem infrastruktury. Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.Infrastructure" /></permission>
      </Docs>
    </Member>
    <Member MemberName="XmlNsForClrTypeWithNsAndAssembly">
      <MemberSignature Language="C#" Value="public static string XmlNsForClrTypeWithNsAndAssembly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property string XmlNsForClrTypeWithNsAndAssembly" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Remoting.SoapServices.XmlNsForClrTypeWithNsAndAssembly" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property XmlNsForClrTypeWithNsAndAssembly As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::String ^ XmlNsForClrTypeWithNsAndAssembly { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera prefiks przestrzeni nazw XML domyślne, które mają być używane dla formatu XML kodowanie klasy środowiska uruchomieniowego języka wspólnego, która ma wspólnej przestrzeni nazw środowiska uruchomieniowego języka oraz zestawu.</summary>
        <value>Prefiks przestrzeni nazw XML domyślne, które mają być używane dla formatu XML kodowanie klasy środowiska uruchomieniowego języka wspólnego, która ma wspólnej przestrzeni nazw środowiska uruchomieniowego języka oraz zestawu.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Protokoły WSDL i SOAP kodowanie wspólnego języka środowiska uruchomieniowego klasy do przestrzeni nazw XML. Bieżącą właściwość określa format dla obszarów nazw XML. Jeśli wspólna klasa środowiska uruchomieniowego języka zestawu i wspólnej przestrzeni nazw środowiska uruchomieniowego języka, bieżącą właściwość zwraca przestrzeni nazw XML domyślny, który jest używany.  
  
   
  
## Examples  
 Poniższy przykładowy kod przedstawia sposób użycia tej właściwości. Ten przykładowy kod jest częścią większego przykładu udostępnionego dla <xref:System.Runtime.Remoting.SoapServices> klasy.  
  
 [!code-cpp[System.Runtime.Remoting.SoapServices#133](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Runtime.Remoting.SoapServices/CPP/demo.cpp#133)]
 [!code-csharp[System.Runtime.Remoting.SoapServices#133](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Runtime.Remoting.SoapServices/CS/demo.cs#133)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">Bezpośredniego obiektu wywołującego nie ma uprawnienia infrastruktury.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">do pracy z kodem infrastruktury. Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.Infrastructure" /></permission>
      </Docs>
    </Member>
  </Members>
</Type>