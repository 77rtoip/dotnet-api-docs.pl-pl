<Type Name="IRemotingTypeInfo" FullName="System.Runtime.Remoting.IRemotingTypeInfo">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="2caf7dca10135c7ca5dfcb8ab8462f37e9266876" />
    <Meta Name="ms.sourcegitcommit" Value="d877ae76e9e11799bf919379507239e2c4072742" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="08/09/2018" />
    <Meta Name="ms.locfileid" Value="39755339" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IRemotingTypeInfo" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IRemotingTypeInfo" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.Remoting.IRemotingTypeInfo" />
  <TypeSignature Language="VB.NET" Value="Public Interface IRemotingTypeInfo" />
  <TypeSignature Language="C++ CLI" Value="public interface class IRemotingTypeInfo" />
  <TypeSignature Language="F#" Value="type IRemotingTypeInfo = interface" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Zawiera informacje o typie dla obiektu.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten interfejs umożliwia informacje typu niestandardowego, które odbywa się wraz z <xref:System.Runtime.Remoting.ObjRef> obiektów.  
  
   
  
## Examples  
 [!code-cpp[Remoting.ObjRef#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Remoting.ObjRef/CPP/client.cpp#1)]
 [!code-csharp[Remoting.ObjRef#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Remoting.ObjRef/CS/client.cs#1)]
 [!code-vb[Remoting.ObjRef#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Remoting.ObjRef/VB/client.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="CanCastTo">
      <MemberSignature Language="C#" Value="public bool CanCastTo (Type fromType, object o);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanCastTo(class System.Type fromType, object o) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.IRemotingTypeInfo.CanCastTo(System.Type,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function CanCastTo (fromType As Type, o As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool CanCastTo(Type ^ fromType, System::Object ^ o);" />
      <MemberSignature Language="F#" Value="abstract member CanCastTo : Type * obj -&gt; bool" Usage="iRemotingTypeInfo.CanCastTo (fromType, o)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fromType" Type="System.Type" />
        <Parameter Name="o" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="fromType">Typ rzutowany na.</param>
        <param name="o">Obiekt, na którym ma zostać sprawdzona rzutowania.</param>
        <summary>Sprawdza, czy serwer proxy, który reprezentuje typ określonego obiektu może być rzutowany na typ reprezentowany przez <see cref="T:System.Runtime.Remoting.IRemotingTypeInfo" /> interfejsu.</summary>
        <returns>
          <see langword="true" /> Jeśli zostanie wykonane pomyślnie cast; w przeciwnym razie <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bieżąca metoda jest wywoływana, gdy podejmowana jest próba w celu rzutowania z serwera proxy generowany na podstawie <xref:System.Runtime.Remoting.ObjRef>. Ta metoda przyjmuje uwagę informacje o typie w <xref:System.Runtime.Remoting.ObjRef>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">Bezpośredniego obiektu wywołującego wywołuje tę funkcję za pomocą odwołań do interfejsu i nie ma uprawnień do infrastruktury.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">za działanie z kodem infrastruktury. Zapotrzebowanie wartość: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; Wartość uprawnienia: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.Infrastructure" /></permission>
      </Docs>
    </Member>
    <Member MemberName="TypeName">
      <MemberSignature Language="C#" Value="public string TypeName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TypeName" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Remoting.IRemotingTypeInfo.TypeName" />
      <MemberSignature Language="VB.NET" Value="Public Property TypeName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ TypeName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.TypeName : string with get, set" Usage="System.Runtime.Remoting.IRemotingTypeInfo.TypeName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>set: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia w pełni kwalifikowana nazwa typu obiektu serwera w <see cref="T:System.Runtime.Remoting.ObjRef" />.</summary>
        <value>W pełni kwalifikowana nazwa typu obiektu serwera w <see cref="T:System.Runtime.Remoting.ObjRef" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 [!code-cpp[Remoting.ObjRef#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Remoting.ObjRef/CPP/client.cpp#1)]
 [!code-csharp[Remoting.ObjRef#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Remoting.ObjRef/CS/client.cs#1)]
 [!code-vb[Remoting.ObjRef#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Remoting.ObjRef/VB/client.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">Bezpośredniego obiektu wywołującego wywołuje tę funkcję za pomocą odwołań do interfejsu i nie ma uprawnień do infrastruktury.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">za działanie z kodem infrastruktury. Zapotrzebowanie wartość: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; Wartość uprawnienia: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.Infrastructure" /></permission>
      </Docs>
    </Member>
  </Members>
</Type>