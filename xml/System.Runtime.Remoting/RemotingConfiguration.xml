<Type Name="RemotingConfiguration" FullName="System.Runtime.Remoting.RemotingConfiguration">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="b654cf7aaff3b7f435c3a0fac58f6c81a15372e4" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30567730" />
  </Metadata>
  <TypeSignature Language="C#" Value="public static class RemotingConfiguration" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit RemotingConfiguration extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.Remoting.RemotingConfiguration" />
  <TypeSignature Language="VB.NET" Value="Public Class RemotingConfiguration" />
  <TypeSignature Language="C++ CLI" Value="public ref class RemotingConfiguration abstract sealed" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Zapewnia różne metody statyczne do konfigurowania w zdalnej infrastrukturze.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="ApplicationId">
      <MemberSignature Language="C#" Value="public static string ApplicationId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property string ApplicationId" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Remoting.RemotingConfiguration.ApplicationId" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ApplicationId As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::String ^ ApplicationId { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera identyfikator aktualnie realizowanej aplikacji.</summary>
        <value>A <see cref="T:System.String" /> zawierający identyfikator aktualnie realizowanej aplikacji.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Identyfikator aplikacji jest dołączany na początku na identyfikator URI obiekty utworzone przez aktualnie realizowanej aplikacji.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">Bezpośredniego obiektu wywołującego nie ma uprawnienia infrastruktury.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">do pracy z kodem infrastruktury. Żądanie wartość: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; Wartość uprawnienia: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.Infrastructure" /></permission>
      </Docs>
    </Member>
    <Member MemberName="ApplicationName">
      <MemberSignature Language="C#" Value="public static string ApplicationName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property string ApplicationName" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Remoting.RemotingConfiguration.ApplicationName" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property ApplicationName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::String ^ ApplicationName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia nazwę aplikacji usług zdalnych.</summary>
        <value>Nazwa aplikacji usług zdalnych.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Nazwa aplikacji można ustawić tylko raz, za pośrednictwem właściwości current lub pliku konfiguracji. Jeśli aplikacja działa w środowisku hostowanej, takich jak Internet Information Services (IIS), ta wartość może być już ustawiono (zazwyczaj do katalogu wirtualnego). Zwraca bieżącą właściwość `null` Jeśli nazwa aplikacji nie została ustawiona.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje użycie <xref:System.Runtime.Remoting.RemotingConfiguration.ApplicationName%2A> właściwości do wskazania nazwy aplikacji usług zdalnych. Przykłady dla kodu pełny przykład <xref:System.Runtime.Remoting.RemotingConfiguration.RegisterWellKnownClientType%2A> i <xref:System.Runtime.Remoting.RemotingConfiguration.RegisterWellKnownServiceType%2A> metody.  
  
 [!code-cpp[RemotingConfiguration.ServerActivation1#2](~/samples/snippets/cpp/VS_Snippets_Remoting/RemotingConfiguration.ServerActivation1/CPP/server.cpp#2)]
 [!code-csharp[RemotingConfiguration.ServerActivation1#2](~/samples/snippets/csharp/VS_Snippets_Remoting/RemotingConfiguration.ServerActivation1/CS/server.cs#2)]
 [!code-vb[RemotingConfiguration.ServerActivation1#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/RemotingConfiguration.ServerActivation1/VB/server.vb#2)]  
  
 Poniższy przykład kodu pokazuje, jak dostęp zdalny obiekt z nazwanym aplikacji.  
  
 [!code-cpp[RemotingConfiguration.ServerActivation1#6](~/samples/snippets/cpp/VS_Snippets_Remoting/RemotingConfiguration.ServerActivation1/CPP/client.cpp#6)]
 [!code-csharp[RemotingConfiguration.ServerActivation1#6](~/samples/snippets/csharp/VS_Snippets_Remoting/RemotingConfiguration.ServerActivation1/CS/client.cs#6)]
 [!code-vb[RemotingConfiguration.ServerActivation1#6](~/samples/snippets/visualbasic/VS_Snippets_Remoting/RemotingConfiguration.ServerActivation1/VB/client.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">Co najmniej jeden z obiektów wywołujących wyżej w stos wywołań nie ma uprawnienia do konfigurowania usług zdalnych typy i kanałów. Ten wyjątek jest zgłaszany tylko wtedy, gdy wartość właściwości.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">Do konfiguracji w zdalnej infrastrukturze. Żądanie wartość: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />; Wartość uprawnienia: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.RemotingConfiguration" /></permission>
      </Docs>
    </Member>
    <Member MemberName="Configure">
      <MemberSignature Language="C#" Value="public static void Configure (string filename);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Configure(string filename) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.RemotingConfiguration.Configure(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Configure (filename As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Configure(System::String ^ filename);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Use Configure(String,Boolean)")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filename" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="filename">Nazwa pliku konfiguracji usług zdalnych. Może być <see langword="null" />.</param>
        <summary>Odczytuje plik konfiguracji i konfiguruje w zdalnej infrastrukturze. <see cref="M:System.Runtime.Remoting.RemotingConfiguration.Configure(System.String)" /> jest przestarzała. Użyj <see cref="M:System.Runtime.Remoting.RemotingConfiguration.Configure(System.String,System.Boolean)" /> zamiast tego.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <xref:System.Runtime.Remoting.RemotingConfiguration.Configure%28System.String%29> jest przestarzała. Użyj <xref:System.Runtime.Remoting.RemotingConfiguration.Configure%28System.String%2CSystem.Boolean%29> zamiast tego.  
  
 Przekazywanie `null` jako `filename` parametru spowoduje domyślne inicjowanie usług zdalnych bez konieczności obecność pliku konfiguracji.  
  
 Składni pliku konfiguracji, zobacz [schemat ustawień komunikacji zdalnej](http://msdn.microsoft.com/library/dc2d1e62-9af7-4ca1-99fd-98b93bb4db9e).  
  
> [!NOTE]
>  Obiekty marshal-by-reference (MBRs) nie znajdują się w pamięci nieskończona. Zamiast tego chyba że typ przesłania <xref:System.MarshalByRefObject.InitializeLifetimeService%2A?displayProperty=nameWithType> do kontrolowania własne zasady okres istnienia, każdy MBR ma skończonego okresu istnienia, zanim system .NET Framework remoting rozpoczyna proces usuwania i odzyskiwanie pamięci. Aby uzyskać więcej informacji, zobacz [dzierżawy okres istnienia](http://msdn.microsoft.com/library/c72d561c-1266-4c8b-b258-2c168c08da9a).  
  
   
  
## Examples  
 [!code-cpp[RemotingConfiguration_Configure_Client#1](~/samples/snippets/cpp/VS_Snippets_Remoting/RemotingConfiguration_Configure_Client/CPP/remotingconfiguration_configure_server.cpp#1)]
 [!code-csharp[RemotingConfiguration_Configure_Client#1](~/samples/snippets/csharp/VS_Snippets_Remoting/RemotingConfiguration_Configure_Client/CS/remotingconfiguration_configure_server.cs#1)]
 [!code-vb[RemotingConfiguration_Configure_Client#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/RemotingConfiguration_Configure_Client/VB/remotingconfiguration_configure_server.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">Co najmniej jeden z obiektów wywołujących wyżej w stos wywołań nie ma uprawnienia do konfigurowania usług zdalnych typy i kanałów.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">Do konfiguracji w zdalnej infrastrukturze. Żądanie wartość: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />; Wartość uprawnienia: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.RemotingConfiguration" /></permission>
      </Docs>
    </Member>
    <Member MemberName="Configure">
      <MemberSignature Language="C#" Value="public static void Configure (string filename, bool ensureSecurity);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Configure(string filename, bool ensureSecurity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.RemotingConfiguration.Configure(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Configure (filename As String, ensureSecurity As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Configure(System::String ^ filename, bool ensureSecurity);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filename" Type="System.String" />
        <Parameter Name="ensureSecurity" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="filename">Nazwa pliku konfiguracji usług zdalnych. Może być <see langword="null" />.</param>
        <param name="ensureSecurity">Jeśli ustawiono <see langword="true" /> zabezpieczeń jest wymagana. Jeśli ustawiono <see langword="false" />zabezpieczeń nie jest wymagana, ale nadal mogą być używane.</param>
        <summary>Odczytuje plik konfiguracji i konfiguruje w zdalnej infrastrukturze.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Przekazywanie `null` jako `filename` parametru spowoduje domyślne inicjowanie usług zdalnych bez konieczności obecność pliku konfiguracji. Aby uzyskać więcej informacji na temat usług zdalnych i zabezpieczeń zobacz [zabezpieczeń w komunikacji zdalnej.](http://msdn.microsoft.com/library/9574262c-d4b1-41c5-8600-24ff147c0add)  
  
 Składni pliku konfiguracji, zobacz [schemat ustawień komunikacji zdalnej](http://msdn.microsoft.com/library/dc2d1e62-9af7-4ca1-99fd-98b93bb4db9e).  
  
> [!NOTE]
>  Obiekty marshal-by-reference (MBRs) nie znajdują się w pamięci nieskończona. Zamiast tego chyba że typ przesłania <xref:System.MarshalByRefObject.InitializeLifetimeService%2A?displayProperty=nameWithType> do kontrolowania własne zasady okres istnienia, każdy MBR ma skończonego okresu istnienia, zanim system .NET Framework remoting rozpoczyna proces usuwania i odzyskiwanie pamięci. Aby uzyskać więcej informacji, zobacz [dzierżawy okres istnienia](http://msdn.microsoft.com/library/c72d561c-1266-4c8b-b258-2c168c08da9a).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">Co najmniej jeden z obiektów wywołujących wyżej w stos wywołań nie ma uprawnienia do konfigurowania usług zdalnych typy i kanałów.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">Do konfiguracji w zdalnej infrastrukturze. Żądanie wartość: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />; Wartość uprawnienia: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.RemotingConfiguration" /></permission>
      </Docs>
    </Member>
    <Member MemberName="CustomErrorsEnabled">
      <MemberSignature Language="C#" Value="public static bool CustomErrorsEnabled (bool isLocalRequest);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool CustomErrorsEnabled(bool isLocalRequest) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.RemotingConfiguration.CustomErrorsEnabled(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CustomErrorsEnabled (isLocalRequest As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool CustomErrorsEnabled(bool isLocalRequest);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="isLocalRequest" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="isLocalRequest">
          <see langword="true" /> Aby określić lokalny wywołań; <see langword="false" /> do określenia zdalnego wywoływania.</param>
        <summary>Wskazuje, czy kanały serwera w tej domenie aplikacji zwracają informacje wyjątków filtrowanych lub pełną dotyczące obiektów wywołujących lokalnym lub zdalnym.</summary>
        <returns>
          <see langword="true" /> Jeśli tylko przefiltrowane informacje o wyjątku jest zwracana do lokalnego lub zdalnego wywoływania, określony przez <paramref name="isLocalRequest" /> parametru; <see langword="false" /> Jeśli pełny wyjątek informacje są zwracane.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Pełny wyjątek informacje obejmują wyjątek serwera dokładne i ślad stosu serwera. Filtrowane informacje zawiera wyjątek standardowych usług zdalnych, ale nie ślad stosu serwera.  
  
 `CustomErrorsEnabled` Metoda odzwierciedla ustawienia konfiguracji, które zostały określone w `mode` atrybutu `<customErrors>` elementu w pliku konfiguracji aplikacji. Aby uzyskać więcej informacji na temat opcji konfiguracji, zobacz [ &#91; \<topic://cpconconfiguration >&#93;](http://msdn.microsoft.com/library/92c0c097-d984-4315-835b-7490ecdf1097).  
  
 W poniższej tabeli przedstawiono kanału serwera trzy wartości właściwości, które określają, które obiekty wywołujące otrzymywać informacje o wyjątku i jakiego rodzaju informacje otrzymają.  
  
|Wartość|Opis|  
|-----------|-----------------|  
|`off`|Wszystkie obiekty wywołujące otrzymywanie informacji ukończenia wyjątków.|  
|`on`|Wszystkie obiekty wywołujące otrzymywanie informacji filtrowane wyjątku.|  
|`remoteOnly`|Lokalne obiekty wywołujące otrzymywanie informacji ukończenia wyjątków; zdalnego wywoływania otrzymywanie wyjątków filtrowanych informacji.|  
  
 W poniższej tabeli przedstawiono interakcje z `isLocalRequest` właściwość kanału parametr i serwera.  
  
|Wartość|isLocalRequest|Wartość zwracana|Opis|  
|-----------|--------------------|------------------|-----------------|  
|`on`|`true`|`true`|Lokalne obiekty wywołujące otrzymywanie informacji filtrowane wyjątku.|  
|`on`|`false`|`true`|Zdalnego wywoływania otrzymywanie wyjątków filtrowanych informacji.|  
|`off`|`true`|`false`|Lokalne obiekty wywołujące otrzymywanie informacji ukończenia wyjątków.|  
|`off`|`false`|`false`|Zdalnego wywoływania otrzymywanie informacji ukończenia wyjątków.|  
|`remoteOnly`|`true`|`false`|Lokalne obiekty wywołujące otrzymywanie informacji ukończenia wyjątków.|  
|`remoteOnly`|`false`|`true`|Zdalnego wywoływania otrzymywanie wyjątków filtrowanych informacji.|  
  
 Aby uzyskać informacje o używaniu pliki konfiguracji aplikacji do kontrolowania zwracany informacje o wyjątku dotyczące obiektów wywołujących, zobacz `<customErrors>` elementu.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CustomErrorsMode">
      <MemberSignature Language="C#" Value="public static System.Runtime.Remoting.CustomErrorsModes CustomErrorsMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.Runtime.Remoting.CustomErrorsModes CustomErrorsMode" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Remoting.RemotingConfiguration.CustomErrorsMode" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property CustomErrorsMode As CustomErrorsModes" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Runtime::Remoting::CustomErrorsModes CustomErrorsMode { System::Runtime::Remoting::CustomErrorsModes get(); void set(System::Runtime::Remoting::CustomErrorsModes value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.CustomErrorsModes</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, błędów niestandardowych są obsługiwane.</summary>
        <value>Członek <see cref="T:System.Runtime.Remoting.CustomErrorsModes" /> wyliczenia, która wskazuje, błędów niestandardowych są obsługiwane.</value>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">Do konfiguracji w zdalnej infrastrukturze. Żądanie wartość: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />; Wartość uprawnienia: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.RemotingConfiguration" /></permission>
      </Docs>
    </Member>
    <Member MemberName="GetRegisteredActivatedClientTypes">
      <MemberSignature Language="C#" Value="public static System.Runtime.Remoting.ActivatedClientTypeEntry[] GetRegisteredActivatedClientTypes ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Runtime.Remoting.ActivatedClientTypeEntry[] GetRegisteredActivatedClientTypes() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.RemotingConfiguration.GetRegisteredActivatedClientTypes" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetRegisteredActivatedClientTypes () As ActivatedClientTypeEntry()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Runtime::Remoting::ActivatedClientTypeEntry ^&gt; ^ GetRegisteredActivatedClientTypes();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.ActivatedClientTypeEntry[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Pobiera tablicę typów obiektu na kliencie jako typy, które będą aktywowane zdalnie.</summary>
        <returns>Tablica typów obiektów zarejestrowany na kliencie jako typy, które będą aktywowane zdalnie.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Szczegółowy opis obiektów aktywowany przez klienta, zobacz [ &#91; \<topic://cpconClientActivation >&#93;](http://msdn.microsoft.com/library/4a791494-c18a-4711-a5c1-4ab0e49a8f1a).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">Co najmniej jeden z obiektów wywołujących wyżej w stos wywołań nie ma uprawnienia do konfigurowania usług zdalnych typy i kanałów.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">Do konfiguracji w zdalnej infrastrukturze. Żądanie wartość: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />; Wartość uprawnienia: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.RemotingConfiguration" /></permission>
        <altmember cref="T:System.Runtime.Remoting.ActivatedServiceTypeEntry" />
        <altmember cref="T:System.Runtime.Remoting.ActivatedClientTypeEntry" />
        <altmember cref="M:System.Runtime.Remoting.RemotingConfiguration.RegisterActivatedServiceType(System.Type)" />
        <altmember cref="M:System.Runtime.Remoting.RemotingConfiguration.RegisterActivatedClientType(System.Type,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="GetRegisteredActivatedServiceTypes">
      <MemberSignature Language="C#" Value="public static System.Runtime.Remoting.ActivatedServiceTypeEntry[] GetRegisteredActivatedServiceTypes ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Runtime.Remoting.ActivatedServiceTypeEntry[] GetRegisteredActivatedServiceTypes() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.RemotingConfiguration.GetRegisteredActivatedServiceTypes" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetRegisteredActivatedServiceTypes () As ActivatedServiceTypeEntry()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Runtime::Remoting::ActivatedServiceTypeEntry ^&gt; ^ GetRegisteredActivatedServiceTypes();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.ActivatedServiceTypeEntry[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Pobiera tablicę typów obiektów, w zarejestrowany na końcu usługi, które można uaktywnić na żądanie od klienta.</summary>
        <returns>Tablica typów obiektów zarejestrowany na końcu usługi, które można uaktywnić na żądanie od klienta.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Szczegółowy opis obiektów aktywowany przez klienta, zobacz [ &#91; \<topic://cpconClientActivation >&#93;](http://msdn.microsoft.com/library/4a791494-c18a-4711-a5c1-4ab0e49a8f1a).  
  
   
  
## Examples  
 [!code-cpp[RemotingConfiguration_GetRegisteredActivatedServer_Client#2](~/samples/snippets/cpp/VS_Snippets_Remoting/RemotingConfiguration_GetRegisteredActivatedServer_Client/CPP/RemotingConfiguration_GetRegisteredActivatedService_server.cpp#2)]
 [!code-csharp[RemotingConfiguration_GetRegisteredActivatedServer_Client#2](~/samples/snippets/csharp/VS_Snippets_Remoting/RemotingConfiguration_GetRegisteredActivatedServer_Client/CS/remotingconfiguration_getregisteredactivatedservice_server.cs#2)]
 [!code-vb[RemotingConfiguration_GetRegisteredActivatedServer_Client#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/RemotingConfiguration_GetRegisteredActivatedServer_Client/VB/remotingconfiguration_getregisteredactivatedservice_server.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">Co najmniej jeden z obiektów wywołujących wyżej w stos wywołań nie ma uprawnienia do konfigurowania usług zdalnych typy i kanałów.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">Do konfiguracji w zdalnej infrastrukturze. Żądanie wartość: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />; Wartość uprawnienia: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.RemotingConfiguration" /></permission>
        <altmember cref="T:System.Runtime.Remoting.ActivatedServiceTypeEntry" />
        <altmember cref="T:System.Runtime.Remoting.ActivatedClientTypeEntry" />
        <altmember cref="M:System.Runtime.Remoting.RemotingConfiguration.RegisterActivatedServiceType(System.Type)" />
        <altmember cref="M:System.Runtime.Remoting.RemotingConfiguration.RegisterActivatedClientType(System.Type,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="GetRegisteredWellKnownClientTypes">
      <MemberSignature Language="C#" Value="public static System.Runtime.Remoting.WellKnownClientTypeEntry[] GetRegisteredWellKnownClientTypes ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Runtime.Remoting.WellKnownClientTypeEntry[] GetRegisteredWellKnownClientTypes() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.RemotingConfiguration.GetRegisteredWellKnownClientTypes" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetRegisteredWellKnownClientTypes () As WellKnownClientTypeEntry()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Runtime::Remoting::WellKnownClientTypeEntry ^&gt; ^ GetRegisteredWellKnownClientTypes();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.WellKnownClientTypeEntry[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Pobiera tablicę typów obiektów w zarejestrowany po stronie klienta jako dobrze znanych typów.</summary>
        <returns>Tablica typów obiektów zarejestrowany po stronie klienta jako dobrze znanych typów.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dobrze znane obiekty typu może być pojedynczym wywołaniu ani singleton. Jeśli typ obiektu jest pojedynczym wywołaniu elementu, nowe wystąpienie jest tworzony zawsze, gdy mają połączenie z klienta. Wszystkie wywołania do pojedynczego obiektu są obsługiwane przez jedno wystąpienie tego obiektu.  
  
 Aby uzyskać bardziej szczegółowy opis dobrze znane obiekty, zobacz [ &#91; \<topic://cpconServerActivation >&#93;](http://msdn.microsoft.com/library/77ded6e2-4ca8-448b-acf2-562d27fd4396).  
  
   
  
## Examples  
 [!code-cpp[RemotingConfiguration_GetRegisteredWellKnownClient_Client#1](~/samples/snippets/cpp/VS_Snippets_Remoting/RemotingConfiguration_GetRegisteredWellKnownClient_Client/CPP/remotingconfiguration_getregisteredwellknownclient_client.cpp#1)]
 [!code-csharp[RemotingConfiguration_GetRegisteredWellKnownClient_Client#1](~/samples/snippets/csharp/VS_Snippets_Remoting/RemotingConfiguration_GetRegisteredWellKnownClient_Client/CS/remotingconfiguration_getregisteredwellknownclient_client.cs#1)]
 [!code-vb[RemotingConfiguration_GetRegisteredWellKnownClient_Client#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/RemotingConfiguration_GetRegisteredWellKnownClient_Client/VB/remotingconfiguration_getregisteredwellknownclient_client.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">Co najmniej jeden z obiektów wywołujących wyżej w stos wywołań nie ma uprawnienia do konfigurowania usług zdalnych typy i kanałów.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">Do konfiguracji w zdalnej infrastrukturze. Żądanie wartość: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />; Wartość uprawnienia: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.RemotingConfiguration" /></permission>
        <altmember cref="T:System.Runtime.Remoting.WellKnownClientTypeEntry" />
        <altmember cref="T:System.Runtime.Remoting.WellKnownServiceTypeEntry" />
        <altmember cref="M:System.Runtime.Remoting.RemotingConfiguration.RegisterWellKnownServiceType(System.Type,System.String,System.Runtime.Remoting.WellKnownObjectMode)" />
        <altmember cref="M:System.Runtime.Remoting.RemotingConfiguration.RegisterWellKnownClientType(System.Type,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="GetRegisteredWellKnownServiceTypes">
      <MemberSignature Language="C#" Value="public static System.Runtime.Remoting.WellKnownServiceTypeEntry[] GetRegisteredWellKnownServiceTypes ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Runtime.Remoting.WellKnownServiceTypeEntry[] GetRegisteredWellKnownServiceTypes() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.RemotingConfiguration.GetRegisteredWellKnownServiceTypes" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetRegisteredWellKnownServiceTypes () As WellKnownServiceTypeEntry()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Runtime::Remoting::WellKnownServiceTypeEntry ^&gt; ^ GetRegisteredWellKnownServiceTypes();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.WellKnownServiceTypeEntry[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Pobiera tablicę typów obiektów, w zarejestrowany na końcu usługi jako dobrze znanych typów.</summary>
        <returns>Tablica typów obiektów zarejestrowany na końcu usługi jako dobrze znanych typów.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dobrze znane obiekty typu może być pojedynczym wywołaniu ani singleton. Jeśli typ obiektu jest pojedynczym wywołaniu elementu, nowe wystąpienie jest tworzony zawsze, gdy mają połączenie z klienta. Wszystkie wywołania do pojedynczego obiektu są obsługiwane przez jedno wystąpienie tego obiektu.  
  
 Aby uzyskać bardziej szczegółowy opis dobrze znane obiekty, zobacz [ &#91; \<topic://cpconServerActivation >&#93;](http://msdn.microsoft.com/library/77ded6e2-4ca8-448b-acf2-562d27fd4396).  
  
   
  
## Examples  
 [!code-cpp[RemotingConfiguration_Configure_Client#2](~/samples/snippets/cpp/VS_Snippets_Remoting/RemotingConfiguration_Configure_Client/CPP/remotingconfiguration_configure_server.cpp#2)]
 [!code-csharp[RemotingConfiguration_Configure_Client#2](~/samples/snippets/csharp/VS_Snippets_Remoting/RemotingConfiguration_Configure_Client/CS/remotingconfiguration_configure_server.cs#2)]
 [!code-vb[RemotingConfiguration_Configure_Client#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/RemotingConfiguration_Configure_Client/VB/remotingconfiguration_configure_server.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">Co najmniej jeden z obiektów wywołujących wyżej w stos wywołań nie ma uprawnienia do konfigurowania usług zdalnych typy i kanałów.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">Do konfiguracji w zdalnej infrastrukturze. Żądanie wartość: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />; Wartość uprawnienia: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.RemotingConfiguration" /></permission>
        <altmember cref="T:System.Runtime.Remoting.WellKnownServiceTypeEntry" />
        <altmember cref="T:System.Runtime.Remoting.WellKnownClientTypeEntry" />
        <altmember cref="M:System.Runtime.Remoting.RemotingConfiguration.RegisterWellKnownServiceType(System.Type,System.String,System.Runtime.Remoting.WellKnownObjectMode)" />
        <altmember cref="M:System.Runtime.Remoting.RemotingConfiguration.RegisterWellKnownClientType(System.Type,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="IsActivationAllowed">
      <MemberSignature Language="C#" Value="public static bool IsActivationAllowed (Type svrType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsActivationAllowed(class System.Type svrType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.RemotingConfiguration.IsActivationAllowed(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsActivationAllowed (svrType As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsActivationAllowed(Type ^ svrType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="svrType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="svrType">Obiekt <see cref="T:System.Type" /> do sprawdzenia.</param>
        <summary>Zwraca wartość logiczną wskazującą, czy określony <see cref="T:System.Type" /> może być aktywowany klienta.</summary>
        <returns>
          <see langword="true" /> Jeśli określony <see cref="T:System.Type" /> dozwolonych klienta aktywowana, a w przeciwnym razie <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bieżąca metoda służy do określenia, czy Aktywacja obiektu po stronie serwera <xref:System.Type> jest jawnie dozwolone przez serwer.  
  
   
  
## Examples  
 [!code-cpp[RemotingConfiguration_GetRegisteredActivatedServer_Client#1](~/samples/snippets/cpp/VS_Snippets_Remoting/RemotingConfiguration_GetRegisteredActivatedServer_Client/CPP/RemotingConfiguration_GetRegisteredActivatedService_server.cpp#1)]
 [!code-csharp[RemotingConfiguration_GetRegisteredActivatedServer_Client#1](~/samples/snippets/csharp/VS_Snippets_Remoting/RemotingConfiguration_GetRegisteredActivatedServer_Client/CS/remotingconfiguration_getregisteredactivatedservice_server.cs#1)]
 [!code-vb[RemotingConfiguration_GetRegisteredActivatedServer_Client#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/RemotingConfiguration_GetRegisteredActivatedServer_Client/VB/remotingconfiguration_getregisteredactivatedservice_server.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">Co najmniej jeden z obiektów wywołujących wyżej w stos wywołań nie ma uprawnienia do konfigurowania usług zdalnych typy i kanałów.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">Do konfiguracji w zdalnej infrastrukturze. Żądanie wartość: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />; Wartość uprawnienia: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.RemotingConfiguration" /></permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="IsRemotelyActivatedClientType">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Sprawdza, czy ten typ określony obiekt jest zarejestrowany jako typ zdalnie aktywowanego klienta.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsRemotelyActivatedClientType">
      <MemberSignature Language="C#" Value="public static System.Runtime.Remoting.ActivatedClientTypeEntry IsRemotelyActivatedClientType (Type svrType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Runtime.Remoting.ActivatedClientTypeEntry IsRemotelyActivatedClientType(class System.Type svrType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.RemotingConfiguration.IsRemotelyActivatedClientType(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsRemotelyActivatedClientType (svrType As Type) As ActivatedClientTypeEntry" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::Remoting::ActivatedClientTypeEntry ^ IsRemotelyActivatedClientType(Type ^ svrType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.ActivatedClientTypeEntry</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="svrType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="svrType">Typ obiektu do sprawdzenia.</param>
        <summary>Sprawdza, czy określony obiekt <see cref="T:System.Type" /> jest zarejestrowany jako typ zdalnie aktywowanego klienta.</summary>
        <returns>
          <see cref="T:System.Runtime.Remoting.ActivatedClientTypeEntry" /> Odpowiadający określonym typem obiektu.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 [!code-cpp[RemotingConfiguration_IsRemotelyActivatedClientType1_Client#1](~/samples/snippets/cpp/VS_Snippets_Remoting/RemotingConfiguration_IsRemotelyActivatedClientType1_Client/CPP/remotingconfiguration_isremotelyactivatedclienttype1_client.cpp#1)]
 [!code-csharp[RemotingConfiguration_IsRemotelyActivatedClientType1_Client#1](~/samples/snippets/csharp/VS_Snippets_Remoting/RemotingConfiguration_IsRemotelyActivatedClientType1_Client/CS/remotingconfiguration_isremotelyactivatedclienttype1_client.cs#1)]
 [!code-vb[RemotingConfiguration_IsRemotelyActivatedClientType1_Client#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/RemotingConfiguration_IsRemotelyActivatedClientType1_Client/VB/remotingconfiguration_isremotelyactivatedclienttype1_client.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">Co najmniej jeden z obiektów wywołujących wyżej w stos wywołań nie ma uprawnienia do konfigurowania usług zdalnych typy i kanałów.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">Do konfiguracji w zdalnej infrastrukturze. Żądanie wartość: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />; Wartość uprawnienia: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.RemotingConfiguration" /></permission>
      </Docs>
    </Member>
    <Member MemberName="IsRemotelyActivatedClientType">
      <MemberSignature Language="C#" Value="public static System.Runtime.Remoting.ActivatedClientTypeEntry IsRemotelyActivatedClientType (string typeName, string assemblyName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Runtime.Remoting.ActivatedClientTypeEntry IsRemotelyActivatedClientType(string typeName, string assemblyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.RemotingConfiguration.IsRemotelyActivatedClientType(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsRemotelyActivatedClientType (typeName As String, assemblyName As String) As ActivatedClientTypeEntry" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::Remoting::ActivatedClientTypeEntry ^ IsRemotelyActivatedClientType(System::String ^ typeName, System::String ^ assemblyName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.ActivatedClientTypeEntry</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeName" Type="System.String" />
        <Parameter Name="assemblyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="typeName">Nazwa typu obiektu do sprawdzenia.</param>
        <param name="assemblyName">Nazwa zestawu obiektu do sprawdzenia.</param>
        <summary>Sprawdza, czy obiekt określony przez jego nazwy typu, a nazwa zestawu jest zarejestrowany jako typ zdalnie aktywowanego klienta.</summary>
        <returns>
          <see cref="T:System.Runtime.Remoting.ActivatedClientTypeEntry" /> Odpowiadający określonym typem obiektu.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 [!code-cpp[RemotingConfiguration_IsRemotelyActivatedClientType2_Client#1](~/samples/snippets/cpp/VS_Snippets_Remoting/RemotingConfiguration_IsRemotelyActivatedClientType2_Client/CPP/remotingconfiguration_isremotelyactivatedclienttype2_client.cpp#1)]
 [!code-csharp[RemotingConfiguration_IsRemotelyActivatedClientType2_Client#1](~/samples/snippets/csharp/VS_Snippets_Remoting/RemotingConfiguration_IsRemotelyActivatedClientType2_Client/CS/remotingconfiguration_isremotelyactivatedclienttype2_client.cs#1)]
 [!code-vb[RemotingConfiguration_IsRemotelyActivatedClientType2_Client#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/RemotingConfiguration_IsRemotelyActivatedClientType2_Client/VB/remotingconfiguration_isremotelyactivatedclienttype2_client.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">Co najmniej jeden z obiektów wywołujących wyżej w stos wywołań nie ma uprawnienia do konfigurowania usług zdalnych typy i kanałów.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">Do konfiguracji w zdalnej infrastrukturze. Żądanie wartość: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />; Wartość uprawnienia: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.RemotingConfiguration" /></permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="IsWellKnownClientType">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Sprawdza, czy typ określony obiekt jest zarejestrowany jako typ dobrze znanego klienta.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsWellKnownClientType">
      <MemberSignature Language="C#" Value="public static System.Runtime.Remoting.WellKnownClientTypeEntry IsWellKnownClientType (Type svrType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Runtime.Remoting.WellKnownClientTypeEntry IsWellKnownClientType(class System.Type svrType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.RemotingConfiguration.IsWellKnownClientType(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsWellKnownClientType (svrType As Type) As WellKnownClientTypeEntry" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::Remoting::WellKnownClientTypeEntry ^ IsWellKnownClientType(Type ^ svrType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.WellKnownClientTypeEntry</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="svrType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="svrType">Obiekt <see cref="T:System.Type" /> do sprawdzenia.</param>
        <summary>Sprawdza, czy określony obiekt <see cref="T:System.Type" /> jest zarejestrowany jako typ dobrze znanego klienta.</summary>
        <returns>
          <see cref="T:System.Runtime.Remoting.WellKnownClientTypeEntry" /> Odpowiadający określonym typem obiektu.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 [!code-cpp[RemotingConfiguration_IsWellKnownClientType1_Client#1](~/samples/snippets/cpp/VS_Snippets_Remoting/RemotingConfiguration_IsWellKnownClientType1_Client/CPP/remotingconfiguration_iswellknownclienttype1_client.cpp#1)]
 [!code-csharp[RemotingConfiguration_IsWellKnownClientType1_Client#1](~/samples/snippets/csharp/VS_Snippets_Remoting/RemotingConfiguration_IsWellKnownClientType1_Client/CS/remotingconfiguration_iswellknownclienttype1_client.cs#1)]
 [!code-vb[RemotingConfiguration_IsWellKnownClientType1_Client#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/RemotingConfiguration_IsWellKnownClientType1_Client/VB/remotingconfiguration_iswellknownclienttype1_client.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">Co najmniej jeden z obiektów wywołujących wyżej w stos wywołań nie ma uprawnienia do konfigurowania usług zdalnych typy i kanałów.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">Do konfiguracji w zdalnej infrastrukturze. Żądanie wartość: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />; Wartość uprawnienia: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.RemotingConfiguration" /></permission>
      </Docs>
    </Member>
    <Member MemberName="IsWellKnownClientType">
      <MemberSignature Language="C#" Value="public static System.Runtime.Remoting.WellKnownClientTypeEntry IsWellKnownClientType (string typeName, string assemblyName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Runtime.Remoting.WellKnownClientTypeEntry IsWellKnownClientType(string typeName, string assemblyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.RemotingConfiguration.IsWellKnownClientType(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsWellKnownClientType (typeName As String, assemblyName As String) As WellKnownClientTypeEntry" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::Remoting::WellKnownClientTypeEntry ^ IsWellKnownClientType(System::String ^ typeName, System::String ^ assemblyName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.WellKnownClientTypeEntry</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeName" Type="System.String" />
        <Parameter Name="assemblyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="typeName">Nazwa typu obiektu do sprawdzenia.</param>
        <param name="assemblyName">Nazwa zestawu obiektu do sprawdzenia.</param>
        <summary>Sprawdza, czy obiekt określony przez jego nazwy typu, a nazwa zestawu jest zarejestrowany jako typ dobrze znanego klienta.</summary>
        <returns>
          <see cref="T:System.Runtime.Remoting.WellKnownClientTypeEntry" /> Odpowiadający określonym typem obiektu.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 [!code-cpp[RemotingConfiguration_IsWellKnownClientType2_Client#1](~/samples/snippets/cpp/VS_Snippets_Remoting/RemotingConfiguration_IsWellKnownClientType2_Client/CPP/remotingconfiguration_iswellknownclienttype2_client.cpp#1)]
 [!code-csharp[RemotingConfiguration_IsWellKnownClientType2_Client#1](~/samples/snippets/csharp/VS_Snippets_Remoting/RemotingConfiguration_IsWellKnownClientType2_Client/CS/remotingconfiguration_iswellknownclienttype2_client.cs#1)]
 [!code-vb[RemotingConfiguration_IsWellKnownClientType2_Client#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/RemotingConfiguration_IsWellKnownClientType2_Client/VB/remotingconfiguration_iswellknownclienttype2_client.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">Co najmniej jeden z obiektów wywołujących wyżej w stos wywołań nie ma uprawnienia do konfigurowania usług zdalnych typy i kanałów.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">Do konfiguracji w zdalnej infrastrukturze. Żądanie wartość: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />; Wartość uprawnienia: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.RemotingConfiguration" /></permission>
      </Docs>
    </Member>
    <Member MemberName="ProcessId">
      <MemberSignature Language="C#" Value="public static string ProcessId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property string ProcessId" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Remoting.RemotingConfiguration.ProcessId" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ProcessId As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::String ^ ProcessId { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera identyfikator aktualnie wykonywane procesu.</summary>
        <value>A <see cref="T:System.String" /> zawierający identyfikator procesu aktualnie wykonywane.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Security.SecurityException">Bezpośredniego obiektu wywołującego nie ma uprawnienia infrastruktury.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">do pracy z kodem infrastruktury. Żądanie wartość: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; Wartość uprawnienia: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.Infrastructure" /></permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="RegisterActivatedClientType">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Rejestruje obiekt <see cref="T:System.Type" /> po stronie klienta jako typ, który może zostać uaktywnione na serwerze.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="RegisterActivatedClientType">
      <MemberSignature Language="C#" Value="public static void RegisterActivatedClientType (System.Runtime.Remoting.ActivatedClientTypeEntry entry);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RegisterActivatedClientType(class System.Runtime.Remoting.ActivatedClientTypeEntry entry) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.RemotingConfiguration.RegisterActivatedClientType(System.Runtime.Remoting.ActivatedClientTypeEntry)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RegisterActivatedClientType (entry As ActivatedClientTypeEntry)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RegisterActivatedClientType(System::Runtime::Remoting::ActivatedClientTypeEntry ^ entry);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entry" Type="System.Runtime.Remoting.ActivatedClientTypeEntry" />
      </Parameters>
      <Docs>
        <param name="entry">Ustawienia konfiguracji dla typu klient jest aktywowany.</param>
        <summary>Rejestruje obiekt <see cref="T:System.Type" /> rejestrowane w określonych <see cref="T:System.Runtime.Remoting.ActivatedClientTypeEntry" /> po stronie klienta jako typ, który może zostać uaktywnione na serwerze.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby utworzyć wystąpienie obiektu aktywowany przez klienta na serwerze, należy znać jego <xref:System.Type> i musi być zarejestrowany po stronie serwera za pomocą <xref:System.Runtime.Remoting.RemotingConfiguration.RegisterActivatedServiceType%2A> metody. Można uzyskać serwera proxy dla nowego wystąpienia obiektu klient aktywowany, klient musi najpierw zarejestrować kanału z <xref:System.Runtime.Remoting.Channels.ChannelServices> , a następnie uaktywnić przez wywołanie obiektu `new`.  
  
 Aby aktywować typu klient aktywowany obiekt z `new` — słowo kluczowe, najpierw należy zarejestrować typ obiektu na końcu klient używa <xref:System.Runtime.Remoting.RemotingConfiguration.RegisterActivatedClientType%2A> — metoda. Wywoływanie <xref:System.Runtime.Remoting.RemotingConfiguration.RegisterActivatedClientType%2A> — metoda zapewnia infrastrukturę komunikacji zdalnej lokalizacji zdalnej aplikacji gdzie `new` próbuje je utworzyć. Jeśli korzystasz z drugiej strony, <xref:System.Activator.CreateInstance%2A?displayProperty=nameWithType> metodę w celu utworzenia nowego wystąpienia obiektu klient aktywowany, nie uprzedniego rejestracji po stronie klienta jest niezbędne, musisz podać adres URL aplikacji zdalnej jako parametr. Przydzielenie <xref:System.Activator.CreateInstance%2A?displayProperty=nameWithType> metody z adresem URL serwera, na którym chcesz utworzyć obiekt musi hermetyzować adres URL w wystąpieniu <xref:System.Runtime.Remoting.Activation.UrlAttribute> klasy.  
  
 Szczegółowy opis obiektów aktywowany przez klienta, zobacz [ &#91; \<topic://cpconClientActivation >&#93;](http://msdn.microsoft.com/library/4a791494-c18a-4711-a5c1-4ab0e49a8f1a).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">Co najmniej jeden z obiektów wywołujących wyżej w stos wywołań nie ma uprawnienia do konfigurowania usług zdalnych typy i kanałów.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">Do konfiguracji w zdalnej infrastrukturze. Żądanie wartość: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />; Wartość uprawnienia: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.RemotingConfiguration" /></permission>
        <altmember cref="T:System.Runtime.Remoting.ActivatedClientTypeEntry" />
        <altmember cref="T:System.Runtime.Remoting.ActivatedServiceTypeEntry" />
      </Docs>
    </Member>
    <Member MemberName="RegisterActivatedClientType">
      <MemberSignature Language="C#" Value="public static void RegisterActivatedClientType (Type type, string appUrl);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RegisterActivatedClientType(class System.Type type, string appUrl) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.RemotingConfiguration.RegisterActivatedClientType(System.Type,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RegisterActivatedClientType(Type ^ type, System::String ^ appUrl);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="appUrl" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type">Obiekt <see cref="T:System.Type" />.</param>
        <param name="appUrl">Adres URL aplikacji, w którym ten typ jest aktywowany.</param>
        <summary>Rejestruje obiekt <see cref="T:System.Type" /> po stronie klienta jako typ, który może zostać uaktywnione na serwerze przy użyciu podanych parametrów zainicjować nowe wystąpienie klasy <see cref="T:System.Runtime.Remoting.ActivatedClientTypeEntry" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby utworzyć wystąpienie obiektu aktywowany przez klienta na serwerze, należy znać jego <xref:System.Type> i musi być zarejestrowany po stronie serwera za pomocą <xref:System.Runtime.Remoting.RemotingConfiguration.RegisterActivatedServiceType%2A> metody. Można uzyskać serwera proxy dla nowego wystąpienia obiektu klient aktywowany, klient musi najpierw zarejestrować kanału z <xref:System.Runtime.Remoting.Channels.ChannelServices> , a następnie uaktywnić przez wywołanie obiektu `new`.  
  
 Aby aktywować typu klient aktywowany obiekt z `new` — słowo kluczowe, najpierw należy zarejestrować typ obiektu na końcu klient używa <xref:System.Runtime.Remoting.RemotingConfiguration.RegisterActivatedClientType%2A> — metoda. Wywoływanie <xref:System.Runtime.Remoting.RemotingConfiguration.RegisterActivatedClientType%2A> — metoda zapewnia infrastrukturę komunikacji zdalnej lokalizacji zdalnej aplikacji gdzie `new` próbuje je utworzyć. Jeśli korzystasz z drugiej strony, <xref:System.Activator.CreateInstance%2A?displayProperty=nameWithType> metodę w celu utworzenia nowego wystąpienia obiektu klient aktywowany, nie uprzedniego rejestracji po stronie klienta jest niezbędne, musisz podać adres URL aplikacji zdalnej jako parametr. Przydzielenie <xref:System.Activator.CreateInstance%2A?displayProperty=nameWithType> metody z adresem URL serwera, na którym chcesz utworzyć obiekt musi hermetyzować adres URL w wystąpieniu <xref:System.Runtime.Remoting.Activation.UrlAttribute> klasy.  
  
 Szczegółowy opis obiektów aktywowany przez klienta, zobacz [ &#91; \<topic://cpconClientActivation >&#93;](http://msdn.microsoft.com/library/4a791494-c18a-4711-a5c1-4ab0e49a8f1a)  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje rejestracji typu obiektu po stronie klienta jako typ, który może zostać uaktywnione na serwerze. Dla kodu serwera umożliwiająca kodu przedstawioną klienta, zobacz przykład <xref:System.Runtime.Remoting.RemotingConfiguration.RegisterActivatedServiceType%2A> metody.  
  
 [!code-cpp[RemotingConfiguration.ClientActivation#1](~/samples/snippets/cpp/VS_Snippets_Remoting/RemotingConfiguration.ClientActivation/CPP/client.cpp#1)]
 [!code-csharp[RemotingConfiguration.ClientActivation#1](~/samples/snippets/csharp/VS_Snippets_Remoting/RemotingConfiguration.ClientActivation/CS/client.cs#1)]
 [!code-vb[RemotingConfiguration.ClientActivation#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/RemotingConfiguration.ClientActivation/VB/client.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="typeName" /> Lub <paramref name="URI" /> parametr jest <see langword="null" />.</exception>
        <exception cref="T:System.Security.SecurityException">Co najmniej jeden z obiektów wywołujących wyżej w stos wywołań nie ma uprawnienia do konfigurowania usług zdalnych typy i kanałów.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">Do konfiguracji w zdalnej infrastrukturze. Żądanie wartość: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />; Wartość uprawnienia: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.RemotingConfiguration" /></permission>
        <altmember cref="T:System.Runtime.Remoting.ActivatedClientTypeEntry" />
        <altmember cref="T:System.Runtime.Remoting.ActivatedServiceTypeEntry" />
      </Docs>
    </Member>
    <MemberGroup MemberName="RegisterActivatedServiceType">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Rejestruje obiekt <see cref="T:System.Type" /> na końcu usługi, jaką może zostać uaktywnione na żądanie od klienta.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="RegisterActivatedServiceType">
      <MemberSignature Language="C#" Value="public static void RegisterActivatedServiceType (System.Runtime.Remoting.ActivatedServiceTypeEntry entry);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RegisterActivatedServiceType(class System.Runtime.Remoting.ActivatedServiceTypeEntry entry) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.RemotingConfiguration.RegisterActivatedServiceType(System.Runtime.Remoting.ActivatedServiceTypeEntry)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RegisterActivatedServiceType (entry As ActivatedServiceTypeEntry)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RegisterActivatedServiceType(System::Runtime::Remoting::ActivatedServiceTypeEntry ^ entry);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entry" Type="System.Runtime.Remoting.ActivatedServiceTypeEntry" />
      </Parameters>
      <Docs>
        <param name="entry">Ustawienia konfiguracji dla typu klient jest aktywowany.</param>
        <summary>Rejestruje typ obiektu rejestrowane w określonych <see cref="T:System.Runtime.Remoting.ActivatedServiceTypeEntry" /> na końcu usługi, jaką może zostać uaktywnione na żądanie od klienta.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby utworzyć wystąpienie obiektu aktywowany przez klienta na serwerze, należy znać jego <xref:System.Type> i musi być zarejestrowany po stronie serwera za pomocą <xref:System.Runtime.Remoting.RemotingConfiguration.RegisterActivatedServiceType%2A> metody. Można uzyskać serwera proxy dla nowego wystąpienia obiektu klient aktywowany, klient musi najpierw zarejestrować kanału z <xref:System.Runtime.Remoting.Channels.ChannelServices> , a następnie uaktywnić przez wywołanie obiektu `new` lub <xref:System.Activator.CreateInstance%2A?displayProperty=nameWithType>.  
  
 Aby aktywować typu klient aktywowany obiekt z `new` — słowo kluczowe, najpierw należy zarejestrować typ obiektu na końcu klient używa <xref:System.Runtime.Remoting.RemotingConfiguration.RegisterActivatedClientType%2A> — metoda. Wywoływanie <xref:System.Runtime.Remoting.RemotingConfiguration.RegisterActivatedClientType%2A> metoda daje w zdalnej infrastrukturze lokalizacji zdalnej aplikacji, gdzie `new` próbuje je utworzyć. Jeśli korzystasz z drugiej strony, <xref:System.Activator.CreateInstance%2A> metodę w celu utworzenia nowego wystąpienia obiektu klient aktywowany, nie uprzedniego rejestracji po stronie klienta jest niezbędne, musisz podać adres URL aplikacji zdalnej jako parametr. Przydzielenie <xref:System.Activator.CreateInstance%2A> metody z adresem URL serwera, na którym chcesz utworzyć obiekt musi hermetyzować adres URL w wystąpieniu <xref:System.Runtime.Remoting.Activation.UrlAttribute> klasy.  
  
 Szczegółowy opis obiektów aktywowany przez klienta, zobacz [ &#91; \<topic://cpconClientActivation >&#93;](http://msdn.microsoft.com/library/4a791494-c18a-4711-a5c1-4ab0e49a8f1a).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">Co najmniej jeden z obiektów wywołujących wyżej w stos wywołań nie ma uprawnienia do konfigurowania usług zdalnych typy i kanałów.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">Do konfiguracji w zdalnej infrastrukturze. Żądanie wartość: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />; Wartość uprawnienia: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.RemotingConfiguration" /></permission>
        <altmember cref="T:System.Runtime.Remoting.ActivatedServiceTypeEntry" />
        <altmember cref="T:System.Runtime.Remoting.ActivatedClientTypeEntry" />
      </Docs>
    </Member>
    <Member MemberName="RegisterActivatedServiceType">
      <MemberSignature Language="C#" Value="public static void RegisterActivatedServiceType (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RegisterActivatedServiceType(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.RemotingConfiguration.RegisterActivatedServiceType(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RegisterActivatedServiceType(Type ^ type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">
          <see cref="T:System.Type" /> Obiektu do zarejestrowania.</param>
        <summary>Rejestruje typ określony obiekt na koniec usługi jako typu, który może zostać uaktywnione na żądanie od klienta.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby utworzyć wystąpienie obiektu aktywowany przez klienta na serwerze, należy znać jego <xref:System.Type> i musi być zarejestrowany po stronie serwera za pomocą <xref:System.Runtime.Remoting.RemotingConfiguration.RegisterActivatedServiceType%2A> metody. Można uzyskać serwera proxy dla nowego wystąpienia obiektu klient aktywowany, klient musi najpierw zarejestrować kanału z <xref:System.Runtime.Remoting.Channels.ChannelServices> , a następnie uaktywnić przez wywołanie obiektu `new` lub <xref:System.Activator.CreateInstance%2A?displayProperty=nameWithType>.  
  
 Aby aktywować typu klient aktywowany obiekt z `new` — słowo kluczowe, najpierw należy zarejestrować typ obiektu na końcu klient używa <xref:System.Runtime.Remoting.RemotingConfiguration.RegisterActivatedClientType%2A> — metoda. Wywoływanie <xref:System.Runtime.Remoting.RemotingConfiguration.RegisterActivatedClientType%2A> metoda daje w zdalnej infrastrukturze lokalizacji zdalnej aplikacji, gdzie `new` próbuje je utworzyć. Jeśli korzystasz z drugiej strony, <xref:System.Activator.CreateInstance%2A> metodę w celu utworzenia nowego wystąpienia obiektu klient aktywowany, nie uprzedniego rejestracji po stronie klienta jest niezbędne, musisz podać adres URL aplikacji zdalnej jako parametr. Przydzielenie <xref:System.Activator.CreateInstance%2A> metody z adresem URL serwera, na którym chcesz utworzyć obiekt musi hermetyzować adres URL w wystąpieniu <xref:System.Runtime.Remoting.Activation.UrlAttribute> klasy.  
  
 Szczegółowy opis obiektów aktywowany przez klienta, zobacz [ &#91; \<topic://cpconClientActivation >&#93;](http://msdn.microsoft.com/library/4a791494-c18a-4711-a5c1-4ab0e49a8f1a).  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje rejestracji typu obiektu na serwerze jako typ, który można uaktywnić przez klienta. Kod klienta, który odpowiada kod serwera przedstawioną, zobacz przykład <xref:System.Runtime.Remoting.RemotingConfiguration.RegisterActivatedClientType%2A> metody.  
  
 [!code-cpp[RemotingConfiguration.ClientActivation#2](~/samples/snippets/cpp/VS_Snippets_Remoting/RemotingConfiguration.ClientActivation/CPP/server.cpp#2)]
 [!code-csharp[RemotingConfiguration.ClientActivation#2](~/samples/snippets/csharp/VS_Snippets_Remoting/RemotingConfiguration.ClientActivation/CS/server.cs#2)]
 [!code-vb[RemotingConfiguration.ClientActivation#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/RemotingConfiguration.ClientActivation/VB/server.vb#2)]  
  
 Poniższy przykład kodu pokazuje obiekt usługi zarejestrowany w powyższym kodzie przykładowym.  
  
 [!code-cpp[RemotingConfiguration.ClientActivation#3](~/samples/snippets/cpp/VS_Snippets_Remoting/RemotingConfiguration.ClientActivation/CPP/service.cpp#3)]
 [!code-csharp[RemotingConfiguration.ClientActivation#3](~/samples/snippets/csharp/VS_Snippets_Remoting/RemotingConfiguration.ClientActivation/CS/service.cs#3)]
 [!code-vb[RemotingConfiguration.ClientActivation#3](~/samples/snippets/visualbasic/VS_Snippets_Remoting/RemotingConfiguration.ClientActivation/VB/service.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">Co najmniej jeden z obiektów wywołujących wyżej w stos wywołań nie ma uprawnienia do konfigurowania usług zdalnych typy i kanałów.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">Do konfiguracji w zdalnej infrastrukturze. Żądanie wartość: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />; Wartość uprawnienia: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.RemotingConfiguration" /></permission>
        <altmember cref="T:System.Runtime.Remoting.ActivatedServiceTypeEntry" />
        <altmember cref="T:System.Runtime.Remoting.ActivatedClientTypeEntry" />
      </Docs>
    </Member>
    <MemberGroup MemberName="RegisterWellKnownClientType">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Rejestruje obiekt <see cref="T:System.Type" /> po stronie klienta jako dobrze znanego typu (jednego wywołania lub singleton).</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="RegisterWellKnownClientType">
      <MemberSignature Language="C#" Value="public static void RegisterWellKnownClientType (System.Runtime.Remoting.WellKnownClientTypeEntry entry);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RegisterWellKnownClientType(class System.Runtime.Remoting.WellKnownClientTypeEntry entry) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.RemotingConfiguration.RegisterWellKnownClientType(System.Runtime.Remoting.WellKnownClientTypeEntry)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RegisterWellKnownClientType (entry As WellKnownClientTypeEntry)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RegisterWellKnownClientType(System::Runtime::Remoting::WellKnownClientTypeEntry ^ entry);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entry" Type="System.Runtime.Remoting.WellKnownClientTypeEntry" />
      </Parameters>
      <Docs>
        <param name="entry">Ustawienia konfiguracji dla dobrze znanego typu.</param>
        <summary>Rejestruje obiekt <see cref="T:System.Type" /> rejestrowane w określonych <see cref="T:System.Runtime.Remoting.WellKnownClientTypeEntry" /> po stronie klienta jako dobrze znanego typu, który może zostać uaktywnione na serwerze.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Każdy klient, który zna identyfikator URI zarejestrowanych dobrze znane obiekty można uzyskać serwera proxy dla obiekt rejestrując go preferuje z kanału <xref:System.Runtime.Remoting.Channels.ChannelServices>i aktywowanie obiektu przez wywołanie metody `new` lub <xref:System.Activator.GetObject%2A?displayProperty=nameWithType>. Aby aktywować dobrze znane obiekty z `new`, najpierw należy zarejestrować typ dobrze znanego obiektu na kliencie przy użyciu <xref:System.Runtime.Remoting.RemotingConfiguration.RegisterWellKnownClientType%2A> metody. Wywoływanie <xref:System.Runtime.Remoting.RemotingConfiguration.RegisterWellKnownClientType%2A> metoda daje w zdalnej infrastrukturze lokalizacji obiektu zdalnego, dzięki czemu `new` — słowo kluczowe, aby go utworzyć. Jeśli korzystasz z drugiej strony, <xref:System.Activator.GetObject%2A?displayProperty=nameWithType> metodę, aby aktywować dobrze znane obiekty, musisz podać go z adresem URL obiektu jako argument, niezbędne jest nie uprzedniej rejestracji po stronie klienta.  
  
 Aby uzyskać szczegółowy opis dobrze znane obiekty, zobacz [ &#91; \<topic://cpconServerActivation >&#93;](http://msdn.microsoft.com/library/77ded6e2-4ca8-448b-acf2-562d27fd4396).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">Co najmniej jeden z obiektów wywołujących wyżej w stos wywołań nie ma uprawnienia do konfigurowania usług zdalnych typy i kanałów.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">Do konfiguracji w zdalnej infrastrukturze. Żądanie wartość: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />; Wartość uprawnienia: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.RemotingConfiguration" /></permission>
        <altmember cref="T:System.Runtime.Remoting.WellKnownClientTypeEntry" />
        <altmember cref="T:System.Runtime.Remoting.WellKnownServiceTypeEntry" />
      </Docs>
    </Member>
    <Member MemberName="RegisterWellKnownClientType">
      <MemberSignature Language="C#" Value="public static void RegisterWellKnownClientType (Type type, string objectUrl);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RegisterWellKnownClientType(class System.Type type, string objectUrl) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.RemotingConfiguration.RegisterWellKnownClientType(System.Type,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RegisterWellKnownClientType(Type ^ type, System::String ^ objectUrl);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="objectUrl" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type">Obiekt <see cref="T:System.Type" />.</param>
        <param name="objectUrl">Adres URL obiektu dobrze znanego klienta.</param>
        <summary>Rejestruje obiekt <see cref="T:System.Type" /> po stronie klienta jako dobrze znanego typu, który może zostać uaktywnione na serwerze przy użyciu podanych parametrów zainicjować nowe wystąpienie klasy <see cref="T:System.Runtime.Remoting.WellKnownClientTypeEntry" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Każdy klient, który zna identyfikator URI zarejestrowanych dobrze znane obiekty można uzyskać serwera proxy dla obiekt rejestrując go preferuje z kanału <xref:System.Runtime.Remoting.Channels.ChannelServices>i aktywowanie obiektu przez wywołanie metody `new` lub <xref:System.Activator.GetObject%2A?displayProperty=nameWithType>. Aby aktywować dobrze znane obiekty z `new`, najpierw należy zarejestrować typ dobrze znanego obiektu na kliencie przy użyciu <xref:System.Runtime.Remoting.RemotingConfiguration.RegisterWellKnownClientType%2A> metody. Wywoływanie <xref:System.Runtime.Remoting.RemotingConfiguration.RegisterWellKnownClientType%2A> metoda daje w zdalnej infrastrukturze lokalizacji obiektu zdalnego, dzięki czemu `new` — słowo kluczowe, aby go utworzyć. Jeśli korzystasz z drugiej strony, <xref:System.Activator.GetObject%2A?displayProperty=nameWithType> metodę, aby aktywować dobrze znane obiekty, musisz podać go z adresem URL obiektu jako argument, niezbędne jest nie uprzedniej rejestracji po stronie klienta.  
  
 Aby uzyskać szczegółowy opis dobrze znane obiekty, zobacz [ &#91; \<topic://cpconServerActivation >&#93;](http://msdn.microsoft.com/library/77ded6e2-4ca8-448b-acf2-562d27fd4396).  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje rejestracji typu obiektu po stronie klienta, jak dobrze znanego typu. Dla kodu serwera umożliwiająca kodu przedstawioną klienta, zobacz przykład <xref:System.Runtime.Remoting.RemotingConfiguration.RegisterWellKnownServiceType%2A> metody.  
  
 [!code-cpp[RemotingConfiguration.ServerActivation1#5](~/samples/snippets/cpp/VS_Snippets_Remoting/RemotingConfiguration.ServerActivation1/CPP/client.cpp#5)]
 [!code-csharp[RemotingConfiguration.ServerActivation1#5](~/samples/snippets/csharp/VS_Snippets_Remoting/RemotingConfiguration.ServerActivation1/CS/client.cs#5)]
 [!code-vb[RemotingConfiguration.ServerActivation1#5](~/samples/snippets/visualbasic/VS_Snippets_Remoting/RemotingConfiguration.ServerActivation1/VB/client.vb#5)]  
[!code-cpp[RemotingConfiguration.ServerActivation1#6](~/samples/snippets/cpp/VS_Snippets_Remoting/RemotingConfiguration.ServerActivation1/CPP/client.cpp#6)]
[!code-csharp[RemotingConfiguration.ServerActivation1#6](~/samples/snippets/csharp/VS_Snippets_Remoting/RemotingConfiguration.ServerActivation1/CS/client.cs#6)]
[!code-vb[RemotingConfiguration.ServerActivation1#6](~/samples/snippets/visualbasic/VS_Snippets_Remoting/RemotingConfiguration.ServerActivation1/VB/client.vb#6)]  
[!code-cpp[RemotingConfiguration.ServerActivation1#7](~/samples/snippets/cpp/VS_Snippets_Remoting/RemotingConfiguration.ServerActivation1/CPP/client.cpp#7)]
[!code-csharp[RemotingConfiguration.ServerActivation1#7](~/samples/snippets/csharp/VS_Snippets_Remoting/RemotingConfiguration.ServerActivation1/CS/client.cs#7)]
[!code-vb[RemotingConfiguration.ServerActivation1#7](~/samples/snippets/visualbasic/VS_Snippets_Remoting/RemotingConfiguration.ServerActivation1/VB/client.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">Co najmniej jeden z obiektów wywołujących wyżej w stos wywołań nie ma uprawnienia do konfigurowania usług zdalnych typy i kanałów.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">Do konfiguracji w zdalnej infrastrukturze. Żądanie wartość: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />; Wartość uprawnienia: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.RemotingConfiguration" /></permission>
        <altmember cref="T:System.Runtime.Remoting.WellKnownClientTypeEntry" />
        <altmember cref="T:System.Runtime.Remoting.WellKnownServiceTypeEntry" />
      </Docs>
    </Member>
    <MemberGroup MemberName="RegisterWellKnownServiceType">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Rejestruje obiekt <see cref="T:System.Type" /> na końcu usługi jako dobrze znanego typu (jednego wywołania lub singleton).</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="RegisterWellKnownServiceType">
      <MemberSignature Language="C#" Value="public static void RegisterWellKnownServiceType (System.Runtime.Remoting.WellKnownServiceTypeEntry entry);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RegisterWellKnownServiceType(class System.Runtime.Remoting.WellKnownServiceTypeEntry entry) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.RemotingConfiguration.RegisterWellKnownServiceType(System.Runtime.Remoting.WellKnownServiceTypeEntry)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RegisterWellKnownServiceType (entry As WellKnownServiceTypeEntry)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RegisterWellKnownServiceType(System::Runtime::Remoting::WellKnownServiceTypeEntry ^ entry);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entry" Type="System.Runtime.Remoting.WellKnownServiceTypeEntry" />
      </Parameters>
      <Docs>
        <param name="entry">Ustawienia konfiguracji dla dobrze znanego typu.</param>
        <summary>Rejestruje obiekt <see cref="T:System.Type" /> rejestrowane w określonych <see cref="T:System.Runtime.Remoting.WellKnownServiceTypeEntry" /> na końcu usługi jako dobrze znanego typu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Każdy klient, który zna identyfikator URI zarejestrowanych dobrze znane obiekty można uzyskać serwera proxy dla obiekt rejestrując kanału preferuje go z <xref:System.Runtime.Remoting.Channels.ChannelServices>i aktywowanie obiektu przez wywołanie metody `new` lub <xref:System.Activator.GetObject%2A?displayProperty=nameWithType> metody. Aby aktywować dobrze znane obiekty z `new`, najpierw należy zarejestrować typ dobrze znanego obiektu na kliencie przy użyciu <xref:System.Runtime.Remoting.RemotingConfiguration.RegisterWellKnownClientType%2A> metody. Wywoływanie <xref:System.Runtime.Remoting.RemotingConfiguration.RegisterWellKnownClientType%2A> metoda daje w zdalnej infrastrukturze lokalizacji obiektu zdalnego, dzięki czemu `new` — słowo kluczowe, aby go utworzyć. Jeśli korzystasz z drugiej strony, <xref:System.Activator.GetObject%2A?displayProperty=nameWithType> metodę, aby aktywować dobrze znane obiekty, musisz podać go z adresem URL obiektu jako argument, niezbędne jest nie uprzedniej rejestracji po stronie klienta.  
  
 Po wywołaniu dociera do serwera, programu .NET Framework wyodrębnia identyfikatora URI z komunikatu, sprawdza w tabelach zdalnych do zlokalizowania odwołania dla obiekt, który odpowiada identyfikator URI, a następnie tworzy wystąpienie obiektu w razie potrzeby przekazywania wywołanie metody do obiektu. Jeśli obiekt jest zarejestrowany jako <xref:System.Runtime.Remoting.WellKnownObjectMode.SingleCall>, zostanie zniszczony, po zakończeniu wywołania metody. Nowe wystąpienie obiektu jest tworzona dla każdej metody o nazwie. Jedyną różnicą między <xref:System.Activator.GetObject%2A?displayProperty=nameWithType> i `new` poprzedniego umożliwia określenie adresu URL jako parametru, a drugie pobiera adres URL z konfiguracji.  
  
 Samego obiektu zdalnego nie jest utworzona przez proces rejestracji. To tylko się stanie, gdy klient podejmie próbę wywołania metody dla obiektu lub uaktywnia obiekt po stronie klienta.  
  
 Aby uzyskać szczegółowy opis dobrze znane obiekty, zobacz [ &#91; \<topic://cpconServerActivation >&#93;](http://msdn.microsoft.com/library/77ded6e2-4ca8-448b-acf2-562d27fd4396).  
  
   
  
## Examples  
 [!code-cpp[CreateObjRef2#2](~/samples/snippets/cpp/VS_Snippets_Remoting/CreateObjRef2/CPP/example.cpp#2)]
 [!code-csharp[CreateObjRef2#2](~/samples/snippets/csharp/VS_Snippets_Remoting/CreateObjRef2/CS/example.cs#2)]
 [!code-vb[CreateObjRef2#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/CreateObjRef2/VB/example.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">Co najmniej jeden z obiektów wywołujących wyżej w stos wywołań nie ma uprawnienia do konfigurowania usług zdalnych typy i kanałów.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">Do konfiguracji w zdalnej infrastrukturze. Żądanie wartość: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />; Wartość uprawnienia: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.RemotingConfiguration" /></permission>
        <altmember cref="T:System.Runtime.Remoting.WellKnownServiceTypeEntry" />
        <altmember cref="T:System.Runtime.Remoting.WellKnownClientTypeEntry" />
      </Docs>
    </Member>
    <Member MemberName="RegisterWellKnownServiceType">
      <MemberSignature Language="C#" Value="public static void RegisterWellKnownServiceType (Type type, string objectUri, System.Runtime.Remoting.WellKnownObjectMode mode);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RegisterWellKnownServiceType(class System.Type type, string objectUri, valuetype System.Runtime.Remoting.WellKnownObjectMode mode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.RemotingConfiguration.RegisterWellKnownServiceType(System.Type,System.String,System.Runtime.Remoting.WellKnownObjectMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RegisterWellKnownServiceType(Type ^ type, System::String ^ objectUri, System::Runtime::Remoting::WellKnownObjectMode mode);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="objectUri" Type="System.String" />
        <Parameter Name="mode" Type="System.Runtime.Remoting.WellKnownObjectMode" />
      </Parameters>
      <Docs>
        <param name="type">Obiekt <see cref="T:System.Type" />.</param>
        <param name="objectUri">Obiekt URI.</param>
        <param name="mode">Tryb rejestrowanego typu dobrze znane obiekty aktywacji. (Zobacz <see cref="T:System.Runtime.Remoting.WellKnownObjectMode" />.)</param>
        <summary>Rejestruje obiekt <see cref="T:System.Type" /> po stronie usługi jako dobrze znanego typu przy użyciu podanych parametrów zainicjować nowe wystąpienie klasy <see cref="T:System.Runtime.Remoting.WellKnownServiceTypeEntry" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Każdy klient, który zna identyfikator URI zarejestrowanych dobrze znane obiekty można uzyskać serwera proxy dla obiekt rejestrując kanału preferuje go z <xref:System.Runtime.Remoting.Channels.ChannelServices>i aktywowanie obiektu przez wywołanie metody `new` lub <xref:System.Activator.GetObject%2A?displayProperty=nameWithType> metody. Aby aktywować dobrze znane obiekty z `new`, najpierw należy zarejestrować typ dobrze znanego obiektu na kliencie przy użyciu <xref:System.Runtime.Remoting.RemotingConfiguration.RegisterWellKnownClientType%2A> metody. Wywoływanie <xref:System.Runtime.Remoting.RemotingConfiguration.RegisterWellKnownClientType%2A> metoda daje w zdalnej infrastrukturze lokalizacji obiektu zdalnego, dzięki czemu `new` — słowo kluczowe, aby go utworzyć. Jeśli korzystasz z drugiej strony, <xref:System.Activator.GetObject%2A?displayProperty=nameWithType> metodę, aby aktywować dobrze znane obiekty, musisz podać go z adresem URL obiektu jako argument, niezbędne jest nie uprzedniej rejestracji po stronie klienta.  
  
 Po wywołaniu dociera do serwera, programu .NET Framework wyodrębnia identyfikatora URI z komunikatu, sprawdza w tabelach zdalnych do zlokalizowania odwołania dla obiekt, który odpowiada identyfikator URI, a następnie tworzy wystąpienie obiektu w razie potrzeby przekazywania wywołanie metody do obiektu. Jeśli obiekt jest zarejestrowany jako <xref:System.Runtime.Remoting.WellKnownObjectMode.SingleCall>, zostanie zniszczony, po zakończeniu wywołania metody. Nowe wystąpienie obiektu jest tworzona dla każdej metody o nazwie. Jedyną różnicą między <xref:System.Activator.GetObject%2A?displayProperty=nameWithType> i `new` poprzedniego umożliwia określenie adresu URL jako parametru, a drugie pobiera adres URL z konfiguracji.  
  
 Samego obiektu zdalnego nie jest utworzona przez proces rejestracji. To tylko się stanie, gdy klient podejmie próbę wywołania metody dla obiektu lub uaktywnia obiekt po stronie klienta.  
  
 Aby uzyskać szczegółowy opis dobrze znane obiekty, zobacz [ &#91; \<topic://cpconServerActivation >&#93;](http://msdn.microsoft.com/library/77ded6e2-4ca8-448b-acf2-562d27fd4396).  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje rejestracji typu obiektu na serwerze jako typ dobrze znanego obiektu. Kod klienta, który odpowiada kod serwera przedstawioną, zobacz przykład <xref:System.Runtime.Remoting.RemotingConfiguration.RegisterWellKnownClientType%2A> metody.  
  
 [!code-cpp[RemotingConfiguration.ServerActivation1#1](~/samples/snippets/cpp/VS_Snippets_Remoting/RemotingConfiguration.ServerActivation1/CPP/server.cpp#1)]
 [!code-csharp[RemotingConfiguration.ServerActivation1#1](~/samples/snippets/csharp/VS_Snippets_Remoting/RemotingConfiguration.ServerActivation1/CS/server.cs#1)]
 [!code-vb[RemotingConfiguration.ServerActivation1#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/RemotingConfiguration.ServerActivation1/VB/server.vb#1)]  
[!code-cpp[RemotingConfiguration.ServerActivation1#2](~/samples/snippets/cpp/VS_Snippets_Remoting/RemotingConfiguration.ServerActivation1/CPP/server.cpp#2)]
[!code-csharp[RemotingConfiguration.ServerActivation1#2](~/samples/snippets/csharp/VS_Snippets_Remoting/RemotingConfiguration.ServerActivation1/CS/server.cs#2)]
[!code-vb[RemotingConfiguration.ServerActivation1#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/RemotingConfiguration.ServerActivation1/VB/server.vb#2)]  
[!code-cpp[RemotingConfiguration.ServerActivation1#3](~/samples/snippets/cpp/VS_Snippets_Remoting/RemotingConfiguration.ServerActivation1/CPP/server.cpp#3)]
[!code-csharp[RemotingConfiguration.ServerActivation1#3](~/samples/snippets/csharp/VS_Snippets_Remoting/RemotingConfiguration.ServerActivation1/CS/server.cs#3)]
[!code-vb[RemotingConfiguration.ServerActivation1#3](~/samples/snippets/visualbasic/VS_Snippets_Remoting/RemotingConfiguration.ServerActivation1/VB/server.vb#3)]  
  
 Poniższy przykład kodu pokazuje obiekt usługi zarejestrowany w powyższym kodzie przykładowym.  
  
 [!code-cpp[RemotingConfiguration.ServerActivation1#4](~/samples/snippets/cpp/VS_Snippets_Remoting/RemotingConfiguration.ServerActivation1/CPP/service.cpp#4)]
 [!code-csharp[RemotingConfiguration.ServerActivation1#4](~/samples/snippets/csharp/VS_Snippets_Remoting/RemotingConfiguration.ServerActivation1/CS/service.cs#4)]
 [!code-vb[RemotingConfiguration.ServerActivation1#4](~/samples/snippets/visualbasic/VS_Snippets_Remoting/RemotingConfiguration.ServerActivation1/VB/service.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">Co najmniej jeden z obiektów wywołujących wyżej w stos wywołań nie ma uprawnienia do konfigurowania usług zdalnych typy i kanałów.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">Do konfiguracji w zdalnej infrastrukturze. Żądanie wartość: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />; Wartość uprawnienia: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.RemotingConfiguration" /></permission>
        <altmember cref="T:System.Runtime.Remoting.WellKnownServiceTypeEntry" />
        <altmember cref="T:System.Runtime.Remoting.WellKnownClientTypeEntry" />
      </Docs>
    </Member>
  </Members>
</Type>