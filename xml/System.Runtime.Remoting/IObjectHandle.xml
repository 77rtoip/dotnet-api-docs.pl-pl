<Type Name="IObjectHandle" FullName="System.Runtime.Remoting.IObjectHandle">
  <TypeSignature Language="C#" Value="public interface IObjectHandle" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IObjectHandle" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.Remoting.IObjectHandle" />
  <TypeSignature Language="VB.NET" Value="Public Interface IObjectHandle" />
  <TypeSignature Language="C++ CLI" Value="public interface class IObjectHandle" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("C460E2B4-E199-412a-8456-84DC3E4838C3")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.InterfaceType(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="8c2cd-101">Definiuje interfejs dla Odkodowywanie obiektów kierowanie przez wartości z pośrednie.</span><span class="sxs-lookup"><span data-stu-id="8c2cd-101">Defines the interface for unwrapping marshal-by-value objects from indirection.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8c2cd-102">Kierowanie przez wartość obiekty mogą być zwracane za pośrednictwem pośredni, co obiekt wywołujący, aby formant przy ładowaniu obiektu w ich domenie.</span><span class="sxs-lookup"><span data-stu-id="8c2cd-102">Marshal-by-value objects can be returned through an indirection, allowing the caller to control when the object is loaded into their domain.</span></span> <span data-ttu-id="8c2cd-103">Obiekt wywołujący może dekodowania obiekt z pośredni za pośrednictwem tego interfejsu.</span><span class="sxs-lookup"><span data-stu-id="8c2cd-103">The caller can unwrap the object from the indirection through this interface.</span></span>  
  
 <span data-ttu-id="8c2cd-104">Implementacja klasy <xref:System.Runtime.Remoting.IObjectHandle> interfejs może służyć do przekazania obiektu (w stanie opakowana) między wielu domen aplikacji bez ładowania metadanych dla obiektu opakowana w każdym <xref:System.AppDomain> za pośrednictwem której <xref:System.Runtime.Remoting.IObjectHandle> porusza się.</span><span class="sxs-lookup"><span data-stu-id="8c2cd-104">The class implementing the <xref:System.Runtime.Remoting.IObjectHandle> interface can be used to pass an object (in a wrapped state) between multiple application domains without loading the metadata for the wrapped object in each <xref:System.AppDomain> through which the <xref:System.Runtime.Remoting.IObjectHandle> travels.</span></span> <span data-ttu-id="8c2cd-105">W związku z tym <xref:System.Runtime.Remoting.IObjectHandle> klasy zapewnia kontrolę wywołującego sytuacji, w których <xref:System.Type> obiektu zdalnego jest ładowany w ich domenie.</span><span class="sxs-lookup"><span data-stu-id="8c2cd-105">Thus, the <xref:System.Runtime.Remoting.IObjectHandle> class gives the caller control of when the <xref:System.Type> of the remote object is loaded into their domain.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Unwrap">
      <MemberSignature Language="C#" Value="public object Unwrap ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Unwrap() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.IObjectHandle.Unwrap" />
      <MemberSignature Language="VB.NET" Value="Public Function Unwrap () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Unwrap();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8c2cd-106">Dekoduje obiektu.</span><span class="sxs-lookup"><span data-stu-id="8c2cd-106">Unwraps the object.</span></span></summary>
        <returns><span data-ttu-id="8c2cd-107">Obiekt bez otoki.</span><span class="sxs-lookup"><span data-stu-id="8c2cd-107">The unwrapped object.</span></span></returns>
        <remarks>To be added.</remarks>
        <block subset="none" type="usage">
          <para><span data-ttu-id="8c2cd-108">A <see cref="T:System.Runtime.Remoting.ObjectHandle" /> jest zdalny <see cref="T:System.MarshalByRefObject" /> i są śledzone przez usługę okres istnienia komunikacji zdalnej.</span><span class="sxs-lookup"><span data-stu-id="8c2cd-108">A <see cref="T:System.Runtime.Remoting.ObjectHandle" /> is a remoted <see cref="T:System.MarshalByRefObject" /> and is tracked by the remoting lifetime service.</span></span> <span data-ttu-id="8c2cd-109">Wywołanie metody bieżącego może zakończyć się niepowodzeniem, jeśli okres istnienia dzierżawy na <see cref="T:System.Runtime.Remoting.ObjectHandle" /> wygaśnie.</span><span class="sxs-lookup"><span data-stu-id="8c2cd-109">A call to the current method might fail if the lifetime lease on the <see cref="T:System.Runtime.Remoting.ObjectHandle" /> expires.</span></span></para>
        </block>
      </Docs>
    </Member>
  </Members>
</Type>