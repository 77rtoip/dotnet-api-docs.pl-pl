<Type Name="Project" FullName="Microsoft.Build.Evaluation.Project">
  <Metadata><Meta Name="ms.openlocfilehash" Value="fadacea692f5841d93eab99cf32f6ff5b86bb4d5" /><Meta Name="ms.sourcegitcommit" Value="756d085f27705e86604f1bba5f2086ee23761acf" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="01/30/2019" /><Meta Name="ms.locfileid" Value="55423748" /></Metadata><TypeSignature Language="C#" Value="public class Project" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Project extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Build.Evaluation.Project" />
  <TypeSignature Language="VB.NET" Value="Public Class Project" />
  <TypeSignature Language="C++ CLI" Value="public ref class Project" />
  <TypeSignature Language="F#" Value="type Project = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Build</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Diagnostics.DebuggerDisplay("{FullPath} EffectiveToolsVersion={ToolsVersion} #GlobalProperties={data.globalProperties.Count} #Properties={data.Properties.Count} #ItemTypes={data.ItemTypes.Count} #ItemDefinitions={data.ItemDefinitions.Count} #Items={data.Items.Count} #Targets={data.Targets.Count}")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="0111e-101">Reprezentuje projekt z semantyką czasu projektowania.</span><span class="sxs-lookup"><span data-stu-id="0111e-101">Represents a project with design time semantics.</span></span> <span data-ttu-id="0111e-102">Ta klasa można ładować pliki projektów, Edytuj właściwości i elementy i kompilować projekty.</span><span class="sxs-lookup"><span data-stu-id="0111e-102">This class can load project files, edit items and properties and build projects.</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="0111e-103">Tworzy pusty projekt za pomocą właściwości globalne w kolekcji globalnego projektu i domyślna wersja narzędzi.</span><span class="sxs-lookup"><span data-stu-id="0111e-103">Constructs an empty project using the global project collection global properties and default tools version.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Project ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Project();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="0111e-104">Tworzy pusty projekt za pomocą właściwości globalne w kolekcji globalnego projektu i domyślna wersja narzędzi.</span><span class="sxs-lookup"><span data-stu-id="0111e-104">Constructs an empty project using the global project collection global properties and default tools version.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0111e-105">Ten projekt jest dodawany do kolekcji globalnego projektu, gdy jest on podawany pełną ścieżkę do pliku projektu źródłowego zwykle przez zapisania projektu.</span><span class="sxs-lookup"><span data-stu-id="0111e-105">This project is added to the global project collection when it is given the full path to the source project file, typically by saving the project.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Project (Microsoft.Build.Construction.ProjectRootElement xml);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.Build.Construction.ProjectRootElement xml) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.#ctor(Microsoft.Build.Construction.ProjectRootElement)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (xml As ProjectRootElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Project(Microsoft::Build::Construction::ProjectRootElement ^ xml);" />
      <MemberSignature Language="F#" Value="new Microsoft.Build.Evaluation.Project : Microsoft.Build.Construction.ProjectRootElement -&gt; Microsoft.Build.Evaluation.Project" Usage="new Microsoft.Build.Evaluation.Project xml" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="xml" Type="Microsoft.Build.Construction.ProjectRootElement" />
      </Parameters>
      <Docs>
        <param name="xml"><span data-ttu-id="0111e-106">ProjectRootElement na potrzeby oceny.</span><span class="sxs-lookup"><span data-stu-id="0111e-106">ProjectRootElement to use for evaluation.</span></span></param>
        <summary><span data-ttu-id="0111e-107">Tworzy pusty projekt i ocenia je przy użyciu głównego danego projektu i projektu globalnego kolekcji globalnych właściwości i domyślna wersja narzędzia.</span><span class="sxs-lookup"><span data-stu-id="0111e-107">Constructs an empty project and evaluates it using the given project root and the global project collection global properties and default tools version.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0111e-108">Ten projekt jest dodawany do kolekcji globalnego projektu, gdy tego projektu lub katalogu głównego danego projektu podano pełną ścieżkę do pliku projektu źródłowego.</span><span class="sxs-lookup"><span data-stu-id="0111e-108">This project is added to the global project collection when either this project or the given project root is given the full path to the source project file.</span></span>  
  
 <span data-ttu-id="0111e-109">Wywołuje wyjątek InvalidProjectFileException, jeśli nie powiedzie się ocena.</span><span class="sxs-lookup"><span data-stu-id="0111e-109">Throws InvalidProjectFileException if the evaluation fails.</span></span> <span data-ttu-id="0111e-110">Generuje wyjątek InvalidOperationException, jeśli istnieje już załadowany równoważny projekt w kolekcji projektu.</span><span class="sxs-lookup"><span data-stu-id="0111e-110">Throws InvalidOperationException if there is already an equivalent project loaded in the project collection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Project (Microsoft.Build.Evaluation.ProjectCollection projectCollection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.Build.Evaluation.ProjectCollection projectCollection) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.#ctor(Microsoft.Build.Evaluation.ProjectCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Project(Microsoft::Build::Evaluation::ProjectCollection ^ projectCollection);" />
      <MemberSignature Language="F#" Value="new Microsoft.Build.Evaluation.Project : Microsoft.Build.Evaluation.ProjectCollection -&gt; Microsoft.Build.Evaluation.Project" Usage="new Microsoft.Build.Evaluation.Project projectCollection" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="projectCollection" Type="Microsoft.Build.Evaluation.ProjectCollection" />
      </Parameters>
      <Docs>
        <param name="projectCollection"><span data-ttu-id="0111e-111">Nowy projekt zostanie dodany do kolekcji projektu.</span><span class="sxs-lookup"><span data-stu-id="0111e-111">The project collection that the new project is added to.</span></span></param>
        <summary><span data-ttu-id="0111e-112">Tworzy pusty projekt przy użyciu globalne właściwości kolekcji danego projektu i domyślna wersja narzędzi.</span><span class="sxs-lookup"><span data-stu-id="0111e-112">Constructs an empty project using the given project collection global properties and default tools version.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0111e-113">Ten projekt jest dodawany do kolekcji danego projektu, gdy jest on podawany pełną ścieżkę do pliku projektu źródłowego zwykle przez zapisania projektu.</span><span class="sxs-lookup"><span data-stu-id="0111e-113">This project is added to the given project collection when it is given the full path to the source project file, typically by saving the project.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Project (string projectFile);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string projectFile) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (projectFile As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Project(System::String ^ projectFile);" />
      <MemberSignature Language="F#" Value="new Microsoft.Build.Evaluation.Project : string -&gt; Microsoft.Build.Evaluation.Project" Usage="new Microsoft.Build.Evaluation.Project projectFile" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="projectFile" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="projectFile"><span data-ttu-id="0111e-114">Plik projektu źródła, która ma zostać obliczone.</span><span class="sxs-lookup"><span data-stu-id="0111e-114">The source project file to be evaluated.</span></span></param>
        <summary><span data-ttu-id="0111e-115">Konstruuje projekt i ocenia je w pliku projektu danego źródła i globalne właściwości kolekcji globalnego projektu i domyślna wersja narzędzi.</span><span class="sxs-lookup"><span data-stu-id="0111e-115">Constructs a project and evaluates it from the given source project file and with the global project collection global properties and default tools version.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0111e-116">Projekt jest dodawany do kolekcji projektu globalnego.</span><span class="sxs-lookup"><span data-stu-id="0111e-116">The project is added to the global project collection.</span></span>  
  
 <span data-ttu-id="0111e-117">Generuje wyjątek InvalidOperationException, jeśli istnieje już projekt w kolekcji projektów, która daje w wyniku tego pliku projektu źródłowego.</span><span class="sxs-lookup"><span data-stu-id="0111e-117">Throws InvalidOperationException if there is already a project in the project collection that evaluates this source project file.</span></span> <span data-ttu-id="0111e-118">Może zgłaszać wyjątki dotyczące operacji typu We/Wy.</span><span class="sxs-lookup"><span data-stu-id="0111e-118">May throw IO-related exceptions.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:Microsoft.Build.Exceptions.InvalidProjectFileException"><span data-ttu-id="0111e-119">Jeśli ocena zakończy się niepowodzeniem.</span><span class="sxs-lookup"><span data-stu-id="0111e-119">If the evaluation fails.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Project (System.Xml.XmlReader xmlReader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xml.XmlReader xmlReader) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.#ctor(System.Xml.XmlReader)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Project(System::Xml::XmlReader ^ xmlReader);" />
      <MemberSignature Language="F#" Value="new Microsoft.Build.Evaluation.Project : System.Xml.XmlReader -&gt; Microsoft.Build.Evaluation.Project" Usage="new Microsoft.Build.Evaluation.Project xmlReader" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="xmlReader" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="xmlReader"><span data-ttu-id="0111e-120">Czytnik Xml, z którego ma być odczytywany kod źródłowy projektu.</span><span class="sxs-lookup"><span data-stu-id="0111e-120">Xml reader to read project source code from.</span></span></param>
        <summary><span data-ttu-id="0111e-121">Konstruuje projekt i ocenia kod źródłowy z poziomu danego czytnika XML.</span><span class="sxs-lookup"><span data-stu-id="0111e-121">Constructs a project and evaluates the source code from the given XML reader.</span></span> <span data-ttu-id="0111e-122">Kod źródłowy jest oceniany z globalnych właściwości kolekcji globalnego projektu i domyślna wersja narzędzi.</span><span class="sxs-lookup"><span data-stu-id="0111e-122">The source code is evaluated with the global project collection global properties and default tools version.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0111e-123">Ten projekt jest dodawany do kolekcji globalnego projektu, gdy jest on podawany pełną ścieżkę do pliku projektu źródłowego zwykle przez zapisania projektu.</span><span class="sxs-lookup"><span data-stu-id="0111e-123">This project is added to the global project collection when it is given the full path to the source project file, typically by saving the project.</span></span>  
  
 <span data-ttu-id="0111e-124">Wywołuje wyjątek InvalidProjectFileException, jeśli nie powiedzie się ocena.</span><span class="sxs-lookup"><span data-stu-id="0111e-124">Throws InvalidProjectFileException if the evaluation fails.</span></span> <span data-ttu-id="0111e-125">Generuje wyjątek InvalidOperationException, jeśli istnieje już załadowany równoważny projekt w kolekcji projektu.</span><span class="sxs-lookup"><span data-stu-id="0111e-125">Throws InvalidOperationException if there is already an equivalent project loaded in the project collection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Project (Microsoft.Build.Construction.ProjectRootElement xml, System.Collections.Generic.IDictionary&lt;string,string&gt; globalProperties, string toolsVersion);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.Build.Construction.ProjectRootElement xml, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; globalProperties, string toolsVersion) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.#ctor(Microsoft.Build.Construction.ProjectRootElement,System.Collections.Generic.IDictionary{System.String,System.String},System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (xml As ProjectRootElement, globalProperties As IDictionary(Of String, String), toolsVersion As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Project(Microsoft::Build::Construction::ProjectRootElement ^ xml, System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ globalProperties, System::String ^ toolsVersion);" />
      <MemberSignature Language="F#" Value="new Microsoft.Build.Evaluation.Project : Microsoft.Build.Construction.ProjectRootElement * System.Collections.Generic.IDictionary&lt;string, string&gt; * string -&gt; Microsoft.Build.Evaluation.Project" Usage="new Microsoft.Build.Evaluation.Project (xml, globalProperties, toolsVersion)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="xml" Type="Microsoft.Build.Construction.ProjectRootElement" />
        <Parameter Name="globalProperties" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="toolsVersion" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="xml"><span data-ttu-id="0111e-126">Katalog główny projektu na potrzeby oceny.</span><span class="sxs-lookup"><span data-stu-id="0111e-126">The project root to use for evaluation.</span></span></param>
        <param name="globalProperties"><span data-ttu-id="0111e-127">Właściwości globalne, według których należy dokonać oceny.</span><span class="sxs-lookup"><span data-stu-id="0111e-127">Global properties to evaluate with.</span></span> <span data-ttu-id="0111e-128">Może mieć wartość null; w takim przypadku użyte zostaną globalne właściwości zawarte w kolekcji projektu.</span><span class="sxs-lookup"><span data-stu-id="0111e-128">May be null in which case the containing project collection's global properties will be used.</span></span></param>
        <param name="toolsVersion"><span data-ttu-id="0111e-129">Wersja narzędzi, których należy użyć do oceny.</span><span class="sxs-lookup"><span data-stu-id="0111e-129">Tools version to evaluate with.</span></span> <span data-ttu-id="0111e-130">Może mieć wartość zerową.</span><span class="sxs-lookup"><span data-stu-id="0111e-130">May be null.</span></span></param>
        <summary><span data-ttu-id="0111e-131">Tworzy pusty projekt i ocenia je przy użyciu katalogu głównego danego projektu i z danej właściwości globalne, a podana wersja narzędzi.</span><span class="sxs-lookup"><span data-stu-id="0111e-131">Constructs an empty project and evaluates it using the given project root and with the given global properties and given tools version.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0111e-132">Ten projekt jest dodawany do kolekcji globalnego projektu, gdy tego projektu lub katalogu głównego danego projektu podano pełną ścieżkę do pliku projektu źródłowego.</span><span class="sxs-lookup"><span data-stu-id="0111e-132">This project is added to the global project collection when either this project or the given project root is given the full path to the source project file.</span></span>  
  
 <span data-ttu-id="0111e-133">Wywołuje wyjątek InvalidProjectFileException, jeśli nie powiedzie się ocena.</span><span class="sxs-lookup"><span data-stu-id="0111e-133">Throws InvalidProjectFileException if the evaluation fails.</span></span> <span data-ttu-id="0111e-134">Generuje wyjątek InvalidOperationException, jeśli istnieje już załadowany równoważny projekt w kolekcji projektu.</span><span class="sxs-lookup"><span data-stu-id="0111e-134">Throws InvalidOperationException if there is already an equivalent project loaded in the project collection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Project (System.Collections.Generic.IDictionary&lt;string,string&gt; globalProperties, string toolsVersion, Microsoft.Build.Evaluation.ProjectCollection projectCollection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IDictionary`2&lt;string, string&gt; globalProperties, string toolsVersion, class Microsoft.Build.Evaluation.ProjectCollection projectCollection) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.#ctor(System.Collections.Generic.IDictionary{System.String,System.String},System.String,Microsoft.Build.Evaluation.ProjectCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Project(System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ globalProperties, System::String ^ toolsVersion, Microsoft::Build::Evaluation::ProjectCollection ^ projectCollection);" />
      <MemberSignature Language="F#" Value="new Microsoft.Build.Evaluation.Project : System.Collections.Generic.IDictionary&lt;string, string&gt; * string * Microsoft.Build.Evaluation.ProjectCollection -&gt; Microsoft.Build.Evaluation.Project" Usage="new Microsoft.Build.Evaluation.Project (globalProperties, toolsVersion, projectCollection)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="globalProperties" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="toolsVersion" Type="System.String" />
        <Parameter Name="projectCollection" Type="Microsoft.Build.Evaluation.ProjectCollection" />
      </Parameters>
      <Docs>
        <param name="globalProperties"><span data-ttu-id="0111e-135">Właściwości globalne, według których należy dokonać oceny.</span><span class="sxs-lookup"><span data-stu-id="0111e-135">Global properties to evaluate with.</span></span> <span data-ttu-id="0111e-136">Może mieć wartość null; w takim przypadku użyte zostaną globalne właściwości zawarte w kolekcji projektu.</span><span class="sxs-lookup"><span data-stu-id="0111e-136">May be null in which case the containing project collection's global properties will be used.</span></span></param>
        <param name="toolsVersion"><span data-ttu-id="0111e-137">Wersja narzędzia używane do oceny projektu.</span><span class="sxs-lookup"><span data-stu-id="0111e-137">The tools version used to evaluate the project.</span></span> <span data-ttu-id="0111e-138">Może mieć wartość zerową.</span><span class="sxs-lookup"><span data-stu-id="0111e-138">May be null.</span></span></param>
        <param name="projectCollection"><span data-ttu-id="0111e-139">Kolekcja projektów nowy projekt zostanie dodany do.</span><span class="sxs-lookup"><span data-stu-id="0111e-139">The project collection the new project will be added to.</span></span></param>
        <summary><span data-ttu-id="0111e-140">Tworzy pusty projekt, aby oceniane z kolekcji danego projektu oraz z danej właściwości globalne, a podana wersja narzędzia.</span><span class="sxs-lookup"><span data-stu-id="0111e-140">Constructs an empty project, to be evaluated with the given project collection and with the given global properties and given tools version.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0111e-141">Projekt jest dodawany do kolekcji określonego projektu, gdy jest on podawany pełną ścieżkę do pliku projektu źródłowego zwykle przez zapisania projektu.</span><span class="sxs-lookup"><span data-stu-id="0111e-141">The project is added to the specified project collection when it is given the full path to the source project file, typically by saving the project.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Project (string projectFile, System.Collections.Generic.IDictionary&lt;string,string&gt; globalProperties, string toolsVersion);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string projectFile, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; globalProperties, string toolsVersion) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (projectFile As String, globalProperties As IDictionary(Of String, String), toolsVersion As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Project(System::String ^ projectFile, System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ globalProperties, System::String ^ toolsVersion);" />
      <MemberSignature Language="F#" Value="new Microsoft.Build.Evaluation.Project : string * System.Collections.Generic.IDictionary&lt;string, string&gt; * string -&gt; Microsoft.Build.Evaluation.Project" Usage="new Microsoft.Build.Evaluation.Project (projectFile, globalProperties, toolsVersion)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="projectFile" Type="System.String" />
        <Parameter Name="globalProperties" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="toolsVersion" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="projectFile"><span data-ttu-id="0111e-142">Ścieżka do pliku źródłowego projektu, który ma być poddany ocenie.</span><span class="sxs-lookup"><span data-stu-id="0111e-142">The path to the source project file to be evaluated.</span></span></param>
        <param name="globalProperties"><span data-ttu-id="0111e-143">Właściwości globalne, według których należy dokonać oceny.</span><span class="sxs-lookup"><span data-stu-id="0111e-143">Global properties to evaluate with.</span></span> <span data-ttu-id="0111e-144">Może mieć wartość null; w takim przypadku użyte zostaną globalne właściwości zawarte w kolekcji projektu.</span><span class="sxs-lookup"><span data-stu-id="0111e-144">May be null in which case the containing project collection's global properties will be used.</span></span></param>
        <param name="toolsVersion"><span data-ttu-id="0111e-145">Wersja narzędzi, których należy użyć do oceny.</span><span class="sxs-lookup"><span data-stu-id="0111e-145">Tools version to evaluate with.</span></span> <span data-ttu-id="0111e-146">Może mieć wartość zerową.</span><span class="sxs-lookup"><span data-stu-id="0111e-146">May be null.</span></span></param>
        <summary><span data-ttu-id="0111e-147">Konstruuje projekt i ocenia je z danego źródła pliku projektu i z danej właściwości globalne i podana wersja narzędzi.</span><span class="sxs-lookup"><span data-stu-id="0111e-147">Constructs a project and evaluates it from the given source project file and with the given global properties and given tools version.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0111e-148">Projekt jest dodawany do kolekcji projektu globalnego.</span><span class="sxs-lookup"><span data-stu-id="0111e-148">The project is added to the global project collection.</span></span>  
  
 <span data-ttu-id="0111e-149">Wywołuje wyjątek InvalidProjectFileException, jeśli nie powiedzie się ocena.</span><span class="sxs-lookup"><span data-stu-id="0111e-149">Throws InvalidProjectFileException if the evaluation fails.</span></span> <span data-ttu-id="0111e-150">Generuje wyjątek InvalidOperationException, jeśli istnieje już załadowany równoważny projekt w kolekcji projektu.</span><span class="sxs-lookup"><span data-stu-id="0111e-150">Throws InvalidOperationException if there is already an equivalent project loaded in the project collection.</span></span> <span data-ttu-id="0111e-151">Może zgłaszać wyjątki dotyczące operacji typu We/Wy.</span><span class="sxs-lookup"><span data-stu-id="0111e-151">May throw IO-related exceptions.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Project (System.Xml.XmlReader xmlReader, System.Collections.Generic.IDictionary&lt;string,string&gt; globalProperties, string toolsVersion);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xml.XmlReader xmlReader, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; globalProperties, string toolsVersion) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.#ctor(System.Xml.XmlReader,System.Collections.Generic.IDictionary{System.String,System.String},System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Project(System::Xml::XmlReader ^ xmlReader, System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ globalProperties, System::String ^ toolsVersion);" />
      <MemberSignature Language="F#" Value="new Microsoft.Build.Evaluation.Project : System.Xml.XmlReader * System.Collections.Generic.IDictionary&lt;string, string&gt; * string -&gt; Microsoft.Build.Evaluation.Project" Usage="new Microsoft.Build.Evaluation.Project (xmlReader, globalProperties, toolsVersion)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="xmlReader" Type="System.Xml.XmlReader" />
        <Parameter Name="globalProperties" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="toolsVersion" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="xmlReader"><span data-ttu-id="0111e-152">Czytnik Xml, z którego ma być odczytywany kod źródłowy projektu.</span><span class="sxs-lookup"><span data-stu-id="0111e-152">Xml reader to read project source code from.</span></span></param>
        <param name="globalProperties"><span data-ttu-id="0111e-153">Właściwości globalne, według których należy dokonać oceny.</span><span class="sxs-lookup"><span data-stu-id="0111e-153">Global properties to evaluate with.</span></span> <span data-ttu-id="0111e-154">Może mieć wartość null; w takim przypadku użyte zostaną globalne właściwości zawarte w kolekcji projektu.</span><span class="sxs-lookup"><span data-stu-id="0111e-154">May be null in which case the containing project collection's global properties will be used.</span></span></param>
        <param name="toolsVersion"><span data-ttu-id="0111e-155">Wersja narzędzi, których należy użyć do oceny.</span><span class="sxs-lookup"><span data-stu-id="0111e-155">Tools version to evaluate with.</span></span> <span data-ttu-id="0111e-156">Może mieć wartość zerową.</span><span class="sxs-lookup"><span data-stu-id="0111e-156">May be null.</span></span></param>
        <summary><span data-ttu-id="0111e-157">Konstruuje projekt i ocenia kod źródłowy z poziomu danego czytnika XML.</span><span class="sxs-lookup"><span data-stu-id="0111e-157">Constructs a project and evaluates the source code from the given XML reader.</span></span> <span data-ttu-id="0111e-158">Kod źródłowy jest oceniany z danej właściwości globalne i podana wersja narzędzia.</span><span class="sxs-lookup"><span data-stu-id="0111e-158">The source code is evaluated with the given global properties and given tools version.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0111e-159">Ten projekt jest dodawany do kolekcji globalnego projektu, gdy jest on podawany pełną ścieżkę do pliku projektu źródłowego zwykle przez zapisania projektu.</span><span class="sxs-lookup"><span data-stu-id="0111e-159">This project is added to the global project collection when it is given the full path to the source project file, typically by saving the project.</span></span>  
  
 <span data-ttu-id="0111e-160">Wywołuje wyjątek InvalidProjectFileException, jeśli nie powiedzie się ocena.</span><span class="sxs-lookup"><span data-stu-id="0111e-160">Throws InvalidProjectFileException if the evaluation fails.</span></span> <span data-ttu-id="0111e-161">Generuje wyjątek InvalidOperationException, jeśli istnieje już załadowany równoważny projekt w kolekcji projektu.</span><span class="sxs-lookup"><span data-stu-id="0111e-161">Throws InvalidOperationException if there is already an equivalent project loaded in the project collection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Project (Microsoft.Build.Construction.ProjectRootElement xml, System.Collections.Generic.IDictionary&lt;string,string&gt; globalProperties, string toolsVersion, Microsoft.Build.Evaluation.ProjectCollection projectCollection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.Build.Construction.ProjectRootElement xml, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; globalProperties, string toolsVersion, class Microsoft.Build.Evaluation.ProjectCollection projectCollection) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.#ctor(Microsoft.Build.Construction.ProjectRootElement,System.Collections.Generic.IDictionary{System.String,System.String},System.String,Microsoft.Build.Evaluation.ProjectCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Project(Microsoft::Build::Construction::ProjectRootElement ^ xml, System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ globalProperties, System::String ^ toolsVersion, Microsoft::Build::Evaluation::ProjectCollection ^ projectCollection);" />
      <MemberSignature Language="F#" Value="new Microsoft.Build.Evaluation.Project : Microsoft.Build.Construction.ProjectRootElement * System.Collections.Generic.IDictionary&lt;string, string&gt; * string * Microsoft.Build.Evaluation.ProjectCollection -&gt; Microsoft.Build.Evaluation.Project" Usage="new Microsoft.Build.Evaluation.Project (xml, globalProperties, toolsVersion, projectCollection)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="xml" Type="Microsoft.Build.Construction.ProjectRootElement" />
        <Parameter Name="globalProperties" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="toolsVersion" Type="System.String" />
        <Parameter Name="projectCollection" Type="Microsoft.Build.Evaluation.ProjectCollection" />
      </Parameters>
      <Docs>
        <param name="xml"><span data-ttu-id="0111e-162">Katalog główny projektu na potrzeby oceny.</span><span class="sxs-lookup"><span data-stu-id="0111e-162">The project root to use for evaluation.</span></span></param>
        <param name="globalProperties"><span data-ttu-id="0111e-163">Właściwości globalne, według których należy dokonać oceny.</span><span class="sxs-lookup"><span data-stu-id="0111e-163">Global properties to evaluate with.</span></span> <span data-ttu-id="0111e-164">Może mieć wartość null; w takim przypadku użyte zostaną globalne właściwości zawarte w kolekcji projektu.</span><span class="sxs-lookup"><span data-stu-id="0111e-164">May be null in which case the containing project collection's global properties will be used.</span></span></param>
        <param name="toolsVersion"><span data-ttu-id="0111e-165">Wersja narzędzi, których należy użyć do oceny.</span><span class="sxs-lookup"><span data-stu-id="0111e-165">Tools version to evaluate with.</span></span> <span data-ttu-id="0111e-166">Może mieć wartość zerową.</span><span class="sxs-lookup"><span data-stu-id="0111e-166">May be null.</span></span></param>
        <param name="projectCollection"><span data-ttu-id="0111e-167">Kolekcja projektów, do której dodawany jest projekt.</span><span class="sxs-lookup"><span data-stu-id="0111e-167">The project collection the project is added to.</span></span></param>
        <summary><span data-ttu-id="0111e-168">Konstruuje projekt i ocenia je przy użyciu katalogu głównego danego projektu i z danej właściwości globalne, a podana wersja narzędzi.</span><span class="sxs-lookup"><span data-stu-id="0111e-168">Constructs a project and evaluates it using the given project root and with the given global properties and given tools version.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0111e-169">Ten projekt jest dodawany do kolekcji danego projektu, gdy do tego projektu lub katalogu głównego danego projektu dodano pełną ścieżkę do pliku projektu źródłowego.</span><span class="sxs-lookup"><span data-stu-id="0111e-169">This project is added to the given project collection when either this project or the given project root is given the full path to the source project file.</span></span>  
  
 <span data-ttu-id="0111e-170">Wywołuje wyjątek InvalidProjectFileException, jeśli nie powiedzie się ocena.</span><span class="sxs-lookup"><span data-stu-id="0111e-170">Throws InvalidProjectFileException if the evaluation fails.</span></span> <span data-ttu-id="0111e-171">Generuje wyjątek InvalidOperationException, jeśli istnieje już załadowany równoważny projekt w kolekcji projektu.</span><span class="sxs-lookup"><span data-stu-id="0111e-171">Throws InvalidOperationException if there is already an equivalent project loaded in the project collection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Project (string projectFile, System.Collections.Generic.IDictionary&lt;string,string&gt; globalProperties, string toolsVersion, Microsoft.Build.Evaluation.ProjectCollection projectCollection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string projectFile, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; globalProperties, string toolsVersion, class Microsoft.Build.Evaluation.ProjectCollection projectCollection) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.String,Microsoft.Build.Evaluation.ProjectCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Project(System::String ^ projectFile, System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ globalProperties, System::String ^ toolsVersion, Microsoft::Build::Evaluation::ProjectCollection ^ projectCollection);" />
      <MemberSignature Language="F#" Value="new Microsoft.Build.Evaluation.Project : string * System.Collections.Generic.IDictionary&lt;string, string&gt; * string * Microsoft.Build.Evaluation.ProjectCollection -&gt; Microsoft.Build.Evaluation.Project" Usage="new Microsoft.Build.Evaluation.Project (projectFile, globalProperties, toolsVersion, projectCollection)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="projectFile" Type="System.String" />
        <Parameter Name="globalProperties" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="toolsVersion" Type="System.String" />
        <Parameter Name="projectCollection" Type="Microsoft.Build.Evaluation.ProjectCollection" />
      </Parameters>
      <Docs>
        <param name="projectFile"><span data-ttu-id="0111e-172">Ścieżka do pliku źródłowego projektu, który ma być poddany ocenie.</span><span class="sxs-lookup"><span data-stu-id="0111e-172">The path to the source project file to be evaluated.</span></span></param>
        <param name="globalProperties"><span data-ttu-id="0111e-173">Właściwości globalne.</span><span class="sxs-lookup"><span data-stu-id="0111e-173">The global properties.</span></span> <span data-ttu-id="0111e-174">Może mieć wartość zerową.</span><span class="sxs-lookup"><span data-stu-id="0111e-174">May be null.</span></span></param>
        <param name="toolsVersion"><span data-ttu-id="0111e-175">Wersja narzędzia.</span><span class="sxs-lookup"><span data-stu-id="0111e-175">The tools version.</span></span> <span data-ttu-id="0111e-176">Może mieć wartość zerową.</span><span class="sxs-lookup"><span data-stu-id="0111e-176">May be null.</span></span></param>
        <param name="projectCollection"><span data-ttu-id="0111e-177">Kolekcja projektów, do której dodawany jest projekt.</span><span class="sxs-lookup"><span data-stu-id="0111e-177">The project collection the project is added to.</span></span> <span data-ttu-id="0111e-178">Nie może być zerowy.</span><span class="sxs-lookup"><span data-stu-id="0111e-178">May not be null.</span></span></param>
        <summary><span data-ttu-id="0111e-179">Konstruuje projekt i ocenia je z danego źródła pliku projektu i z danej właściwości globalne i podana wersja narzędzi.</span><span class="sxs-lookup"><span data-stu-id="0111e-179">Constructs a project and evaluates it from the given source project file and with the given global properties and given tools version.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0111e-180">Projekt jest dodawany do kolekcji danego projektu.</span><span class="sxs-lookup"><span data-stu-id="0111e-180">The project is added to the given project collection.</span></span>  
  
 <span data-ttu-id="0111e-181">Wywołuje wyjątek InvalidProjectFileException, jeśli nie powiedzie się ocena.</span><span class="sxs-lookup"><span data-stu-id="0111e-181">Throws InvalidProjectFileException if the evaluation fails.</span></span> <span data-ttu-id="0111e-182">Generuje wyjątek InvalidOperationException, jeśli istnieje już załadowany równoważny projekt w kolekcji projektu.</span><span class="sxs-lookup"><span data-stu-id="0111e-182">Throws InvalidOperationException if there is already an equivalent project loaded in the project collection.</span></span> <span data-ttu-id="0111e-183">Może zgłaszać wyjątki dotyczące operacji typu We/Wy.</span><span class="sxs-lookup"><span data-stu-id="0111e-183">May throw IO-related exceptions.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Project (System.Xml.XmlReader xmlReader, System.Collections.Generic.IDictionary&lt;string,string&gt; globalProperties, string toolsVersion, Microsoft.Build.Evaluation.ProjectCollection projectCollection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xml.XmlReader xmlReader, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; globalProperties, string toolsVersion, class Microsoft.Build.Evaluation.ProjectCollection projectCollection) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.#ctor(System.Xml.XmlReader,System.Collections.Generic.IDictionary{System.String,System.String},System.String,Microsoft.Build.Evaluation.ProjectCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Project(System::Xml::XmlReader ^ xmlReader, System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ globalProperties, System::String ^ toolsVersion, Microsoft::Build::Evaluation::ProjectCollection ^ projectCollection);" />
      <MemberSignature Language="F#" Value="new Microsoft.Build.Evaluation.Project : System.Xml.XmlReader * System.Collections.Generic.IDictionary&lt;string, string&gt; * string * Microsoft.Build.Evaluation.ProjectCollection -&gt; Microsoft.Build.Evaluation.Project" Usage="new Microsoft.Build.Evaluation.Project (xmlReader, globalProperties, toolsVersion, projectCollection)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="xmlReader" Type="System.Xml.XmlReader" />
        <Parameter Name="globalProperties" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="toolsVersion" Type="System.String" />
        <Parameter Name="projectCollection" Type="Microsoft.Build.Evaluation.ProjectCollection" />
      </Parameters>
      <Docs>
        <param name="xmlReader"><span data-ttu-id="0111e-184">Czytnik Xml, z którego ma być odczytywany kod źródłowy projektu.</span><span class="sxs-lookup"><span data-stu-id="0111e-184">Xml reader to read project source code from.</span></span></param>
        <param name="globalProperties"><span data-ttu-id="0111e-185">Właściwości globalne, według których należy dokonać oceny.</span><span class="sxs-lookup"><span data-stu-id="0111e-185">Global properties to evaluate with.</span></span> <span data-ttu-id="0111e-186">Może mieć wartość null; w takim przypadku użyte zostaną globalne właściwości zawarte w kolekcji projektu.</span><span class="sxs-lookup"><span data-stu-id="0111e-186">May be null in which case the containing project collection's global properties will be used.</span></span></param>
        <param name="toolsVersion"><span data-ttu-id="0111e-187">Wersja narzędzi, których należy użyć do oceny.</span><span class="sxs-lookup"><span data-stu-id="0111e-187">Tools version to evaluate with.</span></span> <span data-ttu-id="0111e-188">Może mieć wartość zerową.</span><span class="sxs-lookup"><span data-stu-id="0111e-188">May be null.</span></span></param>
        <param name="projectCollection"><span data-ttu-id="0111e-189">Kolekcja projektów, do której dodawany jest projekt.</span><span class="sxs-lookup"><span data-stu-id="0111e-189">The project collection the project is added to.</span></span> <span data-ttu-id="0111e-190">Nie może być zerowy.</span><span class="sxs-lookup"><span data-stu-id="0111e-190">May not be null.</span></span></param>
        <summary><span data-ttu-id="0111e-191">Konstruuje projekt i ocenia kod źródłowy z poziomu danego czytnika XML.</span><span class="sxs-lookup"><span data-stu-id="0111e-191">Constructs a project and evaluates the source code from the given XML reader.</span></span> <span data-ttu-id="0111e-192">Kod źródłowy jest oceniany z danej właściwości globalne i podana wersja narzędzia.</span><span class="sxs-lookup"><span data-stu-id="0111e-192">The source code is evaluated with the given global properties and given tools version.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0111e-193">Ten projekt jest dodawany do kolekcji danego projektu, gdy do tego projektu lub katalogu głównego danego projektu dodano pełną ścieżkę do pliku projektu źródłowego.</span><span class="sxs-lookup"><span data-stu-id="0111e-193">This project is added to the given project collection when either this project or the given project root is given the full path to the source project file.</span></span>  
  
 <span data-ttu-id="0111e-194">Wywołuje wyjątek InvalidProjectFileException, jeśli nie powiedzie się ocena.</span><span class="sxs-lookup"><span data-stu-id="0111e-194">Throws InvalidProjectFileException if the evaluation fails.</span></span> <span data-ttu-id="0111e-195">Generuje wyjątek InvalidOperationException, jeśli istnieje już załadowany równoważny projekt w kolekcji projektu.</span><span class="sxs-lookup"><span data-stu-id="0111e-195">Throws InvalidOperationException if there is already an equivalent project loaded in the project collection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Project (Microsoft.Build.Construction.ProjectRootElement xml, System.Collections.Generic.IDictionary&lt;string,string&gt; globalProperties, string toolsVersion, Microsoft.Build.Evaluation.ProjectCollection projectCollection, Microsoft.Build.Evaluation.ProjectLoadSettings loadSettings);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.Build.Construction.ProjectRootElement xml, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; globalProperties, string toolsVersion, class Microsoft.Build.Evaluation.ProjectCollection projectCollection, valuetype Microsoft.Build.Evaluation.ProjectLoadSettings loadSettings) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.#ctor(Microsoft.Build.Construction.ProjectRootElement,System.Collections.Generic.IDictionary{System.String,System.String},System.String,Microsoft.Build.Evaluation.ProjectCollection,Microsoft.Build.Evaluation.ProjectLoadSettings)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Project(Microsoft::Build::Construction::ProjectRootElement ^ xml, System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ globalProperties, System::String ^ toolsVersion, Microsoft::Build::Evaluation::ProjectCollection ^ projectCollection, Microsoft::Build::Evaluation::ProjectLoadSettings loadSettings);" />
      <MemberSignature Language="F#" Value="new Microsoft.Build.Evaluation.Project : Microsoft.Build.Construction.ProjectRootElement * System.Collections.Generic.IDictionary&lt;string, string&gt; * string * Microsoft.Build.Evaluation.ProjectCollection * Microsoft.Build.Evaluation.ProjectLoadSettings -&gt; Microsoft.Build.Evaluation.Project" Usage="new Microsoft.Build.Evaluation.Project (xml, globalProperties, toolsVersion, projectCollection, loadSettings)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="xml" Type="Microsoft.Build.Construction.ProjectRootElement" />
        <Parameter Name="globalProperties" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="toolsVersion" Type="System.String" />
        <Parameter Name="projectCollection" Type="Microsoft.Build.Evaluation.ProjectCollection" />
        <Parameter Name="loadSettings" Type="Microsoft.Build.Evaluation.ProjectLoadSettings" />
      </Parameters>
      <Docs>
        <param name="xml"><span data-ttu-id="0111e-196">Katalog główny projektu na potrzeby oceny.</span><span class="sxs-lookup"><span data-stu-id="0111e-196">The project root to use for evaluation.</span></span></param>
        <param name="globalProperties"><span data-ttu-id="0111e-197">Właściwości globalne, według których należy dokonać oceny.</span><span class="sxs-lookup"><span data-stu-id="0111e-197">Global properties to evaluate with.</span></span> <span data-ttu-id="0111e-198">Może mieć wartość null; w takim przypadku użyte zostaną globalne właściwości zawarte w kolekcji projektu.</span><span class="sxs-lookup"><span data-stu-id="0111e-198">May be null in which case the containing project collection's global properties will be used.</span></span></param>
        <param name="toolsVersion"><span data-ttu-id="0111e-199">Wersja narzędzi, których należy użyć do oceny.</span><span class="sxs-lookup"><span data-stu-id="0111e-199">Tools version to evaluate with.</span></span> <span data-ttu-id="0111e-200">Może mieć wartość zerową.</span><span class="sxs-lookup"><span data-stu-id="0111e-200">May be null.</span></span></param>
        <param name="projectCollection"><span data-ttu-id="0111e-201">Kolekcja projektów, do której dodawany jest projekt.</span><span class="sxs-lookup"><span data-stu-id="0111e-201">The project collection the project is added to.</span></span> <span data-ttu-id="0111e-202">Nie może być zerowy.</span><span class="sxs-lookup"><span data-stu-id="0111e-202">May not be null.</span></span></param>
        <param name="loadSettings"><span data-ttu-id="0111e-203">Ustawienia ładowania na potrzeby oceny.</span><span class="sxs-lookup"><span data-stu-id="0111e-203">The load settings to use for evaluation.</span></span></param>
        <summary><span data-ttu-id="0111e-204">Konstruuje projekt i ocenia je przy użyciu katalogu głównego danego projektu z danym globalne właściwości podana wersja narzędzi i podanych ustawień ładowania.</span><span class="sxs-lookup"><span data-stu-id="0111e-204">Constructs a project and evaluates it using the given project root and with the given global properties, given tools version, and given load settings.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0111e-205">Ten projekt jest dodawany do kolekcji danego projektu, gdy do tego projektu lub katalogu głównego danego projektu dodano pełną ścieżkę do pliku projektu źródłowego.</span><span class="sxs-lookup"><span data-stu-id="0111e-205">This project is added to the given project collection when either this project or the given project root is given the full path to the source project file.</span></span>  
  
 <span data-ttu-id="0111e-206">Wywołuje wyjątek InvalidProjectFileException, jeśli nie powiedzie się ocena.</span><span class="sxs-lookup"><span data-stu-id="0111e-206">Throws InvalidProjectFileException if the evaluation fails.</span></span> <span data-ttu-id="0111e-207">Generuje wyjątek InvalidOperationException, jeśli istnieje już załadowany równoważny projekt w kolekcji projektu.</span><span class="sxs-lookup"><span data-stu-id="0111e-207">Throws InvalidOperationException if there is already an equivalent project loaded in the project collection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Project (string projectFile, System.Collections.Generic.IDictionary&lt;string,string&gt; globalProperties, string toolsVersion, Microsoft.Build.Evaluation.ProjectCollection projectCollection, Microsoft.Build.Evaluation.ProjectLoadSettings loadSettings);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string projectFile, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; globalProperties, string toolsVersion, class Microsoft.Build.Evaluation.ProjectCollection projectCollection, valuetype Microsoft.Build.Evaluation.ProjectLoadSettings loadSettings) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.String,Microsoft.Build.Evaluation.ProjectCollection,Microsoft.Build.Evaluation.ProjectLoadSettings)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Project(System::String ^ projectFile, System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ globalProperties, System::String ^ toolsVersion, Microsoft::Build::Evaluation::ProjectCollection ^ projectCollection, Microsoft::Build::Evaluation::ProjectLoadSettings loadSettings);" />
      <MemberSignature Language="F#" Value="new Microsoft.Build.Evaluation.Project : string * System.Collections.Generic.IDictionary&lt;string, string&gt; * string * Microsoft.Build.Evaluation.ProjectCollection * Microsoft.Build.Evaluation.ProjectLoadSettings -&gt; Microsoft.Build.Evaluation.Project" Usage="new Microsoft.Build.Evaluation.Project (projectFile, globalProperties, toolsVersion, projectCollection, loadSettings)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="projectFile" Type="System.String" />
        <Parameter Name="globalProperties" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="toolsVersion" Type="System.String" />
        <Parameter Name="projectCollection" Type="Microsoft.Build.Evaluation.ProjectCollection" />
        <Parameter Name="loadSettings" Type="Microsoft.Build.Evaluation.ProjectLoadSettings" />
      </Parameters>
      <Docs>
        <param name="projectFile"><span data-ttu-id="0111e-208">Ścieżka do pliku źródłowego projektu, który ma być poddany ocenie.</span><span class="sxs-lookup"><span data-stu-id="0111e-208">The path to the source project file to be evaluated.</span></span></param>
        <param name="globalProperties"><span data-ttu-id="0111e-209">Właściwości globalne, według których należy dokonać oceny.</span><span class="sxs-lookup"><span data-stu-id="0111e-209">Global properties to evaluate with.</span></span> <span data-ttu-id="0111e-210">Może mieć wartość null; w takim przypadku użyte zostaną globalne właściwości zawarte w kolekcji projektu.</span><span class="sxs-lookup"><span data-stu-id="0111e-210">May be null in which case the containing project collection's global properties will be used.</span></span></param>
        <param name="toolsVersion"><span data-ttu-id="0111e-211">Wersja narzędzia.</span><span class="sxs-lookup"><span data-stu-id="0111e-211">The tools version.</span></span> <span data-ttu-id="0111e-212">Może mieć wartość zerową.</span><span class="sxs-lookup"><span data-stu-id="0111e-212">May be null.</span></span></param>
        <param name="projectCollection"><span data-ttu-id="0111e-213">Kolekcja projektów, do której dodawany jest projekt.</span><span class="sxs-lookup"><span data-stu-id="0111e-213">The project collection the project is added to.</span></span> <span data-ttu-id="0111e-214">Nie może być zerowy.</span><span class="sxs-lookup"><span data-stu-id="0111e-214">May not be null.</span></span></param>
        <param name="loadSettings"><span data-ttu-id="0111e-215">Ustawienia ładowania na potrzeby oceny.</span><span class="sxs-lookup"><span data-stu-id="0111e-215">The load settings to use for evaluation.</span></span></param>
        <summary><span data-ttu-id="0111e-216">Konstruuje projekt i ocenia je w pliku projektu danego źródła i danej właściwości globalne, podana wersja narzędzi i podanych ustawień ładowania.</span><span class="sxs-lookup"><span data-stu-id="0111e-216">Constructs a project and evaluates it from the given source project file and with the given global properties, given tools version, and given load settings.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0111e-217">Projekt jest dodawany do kolekcji danego projektu.</span><span class="sxs-lookup"><span data-stu-id="0111e-217">The project is added to the given project collection.</span></span>  
  
 <span data-ttu-id="0111e-218">Wywołuje wyjątek InvalidProjectFileException, jeśli nie powiedzie się ocena.</span><span class="sxs-lookup"><span data-stu-id="0111e-218">Throws InvalidProjectFileException if the evaluation fails.</span></span> <span data-ttu-id="0111e-219">Generuje wyjątek InvalidOperationException, jeśli istnieje już załadowany równoważny projekt w kolekcji projektu.</span><span class="sxs-lookup"><span data-stu-id="0111e-219">Throws InvalidOperationException if there is already an equivalent project loaded in the project collection.</span></span> <span data-ttu-id="0111e-220">Może zgłaszać wyjątki dotyczące operacji typu We/Wy.</span><span class="sxs-lookup"><span data-stu-id="0111e-220">May throw IO-related exceptions.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Project (System.Xml.XmlReader xmlReader, System.Collections.Generic.IDictionary&lt;string,string&gt; globalProperties, string toolsVersion, Microsoft.Build.Evaluation.ProjectCollection projectCollection, Microsoft.Build.Evaluation.ProjectLoadSettings loadSettings);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xml.XmlReader xmlReader, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; globalProperties, string toolsVersion, class Microsoft.Build.Evaluation.ProjectCollection projectCollection, valuetype Microsoft.Build.Evaluation.ProjectLoadSettings loadSettings) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.#ctor(System.Xml.XmlReader,System.Collections.Generic.IDictionary{System.String,System.String},System.String,Microsoft.Build.Evaluation.ProjectCollection,Microsoft.Build.Evaluation.ProjectLoadSettings)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Project(System::Xml::XmlReader ^ xmlReader, System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ globalProperties, System::String ^ toolsVersion, Microsoft::Build::Evaluation::ProjectCollection ^ projectCollection, Microsoft::Build::Evaluation::ProjectLoadSettings loadSettings);" />
      <MemberSignature Language="F#" Value="new Microsoft.Build.Evaluation.Project : System.Xml.XmlReader * System.Collections.Generic.IDictionary&lt;string, string&gt; * string * Microsoft.Build.Evaluation.ProjectCollection * Microsoft.Build.Evaluation.ProjectLoadSettings -&gt; Microsoft.Build.Evaluation.Project" Usage="new Microsoft.Build.Evaluation.Project (xmlReader, globalProperties, toolsVersion, projectCollection, loadSettings)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="xmlReader" Type="System.Xml.XmlReader" />
        <Parameter Name="globalProperties" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="toolsVersion" Type="System.String" />
        <Parameter Name="projectCollection" Type="Microsoft.Build.Evaluation.ProjectCollection" />
        <Parameter Name="loadSettings" Type="Microsoft.Build.Evaluation.ProjectLoadSettings" />
      </Parameters>
      <Docs>
        <param name="xmlReader"><span data-ttu-id="0111e-221">Czytnik XML, z których mają być odczytywany kod źródłowy projektu.</span><span class="sxs-lookup"><span data-stu-id="0111e-221">Xml reader from which to read project source code.</span></span></param>
        <param name="globalProperties"><span data-ttu-id="0111e-222">Właściwości globalne, według których należy dokonać oceny.</span><span class="sxs-lookup"><span data-stu-id="0111e-222">Global properties to evaluate with.</span></span> <span data-ttu-id="0111e-223">Może mieć wartość null; w takim przypadku użyte zostaną globalne właściwości zawarte w kolekcji projektu.</span><span class="sxs-lookup"><span data-stu-id="0111e-223">May be null in which case the containing project collection's global properties will be used.</span></span></param>
        <param name="toolsVersion"><span data-ttu-id="0111e-224">Wersja narzędzi, których należy użyć do oceny.</span><span class="sxs-lookup"><span data-stu-id="0111e-224">Tools version to evaluate with.</span></span> <span data-ttu-id="0111e-225">Może mieć wartość zerową.</span><span class="sxs-lookup"><span data-stu-id="0111e-225">May be null.</span></span></param>
        <param name="projectCollection"><span data-ttu-id="0111e-226">Kolekcja projektów, do której dodawany jest projekt.</span><span class="sxs-lookup"><span data-stu-id="0111e-226">The project collection the project is added to.</span></span> <span data-ttu-id="0111e-227">Nie może być zerowy.</span><span class="sxs-lookup"><span data-stu-id="0111e-227">May not be null.</span></span></param>
        <param name="loadSettings"><span data-ttu-id="0111e-228">Ustawienia ładowania na potrzeby oceny.</span><span class="sxs-lookup"><span data-stu-id="0111e-228">The load settings to use for evaluation.</span></span></param>
        <summary><span data-ttu-id="0111e-229">Konstruuje projekt i ocenia kod źródłowy z poziomu danego czytnika XML.</span><span class="sxs-lookup"><span data-stu-id="0111e-229">Constructs a project and evaluates the source code from the given XML reader.</span></span> <span data-ttu-id="0111e-230">Kod źródłowy jest oceniany z danej właściwości globalne i podana wersja narzędzia.</span><span class="sxs-lookup"><span data-stu-id="0111e-230">The source code is evaluated with the given global properties and given tools version.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0111e-231">Ten projekt jest dodawany do kolekcji danego projektu, gdy do tego projektu lub katalogu głównego danego projektu dodano pełną ścieżkę do pliku projektu źródłowego.</span><span class="sxs-lookup"><span data-stu-id="0111e-231">This project is added to the given project collection when either this project or the given project root is given the full path to the source project file.</span></span>  
  
 <span data-ttu-id="0111e-232">Wywołuje wyjątek InvalidProjectFileException, jeśli nie powiedzie się ocena.</span><span class="sxs-lookup"><span data-stu-id="0111e-232">Throws InvalidProjectFileException if the evaluation fails.</span></span> <span data-ttu-id="0111e-233">Generuje wyjątek InvalidOperationException, jeśli istnieje już załadowany równoważny projekt w kolekcji projektu.</span><span class="sxs-lookup"><span data-stu-id="0111e-233">Throws InvalidOperationException if there is already an equivalent project loaded in the project collection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Project (Microsoft.Build.Construction.ProjectRootElement xml, System.Collections.Generic.IDictionary&lt;string,string&gt; globalProperties, string toolsVersion, string subToolsetVersion, Microsoft.Build.Evaluation.ProjectCollection projectCollection, Microsoft.Build.Evaluation.ProjectLoadSettings loadSettings);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.Build.Construction.ProjectRootElement xml, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; globalProperties, string toolsVersion, string subToolsetVersion, class Microsoft.Build.Evaluation.ProjectCollection projectCollection, valuetype Microsoft.Build.Evaluation.ProjectLoadSettings loadSettings) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.#ctor(Microsoft.Build.Construction.ProjectRootElement,System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.String,Microsoft.Build.Evaluation.ProjectCollection,Microsoft.Build.Evaluation.ProjectLoadSettings)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Project(Microsoft::Build::Construction::ProjectRootElement ^ xml, System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ globalProperties, System::String ^ toolsVersion, System::String ^ subToolsetVersion, Microsoft::Build::Evaluation::ProjectCollection ^ projectCollection, Microsoft::Build::Evaluation::ProjectLoadSettings loadSettings);" />
      <MemberSignature Language="F#" Value="new Microsoft.Build.Evaluation.Project : Microsoft.Build.Construction.ProjectRootElement * System.Collections.Generic.IDictionary&lt;string, string&gt; * string * string * Microsoft.Build.Evaluation.ProjectCollection * Microsoft.Build.Evaluation.ProjectLoadSettings -&gt; Microsoft.Build.Evaluation.Project" Usage="new Microsoft.Build.Evaluation.Project (xml, globalProperties, toolsVersion, subToolsetVersion, projectCollection, loadSettings)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="xml" Type="Microsoft.Build.Construction.ProjectRootElement" />
        <Parameter Name="globalProperties" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="toolsVersion" Type="System.String" />
        <Parameter Name="subToolsetVersion" Type="System.String" />
        <Parameter Name="projectCollection" Type="Microsoft.Build.Evaluation.ProjectCollection" />
        <Parameter Name="loadSettings" Type="Microsoft.Build.Evaluation.ProjectLoadSettings" />
      </Parameters>
      <Docs>
        <param name="xml"><span data-ttu-id="0111e-234">Katalog główny projektu na potrzeby oceny.</span><span class="sxs-lookup"><span data-stu-id="0111e-234">The project root to use for evaluation.</span></span></param>
        <param name="globalProperties"><span data-ttu-id="0111e-235">Właściwości globalne, według których należy dokonać oceny.</span><span class="sxs-lookup"><span data-stu-id="0111e-235">Global properties to evaluate with.</span></span> <span data-ttu-id="0111e-236">Może mieć wartość null; w takim przypadku użyte zostaną globalne właściwości zawarte w kolekcji projektu.</span><span class="sxs-lookup"><span data-stu-id="0111e-236">May be null in which case the containing project collection's global properties will be used.</span></span></param>
        <param name="toolsVersion"><span data-ttu-id="0111e-237">Wersja narzędzi, których należy użyć do oceny.</span><span class="sxs-lookup"><span data-stu-id="0111e-237">Tools version to evaluate with.</span></span> <span data-ttu-id="0111e-238">Może mieć wartość zerową.</span><span class="sxs-lookup"><span data-stu-id="0111e-238">May be null.</span></span></param>
        <param name="subToolsetVersion"><span data-ttu-id="0111e-239">Wersję podzestawu narzędzi do oceny.</span><span class="sxs-lookup"><span data-stu-id="0111e-239">Sub toolset version to evaluate with.</span></span> <span data-ttu-id="0111e-240">Może mieć wartość zerową.</span><span class="sxs-lookup"><span data-stu-id="0111e-240">May be null.</span></span></param>
        <param name="projectCollection"><span data-ttu-id="0111e-241">Kolekcja projektów, do której dodawany jest projekt.</span><span class="sxs-lookup"><span data-stu-id="0111e-241">The project collection the project is added to.</span></span> <span data-ttu-id="0111e-242">Nie może być zerowy.</span><span class="sxs-lookup"><span data-stu-id="0111e-242">May not be null.</span></span></param>
        <param name="loadSettings"><span data-ttu-id="0111e-243">Ustawienia ładowania na potrzeby oceny.</span><span class="sxs-lookup"><span data-stu-id="0111e-243">The load settings to use for evaluation.</span></span></param>
        <summary><span data-ttu-id="0111e-244">Konstruuje projekt i ocenia je przy użyciu katalogu głównego danego projektu z danej właściwości globalne, narzędzia i wersje podzestawu narzędzi kolekcji projektów i załadować ustawień.</span><span class="sxs-lookup"><span data-stu-id="0111e-244">Constructs a project and evaluates it using the given project root and with the given global properties, tools and sub-toolset versions, project collection, and load settings.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0111e-245">Ten projekt jest dodawany do kolekcji danego projektu, gdy do tego projektu lub katalogu głównego danego projektu dodano pełną ścieżkę do pliku projektu źródłowego.</span><span class="sxs-lookup"><span data-stu-id="0111e-245">This project is added to the given project collection when either this project or the given project root is given the full path to the source project file.</span></span>  
  
 <span data-ttu-id="0111e-246">Wywołuje wyjątek InvalidProjectFileException, jeśli nie powiedzie się ocena.</span><span class="sxs-lookup"><span data-stu-id="0111e-246">Throws InvalidProjectFileException if the evaluation fails.</span></span> <span data-ttu-id="0111e-247">Generuje wyjątek InvalidOperationException, jeśli istnieje już załadowany równoważny projekt w kolekcji projektu.</span><span class="sxs-lookup"><span data-stu-id="0111e-247">Throws InvalidOperationException if there is already an equivalent project loaded in the project collection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Project (string projectFile, System.Collections.Generic.IDictionary&lt;string,string&gt; globalProperties, string toolsVersion, string subToolsetVersion, Microsoft.Build.Evaluation.ProjectCollection projectCollection, Microsoft.Build.Evaluation.ProjectLoadSettings loadSettings);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string projectFile, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; globalProperties, string toolsVersion, string subToolsetVersion, class Microsoft.Build.Evaluation.ProjectCollection projectCollection, valuetype Microsoft.Build.Evaluation.ProjectLoadSettings loadSettings) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.String,Microsoft.Build.Evaluation.ProjectCollection,Microsoft.Build.Evaluation.ProjectLoadSettings)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Project(System::String ^ projectFile, System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ globalProperties, System::String ^ toolsVersion, System::String ^ subToolsetVersion, Microsoft::Build::Evaluation::ProjectCollection ^ projectCollection, Microsoft::Build::Evaluation::ProjectLoadSettings loadSettings);" />
      <MemberSignature Language="F#" Value="new Microsoft.Build.Evaluation.Project : string * System.Collections.Generic.IDictionary&lt;string, string&gt; * string * string * Microsoft.Build.Evaluation.ProjectCollection * Microsoft.Build.Evaluation.ProjectLoadSettings -&gt; Microsoft.Build.Evaluation.Project" Usage="new Microsoft.Build.Evaluation.Project (projectFile, globalProperties, toolsVersion, subToolsetVersion, projectCollection, loadSettings)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="projectFile" Type="System.String" />
        <Parameter Name="globalProperties" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="toolsVersion" Type="System.String" />
        <Parameter Name="subToolsetVersion" Type="System.String" />
        <Parameter Name="projectCollection" Type="Microsoft.Build.Evaluation.ProjectCollection" />
        <Parameter Name="loadSettings" Type="Microsoft.Build.Evaluation.ProjectLoadSettings" />
      </Parameters>
      <Docs>
        <param name="projectFile"><span data-ttu-id="0111e-248">Ścieżka do pliku źródłowego projektu, który ma być poddany ocenie.</span><span class="sxs-lookup"><span data-stu-id="0111e-248">The path to the source project file to be evaluated.</span></span></param>
        <param name="globalProperties"><span data-ttu-id="0111e-249">Właściwości globalne, według których należy dokonać oceny.</span><span class="sxs-lookup"><span data-stu-id="0111e-249">Global properties to evaluate with.</span></span> <span data-ttu-id="0111e-250">Może mieć wartość null; w takim przypadku użyte zostaną globalne właściwości zawarte w kolekcji projektu.</span><span class="sxs-lookup"><span data-stu-id="0111e-250">May be null in which case the containing project collection's global properties will be used.</span></span></param>
        <param name="toolsVersion"><span data-ttu-id="0111e-251">Wersja narzędzia.</span><span class="sxs-lookup"><span data-stu-id="0111e-251">The tools version.</span></span> <span data-ttu-id="0111e-252">Może mieć wartość zerową.</span><span class="sxs-lookup"><span data-stu-id="0111e-252">May be null.</span></span></param>
        <param name="subToolsetVersion"><span data-ttu-id="0111e-253">Wersję podzestawu narzędzi.</span><span class="sxs-lookup"><span data-stu-id="0111e-253">The sub toolset version.</span></span> <span data-ttu-id="0111e-254">Może mieć wartość zerową.</span><span class="sxs-lookup"><span data-stu-id="0111e-254">May be null.</span></span></param>
        <param name="projectCollection"><span data-ttu-id="0111e-255">Kolekcja projektów, do której dodawany jest projekt.</span><span class="sxs-lookup"><span data-stu-id="0111e-255">The project collection the project is added to.</span></span> <span data-ttu-id="0111e-256">Nie może być zerowy.</span><span class="sxs-lookup"><span data-stu-id="0111e-256">May not be null.</span></span></param>
        <param name="loadSettings"><span data-ttu-id="0111e-257">Ustawienia ładowania na potrzeby oceny.</span><span class="sxs-lookup"><span data-stu-id="0111e-257">The load settings to use for evaluation.</span></span></param>
        <summary><span data-ttu-id="0111e-258">Konstruuje projekt i ocenia je w pliku projektu danego źródła i danej właściwości globalne, narzędzia i wersje podzestawu narzędzi, kolekcji projektu i ustawień ładowania.</span><span class="sxs-lookup"><span data-stu-id="0111e-258">Constructs a project and evaluates it from the given source project file and with the given global properties, tools and sub-toolset versions, project collection, and load settings.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0111e-259">Projekt jest dodawany do kolekcji danego projektu.</span><span class="sxs-lookup"><span data-stu-id="0111e-259">The project is added to the given project collection.</span></span>  
  
 <span data-ttu-id="0111e-260">Wywołuje wyjątek InvalidProjectFileException, jeśli nie powiedzie się ocena.</span><span class="sxs-lookup"><span data-stu-id="0111e-260">Throws InvalidProjectFileException if the evaluation fails.</span></span> <span data-ttu-id="0111e-261">Generuje wyjątek InvalidOperationException, jeśli istnieje już załadowany równoważny projekt w kolekcji projektu.</span><span class="sxs-lookup"><span data-stu-id="0111e-261">Throws InvalidOperationException if there is already an equivalent project loaded in the project collection.</span></span> <span data-ttu-id="0111e-262">Może zgłaszać wyjątki dotyczące operacji typu We/Wy.</span><span class="sxs-lookup"><span data-stu-id="0111e-262">May throw IO-related exceptions.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Project (System.Xml.XmlReader xmlReader, System.Collections.Generic.IDictionary&lt;string,string&gt; globalProperties, string toolsVersion, string subToolsetVersion, Microsoft.Build.Evaluation.ProjectCollection projectCollection, Microsoft.Build.Evaluation.ProjectLoadSettings loadSettings);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xml.XmlReader xmlReader, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; globalProperties, string toolsVersion, string subToolsetVersion, class Microsoft.Build.Evaluation.ProjectCollection projectCollection, valuetype Microsoft.Build.Evaluation.ProjectLoadSettings loadSettings) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.#ctor(System.Xml.XmlReader,System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.String,Microsoft.Build.Evaluation.ProjectCollection,Microsoft.Build.Evaluation.ProjectLoadSettings)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Project(System::Xml::XmlReader ^ xmlReader, System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ globalProperties, System::String ^ toolsVersion, System::String ^ subToolsetVersion, Microsoft::Build::Evaluation::ProjectCollection ^ projectCollection, Microsoft::Build::Evaluation::ProjectLoadSettings loadSettings);" />
      <MemberSignature Language="F#" Value="new Microsoft.Build.Evaluation.Project : System.Xml.XmlReader * System.Collections.Generic.IDictionary&lt;string, string&gt; * string * string * Microsoft.Build.Evaluation.ProjectCollection * Microsoft.Build.Evaluation.ProjectLoadSettings -&gt; Microsoft.Build.Evaluation.Project" Usage="new Microsoft.Build.Evaluation.Project (xmlReader, globalProperties, toolsVersion, subToolsetVersion, projectCollection, loadSettings)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="xmlReader" Type="System.Xml.XmlReader" />
        <Parameter Name="globalProperties" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="toolsVersion" Type="System.String" />
        <Parameter Name="subToolsetVersion" Type="System.String" />
        <Parameter Name="projectCollection" Type="Microsoft.Build.Evaluation.ProjectCollection" />
        <Parameter Name="loadSettings" Type="Microsoft.Build.Evaluation.ProjectLoadSettings" />
      </Parameters>
      <Docs>
        <param name="xmlReader"><span data-ttu-id="0111e-263">Czytnik Xml, z którego ma być odczytywany kod źródłowy projektu.</span><span class="sxs-lookup"><span data-stu-id="0111e-263">Xml reader to read project source code from.</span></span></param>
        <param name="globalProperties"><span data-ttu-id="0111e-264">Właściwości globalne, według których należy dokonać oceny.</span><span class="sxs-lookup"><span data-stu-id="0111e-264">Global properties to evaluate with.</span></span> <span data-ttu-id="0111e-265">Może mieć wartość null; w takim przypadku użyte zostaną globalne właściwości zawarte w kolekcji projektu.</span><span class="sxs-lookup"><span data-stu-id="0111e-265">May be null in which case the containing project collection's global properties will be used.</span></span></param>
        <param name="toolsVersion"><span data-ttu-id="0111e-266">Wersja narzędzi, których należy użyć do oceny.</span><span class="sxs-lookup"><span data-stu-id="0111e-266">Tools version to evaluate with.</span></span> <span data-ttu-id="0111e-267">Może mieć wartość zerową.</span><span class="sxs-lookup"><span data-stu-id="0111e-267">May be null.</span></span></param>
        <param name="subToolsetVersion"><span data-ttu-id="0111e-268">Wersję podzestawu narzędzi do oceny.</span><span class="sxs-lookup"><span data-stu-id="0111e-268">Sub Toolset version to evaluate with.</span></span> <span data-ttu-id="0111e-269">Może mieć wartość zerową.</span><span class="sxs-lookup"><span data-stu-id="0111e-269">May be null.</span></span></param>
        <param name="projectCollection"><span data-ttu-id="0111e-270">Kolekcja projektów, do której dodawany jest projekt.</span><span class="sxs-lookup"><span data-stu-id="0111e-270">The project collection the project is added to.</span></span> <span data-ttu-id="0111e-271">Nie może być zerowy.</span><span class="sxs-lookup"><span data-stu-id="0111e-271">May not be null.</span></span></param>
        <param name="loadSettings"><span data-ttu-id="0111e-272">Ustawienia ładowania na potrzeby oceny.</span><span class="sxs-lookup"><span data-stu-id="0111e-272">The load settings to use for evaluation.</span></span></param>
        <summary><span data-ttu-id="0111e-273">Konstruuje projekt i ocenia kod źródłowy z poziomu danego czytnika XML.</span><span class="sxs-lookup"><span data-stu-id="0111e-273">Constructs a project and evaluates the source code from the given XML reader.</span></span> <span data-ttu-id="0111e-274">Kod źródłowy jest oceniany z danej właściwości globalne, narzędzia i wersje podzestawu narzędzi, kolekcji projektu i ustawień ładowania.</span><span class="sxs-lookup"><span data-stu-id="0111e-274">The source code is evaluated with the given global properties, tools and sub-toolset versions, project collection, and load settings.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0111e-275">Ten projekt jest dodawany do kolekcji danego projektu, gdy do tego projektu lub katalogu głównego danego projektu dodano pełną ścieżkę do pliku projektu źródłowego.</span><span class="sxs-lookup"><span data-stu-id="0111e-275">This project is added to the given project collection when either this project or the given project root is given the full path to the source project file.</span></span>  
  
 <span data-ttu-id="0111e-276">Wywołuje wyjątek InvalidProjectFileException, jeśli nie powiedzie się ocena.</span><span class="sxs-lookup"><span data-stu-id="0111e-276">Throws InvalidProjectFileException if the evaluation fails.</span></span> <span data-ttu-id="0111e-277">Generuje wyjątek InvalidOperationException, jeśli istnieje już załadowany równoważny projekt w kolekcji projektu.</span><span class="sxs-lookup"><span data-stu-id="0111e-277">Throws InvalidOperationException if there is already an equivalent project loaded in the project collection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddItem">
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="0111e-278">Dodaje element.</span><span class="sxs-lookup"><span data-stu-id="0111e-278">Adds an item.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddItem">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;Microsoft.Build.Evaluation.ProjectItem&gt; AddItem (string itemType, string unevaluatedInclude);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IList`1&lt;class Microsoft.Build.Evaluation.ProjectItem&gt; AddItem(string itemType, string unevaluatedInclude) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.AddItem(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddItem (itemType As String, unevaluatedInclude As String) As IList(Of ProjectItem)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IList&lt;Microsoft::Build::Evaluation::ProjectItem ^&gt; ^ AddItem(System::String ^ itemType, System::String ^ unevaluatedInclude);" />
      <MemberSignature Language="F#" Value="member this.AddItem : string * string -&gt; System.Collections.Generic.IList&lt;Microsoft.Build.Evaluation.ProjectItem&gt;" Usage="project.AddItem (itemType, unevaluatedInclude)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Microsoft.Build.Evaluation.ProjectItem&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="itemType" Type="System.String" />
        <Parameter Name="unevaluatedInclude" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="itemType"><span data-ttu-id="0111e-279">Typ elementu dodanego elementu.</span><span class="sxs-lookup"><span data-stu-id="0111e-279">The item type of the added item.</span></span></param>
        <param name="unevaluatedInclude"><span data-ttu-id="0111e-280">Dołączyć atrybut elementu do dodania.</span><span class="sxs-lookup"><span data-stu-id="0111e-280">Include attribute of the item to be added.</span></span></param>
        <summary><span data-ttu-id="0111e-281">Dodaje do projektu element bez metadanych.</span><span class="sxs-lookup"><span data-stu-id="0111e-281">Adds an item with no metadata to the project.</span></span></summary>
        <returns><span data-ttu-id="0111e-282">Dodany element.</span><span class="sxs-lookup"><span data-stu-id="0111e-282">The added item.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0111e-283">Później można dodać żadnych metadanych.</span><span class="sxs-lookup"><span data-stu-id="0111e-283">Any metadata can be added later.</span></span> <span data-ttu-id="0111e-284">Jeśli wyrażenia z symbolami wieloznacznymi już zawiera nowy element, aby nie modyfikować źródła projektu.</span><span class="sxs-lookup"><span data-stu-id="0111e-284">Does not modify the project source if a wildcard expression already includes the new item.</span></span>  
  
 <span data-ttu-id="0111e-285">Obliczanie odbywa się na zasadzie największej staranności.</span><span class="sxs-lookup"><span data-stu-id="0111e-285">Evaluation takes place on a best-effort basis.</span></span> <span data-ttu-id="0111e-286">Elementy, które są zdefiniowane w źródle projektu po nowy element może służyć do oceny.</span><span class="sxs-lookup"><span data-stu-id="0111e-286">Items that are defined in the project source following the new item may be used for evaluation.</span></span> <span data-ttu-id="0111e-287">Sprawdzany jest tylko ten element.</span><span class="sxs-lookup"><span data-stu-id="0111e-287">Only this item is evaluated.</span></span> <span data-ttu-id="0111e-288">Nie wpływa na inne elementy, które mogą od niej zależne.</span><span class="sxs-lookup"><span data-stu-id="0111e-288">Other items that might depend on it are not affected.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddItem">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;Microsoft.Build.Evaluation.ProjectItem&gt; AddItem (string itemType, string unevaluatedInclude, System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;string,string&gt;&gt; metadata);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IList`1&lt;class Microsoft.Build.Evaluation.ProjectItem&gt; AddItem(string itemType, string unevaluatedInclude, class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;string, string&gt;&gt; metadata) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.AddItem(System.String,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}})" />
      <MemberSignature Language="VB.NET" Value="Public Function AddItem (itemType As String, unevaluatedInclude As String, metadata As IEnumerable(Of KeyValuePair(Of String, String))) As IList(Of ProjectItem)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IList&lt;Microsoft::Build::Evaluation::ProjectItem ^&gt; ^ AddItem(System::String ^ itemType, System::String ^ unevaluatedInclude, System::Collections::Generic::IEnumerable&lt;System::Collections::Generic::KeyValuePair&lt;System::String ^, System::String ^&gt;&gt; ^ metadata);" />
      <MemberSignature Language="F#" Value="member this.AddItem : string * string * seq&lt;System.Collections.Generic.KeyValuePair&lt;string, string&gt;&gt; -&gt; System.Collections.Generic.IList&lt;Microsoft.Build.Evaluation.ProjectItem&gt;" Usage="project.AddItem (itemType, unevaluatedInclude, metadata)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Microsoft.Build.Evaluation.ProjectItem&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="itemType" Type="System.String" />
        <Parameter Name="unevaluatedInclude" Type="System.String" />
        <Parameter Name="metadata" Type="System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.String&gt;&gt;" />
      </Parameters>
      <Docs>
        <param name="itemType"><span data-ttu-id="0111e-289">Typ elementu dodanego elementu.</span><span class="sxs-lookup"><span data-stu-id="0111e-289">The item type of the added item.</span></span></param>
        <param name="unevaluatedInclude"><span data-ttu-id="0111e-290">Dołączyć atrybut elementu do dodania.</span><span class="sxs-lookup"><span data-stu-id="0111e-290">Include attribute of the item to be added.</span></span></param>
        <param name="metadata"><span data-ttu-id="0111e-291">Metadane dodanego elementu.</span><span class="sxs-lookup"><span data-stu-id="0111e-291">The metadata of the added item.</span></span></param>
        <summary><span data-ttu-id="0111e-292">Dodaje element z określonych metadanych do projektu.</span><span class="sxs-lookup"><span data-stu-id="0111e-292">Adds an item with the given metadata to the project.</span></span></summary>
        <returns><span data-ttu-id="0111e-293">Dodany element.</span><span class="sxs-lookup"><span data-stu-id="0111e-293">The added item.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0111e-294">Metadane mogą mieć wartości null, co oznacza brak metadanych.</span><span class="sxs-lookup"><span data-stu-id="0111e-294">The metadata may be null, which indicates no metadata.</span></span>  
  
 <span data-ttu-id="0111e-295">Obliczanie odbywa się na zasadzie największej staranności.</span><span class="sxs-lookup"><span data-stu-id="0111e-295">Evaluation takes place on a best-effort basis.</span></span> <span data-ttu-id="0111e-296">Elementy, które są zdefiniowane w źródle projektu po nowy element może służyć do oceny.</span><span class="sxs-lookup"><span data-stu-id="0111e-296">Items that are defined in the project source following the new item may be used for evaluation.</span></span> <span data-ttu-id="0111e-297">Sprawdzany jest tylko ten element.</span><span class="sxs-lookup"><span data-stu-id="0111e-297">Only this item is evaluated.</span></span> <span data-ttu-id="0111e-298">Nie wpływa na inne elementy, które mogą od niej zależne.</span><span class="sxs-lookup"><span data-stu-id="0111e-298">Other items that might depend on it are not affected.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddItemFast">
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="0111e-299">Dodaje do projektu element bez metadanych.</span><span class="sxs-lookup"><span data-stu-id="0111e-299">Adds an item with no metadata to the project.</span></span>  <span data-ttu-id="0111e-300">Nie robi nic, aby sprawdzić, czy istniejący symbol wieloznaczny będzie pasował do nowego elementu, chyba że jest to pierwszy element grupy elementów.</span><span class="sxs-lookup"><span data-stu-id="0111e-300">Makes no effort to see if an existing wildcard would already match the new item, unless it is the first item in an item group.</span></span>  <span data-ttu-id="0111e-301">Nie robi nic w celu zlokalizowania nowego elementu w pobliżu podobnych elementów.</span><span class="sxs-lookup"><span data-stu-id="0111e-301">Makes no effort to locate the new item near similar items.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddItemFast">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;Microsoft.Build.Evaluation.ProjectItem&gt; AddItemFast (string itemType, string unevaluatedInclude);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IList`1&lt;class Microsoft.Build.Evaluation.ProjectItem&gt; AddItemFast(string itemType, string unevaluatedInclude) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.AddItemFast(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddItemFast (itemType As String, unevaluatedInclude As String) As IList(Of ProjectItem)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IList&lt;Microsoft::Build::Evaluation::ProjectItem ^&gt; ^ AddItemFast(System::String ^ itemType, System::String ^ unevaluatedInclude);" />
      <MemberSignature Language="F#" Value="member this.AddItemFast : string * string -&gt; System.Collections.Generic.IList&lt;Microsoft.Build.Evaluation.ProjectItem&gt;" Usage="project.AddItemFast (itemType, unevaluatedInclude)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Microsoft.Build.Evaluation.ProjectItem&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="itemType" Type="System.String" />
        <Parameter Name="unevaluatedInclude" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="itemType"><span data-ttu-id="0111e-302">Typ elementu, który ma zostać dodana.</span><span class="sxs-lookup"><span data-stu-id="0111e-302">The item type to be added.</span></span></param>
        <param name="unevaluatedInclude"><span data-ttu-id="0111e-303">Atrybut Include nieznanym mają zostać dodane do elementu.</span><span class="sxs-lookup"><span data-stu-id="0111e-303">The unevaluated Include attribute to be added to the item.</span></span></param>
        <summary><span data-ttu-id="0111e-304">Dodaje do projektu element bez metadanych.</span><span class="sxs-lookup"><span data-stu-id="0111e-304">Adds an item with no metadata to the project.</span></span>  <span data-ttu-id="0111e-305">Nie robi nic, aby sprawdzić, czy istniejący symbol wieloznaczny będzie pasował do nowego elementu, chyba że jest to pierwszy element grupy elementów.</span><span class="sxs-lookup"><span data-stu-id="0111e-305">Makes no effort to see if an existing wildcard would already match the new item, unless it is the first item in an item group.</span></span>  <span data-ttu-id="0111e-306">Nie robi nic w celu zlokalizowania nowego elementu w pobliżu podobnych elementów.</span><span class="sxs-lookup"><span data-stu-id="0111e-306">Makes no effort to locate the new item near similar items.</span></span></summary>
        <returns><span data-ttu-id="0111e-307">Lista elementów projektu, dodane.</span><span class="sxs-lookup"><span data-stu-id="0111e-307">A list of the project items added.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0111e-308">Dołącza element do pierwszej grupy elementów, nie mogą mieć warunku i albo nie ma elementów podrzędnych lub którego pierwszym elementem podrzędnym elementu tego samego typu.</span><span class="sxs-lookup"><span data-stu-id="0111e-308">Appends the item to the first item group that does not have a condition and has either no children or whose first child is an item of the same type.</span></span>  
  
 <span data-ttu-id="0111e-309">Ocenia na zasadzie największej staranności:-rozwija przy użyciu wszystkich elementów.</span><span class="sxs-lookup"><span data-stu-id="0111e-309">Evaluates on a best-effort basis: -expands with all items.</span></span> <span data-ttu-id="0111e-310">Elementy, które są zdefiniowane w pliku XML poniżej nowy element może służyć, nawet jeśli rzeczywiste oceny nie były.</span><span class="sxs-lookup"><span data-stu-id="0111e-310">Items that are defined in the XML below the new item may be used, even though in a real evaluation they would not be.</span></span>  
  
 <span data-ttu-id="0111e-311">Sprawdzany jest tylko ten element.</span><span class="sxs-lookup"><span data-stu-id="0111e-311">Only this item is evaluated.</span></span> <span data-ttu-id="0111e-312">Nie wpływa na inne elementy, które mogą od niej zależne.</span><span class="sxs-lookup"><span data-stu-id="0111e-312">Other items that might depend on it are not affected.</span></span>  
  
 <span data-ttu-id="0111e-313">To udogodnienie, przyjmuje się, jest niekoniecznie pozostaw projektu doskonale własnym spójna aż do ponownego oszacowania.</span><span class="sxs-lookup"><span data-stu-id="0111e-313">This is a convenience that it is understood does not necessarily leave the project in a perfectly self consistent state until reevaluation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddItemFast">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;Microsoft.Build.Evaluation.ProjectItem&gt; AddItemFast (string itemType, string unevaluatedInclude, System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;string,string&gt;&gt; metadata);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IList`1&lt;class Microsoft.Build.Evaluation.ProjectItem&gt; AddItemFast(string itemType, string unevaluatedInclude, class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;string, string&gt;&gt; metadata) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.AddItemFast(System.String,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}})" />
      <MemberSignature Language="VB.NET" Value="Public Function AddItemFast (itemType As String, unevaluatedInclude As String, metadata As IEnumerable(Of KeyValuePair(Of String, String))) As IList(Of ProjectItem)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IList&lt;Microsoft::Build::Evaluation::ProjectItem ^&gt; ^ AddItemFast(System::String ^ itemType, System::String ^ unevaluatedInclude, System::Collections::Generic::IEnumerable&lt;System::Collections::Generic::KeyValuePair&lt;System::String ^, System::String ^&gt;&gt; ^ metadata);" />
      <MemberSignature Language="F#" Value="member this.AddItemFast : string * string * seq&lt;System.Collections.Generic.KeyValuePair&lt;string, string&gt;&gt; -&gt; System.Collections.Generic.IList&lt;Microsoft.Build.Evaluation.ProjectItem&gt;" Usage="project.AddItemFast (itemType, unevaluatedInclude, metadata)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Microsoft.Build.Evaluation.ProjectItem&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="itemType" Type="System.String" />
        <Parameter Name="unevaluatedInclude" Type="System.String" />
        <Parameter Name="metadata" Type="System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.String&gt;&gt;" />
      </Parameters>
      <Docs>
        <param name="itemType"><span data-ttu-id="0111e-314">Typ elementu, który ma zostać dodana.</span><span class="sxs-lookup"><span data-stu-id="0111e-314">The item type to be added.</span></span></param>
        <param name="unevaluatedInclude"><span data-ttu-id="0111e-315">Atrybut Include nieznanym mają zostać dodane do elementu.</span><span class="sxs-lookup"><span data-stu-id="0111e-315">The unevaluated Include attribute to be added to the item.</span></span></param>
        <param name="metadata"><span data-ttu-id="0111e-316">Metadane, które mają zostać dodane.</span><span class="sxs-lookup"><span data-stu-id="0111e-316">The metadata to be added.</span></span></param>
        <summary><span data-ttu-id="0111e-317">Dodaje element z metadanymi do projektu.</span><span class="sxs-lookup"><span data-stu-id="0111e-317">Adds an item with metadata to the project.</span></span> <span data-ttu-id="0111e-318">Metadane może być zerowy, wskazujący brak metadanych.</span><span class="sxs-lookup"><span data-stu-id="0111e-318">Metadata may be null, indicating no metadata.</span></span> <span data-ttu-id="0111e-319">Nie robi nic, aby sprawdzić, czy istniejący symbol wieloznaczny będzie pasował do nowego elementu, chyba że jest to pierwszy element grupy elementów.</span><span class="sxs-lookup"><span data-stu-id="0111e-319">Makes no effort to see if an existing wildcard would already match the new item, unless it is the first item in an item group.</span></span> <span data-ttu-id="0111e-320">Nie robi nic w celu zlokalizowania nowego elementu w pobliżu podobnych elementów.</span><span class="sxs-lookup"><span data-stu-id="0111e-320">Makes no effort to locate the new item near similar items.</span></span></summary>
        <returns><span data-ttu-id="0111e-321">Lista elementów projektu, dodane.</span><span class="sxs-lookup"><span data-stu-id="0111e-321">A list of the project items added.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0111e-322">Dołącza element do pierwszej grupy elementów, nie mogą mieć warunku i albo nie ma elementów podrzędnych lub którego pierwszym elementem podrzędnym elementu tego samego typu.</span><span class="sxs-lookup"><span data-stu-id="0111e-322">Appends the item to the first item group that does not have a condition and has either no children or whose first child is an item of the same type.</span></span>  
  
 <span data-ttu-id="0111e-323">Ocenia na zasadzie największej staranności:-rozwija przy użyciu wszystkich elementów.</span><span class="sxs-lookup"><span data-stu-id="0111e-323">Evaluates on a best-effort basis: -expands with all items.</span></span> <span data-ttu-id="0111e-324">Elementy, które są zdefiniowane w pliku XML poniżej nowy element może służyć, nawet jeśli rzeczywiste oceny nie były.</span><span class="sxs-lookup"><span data-stu-id="0111e-324">Items that are defined in the XML below the new item may be used, even though in a real evaluation they would not be.</span></span>  
  
 <span data-ttu-id="0111e-325">Sprawdzany jest tylko ten element.</span><span class="sxs-lookup"><span data-stu-id="0111e-325">Only this item is evaluated.</span></span> <span data-ttu-id="0111e-326">Nie dotyczy innych elementów, które mogą od niej zależne.</span><span class="sxs-lookup"><span data-stu-id="0111e-326">Other items that might depend on it is not affected.</span></span>  
  
 <span data-ttu-id="0111e-327">To udogodnienie, przyjmuje się, jest niekoniecznie pozostaw projektu doskonale własnym spójna aż do ponownego oszacowania.</span><span class="sxs-lookup"><span data-stu-id="0111e-327">This is a convenience that it is understood does not necessarily leave the project in a perfectly self consistent state until reevaluation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AllEvaluatedItemDefinitionMetadata">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.ICollection&lt;Microsoft.Build.Evaluation.ProjectMetadata&gt; AllEvaluatedItemDefinitionMetadata { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.ICollection`1&lt;class Microsoft.Build.Evaluation.ProjectMetadata&gt; AllEvaluatedItemDefinitionMetadata" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.Project.AllEvaluatedItemDefinitionMetadata" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AllEvaluatedItemDefinitionMetadata As ICollection(Of ProjectMetadata)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::ICollection&lt;Microsoft::Build::Evaluation::ProjectMetadata ^&gt; ^ AllEvaluatedItemDefinitionMetadata { System::Collections::Generic::ICollection&lt;Microsoft::Build::Evaluation::ProjectMetadata ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AllEvaluatedItemDefinitionMetadata : System.Collections.Generic.ICollection&lt;Microsoft.Build.Evaluation.ProjectMetadata&gt;" Usage="Microsoft.Build.Evaluation.Project.AllEvaluatedItemDefinitionMetadata" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;Microsoft.Build.Evaluation.ProjectMetadata&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0111e-328">Pobiera wszystkie metadane definicji elementu napotkanych podczas obliczania wartości.</span><span class="sxs-lookup"><span data-stu-id="0111e-328">Gets all item definition metadata encountered during evaluation.</span></span></summary>
        <value><span data-ttu-id="0111e-329">Wszystkie metadane definicji elementu napotkanych podczas obliczania wartości.</span><span class="sxs-lookup"><span data-stu-id="0111e-329">All item definition metadata encountered during evaluation.</span></span> <span data-ttu-id="0111e-330">Nie zawiera żadnych elementów, których warunki nie zostało obliczone na wartość true, ani żadnych metadanych definicji elementu dodane od czasu ostatniego obliczania.</span><span class="sxs-lookup"><span data-stu-id="0111e-330">This does not include any elements whose conditions did not evaluate to true, nor any item definition metadata added since the last evaluation.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0111e-331">Metadane elementu jest do odczytu w drugim przebiegu oceny.</span><span class="sxs-lookup"><span data-stu-id="0111e-331">Item metadata is read during the second evaluation pass.</span></span> <span data-ttu-id="0111e-332">W przeciwieństwie do metadanych zwracana przez właściwość ItemDefinitions te metadane porządkowania i zawiera wszystkie metadane, następnie przesłonięcia o takiej samej nazwie i typie elementu.</span><span class="sxs-lookup"><span data-stu-id="0111e-332">Unlike metadata returned by the ItemDefinitions property, this metadata is ordered, and includes any metadata subsequently overridden with the same name and item type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AllEvaluatedItems">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.ICollection&lt;Microsoft.Build.Evaluation.ProjectItem&gt; AllEvaluatedItems { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.ICollection`1&lt;class Microsoft.Build.Evaluation.ProjectItem&gt; AllEvaluatedItems" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.Project.AllEvaluatedItems" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AllEvaluatedItems As ICollection(Of ProjectItem)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::ICollection&lt;Microsoft::Build::Evaluation::ProjectItem ^&gt; ^ AllEvaluatedItems { System::Collections::Generic::ICollection&lt;Microsoft::Build::Evaluation::ProjectItem ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AllEvaluatedItems : System.Collections.Generic.ICollection&lt;Microsoft.Build.Evaluation.ProjectItem&gt;" Usage="Microsoft.Build.Evaluation.Project.AllEvaluatedItems" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;Microsoft.Build.Evaluation.ProjectItem&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0111e-333">Pobiera moduł wyliczający za pośrednictwem wszystkich elementów napotkanych podczas obliczania wartości.</span><span class="sxs-lookup"><span data-stu-id="0111e-333">Gets an enumerator over all items encountered during evaluation.</span></span> <span data-ttu-id="0111e-334">Te są odczytywane podczas przebiegu trzeci oceny.</span><span class="sxs-lookup"><span data-stu-id="0111e-334">These are read during the third evaluation pass.</span></span></summary>
        <value><span data-ttu-id="0111e-335">Moduł wyliczający za pośrednictwem wszystkich elementów napotkanych podczas obliczania wartości.</span><span class="sxs-lookup"><span data-stu-id="0111e-335">An enumerator over all items encountered during evaluation.</span></span> <span data-ttu-id="0111e-336">Te są odczytywane podczas przebiegu trzeci oceny.</span><span class="sxs-lookup"><span data-stu-id="0111e-336">These are read during the third evaluation pass.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0111e-337">W przeciwieństwie do tych elementów, zwracany przez właściwość elementy te są uporządkowane względem innych elementów podczas oceny, nie tylko są uporządkowane względem elementów tego samego typu elementu.</span><span class="sxs-lookup"><span data-stu-id="0111e-337">Unlike those items returned by the Items property, these are ordered with respect to all other items encountered during evaluation, not just ordered with respect to items of the same item type.</span></span>  
  
 <span data-ttu-id="0111e-338">W niektórych aplikacjach to kompletny wzajemnego kolejność jest ważna i takich hostów można użyć tej właściwości.</span><span class="sxs-lookup"><span data-stu-id="0111e-338">In some applications, this complete mutual ordering is significant, and such hosts can use this property.</span></span>  
  
 <span data-ttu-id="0111e-339">Wyliczanie nie ma żadnych elementów, których warunki nie zostało obliczone na wartość true, ani obejmuje wszystkie elementy dodane od czasu ostatniego obliczania.</span><span class="sxs-lookup"><span data-stu-id="0111e-339">The enumeration does not include any elements whose conditions did not evaluate to true, nor does it include any items added since the last evaluation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AllEvaluatedProperties">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.ICollection&lt;Microsoft.Build.Evaluation.ProjectProperty&gt; AllEvaluatedProperties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.ICollection`1&lt;class Microsoft.Build.Evaluation.ProjectProperty&gt; AllEvaluatedProperties" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.Project.AllEvaluatedProperties" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AllEvaluatedProperties As ICollection(Of ProjectProperty)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::ICollection&lt;Microsoft::Build::Evaluation::ProjectProperty ^&gt; ^ AllEvaluatedProperties { System::Collections::Generic::ICollection&lt;Microsoft::Build::Evaluation::ProjectProperty ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AllEvaluatedProperties : System.Collections.Generic.ICollection&lt;Microsoft.Build.Evaluation.ProjectProperty&gt;" Usage="Microsoft.Build.Evaluation.Project.AllEvaluatedProperties" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;Microsoft.Build.Evaluation.ProjectProperty&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0111e-340">Pobiera wszystkie właściwości napotkanych podczas obliczania wartości.</span><span class="sxs-lookup"><span data-stu-id="0111e-340">Gets all properties encountered during evaluation.</span></span></summary>
        <value><span data-ttu-id="0111e-341">Napotkano podczas obliczania wartości wszystkich właściwości.</span><span class="sxs-lookup"><span data-stu-id="0111e-341">All properties encountered during evaluation.</span></span> <span data-ttu-id="0111e-342">Nie zawiera żadnych właściwości, których warunki nie zostało obliczone na wartość true, ani żadnych właściwości dodane od czasu ostatniego obliczania.</span><span class="sxs-lookup"><span data-stu-id="0111e-342">This does not include any properties whose conditions did not evaluate to true, nor any properties added since the last evaluation.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0111e-343">Te właściwości są odczytywane podczas pierwszego przejścia oceny.</span><span class="sxs-lookup"><span data-stu-id="0111e-343">These properties are read during the first evaluation pass.</span></span> <span data-ttu-id="0111e-344">W odróżnieniu od właściwości zwróconej przez właściwość właściwości te są uporządkowane i zawiera żadnych właściwości, następnie przesłonięcia o takiej samej nazwie.</span><span class="sxs-lookup"><span data-stu-id="0111e-344">Unlike properties returned by the Properties property, these are ordered, and includes any properties subsequently overridden with the same name.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Build">
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="0111e-345">Tworzy tego projektu, przy użyciu domyślnych elementów docelowych.</span><span class="sxs-lookup"><span data-stu-id="0111e-345">Builds this project, using the default targets.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Build">
      <MemberSignature Language="C#" Value="public bool Build ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Build() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.Build" />
      <MemberSignature Language="VB.NET" Value="Public Function Build () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Build();" />
      <MemberSignature Language="F#" Value="member this.Build : unit -&gt; bool" Usage="project.Build " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="0111e-346">Tworzy tego projektu, przy użyciu domyślnych elementów docelowych.</span><span class="sxs-lookup"><span data-stu-id="0111e-346">Builds this project, using the default targets.</span></span></summary>
        <returns><span data-ttu-id="0111e-347"><see langword="true" /> w przypadku powodzenia; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="0111e-347"><see langword="true" /> on success; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0111e-348">Aby ustawić lub pobrać wirtualne elementy na potrzeby kompilacji, należy jawnie sklonować wystąpienie projektu i dokonać jego kompilacji.</span><span class="sxs-lookup"><span data-stu-id="0111e-348">To set or get virtual items for build purposes, clone a project instance explicitly and build that.</span></span> <span data-ttu-id="0111e-349">Metoda ta nie powoduje modyfikacji obiektu projektu.</span><span class="sxs-lookup"><span data-stu-id="0111e-349">This method does not modify the project object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Build">
      <MemberSignature Language="C#" Value="public bool Build (Microsoft.Build.Framework.ILogger logger);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Build(class Microsoft.Build.Framework.ILogger logger) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.Build(Microsoft.Build.Framework.ILogger)" />
      <MemberSignature Language="VB.NET" Value="Public Function Build (logger As ILogger) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Build(Microsoft::Build::Framework::ILogger ^ logger);" />
      <MemberSignature Language="F#" Value="member this.Build : Microsoft.Build.Framework.ILogger -&gt; bool" Usage="project.Build logger" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="logger" Type="Microsoft.Build.Framework.ILogger" />
      </Parameters>
      <Docs>
        <param name="logger"><span data-ttu-id="0111e-350">Rejestrator, który ma być używany podczas kompilacji.</span><span class="sxs-lookup"><span data-stu-id="0111e-350">The logger to be used during the build.</span></span></param>
        <summary><span data-ttu-id="0111e-351">Tworzy tego projektu, przy użyciu domyślnych elementów docelowych i danym rejestratora.</span><span class="sxs-lookup"><span data-stu-id="0111e-351">Builds this project, using the default targets and the given logger.</span></span></summary>
        <returns><span data-ttu-id="0111e-352"><see langword="true" /> w przypadku powodzenia; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="0111e-352"><see langword="true" /> on success; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0111e-353">Aby ustawić lub pobrać wirtualne elementy na potrzeby kompilacji, należy jawnie sklonować wystąpienie projektu i dokonać jego kompilacji.</span><span class="sxs-lookup"><span data-stu-id="0111e-353">To set or get virtual items for build purposes, clone a project instance explicitly and build that.</span></span> <span data-ttu-id="0111e-354">Metoda ta nie powoduje modyfikacji obiektu projektu.</span><span class="sxs-lookup"><span data-stu-id="0111e-354">This method does not modify the project object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Build">
      <MemberSignature Language="C#" Value="public bool Build (System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Framework.ILogger&gt; loggers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Build(class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Build.Framework.ILogger&gt; loggers) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.Build(System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger})" />
      <MemberSignature Language="VB.NET" Value="Public Function Build (loggers As IEnumerable(Of ILogger)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Build(System::Collections::Generic::IEnumerable&lt;Microsoft::Build::Framework::ILogger ^&gt; ^ loggers);" />
      <MemberSignature Language="F#" Value="member this.Build : seq&lt;Microsoft.Build.Framework.ILogger&gt; -&gt; bool" Usage="project.Build loggers" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="loggers" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Framework.ILogger&gt;" />
      </Parameters>
      <Docs>
        <param name="loggers"><span data-ttu-id="0111e-355">Moduł wyliczający przez wszystkie rejestratory, które mają być używane podczas kompilacji.</span><span class="sxs-lookup"><span data-stu-id="0111e-355">An enumerator over all loggers to be used during the build.</span></span></param>
        <summary><span data-ttu-id="0111e-356">Tworzy tego projektu, przy użyciu domyślnych elementów docelowych i danym rejestratorów.</span><span class="sxs-lookup"><span data-stu-id="0111e-356">Builds this project, using the default targets and the given loggers.</span></span></summary>
        <returns><span data-ttu-id="0111e-357"><see langword="true" /> w przypadku powodzenia; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="0111e-357"><see langword="true" /> on success; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0111e-358">Aby ustawić lub pobrać wirtualne elementy na potrzeby kompilacji, należy jawnie sklonować wystąpienie projektu i dokonać jego kompilacji.</span><span class="sxs-lookup"><span data-stu-id="0111e-358">To set or get virtual items for build purposes, clone a project instance explicitly and build that.</span></span> <span data-ttu-id="0111e-359">Metoda ta nie powoduje modyfikacji obiektu projektu.</span><span class="sxs-lookup"><span data-stu-id="0111e-359">This method does not modify the project object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Build">
      <MemberSignature Language="C#" Value="public bool Build (string target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Build(string target) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.Build(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Build (target As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Build(System::String ^ target);" />
      <MemberSignature Language="F#" Value="member this.Build : string -&gt; bool" Usage="project.Build target" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="target"><span data-ttu-id="0111e-360">Cel, który ma zostać utworzony.</span><span class="sxs-lookup"><span data-stu-id="0111e-360">The target to be built.</span></span></param>
        <summary><span data-ttu-id="0111e-361">Konstruuje ten projekt tworzenia z danym obiektem docelowym.</span><span class="sxs-lookup"><span data-stu-id="0111e-361">Builds this project, building the given target.</span></span></summary>
        <returns><span data-ttu-id="0111e-362"><see langword="true" /> w przypadku powodzenia; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="0111e-362"><see langword="true" /> on success; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0111e-363">Aby ustawić lub pobrać wirtualne elementy na potrzeby kompilacji, należy jawnie sklonować wystąpienie projektu i dokonać jego kompilacji.</span><span class="sxs-lookup"><span data-stu-id="0111e-363">To set or get virtual items for build purposes, clone a project instance explicitly and build that.</span></span> <span data-ttu-id="0111e-364">Metoda ta nie powoduje modyfikacji obiektu projektu.</span><span class="sxs-lookup"><span data-stu-id="0111e-364">This method does not modify the project object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Build">
      <MemberSignature Language="C#" Value="public bool Build (string[] targets);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Build(string[] targets) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.Build(System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Function Build (targets As String()) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Build(cli::array &lt;System::String ^&gt; ^ targets);" />
      <MemberSignature Language="F#" Value="member this.Build : string[] -&gt; bool" Usage="project.Build targets" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targets" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="targets"><span data-ttu-id="0111e-365">Tablica elementów docelowych, które ma zostać utworzony.</span><span class="sxs-lookup"><span data-stu-id="0111e-365">An array of targets to be built.</span></span></param>
        <summary><span data-ttu-id="0111e-366">Konstruuje ten projekt tworzenia wartościami docelowymi.</span><span class="sxs-lookup"><span data-stu-id="0111e-366">Builds this project, building the given targets.</span></span></summary>
        <returns><span data-ttu-id="0111e-367"><see langword="true" /> w przypadku powodzenia; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="0111e-367"><see langword="true" /> on success; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0111e-368">Aby ustawić lub pobrać wirtualne elementy na potrzeby kompilacji, należy jawnie sklonować wystąpienie projektu i dokonać jego kompilacji.</span><span class="sxs-lookup"><span data-stu-id="0111e-368">To set or get virtual items for build purposes, clone a project instance explicitly and build that.</span></span> <span data-ttu-id="0111e-369">Metoda ta nie powoduje modyfikacji obiektu projektu.</span><span class="sxs-lookup"><span data-stu-id="0111e-369">This method does not modify the project object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Build">
      <MemberSignature Language="C#" Value="public bool Build (System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Framework.ILogger&gt; loggers, System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Logging.ForwardingLoggerRecord&gt; remoteLoggers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Build(class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Build.Framework.ILogger&gt; loggers, class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Build.Logging.ForwardingLoggerRecord&gt; remoteLoggers) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.Build(System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger},System.Collections.Generic.IEnumerable{Microsoft.Build.Logging.ForwardingLoggerRecord})" />
      <MemberSignature Language="VB.NET" Value="Public Function Build (loggers As IEnumerable(Of ILogger), remoteLoggers As IEnumerable(Of ForwardingLoggerRecord)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Build(System::Collections::Generic::IEnumerable&lt;Microsoft::Build::Framework::ILogger ^&gt; ^ loggers, System::Collections::Generic::IEnumerable&lt;Microsoft::Build::Logging::ForwardingLoggerRecord ^&gt; ^ remoteLoggers);" />
      <MemberSignature Language="F#" Value="member this.Build : seq&lt;Microsoft.Build.Framework.ILogger&gt; * seq&lt;Microsoft.Build.Logging.ForwardingLoggerRecord&gt; -&gt; bool" Usage="project.Build (loggers, remoteLoggers)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="loggers" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Framework.ILogger&gt;" />
        <Parameter Name="remoteLoggers" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Logging.ForwardingLoggerRecord&gt;" />
      </Parameters>
      <Docs>
        <param name="loggers"><span data-ttu-id="0111e-370">Rejestratory, które mają być używane podczas kompilacji.</span><span class="sxs-lookup"><span data-stu-id="0111e-370">The loggers to be used during the build.</span></span></param>
        <param name="remoteLoggers"><span data-ttu-id="0111e-371">Zdalne rejestratory, które mają być używane podczas kompilacji.</span><span class="sxs-lookup"><span data-stu-id="0111e-371">The remote loggers to be used during the build.</span></span></param>
        <summary><span data-ttu-id="0111e-372">Tworzy tego projektu, przy użyciu domyślnych elementów docelowych i danym rejestratorów i zdalne rejestratory.</span><span class="sxs-lookup"><span data-stu-id="0111e-372">Builds this project, using the default targets and the given loggers and remote loggers.</span></span></summary>
        <returns><span data-ttu-id="0111e-373"><see langword="true" /> w przypadku powodzenia; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="0111e-373"><see langword="true" /> on success; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0111e-374">Aby ustawić lub pobrać wirtualne elementy na potrzeby kompilacji, należy jawnie sklonować wystąpienie projektu i dokonać jego kompilacji.</span><span class="sxs-lookup"><span data-stu-id="0111e-374">To set or get virtual items for build purposes, clone a project instance explicitly and build that.</span></span> <span data-ttu-id="0111e-375">Metoda ta nie powoduje modyfikacji obiektu projektu.</span><span class="sxs-lookup"><span data-stu-id="0111e-375">This method does not modify the project object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Build">
      <MemberSignature Language="C#" Value="public bool Build (string target, System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Framework.ILogger&gt; loggers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Build(string target, class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Build.Framework.ILogger&gt; loggers) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.Build(System.String,System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger})" />
      <MemberSignature Language="VB.NET" Value="Public Function Build (target As String, loggers As IEnumerable(Of ILogger)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Build(System::String ^ target, System::Collections::Generic::IEnumerable&lt;Microsoft::Build::Framework::ILogger ^&gt; ^ loggers);" />
      <MemberSignature Language="F#" Value="member this.Build : string * seq&lt;Microsoft.Build.Framework.ILogger&gt; -&gt; bool" Usage="project.Build (target, loggers)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.String" />
        <Parameter Name="loggers" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Framework.ILogger&gt;" />
      </Parameters>
      <Docs>
        <param name="target"><span data-ttu-id="0111e-376">Cel, który ma zostać utworzony.</span><span class="sxs-lookup"><span data-stu-id="0111e-376">The target to be built.</span></span></param>
        <param name="loggers"><span data-ttu-id="0111e-377">Rejestratory, które mają być używane podczas kompilacji.</span><span class="sxs-lookup"><span data-stu-id="0111e-377">The loggers to be used during the build.</span></span></param>
        <summary><span data-ttu-id="0111e-378">Tworzy tworzenie danym obiektem docelowym oraz korzystanie z danym rejestratorów tego projektu.</span><span class="sxs-lookup"><span data-stu-id="0111e-378">Builds this project, building the given target and using the given loggers.</span></span></summary>
        <returns><span data-ttu-id="0111e-379"><see langword="true" /> w przypadku powodzenia; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="0111e-379"><see langword="true" /> on success; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0111e-380">Aby ustawić lub pobrać wirtualne elementy na potrzeby kompilacji, należy jawnie sklonować wystąpienie projektu i dokonać jego kompilacji.</span><span class="sxs-lookup"><span data-stu-id="0111e-380">To set or get virtual items for build purposes, clone a project instance explicitly and build that.</span></span> <span data-ttu-id="0111e-381">Metoda ta nie powoduje modyfikacji obiektu projektu.</span><span class="sxs-lookup"><span data-stu-id="0111e-381">This method does not modify the project object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Build">
      <MemberSignature Language="C#" Value="public bool Build (string[] targets, System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Framework.ILogger&gt; loggers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Build(string[] targets, class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Build.Framework.ILogger&gt; loggers) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.Build(System.String[],System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger})" />
      <MemberSignature Language="VB.NET" Value="Public Function Build (targets As String(), loggers As IEnumerable(Of ILogger)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Build(cli::array &lt;System::String ^&gt; ^ targets, System::Collections::Generic::IEnumerable&lt;Microsoft::Build::Framework::ILogger ^&gt; ^ loggers);" />
      <MemberSignature Language="F#" Value="member this.Build : string[] * seq&lt;Microsoft.Build.Framework.ILogger&gt; -&gt; bool" Usage="project.Build (targets, loggers)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targets" Type="System.String[]" />
        <Parameter Name="loggers" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Framework.ILogger&gt;" />
      </Parameters>
      <Docs>
        <param name="targets"><span data-ttu-id="0111e-382">Cele, które mają być poddane kompilacji.</span><span class="sxs-lookup"><span data-stu-id="0111e-382">The targets to be built.</span></span></param>
        <param name="loggers"><span data-ttu-id="0111e-383">Rejestratory, które mają być używane podczas kompilacji.</span><span class="sxs-lookup"><span data-stu-id="0111e-383">The loggers to be used during the build.</span></span></param>
        <summary><span data-ttu-id="0111e-384">Tworzy tworzenie wartościami docelowymi oraz korzystanie z danym rejestratorów tego projektu.</span><span class="sxs-lookup"><span data-stu-id="0111e-384">Builds this project, building the given targets and using the given loggers.</span></span></summary>
        <returns><span data-ttu-id="0111e-385"><see langword="true" /> w przypadku powodzenia; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="0111e-385"><see langword="true" /> on success; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0111e-386">Aby ustawić lub pobrać wirtualne elementy na potrzeby kompilacji, należy jawnie sklonować wystąpienie projektu i dokonać jego kompilacji.</span><span class="sxs-lookup"><span data-stu-id="0111e-386">To set or get virtual items for build purposes, clone a project instance explicitly and build that.</span></span> <span data-ttu-id="0111e-387">Metoda ta nie powoduje modyfikacji obiektu projektu.</span><span class="sxs-lookup"><span data-stu-id="0111e-387">This method does not modify the project object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Build">
      <MemberSignature Language="C#" Value="public bool Build (string target, System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Framework.ILogger&gt; loggers, System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Logging.ForwardingLoggerRecord&gt; remoteLoggers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Build(string target, class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Build.Framework.ILogger&gt; loggers, class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Build.Logging.ForwardingLoggerRecord&gt; remoteLoggers) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.Build(System.String,System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger},System.Collections.Generic.IEnumerable{Microsoft.Build.Logging.ForwardingLoggerRecord})" />
      <MemberSignature Language="VB.NET" Value="Public Function Build (target As String, loggers As IEnumerable(Of ILogger), remoteLoggers As IEnumerable(Of ForwardingLoggerRecord)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Build(System::String ^ target, System::Collections::Generic::IEnumerable&lt;Microsoft::Build::Framework::ILogger ^&gt; ^ loggers, System::Collections::Generic::IEnumerable&lt;Microsoft::Build::Logging::ForwardingLoggerRecord ^&gt; ^ remoteLoggers);" />
      <MemberSignature Language="F#" Value="member this.Build : string * seq&lt;Microsoft.Build.Framework.ILogger&gt; * seq&lt;Microsoft.Build.Logging.ForwardingLoggerRecord&gt; -&gt; bool" Usage="project.Build (target, loggers, remoteLoggers)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.String" />
        <Parameter Name="loggers" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Framework.ILogger&gt;" />
        <Parameter Name="remoteLoggers" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Logging.ForwardingLoggerRecord&gt;" />
      </Parameters>
      <Docs>
        <param name="target"><span data-ttu-id="0111e-388">Cel, który ma zostać utworzony.</span><span class="sxs-lookup"><span data-stu-id="0111e-388">The target to be built.</span></span></param>
        <param name="loggers"><span data-ttu-id="0111e-389">Rejestratory, które mają być używane podczas kompilacji.</span><span class="sxs-lookup"><span data-stu-id="0111e-389">The loggers to be used during the build.</span></span></param>
        <param name="remoteLoggers"><span data-ttu-id="0111e-390">Zdalne rejestratory, które mają być używane podczas kompilacji.</span><span class="sxs-lookup"><span data-stu-id="0111e-390">The remote loggers to be used during the build.</span></span></param>
        <summary><span data-ttu-id="0111e-391">Tworzy tego projektu z danym celem tworzenia i przy użyciu danego rejestratorów i zdalne rejestratory.</span><span class="sxs-lookup"><span data-stu-id="0111e-391">Builds this project, building the given target and using the given loggers and remote loggers.</span></span></summary>
        <returns><span data-ttu-id="0111e-392"><see langword="true" /> w przypadku powodzenia; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="0111e-392"><see langword="true" /> on success; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0111e-393">Aby ustawić lub pobrać wirtualne elementy na potrzeby kompilacji, należy jawnie sklonować wystąpienie projektu i dokonać jego kompilacji.</span><span class="sxs-lookup"><span data-stu-id="0111e-393">To set or get virtual items for build purposes, clone a project instance explicitly and build that.</span></span> <span data-ttu-id="0111e-394">Metoda ta nie powoduje modyfikacji obiektu projektu.</span><span class="sxs-lookup"><span data-stu-id="0111e-394">This method does not modify the project object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Build">
      <MemberSignature Language="C#" Value="public bool Build (string[] targets, System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Framework.ILogger&gt; loggers, System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Logging.ForwardingLoggerRecord&gt; remoteLoggers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Build(string[] targets, class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Build.Framework.ILogger&gt; loggers, class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Build.Logging.ForwardingLoggerRecord&gt; remoteLoggers) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.Build(System.String[],System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger},System.Collections.Generic.IEnumerable{Microsoft.Build.Logging.ForwardingLoggerRecord})" />
      <MemberSignature Language="VB.NET" Value="Public Function Build (targets As String(), loggers As IEnumerable(Of ILogger), remoteLoggers As IEnumerable(Of ForwardingLoggerRecord)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Build(cli::array &lt;System::String ^&gt; ^ targets, System::Collections::Generic::IEnumerable&lt;Microsoft::Build::Framework::ILogger ^&gt; ^ loggers, System::Collections::Generic::IEnumerable&lt;Microsoft::Build::Logging::ForwardingLoggerRecord ^&gt; ^ remoteLoggers);" />
      <MemberSignature Language="F#" Value="member this.Build : string[] * seq&lt;Microsoft.Build.Framework.ILogger&gt; * seq&lt;Microsoft.Build.Logging.ForwardingLoggerRecord&gt; -&gt; bool" Usage="project.Build (targets, loggers, remoteLoggers)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targets" Type="System.String[]" />
        <Parameter Name="loggers" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Framework.ILogger&gt;" />
        <Parameter Name="remoteLoggers" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Logging.ForwardingLoggerRecord&gt;" />
      </Parameters>
      <Docs>
        <param name="targets"><span data-ttu-id="0111e-395">Cele, które mają być poddane kompilacji.</span><span class="sxs-lookup"><span data-stu-id="0111e-395">The targets to be built.</span></span></param>
        <param name="loggers"><span data-ttu-id="0111e-396">Rejestratory, które mają być używane podczas kompilacji.</span><span class="sxs-lookup"><span data-stu-id="0111e-396">The loggers to be used during the build.</span></span></param>
        <param name="remoteLoggers"><span data-ttu-id="0111e-397">Zdalne rejestratory, które mają być używane podczas kompilacji.</span><span class="sxs-lookup"><span data-stu-id="0111e-397">The remote loggers to be used during the build.</span></span></param>
        <summary><span data-ttu-id="0111e-398">Tworzy tworzenie wartościami docelowymi oraz korzystanie z danym rejestratorów i zdalne rejestratory tego projektu.</span><span class="sxs-lookup"><span data-stu-id="0111e-398">Builds this project, building the given targets and using the given loggers and remote loggers.</span></span></summary>
        <returns><span data-ttu-id="0111e-399"><see langword="true" /> w przypadku powodzenia; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="0111e-399"><see langword="true" /> on success; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0111e-400">Aby ustawić lub pobrać wirtualne elementy na potrzeby kompilacji, należy jawnie sklonować wystąpienie projektu i dokonać jego kompilacji.</span><span class="sxs-lookup"><span data-stu-id="0111e-400">To set or get virtual items for build purposes, clone a project instance explicitly and build that.</span></span> <span data-ttu-id="0111e-401">Metoda ta nie powoduje modyfikacji obiektu projektu.</span><span class="sxs-lookup"><span data-stu-id="0111e-401">This method does not modify the project object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ConditionedProperties">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IDictionary&lt;string,System.Collections.Generic.List&lt;string&gt;&gt; ConditionedProperties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IDictionary`2&lt;string, class System.Collections.Generic.List`1&lt;string&gt;&gt; ConditionedProperties" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.Project.ConditionedProperties" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ConditionedProperties As IDictionary(Of String, List(Of String))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IDictionary&lt;System::String ^, System::Collections::Generic::List&lt;System::String ^&gt; ^&gt; ^ ConditionedProperties { System::Collections::Generic::IDictionary&lt;System::String ^, System::Collections::Generic::List&lt;System::String ^&gt; ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ConditionedProperties : System.Collections.Generic.IDictionary&lt;string, System.Collections.Generic.List&lt;string&gt;&gt;" Usage="Microsoft.Build.Evaluation.Project.ConditionedProperties" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.String,System.Collections.Generic.List&lt;System.String&gt;&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0111e-402">Pobiera kolekcję właściwości możliwe wartości dla właściwości używane do oceny warunków znalezione na właściwości, właściwość grupy, importuje i kiedy firmy.</span><span class="sxs-lookup"><span data-stu-id="0111e-402">Gets a collection of possible property values for properties used to evaluate conditions found on properties, property groups, imports, and whens.</span></span></summary>
        <value><span data-ttu-id="0111e-403">Zbiór wartości możliwych właściwości dla właściwości używane do oceny warunków znalezione na właściwości, właściwość grupy, importuje i kiedy firmy.</span><span class="sxs-lookup"><span data-stu-id="0111e-403">A collection of possible property values for properties used to evaluate conditions found on properties, property groups, imports, and whens.</span></span> <span data-ttu-id="0111e-404">Kolekcja jest w formie kanonicznej.</span><span class="sxs-lookup"><span data-stu-id="0111e-404">The collection is in canonical form.</span></span> <span data-ttu-id="0111e-405">Nazwa wpisu jest nazwa właściwości, które ma zostać obliczone, i wartość znajduje się lista możliwych wartości.</span><span class="sxs-lookup"><span data-stu-id="0111e-405">The name of the entry is the name of the property to be evaluated, and the value is a list of possible property values.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0111e-406">Na przykład, jeśli następujące warunki znajdował się na właściwości w projekcie: Condition="'$(Configuration)&#124;$(platformy)" == "debugowania&#124;x 86'" Condition="'$(Configuration)" == "Release" "tabela będzie wypełniana {"Konfiguracja", {"Debug","Wersja"}} {"platforma", {"x86"}} tej kolekcji jest używany przez wizualizację Studio pomagające ustalić konfiguracje zdefiniowane w projekcie</span><span class="sxs-lookup"><span data-stu-id="0111e-406">For example, if the following conditions existed on properties in a project: Condition="'$(Configuration)&#124;$(Platform)' == 'Debug&#124;x86'" Condition="'$(Configuration)' == 'Release'" the table would be populated with { "Configuration", { "Debug", "Release" }} { "Platform", { "x86" }} This collection is used by Visual Studio to determine the configurations defined in the project</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateProjectInstance">
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="0111e-407">Tworzy wystąpienie projektu na podstawie tego projektu, ale w całkowitym odłączeniu od niego.</span><span class="sxs-lookup"><span data-stu-id="0111e-407">Creates a project instance based on this project, but completely disconnected from it.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0111e-408">Może służyć do niezależnego tworzenia kompilacji.</span><span class="sxs-lookup"><span data-stu-id="0111e-408">Can be used to build independently.</span></span> <span data-ttu-id="0111e-409">Oryginalny projekt jest oceniany przed utworzeniem wystąpienia (jeśli jest to konieczne), tak aby oryginalny projekt był oznaczony jako niemodyfikowany.</span><span class="sxs-lookup"><span data-stu-id="0111e-409">The original project is evaluated before creating the instance, if necessary, so that the original project is marked as unmodified.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateProjectInstance">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Execution.ProjectInstance CreateProjectInstance ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Build.Execution.ProjectInstance CreateProjectInstance() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.CreateProjectInstance" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateProjectInstance () As ProjectInstance" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Build::Execution::ProjectInstance ^ CreateProjectInstance();" />
      <MemberSignature Language="F#" Value="member this.CreateProjectInstance : unit -&gt; Microsoft.Build.Execution.ProjectInstance" Usage="project.CreateProjectInstance " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Execution.ProjectInstance</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="0111e-410">Tworzy wystąpienie projektu na podstawie tego projektu, ale w całkowitym odłączeniu od niego.</span><span class="sxs-lookup"><span data-stu-id="0111e-410">Creates a project instance based on this project, but completely disconnected from it.</span></span></summary>
        <returns><span data-ttu-id="0111e-411">Wystąpienie projektu.</span><span class="sxs-lookup"><span data-stu-id="0111e-411">The project instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0111e-412">Może służyć do niezależnego tworzenia kompilacji.</span><span class="sxs-lookup"><span data-stu-id="0111e-412">Can be used to build independently.</span></span> <span data-ttu-id="0111e-413">Oryginalny projekt jest oceniany przed utworzeniem wystąpienia (jeśli jest to konieczne), tak aby oryginalny projekt był oznaczony jako niemodyfikowany.</span><span class="sxs-lookup"><span data-stu-id="0111e-413">The original project is evaluated before creating the instance, if necessary, so that the original project is marked as unmodified.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateProjectInstance">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Execution.ProjectInstance CreateProjectInstance (Microsoft.Build.Execution.ProjectInstanceSettings settings);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Build.Execution.ProjectInstance CreateProjectInstance(valuetype Microsoft.Build.Execution.ProjectInstanceSettings settings) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.CreateProjectInstance(Microsoft.Build.Execution.ProjectInstanceSettings)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateProjectInstance (settings As ProjectInstanceSettings) As ProjectInstance" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Build::Execution::ProjectInstance ^ CreateProjectInstance(Microsoft::Build::Execution::ProjectInstanceSettings settings);" />
      <MemberSignature Language="F#" Value="member this.CreateProjectInstance : Microsoft.Build.Execution.ProjectInstanceSettings -&gt; Microsoft.Build.Execution.ProjectInstance" Usage="project.CreateProjectInstance settings" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Execution.ProjectInstance</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="settings" Type="Microsoft.Build.Execution.ProjectInstanceSettings" />
      </Parameters>
      <Docs>
        <param name="settings"><span data-ttu-id="0111e-414">Określa, czy wystąpienie utworzono projektu jest niemodyfikowalna i czy zawiera on odnośnika tabeli, aby zwiększyć wydajność.</span><span class="sxs-lookup"><span data-stu-id="0111e-414">Determines whether created project instance is immutable and whether it contains a look up table to improve performance.</span></span></param>
        <summary><span data-ttu-id="0111e-415">Tworzy wystąpienie projektu na podstawie tego projektu, ale w całkowitym odłączeniu od niego.</span><span class="sxs-lookup"><span data-stu-id="0111e-415">Creates a project instance based on this project, but completely disconnected from it.</span></span></summary>
        <returns><span data-ttu-id="0111e-416">Wystąpienie projektu.</span><span class="sxs-lookup"><span data-stu-id="0111e-416">The project instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0111e-417">Może służyć do niezależnego tworzenia kompilacji.</span><span class="sxs-lookup"><span data-stu-id="0111e-417">Can be used to build independently.</span></span> <span data-ttu-id="0111e-418">Oryginalny projekt jest oceniany przed utworzeniem wystąpienia (jeśli jest to konieczne), tak aby oryginalny projekt był oznaczony jako niemodyfikowany.</span><span class="sxs-lookup"><span data-stu-id="0111e-418">The original project is evaluated before creating the instance, if necessary, so that the original project is marked as unmodified.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DirectoryPath">
      <MemberSignature Language="C#" Value="public string DirectoryPath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DirectoryPath" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.Project.DirectoryPath" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DirectoryPath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DirectoryPath { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DirectoryPath : string" Usage="Microsoft.Build.Evaluation.Project.DirectoryPath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0111e-419">Pobiera katalog główny dla tego projektu.</span><span class="sxs-lookup"><span data-stu-id="0111e-419">Gets the root directory for this project.</span></span></summary>
        <value><span data-ttu-id="0111e-420">Katalog główny dla tego projektu.</span><span class="sxs-lookup"><span data-stu-id="0111e-420">The root directory for this project.</span></span> <span data-ttu-id="0111e-421">Katalog główny nigdy nie jest równa null; projekty w pamięci użyj katalogu bieżącego w czasie ładowania projektu.</span><span class="sxs-lookup"><span data-stu-id="0111e-421">The root directory is never null; in-memory projects use the current directory at the time of project load.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisableMarkDirty">
      <MemberSignature Language="C#" Value="public bool DisableMarkDirty { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DisableMarkDirty" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.Project.DisableMarkDirty" />
      <MemberSignature Language="VB.NET" Value="Public Property DisableMarkDirty As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DisableMarkDirty { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.DisableMarkDirty : bool with get, set" Usage="Microsoft.Build.Evaluation.Project.DisableMarkDirty" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0111e-422">Pobiera lub ustawia wartość wskazującą, czy <see cref="M:Microsoft.Build.Evaluation.Project.MarkDirty" /> jest tymczasowo wyłączone.</span><span class="sxs-lookup"><span data-stu-id="0111e-422">Gets or sets a value that indicates whether <see cref="M:Microsoft.Build.Evaluation.Project.MarkDirty" /> is temporarily disabled.</span></span> <span data-ttu-id="0111e-423">Pozwala to na przykład właściwością globalną, należy ustawić bez projektu wprowadzenie oznaczona jako zanieczyszczona ponownie oceniona w konsekwencji.</span><span class="sxs-lookup"><span data-stu-id="0111e-423">This allows, for example, a global property to be set without the project getting marked dirty for reevaluation as a consequence.</span></span></summary>
        <value><span data-ttu-id="0111e-424"><see langword="true" /> Aby wskazać <see langword="MarkDirty" /> jest tymczasowo wyłączone; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="0111e-424"><see langword="true" /> to indicate <see langword="MarkDirty" /> is temporarily disabled; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EvaluationCounter">
      <MemberSignature Language="C#" Value="public int EvaluationCounter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 EvaluationCounter" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.Project.EvaluationCounter" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EvaluationCounter As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int EvaluationCounter { int get(); };" />
      <MemberSignature Language="F#" Value="member this.EvaluationCounter : int" Usage="Microsoft.Build.Evaluation.Project.EvaluationCounter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0111e-425">Pobiera numer, który jest zwiększana za każdym razem, gdy ten projekt jest ponownie oceniane.</span><span class="sxs-lookup"><span data-stu-id="0111e-425">Gets a number that is incremented every time that project is re-evaluated.</span></span></summary>
        <value><span data-ttu-id="0111e-426">Zwiększona wartość.</span><span class="sxs-lookup"><span data-stu-id="0111e-426">The incremented value.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0111e-427">Ta wartość powinna być porównana z poprzednimi wartościami, aby zobaczyć, jeśli projekt został ponownie ocenione.</span><span class="sxs-lookup"><span data-stu-id="0111e-427">This value should be compared with previous values to see if the project has been re-evaluated.</span></span> <span data-ttu-id="0111e-428">Nie można stosować do określenia, ile razy projektu została ponownie oceniane, ponieważ może on być zwiększony o więcej niż jeden dla danego ponownej oceny.</span><span class="sxs-lookup"><span data-stu-id="0111e-428">It should not be used to determine how many times the project has been re-evaluated since it may be incremented by more than one for a given re-evaluation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExpandString">
      <MemberSignature Language="C#" Value="public string ExpandString (string unexpandedValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ExpandString(string unexpandedValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.ExpandString(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function ExpandString (unexpandedValue As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ExpandString(System::String ^ unexpandedValue);" />
      <MemberSignature Language="F#" Value="member this.ExpandString : string -&gt; string" Usage="project.ExpandString unexpandedValue" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="unexpandedValue" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="unexpandedValue"><span data-ttu-id="0111e-429">Ciąg, który ma zostać obliczone.</span><span class="sxs-lookup"><span data-stu-id="0111e-429">The string to be evaluated.</span></span></param>
        <summary><span data-ttu-id="0111e-430">Oblicza podany ciąg, rozwijając elementów i właściwości.</span><span class="sxs-lookup"><span data-stu-id="0111e-430">Evaluates the given string by expanding items and properties.</span></span> <span data-ttu-id="0111e-431">Ten ciąg jest oceniane tak, jakby zostały znalezione na końcu pliku projektu.</span><span class="sxs-lookup"><span data-stu-id="0111e-431">The string is evaluated as if it were found at the very end of the project file.</span></span></summary>
        <returns><span data-ttu-id="0111e-432">Oceniono ciąg.</span><span class="sxs-lookup"><span data-stu-id="0111e-432">The evaluated string.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0111e-433">Ta metoda może służyć podczas oceny optymalnych jest wystarczająca.</span><span class="sxs-lookup"><span data-stu-id="0111e-433">This method can be used when best-effort evaluation is sufficient.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FullPath">
      <MemberSignature Language="C#" Value="public string FullPath { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FullPath" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.Project.FullPath" />
      <MemberSignature Language="VB.NET" Value="Public Property FullPath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ FullPath { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.FullPath : string with get, set" Usage="Microsoft.Build.Evaluation.Project.FullPath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0111e-434">Pobiera lub ustawia pełną ścieżkę do pliku źródłowego projektu.</span><span class="sxs-lookup"><span data-stu-id="0111e-434">Gets or sets the full path to the project source file.</span></span></summary>
        <value><span data-ttu-id="0111e-435">Pełna ścieżka do pliku źródłowego projektu lub ciąg pusty, jeśli projekt nie został załadowany z dysku.</span><span class="sxs-lookup"><span data-stu-id="0111e-435">The full path to the project source file, or an empty string if the project was not loaded from disk.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0111e-436">Ustawienie tej właściwości dla projektu w kolekcji projektów zmienia nazwę projektu.</span><span class="sxs-lookup"><span data-stu-id="0111e-436">Setting this property on a project in a project collection renames the project.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetEvaluatedItemIncludeEscaped">
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="0111e-437">Oceniane, poprzedzone znakiem zmiany znaczenia wartość atrybutu Include udostępnionych elementów.</span><span class="sxs-lookup"><span data-stu-id="0111e-437">Gets evaluated, escaped value of the Include attribute of the provided items.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetEvaluatedItemIncludeEscaped">
      <MemberSignature Language="C#" Value="public static string GetEvaluatedItemIncludeEscaped (Microsoft.Build.Evaluation.ProjectItem item);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetEvaluatedItemIncludeEscaped(class Microsoft.Build.Evaluation.ProjectItem item) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.GetEvaluatedItemIncludeEscaped(Microsoft.Build.Evaluation.ProjectItem)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetEvaluatedItemIncludeEscaped (item As ProjectItem) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetEvaluatedItemIncludeEscaped(Microsoft::Build::Evaluation::ProjectItem ^ item);" />
      <MemberSignature Language="F#" Value="static member GetEvaluatedItemIncludeEscaped : Microsoft.Build.Evaluation.ProjectItem -&gt; string" Usage="Microsoft.Build.Evaluation.Project.GetEvaluatedItemIncludeEscaped item" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="Microsoft.Build.Evaluation.ProjectItem" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="0111e-438">Element, który ma zostać obliczone i poprzedzone znakiem zmiany znaczenia.</span><span class="sxs-lookup"><span data-stu-id="0111e-438">The item to be evaluated and escaped.</span></span></param>
        <summary><span data-ttu-id="0111e-439">Oceniane, poprzedzone znakiem zmiany znaczenia wartość atrybutu Include udostępnionych elementów.</span><span class="sxs-lookup"><span data-stu-id="0111e-439">Gets evaluated, escaped value of the Include attribute of the provided items.</span></span></summary>
        <returns><span data-ttu-id="0111e-440">Oceniono, poprzedzone znakiem zmiany znaczenia wartość atrybutu Include udostępnionych elementów.</span><span class="sxs-lookup"><span data-stu-id="0111e-440">The evaluated, escaped value of the Include attribute of the provided items.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEvaluatedItemIncludeEscaped">
      <MemberSignature Language="C#" Value="public static string GetEvaluatedItemIncludeEscaped (Microsoft.Build.Evaluation.ProjectItemDefinition item);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetEvaluatedItemIncludeEscaped(class Microsoft.Build.Evaluation.ProjectItemDefinition item) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.GetEvaluatedItemIncludeEscaped(Microsoft.Build.Evaluation.ProjectItemDefinition)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetEvaluatedItemIncludeEscaped (item As ProjectItemDefinition) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetEvaluatedItemIncludeEscaped(Microsoft::Build::Evaluation::ProjectItemDefinition ^ item);" />
      <MemberSignature Language="F#" Value="static member GetEvaluatedItemIncludeEscaped : Microsoft.Build.Evaluation.ProjectItemDefinition -&gt; string" Usage="Microsoft.Build.Evaluation.Project.GetEvaluatedItemIncludeEscaped item" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="Microsoft.Build.Evaluation.ProjectItemDefinition" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="0111e-441">Definicja elementu, który ma zostać obliczone i poprzedzone znakiem zmiany znaczenia.</span><span class="sxs-lookup"><span data-stu-id="0111e-441">The item definition to be evaluated and escaped.</span></span></param>
        <summary><span data-ttu-id="0111e-442">Pobiera oszacowaną wartość wyjścia atrybutu Uwzględnij za pomocą podanej definicji elementu.</span><span class="sxs-lookup"><span data-stu-id="0111e-442">Gets the evaluated, escaped value of the Include attribute of the provided item definition.</span></span></summary>
        <returns><span data-ttu-id="0111e-443">Wartość atrybutu Include.</span><span class="sxs-lookup"><span data-stu-id="0111e-443">The value of the Include attribute.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetItems">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.ICollection&lt;Microsoft.Build.Evaluation.ProjectItem&gt; GetItems (string itemType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.ICollection`1&lt;class Microsoft.Build.Evaluation.ProjectItem&gt; GetItems(string itemType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.GetItems(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetItems (itemType As String) As ICollection(Of ProjectItem)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::ICollection&lt;Microsoft::Build::Evaluation::ProjectItem ^&gt; ^ GetItems(System::String ^ itemType);" />
      <MemberSignature Language="F#" Value="member this.GetItems : string -&gt; System.Collections.Generic.ICollection&lt;Microsoft.Build.Evaluation.ProjectItem&gt;" Usage="project.GetItems itemType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;Microsoft.Build.Evaluation.ProjectItem&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="itemType" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="itemType"><span data-ttu-id="0111e-444">Typ elementu do pobrania.</span><span class="sxs-lookup"><span data-stu-id="0111e-444">The item type to be retrieved.</span></span></param>
        <summary><span data-ttu-id="0111e-445">Pobiera wszystkie elementy w projekcie typu danego elementu.</span><span class="sxs-lookup"><span data-stu-id="0111e-445">Gets all the items in the project of the given item type.</span></span> <span data-ttu-id="0111e-446">Jeśli żaden nie jest, zwraca pustą listę.</span><span class="sxs-lookup"><span data-stu-id="0111e-446">If there are none, returns an empty list.</span></span> <span data-ttu-id="0111e-447">Aby zmodyfikować elementy w tym projekcie, wykonaj AddItem lub RemoveItem.</span><span class="sxs-lookup"><span data-stu-id="0111e-447">Use AddItem or RemoveItem to modify items in this project.</span></span></summary>
        <returns><span data-ttu-id="0111e-448">Wszystkie elementy w projekcie typu danego elementu, lub pusta lista, jeśli brak elementów o nazwie danego elementu.</span><span class="sxs-lookup"><span data-stu-id="0111e-448">All the items in the project of the given item type, or an empty list if there are no items with the given item name.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0111e-449">Aby zmodyfikować elementy w tym projekcie, wykonaj AddItem lub RemoveItem.</span><span class="sxs-lookup"><span data-stu-id="0111e-449">Use AddItem or RemoveItem to modify items in this project.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetItemsByEvaluatedInclude">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.ICollection&lt;Microsoft.Build.Evaluation.ProjectItem&gt; GetItemsByEvaluatedInclude (string evaluatedInclude);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.ICollection`1&lt;class Microsoft.Build.Evaluation.ProjectItem&gt; GetItemsByEvaluatedInclude(string evaluatedInclude) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.GetItemsByEvaluatedInclude(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetItemsByEvaluatedInclude (evaluatedInclude As String) As ICollection(Of ProjectItem)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::ICollection&lt;Microsoft::Build::Evaluation::ProjectItem ^&gt; ^ GetItemsByEvaluatedInclude(System::String ^ evaluatedInclude);" />
      <MemberSignature Language="F#" Value="member this.GetItemsByEvaluatedInclude : string -&gt; System.Collections.Generic.ICollection&lt;Microsoft.Build.Evaluation.ProjectItem&gt;" Usage="project.GetItemsByEvaluatedInclude evaluatedInclude" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;Microsoft.Build.Evaluation.ProjectItem&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="evaluatedInclude" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="evaluatedInclude"><span data-ttu-id="0111e-450">Oceniono atrybutu Include.</span><span class="sxs-lookup"><span data-stu-id="0111e-450">The evaluated Include attribute.</span></span></param>
        <summary><span data-ttu-id="0111e-451">Pobiera wszystkie elementy, które mają danego ocenianą atrybutu Include.</span><span class="sxs-lookup"><span data-stu-id="0111e-451">Gets all items that have the given evaluated Include attribute.</span></span></summary>
        <returns><span data-ttu-id="0111e-452">Wszystkie elementy, które mają ocenianą nadano mu atrybut Include.</span><span class="sxs-lookup"><span data-stu-id="0111e-452">All items that have the given evaluated Include attribute.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0111e-453">Na przykład ta metoda może zwrócić wszystkie elementy, które zostały ocenione atrybutu Include "component.cpp".</span><span class="sxs-lookup"><span data-stu-id="0111e-453">For example, this method might return all items that have the evaluated Include attribute "component.cpp".</span></span> <span data-ttu-id="0111e-454">Zazwyczaj zero lub jeden elementy są zwracane.</span><span class="sxs-lookup"><span data-stu-id="0111e-454">Typically zero or one items are returned.</span></span> <span data-ttu-id="0111e-455">Jednak może być wielu elementów z tej samej ścieżce i typami innego elementu, lub nawet z tymi samymi typami elementu.</span><span class="sxs-lookup"><span data-stu-id="0111e-455">However, there may be multiple items with the same path and different item types, or even with the same item types.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetItemsIgnoringCondition">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.ICollection&lt;Microsoft.Build.Evaluation.ProjectItem&gt; GetItemsIgnoringCondition (string itemType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.ICollection`1&lt;class Microsoft.Build.Evaluation.ProjectItem&gt; GetItemsIgnoringCondition(string itemType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.GetItemsIgnoringCondition(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetItemsIgnoringCondition (itemType As String) As ICollection(Of ProjectItem)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::ICollection&lt;Microsoft::Build::Evaluation::ProjectItem ^&gt; ^ GetItemsIgnoringCondition(System::String ^ itemType);" />
      <MemberSignature Language="F#" Value="member this.GetItemsIgnoringCondition : string -&gt; System.Collections.Generic.ICollection&lt;Microsoft.Build.Evaluation.ProjectItem&gt;" Usage="project.GetItemsIgnoringCondition itemType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;Microsoft.Build.Evaluation.ProjectItem&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="itemType" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="itemType"><span data-ttu-id="0111e-456">Typ elementu do pobrania.</span><span class="sxs-lookup"><span data-stu-id="0111e-456">The item type to be retrieved.</span></span></param>
        <summary><span data-ttu-id="0111e-457">Pobiera wszystkie elementy w projekcie danego typu, czy ich atrybutu warunek jest spełniony.</span><span class="sxs-lookup"><span data-stu-id="0111e-457">Gets all the items in the project of the given type, whether or not their Condition attribute evaluates to true.</span></span> <span data-ttu-id="0111e-458">Jest to lista tylko do odczytu: umożliwia modyfikowanie elementów w tym projekcie AddItem lub RemoveItem.</span><span class="sxs-lookup"><span data-stu-id="0111e-458">This is a read-only list: use AddItem or RemoveItem to modify items in this project.</span></span></summary>
        <returns><span data-ttu-id="0111e-459">Wszystkie elementy w projekcie danego typu, czy ich atrybutu warunek jest spełniony.</span><span class="sxs-lookup"><span data-stu-id="0111e-459">All the items in the project of the given type, whether or not their Condition attribute evaluates to true.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0111e-460">To jest lista tylko do odczytu.</span><span class="sxs-lookup"><span data-stu-id="0111e-460">This is a read-only list.</span></span> <span data-ttu-id="0111e-461">Aby zmodyfikować elementy w tym projekcie, wykonaj AddItem lub RemoveItem.</span><span class="sxs-lookup"><span data-stu-id="0111e-461">Use AddItem or RemoveItem to modify items in this project.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetLogicalProject">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Construction.ProjectElement&gt; GetLogicalProject ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Build.Construction.ProjectElement&gt; GetLogicalProject() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.GetLogicalProject" />
      <MemberSignature Language="VB.NET" Value="Public Function GetLogicalProject () As IEnumerable(Of ProjectElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;Microsoft::Build::Construction::ProjectElement ^&gt; ^ GetLogicalProject();" />
      <MemberSignature Language="F#" Value="member this.GetLogicalProject : unit -&gt; seq&lt;Microsoft.Build.Construction.ProjectElement&gt;" Usage="project.GetLogicalProject " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Construction.ProjectElement&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="0111e-462">Pobiera moduł wyliczający za pośrednictwem wszystkich elementów w "logiczne projektu".</span><span class="sxs-lookup"><span data-stu-id="0111e-462">Gets an enumerator over all the elements in the "logical project".</span></span> <span data-ttu-id="0111e-463">Projekt logiczny jest zdefiniowany jako nieznanym projektu uzyskany z pojedynczy plik MSBuild, który jest wynikiem ze śródwierszowaniem tekst wszystkie Importy oryginalnego pliku manifestu projektu programu MSBuild.</span><span class="sxs-lookup"><span data-stu-id="0111e-463">The logical project is defined as the unevaluated project obtained from the single MSBuild file that is the result of inlining the text of all imports of the original MSBuild project manifest file.</span></span></summary>
        <returns><span data-ttu-id="0111e-464">Moduł wyliczający za pośrednictwem wszystkich elementów w "logiczne projektu".</span><span class="sxs-lookup"><span data-stu-id="0111e-464">An enumerator over all the elements in the "logical project".</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0111e-465">Projekt logiczny jest zdefiniowany w nieznanym projektu uzyskany w pojedynczy plik MSBuild, który jest wynikiem zawierające wbudowaną tekst wszystkie Importy oryginalnego pliku manifestu projektu programu MSBuild.</span><span class="sxs-lookup"><span data-stu-id="0111e-465">The logical project is defined as the unevaluated project obtained from the single MSBuild file that is the result of including inline the text of all imports of the original MSBuild project manifest file.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetMetadataValueEscaped">
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="0111e-466">Pobiera wartość wyjścia metadanej za pomocą podanej nazwy na podanym elemencie.</span><span class="sxs-lookup"><span data-stu-id="0111e-466">Gets the escaped value of the metadatum with the provided name on the provided item.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetMetadataValueEscaped">
      <MemberSignature Language="C#" Value="public static string GetMetadataValueEscaped (Microsoft.Build.Evaluation.ProjectMetadata metadatum);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetMetadataValueEscaped(class Microsoft.Build.Evaluation.ProjectMetadata metadatum) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.GetMetadataValueEscaped(Microsoft.Build.Evaluation.ProjectMetadata)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetMetadataValueEscaped (metadatum As ProjectMetadata) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetMetadataValueEscaped(Microsoft::Build::Evaluation::ProjectMetadata ^ metadatum);" />
      <MemberSignature Language="F#" Value="static member GetMetadataValueEscaped : Microsoft.Build.Evaluation.ProjectMetadata -&gt; string" Usage="Microsoft.Build.Evaluation.Project.GetMetadataValueEscaped metadatum" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="metadatum" Type="Microsoft.Build.Evaluation.ProjectMetadata" />
      </Parameters>
      <Docs>
        <param name="metadatum"><span data-ttu-id="0111e-467">Wyjścia metadanej za konieczne można wyjściowym.</span><span class="sxs-lookup"><span data-stu-id="0111e-467">The metadatum to be escaped.</span></span></param>
        <summary><span data-ttu-id="0111e-468">Pobiera wartość wyjścia metadanej za podana.</span><span class="sxs-lookup"><span data-stu-id="0111e-468">Gets the escaped value of the provided metadatum.</span></span></summary>
        <returns><span data-ttu-id="0111e-469">Wartość podana wyjścia metadanej za.</span><span class="sxs-lookup"><span data-stu-id="0111e-469">The escaped value of the provided metadatum.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMetadataValueEscaped">
      <MemberSignature Language="C#" Value="public static string GetMetadataValueEscaped (Microsoft.Build.Evaluation.ProjectItem item, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetMetadataValueEscaped(class Microsoft.Build.Evaluation.ProjectItem item, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.GetMetadataValueEscaped(Microsoft.Build.Evaluation.ProjectItem,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetMetadataValueEscaped (item As ProjectItem, name As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetMetadataValueEscaped(Microsoft::Build::Evaluation::ProjectItem ^ item, System::String ^ name);" />
      <MemberSignature Language="F#" Value="static member GetMetadataValueEscaped : Microsoft.Build.Evaluation.ProjectItem * string -&gt; string" Usage="Microsoft.Build.Evaluation.Project.GetMetadataValueEscaped (item, name)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="Microsoft.Build.Evaluation.ProjectItem" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="0111e-470">Element, którego metadanych jest konieczne można wyjściowym.</span><span class="sxs-lookup"><span data-stu-id="0111e-470">The item whose metadata is to be escaped.</span></span></param>
        <param name="name"><span data-ttu-id="0111e-471">Nazwa metadanych konieczne można wyjściowym.</span><span class="sxs-lookup"><span data-stu-id="0111e-471">The name of the metadata to be escaped.</span></span></param>
        <summary><span data-ttu-id="0111e-472">Pobiera wartość wyjścia metadanej za pomocą podanej nazwy na podanym elemencie.</span><span class="sxs-lookup"><span data-stu-id="0111e-472">Gets the escaped value of the metadatum with the provided name on the provided item.</span></span></summary>
        <returns><span data-ttu-id="0111e-473">Wartość wyjścia metadanej za pomocą podanej nazwy na podanym elemencie.</span><span class="sxs-lookup"><span data-stu-id="0111e-473">The escaped value of the metadatum with the provided name on the provided item.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMetadataValueEscaped">
      <MemberSignature Language="C#" Value="public static string GetMetadataValueEscaped (Microsoft.Build.Evaluation.ProjectItemDefinition item, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetMetadataValueEscaped(class Microsoft.Build.Evaluation.ProjectItemDefinition item, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.GetMetadataValueEscaped(Microsoft.Build.Evaluation.ProjectItemDefinition,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetMetadataValueEscaped (item As ProjectItemDefinition, name As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetMetadataValueEscaped(Microsoft::Build::Evaluation::ProjectItemDefinition ^ item, System::String ^ name);" />
      <MemberSignature Language="F#" Value="static member GetMetadataValueEscaped : Microsoft.Build.Evaluation.ProjectItemDefinition * string -&gt; string" Usage="Microsoft.Build.Evaluation.Project.GetMetadataValueEscaped (item, name)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="Microsoft.Build.Evaluation.ProjectItemDefinition" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="0111e-474">Definicja elementu, którego metadanych jest konieczne można wyjściowym.</span><span class="sxs-lookup"><span data-stu-id="0111e-474">The item definition whose metadata is to be escaped.</span></span></param>
        <param name="name"><span data-ttu-id="0111e-475">Nazwa metadanych konieczne można wyjściowym.</span><span class="sxs-lookup"><span data-stu-id="0111e-475">The name of the metadata to be escaped.</span></span></param>
        <summary><span data-ttu-id="0111e-476">Pobiera wartość wyjścia metadanej za pomocą podanej nazwy podanej definicji elementu.</span><span class="sxs-lookup"><span data-stu-id="0111e-476">Gets the escaped value of the metadatum with the provided name on the provided item definition.</span></span></summary>
        <returns><span data-ttu-id="0111e-477">Wartość wyjścia metadanej za pomocą podanej nazwy na podanej definicji elementu.</span><span class="sxs-lookup"><span data-stu-id="0111e-477">The escaped value of the metadatum with the provided name on the provided item definition.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetProperty">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Evaluation.ProjectProperty GetProperty (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Build.Evaluation.ProjectProperty GetProperty(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.GetProperty(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetProperty (name As String) As ProjectProperty" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Build::Evaluation::ProjectProperty ^ GetProperty(System::String ^ name);" />
      <MemberSignature Language="F#" Value="member this.GetProperty : string -&gt; Microsoft.Build.Evaluation.ProjectProperty" Usage="project.GetProperty name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Evaluation.ProjectProperty</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="0111e-478">Nazwa właściwości do pobrania.</span><span class="sxs-lookup"><span data-stu-id="0111e-478">The name of the property to retrieve.</span></span></param>
        <summary><span data-ttu-id="0111e-479">Pobiera wszystkie właściwości w projekcie, który ma określoną nazwę.</span><span class="sxs-lookup"><span data-stu-id="0111e-479">Gets any property in the project that has the specified name.</span></span></summary>
        <returns><span data-ttu-id="0111e-480">Wszystkie właściwości w projekcie, który ma określoną nazwę lub <see langword="null" /> istnienia żadnej właściwości o takiej nazwie.</span><span class="sxs-lookup"><span data-stu-id="0111e-480">Any property in the project that has the specified name, or <see langword="null" /> if no property of that name exists.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPropertyValue">
      <MemberSignature Language="C#" Value="public string GetPropertyValue (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetPropertyValue(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.GetPropertyValue(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPropertyValue (name As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetPropertyValue(System::String ^ name);" />
      <MemberSignature Language="F#" Value="member this.GetPropertyValue : string -&gt; string" Usage="project.GetPropertyValue name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="0111e-481">Nazwa właściwości, których wartość jest pobierana.</span><span class="sxs-lookup"><span data-stu-id="0111e-481">The name of the property whose value is retrieved.</span></span></param>
        <summary><span data-ttu-id="0111e-482">Pobiera wartość danej właściwości, w tym projekcie.</span><span class="sxs-lookup"><span data-stu-id="0111e-482">Gets the value of the given property in this project.</span></span></summary>
        <returns><span data-ttu-id="0111e-483">Wartość danej właściwości tego projektu lub ciąg pusty, jeśli istnieje żadnej właściwości o takiej nazwie.</span><span class="sxs-lookup"><span data-stu-id="0111e-483">The value of the given property in this project, or an empty string if no property of that name exists.</span></span> <span data-ttu-id="0111e-484">Sekwencje unikowe są konwertowane przed zwróceniem ciągu.</span><span class="sxs-lookup"><span data-stu-id="0111e-484">Escape sequences are converted before returning the string.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0111e-485">Właściwość z wartością pustego ciągu i nie ma właściwości w ogóle nie różnią się między przez tę metodę.</span><span class="sxs-lookup"><span data-stu-id="0111e-485">A property with a value of empty string and no property at all are not distinguished between by this method.</span></span> <span data-ttu-id="0111e-486">Aby określić, jeśli właściwość jest ustawiona na wszystkich w projekcie, należy użyć GetProperty(nazwa).</span><span class="sxs-lookup"><span data-stu-id="0111e-486">To determine if a property is set at all in the project, use GetProperty(name).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPropertyValueEscaped">
      <MemberSignature Language="C#" Value="public static string GetPropertyValueEscaped (Microsoft.Build.Evaluation.ProjectProperty property);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetPropertyValueEscaped(class Microsoft.Build.Evaluation.ProjectProperty property) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.GetPropertyValueEscaped(Microsoft.Build.Evaluation.ProjectProperty)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetPropertyValueEscaped (property As ProjectProperty) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetPropertyValueEscaped(Microsoft::Build::Evaluation::ProjectProperty ^ property);" />
      <MemberSignature Language="F#" Value="static member GetPropertyValueEscaped : Microsoft.Build.Evaluation.ProjectProperty -&gt; string" Usage="Microsoft.Build.Evaluation.Project.GetPropertyValueEscaped property" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="Microsoft.Build.Evaluation.ProjectProperty" />
      </Parameters>
      <Docs>
        <param name="property"><span data-ttu-id="0111e-487">Właściwość konieczne można wyjściowym.</span><span class="sxs-lookup"><span data-stu-id="0111e-487">The property to be escaped.</span></span></param>
        <summary><span data-ttu-id="0111e-488">Pobiera wartość właściwości podana.</span><span class="sxs-lookup"><span data-stu-id="0111e-488">Gets the escaped value of the provided property.</span></span></summary>
        <returns><span data-ttu-id="0111e-489">Wartość właściwości podana.</span><span class="sxs-lookup"><span data-stu-id="0111e-489">The escaped value of the provided property.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GlobalProperties">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IDictionary&lt;string,string&gt; GlobalProperties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IDictionary`2&lt;string, string&gt; GlobalProperties" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.Project.GlobalProperties" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property GlobalProperties As IDictionary(Of String, String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ GlobalProperties { System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.GlobalProperties : System.Collections.Generic.IDictionary&lt;string, string&gt;" Usage="Microsoft.Build.Evaluation.Project.GlobalProperties" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0111e-490">Pobiera słownik globalnych właściwości używanych do oceny tego projektu.</span><span class="sxs-lookup"><span data-stu-id="0111e-490">Gets a dictionary of the global properties used for the evaluation of this project.</span></span></summary>
        <value><span data-ttu-id="0111e-491">Słownik właściwości globalne, używanych do oceny tego projektu.</span><span class="sxs-lookup"><span data-stu-id="0111e-491">A dictionary of the global properties used for the evaluation of this project.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0111e-492">To zgodni metody pobierającej, która przekłada się na tylko do odczytu IDictionary martwy\<string, string >.</span><span class="sxs-lookup"><span data-stu-id="0111e-492">This is the publicly exposed getter, that translates into a read-only dead IDictionary\<string, string>.</span></span>  
  
 <span data-ttu-id="0111e-493">Aby można było łatwo sprawdzić, kiedy firma Microsoft jest dirtied, ustawiania i usuwania globalne właściwości odbywa się za pomocą <xref:Microsoft.Build.Evaluation.Project.SetGlobalProperty%2A> i <xref:Microsoft.Build.Evaluation.Project.RemoveGlobalProperty%2A>.</span><span class="sxs-lookup"><span data-stu-id="0111e-493">In order to easily tell when we're dirtied, setting and removing global properties is done with <xref:Microsoft.Build.Evaluation.Project.SetGlobalProperty%2A> and <xref:Microsoft.Build.Evaluation.Project.RemoveGlobalProperty%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Imports">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;Microsoft.Build.Evaluation.ResolvedImport&gt; Imports { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;valuetype Microsoft.Build.Evaluation.ResolvedImport&gt; Imports" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.Project.Imports" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Imports As IList(Of ResolvedImport)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IList&lt;Microsoft::Build::Evaluation::ResolvedImport&gt; ^ Imports { System::Collections::Generic::IList&lt;Microsoft::Build::Evaluation::ResolvedImport&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Imports : System.Collections.Generic.IList&lt;Microsoft.Build.Evaluation.ResolvedImport&gt;" Usage="Microsoft.Build.Evaluation.Project.Imports" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Microsoft.Build.Evaluation.ResolvedImport&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0111e-494">Pobiera listę wszystkich plików, które przyczyniły się do oceny tego projektu.</span><span class="sxs-lookup"><span data-stu-id="0111e-494">Gets a list of all the files that contributed to the evaluation of this project.</span></span></summary>
        <value><span data-ttu-id="0111e-495">Lista wszystkich plików, które przyczyniły się do oceny tego projektu.</span><span class="sxs-lookup"><span data-stu-id="0111e-495">A list of all the files that contributed to the evaluation of this project.</span></span>  
  
<span data-ttu-id="0111e-496">Nazwa każdego elementu jest element Import, który spowodował plik do zaimportowania.</span><span class="sxs-lookup"><span data-stu-id="0111e-496">The name of each item is the Import element that caused the file to be imported.</span></span> <span data-ttu-id="0111e-497">Wartość każdego elementu jest głównym projektu zaimportowanego projektu.</span><span class="sxs-lookup"><span data-stu-id="0111e-497">The value of each item is the project root of the imported project.</span></span> <span data-ttu-id="0111e-498">Importowanie elementów, których atrybut warunek ocenione na wartość false nie są uwzględniane.</span><span class="sxs-lookup"><span data-stu-id="0111e-498">Import elements whose Condition attribute evaluated to false are not included.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0111e-499">Katalog główny projektu tego projektu nie jest włączony.</span><span class="sxs-lookup"><span data-stu-id="0111e-499">The project root of this project is not included.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ImportsIncludingDuplicates">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;Microsoft.Build.Evaluation.ResolvedImport&gt; ImportsIncludingDuplicates { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;valuetype Microsoft.Build.Evaluation.ResolvedImport&gt; ImportsIncludingDuplicates" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.Project.ImportsIncludingDuplicates" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ImportsIncludingDuplicates As IList(Of ResolvedImport)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IList&lt;Microsoft::Build::Evaluation::ResolvedImport&gt; ^ ImportsIncludingDuplicates { System::Collections::Generic::IList&lt;Microsoft::Build::Evaluation::ResolvedImport&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ImportsIncludingDuplicates : System.Collections.Generic.IList&lt;Microsoft.Build.Evaluation.ResolvedImport&gt;" Usage="Microsoft.Build.Evaluation.Project.ImportsIncludingDuplicates" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Microsoft.Build.Evaluation.ResolvedImport&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0111e-500">Pobiera listę zduplikowane Importy, jeśli import zaimportowano wiele razy.</span><span class="sxs-lookup"><span data-stu-id="0111e-500">Gets a list of duplicate imports if an import was imported multiple times.</span></span> <span data-ttu-id="0111e-501">Jednak tylko pierwszy import został użyty w wersji ewaluacyjnej.</span><span class="sxs-lookup"><span data-stu-id="0111e-501">However, only the first import was used in evaluation.</span></span></summary>
        <value><span data-ttu-id="0111e-502">Lista zduplikowane Importy.</span><span class="sxs-lookup"><span data-stu-id="0111e-502">A list of duplicate imports.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsBuildEnabled">
      <MemberSignature Language="C#" Value="public bool IsBuildEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsBuildEnabled" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.Project.IsBuildEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Property IsBuildEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsBuildEnabled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsBuildEnabled : bool with get, set" Usage="Microsoft.Build.Evaluation.Project.IsBuildEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0111e-503">Pobiera lub ustawia właściwość, która zaznacza, czy mogą być wbudowane elementy docelowe i zadania, które tego projektu.</span><span class="sxs-lookup"><span data-stu-id="0111e-503">Gets or sets a property that selects whether the targets and tasks of this project can be built.</span></span></summary>
        <value><span data-ttu-id="0111e-504"><see langword="true" /> Jeśli mogą być wbudowane w obiekty docelowe i zadania tego projektu; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="0111e-504"><see langword="true" /> if the targets and tasks of this project can be built; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0111e-505">Mogą być używane ze względów bezpieczeństwa.</span><span class="sxs-lookup"><span data-stu-id="0111e-505">Can be used for security purposes.</span></span> <span data-ttu-id="0111e-506">Domyślnie nowy projekt ma tego samego ustawienia IsBuildEnabled jako kolekcji projektów nadrzędnego, który go zawiera.</span><span class="sxs-lookup"><span data-stu-id="0111e-506">By default, a new project has the same IsBuildEnabled setting as the parent project collection that contains it.</span></span> <span data-ttu-id="0111e-507">IsBuildEnabled ma wartość false, Metoda kompilacji w ramach tego projektu nie powiedzie się.</span><span class="sxs-lookup"><span data-stu-id="0111e-507">When IsBuildEnabled is false, the Build method on this project fails.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDirty">
      <MemberSignature Language="C#" Value="public bool IsDirty { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDirty" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.Project.IsDirty" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsDirty As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsDirty { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsDirty : bool" Usage="Microsoft.Build.Evaluation.Project.IsDirty" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0111e-508">Pobiera wartość wskazującą, czy ten projekt został zmieniony tak, aby należy go obliczyć ponownie.</span><span class="sxs-lookup"><span data-stu-id="0111e-508">Gets a value that indicates whether this project has been modified so that it must be reevaluated.</span></span></summary>
        <value><span data-ttu-id="0111e-509"><see langword="true" /> Jeśli ten projekt został zmodyfikowany tak, aby go musi zostać ponownie oceniane; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="0111e-509"><see langword="true" /> if this project has been modified so that it must be reevaluated; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0111e-510">Projekt zostanie zmodyfikowany i należy go obliczyć ponownie importowane podstawowego kodu źródłowego projektu, łącznie ze zmianami plików.</span><span class="sxs-lookup"><span data-stu-id="0111e-510">A project is modified and must be reevaluated when the underlying project source code, including changes to imported files.</span></span> <span data-ttu-id="0111e-511">Projekt jest modyfikowana również musi być ponownie oceniane tak, jeśli zmiany zestawu narzędzi projektu.</span><span class="sxs-lookup"><span data-stu-id="0111e-511">A project is also modified must be reevaluated if the project tool set changes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemDefinitions">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IDictionary&lt;string,Microsoft.Build.Evaluation.ProjectItemDefinition&gt; ItemDefinitions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IDictionary`2&lt;string, class Microsoft.Build.Evaluation.ProjectItemDefinition&gt; ItemDefinitions" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.Project.ItemDefinitions" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ItemDefinitions As IDictionary(Of String, ProjectItemDefinition)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IDictionary&lt;System::String ^, Microsoft::Build::Evaluation::ProjectItemDefinition ^&gt; ^ ItemDefinitions { System::Collections::Generic::IDictionary&lt;System::String ^, Microsoft::Build::Evaluation::ProjectItemDefinition ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ItemDefinitions : System.Collections.Generic.IDictionary&lt;string, Microsoft.Build.Evaluation.ProjectItemDefinition&gt;" Usage="Microsoft.Build.Evaluation.Project.ItemDefinitions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.String,Microsoft.Build.Evaluation.ProjectItemDefinition&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0111e-512">Pobiera słownik definicji elementów, w tym projekcie, z kluczami przez typ elementu.</span><span class="sxs-lookup"><span data-stu-id="0111e-512">Gets a dictionary of item definitions in this project, keyed by item type.</span></span></summary>
        <value><span data-ttu-id="0111e-513">Słownik definicji elementów, w tym projekcie, z kluczami przez typ elementu.</span><span class="sxs-lookup"><span data-stu-id="0111e-513">A dictionary of item definitions in this project, keyed by item type.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Items">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.ICollection&lt;Microsoft.Build.Evaluation.ProjectItem&gt; Items { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.ICollection`1&lt;class Microsoft.Build.Evaluation.ProjectItem&gt; Items" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.Project.Items" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Items As ICollection(Of ProjectItem)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::ICollection&lt;Microsoft::Build::Evaluation::ProjectItem ^&gt; ^ Items { System::Collections::Generic::ICollection&lt;Microsoft::Build::Evaluation::ProjectItem ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Items : System.Collections.Generic.ICollection&lt;Microsoft.Build.Evaluation.ProjectItem&gt;" Usage="Microsoft.Build.Evaluation.Project.Items" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;Microsoft.Build.Evaluation.ProjectItem&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0111e-514">Pobiera moduł wyliczający za pośrednictwem wszystkich elementów w tym projekcie, uporządkowanych w grupach, typów elementów.</span><span class="sxs-lookup"><span data-stu-id="0111e-514">Gets an enumerator over all items in this project, ordered within groups of item types.</span></span></summary>
        <value><span data-ttu-id="0111e-515">Moduł wyliczający za pośrednictwem wszystkich elementów w tym projekcie są uporządkowane w grupach, typów elementów.</span><span class="sxs-lookup"><span data-stu-id="0111e-515">An enumerator over all items in this project, ordered within groups of item types.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemsIgnoringCondition">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.ICollection&lt;Microsoft.Build.Evaluation.ProjectItem&gt; ItemsIgnoringCondition { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.ICollection`1&lt;class Microsoft.Build.Evaluation.ProjectItem&gt; ItemsIgnoringCondition" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.Project.ItemsIgnoringCondition" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ItemsIgnoringCondition As ICollection(Of ProjectItem)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::ICollection&lt;Microsoft::Build::Evaluation::ProjectItem ^&gt; ^ ItemsIgnoringCondition { System::Collections::Generic::ICollection&lt;Microsoft::Build::Evaluation::ProjectItem ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ItemsIgnoringCondition : System.Collections.Generic.ICollection&lt;Microsoft.Build.Evaluation.ProjectItem&gt;" Usage="Microsoft.Build.Evaluation.Project.ItemsIgnoringCondition" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;Microsoft.Build.Evaluation.ProjectItem&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0111e-516">Pobiera moduł wyliczający za pośrednictwem wszystkich elementów w tym projekcie, uporządkowanych w grupach, typów elementów.</span><span class="sxs-lookup"><span data-stu-id="0111e-516">Gets an enumerator over all items in this project, ordered within groups of item types.</span></span></summary>
        <value><span data-ttu-id="0111e-517">Moduł wyliczający za pośrednictwem wszystkich elementów w tym projekcie są uporządkowane w grupach typów elementów, w tym elementy, których warunki oceny false lub znajdują się w obrębie grupy elementów, które daje w wyniku której warunek <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="0111e-517">An enumerator over all items in this project, ordered within groups of item types, including items whose conditions evaluate to false, or are contained within item groups whose condition evaluates to <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0111e-518">Może służyć do wyświetlania wszystkich elementów, nawet jeśli nie są częścią kompilacji w bieżącej konfiguracji.</span><span class="sxs-lookup"><span data-stu-id="0111e-518">Can be used to display all items, even if they are not part of the build in the current configuration.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemTypes">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.ICollection&lt;string&gt; ItemTypes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.ICollection`1&lt;string&gt; ItemTypes" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.Project.ItemTypes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ItemTypes As ICollection(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::ICollection&lt;System::String ^&gt; ^ ItemTypes { System::Collections::Generic::ICollection&lt;System::String ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ItemTypes : System.Collections.Generic.ICollection&lt;string&gt;" Usage="Microsoft.Build.Evaluation.Project.ItemTypes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0111e-519">Pobiera moduł wyliczający za pośrednictwem wszystkich typów elementów, w tym projekcie.</span><span class="sxs-lookup"><span data-stu-id="0111e-519">Gets an enumerator over all item types in this project.</span></span></summary>
        <value><span data-ttu-id="0111e-520">Moduł wyliczający za pośrednictwem wszystkich typów elementów, w tym projekcie.</span><span class="sxs-lookup"><span data-stu-id="0111e-520">An enumerator over all item types in this project.</span></span> <span data-ttu-id="0111e-521">Jest to uporządkowana kolekcja.</span><span class="sxs-lookup"><span data-stu-id="0111e-521">This is an ordered collection.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MarkDirty">
      <MemberSignature Language="C#" Value="public void MarkDirty ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void MarkDirty() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.MarkDirty" />
      <MemberSignature Language="VB.NET" Value="Public Sub MarkDirty ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void MarkDirty();" />
      <MemberSignature Language="F#" Value="member this.MarkDirty : unit -&gt; unit" Usage="project.MarkDirty " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="0111e-522">Oznacza ten projekt, jako zmodyfikowane.</span><span class="sxs-lookup"><span data-stu-id="0111e-522">Marks this project as modified.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0111e-523">Rzadko jest niezbędne do wywołania tej metody w sposób jawny, ponieważ wszystkie zmiany wpływające na projekt automatycznie oznaczyć go jako zmodyfikowana.</span><span class="sxs-lookup"><span data-stu-id="0111e-523">It is seldom necessary to call this method explicitly, because all edits affecting a project automatically mark it as modified.</span></span>  
  
 <span data-ttu-id="0111e-524">Czasami jednak ta metoda musi zostać wywołana.</span><span class="sxs-lookup"><span data-stu-id="0111e-524">Sometimes, however, this method must be called.</span></span> <span data-ttu-id="0111e-525">Na przykład projekt może mieć element Import, w której warunek, który jest zależny od pliku, który istnieje na dysku.</span><span class="sxs-lookup"><span data-stu-id="0111e-525">For example, a project may have an Import element whose condition depends on a file that exists on a disk.</span></span> <span data-ttu-id="0111e-526">Jeśli ten plik nie istnieje w czasie oceny, a następnie jest tworzony po dokonaniu oceny, a następnie projekt musi jawnie oznaczona jako zmodyfikowana.</span><span class="sxs-lookup"><span data-stu-id="0111e-526">If that file does not exist at evaluation time, and it is created after evaluation, then the project must be explicitly marked as modified.</span></span>  
  
 <span data-ttu-id="0111e-527"><xref:Microsoft.Build.Evaluation.Project.ReevaluateIfNecessary%2A> Metoda używa tej właściwości, aby określić, jeśli konieczne jest ocena.</span><span class="sxs-lookup"><span data-stu-id="0111e-527">The <xref:Microsoft.Build.Evaluation.Project.ReevaluateIfNecessary%2A> method uses this property to determine if an evaluation is necessary.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ProjectCollection">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Evaluation.ProjectCollection ProjectCollection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Build.Evaluation.ProjectCollection ProjectCollection" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.Project.ProjectCollection" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ProjectCollection As ProjectCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Build::Evaluation::ProjectCollection ^ ProjectCollection { Microsoft::Build::Evaluation::ProjectCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ProjectCollection : Microsoft.Build.Evaluation.ProjectCollection" Usage="Microsoft.Build.Evaluation.Project.ProjectCollection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Evaluation.ProjectCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0111e-528">Pobiera kolekcję projektu, który zawiera ten projekt.</span><span class="sxs-lookup"><span data-stu-id="0111e-528">Gets the project collection which contains this project.</span></span></summary>
        <value><span data-ttu-id="0111e-529">Kolekcja projektów, który zawiera ten projekt, który nigdy nie jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="0111e-529">The project collection that contains this project, which is never <see langword="null" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProjectFileLocation">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Construction.ElementLocation ProjectFileLocation { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Build.Construction.ElementLocation ProjectFileLocation" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.Project.ProjectFileLocation" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ProjectFileLocation As ElementLocation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Build::Construction::ElementLocation ^ ProjectFileLocation { Microsoft::Build::Construction::ElementLocation ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ProjectFileLocation : Microsoft.Build.Construction.ElementLocation" Usage="Microsoft.Build.Evaluation.Project.ProjectFileLocation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Construction.ElementLocation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0111e-530">Lokalizacja źródłowym pliku sam nie są ustawiane określoną zawartość w niej.</span><span class="sxs-lookup"><span data-stu-id="0111e-530">The location of the originating file itself, not any specific content within it.</span></span> <span data-ttu-id="0111e-531">Jeśli plik nie ma nazwę, jest pustą lokalizację.</span><span class="sxs-lookup"><span data-stu-id="0111e-531">If the file has not been given a name, this is an empty location.</span></span> <span data-ttu-id="0111e-532">Jest to uzasadnione przypadku posiadanie żadnej lokalizacji.</span><span class="sxs-lookup"><span data-stu-id="0111e-532">This is a legitimate case of having no location.</span></span></summary>
        <value><span data-ttu-id="0111e-533">Źródłowym pliku lokalizacji lub pustą lokalizację, jeśli plik nie ma nazwy.</span><span class="sxs-lookup"><span data-stu-id="0111e-533">The originating file location, or an empty location if the file has not been given a name.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Properties">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.ICollection&lt;Microsoft.Build.Evaluation.ProjectProperty&gt; Properties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.ICollection`1&lt;class Microsoft.Build.Evaluation.ProjectProperty&gt; Properties" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.Project.Properties" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Properties As ICollection(Of ProjectProperty)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::ICollection&lt;Microsoft::Build::Evaluation::ProjectProperty ^&gt; ^ Properties { System::Collections::Generic::ICollection&lt;Microsoft::Build::Evaluation::ProjectProperty ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Properties : System.Collections.Generic.ICollection&lt;Microsoft.Build.Evaluation.ProjectProperty&gt;" Usage="Microsoft.Build.Evaluation.Project.Properties" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;Microsoft.Build.Evaluation.ProjectProperty&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0111e-534">Pobiera moduł wyliczający za pośrednictwem wszystkich właściwości, w tym projekcie.</span><span class="sxs-lookup"><span data-stu-id="0111e-534">Gets an enumerator over all properties in this project.</span></span> <span data-ttu-id="0111e-535">Jest to nieuporządkowanej kolekcji.</span><span class="sxs-lookup"><span data-stu-id="0111e-535">This is an unordered collection.</span></span></summary>
        <value><span data-ttu-id="0111e-536">Moduł wyliczający za pośrednictwem wszystkich właściwości, w tym projekcie.</span><span class="sxs-lookup"><span data-stu-id="0111e-536">An enumerator over all properties in this project.</span></span> <span data-ttu-id="0111e-537">Ponieważ właściwości są obliczane, w jakiej występują, to nieuporządkowanej kolekcji.</span><span class="sxs-lookup"><span data-stu-id="0111e-537">Since properties are evaluated as they appear, this is an unordered collection.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReevaluateIfNecessary">
      <MemberSignature Language="C#" Value="public void ReevaluateIfNecessary ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ReevaluateIfNecessary() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.ReevaluateIfNecessary" />
      <MemberSignature Language="VB.NET" Value="Public Sub ReevaluateIfNecessary ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ReevaluateIfNecessary();" />
      <MemberSignature Language="F#" Value="member this.ReevaluateIfNecessary : unit -&gt; unit" Usage="project.ReevaluateIfNecessary " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="0111e-538">Reevaluates projekt, aby zastosować zmiany.</span><span class="sxs-lookup"><span data-stu-id="0111e-538">Reevaluates the project to incorporate any changes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0111e-539">Projekt jest ponownie oceniane tylko wtedy, gdy jest ona oznaczona jako zmodyfikowana.</span><span class="sxs-lookup"><span data-stu-id="0111e-539">The project is reevaluated only if it is marked as modified.</span></span> <span data-ttu-id="0111e-540">Ponownej oceny zawiera wszystkie zmiany wprowadzone do kodu źródłowego projektu.</span><span class="sxs-lookup"><span data-stu-id="0111e-540">Reevaluation incorporates all changes made to the project source code.</span></span>  
  
 <span data-ttu-id="0111e-541">Wywołuje wyjątek InvalidProjectFileException, jeśli nie powiedzie się ocena.</span><span class="sxs-lookup"><span data-stu-id="0111e-541">Throws InvalidProjectFileException if the evaluation fails.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveGlobalProperty">
      <MemberSignature Language="C#" Value="public bool RemoveGlobalProperty (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool RemoveGlobalProperty(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.RemoveGlobalProperty(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function RemoveGlobalProperty (name As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool RemoveGlobalProperty(System::String ^ name);" />
      <MemberSignature Language="F#" Value="member this.RemoveGlobalProperty : string -&gt; bool" Usage="project.RemoveGlobalProperty name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="0111e-542">Nazwa właściwości globalne do usunięcia.</span><span class="sxs-lookup"><span data-stu-id="0111e-542">The name of the global property to be removed.</span></span></param>
        <summary><span data-ttu-id="0111e-543">Usuwa właściwość globalną i oznacza projekt jako zmodyfikowana.</span><span class="sxs-lookup"><span data-stu-id="0111e-543">Removes a global property and marks the project as modified.</span></span></summary>
        <returns><span data-ttu-id="0111e-544"><see langword="true" /> Jeśli ustawiono wartość właściwości globalnej.</span><span class="sxs-lookup"><span data-stu-id="0111e-544"><see langword="true" /> if the value of the global property was set.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveItem">
      <MemberSignature Language="C#" Value="public bool RemoveItem (Microsoft.Build.Evaluation.ProjectItem item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool RemoveItem(class Microsoft.Build.Evaluation.ProjectItem item) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.RemoveItem(Microsoft.Build.Evaluation.ProjectItem)" />
      <MemberSignature Language="VB.NET" Value="Public Function RemoveItem (item As ProjectItem) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool RemoveItem(Microsoft::Build::Evaluation::ProjectItem ^ item);" />
      <MemberSignature Language="F#" Value="member this.RemoveItem : Microsoft.Build.Evaluation.ProjectItem -&gt; bool" Usage="project.RemoveItem item" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="Microsoft.Build.Evaluation.ProjectItem" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="0111e-545">Element, który ma zostać usunięty.</span><span class="sxs-lookup"><span data-stu-id="0111e-545">The item to be removed.</span></span></param>
        <summary><span data-ttu-id="0111e-546">Usuwa element z projektu.</span><span class="sxs-lookup"><span data-stu-id="0111e-546">Removes an item from the project.</span></span> <span data-ttu-id="0111e-547">Element do usunięcia musi być obecny w projekcie, a nie muszą pochodzić od zaimportowany plik.</span><span class="sxs-lookup"><span data-stu-id="0111e-547">The item to be removed must be present in the project, and must not originate from an imported file.</span></span></summary>
        <returns><span data-ttu-id="0111e-548"><see langword="true" /> Jeśli element znajduje się w tym wykonywanym projekcie; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="0111e-548"><see langword="true" /> if the item is present in this evaluated project; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="0111e-549">Zazwyczaj ta metoda zwraca wartość true, ponieważ Jeśli żądany element nie jest obecny, metoda zgłasza wyjątek.</span><span class="sxs-lookup"><span data-stu-id="0111e-549">Normally this method returns true, since if the requested item is not present, the method throws an exception.</span></span> <span data-ttu-id="0111e-550">Jeśli element jest obecna w kolekcji ItemsIgnoringCondition, natomiast metoda zwraca wartość false.</span><span class="sxs-lookup"><span data-stu-id="0111e-550">If the item is present only in the ItemsIgnoringCondition collection, however, the method returns false.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0111e-551">Jeśli grupa elementów zawierających element staje się puste, jest również usuwany.</span><span class="sxs-lookup"><span data-stu-id="0111e-551">If the item group containing the item becomes empty, it is also removed.</span></span>  
  
 <span data-ttu-id="0111e-552">Jeśli element pochodzi z symbolem wieloznacznym lub wyrażenie rozdzielonych średnikami, wyrażenie najpierw podzielonego na wiele elementów.</span><span class="sxs-lookup"><span data-stu-id="0111e-552">If the item originates from a wildcard or semicolon-separated expression, the expression is first expanded into multiple items.</span></span>  
  
 <span data-ttu-id="0111e-553">Projekt zostanie zaktualizowany, ale nie dalsze oceny występuje aż do ponownego oszacowania.</span><span class="sxs-lookup"><span data-stu-id="0111e-553">The project is updated, but no further evaluation occurs until reevaluation.</span></span> <span data-ttu-id="0111e-554">Na przykład, jeśli element zostanie usunięty typ "i", "j", który jest wykonywane począwszy od "@(i)" nie jest modyfikowany aż do ponownego oszacowania.</span><span class="sxs-lookup"><span data-stu-id="0111e-554">For example, if an item of type "i" is removed, "j" which is evaluated from "@(i)" is not modified until reevaluation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveItems">
      <MemberSignature Language="C#" Value="public void RemoveItems (System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Evaluation.ProjectItem&gt; items);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveItems(class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Build.Evaluation.ProjectItem&gt; items) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.RemoveItems(System.Collections.Generic.IEnumerable{Microsoft.Build.Evaluation.ProjectItem})" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveItems (items As IEnumerable(Of ProjectItem))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveItems(System::Collections::Generic::IEnumerable&lt;Microsoft::Build::Evaluation::ProjectItem ^&gt; ^ items);" />
      <MemberSignature Language="F#" Value="member this.RemoveItems : seq&lt;Microsoft.Build.Evaluation.ProjectItem&gt; -&gt; unit" Usage="project.RemoveItems items" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="items" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Evaluation.ProjectItem&gt;" />
      </Parameters>
      <Docs>
        <param name="items"><span data-ttu-id="0111e-555">Elementy, które ma zostać usunięty.</span><span class="sxs-lookup"><span data-stu-id="0111e-555">The items to be removed.</span></span></param>
        <summary><span data-ttu-id="0111e-556">Usuwa wszystkie elementy danego z projektu, chyba że pochodzą ze importowanym projekcie.</span><span class="sxs-lookup"><span data-stu-id="0111e-556">Removes all the given items from the project, unless they originate from an imported project.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0111e-557">Jeśli element pochodzi z importowanym projekcie, jest po prostu pomijane.</span><span class="sxs-lookup"><span data-stu-id="0111e-557">If an item originates from an imported project, it is simply skipped.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveProperty">
      <MemberSignature Language="C#" Value="public bool RemoveProperty (Microsoft.Build.Evaluation.ProjectProperty property);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool RemoveProperty(class Microsoft.Build.Evaluation.ProjectProperty property) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.RemoveProperty(Microsoft.Build.Evaluation.ProjectProperty)" />
      <MemberSignature Language="VB.NET" Value="Public Function RemoveProperty (property As ProjectProperty) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool RemoveProperty(Microsoft::Build::Evaluation::ProjectProperty ^ property);" />
      <MemberSignature Language="F#" Value="member this.RemoveProperty : Microsoft.Build.Evaluation.ProjectProperty -&gt; bool" Usage="project.RemoveProperty property" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="Microsoft.Build.Evaluation.ProjectProperty" />
      </Parameters>
      <Docs>
        <param name="property"><span data-ttu-id="0111e-558">Właściwości do usunięcia.</span><span class="sxs-lookup"><span data-stu-id="0111e-558">The property to remove.</span></span></param>
        <summary><span data-ttu-id="0111e-559">Usuwa właściwość z projektu.</span><span class="sxs-lookup"><span data-stu-id="0111e-559">Removes an property from the project.</span></span> <span data-ttu-id="0111e-560">Właściwości do usunięcia musi być obecny w projekcie, a nie muszą pochodzić od zaimportowany plik.</span><span class="sxs-lookup"><span data-stu-id="0111e-560">The property to be removed must be present in the project, and must not originate from an imported file.</span></span></summary>
        <returns><span data-ttu-id="0111e-561"><see langword="true" /> Jeśli właściwość znajduje się w tym wykonywanym projekcie; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="0111e-561"><see langword="true" /> if the property is present in this evaluated project; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0111e-562">Jeśli grupa właściwości zawierający właściwości staje się puste, jest również usuwany.</span><span class="sxs-lookup"><span data-stu-id="0111e-562">If the property group containing the property becomes empty, it is also removed.</span></span>  
  
 <span data-ttu-id="0111e-563">Projekt zostanie zaktualizowany, ale nie dalsze oceny występuje aż do ponownego oszacowania.</span><span class="sxs-lookup"><span data-stu-id="0111e-563">The project is updated, but no further evaluation occurs until reevaluation.</span></span> <span data-ttu-id="0111e-564">Na przykład jeśli zostanie usunięty "p", "q", które jest obliczane z "$(p)" nie jest modyfikowany aż do ponownego oszacowania.</span><span class="sxs-lookup"><span data-stu-id="0111e-564">For example, if "p" is removed, "q" which is evaluated from "$(p)" is not modified until reevaluation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Save">
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="0111e-565">Zapisuje projekt do systemu plików, w przypadku modyfikowania przy użyciu domyślnego kodowania znaków.</span><span class="sxs-lookup"><span data-stu-id="0111e-565">Saves the project to the file system, if modified, using the default character encoding.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public void Save ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Save() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.Save" />
      <MemberSignature Language="VB.NET" Value="Public Sub Save ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Save();" />
      <MemberSignature Language="F#" Value="member this.Save : unit -&gt; unit" Usage="project.Save " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="0111e-566">Zapisuje projekt do systemu plików, w przypadku modyfikowania przy użyciu domyślnego kodowania znaków.</span><span class="sxs-lookup"><span data-stu-id="0111e-566">Saves the project to the file system, if modified, using the default character encoding.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public void Save (System.IO.TextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Save(class System.IO.TextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.Save(System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Save (writer As TextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Save(System::IO::TextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="member this.Save : System.IO.TextWriter -&gt; unit" Usage="project.Save writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="writer"><span data-ttu-id="0111e-567">Składnik zapisywania tekstu do zapisania projektu.</span><span class="sxs-lookup"><span data-stu-id="0111e-567">The text writer to save the project to.</span></span></param>
        <summary><span data-ttu-id="0111e-568">Zapisuje projekt w składniku zapisywania tekstu podana, czy projekt został zmodyfikowany.</span><span class="sxs-lookup"><span data-stu-id="0111e-568">Saves the project to the provided text writer, whether or not the project has been modified.</span></span> <span data-ttu-id="0111e-569">Używa kodowania znaków w składniku zapisywania tekstu i oznacza projekt jako niezmodyfikowany.</span><span class="sxs-lookup"><span data-stu-id="0111e-569">Uses the character encoding of the text writer and marks the project as unmodified.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public void Save (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Save(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.Save(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Save (path As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Save(System::String ^ path);" />
      <MemberSignature Language="F#" Value="member this.Save : string -&gt; unit" Usage="project.Save path" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="0111e-570">Ścieżka do kodu źródłowego projektu.</span><span class="sxs-lookup"><span data-stu-id="0111e-570">The path to the project source code.</span></span></param>
        <summary><span data-ttu-id="0111e-571">Zapisuje projekt do systemu plików, jeśli zmodyfikowany lub jeśli zmieni się ścieżka do kodu źródłowego projektu, przy użyciu domyślnego kodowania znaków.</span><span class="sxs-lookup"><span data-stu-id="0111e-571">Saves the project to the file system, if modified or if the path to the project source code changes, using the default character encoding.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public void Save (System.Text.Encoding encoding);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Save(class System.Text.Encoding encoding) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.Save(System.Text.Encoding)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Save(System::Text::Encoding ^ encoding);" />
      <MemberSignature Language="F#" Value="member this.Save : System.Text.Encoding -&gt; unit" Usage="project.Save encoding" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="encoding" Type="System.Text.Encoding" />
      </Parameters>
      <Docs>
        <param name="encoding"><span data-ttu-id="0111e-572">Kodowanie znaków użyte do zapisania projektu.</span><span class="sxs-lookup"><span data-stu-id="0111e-572">The character encoding used to save the project.</span></span></param>
        <summary><span data-ttu-id="0111e-573">Zapisuje projekt do systemu plików, w przypadku modyfikowania przy użyciu kodowania danego znaku.</span><span class="sxs-lookup"><span data-stu-id="0111e-573">Saves the project to the file system, if modified, using the given character encoding.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public void Save (string path, System.Text.Encoding encoding);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Save(string path, class System.Text.Encoding encoding) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.Save(System.String,System.Text.Encoding)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Save(System::String ^ path, System::Text::Encoding ^ encoding);" />
      <MemberSignature Language="F#" Value="member this.Save : string * System.Text.Encoding -&gt; unit" Usage="project.Save (path, encoding)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="encoding" Type="System.Text.Encoding" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="0111e-574">Ścieżka do kodu źródłowego projektu.</span><span class="sxs-lookup"><span data-stu-id="0111e-574">The path to the project source code.</span></span></param>
        <param name="encoding"><span data-ttu-id="0111e-575">Kodowanie znaków użyte do zapisania projektu.</span><span class="sxs-lookup"><span data-stu-id="0111e-575">The character encoding used to save the project.</span></span></param>
        <summary><span data-ttu-id="0111e-576">Zapisuje projekt do systemu plików, jeśli zmodyfikowany lub jeśli zmieni się ścieżka do kodu źródłowego projektu, przy użyciu kodowania danego znaku.</span><span class="sxs-lookup"><span data-stu-id="0111e-576">Saves the project to the file system, if modified or if the path to the project source code changes, using the given character encoding.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveLogicalProject">
      <MemberSignature Language="C#" Value="public void SaveLogicalProject (System.IO.TextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SaveLogicalProject(class System.IO.TextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.SaveLogicalProject(System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SaveLogicalProject (writer As TextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SaveLogicalProject(System::IO::TextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="member this.SaveLogicalProject : System.IO.TextWriter -&gt; unit" Usage="project.SaveLogicalProject writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="writer"><span data-ttu-id="0111e-577">Edytor, który zapisuje w pliku projektu.</span><span class="sxs-lookup"><span data-stu-id="0111e-577">The writer that saves the project file.</span></span></param>
        <summary><span data-ttu-id="0111e-578">Zapisuje plik projektu "logicznych" lub "wstępnie przetworzony", zawierający importowanych plików tak, jakby ich sformułowany pojedynczy plik.</span><span class="sxs-lookup"><span data-stu-id="0111e-578">Saves a "logical" or "preprocessed" project file, that includes all the imported files as if they formed a single file.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetGlobalProperty">
      <MemberSignature Language="C#" Value="public bool SetGlobalProperty (string name, string escapedValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool SetGlobalProperty(string name, string escapedValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.SetGlobalProperty(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function SetGlobalProperty (name As String, escapedValue As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool SetGlobalProperty(System::String ^ name, System::String ^ escapedValue);" />
      <MemberSignature Language="F#" Value="member this.SetGlobalProperty : string * string -&gt; bool" Usage="project.SetGlobalProperty (name, escapedValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="escapedValue" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="0111e-579">Nazwa właściwości globalne do ustawienia.</span><span class="sxs-lookup"><span data-stu-id="0111e-579">The name of the global property to set.</span></span></param>
        <param name="escapedValue"><span data-ttu-id="0111e-580">Nowa wartość właściwości globalnej.</span><span class="sxs-lookup"><span data-stu-id="0111e-580">The new value of the global property.</span></span></param>
        <summary><span data-ttu-id="0111e-581">Ustawia właściwość globalną po ocenie projektu.</span><span class="sxs-lookup"><span data-stu-id="0111e-581">Sets a global property after the project has been evaluated.</span></span> <span data-ttu-id="0111e-582">Jeśli wartość zostanie zmieniona, projekt jest oznaczony do wymagają ponownej oceny.</span><span class="sxs-lookup"><span data-stu-id="0111e-582">If the value changes, the project is marked to require reevaluation.</span></span></summary>
        <returns><span data-ttu-id="0111e-583"><see langword="true" /> Jeśli zmieni się wartość; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="0111e-583"><see langword="true" /> if the value changes; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetProperty">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Evaluation.ProjectProperty SetProperty (string name, string unevaluatedValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Build.Evaluation.ProjectProperty SetProperty(string name, string unevaluatedValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.SetProperty(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function SetProperty (name As String, unevaluatedValue As String) As ProjectProperty" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Build::Evaluation::ProjectProperty ^ SetProperty(System::String ^ name, System::String ^ unevaluatedValue);" />
      <MemberSignature Language="F#" Value="member this.SetProperty : string * string -&gt; Microsoft.Build.Evaluation.ProjectProperty" Usage="project.SetProperty (name, unevaluatedValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Evaluation.ProjectProperty</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="unevaluatedValue" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="0111e-584">Nazwa właściwości do ustawienia.</span><span class="sxs-lookup"><span data-stu-id="0111e-584">The name of the property to set.</span></span></param>
        <param name="unevaluatedValue"><span data-ttu-id="0111e-585">Nowa wartość nieobliczonym właściwości.</span><span class="sxs-lookup"><span data-stu-id="0111e-585">The new unevaluated value of the property.</span></span></param>
        <summary><span data-ttu-id="0111e-586">Ustawia lub dodaje właściwość o podanej nazwie i wartości do projektu.</span><span class="sxs-lookup"><span data-stu-id="0111e-586">Sets or adds a property with the given name and value to the project.</span></span> <span data-ttu-id="0111e-587">Zastępuje wartości właściwości o takiej samej nazwie, jeśli nie pochodzi on zaimportowany plik.</span><span class="sxs-lookup"><span data-stu-id="0111e-587">Overwrites the value of a property with the same name if it did not originate in an imported file.</span></span></summary>
        <returns><span data-ttu-id="0111e-588">Właściwość.</span><span class="sxs-lookup"><span data-stu-id="0111e-588">The property.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0111e-589">Nie ma właściwości o podanej nazwie, aktualizuje ostatniego istniejącą właściwość o podanej nazwie, która nie ma warunku na siebie lub jego grupy właściwości, chyba że pochodzi on zaimportowany plik.</span><span class="sxs-lookup"><span data-stu-id="0111e-589">If there is no property with the given name, updates the last existing property with the given name that has no condition on itself or its property group, unless it originated in an imported file.</span></span>  
  
 <span data-ttu-id="0111e-590">W przeciwnym razie dodaje nową właściwość, w pierwszej grupy właściwości bez warunku, tworzenie grupy właściwości, jeśli to konieczne po ostatniej istniejących właściwości grupy, inne na początku projektu.</span><span class="sxs-lookup"><span data-stu-id="0111e-590">Otherwise, adds a new property in the first property group without a condition, creating a property group if necessary after the last existing property group, else at the start of the project.</span></span>  
  
 <span data-ttu-id="0111e-591">Obliczanie odbywa się na zasadzie największej staranności.</span><span class="sxs-lookup"><span data-stu-id="0111e-591">Evaluation takes place on a best-effort basis.</span></span> <span data-ttu-id="0111e-592">Właściwości, które są zdefiniowane w źródle projektu, zgodnie z nową właściwość może służyć do oceny.</span><span class="sxs-lookup"><span data-stu-id="0111e-592">Properties that are defined in the project source following the new property may be used for evaluation.</span></span> <span data-ttu-id="0111e-593">Tylko ta właściwość jest oceniany.</span><span class="sxs-lookup"><span data-stu-id="0111e-593">Only this property is evaluated.</span></span> <span data-ttu-id="0111e-594">Nie dotyczy innych właściwości, które mogą od niej zależne.</span><span class="sxs-lookup"><span data-stu-id="0111e-594">Other properties that might depend on it are not affected.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SkipEvaluation">
      <MemberSignature Language="C#" Value="public bool SkipEvaluation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SkipEvaluation" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.Project.SkipEvaluation" />
      <MemberSignature Language="VB.NET" Value="Public Property SkipEvaluation As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool SkipEvaluation { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.SkipEvaluation : bool with get, set" Usage="Microsoft.Build.Evaluation.Project.SkipEvaluation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0111e-595">Pobiera lub ustawia wartość wskazującą, czy ReevaluateIfNecessary jest tymczasowo wyłączone.</span><span class="sxs-lookup"><span data-stu-id="0111e-595">Gets or sets a value that indicates whether ReevaluateIfNecessary is temporarily disabled.</span></span> <span data-ttu-id="0111e-596">To jest przydatne, gdy host oczekuje się liczba odczytów i zapisuje do projektu i chce, aby tymczasowo pochodzących z poprawność wydajności.</span><span class="sxs-lookup"><span data-stu-id="0111e-596">This is useful when the host expects to make a number of reads and writes to the project, and wants to temporarily sacrifice correctness for performance.</span></span></summary>
        <value><span data-ttu-id="0111e-597">Flaga określająca, czy ReevaluateIfNecessary jest tymczasowo wyłączone.</span><span class="sxs-lookup"><span data-stu-id="0111e-597">A flag that determines whether ReevaluateIfNecessary is temporarily disabled.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SubToolsetVersion">
      <MemberSignature Language="C#" Value="public string SubToolsetVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SubToolsetVersion" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.Project.SubToolsetVersion" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SubToolsetVersion As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SubToolsetVersion { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SubToolsetVersion : string" Usage="Microsoft.Build.Evaluation.Project.SubToolsetVersion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0111e-598">Pobiera wartość atrybutu SubToolsetVersion, jeśli istnieje.</span><span class="sxs-lookup"><span data-stu-id="0111e-598">Gets the value of the SubToolsetVersion attribute, if any.</span></span> <span data-ttu-id="0111e-599">Ta wartość została połączona z wartością atrybutu ToolsVersion, aby określić właściwości zestawu narzędzi dla tego projektu.</span><span class="sxs-lookup"><span data-stu-id="0111e-599">This value was combined with the value of the ToolsVersion attribute to determine the toolset properties for this project.</span></span></summary>
        <value><span data-ttu-id="0111e-600">Wartość atrybutu SubToolsetVersion lub ciąg pusty, jeśli ten atrybut nie jest obecny.</span><span class="sxs-lookup"><span data-stu-id="0111e-600">The SubToolsetVersion attribute value, or an empty string if the attribute is not present.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Targets">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IDictionary&lt;string,Microsoft.Build.Execution.ProjectTargetInstance&gt; Targets { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IDictionary`2&lt;string, class Microsoft.Build.Execution.ProjectTargetInstance&gt; Targets" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.Project.Targets" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Targets As IDictionary(Of String, ProjectTargetInstance)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IDictionary&lt;System::String ^, Microsoft::Build::Execution::ProjectTargetInstance ^&gt; ^ Targets { System::Collections::Generic::IDictionary&lt;System::String ^, Microsoft::Build::Execution::ProjectTargetInstance ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Targets : System.Collections.Generic.IDictionary&lt;string, Microsoft.Build.Execution.ProjectTargetInstance&gt;" Usage="Microsoft.Build.Evaluation.Project.Targets" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.String,Microsoft.Build.Execution.ProjectTargetInstance&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0111e-601">Pobiera słownik wszystkie elementy docelowe, w tym projekcie, opartych na kluczach według nazwy elementu docelowego.</span><span class="sxs-lookup"><span data-stu-id="0111e-601">Gets a dictionary of all targets in this project, keyed by target name.</span></span></summary>
        <value><span data-ttu-id="0111e-602">Słownik tylko do odczytu wszystkich obiektów docelowych w tym projekcie, opartych na kluczach według nazwy elementu docelowego.</span><span class="sxs-lookup"><span data-stu-id="0111e-602">A read-only dictionary of all targets in this project, keyed by target name.</span></span> <span data-ttu-id="0111e-603">Zastąpione elementy docelowe nie są uwzględnione w tej kolekcji.</span><span class="sxs-lookup"><span data-stu-id="0111e-603">Overridden targets are not included in this collection.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToolsVersion">
      <MemberSignature Language="C#" Value="public string ToolsVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ToolsVersion" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.Project.ToolsVersion" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ToolsVersion As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ToolsVersion { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ToolsVersion : string" Usage="Microsoft.Build.Evaluation.Project.ToolsVersion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0111e-604">Pobiera wersja narzędzi, który ten projekt został oceniony jako, jeśli istnieje.</span><span class="sxs-lookup"><span data-stu-id="0111e-604">Gets the tools version that this project was evaluated with, if any.</span></span></summary>
        <value><span data-ttu-id="0111e-605">Wersja narzędzi, który ten projekt został oceniony, jeśli istnieje.</span><span class="sxs-lookup"><span data-stu-id="0111e-605">The tools version that this project was evaluated with, if any.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0111e-606">Ustaw przez konstruktora.</span><span class="sxs-lookup"><span data-stu-id="0111e-606">Set by the constructor.</span></span> <span data-ttu-id="0111e-607">To niekoniecznie jest taka sama jak wersja narzędzi w znaczniku projektu, jeśli takie istnieją; go może zewnętrznie określono, na przykład o przełącznikiem /tv w wierszu polecenia.</span><span class="sxs-lookup"><span data-stu-id="0111e-607">This is not necessarily the same as the tools version on the Project tag, if any; it may have been externally specified, for example with a /tv switch on the command line.</span></span> <span data-ttu-id="0111e-608">Wersja narzędzia rzeczywiste na znaczniku projektu, można otrzymać od <xref:Microsoft.Build.Evaluation.Project.Xml%2A>.</span><span class="sxs-lookup"><span data-stu-id="0111e-608">The actual tools version on the Project tag can be obtained from <xref:Microsoft.Build.Evaluation.Project.Xml%2A>.</span></span> <span data-ttu-id="0111e-609">Nie można zmienić wersji narzędzia, po utworzeniu projektu.</span><span class="sxs-lookup"><span data-stu-id="0111e-609">The tools version cannot be changed once the project has been created.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Xml">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Construction.ProjectRootElement Xml { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Build.Construction.ProjectRootElement Xml" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.Project.Xml" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Xml As ProjectRootElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Build::Construction::ProjectRootElement ^ Xml { Microsoft::Build::Construction::ProjectRootElement ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Xml : Microsoft.Build.Construction.ProjectRootElement" Usage="Microsoft.Build.Evaluation.Project.Xml" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Construction.ProjectRootElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0111e-610">Pobiera projekt główny skojarzony z tym projektem.</span><span class="sxs-lookup"><span data-stu-id="0111e-610">Gets the root project associated with this project.</span></span> <span data-ttu-id="0111e-611">Nigdy nie może być <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="0111e-611">Can never be <see langword="null" />.</span></span></summary>
        <value><span data-ttu-id="0111e-612">Projekt główny skojarzony z tym projektem, który nigdy nie może być <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="0111e-612">The root project associated with this project, which can never be <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0111e-613">Nie istnieje żaden sposób, aby ustawić tę właściwość.</span><span class="sxs-lookup"><span data-stu-id="0111e-613">There is no way to set this property.</span></span> <span data-ttu-id="0111e-614">Jeśli masz nowy katalog główny projektu, należy je ocenić do nowego projektu.</span><span class="sxs-lookup"><span data-stu-id="0111e-614">If you have a new project root, evaluate it into a new project.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>