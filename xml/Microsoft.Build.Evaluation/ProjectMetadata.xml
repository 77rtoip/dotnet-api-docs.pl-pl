<Type Name="ProjectMetadata" FullName="Microsoft.Build.Evaluation.ProjectMetadata">
  <Metadata><Meta Name="ms.openlocfilehash" Value="724cf90fbbbad804adac3c2d93f54829ff701ce3" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69258763" /></Metadata><TypeSignature Language="C#" Value="public class ProjectMetadata : IEquatable&lt;Microsoft.Build.Evaluation.ProjectMetadata&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ProjectMetadata extends System.Object implements class System.IEquatable`1&lt;class Microsoft.Build.Evaluation.ProjectMetadata&gt;" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Build.Evaluation.ProjectMetadata" />
  <TypeSignature Language="VB.NET" Value="Public Class ProjectMetadata&#xA;Implements IEquatable(Of ProjectMetadata)" />
  <TypeSignature Language="C++ CLI" Value="public ref class ProjectMetadata : IEquatable&lt;Microsoft::Build::Evaluation::ProjectMetadata ^&gt;" />
  <TypeSignature Language="F#" Value="type ProjectMetadata = class&#xA;    interface IEquatable&lt;ProjectMetadata&gt;" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Build</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IEquatable&lt;Microsoft.Build.Evaluation.ProjectMetadata&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Diagnostics.DebuggerDisplay("{Name}={EvaluatedValue} [{xml.Value}]")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="0e3ee-101">Reprezentuje szacowane metadane czasu projektowania.</span><span class="sxs-lookup"><span data-stu-id="0e3ee-101">Represents evaluated design-time metadata.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0e3ee-102">Nigdy nie jest używane do reprezentowania wbudowanych metadanych, takich jak% (filename).</span><span class="sxs-lookup"><span data-stu-id="0e3ee-102">Never used to represent built-in metadata, like %(Filename).</span></span> <span data-ttu-id="0e3ee-103">Metadane są zawsze skojarzone z kodem źródłowym projektu.</span><span class="sxs-lookup"><span data-stu-id="0e3ee-103">The metadata is always associated with project source code.</span></span>  
  
 <span data-ttu-id="0e3ee-104">Metadane są zawarte przez <xref:Microsoft.Build.Evaluation.ProjectItemDefinition> <xref:Microsoft.Build.Evaluation.ProjectItem>lub albo.</span><span class="sxs-lookup"><span data-stu-id="0e3ee-104">The metadata is contained by either by a <xref:Microsoft.Build.Evaluation.ProjectItemDefinition> or a <xref:Microsoft.Build.Evaluation.ProjectItem>.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="ConditionLocation">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Construction.ElementLocation ConditionLocation { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Build.Construction.ElementLocation ConditionLocation" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.ProjectMetadata.ConditionLocation" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ConditionLocation As ElementLocation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Build::Construction::ElementLocation ^ ConditionLocation { Microsoft::Build::Construction::ElementLocation ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ConditionLocation : Microsoft.Build.Construction.ElementLocation" Usage="Microsoft.Build.Evaluation.ProjectMetadata.ConditionLocation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Construction.ElementLocation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0e3ee-105">Lokalizacja atrybutu warunku.</span><span class="sxs-lookup"><span data-stu-id="0e3ee-105">Location of the Condition attribute.</span></span></summary>
        <value><span data-ttu-id="0e3ee-106">Zwraca lokalizację atrybutu warunku.</span><span class="sxs-lookup"><span data-stu-id="0e3ee-106">Returns Condition attribute location.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EvaluatedValue">
      <MemberSignature Language="C#" Value="public string EvaluatedValue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string EvaluatedValue" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.ProjectMetadata.EvaluatedValue" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EvaluatedValue As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ EvaluatedValue { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.EvaluatedValue : string" Usage="Microsoft.Build.Evaluation.ProjectMetadata.EvaluatedValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0e3ee-107">Pobiera obliczoną wartość metadanych.</span><span class="sxs-lookup"><span data-stu-id="0e3ee-107">Gets the evaluated metadata value.</span></span></summary>
        <value><span data-ttu-id="0e3ee-108">Szacowana wartość metadanych, która nigdy nie <see langword="null" />jest.</span><span class="sxs-lookup"><span data-stu-id="0e3ee-108">The evaluated metadata value, which is never <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0e3ee-109">Nie można ustawić bezpośrednio: można ustawić tylko nieobliczoną wartość.</span><span class="sxs-lookup"><span data-stu-id="0e3ee-109">Cannot be set directly: only the unevaluated value can be set.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsImported">
      <MemberSignature Language="C#" Value="public bool IsImported { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsImported" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.ProjectMetadata.IsImported" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsImported As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsImported { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsImported : bool" Usage="Microsoft.Build.Evaluation.ProjectMetadata.IsImported" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0e3ee-110">Określa, czy metadane pochodzą z zaimportowanego pliku.</span><span class="sxs-lookup"><span data-stu-id="0e3ee-110">Determines if the metadata originated from an imported file.</span></span></summary>
        <value><span data-ttu-id="0e3ee-111"><see langword="true" />Jeśli metadane pochodzą z zaimportowanego pliku; w przeciwnym razie. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="0e3ee-111"><see langword="true" /> if the metadata originated from an imported file; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemType">
      <MemberSignature Language="C#" Value="public string ItemType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ItemType" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.ProjectMetadata.ItemType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ItemType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ItemType { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ItemType : string" Usage="Microsoft.Build.Evaluation.ProjectMetadata.ItemType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0e3ee-112">Pobiera typ elementu zawierającego definicję elementu lub element.</span><span class="sxs-lookup"><span data-stu-id="0e3ee-112">Gets the item type of the containing item definition or item.</span></span></summary>
        <value><span data-ttu-id="0e3ee-113">Typ elementu zawierającego definicję lub element elementu.</span><span class="sxs-lookup"><span data-stu-id="0e3ee-113">The item type of the containing item definition or item.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Location">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Construction.ElementLocation Location { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Build.Construction.ElementLocation Location" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.ProjectMetadata.Location" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Location As ElementLocation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Build::Construction::ElementLocation ^ Location { Microsoft::Build::Construction::ElementLocation ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Location : Microsoft.Build.Construction.ElementLocation" Usage="Microsoft.Build.Evaluation.ProjectMetadata.Location" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Construction.ElementLocation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0e3ee-114">Lokalizacja elementu.</span><span class="sxs-lookup"><span data-stu-id="0e3ee-114">Location of the element.</span></span></summary>
        <value><span data-ttu-id="0e3ee-115">Lokalizacja elementu.</span><span class="sxs-lookup"><span data-stu-id="0e3ee-115">The element location.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.ProjectMetadata.Name" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="Microsoft.Build.Evaluation.ProjectMetadata.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0e3ee-116">Pobiera nazwę metadanych.</span><span class="sxs-lookup"><span data-stu-id="0e3ee-116">Gets the name of the metadata.</span></span></summary>
        <value><span data-ttu-id="0e3ee-117">Nazwa metadanych.</span><span class="sxs-lookup"><span data-stu-id="0e3ee-117">The name of the metadata.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Predecessor">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Evaluation.ProjectMetadata Predecessor { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Build.Evaluation.ProjectMetadata Predecessor" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.ProjectMetadata.Predecessor" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Predecessor As ProjectMetadata" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Build::Evaluation::ProjectMetadata ^ Predecessor { Microsoft::Build::Evaluation::ProjectMetadata ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Predecessor : Microsoft.Build.Evaluation.ProjectMetadata" Usage="Microsoft.Build.Evaluation.ProjectMetadata.Predecessor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Evaluation.ProjectMetadata</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0e3ee-118">Pobiera ostatnie metadane (z definicji elementu lub elementu), które zostały zastąpione przez te metadane podczas obliczania.</span><span class="sxs-lookup"><span data-stu-id="0e3ee-118">Gets the last metadata (from an item definition or item) that was overridden by this metadata during evaluation.</span></span></summary>
        <value><span data-ttu-id="0e3ee-119">Ostatnie metadane (z definicji elementu lub elementu), których wartość została przesłonięta przez te metadane podczas obliczania, <see langword="null" /> lub jeśli metadane nie zostały zastąpione.</span><span class="sxs-lookup"><span data-stu-id="0e3ee-119">The last metadata (from an item definition or item) whose value was overridden by this metadata during evaluation, or <see langword="null" /> if the metadata has not been overridden.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0e3ee-120">Ta metoda wyszukuje wszystkie metadane o tej samej nazwie, które znajdują się powyżej w logicznym pliku projektu, które są zawarte w definicjach elementów tego samego typu, a których warunki mają wartość true.</span><span class="sxs-lookup"><span data-stu-id="0e3ee-120">This method searches for all metadata with the same name that lie above in the logical project file, and which are contained by item definitions of the same item type, and whose conditions evaluate to true.</span></span> <span data-ttu-id="0e3ee-121">Jeśli metadane są zawarte w elemencie, ta metoda wyszukuje wszystkie poprzednie metadane o tej samej nazwie i elemencie, którego warunek został oceniony jako true.</span><span class="sxs-lookup"><span data-stu-id="0e3ee-121">If the metadata is contained by an item, this method searches for any previous metadata with the same name and item whose condition evaluated to true.</span></span> <span data-ttu-id="0e3ee-122">Definicje elementów są przeszukiwane przed elementami.</span><span class="sxs-lookup"><span data-stu-id="0e3ee-122">Item definitions are searched before items.</span></span>  
  
 <span data-ttu-id="0e3ee-123">Jeśli projekt nie został obliczony od ostatniej modyfikacji, ta wartość może być niepoprawna.</span><span class="sxs-lookup"><span data-stu-id="0e3ee-123">If the project has not been reevaluated since the last modification, this value may be incorrect.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Project">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Evaluation.Project Project { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Build.Evaluation.Project Project" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.ProjectMetadata.Project" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Project As Project" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Build::Evaluation::Project ^ Project { Microsoft::Build::Evaluation::Project ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Project : Microsoft.Build.Evaluation.Project" Usage="Microsoft.Build.Evaluation.ProjectMetadata.Project" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Evaluation.Project</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0e3ee-124">Pobiera projekt zawierający te metadane.</span><span class="sxs-lookup"><span data-stu-id="0e3ee-124">Gets the project that contains this metadata.</span></span></summary>
        <value><span data-ttu-id="0e3ee-125">Projekt zawierający te metadane, który nigdy nie <see langword="null" />jest.</span><span class="sxs-lookup"><span data-stu-id="0e3ee-125">The project that contains this metadata, which is never <see langword="null" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IEquatable&lt;Microsoft.Build.Evaluation.ProjectMetadata&gt;.Equals">
      <MemberSignature Language="C#" Value="bool IEquatable&lt;ProjectMetadata&gt;.Equals (Microsoft.Build.Evaluation.ProjectMetadata other);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.IEquatable&lt;Microsoft.Build.Evaluation.ProjectMetadata&gt;.Equals(class Microsoft.Build.Evaluation.ProjectMetadata other) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.ProjectMetadata.System#IEquatable&lt;Microsoft#Build#Evaluation#ProjectMetadata&gt;#Equals(Microsoft.Build.Evaluation.ProjectMetadata)" />
      <MemberSignature Language="VB.NET" Value="Function Equals (other As ProjectMetadata) As Boolean Implements IEquatable(Of ProjectMetadata).Equals" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.IEquatable&lt;Microsoft.Build.Evaluation.ProjectMetadata&gt;.Equals(Microsoft::Build::Evaluation::ProjectMetadata ^ other) = IEquatable&lt;Microsoft::Build::Evaluation::ProjectMetadata ^&gt;::Equals;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IEquatable`1.Equals(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="Microsoft.Build.Evaluation.ProjectMetadata" />
      </Parameters>
      <Docs>
        <param name="other"><span data-ttu-id="0e3ee-126">Metadane projektu do porównania z.</span><span class="sxs-lookup"><span data-stu-id="0e3ee-126">The project metadata to be compared to.</span></span></param>
        <summary><span data-ttu-id="0e3ee-127">Porównuje te metadane projektu z podanymi metadanymi projektu dla równości.</span><span class="sxs-lookup"><span data-stu-id="0e3ee-127">Compares this project metadata with the given project metadata for equality.</span></span></summary>
        <returns><span data-ttu-id="0e3ee-128"><see langword="true" />Jeśli metadane projektu są równe; w przeciwnym razie. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="0e3ee-128"><see langword="true" /> if the project metadata are equal; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UnevaluatedValue">
      <MemberSignature Language="C#" Value="public string UnevaluatedValue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UnevaluatedValue" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.ProjectMetadata.UnevaluatedValue" />
      <MemberSignature Language="VB.NET" Value="Public Property UnevaluatedValue As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ UnevaluatedValue { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.UnevaluatedValue : string with get, set" Usage="Microsoft.Build.Evaluation.ProjectMetadata.UnevaluatedValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0e3ee-129">Pobiera lub ustawia wartość metadanych nieocenianej.</span><span class="sxs-lookup"><span data-stu-id="0e3ee-129">Gets or sets the unevaluated metadata value.</span></span></summary>
        <value><span data-ttu-id="0e3ee-130">Nieszacowana wartość metadanych.</span><span class="sxs-lookup"><span data-stu-id="0e3ee-130">The unevaluated metadata value.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0e3ee-131">Metoda ustawiająca aktualizuje zarówno nieocenioną wartość, jak i obliczoną wartość, ale nie wpływa na wszystkie inne w projekcie do czasu ponownej oceny.</span><span class="sxs-lookup"><span data-stu-id="0e3ee-131">The setter method updates both the unevaluated value and the evaluated value, but does not affect anything else in the project until reevaluation.</span></span>  
  
 <span data-ttu-id="0e3ee-132">Na przykład — jeśli fragment metadanych o nazwie "m" jest modyfikowany w elemencie typu "i", nie ma to wpływu na "j", który jest oceniany z "@ (j->"% (m) ")" do czasu ponownej oceny.</span><span class="sxs-lookup"><span data-stu-id="0e3ee-132">For example, --if a piece of metadata named "m" is modified on item of type "i", it does not affect "j" which is evaluated from "@(j->'%(m)')" until reevaluation.</span></span> <span data-ttu-id="0e3ee-133">--Jeśli nieoceniona wartość "m" jest ustawiona na element, który jest modyfikowany przez ocenę, na przykład "$ (p)", Szacowana wartość zostanie ustawiona na "$ (p)" do czasu ponownej oceny.</span><span class="sxs-lookup"><span data-stu-id="0e3ee-133">--if the unevaluated value of "m" is set to something that is modified by evaluation, such as "$(p)", the evaluated value will be set to "$(p)" until reevaluation.</span></span>  
  
 <span data-ttu-id="0e3ee-134">Ustawienie metadanych za pośrednictwem <xref:Microsoft.Build.Evaluation.ProjectItem> może spowodować, że skojarzenie <xref:Microsoft.Build.Construction.ProjectItemElement> ma być podzielone, jeśli element elementu pochodzi z listy elementów, symbolu wieloznacznego lub wyrażenia średnika.</span><span class="sxs-lookup"><span data-stu-id="0e3ee-134">Setting metadata through a <xref:Microsoft.Build.Evaluation.ProjectItem> may cause the associated <xref:Microsoft.Build.Construction.ProjectItemElement> to be split, if the item element originated from an item list, wildcard, or semicolon expression.</span></span> <span data-ttu-id="0e3ee-135">ponieważ oznacza to zamiar dotyczący tylko określonego elementu.</span><span class="sxs-lookup"><span data-stu-id="0e3ee-135">because it implies an intention to only affect that particular item.</span></span>  
  
 <span data-ttu-id="0e3ee-136">Ustawienie metadanych za pośrednictwem ProjectMetadata nie powoduje żadnych podziałów, ponieważ oznacza zamiar wpływania na wszystkie elementy używające <xref:Microsoft.Build.Construction.ProjectMetadataElement>bazowej.</span><span class="sxs-lookup"><span data-stu-id="0e3ee-136">Setting metadata through ProjectMetadata does not cause any splitting, because it implies an intention to affect all items using the underlying <xref:Microsoft.Build.Construction.ProjectMetadataElement>.</span></span>  
  
 <span data-ttu-id="0e3ee-137">Projekt zawierający jest oznaczony jako zmodyfikowany.</span><span class="sxs-lookup"><span data-stu-id="0e3ee-137">The containing project is marked as modified.</span></span> <span data-ttu-id="0e3ee-138">Przyjmuje się, że wartości nieoceniane zawierają sekwencje znaków ucieczki zgodnie z wymaganiami.</span><span class="sxs-lookup"><span data-stu-id="0e3ee-138">Unevaluated values are assumed to contain escaped character sequences as needed.</span></span>  
  
 <span data-ttu-id="0e3ee-139">Ta metoda nie może opuścić projektu w stanie samodzielnym.</span><span class="sxs-lookup"><span data-stu-id="0e3ee-139">This method may not leave the project in a self consistent state.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Xml">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Construction.ProjectMetadataElement Xml { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Build.Construction.ProjectMetadataElement Xml" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.ProjectMetadata.Xml" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Xml As ProjectMetadataElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Build::Construction::ProjectMetadataElement ^ Xml { Microsoft::Build::Construction::ProjectMetadataElement ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Xml : Microsoft.Build.Construction.ProjectMetadataElement" Usage="Microsoft.Build.Evaluation.ProjectMetadata.Xml" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Construction.ProjectMetadataElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0e3ee-140">Pobiera skojarzony element metadanych projektu.</span><span class="sxs-lookup"><span data-stu-id="0e3ee-140">Gets the associated project metadata element.</span></span></summary>
        <value><span data-ttu-id="0e3ee-141">Skojarzony element metadanych projektu, który nigdy nie może być <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="0e3ee-141">The associated project metadata element, which can never be <see langword="null" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
