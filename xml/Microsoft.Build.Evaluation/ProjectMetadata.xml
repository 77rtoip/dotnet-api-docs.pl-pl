<Type Name="ProjectMetadata" FullName="Microsoft.Build.Evaluation.ProjectMetadata">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="4d57a5e371d3d4e2adabce3cb909c216d8991a0e" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30428196" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ProjectMetadata : IEquatable&lt;Microsoft.Build.Evaluation.ProjectMetadata&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ProjectMetadata extends System.Object implements class System.IEquatable`1&lt;class Microsoft.Build.Evaluation.ProjectMetadata&gt;" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Build.Evaluation.ProjectMetadata" />
  <TypeSignature Language="VB.NET" Value="Public Class ProjectMetadata&#xA;Implements IEquatable(Of ProjectMetadata)" />
  <TypeSignature Language="C++ CLI" Value="public ref class ProjectMetadata : IEquatable&lt;Microsoft::Build::Evaluation::ProjectMetadata ^&gt;" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Build</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IEquatable&lt;Microsoft.Build.Evaluation.ProjectMetadata&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Diagnostics.DebuggerDisplay("{Name}={EvaluatedValue} [{xml.Value}]")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="ff386-101">Reprezentuje ocenić metadanych w czasie projektowania.</span>
      <span class="sxs-lookup">
        <span data-stu-id="ff386-101">Represents evaluated design-time metadata.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ff386-102">Nigdy nie jest używana do reprezentowania wbudowanych metadanych, takich jak % (nazwa pliku).</span><span class="sxs-lookup"><span data-stu-id="ff386-102">Never used to represent built-in metadata, like %(Filename).</span></span> <span data-ttu-id="ff386-103">Metadane są zawsze skojarzone z kodem źródłowym projektu.</span><span class="sxs-lookup"><span data-stu-id="ff386-103">The metadata is always associated with project source code.</span></span>  
  
 <span data-ttu-id="ff386-104">Metadane jest zawarty w przez <xref:Microsoft.Build.Evaluation.ProjectItemDefinition> lub <xref:Microsoft.Build.Evaluation.ProjectItem>.</span><span class="sxs-lookup"><span data-stu-id="ff386-104">The metadata is contained by either by a <xref:Microsoft.Build.Evaluation.ProjectItemDefinition> or a <xref:Microsoft.Build.Evaluation.ProjectItem>.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="ConditionLocation">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Construction.ElementLocation ConditionLocation { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Build.Construction.ElementLocation ConditionLocation" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.ProjectMetadata.ConditionLocation" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ConditionLocation As ElementLocation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Build::Construction::ElementLocation ^ ConditionLocation { Microsoft::Build::Construction::ElementLocation ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Construction.ElementLocation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ff386-105">Lokalizacja atrybutu warunku.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff386-105">Location of the Condition attribute.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ff386-106">Zwraca warunku lokalizacją atrybutu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff386-106">Returns Condition attribute location.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EvaluatedValue">
      <MemberSignature Language="C#" Value="public string EvaluatedValue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string EvaluatedValue" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.ProjectMetadata.EvaluatedValue" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EvaluatedValue As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ EvaluatedValue { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ff386-107">Pobiera wartość wyliczana metadanych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff386-107">Gets the evaluated metadata value.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ff386-108">Zwraca wartość metadanych obliczane, które nigdy nie ma wartość null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff386-108">Returns the evaluated metadata value, which is never null.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ff386-109">Nie można ustawić bezpośrednio: można ustawić tylko wartość nieznanym.</span><span class="sxs-lookup"><span data-stu-id="ff386-109">Cannot be set directly: only the unevaluated value can be set.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsImported">
      <MemberSignature Language="C#" Value="public bool IsImported { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsImported" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.ProjectMetadata.IsImported" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsImported As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsImported { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ff386-110">Określa, czy metadane pochodzi z zaimportowanym pliku.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff386-110">Determines if the metadata originated from an imported file.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ff386-111">Zwraca wartość PRAWDA, jeśli metadane pochodzi z zaimportowanym pliku; wartość false w przeciwnym razie wartość.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff386-111">Returns true if the metadata originated from an imported file; false otherwise.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemType">
      <MemberSignature Language="C#" Value="public string ItemType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ItemType" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.ProjectMetadata.ItemType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ItemType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ItemType { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ff386-112">Pobiera typ elementu zawierającego definicji elementu lub elementów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff386-112">Gets the item type of the containing item definition or item.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ff386-113">Zwraca typ elementu zawierającego definicji elementu lub elementów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff386-113">Returns the item type of the containing item definition or item.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Location">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Construction.ElementLocation Location { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Build.Construction.ElementLocation Location" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.ProjectMetadata.Location" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Location As ElementLocation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Build::Construction::ElementLocation ^ Location { Microsoft::Build::Construction::ElementLocation ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Construction.ElementLocation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ff386-114">Lokalizacja elementu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff386-114">Location of the element.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ff386-115">Zwraca lokalizację elementu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff386-115">Returns the element location.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.ProjectMetadata.Name" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ff386-116">Pobiera nazwę metadanych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff386-116">Gets the name of the metadata.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ff386-117">Zwraca nazwę metadanych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff386-117">Returns the name of the metadata.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Predecessor">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Evaluation.ProjectMetadata Predecessor { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Build.Evaluation.ProjectMetadata Predecessor" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.ProjectMetadata.Predecessor" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Predecessor As ProjectMetadata" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Build::Evaluation::ProjectMetadata ^ Predecessor { Microsoft::Build::Evaluation::ProjectMetadata ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Evaluation.ProjectMetadata</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ff386-118">Pobiera ostatni metadane (od definicji elementu lub elementów) została zastąpiona przez te metadane podczas obliczania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff386-118">Gets the last metadata (from an item definition or item) that was overridden by this metadata during evaluation.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ff386-119">Zwraca metadane ostatniego (od definicji elementu lub elementów), którego wartość została zastąpiona przez te metadane podczas obliczania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff386-119">Returns the last metadata (from an item definition or item) whose value was overridden by this metadata during evaluation.</span>
          </span>
          <span data-ttu-id="ff386-120">Zwraca wartość null, jeśli nie została zastąpiona metadanych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff386-120">Returns null if the metadata has not been overridden.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ff386-121">Ta metoda szuka wszystkich metadanych o tej samej nazwie, które znajdują się powyżej w plik logicznej projektu i które są zawarte przez definicje elementów tego samego typu elementu i którego warunki zwrócić wartość true.</span><span class="sxs-lookup"><span data-stu-id="ff386-121">This method searches for all metadata with the same name that lie above in the logical project file, and which are contained by item definitions of the same item type, and whose conditions evaluate to true.</span></span> <span data-ttu-id="ff386-122">Jeśli metadane są przechowywane przez element, ta metoda przeszukuje wszystkie poprzednie metadane z taką samą nazwę i element, którego warunek przyjął wartość true.</span><span class="sxs-lookup"><span data-stu-id="ff386-122">If the metadata is contained by an item, this method searches for any previous metadata with the same name and item whose condition evaluated to true.</span></span> <span data-ttu-id="ff386-123">Definicje elementów są przeszukiwane przed elementów.</span><span class="sxs-lookup"><span data-stu-id="ff386-123">Item definitions are searched before items.</span></span>  
  
 <span data-ttu-id="ff386-124">Jeśli projekt nie ma został ponownie oceniane od czasu ostatniej modyfikacji, ta wartość może być nieprawidłowa.</span><span class="sxs-lookup"><span data-stu-id="ff386-124">If the project has not been reevaluated since the last modification, this value may be incorrect.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Project">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Evaluation.Project Project { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Build.Evaluation.Project Project" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.ProjectMetadata.Project" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Project As Project" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Build::Evaluation::Project ^ Project { Microsoft::Build::Evaluation::Project ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Evaluation.Project</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ff386-125">Pobiera projekt, który zawiera te metadane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff386-125">Gets the project that contains this metadata.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ff386-126">Zwraca projekt, który zawiera te metadane, który nigdy nie ma wartość null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff386-126">Returns the project that contains this metadata, which is never null.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IEquatable&lt;Microsoft.Build.Evaluation.ProjectMetadata&gt;.Equals">
      <MemberSignature Language="C#" Value="bool IEquatable&lt;ProjectMetadata&gt;.Equals (Microsoft.Build.Evaluation.ProjectMetadata other);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.IEquatable&lt;Microsoft.Build.Evaluation.ProjectMetadata&gt;.Equals(class Microsoft.Build.Evaluation.ProjectMetadata other) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.ProjectMetadata.System#IEquatable&lt;Microsoft#Build#Evaluation#ProjectMetadata&gt;#Equals(Microsoft.Build.Evaluation.ProjectMetadata)" />
      <MemberSignature Language="VB.NET" Value="Function Equals (other As ProjectMetadata) As Boolean Implements IEquatable(Of ProjectMetadata).Equals" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.IEquatable&lt;Microsoft.Build.Evaluation.ProjectMetadata&gt;.Equals(Microsoft::Build::Evaluation::ProjectMetadata ^ other) = IEquatable&lt;Microsoft::Build::Evaluation::ProjectMetadata ^&gt;::Equals;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IEquatable`1.Equals(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="Microsoft.Build.Evaluation.ProjectMetadata" />
      </Parameters>
      <Docs>
        <param name="other">
          <span data-ttu-id="ff386-127">Metadane projektu do porównania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff386-127">The project metadata to be compared to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ff386-128">Porównuje metadanych projektu z metadanymi danego projektu pod kątem równości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff386-128">Compares this project metadata with the given project metadata for equality.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ff386-129">Zwraca wartość PRAWDA, jeśli metadane projektu są równe; wartość false w przeciwnym razie wartość.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff386-129">Returns true if the project metadata are equal; false otherwise.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UnevaluatedValue">
      <MemberSignature Language="C#" Value="public string UnevaluatedValue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UnevaluatedValue" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.ProjectMetadata.UnevaluatedValue" />
      <MemberSignature Language="VB.NET" Value="Public Property UnevaluatedValue As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ UnevaluatedValue { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ff386-130">Pobiera lub ustawia wartość nieznanym metadanych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff386-130">Gets or sets the unevaluated metadata value.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ff386-131">Zwraca wartość nieznanym metadanych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff386-131">Returns the unevaluated metadata value.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ff386-132">Metoda setter zarówno nieznanym wartość i wartość wyliczana aktualizacji, ale nie wpływa na niczego więcej w projekcie do ponownej oceny.</span><span class="sxs-lookup"><span data-stu-id="ff386-132">The setter method updates both the unevaluated value and the evaluated value, but does not affect anything else in the project until reevaluation.</span></span>  
  
 <span data-ttu-id="ff386-133">Na przykład — jeśli element metadanych o nazwie "m" zostanie zmodyfikowany w elemencie typu "i", nie wpływa na "j", które jest obliczane z "@(j ->"% (m)")" do ponownej oceny.</span><span class="sxs-lookup"><span data-stu-id="ff386-133">For example, --if a piece of metadata named "m" is modified on item of type "i", it does not affect "j" which is evaluated from "@(j->'%(m)')" until reevaluation.</span></span> <span data-ttu-id="ff386-134">— Jeśli nieznanym "m" jest wartość do zasobu, który jest modyfikowany przez ocenę, takie jak "$(p)", wartość wyliczana zostanie ustawiona na "$(p)" do ponownej oceny.</span><span class="sxs-lookup"><span data-stu-id="ff386-134">--if the unevaluated value of "m" is set to something that is modified by evaluation, such as "$(p)", the evaluated value will be set to "$(p)" until reevaluation.</span></span>  
  
 <span data-ttu-id="ff386-135">Ustawienie metadanych za pośrednictwem <xref:Microsoft.Build.Evaluation.ProjectItem> może spowodować skojarzony <xref:Microsoft.Build.Construction.ProjectItemElement> można podzielić, jeśli element element pochodzi z wyrażenia elementu listy, symbol wieloznaczny lub średnikami.</span><span class="sxs-lookup"><span data-stu-id="ff386-135">Setting metadata through a <xref:Microsoft.Build.Evaluation.ProjectItem> may cause the associated <xref:Microsoft.Build.Construction.ProjectItemElement> to be split, if the item element originated from an item list, wildcard, or semicolon expression.</span></span> <span data-ttu-id="ff386-136">ponieważ będzie to oznaczać zamiar dotyczą tylko konkretnego elementu.</span><span class="sxs-lookup"><span data-stu-id="ff386-136">because it implies an intention to only affect that particular item.</span></span>  
  
 <span data-ttu-id="ff386-137">Ustawienie metadanych za pośrednictwem ProjectMetadata nie powoduje żadnych podziału, ponieważ będzie to oznaczać zamiar wpływają na wszystkie elementy przy użyciu podstawowych <xref:Microsoft.Build.Construction.ProjectMetadataElement>.</span><span class="sxs-lookup"><span data-stu-id="ff386-137">Setting metadata through ProjectMetadata does not cause any splitting, because it implies an intention to affect all items using the underlying <xref:Microsoft.Build.Construction.ProjectMetadataElement>.</span></span>  
  
 <span data-ttu-id="ff386-138">Projekt zawierający jest oznaczona jako zmodyfikowana.</span><span class="sxs-lookup"><span data-stu-id="ff386-138">The containing project is marked as modified.</span></span> <span data-ttu-id="ff386-139">Nieznanym wartości są uznawane za zawiera wpisywany sekwencji znaków, zgodnie z potrzebami.</span><span class="sxs-lookup"><span data-stu-id="ff386-139">Unevaluated values are assumed to contain escaped character sequences as needed.</span></span>  
  
 <span data-ttu-id="ff386-140">Ta metoda nie może opuścić projektu self spójna.</span><span class="sxs-lookup"><span data-stu-id="ff386-140">This method may not leave the project in a self consistent state.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Xml">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Construction.ProjectMetadataElement Xml { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Build.Construction.ProjectMetadataElement Xml" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.ProjectMetadata.Xml" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Xml As ProjectMetadataElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Build::Construction::ProjectMetadataElement ^ Xml { Microsoft::Build::Construction::ProjectMetadataElement ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.DebuggerBrowsable</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Construction.ProjectMetadataElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ff386-141">Pobiera element metadanych skojarzony projekt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff386-141">Gets the associated project metadata element.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ff386-142">Zwraca element metadanych skojarzony projekt, który nigdy nie może mieć wartości null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff386-142">Returns the associated project metadata element, which can never be null.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>