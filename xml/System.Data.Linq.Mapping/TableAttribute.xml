<Type Name="TableAttribute" FullName="System.Data.Linq.Mapping.TableAttribute">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="bac18b077e2a113bda817def056a591fab7a1e3c" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30445149" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class TableAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit TableAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Data.Linq.Mapping.TableAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class TableAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class TableAttribute sealed : Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Linq</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Class, AllowMultiple=false, Inherited=false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Określa klasę jako klasę jednostki, która jest skojarzona z tabeli bazy danych.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten atrybut umożliwia wyznacza klasę klasy jednostki, która jest skojarzona z tabeli bazy danych lub widoku. [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)] traktuje klasy, które mają <xref:System.Data.Linq.Mapping.TableAttribute> atrybut jako trwałe klasy.  
  
 [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)] obsługuje tylko pojedynczej tabeli mapowania. Oznacza to, że klasę jednostki musi być zamapowany na dokładnie jedna tabela bazy danych i tabeli bazy danych nie można zamapować na wielu klas, w tym samym czasie.  
  
 Można użyć <xref:System.Data.Linq.Mapping.TableAttribute.Name%2A> właściwość <xref:System.Data.Linq.Mapping.TableAttribute> atrybutu, aby określić nazwę tabeli i nazwę schematu można opcjonalnie użyć nazwy tabeli. Jeśli nie określisz nazwy przy użyciu <xref:System.Data.Linq.Mapping.TableAttribute.Name%2A> właściwości, nazwy tabeli zakłada się, że taka sama jak nazwa klasy.  
  
## <a name="schema-qualified-names"></a>Nazwy kwalifikowane według schematu  
 Nazwa schematu można opcjonalnie użyć nazwy tabeli. Domyślnie token na lewo od pierwszego okresu <xref:System.Data.Linq.Mapping.TableAttribute.Name%2A> ciągu jest traktowany jako nazwy schematu. W pozostałej części nazwy jest uważany za nazwy tabeli. Dostawca ofert nazwy tabeli, zależnie od potrzeb. Na przykład [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)] dostawcy dla serwera SQL upewnia się, że gdy są potrzebne co najmniej używane nawiasy.  
  
> [!NOTE]
>  W niektórych przypadkach musi jawnie oferty atrybutów, ponieważ automatycznie oferty nie może dostawcy programu SQL Server. W poniższej tabeli przedstawiono przykłady.  
  
|Case|Przykład: Nazwa identyfikatora|Przykład: Oczekiwano ciągu w atrybutach|W przeciwnym razie...|  
|----------|------------------------------|--------------------------------------------|----------------|  
|Nazwa schematu zawiera kropkę|Schema: "A.B"<br /><br /> Tabela: "C"|"[A.B].C"|Pierwszy okres zakłada, że oddzielający nazwę schematu od nazwy tabeli.|  
|Nazwa schematu/tabeli rozpoczyna się od `@`|"@SomeName"|"[@SomeName]"|Zakłada się, że nazwa parametru.|  
|Rozpoczyna się od schematu `[` i kończy `]`|"[Schema.Table]"|"[[Schemat]. [Tabela]]]"|Identyfikator bez cudzysłowów podobny identyfikatora ujętego w cudzysłów.|  
|Tabela zaczyna się od `[` i kończy `]`|"[Tabela]"|"[[Tabela]]]"|Identyfikator bez cudzysłowów podobny identyfikatora ujętego w cudzysłów.|  
  
   
  
## Examples  
 [!code-csharp[DLinqCustomize#1](~/samples/snippets/csharp/VS_Snippets_Data/DLinqCustomize/cs/Program.cs#1)]
 [!code-vb[DLinqCustomize#1](~/samples/snippets/visualbasic/VS_Snippets_Data/DLinqCustomize/vb/Module1.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TableAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.Mapping.TableAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TableAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Data.Linq.Mapping.TableAttribute" /> klasy.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.TableAttribute.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia nazwę tabeli lub widoku.</summary>
        <value>Domyślnie wartość jest taka sama jak nazwa klasy.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli nie określisz nazwy przy użyciu <xref:System.Data.Linq.Mapping.TableAttribute.Name%2A>, przyjęto, że nazwa tabeli jest taka sama jak nazwa klasy.  
  
> [!NOTE]
>  Nazwa schematu można opcjonalnie użyć nazwy tabeli (na przykład Schema3.Table5). Domyślnie token na lewo od pierwszego okresu <xref:System.Data.Linq.Mapping.TableAttribute.Name%2A> ciągu jest traktowany jako nazwę schematu, a pozostałe nazwę tabeli.  
  
 W poniższym przykładzie nazwa tabeli domyślnego `Customer`, jest zmieniana na `Customers`.  
  
   
  
## Examples  
 [!code-csharp[DLinqCustomize#1](~/samples/snippets/csharp/VS_Snippets_Data/DLinqCustomize/cs/Program.cs#1)]
 [!code-vb[DLinqCustomize#1](~/samples/snippets/visualbasic/VS_Snippets_Data/DLinqCustomize/vb/Module1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>