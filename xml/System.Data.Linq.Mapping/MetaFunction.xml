<Type Name="MetaFunction" FullName="System.Data.Linq.Mapping.MetaFunction">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="09c366e4b506bbfa68cd1b66d8a9825c1aa7a1d8" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class MetaFunction" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit MetaFunction extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Data.Linq.Mapping.MetaFunction" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class MetaFunction" />
  <TypeSignature Language="C++ CLI" Value="public ref class MetaFunction abstract" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Linq</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="3d0f5-101">Reprezentuje mapowanie między metodą kontekście funkcji bazy danych.</span>
      <span class="sxs-lookup">
        <span data-stu-id="3d0f5-101">Represents the mapping between a context method and a database function.</span>
      </span>
    </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected MetaFunction ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.Mapping.MetaFunction.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; MetaFunction();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="3d0f5-102">Inicjuje nowe wystąpienie klasy <see cref="T:System.Data.Linq.Mapping.MetaFunction" /> klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d0f5-102">Initializes a new instance of the <see cref="T:System.Data.Linq.Mapping.MetaFunction" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasMultipleResults">
      <MemberSignature Language="C#" Value="public abstract bool HasMultipleResults { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasMultipleResults" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.MetaFunction.HasMultipleResults" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property HasMultipleResults As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property bool HasMultipleResults { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3d0f5-103">Pobiera czy procedura składowana ma wiele typów wyników.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d0f5-103">Gets whether or not the stored procedure has multiple result types.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3d0f5-104">
            <see langword="true" /> Jeśli procedura składowana ma wiele typów wyników.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d0f5-104">
              <see langword="true" /> if the stored procedure has multiple result types.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsComposable">
      <MemberSignature Language="C#" Value="public abstract bool IsComposable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsComposable" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.MetaFunction.IsComposable" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property IsComposable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property bool IsComposable { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3d0f5-105">Pobiera informacje, czy funkcja może składać się w obrębie zapytania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d0f5-105">Gets whether the function can be composed within a query.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3d0f5-106">
            <see langword="true" /> Jeśli funkcja może składać się w obrębie zapytania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d0f5-106">
              <see langword="true" /> if the function can be composed within a query.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d0f5-107">Procedura składowana nie mogą być składane w obrębie zapytania.</span><span class="sxs-lookup"><span data-stu-id="3d0f5-107">A stored procedure cannot be composed within a query.</span></span> <span data-ttu-id="3d0f5-108">Metody, które reprezentują procedur składowanych zwracają `false`.</span><span class="sxs-lookup"><span data-stu-id="3d0f5-108">Methods that represent stored procedures return `false`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MappedName">
      <MemberSignature Language="C#" Value="public abstract string MappedName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MappedName" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.MetaFunction.MappedName" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property MappedName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::String ^ MappedName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3d0f5-109">Pobiera nazwę bazy danych funkcji lub procedury.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d0f5-109">Gets the name of the database function or procedure.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3d0f5-110">Ciąg reprezentujący nazwę bazy danych funkcji lub procedury.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d0f5-110">A string representing the name of the database function or procedure.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Method">
      <MemberSignature Language="C#" Value="public abstract System.Reflection.MethodInfo Method { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Reflection.MethodInfo Method" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.MetaFunction.Method" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Method As MethodInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Reflection::MethodInfo ^ Method { System::Reflection::MethodInfo ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3d0f5-111">Pobiera z nim metody kontekstu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d0f5-111">Gets the underlying context method.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3d0f5-112">A <see cref="T:System.Reflection.MethodInfo" /> obiekt, który odpowiada metodzie podstawowej kontekstu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d0f5-112">A <see cref="T:System.Reflection.MethodInfo" /> object that corresponds with the underlying context method.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Model">
      <MemberSignature Language="C#" Value="public abstract System.Data.Linq.Mapping.MetaModel Model { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Linq.Mapping.MetaModel Model" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.MetaFunction.Model" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Model As MetaModel" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Data::Linq::Mapping::MetaModel ^ Model { System::Data::Linq::Mapping::MetaModel ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Linq.Mapping.MetaModel</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3d0f5-113">Pobiera <see cref="T:System.Data.Linq.Mapping.MetaModel" /> zawierający tę funkcję.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d0f5-113">Gets the <see cref="T:System.Data.Linq.Mapping.MetaModel" /> that contains this function.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3d0f5-114">
            <see cref="T:System.Data.Linq.Mapping.MetaModel" /> Obiekt, który zawiera tę funkcję.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d0f5-114">The <see cref="T:System.Data.Linq.Mapping.MetaModel" /> object that contains this function.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public abstract string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.MetaFunction.Name" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::String ^ Name { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3d0f5-115">Pobiera nazwę metody.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d0f5-115">Gets the name of the method.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3d0f5-116">A <see langword="string" /> reprezentujący nazwę metody.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d0f5-116">A <see langword="string" /> that represents the name of the method.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d0f5-117">Jest to taką samą nazwę jak <xref:System.Reflection.MethodInfo> nazwy.</span><span class="sxs-lookup"><span data-stu-id="3d0f5-117">This is the same name as the <xref:System.Reflection.MethodInfo> name.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Parameters">
      <MemberSignature Language="C#" Value="public abstract System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Linq.Mapping.MetaParameter&gt; Parameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Data.Linq.Mapping.MetaParameter&gt; Parameters" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.MetaFunction.Parameters" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Parameters As ReadOnlyCollection(Of MetaParameter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Data::Linq::Mapping::MetaParameter ^&gt; ^ Parameters { System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Data::Linq::Mapping::MetaParameter ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Linq.Mapping.MetaParameter&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3d0f5-118">Pobiera wyliczenie parametrów funkcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d0f5-118">Gets an enumeration of the function parameters.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3d0f5-119">Kolekcja parametrów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d0f5-119">A collection of the parameters.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResultRowTypes">
      <MemberSignature Language="C#" Value="public abstract System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Linq.Mapping.MetaType&gt; ResultRowTypes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Data.Linq.Mapping.MetaType&gt; ResultRowTypes" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.MetaFunction.ResultRowTypes" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property ResultRowTypes As ReadOnlyCollection(Of MetaType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Data::Linq::Mapping::MetaType ^&gt; ^ ResultRowTypes { System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Data::Linq::Mapping::MetaType ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Linq.Mapping.MetaType&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3d0f5-120">Pobiera wyliczenie wyniku możliwych typów wierszy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d0f5-120">Gets the enumeration of possible result row types.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3d0f5-121">Kolekcja możliwych typów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d0f5-121">A collection of possible types.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReturnParameter">
      <MemberSignature Language="C#" Value="public abstract System.Data.Linq.Mapping.MetaParameter ReturnParameter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Linq.Mapping.MetaParameter ReturnParameter" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.MetaFunction.ReturnParameter" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property ReturnParameter As MetaParameter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Data::Linq::Mapping::MetaParameter ^ ReturnParameter { System::Data::Linq::Mapping::MetaParameter ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Linq.Mapping.MetaParameter</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3d0f5-122">Pobiera parametr zwrotnego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d0f5-122">Gets the return parameter.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3d0f5-123">
            <see cref="T:System.Data.Linq.Mapping.MetaParameter" /> Odpowiadający parametr zwrotnego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d0f5-123">The <see cref="T:System.Data.Linq.Mapping.MetaParameter" /> that corresponds to the return parameter.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>