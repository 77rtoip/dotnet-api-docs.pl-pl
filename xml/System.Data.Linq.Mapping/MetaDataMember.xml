<Type Name="MetaDataMember" FullName="System.Data.Linq.Mapping.MetaDataMember">
  <Metadata><Meta Name="ms.openlocfilehash" Value="0cf54bae434190af590f27b011f61805bf3dbb2f" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69374879" /></Metadata><TypeSignature Language="C#" Value="public abstract class MetaDataMember" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit MetaDataMember extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Data.Linq.Mapping.MetaDataMember" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class MetaDataMember" />
  <TypeSignature Language="C++ CLI" Value="public ref class MetaDataMember abstract" />
  <TypeSignature Language="F#" Value="type MetaDataMember = class" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Linq</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="e7008-101">Reprezentuje mapowanie między polem a właściwością obiektu domeny do kolumny tabeli bazy danych.</span><span class="sxs-lookup"><span data-stu-id="e7008-101">Represents the mapping between a field or a property of a domain object into a column of a database table.</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected MetaDataMember ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.Mapping.MetaDataMember.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; MetaDataMember();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e7008-102">Inicjuje nowe wystąpienie klasy <see cref="T:System.Data.Linq.Mapping.MetaDataMember" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="e7008-102">Initializes a new instance of the <see cref="T:System.Data.Linq.Mapping.MetaDataMember" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Association">
      <MemberSignature Language="C#" Value="public abstract System.Data.Linq.Mapping.MetaAssociation Association { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Linq.Mapping.MetaAssociation Association" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.MetaDataMember.Association" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Association As MetaAssociation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Data::Linq::Mapping::MetaAssociation ^ Association { System::Data::Linq::Mapping::MetaAssociation ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Association : System.Data.Linq.Mapping.MetaAssociation" Usage="System.Data.Linq.Mapping.MetaDataMember.Association" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Linq.Mapping.MetaAssociation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e7008-103">Gdy jest zastępowany w klasie pochodnej, pobiera <see cref="T:System.Data.Linq.Mapping.MetaAssociation" /> , która odnosi się do tego elementu członkowskiego.</span><span class="sxs-lookup"><span data-stu-id="e7008-103">When overridden in a derived class, gets the <see cref="T:System.Data.Linq.Mapping.MetaAssociation" /> that corresponds to this member.</span></span></summary>
        <value><span data-ttu-id="e7008-104">Odpowiadający <see cref="T:System.Data.Linq.Mapping.MetaAssociation" /> , <see langword="null" />jeśli taki istnieje; w przeciwnym razie.</span><span class="sxs-lookup"><span data-stu-id="e7008-104">The corresponding <see cref="T:System.Data.Linq.Mapping.MetaAssociation" /> if one exists; otherwise, <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e7008-105">Ta właściwość reprezentuje skojarzenie bazy danych, takie jak klucz obcy, z relacją klucza podstawowego.</span><span class="sxs-lookup"><span data-stu-id="e7008-105">This property represents a database association like a foreign-key to primary-key relationship.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoSync">
      <MemberSignature Language="C#" Value="public abstract System.Data.Linq.Mapping.AutoSync AutoSync { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.Linq.Mapping.AutoSync AutoSync" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.MetaDataMember.AutoSync" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property AutoSync As AutoSync" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Data::Linq::Mapping::AutoSync AutoSync { System::Data::Linq::Mapping::AutoSync get(); };" />
      <MemberSignature Language="F#" Value="member this.AutoSync : System.Data.Linq.Mapping.AutoSync" Usage="System.Data.Linq.Mapping.MetaDataMember.AutoSync" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Linq.Mapping.AutoSync</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e7008-106">Gdy jest zastępowany w klasie pochodnej, pobiera zachowanie Odczytaj dla tego elementu członkowskiego dla operacji INSERT i Update.</span><span class="sxs-lookup"><span data-stu-id="e7008-106">When overridden in a derived class, gets the read-back behavior for this member for insert and update operations.</span></span></summary>
        <value><span data-ttu-id="e7008-107">Jedna z wartości wyliczenia, która wskazuje zachowanie odczytane dla operacji INSERT i Update.</span><span class="sxs-lookup"><span data-stu-id="e7008-107">One of the enumeration values that indicates the read-back behavior for insert and update operations.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanBeNull">
      <MemberSignature Language="C#" Value="public abstract bool CanBeNull { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanBeNull" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.MetaDataMember.CanBeNull" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property CanBeNull As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property bool CanBeNull { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanBeNull : bool" Usage="System.Data.Linq.Mapping.MetaDataMember.CanBeNull" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e7008-108">Gdy jest zastępowany w klasie pochodnej, pobiera wartość wskazującą, czy wartość tego elementu członkowskiego może być przypisana <see langword="null" /> do wartości.</span><span class="sxs-lookup"><span data-stu-id="e7008-108">When overridden in a derived class, gets a value that indicates whether the value of this member can be assigned the <see langword="null" /> value.</span></span></summary>
        <value><span data-ttu-id="e7008-109"><see langword="true" />Jeśli do <see langword="null" /> tego elementu członkowskiego można przypisać wartość, <see langword="false" />w przeciwnym razie.</span><span class="sxs-lookup"><span data-stu-id="e7008-109"><see langword="true" /> if this member can be assigned the <see langword="null" /> value; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e7008-110">Ta właściwość jest zależna <xref:System.Data.Linq.Mapping.MetaDataMember.DbType%2A> od właściwości i jest udostępniana dla wygody.</span><span class="sxs-lookup"><span data-stu-id="e7008-110">This property is dependent on the <xref:System.Data.Linq.Mapping.MetaDataMember.DbType%2A> property, and is provided for convenience.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DbType">
      <MemberSignature Language="C#" Value="public abstract string DbType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DbType" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.MetaDataMember.DbType" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property DbType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::String ^ DbType { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DbType : string" Usage="System.Data.Linq.Mapping.MetaDataMember.DbType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e7008-111">Gdy jest zastępowany w klasie pochodnej, pobiera typ odpowiadającej kolumny bazy danych.</span><span class="sxs-lookup"><span data-stu-id="e7008-111">When overridden in a derived class, gets the type of the corresponding database column.</span></span></summary>
        <value><span data-ttu-id="e7008-112">Typ kolumny bazy danych jako ciąg.</span><span class="sxs-lookup"><span data-stu-id="e7008-112">The type of the database column as a string.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e7008-113">Będzie to dokładny tekst używany do definiowania kolumny w poleceniu deklaracji tabeli Transact-SQL.</span><span class="sxs-lookup"><span data-stu-id="e7008-113">This will be the exact text used to define the column in a Transact-SQL table declaration command.</span></span> <span data-ttu-id="e7008-114">Jeśli tak nie jest, typ kolumny bazy danych jest wywnioskowany na podstawie typu elementu członkowskiego.</span><span class="sxs-lookup"><span data-stu-id="e7008-114">If not so defined, the database column type is inferred from the member type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DeclaringType">
      <MemberSignature Language="C#" Value="public abstract System.Data.Linq.Mapping.MetaType DeclaringType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Linq.Mapping.MetaType DeclaringType" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.MetaDataMember.DeclaringType" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property DeclaringType As MetaType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Data::Linq::Mapping::MetaType ^ DeclaringType { System::Data::Linq::Mapping::MetaType ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DeclaringType : System.Data.Linq.Mapping.MetaType" Usage="System.Data.Linq.Mapping.MetaDataMember.DeclaringType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Linq.Mapping.MetaType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e7008-115">Gdy jest zastępowany w klasie pochodnej, pobiera <see cref="T:System.Data.Linq.Mapping.MetaType" /> , która zawiera ten element członkowski danych.</span><span class="sxs-lookup"><span data-stu-id="e7008-115">When overridden in a derived class, gets the <see cref="T:System.Data.Linq.Mapping.MetaType" /> that contains this data member.</span></span></summary>
        <value><span data-ttu-id="e7008-116">Meta-typ zawierający bieżący element członkowski.</span><span class="sxs-lookup"><span data-stu-id="e7008-116">The meta-type that contains the current member.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeferredSourceAccessor">
      <MemberSignature Language="C#" Value="public abstract System.Data.Linq.Mapping.MetaAccessor DeferredSourceAccessor { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Linq.Mapping.MetaAccessor DeferredSourceAccessor" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.MetaDataMember.DeferredSourceAccessor" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property DeferredSourceAccessor As MetaAccessor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Data::Linq::Mapping::MetaAccessor ^ DeferredSourceAccessor { System::Data::Linq::Mapping::MetaAccessor ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DeferredSourceAccessor : System.Data.Linq.Mapping.MetaAccessor" Usage="System.Data.Linq.Mapping.MetaDataMember.DeferredSourceAccessor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Linq.Mapping.MetaAccessor</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e7008-117">Gdy jest zastępowany w klasie pochodnej, pobiera metodę dostępu, która jest używana do pobierania i ustawiania odroczonego źródła tego elementu członkowskiego.</span><span class="sxs-lookup"><span data-stu-id="e7008-117">When overridden in a derived class, gets the accessor that is used to get and set the deferred source of this member.</span></span></summary>
        <value><span data-ttu-id="e7008-118">Akcesor używany do uzyskiwania dostępu do odroczonego źródła dla tego elementu członkowskiego.</span><span class="sxs-lookup"><span data-stu-id="e7008-118">The accessor used to access the deferred source for this member.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeferredValueAccessor">
      <MemberSignature Language="C#" Value="public abstract System.Data.Linq.Mapping.MetaAccessor DeferredValueAccessor { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Linq.Mapping.MetaAccessor DeferredValueAccessor" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.MetaDataMember.DeferredValueAccessor" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property DeferredValueAccessor As MetaAccessor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Data::Linq::Mapping::MetaAccessor ^ DeferredValueAccessor { System::Data::Linq::Mapping::MetaAccessor ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DeferredValueAccessor : System.Data.Linq.Mapping.MetaAccessor" Usage="System.Data.Linq.Mapping.MetaDataMember.DeferredValueAccessor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Linq.Mapping.MetaAccessor</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e7008-119">Gdy jest zastępowany w klasie pochodnej, pobiera metodę dostępu, która jest używana do pobierania i ustawiania odroczonej wartości tego elementu członkowskiego (bez powodowania pobierania).</span><span class="sxs-lookup"><span data-stu-id="e7008-119">When overridden in a derived class, gets the accessor that is used to get and set the deferred value of this member (without causing fetch).</span></span></summary>
        <value><span data-ttu-id="e7008-120">Metoda dostępu używana do uzyskiwania dostępu do odroczonej wartości dla tego elementu członkowskiego.</span><span class="sxs-lookup"><span data-stu-id="e7008-120">The accessor used to access the deferred value for this member.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Expression">
      <MemberSignature Language="C#" Value="public abstract string Expression { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Expression" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.MetaDataMember.Expression" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Expression As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::String ^ Expression { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Expression : string" Usage="System.Data.Linq.Mapping.MetaDataMember.Expression" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e7008-121">Gdy jest zastępowany w klasie pochodnej, Pobiera wyrażenie definiujące kolumnę obliczaną.</span><span class="sxs-lookup"><span data-stu-id="e7008-121">When overridden in a derived class, gets the expression that defines a computed column.</span></span></summary>
        <value><span data-ttu-id="e7008-122">Wyrażenie dla kolumny obliczanej jako ciąg.</span><span class="sxs-lookup"><span data-stu-id="e7008-122">The expression for the computed column as a string.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsAssociation">
      <MemberSignature Language="C#" Value="public abstract bool IsAssociation { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAssociation" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.MetaDataMember.IsAssociation" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property IsAssociation As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property bool IsAssociation { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsAssociation : bool" Usage="System.Data.Linq.Mapping.MetaDataMember.IsAssociation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e7008-123">Gdy jest zastępowany w klasie pochodnej, pobiera wartość wskazującą, czy ten element członkowski definiuje relację skojarzenia.</span><span class="sxs-lookup"><span data-stu-id="e7008-123">When overridden in a derived class, gets a value that indicates whether this member defines an association relationship.</span></span></summary>
        <value><span data-ttu-id="e7008-124"><see langword="true" />Jeśli ten element członkowski definiuje relację skojarzenia; w przeciwnym razie. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="e7008-124"><see langword="true" /> if this member defines an association relationship; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDbGenerated">
      <MemberSignature Language="C#" Value="public abstract bool IsDbGenerated { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDbGenerated" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.MetaDataMember.IsDbGenerated" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property IsDbGenerated As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property bool IsDbGenerated { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsDbGenerated : bool" Usage="System.Data.Linq.Mapping.MetaDataMember.IsDbGenerated" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e7008-125">Gdy jest zastępowany w klasie pochodnej, pobiera wartość wskazującą, czy ten element członkowski jest generowany automatycznie przez bazę danych.</span><span class="sxs-lookup"><span data-stu-id="e7008-125">When overridden in a derived class, gets a value that indicates whether this member is automatically generated by the database.</span></span></summary>
        <value><span data-ttu-id="e7008-126"><see langword="true" />Jeśli ten element członkowski jest generowany automatycznie przez bazę danych programu; w przeciwnym razie. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="e7008-126"><see langword="true" /> if this member is automatically generated by the database; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e7008-127">Automatycznie wygenerowane elementy członkowskie są synchronizowane natychmiast po wstawieniu odpowiedniego wiersza danych.</span><span class="sxs-lookup"><span data-stu-id="e7008-127">Automatically generated members are synchronized immediately after the corresponding data row is inserted.</span></span> <span data-ttu-id="e7008-128">Wstawianie wartości kluczy generowanych przez wyzwalacz nie są obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="e7008-128">Insert trigger-generated key values are not supported.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDeclaredBy">
      <MemberSignature Language="C#" Value="public abstract bool IsDeclaredBy (System.Data.Linq.Mapping.MetaType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsDeclaredBy(class System.Data.Linq.Mapping.MetaType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.Mapping.MetaDataMember.IsDeclaredBy(System.Data.Linq.Mapping.MetaType)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function IsDeclaredBy (type As MetaType) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool IsDeclaredBy(System::Data::Linq::Mapping::MetaType ^ type);" />
      <MemberSignature Language="F#" Value="abstract member IsDeclaredBy : System.Data.Linq.Mapping.MetaType -&gt; bool" Usage="metaDataMember.IsDeclaredBy type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Data.Linq.Mapping.MetaType" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="e7008-129">Typ do sprawdzenia.</span><span class="sxs-lookup"><span data-stu-id="e7008-129">The type to check.</span></span></param>
        <summary><span data-ttu-id="e7008-130">Gdy jest zastępowany w klasie pochodnej, określa, czy ten element członkowski jest zadeklarowany przez określony typ.</span><span class="sxs-lookup"><span data-stu-id="e7008-130">When overridden in a derived class, specifies whether this member is declared by the specified type.</span></span></summary>
        <returns><span data-ttu-id="e7008-131"><see langword="true" />Jeśli ten element członkowski jest zadeklarowany przez określony typ; w przeciwnym razie. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="e7008-131"><see langword="true" /> if this member is declared by the specified type; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDeferred">
      <MemberSignature Language="C#" Value="public abstract bool IsDeferred { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDeferred" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.MetaDataMember.IsDeferred" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property IsDeferred As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property bool IsDeferred { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsDeferred : bool" Usage="System.Data.Linq.Mapping.MetaDataMember.IsDeferred" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e7008-132">Gdy jest zastępowany w klasie pochodnej, pobiera wartość wskazującą, czy domyślnym zachowaniem jest załadowanie tego elementu członkowskiego na podstawie odroczonej.</span><span class="sxs-lookup"><span data-stu-id="e7008-132">When overridden in a derived class, gets a value that indicates whether the default behavior is to load this member on a deferred basis.</span></span></summary>
        <value><span data-ttu-id="e7008-133"><see langword="true" />Jeśli ten element członkowski jest domyślnie ładowany na podstawie odroczonej, w przeciwnym razie. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="e7008-133"><see langword="true" /> if this member is loaded on a deferred basis by default; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDiscriminator">
      <MemberSignature Language="C#" Value="public abstract bool IsDiscriminator { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDiscriminator" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.MetaDataMember.IsDiscriminator" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property IsDiscriminator As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property bool IsDiscriminator { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsDiscriminator : bool" Usage="System.Data.Linq.Mapping.MetaDataMember.IsDiscriminator" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e7008-134">Gdy jest zastępowany w klasie pochodnej, pobiera wartość wskazującą, czy ten element członkowski reprezentuje rozróżniacz dziedziczenia.</span><span class="sxs-lookup"><span data-stu-id="e7008-134">When overridden in a derived class, gets a value that indicates whether this member represents the inheritance discriminator.</span></span></summary>
        <value><span data-ttu-id="e7008-135"><see langword="true" />Jeśli ten element członkowski reprezentuje rozróżniacz dziedziczenia; w przeciwnym razie. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="e7008-135"><see langword="true" /> if this member represents the inheritance discriminator; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e7008-136">Ta właściwość może mieć `true` co najwyżej jeden element członkowski zamapowanej klasy najwyższego poziomu w hierarchii.</span><span class="sxs-lookup"><span data-stu-id="e7008-136">This property can be `true` for at most one member of the topmost mapped class in a hierarchy.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsPersistent">
      <MemberSignature Language="C#" Value="public abstract bool IsPersistent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsPersistent" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.MetaDataMember.IsPersistent" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property IsPersistent As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property bool IsPersistent { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsPersistent : bool" Usage="System.Data.Linq.Mapping.MetaDataMember.IsPersistent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e7008-137">Gdy jest zastępowany w klasie pochodnej, pobiera wartość wskazującą, czy ten element członkowski jest mapowany do kolumny (lub ograniczenia).</span><span class="sxs-lookup"><span data-stu-id="e7008-137">When overridden in a derived class, gets a value that indicates whether this member is mapped to a column (or constraint).</span></span></summary>
        <value><span data-ttu-id="e7008-138"><see langword="true" />Jeśli ten element członkowski jest mapowany na kolumnę (lub ograniczenie); w przeciwnym razie. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="e7008-138"><see langword="true" /> if this member is mapped to a column (or constraint); otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e7008-139">Klasa może mieć kombinację trwałych i nietrwałych elementów członkowskich.</span><span class="sxs-lookup"><span data-stu-id="e7008-139">A class may have a combination of persistent and non-persistent members.</span></span> <span data-ttu-id="e7008-140">Trwałe składowe są mapowane, gdy elementy nietrwałe nie są zamapowane.</span><span class="sxs-lookup"><span data-stu-id="e7008-140">Persistent members are mapped while non-persistent members are not mapped.</span></span> <span data-ttu-id="e7008-141">Mapowana Klasa musi mieć co najmniej jedną trwałą składową.</span><span class="sxs-lookup"><span data-stu-id="e7008-141">A mapped class must have at least one persistent member.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsPrimaryKey">
      <MemberSignature Language="C#" Value="public abstract bool IsPrimaryKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsPrimaryKey" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.MetaDataMember.IsPrimaryKey" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property IsPrimaryKey As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property bool IsPrimaryKey { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsPrimaryKey : bool" Usage="System.Data.Linq.Mapping.MetaDataMember.IsPrimaryKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e7008-142">Gdy jest zastępowany w klasie pochodnej, pobiera wartość wskazującą, czy ten element członkowski jest częścią tożsamości typu.</span><span class="sxs-lookup"><span data-stu-id="e7008-142">When overridden in a derived class, gets a value that indicates whether this member is part of the type's identity.</span></span></summary>
        <value><span data-ttu-id="e7008-143"><see langword="true" />Jeśli ten element członkowski jest częścią tożsamości typu; w przeciwnym razie. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="e7008-143"><see langword="true" /> if this member is part of the type's identity; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e7008-144">Jeśli ta właściwość ma `true`wartość, element członkowski klasy reprezentuje kolumnę, która jest częścią unikatowego klucza tabeli.</span><span class="sxs-lookup"><span data-stu-id="e7008-144">If this property is `true`, the class member represents a column that is part of the table's unique key.</span></span> <span data-ttu-id="e7008-145">Więcej niż jeden element członkowski klasy może mieć tę właściwość ustawioną `true` dla klucza, który jest złożonym ze skojarzonych kolumn.</span><span class="sxs-lookup"><span data-stu-id="e7008-145">More than one member of the class can have this property set to `true` for a key that is a composite of the associated columns.</span></span> <span data-ttu-id="e7008-146">Dla klasy Entity co najmniej jeden element członkowski musi mieć ten atrybut i powinien być mapowany na klucz podstawowy lub unikatowy klucz w odpowiedniej tabeli lub widoku.</span><span class="sxs-lookup"><span data-stu-id="e7008-146">For an entity class, at least one member must have this attribute and should be mapped to the primary key or a unique key in the corresponding table or view.</span></span> <span data-ttu-id="e7008-147">W przeciwnym razie LINQ to SQL uznaje wystąpienia klasy jako tylko do odczytu na potrzeby przesyłania zmian do bazy danych.</span><span class="sxs-lookup"><span data-stu-id="e7008-147">Otherwise, LINQ to SQL considers instances of the class as read-only for the purpose of submitting changes to the database.</span></span>  
  
 <span data-ttu-id="e7008-148">Zestaw kolumn identyfikowanych za pomocą <xref:System.Data.Linq.Mapping.MetaDataMember.IsPrimaryKey%2A> nie musi być kluczem podstawowym.</span><span class="sxs-lookup"><span data-stu-id="e7008-148">The set of columns identified with <xref:System.Data.Linq.Mapping.MetaDataMember.IsPrimaryKey%2A> are not required to be the primary key.</span></span> <span data-ttu-id="e7008-149">Po prostu oznacza zestaw, który jednoznacznie identyfikuje jednostkę.</span><span class="sxs-lookup"><span data-stu-id="e7008-149">They simply denote a set that uniquely identifies the entity.</span></span> <span data-ttu-id="e7008-150">Typowe alternatywy obejmują kolumny indeksu klastrowania lub inne kolumny klucza unikatowego.</span><span class="sxs-lookup"><span data-stu-id="e7008-150">Common alternatives include clustering index columns or other unique key columns.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsVersion">
      <MemberSignature Language="C#" Value="public abstract bool IsVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsVersion" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.MetaDataMember.IsVersion" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property IsVersion As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property bool IsVersion { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsVersion : bool" Usage="System.Data.Linq.Mapping.MetaDataMember.IsVersion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e7008-151">Gdy jest zastępowany w klasie pochodnej, pobiera wartość wskazującą, czy ten element członkowski reprezentuje wersję wiersza, czy sygnaturę czasową.</span><span class="sxs-lookup"><span data-stu-id="e7008-151">When overridden in a derived class, gets a value that indicates whether this member represents the row version or timestamp.</span></span></summary>
        <value><span data-ttu-id="e7008-152"><see langword="true" />Jeśli ten element członkowski reprezentuje wersję wiersza lub sygnaturę czasową; w przeciwnym razie. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="e7008-152"><see langword="true" /> if this member represents the row version or timestamp; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e7008-153">Numery wersji są zwiększane, a kolumny sygnatur czasowych są aktualizowane za każdym razem, gdy skojarzony wiersz zostanie zaktualizowany.</span><span class="sxs-lookup"><span data-stu-id="e7008-153">Version numbers are incremented and timestamp columns are updated whenever the associated row is updated.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadMethod">
      <MemberSignature Language="C#" Value="public abstract System.Reflection.MethodInfo LoadMethod { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Reflection.MethodInfo LoadMethod" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.MetaDataMember.LoadMethod" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property LoadMethod As MethodInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Reflection::MethodInfo ^ LoadMethod { System::Reflection::MethodInfo ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.LoadMethod : System.Reflection.MethodInfo" Usage="System.Data.Linq.Mapping.MetaDataMember.LoadMethod" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e7008-154">Gdy jest zastępowany w klasie pochodnej, pobiera <see cref="T:System.Data.Linq.DataContext" /> metodę, która jest używana do wykonywania operacji ładowania.</span><span class="sxs-lookup"><span data-stu-id="e7008-154">When overridden in a derived class, gets the <see cref="T:System.Data.Linq.DataContext" /> method that is used to perform load operations.</span></span></summary>
        <value><span data-ttu-id="e7008-155">Metoda Load AS <see cref="T:System.Reflection.MethodInfo" />.</span><span class="sxs-lookup"><span data-stu-id="e7008-155">The load method as <see cref="T:System.Reflection.MethodInfo" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MappedName">
      <MemberSignature Language="C#" Value="public abstract string MappedName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MappedName" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.MetaDataMember.MappedName" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property MappedName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::String ^ MappedName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.MappedName : string" Usage="System.Data.Linq.Mapping.MetaDataMember.MappedName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e7008-156">Gdy jest zastępowany w klasie pochodnej, pobiera nazwę kolumny (lub ograniczenia) w bazie danych.</span><span class="sxs-lookup"><span data-stu-id="e7008-156">When overridden in a derived class, gets the name of the column (or constraint) in the database.</span></span></summary>
        <value><span data-ttu-id="e7008-157">Nazwa kolumny (lub ograniczenia) jako ciąg.</span><span class="sxs-lookup"><span data-stu-id="e7008-157">The name of the column (or constraint) as a string.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Member">
      <MemberSignature Language="C#" Value="public abstract System.Reflection.MemberInfo Member { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Reflection.MemberInfo Member" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.MetaDataMember.Member" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Member As MemberInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Reflection::MemberInfo ^ Member { System::Reflection::MemberInfo ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Member : System.Reflection.MemberInfo" Usage="System.Data.Linq.Mapping.MetaDataMember.Member" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MemberInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e7008-158">Gdy jest zastępowany w klasie pochodnej, pobiera bazowe <see cref="T:System.Reflection.MemberInfo" />.</span><span class="sxs-lookup"><span data-stu-id="e7008-158">When overridden in a derived class, gets the underlying <see cref="T:System.Reflection.MemberInfo" />.</span></span></summary>
        <value><span data-ttu-id="e7008-159">Informacje o atrybucie i metadanych elementu członkowskiego.</span><span class="sxs-lookup"><span data-stu-id="e7008-159">The member attribute and metadata information.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MemberAccessor">
      <MemberSignature Language="C#" Value="public abstract System.Data.Linq.Mapping.MetaAccessor MemberAccessor { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Linq.Mapping.MetaAccessor MemberAccessor" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.MetaDataMember.MemberAccessor" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property MemberAccessor As MetaAccessor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Data::Linq::Mapping::MetaAccessor ^ MemberAccessor { System::Data::Linq::Mapping::MetaAccessor ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.MemberAccessor : System.Data.Linq.Mapping.MetaAccessor" Usage="System.Data.Linq.Mapping.MetaDataMember.MemberAccessor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Linq.Mapping.MetaAccessor</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e7008-160">Gdy jest zastępowany w klasie pochodnej, pobiera metodę dostępu, która jest używana do pobierania lub ustawiania wartości tego elementu członkowskiego.</span><span class="sxs-lookup"><span data-stu-id="e7008-160">When overridden in a derived class, gets the accessor that is used to get or set the value of this member.</span></span></summary>
        <value><span data-ttu-id="e7008-161">Metoda dostępu.</span><span class="sxs-lookup"><span data-stu-id="e7008-161">The accessor.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public abstract string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.MetaDataMember.Name" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::String ^ Name { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="System.Data.Linq.Mapping.MetaDataMember.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e7008-162">Gdy jest zastępowany w klasie pochodnej, pobiera nazwę elementu członkowskiego, który jest taki sam jak <see cref="T:System.Reflection.MemberInfo" /> nazwa.</span><span class="sxs-lookup"><span data-stu-id="e7008-162">When overridden in a derived class, gets the name of the member, which is the same as the <see cref="T:System.Reflection.MemberInfo" /> name.</span></span></summary>
        <value><span data-ttu-id="e7008-163">Nazwa, która jest taka sama jak <see cref="T:System.Reflection.MemberInfo" /> nazwa.</span><span class="sxs-lookup"><span data-stu-id="e7008-163">The name, which is the same as the <see cref="T:System.Reflection.MemberInfo" /> name.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Ordinal">
      <MemberSignature Language="C#" Value="public abstract int Ordinal { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Ordinal" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.MetaDataMember.Ordinal" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Ordinal As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property int Ordinal { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Ordinal : int" Usage="System.Data.Linq.Mapping.MetaDataMember.Ordinal" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e7008-164">Gdy jest zastępowany w klasie pochodnej, pobiera pozycję porządkową tego elementu członkowskiego w domyślnym układzie wyników zapytania.</span><span class="sxs-lookup"><span data-stu-id="e7008-164">When overridden in a derived class, gets the ordinal position of this member in the default layout of query results.</span></span></summary>
        <value><span data-ttu-id="e7008-165">Pozycja porządkowa.</span><span class="sxs-lookup"><span data-stu-id="e7008-165">The ordinal position.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StorageAccessor">
      <MemberSignature Language="C#" Value="public abstract System.Data.Linq.Mapping.MetaAccessor StorageAccessor { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Linq.Mapping.MetaAccessor StorageAccessor" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.MetaDataMember.StorageAccessor" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property StorageAccessor As MetaAccessor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Data::Linq::Mapping::MetaAccessor ^ StorageAccessor { System::Data::Linq::Mapping::MetaAccessor ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.StorageAccessor : System.Data.Linq.Mapping.MetaAccessor" Usage="System.Data.Linq.Mapping.MetaDataMember.StorageAccessor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Linq.Mapping.MetaAccessor</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e7008-166">Gdy jest zastępowany w klasie pochodnej, pobiera metodę dostępu, która jest używana do pobierania lub ustawiania wartości magazynu tego elementu członkowskiego.</span><span class="sxs-lookup"><span data-stu-id="e7008-166">When overridden in a derived class, gets the accessor that is used to get or set the storage value of this member.</span></span></summary>
        <value><span data-ttu-id="e7008-167">Metoda dostępu dla wartości magazynu tego elementu członkowskiego.</span><span class="sxs-lookup"><span data-stu-id="e7008-167">The accessor for the storage value of this member.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StorageMember">
      <MemberSignature Language="C#" Value="public abstract System.Reflection.MemberInfo StorageMember { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Reflection.MemberInfo StorageMember" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.MetaDataMember.StorageMember" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property StorageMember As MemberInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Reflection::MemberInfo ^ StorageMember { System::Reflection::MemberInfo ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.StorageMember : System.Reflection.MemberInfo" Usage="System.Data.Linq.Mapping.MetaDataMember.StorageMember" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MemberInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e7008-168">Gdy jest zastępowany w klasie pochodnej, pobiera element członkowski, który przechowuje dane dla tego elementu członkowskiego.</span><span class="sxs-lookup"><span data-stu-id="e7008-168">When overridden in a derived class, gets the member that stores the data for this member.</span></span></summary>
        <value><span data-ttu-id="e7008-169">Składowa magazynu.</span><span class="sxs-lookup"><span data-stu-id="e7008-169">The storage member.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Type">
      <MemberSignature Language="C#" Value="public abstract Type Type { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type Type" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.MetaDataMember.Type" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Type As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property Type ^ Type { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Type : Type" Usage="System.Data.Linq.Mapping.MetaDataMember.Type" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e7008-170">Gdy jest zastępowany w klasie pochodnej, pobiera typ tego elementu członkowskiego.</span><span class="sxs-lookup"><span data-stu-id="e7008-170">When overridden in a derived class, gets the type of this member.</span></span></summary>
        <value><span data-ttu-id="e7008-171">Typ bieżącego elementu członkowskiego.</span><span class="sxs-lookup"><span data-stu-id="e7008-171">The type of the current member.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateCheck">
      <MemberSignature Language="C#" Value="public abstract System.Data.Linq.Mapping.UpdateCheck UpdateCheck { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.Linq.Mapping.UpdateCheck UpdateCheck" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.MetaDataMember.UpdateCheck" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property UpdateCheck As UpdateCheck" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Data::Linq::Mapping::UpdateCheck UpdateCheck { System::Data::Linq::Mapping::UpdateCheck get(); };" />
      <MemberSignature Language="F#" Value="member this.UpdateCheck : System.Data.Linq.Mapping.UpdateCheck" Usage="System.Data.Linq.Mapping.MetaDataMember.UpdateCheck" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Linq.Mapping.UpdateCheck</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e7008-172">Gdy jest zastępowany w klasie pochodnej, pobiera zasady optymistycznego sprawdzania współbieżności dla tego elementu członkowskiego.</span><span class="sxs-lookup"><span data-stu-id="e7008-172">When overridden in a derived class, gets the optimistic concurrency check policy for this member.</span></span></summary>
        <value><span data-ttu-id="e7008-173">Jedna z wartości wyliczenia, która wskazuje zasady optymistycznej kontroli współbieżności dla tego elementu członkowskiego.</span><span class="sxs-lookup"><span data-stu-id="e7008-173">One of the enumeration values that indicates the optimistic concurrency check policy for this member.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e7008-174">Jeśli Klasa nie ma składowej wersji (<xref:System.Data.Linq.Mapping.MetaDataMember.IsVersion%2A> ustawionej na `true`), wykrywanie odbywa się przez porównanie oryginalnych wartości elementów członkowskich z bieżącym stanem bazy danych.</span><span class="sxs-lookup"><span data-stu-id="e7008-174">If the class does not have a version member (<xref:System.Data.Linq.Mapping.MetaDataMember.IsVersion%2A> set to `true`), detection is done by comparing original member values with the current database state.</span></span>  
  
 <span data-ttu-id="e7008-175">Właściwość <xref:System.Data.Linq.Mapping.MetaDataMember.UpdateCheck%2A> określa, w jaki sposób LINQ to SQL implementuje wykrywanie konfliktów w ramach optymistycznej współbieżności.</span><span class="sxs-lookup"><span data-stu-id="e7008-175">The <xref:System.Data.Linq.Mapping.MetaDataMember.UpdateCheck%2A> property determines how LINQ to SQL implements conflict detection under optimistic concurrency.</span></span> <span data-ttu-id="e7008-176">Tylko te elementy członkowskie z tą właściwością <xref:System.Data.Linq.Mapping.UpdateCheck.Always> mają <xref:System.Data.Linq.Mapping.UpdateCheck.WhenChanged> ustawioną wartość lub są brane pod uwagę podczas wykrywania konfliktów.</span><span class="sxs-lookup"><span data-stu-id="e7008-176">Only those members with this property set to <xref:System.Data.Linq.Mapping.UpdateCheck.Always> or <xref:System.Data.Linq.Mapping.UpdateCheck.WhenChanged> are considered during conflict detection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
