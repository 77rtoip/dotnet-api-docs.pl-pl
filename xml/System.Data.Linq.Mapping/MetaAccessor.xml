<Type Name="MetaAccessor" FullName="System.Data.Linq.Mapping.MetaAccessor">
  <TypeSignature Language="C#" Value="public abstract class MetaAccessor" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit MetaAccessor extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Data.Linq.Mapping.MetaAccessor" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class MetaAccessor" />
  <TypeSignature Language="C++ CLI" Value="public ref class MetaAccessor abstract" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Linq</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="25f0d-101">Reprezentuje metody dostępu do elementu członkowskiego.</span><span class="sxs-lookup"><span data-stu-id="25f0d-101">Represents an accessor to a member.</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected MetaAccessor ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.Mapping.MetaAccessor.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; MetaAccessor();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="25f0d-102">Inicjuje nowe wystąpienie klasy <see cref="T:System.Data.Linq.Mapping.MetaAccessor" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="25f0d-102">Initializes a new instance of the <see cref="T:System.Data.Linq.Mapping.MetaAccessor" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetBoxedValue">
      <MemberSignature Language="C#" Value="public abstract object GetBoxedValue (object instance);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetBoxedValue(object instance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.Mapping.MetaAccessor.GetBoxedValue(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetBoxedValue (instance As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Object ^ GetBoxedValue(System::Object ^ instance);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="instance"><span data-ttu-id="25f0d-103">Wystąpienie, z którego można uzyskać wartość lub na którym można ustawić wartości.</span><span class="sxs-lookup"><span data-stu-id="25f0d-103">The instance from which to get the value or on which to set the value.</span></span></param>
        <summary><span data-ttu-id="25f0d-104">Określa obiekt, w którym można ustawić wartość lub z którego można pobrać wartości.</span><span class="sxs-lookup"><span data-stu-id="25f0d-104">Specifies an object on which to set a value or from which to get a value.</span></span></summary>
        <returns><span data-ttu-id="25f0d-105">Wartości spakowanej tego wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="25f0d-105">The boxed value of this instance.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasAssignedValue">
      <MemberSignature Language="C#" Value="public virtual bool HasAssignedValue (object instance);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool HasAssignedValue(object instance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.Mapping.MetaAccessor.HasAssignedValue(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function HasAssignedValue (instance As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool HasAssignedValue(System::Object ^ instance);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="instance"><span data-ttu-id="25f0d-106">Wystąpienie są czyszczone.</span><span class="sxs-lookup"><span data-stu-id="25f0d-106">The instance being looked at.</span></span></param>
        <summary><span data-ttu-id="25f0d-107">Określa, czy wystąpienie ma przypisaną wartość.</span><span class="sxs-lookup"><span data-stu-id="25f0d-107">Specifies whether the instance has an assigned value.</span></span></summary>
        <returns>
          <span data-ttu-id="25f0d-108"><see langword="true" /> Jeśli to wystąpienie ma obecnie przypisanej wartości; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="25f0d-108"><see langword="true" /> if the instance currently has an assigned value; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasLoadedValue">
      <MemberSignature Language="C#" Value="public virtual bool HasLoadedValue (object instance);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool HasLoadedValue(object instance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.Mapping.MetaAccessor.HasLoadedValue(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function HasLoadedValue (instance As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool HasLoadedValue(System::Object ^ instance);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="instance"><span data-ttu-id="25f0d-109">Wystąpienie są czyszczone.</span><span class="sxs-lookup"><span data-stu-id="25f0d-109">The instance being looked at.</span></span></param>
        <summary><span data-ttu-id="25f0d-110">Określa, czy wystąpienie ma wartość załadowane z opóźnieniem źródła.</span><span class="sxs-lookup"><span data-stu-id="25f0d-110">Specifies whether the instance has a value loaded from a deferred source.</span></span></summary>
        <returns>
          <span data-ttu-id="25f0d-111"><see langword="true" /> Jeśli wystąpienie ma obecnie wartość załadowane z opóźnieniem źródła; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="25f0d-111"><see langword="true" /> if the instance currently has a value loaded from a deferred source; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasValue">
      <MemberSignature Language="C#" Value="public virtual bool HasValue (object instance);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool HasValue(object instance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.Mapping.MetaAccessor.HasValue(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function HasValue (instance As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool HasValue(System::Object ^ instance);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="instance"><span data-ttu-id="25f0d-112">Wystąpienie są czyszczone.</span><span class="sxs-lookup"><span data-stu-id="25f0d-112">The instance being looked at.</span></span></param>
        <summary><span data-ttu-id="25f0d-113">Określa, czy wystąpienie ma załadowany lub przypisanej wartości.</span><span class="sxs-lookup"><span data-stu-id="25f0d-113">Specifies whether the instance has a loaded or assigned value.</span></span></summary>
        <returns>
          <span data-ttu-id="25f0d-114"><see langword="true" /> Jeśli to wystąpienie ma obecnie załadowany lub przypisanej wartości; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="25f0d-114"><see langword="true" /> if the instance currently has a loaded or assigned value; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetBoxedValue">
      <MemberSignature Language="C#" Value="public abstract void SetBoxedValue (ref object instance, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetBoxedValue(object&amp; instance, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.Mapping.MetaAccessor.SetBoxedValue(System.Object@,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub SetBoxedValue (ByRef instance As Object, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void SetBoxedValue(System::Object ^ % instance, System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="instance"><span data-ttu-id="25f0d-115">Wystąpienie, w którym można ustawić wartości.</span><span class="sxs-lookup"><span data-stu-id="25f0d-115">The instance into which to set the value.</span></span></param>
        <param name="value"><span data-ttu-id="25f0d-116">Wartość do ustawienia.</span><span class="sxs-lookup"><span data-stu-id="25f0d-116">The value to set.</span></span></param>
        <summary><span data-ttu-id="25f0d-117">Ustawia wartość jak dla obiektu.</span><span class="sxs-lookup"><span data-stu-id="25f0d-117">Sets the value as an object.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Type">
      <MemberSignature Language="C#" Value="public abstract Type Type { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type Type" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.MetaAccessor.Type" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Type As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property Type ^ Type { Type ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="25f0d-118">Pobiera typ elementu członkowskiego, dostęp do tej metody dostępu.</span><span class="sxs-lookup"><span data-stu-id="25f0d-118">Gets the type of the member accessed by this accessor.</span></span></summary>
        <value><span data-ttu-id="25f0d-119">Typ elementu członkowskiego.</span><span class="sxs-lookup"><span data-stu-id="25f0d-119">The type of the member.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>