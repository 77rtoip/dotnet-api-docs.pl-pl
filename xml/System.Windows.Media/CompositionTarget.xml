<Type Name="CompositionTarget" FullName="System.Windows.Media.CompositionTarget">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="e179c1a6efc2c24dbd1e42f2c54bffeec439e2dd" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36469393" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class CompositionTarget : System.Windows.Threading.DispatcherObject, IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit CompositionTarget extends System.Windows.Threading.DispatcherObject implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Media.CompositionTarget" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class CompositionTarget&#xA;Inherits DispatcherObject&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class CompositionTarget abstract : System::Windows::Threading::DispatcherObject, IDisposable" />
  <TypeSignature Language="F#" Value="type CompositionTarget = class&#xA;    inherit DispatcherObject&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Threading.DispatcherObject</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="1fe34-101">Reprezentuje obszar wyświetlania aplikacji.</span>
      <span class="sxs-lookup">
        <span data-stu-id="1fe34-101">Represents the display surface of your application.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1fe34-102"><xref:System.Windows.Media.CompositionTarget> jest klasa, która reprezentuje powierzchni ekranu, na którym aplikacja jest rysowane.</span><span class="sxs-lookup"><span data-stu-id="1fe34-102"><xref:System.Windows.Media.CompositionTarget> is a class that represents the display surface on which your application is being drawn.</span></span> <span data-ttu-id="1fe34-103">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] Aparat animacji zapewnia wiele funkcji do tworzenia opartych na ramki animacji.</span><span class="sxs-lookup"><span data-stu-id="1fe34-103">The [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] animation engine provides many features for creating frame-based animation.</span></span> <span data-ttu-id="1fe34-104">Istnieją jednak scenariuszy aplikacji, w których należy kontrolę nad renderowania na podstawie na ramki.</span><span class="sxs-lookup"><span data-stu-id="1fe34-104">However, there are application scenarios in which you need control over rendering on a per frame basis.</span></span> <span data-ttu-id="1fe34-105"><xref:System.Windows.Media.CompositionTarget> Obiekt zapewnia możliwość tworzenia niestandardowych animacje oparte na wywołanie zwrotne na ramki.</span><span class="sxs-lookup"><span data-stu-id="1fe34-105">The <xref:System.Windows.Media.CompositionTarget> object provides the ability to create custom animations based on a per-frame callback.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="1fe34-106">Na przykład kompletny kod przy użyciu <xref:System.Windows.Media.CompositionTarget>, zobacz [przy użyciu przykładowych CompositionTarget](http://go.microsoft.com/fwlink/?LinkID=160045).</span><span class="sxs-lookup"><span data-stu-id="1fe34-106">For a complete code sample using <xref:System.Windows.Media.CompositionTarget>, see [Using the CompositionTarget Sample](http://go.microsoft.com/fwlink/?LinkID=160045).</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public virtual void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.CompositionTarget.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="compositionTarget.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="1fe34-107">Usuwa <see cref="T:System.Windows.Media.CompositionTarget" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1fe34-107">Disposes <see cref="T:System.Windows.Media.CompositionTarget" />.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Rendering">
      <MemberSignature Language="C#" Value="public static event EventHandler Rendering;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Rendering" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Media.CompositionTarget.Rendering" />
      <MemberSignature Language="VB.NET" Value="Public Shared Custom Event Rendering As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static event EventHandler ^ Rendering;" />
      <MemberSignature Language="F#" Value="member this.Rendering : EventHandler " Usage="member this.Rendering : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1fe34-108">Występuje tuż przed renderowaniem są obiektów w drzewie kompozycji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1fe34-108">Occurs just before the objects in the composition tree are rendered.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1fe34-109"><xref:System.Windows.Media.CompositionTarget.Rendering> Zdarzeń jest kierowany do obsługi określonego zdarzenia, po zastosowaniu do drzewa kompozycji animacji i układu.</span><span class="sxs-lookup"><span data-stu-id="1fe34-109">The <xref:System.Windows.Media.CompositionTarget.Rendering> event is routed to the specified event handler after animation and layout have been applied to the composition tree.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1fe34-110"><xref:System.Windows.Media.CompositionTarget.Rendering> Zdarzenie jest wywoływane podczas [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] proces renderowania.</span><span class="sxs-lookup"><span data-stu-id="1fe34-110">The <xref:System.Windows.Media.CompositionTarget.Rendering> event is raised during the [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] rendering process.</span></span> <span data-ttu-id="1fe34-111">W poniższym przykładzie pokazano, jak zarejestrować <xref:System.EventHandler> przekazać statycznego <xref:System.Windows.Media.CompositionTarget.Rendering> metoda <xref:System.Windows.Media.CompositionTarget>.</span><span class="sxs-lookup"><span data-stu-id="1fe34-111">The following example shows how you register an <xref:System.EventHandler> delegate to the static <xref:System.Windows.Media.CompositionTarget.Rendering> method on <xref:System.Windows.Media.CompositionTarget>.</span></span>  
  
 [!code-csharp[CompositionTargetSample#CompositionTarget1](~/samples/snippets/csharp/VS_Snippets_Wpf/CompositionTargetSample/CSharp/Window1.xaml.cs#compositiontarget1)]
 [!code-vb[CompositionTargetSample#CompositionTarget1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/CompositionTargetSample/visualbasic/window1.xaml.vb#compositiontarget1)]  
  
 <span data-ttu-id="1fe34-112">Do tworzenia niestandardowych rysowania zawartości, można użyć obsługi zdarzenia renderowania.</span><span class="sxs-lookup"><span data-stu-id="1fe34-112">You can use your rendering event handler to create custom drawing content.</span></span> <span data-ttu-id="1fe34-113">Ten program obsługi zdarzeń jest wywoływana raz na klatkę.</span><span class="sxs-lookup"><span data-stu-id="1fe34-113">This event handler gets called once per frame.</span></span> <span data-ttu-id="1fe34-114">Każdej aktualizacji [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] marshals danych utrwalonych renderowania w drzewie wizualnym w drzewie kompozycji obsługi zdarzenia jest wywoływana.</span><span class="sxs-lookup"><span data-stu-id="1fe34-114">Each time that [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] marshals the persisted rendering data in the visual tree across to the composition tree, your event handler is called.</span></span> <span data-ttu-id="1fe34-115">Ponadto zmiany do drzewa wizualnego wymuszenia aktualizacji do drzewa kompozycji, jest również nazywany obsługi zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="1fe34-115">In addition, if changes to the visual tree force updates to the composition tree, your event handler is also called.</span></span> <span data-ttu-id="1fe34-116">Należy pamiętać, że obsługi zdarzenia jest wywoływana po układ został obliczony.</span><span class="sxs-lookup"><span data-stu-id="1fe34-116">Note that your event handler is called after layout has been computed.</span></span> <span data-ttu-id="1fe34-117">Jednak w obsłudze zdarzeń, co oznacza, że taki układ będzie obliczana raz przed renderowaniem można modyfikować układu.</span><span class="sxs-lookup"><span data-stu-id="1fe34-117">However, you can modify layout in your event handler, which means that layout will be computed once more before rendering.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RootVisual">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Media.Visual RootVisual { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.Visual RootVisual" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.CompositionTarget.RootVisual" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property RootVisual As Visual" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Media::Visual ^ RootVisual { System::Windows::Media::Visual ^ get(); void set(System::Windows::Media::Visual ^ value); };" />
      <MemberSignature Language="F#" Value="member this.RootVisual : System.Windows.Media.Visual with get, set" Usage="System.Windows.Media.CompositionTarget.RootVisual" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Visual</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1fe34-118">Pobiera lub ustawia katalog główny visual z <see cref="T:System.Windows.Media.CompositionTarget" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1fe34-118">Gets or sets the root visual of the <see cref="T:System.Windows.Media.CompositionTarget" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1fe34-119">Element wizualny głównego z <see cref="T:System.Windows.Media.CompositionTarget" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1fe34-119">The root visual of the <see cref="T:System.Windows.Media.CompositionTarget" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <span data-ttu-id="1fe34-120">do ustawiania katalog główny visual z <see cref="T:System.Windows.Media.CompositionTarget" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1fe34-120">for setting the root visual of the <see cref="T:System.Windows.Media.CompositionTarget" />.</span>
          </span>
          <span data-ttu-id="1fe34-121">Wyliczenia skojarzone: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="1fe34-121">Associated enumerations: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="TransformFromDevice">
      <MemberSignature Language="C#" Value="public abstract System.Windows.Media.Matrix TransformFromDevice { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Media.Matrix TransformFromDevice" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.CompositionTarget.TransformFromDevice" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property TransformFromDevice As Matrix" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Windows::Media::Matrix TransformFromDevice { System::Windows::Media::Matrix get(); };" />
      <MemberSignature Language="F#" Value="member this.TransformFromDevice : System.Windows.Media.Matrix" Usage="System.Windows.Media.CompositionTarget.TransformFromDevice" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Matrix</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1fe34-122">Pobiera macierzy, który może służyć do przekształcenia współrzędnych urządzenia docelowego renderowania do tego obiektu docelowego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1fe34-122">Gets a matrix that can be used to transform coordinates from the rendering destination device to this target.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1fe34-123">Macierzy transformacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1fe34-123">The transformation matrix.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TransformToDevice">
      <MemberSignature Language="C#" Value="public abstract System.Windows.Media.Matrix TransformToDevice { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Media.Matrix TransformToDevice" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.CompositionTarget.TransformToDevice" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property TransformToDevice As Matrix" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Windows::Media::Matrix TransformToDevice { System::Windows::Media::Matrix get(); };" />
      <MemberSignature Language="F#" Value="member this.TransformToDevice : System.Windows.Media.Matrix" Usage="System.Windows.Media.CompositionTarget.TransformToDevice" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Matrix</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1fe34-124">Pobiera macierzy, który może służyć do przekształcenia współrzędnych z tego miejsca docelowego do urządzenia docelowego renderowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1fe34-124">Gets a matrix that can be used to transform coordinates from this target to the rendering destination device.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1fe34-125">Macierzy transformacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1fe34-125">The transformation matrix.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>