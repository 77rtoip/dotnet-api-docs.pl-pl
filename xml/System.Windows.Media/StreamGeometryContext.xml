<Type Name="StreamGeometryContext" FullName="System.Windows.Media.StreamGeometryContext">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="a6f5cb4bb57ba2bec96f712ec8278bf9a384b78d" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30712319" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class StreamGeometryContext : System.Windows.Threading.DispatcherObject, IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit StreamGeometryContext extends System.Windows.Threading.DispatcherObject implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Media.StreamGeometryContext" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class StreamGeometryContext&#xA;Inherits DispatcherObject&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class StreamGeometryContext abstract : System::Windows::Threading::DispatcherObject, IDisposable" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Threading.DispatcherObject</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>W tym artykule opisano geometry, za pomocą polecenia rysowania. Ta klasa jest używana z <see cref="T:System.Windows.Media.StreamGeometry" /> klasy w celu utworzenia lekkie geometrię, która nie obsługuje wiązania danych, animacji lub modyfikacji.</summary>
    <remarks>To be added.</remarks>
    <exception cref="T:System.InvalidOperationException">Próbowano dodać segment bez uruchamiania rysunku przez wywołanie metody <see cref="M:System.Windows.Media.StreamGeometryContext.BeginFigure(System.Windows.Point,System.Boolean,System.Boolean)" /> metody.</exception>
    <altmember cref="T:System.Windows.Media.StreamGeometry" />
    <altmember cref="T:System.Windows.Media.PathGeometry" />
  </Docs>
  <Members>
    <Member MemberName="ArcTo">
      <MemberSignature Language="C#" Value="public abstract void ArcTo (System.Windows.Point point, System.Windows.Size size, double rotationAngle, bool isLargeArc, System.Windows.Media.SweepDirection sweepDirection, bool isStroked, bool isSmoothJoin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ArcTo(valuetype System.Windows.Point point, valuetype System.Windows.Size size, float64 rotationAngle, bool isLargeArc, valuetype System.Windows.Media.SweepDirection sweepDirection, bool isStroked, bool isSmoothJoin) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.StreamGeometryContext.ArcTo(System.Windows.Point,System.Windows.Size,System.Double,System.Boolean,System.Windows.Media.SweepDirection,System.Boolean,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void ArcTo(System::Windows::Point point, System::Windows::Size size, double rotationAngle, bool isLargeArc, System::Windows::Media::SweepDirection sweepDirection, bool isStroked, bool isSmoothJoin);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point" Type="System.Windows.Point" />
        <Parameter Name="size" Type="System.Windows.Size" />
        <Parameter Name="rotationAngle" Type="System.Double" />
        <Parameter Name="isLargeArc" Type="System.Boolean" />
        <Parameter Name="sweepDirection" Type="System.Windows.Media.SweepDirection" />
        <Parameter Name="isStroked" Type="System.Boolean" />
        <Parameter Name="isSmoothJoin" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="point">Docelowego punktu końcowego łuku.</param>
        <param name="size">Promień (pełnej szerokości i wysokości połowy) elipsy, których obwód jest używany do rysowania kąta. Dlatego w przypadku bardzo zaokrąglony we wszystkich kierunkach oval łuk zostanie zaokrąglony, jeśli jest niemal płaskiej będzie łuk. Na przykład bardzo dużych szerokości i wysokości czy reprezentują bardzo dużych oval, która pozwoli uzyskać nieznaczne łuku dla kąta.</param>
        <param name="rotationAngle">Kąt obrotu oval, która określa krzywą. Można obracać łuku łuku z tym parametrem.</param>
        <param name="isLargeArc">
          <see langword="true" /> Rysowanie łuku większa niż 180 stopni; w przeciwnym razie <see langword="false" />.</param>
        <param name="sweepDirection">Wartość wskazująca, czy łuku <see cref="F:System.Windows.Media.SweepDirection.Clockwise" /> lub <see cref="F:System.Windows.Media.SweepDirection.Counterclockwise" /> kierunku.</param>
        <param name="isStroked">
          <see langword="true" /> Aby segmentu malowania, kiedy <see cref="T:System.Windows.Media.Pen" /> jest używany do renderowania segmentu; w przeciwnym razie <see langword="false" />.</param>
        <param name="isSmoothJoin">
          <see langword="true" /> traktowanie sprzężenie ten segment i poprzedniego segmentu jako rogu podczas malowania z <see cref="T:System.Windows.Media.Pen" />; w przeciwnym razie <see langword="false" />.</param>
        <summary>Rysuje łuk do określonego punktu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda używa punktu końcowego poprzedniego segmentu jako punktu początkowego. Jeśli jest to pierwszy segment rysunku, wykorzystuje określony przez punkt <xref:System.Windows.Media.StreamGeometryContext.BeginFigure%2A> metodę jako jego punkt początkowy.  
  
 A <xref:System.Windows.Media.StreamGeometry> nie może być serializowany, jeśli zawiera on <xref:System.Windows.Media.Transform> lub dowolnej innej niż malowania lub bez segmentów.  
  
   
  
## Examples  
 Poniższy przykład przedstawia sposób rysowanie przy użyciu łuk <xref:System.Windows.Media.StreamGeometryContext.ArcTo%2A> metody.  
  
 [!code-csharp[GeometriesMiscSnippets_procedural_snip#StreamGeometryArcToExampleWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/GeometriesMiscSnippets_procedural_snip/CSharp/StreamGeometryArcToExample.cs#streamgeometryarctoexamplewholepage)]
 [!code-vb[GeometriesMiscSnippets_procedural_snip#StreamGeometryArcToExampleWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/GeometriesMiscSnippets_procedural_snip/visualbasic/streamgeometryarctoexample.vb#streamgeometryarctoexamplewholepage)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Media.StreamGeometryContext.BezierTo(System.Windows.Point,System.Windows.Point,System.Windows.Point,System.Boolean,System.Boolean)" />
        <altmember cref="M:System.Windows.Media.StreamGeometryContext.PolyBezierTo(System.Collections.Generic.IList{System.Windows.Point},System.Boolean,System.Boolean)" />
        <altmember cref="M:System.Windows.Media.StreamGeometryContext.QuadraticBezierTo(System.Windows.Point,System.Windows.Point,System.Boolean,System.Boolean)" />
        <altmember cref="M:System.Windows.Media.StreamGeometryContext.PolyQuadraticBezierTo(System.Collections.Generic.IList{System.Windows.Point},System.Boolean,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="BeginFigure">
      <MemberSignature Language="C#" Value="public abstract void BeginFigure (System.Windows.Point startPoint, bool isFilled, bool isClosed);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void BeginFigure(valuetype System.Windows.Point startPoint, bool isFilled, bool isClosed) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.StreamGeometryContext.BeginFigure(System.Windows.Point,System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub BeginFigure (startPoint As Point, isFilled As Boolean, isClosed As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void BeginFigure(System::Windows::Point startPoint, bool isFilled, bool isClosed);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startPoint" Type="System.Windows.Point" />
        <Parameter Name="isFilled" Type="System.Boolean" />
        <Parameter Name="isClosed" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="startPoint">
          <see cref="T:System.Windows.Point" /> Którym rozpoczyna się wartość.</param>
        <param name="isFilled">
          <see langword="true" /> Aby użyć obszaru zawarty w tę wartość do testowania trafień, renderowania i wycinka; w przeciwnym razie <see langword="false" />.</param>
        <param name="isClosed">
          <see langword="true" /> Aby zamknąć rysunek; w przeciwnym razie <see langword="false" />. Na przykład, jeśli dwie linie łączące są wyświetlane i <c>isClosed</c> ustawiono <see langword="false" />, rysunek będzie działać z dwóch wierszy, ale jeśli <c>isClosed</c> ma ustawioną wartość <see langword="true" />, dwa wiersze zostaną zamknięte, aby Utwórz trójkąt.</param>
        <summary>Określa punkt początkowy dla nowego rysunku.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wywołanie tej metody wiele razy, można utworzyć wiele wartości (niezależne kształtów geometrycznych) w ramach tego <xref:System.Windows.Media.StreamGeometryContext>.  
  
 A <xref:System.Windows.Media.StreamGeometry> nie może być serializowany, jeśli zawiera on <xref:System.Windows.Media.Transform> lub dowolnej innej niż malowania lub bez segmentów.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BezierTo">
      <MemberSignature Language="C#" Value="public abstract void BezierTo (System.Windows.Point point1, System.Windows.Point point2, System.Windows.Point point3, bool isStroked, bool isSmoothJoin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void BezierTo(valuetype System.Windows.Point point1, valuetype System.Windows.Point point2, valuetype System.Windows.Point point3, bool isStroked, bool isSmoothJoin) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.StreamGeometryContext.BezierTo(System.Windows.Point,System.Windows.Point,System.Windows.Point,System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub BezierTo (point1 As Point, point2 As Point, point3 As Point, isStroked As Boolean, isSmoothJoin As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void BezierTo(System::Windows::Point point1, System::Windows::Point point2, System::Windows::Point point3, bool isStroked, bool isSmoothJoin);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point1" Type="System.Windows.Point" />
        <Parameter Name="point2" Type="System.Windows.Point" />
        <Parameter Name="point3" Type="System.Windows.Point" />
        <Parameter Name="isStroked" Type="System.Boolean" />
        <Parameter Name="isSmoothJoin" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="point1">Pierwszy punkt kontrolny, używany do określenia kształt krzywej.</param>
        <param name="point2">Drugi punkt kontrolny, używany do określenia kształt krzywej.</param>
        <param name="point3">Docelowego punktu końcowego krzywej.</param>
        <param name="isStroked">
          <see langword="true" /> Aby segmentu malowania, kiedy <see cref="T:System.Windows.Media.Pen" /> jest używany do renderowania segmentu; w przeciwnym razie <see langword="false" />.</param>
        <param name="isSmoothJoin">
          <see langword="true" /> traktowanie sprzężenie ten segment i poprzedniego segmentu jako rogu podczas malowania z <see cref="T:System.Windows.Media.Pen" />; w przeciwnym razie <see langword="false" />.</param>
        <summary>Rysuje krzywą Beziera do określonego punktu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Trzeciego krzywej Beziera jest zdefiniowana przez punkt początkowy i punkt końcowy, dwa punkty kontrolne. Określa, pierwszy punkt kontrolny łuku z pierwszej połowy segmentu, a drugi punkt kontrolny określa łuku dla drugiej połowie segmentu.  
  
 Ta metoda używa punktu końcowego poprzedniego segmentu jako punktu początkowego. Jeśli jest to pierwszy segment rysunku, wykorzystuje określony przez punkt <xref:System.Windows.Media.StreamGeometryContext.BeginFigure%2A> metodę jako jego punkt początkowy.  
  
 A <xref:System.Windows.Media.StreamGeometry> nie może być serializowany, jeśli zawiera on <xref:System.Windows.Media.Transform> lub dowolnej innej niż malowania lub bez segmentów.  
  
   
  
## Examples  
 Poniższy przykład przedstawia sposób Rysowanie krzywych Beziera przy użyciu <xref:System.Windows.Media.StreamGeometryContext.BezierTo%2A> metody.  
  
 [!code-csharp[GeometriesMiscSnippets_procedural_snip#StreamGeometryBezierToExampleWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/GeometriesMiscSnippets_procedural_snip/CSharp/StreamGeometryBezierToExample.cs#streamgeometrybeziertoexamplewholepage)]
 [!code-vb[GeometriesMiscSnippets_procedural_snip#StreamGeometryBezierToExampleWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/GeometriesMiscSnippets_procedural_snip/visualbasic/streamgeometrybeziertoexample.vb#streamgeometrybeziertoexamplewholepage)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Próbowano dodać segment bez uruchamiania rysunku przez wywołanie metody <see cref="M:System.Windows.Media.StreamGeometryContext.BeginFigure(System.Windows.Point,System.Boolean,System.Boolean)" /> metody.</exception>
        <altmember cref="M:System.Windows.Media.StreamGeometryContext.ArcTo(System.Windows.Point,System.Windows.Size,System.Double,System.Boolean,System.Windows.Media.SweepDirection,System.Boolean,System.Boolean)" />
        <altmember cref="M:System.Windows.Media.StreamGeometryContext.PolyBezierTo(System.Collections.Generic.IList{System.Windows.Point},System.Boolean,System.Boolean)" />
        <altmember cref="M:System.Windows.Media.StreamGeometryContext.QuadraticBezierTo(System.Windows.Point,System.Windows.Point,System.Boolean,System.Boolean)" />
        <altmember cref="M:System.Windows.Media.StreamGeometryContext.PolyQuadraticBezierTo(System.Collections.Generic.IList{System.Windows.Point},System.Boolean,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public virtual void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.StreamGeometryContext.Close" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Close();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zamknięcie tego kontekstu i opróżnia jego zawartości, dzięki czemu mogą być renderowane.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Po zamknięciu, kontekst nie można modyfikować. Kontekst muszą być zamknięte przed jego zawartość ma być renderowany.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">Ten kontekst został już zamknięty lub usunięty.</exception>
      </Docs>
    </Member>
    <Member MemberName="LineTo">
      <MemberSignature Language="C#" Value="public abstract void LineTo (System.Windows.Point point, bool isStroked, bool isSmoothJoin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void LineTo(valuetype System.Windows.Point point, bool isStroked, bool isSmoothJoin) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.StreamGeometryContext.LineTo(System.Windows.Point,System.Boolean,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void LineTo(System::Windows::Point point, bool isStroked, bool isSmoothJoin);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point" Type="System.Windows.Point" />
        <Parameter Name="isStroked" Type="System.Boolean" />
        <Parameter Name="isSmoothJoin" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="point">Punkt docelowy końca wiersza.</param>
        <param name="isStroked">
          <see langword="true" /> Aby segmentu malowania, kiedy <see cref="T:System.Windows.Media.Pen" /> jest używany do renderowania segmentu; w przeciwnym razie <see langword="false" />.</param>
        <param name="isSmoothJoin">
          <see langword="true" /> traktowanie sprzężenie ten segment i poprzedniego segmentu jako rogu podczas malowania z <see cref="T:System.Windows.Media.Pen" />; w przeciwnym razie <see langword="false" />.</param>
        <summary>Rysuje linię prostą do określonego <see cref="T:System.Windows.Point" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda używa punktu końcowego poprzedniego segmentu jako punktu początkowego. Jeśli jest to pierwszy segment rysunku, wykorzystuje określony przez punkt <xref:System.Windows.Media.StreamGeometryContext.BeginFigure%2A> metodę jako jego punkt początkowy.  
  
 A <xref:System.Windows.Media.StreamGeometry> nie może być serializowany, jeśli zawiera on <xref:System.Windows.Media.Transform> lub dowolnej innej niż malowania lub bez segmentów.  
  
   
  
## Examples  
 Poniższy przykład przedstawia sposób Rysowanie trójkąta przy użyciu <xref:System.Windows.Media.StreamGeometryContext.LineTo%2A> metody.  
  
 [!code-csharp[GeometriesMiscSnippets_procedural_snip#StreamGeometryTriangleExampleWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/GeometriesMiscSnippets_procedural_snip/CSharp/StreamGeometryTriangleExample.cs#streamgeometrytriangleexamplewholepage)]
 [!code-vb[GeometriesMiscSnippets_procedural_snip#StreamGeometryTriangleExampleWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/GeometriesMiscSnippets_procedural_snip/visualbasic/streamgeometrytriangleexample.vb#streamgeometrytriangleexamplewholepage)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Próbowano dodać segment bez uruchamiania rysunku przez wywołanie metody <see cref="M:System.Windows.Media.StreamGeometryContext.BeginFigure(System.Windows.Point,System.Boolean,System.Boolean)" /> metody.</exception>
        <altmember cref="M:System.Windows.Media.StreamGeometryContext.PolyLineTo(System.Collections.Generic.IList{System.Windows.Point},System.Boolean,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="PolyBezierTo">
      <MemberSignature Language="C#" Value="public abstract void PolyBezierTo (System.Collections.Generic.IList&lt;System.Windows.Point&gt; points, bool isStroked, bool isSmoothJoin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PolyBezierTo(class System.Collections.Generic.IList`1&lt;valuetype System.Windows.Point&gt; points, bool isStroked, bool isSmoothJoin) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.StreamGeometryContext.PolyBezierTo(System.Collections.Generic.IList{System.Windows.Point},System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub PolyBezierTo (points As IList(Of Point), isStroked As Boolean, isSmoothJoin As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void PolyBezierTo(System::Collections::Generic::IList&lt;System::Windows::Point&gt; ^ points, bool isStroked, bool isSmoothJoin);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="points" Type="System.Collections.Generic.IList&lt;System.Windows.Point&gt;" />
        <Parameter Name="isStroked" Type="System.Boolean" />
        <Parameter Name="isSmoothJoin" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="points">Lista punktów określające punkty kontrolne, a punkty docelowe dla co najmniej jeden krzywych Beziera. Liczba punktów na tej liście powinna być wielokrotnością liczby 3.</param>
        <param name="isStroked">
          <see langword="true" /> Aby segmentu malowania, kiedy <see cref="T:System.Windows.Media.Pen" /> jest używany do renderowania segmentu; w przeciwnym razie <see langword="false" />.</param>
        <param name="isSmoothJoin">
          <see langword="true" /> traktowanie sprzężenie ten segment i poprzedniego segmentu jako rogu podczas malowania z <see cref="T:System.Windows.Media.Pen" />; w przeciwnym razie <see langword="false" />.</param>
        <summary>Rysuje co najmniej jednego połączenia krzywych Beziera.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Pierwszy punkt `points` Określa pierwszy punkt kontrolny, następna określa drugi punkt kontrolny, punkt trzeci określa punkt końcowy, następnego punktu określa pierwszy punkt kontrolny krzywej dalej i tak dalej.  
  
 Ta metoda używa punktu końcowego poprzedniego segmentu jako punktu początkowego. Jeśli jest to pierwszy segment rysunku, wykorzystuje określony przez punkt <xref:System.Windows.Media.StreamGeometryContext.BeginFigure%2A> metodę jako jego punkt początkowy.  
  
 A <xref:System.Windows.Media.StreamGeometry> nie może być serializowany, jeśli zawiera on <xref:System.Windows.Media.Transform> lub dowolnej innej niż malowania lub bez segmentów.  
  
   
  
## Examples  
 Poniższy przykład przedstawia sposób Rysowanie za pomocą wielu połączonych krzywych Beziera <xref:System.Windows.Media.StreamGeometryContext.PolyBezierTo%2A> metody.  
  
 [!code-csharp[GeometriesMiscSnippets_procedural_snip#StreamGeometryPolyBezierToExampleWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/GeometriesMiscSnippets_procedural_snip/CSharp/StreamGeometryPolyBezierToExample.cs#streamgeometrypolybeziertoexamplewholepage)]
 [!code-vb[GeometriesMiscSnippets_procedural_snip#StreamGeometryPolyBezierToExampleWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/GeometriesMiscSnippets_procedural_snip/visualbasic/streamgeometrypolybeziertoexample.vb#streamgeometrypolybeziertoexamplewholepage)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Próbowano dodać segment bez uruchamiania rysunku przez wywołanie metody <see cref="M:System.Windows.Media.StreamGeometryContext.BeginFigure(System.Windows.Point,System.Boolean,System.Boolean)" /> metody.</exception>
        <altmember cref="M:System.Windows.Media.StreamGeometryContext.ArcTo(System.Windows.Point,System.Windows.Size,System.Double,System.Boolean,System.Windows.Media.SweepDirection,System.Boolean,System.Boolean)" />
        <altmember cref="M:System.Windows.Media.StreamGeometryContext.BezierTo(System.Windows.Point,System.Windows.Point,System.Windows.Point,System.Boolean,System.Boolean)" />
        <altmember cref="M:System.Windows.Media.StreamGeometryContext.QuadraticBezierTo(System.Windows.Point,System.Windows.Point,System.Boolean,System.Boolean)" />
        <altmember cref="M:System.Windows.Media.StreamGeometryContext.PolyQuadraticBezierTo(System.Collections.Generic.IList{System.Windows.Point},System.Boolean,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="PolyLineTo">
      <MemberSignature Language="C#" Value="public abstract void PolyLineTo (System.Collections.Generic.IList&lt;System.Windows.Point&gt; points, bool isStroked, bool isSmoothJoin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PolyLineTo(class System.Collections.Generic.IList`1&lt;valuetype System.Windows.Point&gt; points, bool isStroked, bool isSmoothJoin) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.StreamGeometryContext.PolyLineTo(System.Collections.Generic.IList{System.Windows.Point},System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub PolyLineTo (points As IList(Of Point), isStroked As Boolean, isSmoothJoin As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void PolyLineTo(System::Collections::Generic::IList&lt;System::Windows::Point&gt; ^ points, bool isStroked, bool isSmoothJoin);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="points" Type="System.Collections.Generic.IList&lt;System.Windows.Point&gt;" />
        <Parameter Name="isStroked" Type="System.Boolean" />
        <Parameter Name="isSmoothJoin" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="points">Kolekcja punktów określające punkty docelowe dla co najmniej jednego połączone proste.</param>
        <param name="isStroked">
          <see langword="true" /> Aby segmentu malowania, kiedy <see cref="T:System.Windows.Media.Pen" /> jest używany do renderowania segmentu; w przeciwnym razie <see langword="false" />.</param>
        <param name="isSmoothJoin">
          <see langword="true" /> traktowanie sprzężenie ten segment i poprzedniego segmentu jako rogu podczas malowania z <see cref="T:System.Windows.Media.Pen" />; w przeciwnym razie <see langword="false" />.</param>
        <summary>Rysuje co najmniej jeden połączone linie proste.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda używa punktu końcowego poprzedniego segmentu jako punktu początkowego. Jeśli jest to pierwszy segment rysunku, wykorzystuje określony przez punkt <xref:System.Windows.Media.StreamGeometryContext.BeginFigure%2A> metodę jako jego punkt początkowy.  
  
 A <xref:System.Windows.Media.StreamGeometry> nie może być serializowany, jeśli zawiera on <xref:System.Windows.Media.Transform> lub dowolnej innej niż malowania lub bez segmentów.  
  
   
  
## Examples  
 Poniższy przykład przedstawia sposób Rysowanie trójkąta przy użyciu <xref:System.Windows.Media.StreamGeometryContext.PolyLineTo%2A> metody.  
  
 [!code-csharp[GeometriesMiscSnippets_procedural_snip#StreamGeometryPolyLineToExampleWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/GeometriesMiscSnippets_procedural_snip/CSharp/StreamGeometryPolyLineToExample.cs#streamgeometrypolylinetoexamplewholepage)]
 [!code-vb[GeometriesMiscSnippets_procedural_snip#StreamGeometryPolyLineToExampleWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/GeometriesMiscSnippets_procedural_snip/visualbasic/streamgeometrypolylinetoexample.vb#streamgeometrypolylinetoexamplewholepage)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Próbowano dodać segment bez uruchamiania rysunku przez wywołanie metody <see cref="M:System.Windows.Media.StreamGeometryContext.BeginFigure(System.Windows.Point,System.Boolean,System.Boolean)" /> metody.</exception>
        <altmember cref="M:System.Windows.Media.StreamGeometryContext.LineTo(System.Windows.Point,System.Boolean,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="PolyQuadraticBezierTo">
      <MemberSignature Language="C#" Value="public abstract void PolyQuadraticBezierTo (System.Collections.Generic.IList&lt;System.Windows.Point&gt; points, bool isStroked, bool isSmoothJoin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PolyQuadraticBezierTo(class System.Collections.Generic.IList`1&lt;valuetype System.Windows.Point&gt; points, bool isStroked, bool isSmoothJoin) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.StreamGeometryContext.PolyQuadraticBezierTo(System.Collections.Generic.IList{System.Windows.Point},System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub PolyQuadraticBezierTo (points As IList(Of Point), isStroked As Boolean, isSmoothJoin As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void PolyQuadraticBezierTo(System::Collections::Generic::IList&lt;System::Windows::Point&gt; ^ points, bool isStroked, bool isSmoothJoin);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="points" Type="System.Collections.Generic.IList&lt;System.Windows.Point&gt;" />
        <Parameter Name="isStroked" Type="System.Boolean" />
        <Parameter Name="isSmoothJoin" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="points">Kolekcja punktów określające punkty kontrolne, a punkty docelowe dla co najmniej jeden kwadratową krzywych Beziera. Pierwszy punkt na liście określa punkt kontrolny krzywej, następnego punktu określa punkt docelowy, następnego punktu określa punkt kontrolny krzywej dalej i tak dalej. Lista musi zawierać parzystą liczbę punktów.</param>
        <param name="isStroked">
          <see langword="true" /> Aby segmentu malowania, kiedy <see cref="T:System.Windows.Media.Pen" /> jest używany do renderowania segmentu; w przeciwnym razie <see langword="false" />.</param>
        <param name="isSmoothJoin">
          <see langword="true" /> traktowanie sprzężenie ten segment i poprzedniego segmentu jako rogu podczas malowania z <see cref="T:System.Windows.Media.Pen" />; w przeciwnym razie <see langword="false" />.</param>
        <summary>Rysuje co najmniej jednego połączenia kwadratową krzywych Beziera.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda używa punktu końcowego poprzedniego segmentu jako punktu początkowego. Jeśli jest to pierwszy segment rysunku, wykorzystuje określony przez punkt <xref:System.Windows.Media.StreamGeometryContext.BeginFigure%2A> metodę jako jego punkt początkowy.  
  
 A <xref:System.Windows.Media.StreamGeometry> nie może być serializowany, jeśli zawiera on <xref:System.Windows.Media.Transform> lub dowolnej innej niż malowania lub bez segmentów.  
  
   
  
## Examples  
 Poniższy przykład przedstawia sposób rysowania wiele połączonych kwadratową krzywych Beziera przy użyciu <xref:System.Windows.Media.StreamGeometryContext.PolyQuadraticBezierTo%2A> metody.  
  
 [!code-csharp[GeometriesMiscSnippets_procedural_snip#StreamGeometryPolyQuadraticBezierToExampleWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/GeometriesMiscSnippets_procedural_snip/CSharp/StreamGeometryPolyQuadraticBezierToExample.cs#streamgeometrypolyquadraticbeziertoexamplewholepage)]
 [!code-vb[GeometriesMiscSnippets_procedural_snip#StreamGeometryPolyQuadraticBezierToExampleWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/GeometriesMiscSnippets_procedural_snip/visualbasic/streamgeometrypolyquadraticbeziertoexample.vb#streamgeometrypolyquadraticbeziertoexamplewholepage)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Próbowano dodać segment bez uruchamiania rysunku przez wywołanie metody <see cref="M:System.Windows.Media.StreamGeometryContext.BeginFigure(System.Windows.Point,System.Boolean,System.Boolean)" /> metody.</exception>
        <altmember cref="M:System.Windows.Media.StreamGeometryContext.ArcTo(System.Windows.Point,System.Windows.Size,System.Double,System.Boolean,System.Windows.Media.SweepDirection,System.Boolean,System.Boolean)" />
        <altmember cref="M:System.Windows.Media.StreamGeometryContext.BezierTo(System.Windows.Point,System.Windows.Point,System.Windows.Point,System.Boolean,System.Boolean)" />
        <altmember cref="M:System.Windows.Media.StreamGeometryContext.PolyBezierTo(System.Collections.Generic.IList{System.Windows.Point},System.Boolean,System.Boolean)" />
        <altmember cref="M:System.Windows.Media.StreamGeometryContext.QuadraticBezierTo(System.Windows.Point,System.Windows.Point,System.Boolean,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="QuadraticBezierTo">
      <MemberSignature Language="C#" Value="public abstract void QuadraticBezierTo (System.Windows.Point point1, System.Windows.Point point2, bool isStroked, bool isSmoothJoin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void QuadraticBezierTo(valuetype System.Windows.Point point1, valuetype System.Windows.Point point2, bool isStroked, bool isSmoothJoin) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.StreamGeometryContext.QuadraticBezierTo(System.Windows.Point,System.Windows.Point,System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub QuadraticBezierTo (point1 As Point, point2 As Point, isStroked As Boolean, isSmoothJoin As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void QuadraticBezierTo(System::Windows::Point point1, System::Windows::Point point2, bool isStroked, bool isSmoothJoin);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point1" Type="System.Windows.Point" />
        <Parameter Name="point2" Type="System.Windows.Point" />
        <Parameter Name="isStroked" Type="System.Boolean" />
        <Parameter Name="isSmoothJoin" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="point1">Punkt kontrolny można określić kształtu krzywej.</param>
        <param name="point2">Docelowego punktu końcowego krzywej.</param>
        <param name="isStroked">
          <see langword="true" /> Aby segmentu malowania, kiedy <see cref="T:System.Windows.Media.Pen" /> jest używany do renderowania segmentu; w przeciwnym razie <see langword="false" />.</param>
        <param name="isSmoothJoin">
          <see langword="true" /> traktowanie sprzężenie ten segment i poprzedniego segmentu jako rogu podczas malowania z <see cref="T:System.Windows.Media.Pen" />; w przeciwnym razie <see langword="false" />.</param>
        <summary>Rysuje kwadratową krzywą Beziera.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 W odróżnieniu od trzeciego krzywej Beziera, która korzysta z dwoma punktami kontrolnymi, kwadratową sześcienny krzywej Beziera używa punktu jeden formant.  
  
 Ta metoda używa punktu końcowego poprzedniego segmentu jako punktu początkowego. Jeśli jest to pierwszy segment rysunku, wykorzystuje określony przez punkt <xref:System.Windows.Media.StreamGeometryContext.BeginFigure%2A> metodę jako jego punkt początkowy.  
  
 A <xref:System.Windows.Media.StreamGeometry> nie może być serializowany, jeśli zawiera on <xref:System.Windows.Media.Transform> lub dowolnej innej niż malowania lub bez segmentów.  
  
   
  
## Examples  
 Poniższy przykład przedstawia sposób Rysowanie kwadratową krzywej Beziera, przy użyciu <xref:System.Windows.Media.StreamGeometryContext.QuadraticBezierTo%2A> metody.  
  
 [!code-csharp[GeometriesMiscSnippets_procedural_snip#StreamGeometryQuadraticBezierToExampleWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/GeometriesMiscSnippets_procedural_snip/CSharp/StreamGeometryQuadraticBezierToExample.cs#streamgeometryquadraticbeziertoexamplewholepage)]
 [!code-vb[GeometriesMiscSnippets_procedural_snip#StreamGeometryQuadraticBezierToExampleWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/GeometriesMiscSnippets_procedural_snip/visualbasic/streamgeometryquadraticbeziertoexample.vb#streamgeometryquadraticbeziertoexamplewholepage)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Próbowano dodać segment bez uruchamiania rysunku przez wywołanie metody <see cref="M:System.Windows.Media.StreamGeometryContext.BeginFigure(System.Windows.Point,System.Boolean,System.Boolean)" /> metody.</exception>
        <altmember cref="M:System.Windows.Media.StreamGeometryContext.ArcTo(System.Windows.Point,System.Windows.Size,System.Double,System.Boolean,System.Windows.Media.SweepDirection,System.Boolean,System.Boolean)" />
        <altmember cref="M:System.Windows.Media.StreamGeometryContext.BezierTo(System.Windows.Point,System.Windows.Point,System.Windows.Point,System.Boolean,System.Boolean)" />
        <altmember cref="M:System.Windows.Media.StreamGeometryContext.PolyBezierTo(System.Collections.Generic.IList{System.Windows.Point},System.Boolean,System.Boolean)" />
        <altmember cref="M:System.Windows.Media.StreamGeometryContext.PolyQuadraticBezierTo(System.Collections.Generic.IList{System.Windows.Point},System.Boolean,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="System.IDisposable.Dispose">
      <MemberSignature Language="C#" Value="void IDisposable.Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.IDisposable.Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.StreamGeometryContext.System#IDisposable#Dispose" />
      <MemberSignature Language="VB.NET" Value="Sub Dispose () Implements IDisposable.Dispose" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.IDisposable.Dispose() = IDisposable::Dispose;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Ten element członkowski obsługuje [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] infrastrukturę i nie jest przeznaczona do użycia bezpośrednio w kodzie.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>