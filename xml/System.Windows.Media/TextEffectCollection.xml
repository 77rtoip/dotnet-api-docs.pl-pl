<Type Name="TextEffectCollection" FullName="System.Windows.Media.TextEffectCollection">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="8eb8f91ddfe80cbd06bd7034a4b9aa7db4de15c7" />
    <Meta Name="ms.sourcegitcommit" Value="723b8a6d92667ba86fcda96190bad3b4a03283b3" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="11/09/2018" />
    <Meta Name="ms.locfileid" Value="51323436" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class TextEffectCollection : System.Windows.Media.Animation.Animatable, System.Collections.Generic.ICollection&lt;System.Windows.Media.TextEffect&gt;, System.Collections.Generic.IEnumerable&lt;System.Windows.Media.TextEffect&gt;, System.Collections.Generic.IList&lt;System.Windows.Media.TextEffect&gt;, System.Collections.IList" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit TextEffectCollection extends System.Windows.Media.Animation.Animatable implements class System.Collections.Generic.ICollection`1&lt;class System.Windows.Media.TextEffect&gt;, class System.Collections.Generic.IEnumerable`1&lt;class System.Windows.Media.TextEffect&gt;, class System.Collections.Generic.IList`1&lt;class System.Windows.Media.TextEffect&gt;, class System.Collections.ICollection, class System.Collections.IEnumerable, class System.Collections.IList" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Media.TextEffectCollection" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class TextEffectCollection&#xA;Inherits Animatable&#xA;Implements ICollection(Of TextEffect), IEnumerable(Of TextEffect), IList, IList(Of TextEffect)" />
  <TypeSignature Language="C++ CLI" Value="public ref class TextEffectCollection sealed : System::Windows::Media::Animation::Animatable, System::Collections::Generic::ICollection&lt;System::Windows::Media::TextEffect ^&gt;, System::Collections::Generic::IEnumerable&lt;System::Windows::Media::TextEffect ^&gt;, System::Collections::Generic::IList&lt;System::Windows::Media::TextEffect ^&gt;, System::Collections::IList" />
  <TypeSignature Language="F#" Value="type TextEffectCollection = class&#xA;    inherit Animatable&#xA;    interface IList&#xA;    interface ICollection&#xA;    interface IEnumerable&#xA;    interface IList&lt;TextEffect&gt;&#xA;    interface ICollection&lt;TextEffect&gt;&#xA;    interface seq&lt;TextEffect&gt;" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Media.Animation.Animatable</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.Generic.ICollection&lt;System.Windows.Media.TextEffect&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.ICollection&lt;T&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;System.Windows.Media.TextEffect&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;T&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IList&lt;System.Windows.Media.TextEffect&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.ICollection</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IList</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Windows.Localizability(System.Windows.LocalizationCategory.None, Readability=System.Windows.Readability.Unreadable)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="af120-101">Zapewnia obsługę kolekcji dla kolekcji <see cref="T:System.Windows.Media.TextEffect" /> obiektów.</span>
      <span class="sxs-lookup">
        <span data-stu-id="af120-101">Provides collection support for a collection of <see cref="T:System.Windows.Media.TextEffect" /> objects.</span>
      </span>
    </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="af120-102">Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.Media.TextEffectCollection" /> klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af120-102">Initializes a new instance of the <see cref="T:System.Windows.Media.TextEffectCollection" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TextEffectCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.TextEffectCollection.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TextEffectCollection();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="af120-103">Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.Media.TextEffectCollection" /> klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af120-103">Initializes a new instance of the <see cref="T:System.Windows.Media.TextEffectCollection" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TextEffectCollection (System.Collections.Generic.IEnumerable&lt;System.Windows.Media.TextEffect&gt; collection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IEnumerable`1&lt;class System.Windows.Media.TextEffect&gt; collection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.TextEffectCollection.#ctor(System.Collections.Generic.IEnumerable{System.Windows.Media.TextEffect})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (collection As IEnumerable(Of TextEffect))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TextEffectCollection(System::Collections::Generic::IEnumerable&lt;System::Windows::Media::TextEffect ^&gt; ^ collection);" />
      <MemberSignature Language="F#" Value="new System.Windows.Media.TextEffectCollection : seq&lt;System.Windows.Media.TextEffect&gt; -&gt; System.Windows.Media.TextEffectCollection" Usage="new System.Windows.Media.TextEffectCollection collection" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="collection" Type="System.Collections.Generic.IEnumerable&lt;System.Windows.Media.TextEffect&gt;" />
      </Parameters>
      <Docs>
        <param name="collection">
          <span data-ttu-id="af120-104">Moduł wyliczający typu <see cref="T:System.Collections.IEnumerable" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af120-104">An enumerator of type <see cref="T:System.Collections.IEnumerable" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="af120-105">Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.Media.TextEffectCollection" /> klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af120-105">Initializes a new instance of the <see cref="T:System.Windows.Media.TextEffectCollection" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TextEffectCollection (int capacity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 capacity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.TextEffectCollection.#ctor(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (capacity As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TextEffectCollection(int capacity);" />
      <MemberSignature Language="F#" Value="new System.Windows.Media.TextEffectCollection : int -&gt; System.Windows.Media.TextEffectCollection" Usage="new System.Windows.Media.TextEffectCollection capacity" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="capacity" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="capacity">
          <span data-ttu-id="af120-106">Liczba elementów, że nowa kolekcja jest początkowo można przechowywać.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af120-106">The number of elements that the new collection is initially capable of storing.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="af120-107">Inicjuje nowe wystąpienie <see cref="T:System.Windows.Media.TextEffectCollection" /> wystąpienia jest pusta, która ma określoną pojemność.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af120-107">Initializes a new <see cref="T:System.Windows.Media.TextEffectCollection" /> instance that is empty and has the specified initial capacity.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (System.Windows.Media.TextEffect value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Add(class System.Windows.Media.TextEffect value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.TextEffectCollection.Add(System.Windows.Media.TextEffect)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (value As TextEffect)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Add(System::Windows::Media::TextEffect ^ value);" />
      <MemberSignature Language="F#" Value="abstract member Add : System.Windows.Media.TextEffect -&gt; unit&#xA;override this.Add : System.Windows.Media.TextEffect -&gt; unit" Usage="textEffectCollection.Add value" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Add(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Windows.Media.TextEffect" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="af120-108">
            <see cref="T:System.Windows.Media.TextEffect" /> Do dodania do kolekcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af120-108">The <see cref="T:System.Windows.Media.TextEffect" /> to add to the collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="af120-109">Dodaje <see cref="T:System.Windows.Media.TextEffect" /> na końcu kolekcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af120-109">Adds a <see cref="T:System.Windows.Media.TextEffect" /> to the end of the collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="af120-110">Ponieważ <xref:System.Windows.Media.TextEffect> obiektów pochodzić od <xref:System.Windows.Freezable>, są one kopiowane, gdy są one używane.</span><span class="sxs-lookup"><span data-stu-id="af120-110">Because <xref:System.Windows.Media.TextEffect> objects derive from <xref:System.Windows.Freezable>, they are copied when they are used.</span></span> <span data-ttu-id="af120-111">W związku z tym, później, nie można pobrać lub usunąć <xref:System.Windows.Media.TextEffect> dodany do kolekcji przy użyciu oryginalnego <xref:System.Windows.Media.TextEffect> obiektu.</span><span class="sxs-lookup"><span data-stu-id="af120-111">Therefore, later, you might not be able to retrieve or remove the <xref:System.Windows.Media.TextEffect> you added to the collection using the original <xref:System.Windows.Media.TextEffect> object.</span></span> <span data-ttu-id="af120-112"><xref:System.Windows.Media.TextEffect> w kolekcji jest kopią oryginalnego <xref:System.Windows.Media.TextEffect> i jest uznawany za inny <xref:System.Windows.Media.TextEffect> niż ten, który został dodany.</span><span class="sxs-lookup"><span data-stu-id="af120-112">The <xref:System.Windows.Media.TextEffect> in the collection is a copy of the original <xref:System.Windows.Media.TextEffect> and is considered a different <xref:System.Windows.Media.TextEffect> than the one you added.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.TextEffectCollection.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Clear();" />
      <MemberSignature Language="F#" Value="abstract member Clear : unit -&gt; unit&#xA;override this.Clear : unit -&gt; unit" Usage="textEffectCollection.Clear " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Clear</InterfaceMember>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Clear</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="af120-113">Usuwa wszystkie elementy z listy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af120-113">Removes all elements from the list.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public System.Windows.Media.TextEffectCollection Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Media.TextEffectCollection Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.TextEffectCollection.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Function Clone () As TextEffectCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Media::TextEffectCollection ^ Clone();" />
      <MemberSignature Language="F#" Value="override this.Clone : unit -&gt; System.Windows.Media.TextEffectCollection" Usage="textEffectCollection.Clone " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.TextEffectCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="af120-114">Tworzy klon można modyfikować tego <see cref="T:System.Windows.Media.TextEffectCollection" />, tworzenie kopii głębokiego wartości tego obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af120-114">Creates a modifiable clone of this <see cref="T:System.Windows.Media.TextEffectCollection" />, making deep copies of this object's values.</span>
          </span>
          <span data-ttu-id="af120-115">Podczas kopiowania właściwości zależności, ta metoda kopiuje zasobów odwołania i powiązania danych (ale nie rozpoznają może) ale animacji lub ich bieżącymi wartościami.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af120-115">When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="af120-116">Można modyfikować klonowania bieżącego obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af120-116">A modifiable clone of the current object.</span>
          </span>
          <span data-ttu-id="af120-117">Sklonowany obiekt <see cref="P:System.Windows.Freezable.IsFrozen" /> właściwość będzie miała <see langword="false" /> nawet wtedy, gdy źródło <see cref="P:System.Windows.Freezable.IsFrozen" /> właściwość <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af120-117">The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be <see langword="false" /> even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was <see langword="true" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="af120-118">Ta metoda jest używana do tworzenia kopii można modyfikować zamrożone <xref:System.Windows.Freezable> obiektów (lub dowolnego <xref:System.Windows.Freezable> obiektu).</span><span class="sxs-lookup"><span data-stu-id="af120-118">This method is used to produce modifiable copies of frozen <xref:System.Windows.Freezable> objects (or any <xref:System.Windows.Freezable> object).</span></span> <span data-ttu-id="af120-119">Dla wygody ta metoda zasłania dziedziczone wersji z silnie typizowaną implementację.</span><span class="sxs-lookup"><span data-stu-id="af120-119">For convenience, this method shadows the inherited version with a strongly typed implementation.</span></span>  
  
 <span data-ttu-id="af120-120">Aby uzyskać więcej informacji, zobacz <xref:System.Windows.Freezable.Clone%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="af120-120">For more information, see <xref:System.Windows.Freezable.Clone%2A?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CloneCore">
      <MemberSignature Language="C#" Value="protected override void CloneCore (System.Windows.Freezable source);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void CloneCore(class System.Windows.Freezable source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.TextEffectCollection.CloneCore(System.Windows.Freezable)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub CloneCore (source As Freezable)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void CloneCore(System::Windows::Freezable ^ source);" />
      <MemberSignature Language="F#" Value="abstract member CloneCore : System.Windows.Freezable -&gt; unit&#xA;override this.CloneCore : System.Windows.Freezable -&gt; unit" Usage="textEffectCollection.CloneCore source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Windows.Freezable" />
      </Parameters>
      <Docs>
        <param name="source">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CloneCurrentValue">
      <MemberSignature Language="C#" Value="public System.Windows.Media.TextEffectCollection CloneCurrentValue ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Media.TextEffectCollection CloneCurrentValue() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.TextEffectCollection.CloneCurrentValue" />
      <MemberSignature Language="VB.NET" Value="Public Function CloneCurrentValue () As TextEffectCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Media::TextEffectCollection ^ CloneCurrentValue();" />
      <MemberSignature Language="F#" Value="member this.CloneCurrentValue : unit -&gt; System.Windows.Media.TextEffectCollection" Usage="textEffectCollection.CloneCurrentValue " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.TextEffectCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="af120-121">Tworzy klon można modyfikować tego <see cref="T:System.Windows.Media.TextEffectCollection" /> obiektu, tworzenie kopii głębokiego wartości bieżących tego obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af120-121">Creates a modifiable clone of this <see cref="T:System.Windows.Media.TextEffectCollection" /> object, making deep copies of this object's current values.</span>
          </span>
          <span data-ttu-id="af120-122">Odwołania do zasobów, powiązań danych i animacji nie są kopiowane, ale są w ich bieżących wartości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af120-122">Resource references, data bindings, and animations are not copied, but their current values are.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="af120-123">Można modyfikować klonowania bieżącego obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af120-123">A modifiable clone of the current object.</span>
          </span>
          <span data-ttu-id="af120-124">Sklonowany obiekt <see cref="P:System.Windows.Freezable.IsFrozen" /> właściwość będzie miała <see langword="false" /> nawet wtedy, gdy źródło <see cref="P:System.Windows.Freezable.IsFrozen" /> właściwość <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af120-124">The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be <see langword="false" /> even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was <see langword="true" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="af120-125">Ta metoda jest używana do tworzenia kopii można modyfikować zamrożone <xref:System.Windows.Freezable> obiektów (lub dowolnego <xref:System.Windows.Freezable> obiektu).</span><span class="sxs-lookup"><span data-stu-id="af120-125">This method is used to produce modifiable copies of frozen <xref:System.Windows.Freezable> objects (or any <xref:System.Windows.Freezable> object).</span></span> <span data-ttu-id="af120-126">Dla wygody ta metoda zasłania dziedziczone wersji z silnie typizowaną implementację.</span><span class="sxs-lookup"><span data-stu-id="af120-126">For convenience, this method shadows the inherited version with a strongly typed implementation.</span></span>  
  
 <span data-ttu-id="af120-127">Aby uzyskać więcej informacji, zobacz <xref:System.Windows.Freezable.CloneCurrentValue%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="af120-127">For more information, see <xref:System.Windows.Freezable.CloneCurrentValue%2A?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CloneCurrentValueCore">
      <MemberSignature Language="C#" Value="protected override void CloneCurrentValueCore (System.Windows.Freezable source);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void CloneCurrentValueCore(class System.Windows.Freezable source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.TextEffectCollection.CloneCurrentValueCore(System.Windows.Freezable)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub CloneCurrentValueCore (source As Freezable)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void CloneCurrentValueCore(System::Windows::Freezable ^ source);" />
      <MemberSignature Language="F#" Value="abstract member CloneCurrentValueCore : System.Windows.Freezable -&gt; unit&#xA;override this.CloneCurrentValueCore : System.Windows.Freezable -&gt; unit" Usage="textEffectCollection.CloneCurrentValueCore source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Windows.Freezable" />
      </Parameters>
      <Docs>
        <param name="source">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (System.Windows.Media.TextEffect value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Contains(class System.Windows.Media.TextEffect value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.TextEffectCollection.Contains(System.Windows.Media.TextEffect)" />
      <MemberSignature Language="VB.NET" Value="Public Function Contains (value As TextEffect) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Contains(System::Windows::Media::TextEffect ^ value);" />
      <MemberSignature Language="F#" Value="abstract member Contains : System.Windows.Media.TextEffect -&gt; bool&#xA;override this.Contains : System.Windows.Media.TextEffect -&gt; bool" Usage="textEffectCollection.Contains value" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Contains(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Windows.Media.TextEffect" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="af120-128">
            <see cref="T:System.Windows.Media.TextEffect" /> Do zlokalizowania w kolekcji</span>
          <span class="sxs-lookup">
            <span data-stu-id="af120-128">The <see cref="T:System.Windows.Media.TextEffect" /> to locate in the collection</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="af120-129">Określa, czy określony element w kolekcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af120-129">Determines if the specified item is in the collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="af120-130">
            <see langword="true" /> Jeśli kolekcja zawiera <paramref name="value" />; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af120-130">
              <see langword="true" /> if the collection contains <paramref name="value" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (System.Windows.Media.TextEffect[] array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(class System.Windows.Media.TextEffect[] array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.TextEffectCollection.CopyTo(System.Windows.Media.TextEffect[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (array As TextEffect(), index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CopyTo(cli::array &lt;System::Windows::Media::TextEffect ^&gt; ^ array, int index);" />
      <MemberSignature Language="F#" Value="abstract member CopyTo : System.Windows.Media.TextEffect[] * int -&gt; unit&#xA;override this.CopyTo : System.Windows.Media.TextEffect[] * int -&gt; unit" Usage="textEffectCollection.CopyTo (array, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Windows.Media.TextEffect[]" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">
          <span data-ttu-id="af120-131">Tablica, do którego mają być kopiowane elementy kolekcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af120-131">The array into which the collection's items are to be copied.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="af120-132">Indeks <c>tablicy</c> od którego należy rozpocząć kopiowanie zawartości <see cref="T:System.Windows.Media.TextEffectCollection" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af120-132">The index of <c>array</c> at which to start copying the contents of the <see cref="T:System.Windows.Media.TextEffectCollection" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="af120-133">Kopiuje cały <see cref="T:System.Windows.Media.TextEffectCollection" /> jednowymiarową tablicę typu <see cref="T:System.Windows.Media.TextEffect" />, rozpoczynając od określonego indeksu tablicy docelowej.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af120-133">Copies the entire <see cref="T:System.Windows.Media.TextEffectCollection" /> to a one-dimensional array of type <see cref="T:System.Windows.Media.TextEffect" />, starting at the specified index of the target array.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.TextEffectCollection.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="System.Windows.Media.TextEffectCollection.Count" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.Count</InterfaceMember>
        <InterfaceMember>P:System.Collections.Generic.ICollection`1.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="af120-134">Pobiera liczbę elementów w kolekcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af120-134">Gets the number of elements in the collection.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="af120-135">Liczba elementów w kolekcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af120-135">The number of elements in the collection.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateInstanceCore">
      <MemberSignature Language="C#" Value="protected override System.Windows.Freezable CreateInstanceCore ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Freezable CreateInstanceCore() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.TextEffectCollection.CreateInstanceCore" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateInstanceCore () As Freezable" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Freezable ^ CreateInstanceCore();" />
      <MemberSignature Language="F#" Value="abstract member CreateInstanceCore : unit -&gt; System.Windows.Freezable&#xA;override this.CreateInstanceCore : unit -&gt; System.Windows.Freezable" Usage="textEffectCollection.CreateInstanceCore " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Freezable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FreezeCore">
      <MemberSignature Language="C#" Value="protected override bool FreezeCore (bool isChecking);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool FreezeCore(bool isChecking) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.TextEffectCollection.FreezeCore(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function FreezeCore (isChecking As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool FreezeCore(bool isChecking);" />
      <MemberSignature Language="F#" Value="override this.FreezeCore : bool -&gt; bool" Usage="textEffectCollection.FreezeCore isChecking" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="isChecking" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="isChecking">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAsFrozenCore">
      <MemberSignature Language="C#" Value="protected override void GetAsFrozenCore (System.Windows.Freezable source);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void GetAsFrozenCore(class System.Windows.Freezable source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.TextEffectCollection.GetAsFrozenCore(System.Windows.Freezable)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub GetAsFrozenCore (source As Freezable)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void GetAsFrozenCore(System::Windows::Freezable ^ source);" />
      <MemberSignature Language="F#" Value="abstract member GetAsFrozenCore : System.Windows.Freezable -&gt; unit&#xA;override this.GetAsFrozenCore : System.Windows.Freezable -&gt; unit" Usage="textEffectCollection.GetAsFrozenCore source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Windows.Freezable" />
      </Parameters>
      <Docs>
        <param name="source">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCurrentValueAsFrozenCore">
      <MemberSignature Language="C#" Value="protected override void GetCurrentValueAsFrozenCore (System.Windows.Freezable source);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void GetCurrentValueAsFrozenCore(class System.Windows.Freezable source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.TextEffectCollection.GetCurrentValueAsFrozenCore(System.Windows.Freezable)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub GetCurrentValueAsFrozenCore (source As Freezable)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void GetCurrentValueAsFrozenCore(System::Windows::Freezable ^ source);" />
      <MemberSignature Language="F#" Value="abstract member GetCurrentValueAsFrozenCore : System.Windows.Freezable -&gt; unit&#xA;override this.GetCurrentValueAsFrozenCore : System.Windows.Freezable -&gt; unit" Usage="textEffectCollection.GetCurrentValueAsFrozenCore source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Windows.Freezable" />
      </Parameters>
      <Docs>
        <param name="source">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Windows.Media.TextEffectCollection.Enumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Windows.Media.TextEffectCollection/Enumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.TextEffectCollection.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As TextEffectCollection.Enumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Media::TextEffectCollection::Enumerator GetEnumerator();" />
      <MemberSignature Language="F#" Value="member this.GetEnumerator : unit -&gt; System.Windows.Media.TextEffectCollection.Enumerator" Usage="textEffectCollection.GetEnumerator " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.TextEffectCollection+Enumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="af120-136">Zwraca moduł wyliczający, który może wykonać iterację kolekcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af120-136">Returns an enumerator that can iterate through the collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="af120-137">
            <see cref="T:System.Collections.IEnumerator" /> , Można wykonać iterację kolekcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af120-137">An <see cref="T:System.Collections.IEnumerator" /> that can iterate through the collection.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="af120-138">Moduły wyliczające Zezwalaj tylko na odczytywanie danych w kolekcji.</span><span class="sxs-lookup"><span data-stu-id="af120-138">Enumerators only allow reading the data in the collection.</span></span> <span data-ttu-id="af120-139">Moduły wyliczające nie można modyfikować kolekcji źródłowej.</span><span class="sxs-lookup"><span data-stu-id="af120-139">Enumerators cannot be used to modify the underlying collection.</span></span>  
  
 <span data-ttu-id="af120-140">Początkowo moduł wyliczający jest umieszczony przed pierwszym elementem w kolekcji.</span><span class="sxs-lookup"><span data-stu-id="af120-140">Initially, the enumerator is positioned before the first item in the collection.</span></span> <span data-ttu-id="af120-141"><xref:System.Collections.IEnumerator.Reset%2A> Przełącza moduł wyliczający do tej pozycji.</span><span class="sxs-lookup"><span data-stu-id="af120-141"><xref:System.Collections.IEnumerator.Reset%2A> also brings the enumerator back to this position.</span></span> <span data-ttu-id="af120-142">Co to położenie, wywołanie <xref:System.Collections.IEnumerator.Current%2A> zgłasza wyjątek.</span><span class="sxs-lookup"><span data-stu-id="af120-142">At this position, calling <xref:System.Collections.IEnumerator.Current%2A> throws an exception.</span></span> <span data-ttu-id="af120-143">W związku z tym, należy wywołać <xref:System.Collections.IEnumerator.MoveNext%2A> do wyprzedzeniem modułu wyliczającego do pierwszego elementu kolekcji przed odczytaniem wartości właściwości <xref:System.Collections.IEnumerator.Current%2A>.</span><span class="sxs-lookup"><span data-stu-id="af120-143">Therefore, you must call <xref:System.Collections.IEnumerator.MoveNext%2A> to advance the enumerator to the first item of the collection before reading the value of <xref:System.Collections.IEnumerator.Current%2A>.</span></span>  
  
 <span data-ttu-id="af120-144"><xref:System.Collections.IEnumerator.Current%2A> zwraca ten sam obiekt, do momentu <xref:System.Collections.IEnumerator.MoveNext%2A> lub <xref:System.Collections.IEnumerator.Reset%2A> jest wywoływana.</span><span class="sxs-lookup"><span data-stu-id="af120-144"><xref:System.Collections.IEnumerator.Current%2A> returns the same object until either <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> is called.</span></span> <span data-ttu-id="af120-145"><xref:System.Collections.IEnumerator.MoveNext%2A> Ustawia <xref:System.Collections.IEnumerator.Current%2A> do następnego elementu.</span><span class="sxs-lookup"><span data-stu-id="af120-145"><xref:System.Collections.IEnumerator.MoveNext%2A> sets <xref:System.Collections.IEnumerator.Current%2A> to the next item.</span></span>  
  
 <span data-ttu-id="af120-146">Przechodzi przez koniec kolekcji, moduł wyliczający po określonym położeniem za ostatnim elementem w kolekcji i wywoływania <xref:System.Collections.IEnumerator.MoveNext%2A> zwraca `false`.</span><span class="sxs-lookup"><span data-stu-id="af120-146">After the end of the collection is passed, the enumerator is positioned after the last item in the collection, and calling <xref:System.Collections.IEnumerator.MoveNext%2A> returns `false`.</span></span> <span data-ttu-id="af120-147">Jeśli ostatnie wywołanie <xref:System.Collections.IEnumerator.MoveNext%2A> zwrócił `false`, wywoływania <xref:System.Collections.IEnumerator.Current%2A> zgłasza wyjątek.</span><span class="sxs-lookup"><span data-stu-id="af120-147">If the last call to <xref:System.Collections.IEnumerator.MoveNext%2A> returned `false`, calling <xref:System.Collections.IEnumerator.Current%2A> throws an exception.</span></span> <span data-ttu-id="af120-148">Aby ustawić <xref:System.Collections.IEnumerator.Current%2A> do pierwszego elementu w kolekcji ponownie wywołaj <xref:System.Collections.IEnumerator.Reset%2A> następuje <xref:System.Collections.IEnumerator.MoveNext%2A>.</span><span class="sxs-lookup"><span data-stu-id="af120-148">To set <xref:System.Collections.IEnumerator.Current%2A> to the first item of the collection again, you can call <xref:System.Collections.IEnumerator.Reset%2A> followed by <xref:System.Collections.IEnumerator.MoveNext%2A>.</span></span>  
  
 <span data-ttu-id="af120-149">Moduł wyliczający zachowuje ważność tak długo, jak długo kolekcja pozostaje niezmieniona.</span><span class="sxs-lookup"><span data-stu-id="af120-149">An enumerator remains valid as long as the collection remains unchanged.</span></span> <span data-ttu-id="af120-150">Jeśli w kolekcji zostaną wprowadzone zmiany, takie jak dodawanie, modyfikowanie lub usuwanie elementów, moduł wyliczający jest nieodwracalnie unieważniany, a następne wywołanie <xref:System.Collections.IEnumerator.MoveNext%2A> lub <xref:System.Collections.IEnumerator.Reset%2A> zgłasza <xref:System.InvalidOperationException>.</span><span class="sxs-lookup"><span data-stu-id="af120-150">If changes are made to the collection, such as adding, modifying or deleting items, the enumerator is irrecoverably invalidated and the next call to <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> throws an <xref:System.InvalidOperationException>.</span></span> <span data-ttu-id="af120-151">W przypadku modyfikowania kolekcji między <xref:System.Collections.IEnumerator.MoveNext%2A> i <xref:System.Collections.IEnumerator.Current%2A>, <xref:System.Collections.IEnumerator.Current%2A> zwróci element, który jest ustawiony, nawet wtedy, gdy moduł wyliczający jest już unieważnione.</span><span class="sxs-lookup"><span data-stu-id="af120-151">If the collection is modified between <xref:System.Collections.IEnumerator.MoveNext%2A> and <xref:System.Collections.IEnumerator.Current%2A>, <xref:System.Collections.IEnumerator.Current%2A> will return the item that it is set to, even if the enumerator is already invalidated.</span></span>  
  
 <span data-ttu-id="af120-152">Moduł wyliczający nie ma wyłącznego dostępu do kolekcji, w związku z tym wyliczanie w kolekcji nie jest wewnętrznie procedurą odporną na wielowątkowość.</span><span class="sxs-lookup"><span data-stu-id="af120-152">The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</span></span> <span data-ttu-id="af120-153">Nawet gdy kolekcja jest synchronizowana, inne wątki nadal można zmodyfikować kolekcji, co powoduje, że moduł wyliczający do zgłoszenia wyjątku.</span><span class="sxs-lookup"><span data-stu-id="af120-153">Even when a collection is synchronized, other threads could still modify the collection, which causes the enumerator to throw an exception.</span></span> <span data-ttu-id="af120-154">Aby zagwarantować bezpieczeństwo wątków podczas wyliczania, można zablokować kolekcję podczas całego procesu wyliczania albo rejestrować wyjątki wynikłe ze zmian wprowadzanych przez inne wątków.</span><span class="sxs-lookup"><span data-stu-id="af120-154">To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public int IndexOf (System.Windows.Media.TextEffect value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 IndexOf(class System.Windows.Media.TextEffect value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.TextEffectCollection.IndexOf(System.Windows.Media.TextEffect)" />
      <MemberSignature Language="VB.NET" Value="Public Function IndexOf (value As TextEffect) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int IndexOf(System::Windows::Media::TextEffect ^ value);" />
      <MemberSignature Language="F#" Value="abstract member IndexOf : System.Windows.Media.TextEffect -&gt; int&#xA;override this.IndexOf : System.Windows.Media.TextEffect -&gt; int" Usage="textEffectCollection.IndexOf value" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IList`1.IndexOf(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Windows.Media.TextEffect" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="af120-155">
            <see cref="T:System.Windows.Media.TextEffect" /> Do zlokalizowania w kolekcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af120-155">The <see cref="T:System.Windows.Media.TextEffect" /> to locate in the collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="af120-156">Wyszukuje określony <see cref="T:System.Windows.Media.TextEffect" /> i zwraca liczony od zera indeks pierwszego wystąpienia w obrębie całej kolekcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af120-156">Searches for the specified <see cref="T:System.Windows.Media.TextEffect" /> and returns the zero-based index of the first occurrence within the entire collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="af120-157">Liczony od zera indeks pierwszego wystąpienia <paramref name="value" /> w całej kolekcji, jeśli je znaleziono; w przeciwnym razie <c>-1</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af120-157">The zero-based index of the first occurrence of <paramref name="value" /> within the entire collection, if found; otherwise, <c>-1</c>.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="af120-158">Kolekcja jest przeszukiwany do przodu od pierwszej ramki kluczowe i kończącego się na ostatniej ramki kluczowe.</span><span class="sxs-lookup"><span data-stu-id="af120-158">The collection is searched forward starting at the first key frame and ending at the last key frame.</span></span>  
  
 <span data-ttu-id="af120-159">Ta metoda przeprowadza wyszukiwanie liniowe; w związku z tym, Średni czas wykonywania jest proporcjonalna do <xref:System.Windows.Media.Animation.ColorKeyFrameCollection.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="af120-159">This method performs a linear search; therefore, the average execution time is proportional to <xref:System.Windows.Media.Animation.ColorKeyFrameCollection.Count%2A>.</span></span> <span data-ttu-id="af120-160">Ta metoda jest O (*n*) operacji, gdzie *n* jest <xref:System.Windows.Media.Animation.ColorKeyFrameCollection.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="af120-160">That is, this method is an O(*n*) operation, where *n* is  <xref:System.Windows.Media.Animation.ColorKeyFrameCollection.Count%2A>.</span></span>  
  
 <span data-ttu-id="af120-161">Ta metoda określa równości, wywołując <xref:System.Object.Equals%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="af120-161">This method determines equality by calling <xref:System.Object.Equals%2A?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public void Insert (int index, System.Windows.Media.TextEffect value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Insert(int32 index, class System.Windows.Media.TextEffect value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.TextEffectCollection.Insert(System.Int32,System.Windows.Media.TextEffect)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Insert (index As Integer, value As TextEffect)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Insert(int index, System::Windows::Media::TextEffect ^ value);" />
      <MemberSignature Language="F#" Value="abstract member Insert : int * System.Windows.Media.TextEffect -&gt; unit&#xA;override this.Insert : int * System.Windows.Media.TextEffect -&gt; unit" Usage="textEffectCollection.Insert (index, value)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IList`1.Insert(System.Int32,`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="value" Type="System.Windows.Media.TextEffect" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="af120-162">Liczony od zera indeks, w którym wartość <see cref="T:System.Windows.Media.TextEffect" /> wstawienia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af120-162">The zero-based index at which the value <see cref="T:System.Windows.Media.TextEffect" /> be inserted.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="af120-163">
            <see cref="T:System.Windows.Media.TextEffect" /> Do wstawienia do kolekcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af120-163">The <see cref="T:System.Windows.Media.TextEffect" /> to insert into the collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="af120-164">Wstawia <see cref="T:System.Windows.Media.TextEffect" /> do określonej lokalizacji w kolekcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af120-164">Inserts a <see cref="T:System.Windows.Media.TextEffect" /> into a specific location in the collection.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public System.Windows.Media.TextEffect this[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.TextEffect Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.TextEffectCollection.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public Property Item(index As Integer) As TextEffect" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Media::TextEffect ^ default[int] { System::Windows::Media::TextEffect ^ get(int index); void set(int index, System::Windows::Media::TextEffect ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Item(int) : System.Windows.Media.TextEffect with get, set" Usage="System.Windows.Media.TextEffectCollection.Item" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.IList`1.Item(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.TextEffect</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="af120-165">Liczony od zera indeks kolekcji, z którego można pobrać lub ustawić element.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af120-165">The zero-based index of the collection from which to get or set the item.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="af120-166">Pobiera lub ustawia element, który jest przechowywany w liczony od zera indeks w kolekcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af120-166">Gets or sets the item that is stored at the zero-based index of the collection.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="af120-167">Element pod określonym indeksem.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af120-167">The element at the specified index.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="af120-168">Ta właściwość umożliwia dostęp do określonego elementu w kolekcji przy użyciu indeksu.</span><span class="sxs-lookup"><span data-stu-id="af120-168">This property provides the ability to access a specific item in the collection by using an index.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public bool Remove (System.Windows.Media.TextEffect value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Remove(class System.Windows.Media.TextEffect value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.TextEffectCollection.Remove(System.Windows.Media.TextEffect)" />
      <MemberSignature Language="VB.NET" Value="Public Function Remove (value As TextEffect) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Remove(System::Windows::Media::TextEffect ^ value);" />
      <MemberSignature Language="F#" Value="abstract member Remove : System.Windows.Media.TextEffect -&gt; bool&#xA;override this.Remove : System.Windows.Media.TextEffect -&gt; bool" Usage="textEffectCollection.Remove value" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Remove(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Windows.Media.TextEffect" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="af120-169">
            <see cref="T:System.Windows.Media.TextEffect" /> Do usunięcia z kolekcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af120-169">The <see cref="T:System.Windows.Media.TextEffect" /> to remove from the collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="af120-170">Usuwa określony <see cref="T:System.Windows.Media.TextEffect" /> obiekt z kolekcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af120-170">Removes the specified <see cref="T:System.Windows.Media.TextEffect" /> object from the collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="af120-171">
            <see langword="true" /> Jeśli <paramref name="value" /> został usunięty z kolekcji; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af120-171">
              <see langword="true" /> if <paramref name="value" /> was removed fro the collection; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="af120-172">Obiekty, które należy wykonać usuniętym obiekcie zostaną przesunięte zajmować opuszczonych pozycji, a ich wartości indeksu są aktualizowane.</span><span class="sxs-lookup"><span data-stu-id="af120-172">The objects that follow the removed object are shifted to occupy the vacated position, and their index values are updated.</span></span> <span data-ttu-id="af120-173">Jeśli `value` jest `null` odwołania (`Nothing` w języku Visual Basic), najpierw null odwołanie (`Nothing` w języku Visual Basic) wpis zostanie usunięty.</span><span class="sxs-lookup"><span data-stu-id="af120-173">If `value` is a `null` reference (`Nothing` in Visual Basic), the first null reference (`Nothing` in Visual Basic) entry is removed.</span></span> <span data-ttu-id="af120-174">Należy pamiętać, usuwając odwołanie o wartości null (`Nothing` w języku Visual Basic) wpis jest liniowa w rozmiar kolekcji.</span><span class="sxs-lookup"><span data-stu-id="af120-174">Note that removing a null reference (`Nothing` in Visual Basic) entry is linear in the size of the collection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveAt">
      <MemberSignature Language="C#" Value="public void RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.TextEffectCollection.RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAt (index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RemoveAt(int index);" />
      <MemberSignature Language="F#" Value="abstract member RemoveAt : int -&gt; unit&#xA;override this.RemoveAt : int -&gt; unit" Usage="textEffectCollection.RemoveAt index" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.RemoveAt(System.Int32)</InterfaceMember>
        <InterfaceMember>M:System.Collections.Generic.IList`1.RemoveAt(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="af120-175">Liczony od zera indeks <see cref="T:System.Windows.Media.TextEffect" /> do usunięcia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af120-175">The zero-based index of the <see cref="T:System.Windows.Media.TextEffect" /> to remove.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="af120-176">Usuwa <see cref="T:System.Windows.Media.TextEffect" /> pod określonym indeksem w kolekcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af120-176">Removes the <see cref="T:System.Windows.Media.TextEffect" /> at the specified index in the collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="af120-177">Obiekty, które należy wykonać usuniętym obiekcie zostaną przesunięte zajmować opuszczonych pozycji, a ich wartości indeksu są aktualizowane.</span><span class="sxs-lookup"><span data-stu-id="af120-177">The objects that follow the removed object are shifted to occupy the vacated position, and their index values are updated.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.ICollection&lt;System.Windows.Media.TextEffect&gt;.IsReadOnly">
      <MemberSignature Language="C#" Value="bool System.Collections.Generic.ICollection&lt;System.Windows.Media.TextEffect&gt;.IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.Generic.ICollection&lt;System.Windows.Media.TextEffect&gt;.IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.TextEffectCollection.System#Collections#Generic#ICollection&lt;System#Windows#Media#TextEffect&gt;#IsReadOnly" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsReadOnly As Boolean Implements ICollection(Of TextEffect).IsReadOnly" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Collections::Generic::ICollection&lt;System::Windows::Media::TextEffect&gt;::IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.Generic.ICollection&lt;System.Windows.Media.TextEffect&gt;.IsReadOnly" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.ICollection`1.IsReadOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="af120-178">Aby uzyskać opis tego elementu członkowskiego, zobacz <see cref="P:System.Collections.Generic.ICollection`1.IsReadOnly" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af120-178">For a description of this member, see <see cref="P:System.Collections.Generic.ICollection`1.IsReadOnly" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="af120-179">
            <see langword="true" /> Jeśli <see cref="T:System.Windows.Media.TextEffectCollection" /> jest tylko do odczytu; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af120-179">
              <see langword="true" /> if the <see cref="T:System.Windows.Media.TextEffectCollection" /> is read-only; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="af120-180">Ten element jest jawną implementacją członków.</span><span class="sxs-lookup"><span data-stu-id="af120-180">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="af120-181">Mogą być używane tylko wtedy, gdy <xref:System.Windows.Media.TextEffectCollection> wystąpienia jest rzutowany na <xref:System.Collections.Generic.ICollection%601> interfejsu.</span><span class="sxs-lookup"><span data-stu-id="af120-181">It can be used only when the <xref:System.Windows.Media.TextEffectCollection> instance is cast to an <xref:System.Collections.Generic.ICollection%601> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.IEnumerable&lt;System.Windows.Media.TextEffect&gt;.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.Generic.IEnumerator&lt;System.Windows.Media.TextEffect&gt; IEnumerable&lt;TextEffect&gt;.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.Generic.IEnumerator`1&lt;class System.Windows.Media.TextEffect&gt; System.Collections.Generic.IEnumerable&lt;System.Windows.Media.TextEffect&gt;.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.TextEffectCollection.System#Collections#Generic#IEnumerable&lt;System#Windows#Media#TextEffect&gt;#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator(Of TextEffect) Implements IEnumerable(Of TextEffect).GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::Generic::IEnumerator&lt;System::Windows::Media::TextEffect ^&gt; ^ System.Collections.Generic.IEnumerable&lt;System.Windows.Media.TextEffect&gt;.GetEnumerator() = System::Collections::Generic::IEnumerable&lt;System::Windows::Media::TextEffect ^&gt;::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IEnumerable`1.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerator&lt;System.Windows.Media.TextEffect&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="af120-182">Aby uzyskać opis tego elementu członkowskiego, zobacz <see cref="M:System.Collections.Generic.IEnumerable`1.GetEnumerator" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af120-182">For a description of this member, see <see cref="M:System.Collections.Generic.IEnumerable`1.GetEnumerator" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="af120-183">
            <see cref="T:System.Collections.Generic.IEnumerator`1" /> Obiekt, który może służyć do iterowania po kolekcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af120-183">An <see cref="T:System.Collections.Generic.IEnumerator`1" /> object that can be used to iterate through the collection.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="af120-184">Ten element jest jawną implementacją członków.</span><span class="sxs-lookup"><span data-stu-id="af120-184">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="af120-185">Mogą być używane tylko wtedy, gdy <xref:System.Windows.Media.TextEffectCollection> wystąpienia jest rzutowany na <xref:System.Collections.Generic.IEnumerable%601> interfejsu.</span><span class="sxs-lookup"><span data-stu-id="af120-185">It can be used only when the <xref:System.Windows.Media.TextEffectCollection> instance is cast to an <xref:System.Collections.Generic.IEnumerable%601> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Media.TextEffectCollection.GetEnumerator" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.CopyTo">
      <MemberSignature Language="C#" Value="void ICollection.CopyTo (Array array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.ICollection.CopyTo(class System.Array array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.TextEffectCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.ICollection.CopyTo(Array ^ array, int index) = System::Collections::ICollection::CopyTo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">
          <span data-ttu-id="af120-186">Liczony od zera <see cref="T:System.Array" /> odbierająca skopiowane elementy z <see cref="T:System.Windows.Media.TextEffectCollection" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af120-186">A zero-based <see cref="T:System.Array" /> that receives the copied items from the <see cref="T:System.Windows.Media.TextEffectCollection" />.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="af120-187">Pierwszą pozycję na określonym <see cref="T:System.Array" /> do odbierania skopiowane dane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af120-187">The first position in the specified <see cref="T:System.Array" /> to receive the copied contents.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="af120-188">Aby uzyskać opis tego elementu członkowskiego, zobacz <see cref="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af120-188">For a description of this member, see <see cref="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="af120-189">Ten element jest jawną implementacją członków.</span><span class="sxs-lookup"><span data-stu-id="af120-189">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="af120-190">Mogą być używane tylko wtedy, gdy <xref:System.Windows.Media.TextEffectCollection> wystąpienia jest rzutowany na <xref:System.Collections.ICollection> interfejsu.</span><span class="sxs-lookup"><span data-stu-id="af120-190">It can be used only when the <xref:System.Windows.Media.TextEffectCollection> instance is cast to an <xref:System.Collections.ICollection> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Media.TextEffectCollection.CopyTo(System.Windows.Media.TextEffect[],System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.IsSynchronized">
      <MemberSignature Language="C#" Value="bool System.Collections.ICollection.IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.ICollection.IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.TextEffectCollection.System#Collections#ICollection#IsSynchronized" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsSynchronized As Boolean Implements ICollection.IsSynchronized" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Collections::ICollection::IsSynchronized { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.ICollection.IsSynchronized" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="af120-191">Aby uzyskać opis tego elementu członkowskiego, zobacz <see cref="P:System.Collections.ICollection.IsSynchronized" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af120-191">For a description of this member, see <see cref="P:System.Collections.ICollection.IsSynchronized" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="af120-192">
            <see langword="true" /> Jeśli dostęp do <see cref="T:System.Windows.Media.TextEffectCollection" /> jest synchronizowane (wątkowo); w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af120-192">
              <see langword="true" /> if access to the <see cref="T:System.Windows.Media.TextEffectCollection" /> is synchronized (thread safe); otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="af120-193">Ten element jest jawną implementacją członków.</span><span class="sxs-lookup"><span data-stu-id="af120-193">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="af120-194">Mogą być używane tylko wtedy, gdy <xref:System.Windows.Media.TextEffectCollection> wystąpienia jest rzutowany na <xref:System.Collections.ICollection> interfejsu.</span><span class="sxs-lookup"><span data-stu-id="af120-194">It can be used only when the <xref:System.Windows.Media.TextEffectCollection> instance is cast to an <xref:System.Collections.ICollection> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.SyncRoot">
      <MemberSignature Language="C#" Value="object System.Collections.ICollection.SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.ICollection.SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.TextEffectCollection.System#Collections#ICollection#SyncRoot" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property SyncRoot As Object Implements ICollection.SyncRoot" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System::Collections::ICollection::SyncRoot { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.ICollection.SyncRoot" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="af120-195">Aby uzyskać opis tego elementu członkowskiego, zobacz <see cref="P:System.Collections.ICollection.SyncRoot" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af120-195">For a description of this member, see <see cref="P:System.Collections.ICollection.SyncRoot" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="af120-196">Obiekt, który może służyć do synchronizowania dostępu do <see cref="T:System.Windows.Media.TextEffectCollection" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af120-196">An object that can be used to synchronize access to the <see cref="T:System.Windows.Media.TextEffectCollection" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="af120-197">Ten element jest jawną implementacją członków.</span><span class="sxs-lookup"><span data-stu-id="af120-197">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="af120-198">Mogą być używane tylko wtedy, gdy <xref:System.Windows.Media.TextEffectCollection> wystąpienia jest rzutowany na <xref:System.Collections.ICollection> interfejsu.</span><span class="sxs-lookup"><span data-stu-id="af120-198">It can be used only when the <xref:System.Windows.Media.TextEffectCollection> instance is cast to an <xref:System.Collections.ICollection> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.TextEffectCollection.System#Collections#IEnumerable#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IEnumerator ^ System.Collections.IEnumerable.GetEnumerator() = System::Collections::IEnumerable::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="af120-199">Aby uzyskać opis tego elementu członkowskiego, zobacz <see cref="M:System.Collections.IEnumerable.GetEnumerator" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af120-199">For a description of this member, see <see cref="M:System.Collections.IEnumerable.GetEnumerator" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="af120-200">
            <see cref="T:System.Collections.IEnumerator" /> Obiekt, który może służyć do iterowania po kolekcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af120-200">An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="af120-201">Ten element jest jawną implementacją członków.</span><span class="sxs-lookup"><span data-stu-id="af120-201">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="af120-202">Mogą być używane tylko wtedy, gdy <xref:System.Windows.Media.TextEffectCollection> wystąpienia jest rzutowany na <xref:System.Collections.IEnumerable> interfejsu.</span><span class="sxs-lookup"><span data-stu-id="af120-202">It can be used only when the <xref:System.Windows.Media.TextEffectCollection> instance is cast to an <xref:System.Collections.IEnumerable> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Media.TextEffectCollection.GetEnumerator" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Add">
      <MemberSignature Language="C#" Value="int IList.Add (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IList.Add(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.TextEffectCollection.System#Collections#IList#Add(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Add (value As Object) As Integer Implements IList.Add" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IList.Add(System::Object ^ value) = System::Collections::IList::Add;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Add(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="af120-203">
            <see cref="T:System.Object" /> Do dodania do <see cref="T:System.Windows.Media.TextEffectCollection" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af120-203">The <see cref="T:System.Object" /> to add to the <see cref="T:System.Windows.Media.TextEffectCollection" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="af120-204">Aby uzyskać opis tego elementu członkowskiego, zobacz <see cref="M:System.Collections.IList.Add(System.Object)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af120-204">For a description of this member, see <see cref="M:System.Collections.IList.Add(System.Object)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="af120-205">Pozycja, do którego dodano nowy element.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af120-205">The position into which the new element was inserted.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="af120-206">Ten element jest jawną implementacją członków.</span><span class="sxs-lookup"><span data-stu-id="af120-206">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="af120-207">Mogą być używane tylko wtedy, gdy <xref:System.Windows.Media.TextEffectCollection> wystąpienia jest rzutowany na <xref:System.Collections.IList> interfejsu.</span><span class="sxs-lookup"><span data-stu-id="af120-207">It can be used only when the <xref:System.Windows.Media.TextEffectCollection> instance is cast to an <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Media.TextEffectCollection.Add(System.Windows.Media.TextEffect)" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Contains">
      <MemberSignature Language="C#" Value="bool IList.Contains (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Collections.IList.Contains(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.TextEffectCollection.System#Collections#IList#Contains(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Contains (value As Object) As Boolean Implements IList.Contains" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Collections.IList.Contains(System::Object ^ value) = System::Collections::IList::Contains;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Contains(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="af120-208">
            <see cref="T:System.Object" /> Do zlokalizowania w <see cref="T:System.Windows.Media.TextEffectCollection" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af120-208">The <see cref="T:System.Object" /> to locate in the <see cref="T:System.Windows.Media.TextEffectCollection" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="af120-209">Aby uzyskać opis tego elementu członkowskiego, zobacz <see cref="M:System.Collections.IList.Contains(System.Object)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af120-209">For a description of this member, see <see cref="M:System.Collections.IList.Contains(System.Object)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="af120-210">
            <see langword="true" /> Jeśli <see cref="T:System.Object" /> znajduje się w <see cref="T:System.Windows.Media.TextEffectCollection" />; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af120-210">
              <see langword="true" /> if the <see cref="T:System.Object" /> is found in the <see cref="T:System.Windows.Media.TextEffectCollection" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="af120-211">Ten element jest jawną implementacją członków.</span><span class="sxs-lookup"><span data-stu-id="af120-211">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="af120-212">Mogą być używane tylko wtedy, gdy <xref:System.Windows.Media.TextEffectCollection> wystąpienia jest rzutowany na <xref:System.Collections.IList> interfejsu.</span><span class="sxs-lookup"><span data-stu-id="af120-212">It can be used only when the <xref:System.Windows.Media.TextEffectCollection> instance is cast to an <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Media.TextEffectCollection.Contains(System.Windows.Media.TextEffect)" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IndexOf">
      <MemberSignature Language="C#" Value="int IList.IndexOf (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IList.IndexOf(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.TextEffectCollection.System#Collections#IList#IndexOf(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function IndexOf (value As Object) As Integer Implements IList.IndexOf" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IList.IndexOf(System::Object ^ value) = System::Collections::IList::IndexOf;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.IndexOf(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="af120-213">
            <see cref="T:System.Object" /> Do zlokalizowania w <see cref="T:System.Windows.Media.TextEffectCollection" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af120-213">The <see cref="T:System.Object" /> to locate in the <see cref="T:System.Windows.Media.TextEffectCollection" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="af120-214">Aby uzyskać opis tego elementu członkowskiego, zobacz <see cref="M:System.Collections.IList.IndexOf(System.Object)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af120-214">For a description of this member, see <see cref="M:System.Collections.IList.IndexOf(System.Object)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="af120-215">Indeks <paramref name="value" /> Jeśli na liście; w przeciwnym razie wartość -1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af120-215">The index of <paramref name="value" /> if found in the list; otherwise, -1.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="af120-216">Ten element jest jawną implementacją członków.</span><span class="sxs-lookup"><span data-stu-id="af120-216">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="af120-217">Mogą być używane tylko wtedy, gdy <xref:System.Windows.Media.TextEffectCollection> wystąpienia jest rzutowany na <xref:System.Collections.IList> interfejsu.</span><span class="sxs-lookup"><span data-stu-id="af120-217">It can be used only when the <xref:System.Windows.Media.TextEffectCollection> instance is cast to an <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Media.TextEffectCollection.IndexOf(System.Windows.Media.TextEffect)" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Insert">
      <MemberSignature Language="C#" Value="void IList.Insert (int index, object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Insert(int32 index, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.TextEffectCollection.System#Collections#IList#Insert(System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub Insert (index As Integer, value As Object) Implements IList.Insert" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.Insert(int index, System::Object ^ value) = System::Collections::IList::Insert;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Insert(System.Int32,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="af120-218">Liczony od zera indeks, w której mają zostać wstawione <see cref="T:System.Object" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af120-218">The zero-based index at which to insert the <see cref="T:System.Object" />.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="af120-219">
            <see cref="T:System.Object" /> Do wstawienia do <see cref="T:System.Windows.Media.TextEffectCollection" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af120-219">The <see cref="T:System.Object" /> to insert into the <see cref="T:System.Windows.Media.TextEffectCollection" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="af120-220">Aby uzyskać opis tego elementu członkowskiego, zobacz <see cref="M:System.Collections.IList.Insert(System.Int32,System.Object)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af120-220">For a description of this member, see <see cref="M:System.Collections.IList.Insert(System.Int32,System.Object)" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="af120-221">Ten element jest jawną implementacją członków.</span><span class="sxs-lookup"><span data-stu-id="af120-221">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="af120-222">Mogą być używane tylko wtedy, gdy <xref:System.Windows.Media.TextEffectCollection> wystąpienia jest rzutowany na <xref:System.Collections.IList> interfejsu.</span><span class="sxs-lookup"><span data-stu-id="af120-222">It can be used only when the <xref:System.Windows.Media.TextEffectCollection> instance is cast to an <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Media.TextEffectCollection.Insert(System.Int32,System.Windows.Media.TextEffect)" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IsFixedSize">
      <MemberSignature Language="C#" Value="bool System.Collections.IList.IsFixedSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.IList.IsFixedSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.TextEffectCollection.System#Collections#IList#IsFixedSize" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsFixedSize As Boolean Implements IList.IsFixedSize" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Collections::IList::IsFixedSize { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.IList.IsFixedSize" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.IsFixedSize</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="af120-223">Aby uzyskać opis tego elementu członkowskiego, zobacz <see cref="P:System.Collections.IList.IsFixedSize" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af120-223">For a description of this member, see <see cref="P:System.Collections.IList.IsFixedSize" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="af120-224">
            <see langword="true" /> Jeśli <see cref="T:System.Windows.Media.TextEffectCollection" /> ma stały rozmiar; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af120-224">
              <see langword="true" /> if the <see cref="T:System.Windows.Media.TextEffectCollection" /> has a fixed size; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="af120-225">Ten element jest jawną implementacją członków.</span><span class="sxs-lookup"><span data-stu-id="af120-225">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="af120-226">Mogą być używane tylko wtedy, gdy <xref:System.Windows.Media.TextEffectCollection> wystąpienia jest rzutowany na <xref:System.Collections.IList> interfejsu.</span><span class="sxs-lookup"><span data-stu-id="af120-226">It can be used only when the <xref:System.Windows.Media.TextEffectCollection> instance is cast to an <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IsReadOnly">
      <MemberSignature Language="C#" Value="bool System.Collections.IList.IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.IList.IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.TextEffectCollection.System#Collections#IList#IsReadOnly" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsReadOnly As Boolean Implements IList.IsReadOnly" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Collections::IList::IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.IList.IsReadOnly" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.IsReadOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="af120-227">Aby uzyskać opis tego elementu członkowskiego, zobacz <see cref="P:System.Collections.IList.IsReadOnly" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af120-227">For a description of this member, see <see cref="P:System.Collections.IList.IsReadOnly" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="af120-228">
            <see langword="true" /> Jeśli <see cref="T:System.Windows.Media.TextEffectCollection" /> jest tylko do odczytu; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af120-228">
              <see langword="true" /> if the <see cref="T:System.Windows.Media.TextEffectCollection" /> is read-only; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="af120-229">Ten element jest jawną implementacją członków.</span><span class="sxs-lookup"><span data-stu-id="af120-229">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="af120-230">Mogą być używane tylko wtedy, gdy <xref:System.Windows.Media.TextEffectCollection> wystąpienia jest rzutowany na <xref:System.Collections.IList> interfejsu.</span><span class="sxs-lookup"><span data-stu-id="af120-230">It can be used only when the <xref:System.Windows.Media.TextEffectCollection> instance is cast to an <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Item">
      <MemberSignature Language="C#" Value="object System.Collections.IList.Item[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.IList.Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.TextEffectCollection.System#Collections#IList#Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value=" Property Item(index As Integer) As Object Implements IList.Item" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System::Collections::IList::Item[int] { System::Object ^ get(int index); void set(int index, System::Object ^ value); };" />
      <MemberSignature Language="F#" Usage="System.Collections.IList.Item" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.Item(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="af120-231">Liczony od zera indeks elementu, który ma zostać pobrany lub skonfigurowany.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af120-231">The zero-based index of the element to get or set.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="af120-232">Aby uzyskać opis tego elementu członkowskiego, zobacz <see cref="P:System.Collections.IList.Item(System.Int32)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af120-232">For a description of this member, see <see cref="P:System.Collections.IList.Item(System.Int32)" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="af120-233">Element pod określonym indeksem.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af120-233">The element at the specified index.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="af120-234">Ten element jest jawną implementacją członków.</span><span class="sxs-lookup"><span data-stu-id="af120-234">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="af120-235">Mogą być używane tylko wtedy, gdy <xref:System.Windows.Media.TextEffectCollection> wystąpienia jest rzutowany na <xref:System.Collections.IList> interfejsu.</span><span class="sxs-lookup"><span data-stu-id="af120-235">It can be used only when the <xref:System.Windows.Media.TextEffectCollection> instance is cast to an <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Media.TextEffectCollection.Item(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Remove">
      <MemberSignature Language="C#" Value="void IList.Remove (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Remove(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.TextEffectCollection.System#Collections#IList#Remove(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub Remove (value As Object) Implements IList.Remove" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.Remove(System::Object ^ value) = System::Collections::IList::Remove;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Remove(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="af120-236">
            <see cref="T:System.Object" /> Do usunięcia z <see cref="T:System.Windows.Media.TextEffectCollection" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af120-236">The <see cref="T:System.Object" /> to remove from the <see cref="T:System.Windows.Media.TextEffectCollection" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="af120-237">Aby uzyskać opis tego elementu członkowskiego, zobacz <see cref="M:System.Collections.IList.Remove(System.Object)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af120-237">For a description of this member, see <see cref="M:System.Collections.IList.Remove(System.Object)" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="af120-238">Ten element jest jawną implementacją członków.</span><span class="sxs-lookup"><span data-stu-id="af120-238">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="af120-239">Mogą być używane tylko wtedy, gdy <xref:System.Windows.Media.TextEffectCollection> wystąpienia jest rzutowany na <xref:System.Collections.IList> interfejsu.</span><span class="sxs-lookup"><span data-stu-id="af120-239">It can be used only when the <xref:System.Windows.Media.TextEffectCollection> instance is cast to an <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Media.TextEffectCollection.Remove(System.Windows.Media.TextEffect)" />
      </Docs>
    </Member>
  </Members>
</Type>