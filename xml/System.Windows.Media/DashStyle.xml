<Type Name="DashStyle" FullName="System.Windows.Media.DashStyle">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="e1cff815c25bac277902387b7009d7a70f026aac" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30712124" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class DashStyle : System.Windows.Media.Animation.Animatable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed DashStyle extends System.Windows.Media.Animation.Animatable" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Media.DashStyle" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class DashStyle&#xA;Inherits Animatable" />
  <TypeSignature Language="C++ CLI" Value="public ref class DashStyle sealed : System::Windows::Media::Animation::Animatable" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Media.Animation.Animatable</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Windows.Localizability(System.Windows.LocalizationCategory.None, Readability=System.Windows.Readability.Unreadable)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Reprezentuje sekwencji kresek i odstępów, które będą stosowane przez <see cref="T:System.Windows.Media.Pen" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Media.DashStyle.Dashes%2A> Właściwości tej klasy w tym artykule opisano długość naprzemiennych kresek i odstępów.  Wartości w kolekcji są pod względem wielokrotności <xref:System.Windows.Media.Pen.Thickness%2A> z <xref:System.Windows.Media.Pen>.  Na przykład tablicę `1`,`2` określa dash długości (`1` * <xref:System.Windows.Media.Pen.Thickness%2A>) następuje przerwę długość (`2` * <xref:System.Windows.Media.Pen.Thickness%2A>).  
  
> [!NOTE]
>  Rzeczywista długość kreski, który ma zostać narysowana zależy od styl <xref:System.Windows.Media.Pen.DashCap%2A> dodana do każdego końca kreska. Wartość domyślna <xref:System.Windows.Media.Pen.DashCap%2A> wartość <xref:System.Windows.Media.Pen> jest <xref:System.Windows.Media.PenLineCap.Square>. Spowoduje to zakończenie, który jest połowę grubość linii do dodania na końcach pociągnięć pióra. (Zobacz <xref:System.Windows.Media.PenLineCap> np.) W związku z tym Jeśli określisz tablicę `0`, `2` i kwadratu <xref:System.Windows.Media.Pen.DashCap%2A>, długość rzeczywista dash zostanie (`0` * <xref:System.Windows.Media.Pen.Thickness%2A>) + (`2` * <xref:System.Windows.Media.Pen.DashCap%2A>).  
  
 W przypadku nieparzystą liczbę wartości w kolekcji wartości są interpretowane tak, jakby była została raz powtórzona i utworzyć parzysta liczba wartości.  Na przykład kolekcja zawierająca `2`,`3`,`5` jest taka sama jak kolekcja zawierająca interpretowane `2`,`3`,`5`,`2`,`3`,`5`.  
  
 Ujemne wartości w tablicy są interpretowane jako ich wartość bezwzględna.  
  
   
  
## Examples  
 Poniższy przykład przedstawia użycie <xref:System.Windows.Media.DashStyle> właściwość <xref:System.Windows.Media.Pen> utworzyć linię kropkowaną pod tekstem.  
  
 [!code-xaml[DrawingMiscSnippets_snip#DashStyle](~/samples/snippets/xaml/VS_Snippets_Wpf/DrawingMiscSnippets_snip/XAML/DashStyleExample.xaml#dashstyle)]  
  
 Na poniższej ilustracji przedstawiono w poprzednim przykładzie tworzy.  
  
 ![Tekst z linią kreskowaną. ] (~/add/media/graphicsdashstyle.gif "Tekst z linią kreskowaną.")  
  
 Na poniższej ilustracji przedstawiono przykłady różnych dash stylów zastosowanych do podkreślenie.  
  
 ![Zawiera kilka różnych dash style. ] (~/add/media/graphicsdashstyles.gif "Zawiera kilka różnych dash style.")  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Media.DashStyles" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.Media.DashStyle" /> klasy.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DashStyle ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.DashStyle.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DashStyle();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.Media.DashStyle" /> klasy.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DashStyle (System.Collections.Generic.IEnumerable&lt;double&gt; dashes, double offset);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IEnumerable`1&lt;float64&gt; dashes, float64 offset) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.DashStyle.#ctor(System.Collections.Generic.IEnumerable{System.Double},System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (dashes As IEnumerable(Of Double), offset As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DashStyle(System::Collections::Generic::IEnumerable&lt;double&gt; ^ dashes, double offset);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="dashes" Type="System.Collections.Generic.IEnumerable&lt;System.Double&gt;" />
        <Parameter Name="offset" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="dashes">
          <see cref="P:System.Windows.Media.DashStyle.Dashes" /> z <see cref="T:System.Windows.Media.DashStyle" />.</param>
        <param name="offset">
          <see cref="P:System.Windows.Media.DashStyle.Offset" /> z <see cref="T:System.Windows.Media.DashStyle" />.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.Media.DashStyle" /> klasy z określonym <see cref="P:System.Windows.Media.DashStyle.Dashes" /> i <see cref="P:System.Windows.Media.DashStyle.Offset" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public System.Windows.Media.DashStyle Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Media.DashStyle Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.DashStyle.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Function Clone () As DashStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Media::DashStyle ^ Clone();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.DashStyle</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Tworzy modyfikowalną klonu tego <see cref="T:System.Windows.Media.DashStyle" />, tworzenie bezpośrednich kopii wartości tego obiektu.</summary>
        <returns>Można modyfikować klonowania bieżącego obiektu. Sklonowany obiekt <see cref="P:System.Windows.Freezable.IsFrozen" /> właściwość jest <see langword="false" /> nawet wtedy, gdy źródło <see cref="P:System.Windows.Freezable.IsFrozen" /> jest właściwość <see langword="true." /></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda służy do tworzenia kopii można modyfikować zablokowane <xref:System.Windows.Freezable> obiektów (lub dowolnej <xref:System.Windows.Freezable> obiektu). Dla wygody ta metoda zasłania dziedziczone wersji z silnie typizowaną implementację.  
  
 Aby uzyskać więcej informacji, zobacz <xref:System.Windows.Freezable.Clone%2A?displayProperty=nameWithType>.  
  
 Podczas kopiowania właściwości zależności, ta metoda kopiuje powiązania odwołań i dane zasobów (może już nie rozpoznają), ale nie animacje lub ich bieżącymi wartościami.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CloneCurrentValue">
      <MemberSignature Language="C#" Value="public System.Windows.Media.DashStyle CloneCurrentValue ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Media.DashStyle CloneCurrentValue() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.DashStyle.CloneCurrentValue" />
      <MemberSignature Language="VB.NET" Value="Public Function CloneCurrentValue () As DashStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Media::DashStyle ^ CloneCurrentValue();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.DashStyle</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Tworzy modyfikowalną klonu tego <see cref="T:System.Windows.Media.DashStyle" /> obiekt Tworzenie bezpośrednich kopii wartości bieżących tego obiektu.</summary>
        <returns>Można modyfikować klonowania bieżącego obiektu. Sklonowany obiekt <see cref="P:System.Windows.Freezable.IsFrozen" /> właściwość jest <see langword="false" /> nawet wtedy, gdy źródło <see cref="P:System.Windows.Freezable.IsFrozen" /> jest właściwość <see langword="true" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda służy do tworzenia kopii można modyfikować zablokowane <xref:System.Windows.Freezable> obiektów (lub dowolnej <xref:System.Windows.Freezable> obiektu). Dla wygody ta metoda zasłania dziedziczone wersji z silnie typizowaną implementację.  
  
 Aby uzyskać więcej informacji, zobacz <xref:System.Windows.Freezable.CloneCurrentValue%2A?displayProperty=nameWithType>.  
  
 Odwołania do zasobu, powiązania danych i animacji nie są kopiowane, ale są ich bieżącymi wartościami.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateInstanceCore">
      <MemberSignature Language="C#" Value="protected override System.Windows.Freezable CreateInstanceCore ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Freezable CreateInstanceCore() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.DashStyle.CreateInstanceCore" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateInstanceCore () As Freezable" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Freezable ^ CreateInstanceCore();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Freezable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dashes">
      <MemberSignature Language="C#" Value="public System.Windows.Media.DoubleCollection Dashes { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.DoubleCollection Dashes" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.DashStyle.Dashes" />
      <MemberSignature Language="VB.NET" Value="Public Property Dashes As DoubleCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Media::DoubleCollection ^ Dashes { System::Windows::Media::DoubleCollection ^ get(); void set(System::Windows::Media::DoubleCollection ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.DoubleCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia kolekcję kresek i odstępów w tym <see cref="T:System.Windows.Media.DashStyle" />.</summary>
        <value>Kolekcja kresek i odstępów.  Wartość domyślna to pusta <see cref="T:System.Windows.Media.DoubleCollection" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta kolekcja zawiera opisy długość naprzemiennych kresek i odstępów.  Wartości w kolekcji są pod względem wielokrotności <xref:System.Windows.Media.Pen.Thickness%2A> z <xref:System.Windows.Media.Pen>.  Na przykład tablicę `1`,`2` określa dash długości (`1` * <xref:System.Windows.Media.Pen.Thickness%2A>) następuje przerwę długość (`2` * <xref:System.Windows.Media.Pen.Thickness%2A>).  
  
> [!NOTE]
>  Rzeczywista długość kreski, który ma zostać narysowana zależy od styl <xref:System.Windows.Media.Pen.DashCap%2A> dodana do każdego końca kreska. Wartość domyślna <xref:System.Windows.Media.Pen.DashCap%2A> wartość <xref:System.Windows.Media.Pen> jest <xref:System.Windows.Media.PenLineCap.Square>. Spowoduje to zakończenie, który jest połowę grubość linii do dodania na końcach pociągnięć pióra. (Zobacz <xref:System.Windows.Media.PenLineCap> np.) W związku z tym Jeśli określisz tablicę `0`, `2` i kwadratu <xref:System.Windows.Media.Pen.DashCap%2A>, długość rzeczywista dash zostanie (`0` * <xref:System.Windows.Media.Pen.Thickness%2A>) + (`2` * <xref:System.Windows.Media.Pen.DashCap%2A>).  
  
 W przypadku nieparzystą liczbę wartości w kolekcji wartości są interpretowane tak, jakby była została raz powtórzona i utworzyć parzysta liczba wartości.  Na przykład kolekcja zawierająca `2`,`3`,`5` jest taka sama jak kolekcja zawierająca interpretowane `2`,`3`,`5`,`2`,`3`,`5`.  
  
 Ujemne wartości w tablicy są interpretowane jako ich wartość bezwzględna.  
  
<a name="dependencyPropertyInfo_Dashes"></a>   
## <a name="dependency-property-information"></a>Informacje dotyczące właściwości zależności  
  
|||  
|-|-|  
|Pole identyfikatora|<xref:System.Windows.Media.DashStyle.DashesProperty>|  
|Wartość właściwości metadanych `true`|Brak|  
  
   
  
## Examples  
 Poniższy przykład przedstawia użycie <xref:System.Windows.Media.DashStyle> właściwość <xref:System.Windows.Media.Pen> utworzyć linię kropkowaną pod tekstem.  
  
 [!code-xaml[DrawingMiscSnippets_snip#DashStyle](~/samples/snippets/xaml/VS_Snippets_Wpf/DrawingMiscSnippets_snip/XAML/DashStyleExample.xaml#dashstyle)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DashesProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty DashesProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty DashesProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Media.DashStyle.DashesProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly DashesProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ DashesProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identyfikuje <see cref="P:System.Windows.Media.DashStyle.Dashes" /> właściwości zależności.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Offset">
      <MemberSignature Language="C#" Value="public double Offset { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Offset" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.DashStyle.Offset" />
      <MemberSignature Language="VB.NET" Value="Public Property Offset As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double Offset { double get(); void set(double value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub Ustawia odległość we właściwej kolejności dash obrysu zostanie uruchomiony.</summary>
        <value>Przesunięcie w sekwencji kreska.  Wartość domyślna to 0.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zdecydowanie zaleca się użyć wartość przesunięcia, który jest rozpoznawany jako środek wszystkie łączniki.  To spowoduje, że większość pociągnięć rozpoczęcia i zakończenia w mid dash zamiast w przerwę.  
  
<a name="dependencyPropertyInfo_Offset"></a>   
## <a name="dependency-property-information"></a>Informacje dotyczące właściwości zależności  
  
|||  
|-|-|  
|Pole identyfikatora|<xref:System.Windows.Media.DashStyle.OffsetProperty>|  
|Wartość właściwości metadanych `true`|Brak|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OffsetProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty OffsetProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty OffsetProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Media.DashStyle.OffsetProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly OffsetProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ OffsetProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identyfikuje <see cref="P:System.Windows.Media.DashStyle.Offset" /> właściwości zależności.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>