<Type Name="FormattedText" FullName="System.Windows.Media.FormattedText">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="f27f5a42751903800a6b1d32f1e1e18b9d10a7e4" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36468954" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class FormattedText" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit FormattedText extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Media.FormattedText" />
  <TypeSignature Language="VB.NET" Value="Public Class FormattedText" />
  <TypeSignature Language="C++ CLI" Value="public ref class FormattedText" />
  <TypeSignature Language="F#" Value="type FormattedText = class" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Rysowanie tekstu w aplikacji Windows Presentation Foundation (WPF) zapewnia kontrolę niskiego poziomu.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Media.FormattedText> Obiekt umożliwia rysowanie tekstu w wielu wierszach, w którym każdy znak w tekście można osobno sformatowany. W poniższym przykładzie przedstawiono tekst, który ma kilka formatów zastosować dla niego.  
  
 ![Tekst wyświetlany przy użyciu obiektu FormattedText](~/add/media/formattedtext01.jpg "tekst wyświetlany przy użyciu obiektu FormattedText")  
Przykład ciągu tekst sformatowany  
  
 Pod względem funkcji tekstu w [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)], <xref:System.Windows.Media.FormattedText> jest traktowane jako "niskiego poziomu" ponieważ przetwarza tekstu jako elementy graficzne. Innych aspektów tekstu w [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] obsługi tekst w kontekście formantów, które są przeznaczone do tekstu (<xref:System.Windows.Controls.TextBlock>, <xref:System.Windows.Controls.TextBox>), implementuje model przepływu dokumentu (zobacz [przepływu dokumentami — omówienie](~/docs/framework/wpf/advanced/flow-document-overview.md)), lub obsługuje [!INCLUDE[TLA2#tla_xps](~/includes/tla2sharptla-xps-md.md)] dokument modelu (zobacz [dokumentów na platformie WPF](~/docs/framework/wpf/advanced/documents-in-wpf.md)).  
  
 Wiele metod ustawiających <xref:System.Windows.Media.FormattedText> ma podobieństwa dołączonych właściwości, które są obsługiwane przez <xref:System.Windows.Documents.TextElement>, ale <xref:System.Windows.Documents.TextElement> dołączone właściwości dotyczą wyższego poziomu tekstu obsługuje dla przepływu lub [!INCLUDE[TLA2#tla_xps](~/includes/tla2sharptla-xps-md.md)].  
  
   
  
## Examples  
 Poniższy przykład tworzy <xref:System.Windows.Media.FormattedText> obiekt, a następnie stosuje kilka stylów formatowania tekstu.  
  
 [!code-csharp[FormattedTextSnippets#FormattedTextSnippets1](~/samples/snippets/csharp/VS_Snippets_Wpf/FormattedTextSnippets/CSharp/Window1.xaml.cs#formattedtextsnippets1)]
 [!code-vb[FormattedTextSnippets#FormattedTextSnippets1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/FormattedTextSnippets/visualbasic/window1.xaml.vb#formattedtextsnippets1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Media.GlyphRun" />
    <altmember cref="T:System.Windows.Media.DrawingContext" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.Media.FormattedText" /> klasy.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FormattedText (string textToFormat, System.Globalization.CultureInfo culture, System.Windows.FlowDirection flowDirection, System.Windows.Media.Typeface typeface, double emSize, System.Windows.Media.Brush foreground);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string textToFormat, class System.Globalization.CultureInfo culture, valuetype System.Windows.FlowDirection flowDirection, class System.Windows.Media.Typeface typeface, float64 emSize, class System.Windows.Media.Brush foreground) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.FormattedText.#ctor(System.String,System.Globalization.CultureInfo,System.Windows.FlowDirection,System.Windows.Media.Typeface,System.Double,System.Windows.Media.Brush)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FormattedText(System::String ^ textToFormat, System::Globalization::CultureInfo ^ culture, System::Windows::FlowDirection flowDirection, System::Windows::Media::Typeface ^ typeface, double emSize, System::Windows::Media::Brush ^ foreground);" />
      <MemberSignature Language="F#" Value="new System.Windows.Media.FormattedText : string * System.Globalization.CultureInfo * System.Windows.FlowDirection * System.Windows.Media.Typeface * double * System.Windows.Media.Brush -&gt; System.Windows.Media.FormattedText" Usage="new System.Windows.Media.FormattedText (textToFormat, culture, flowDirection, typeface, emSize, foreground)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Use the PixelsPerDip override", false)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="textToFormat" Type="System.String" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="flowDirection" Type="System.Windows.FlowDirection" />
        <Parameter Name="typeface" Type="System.Windows.Media.Typeface" />
        <Parameter Name="emSize" Type="System.Double" />
        <Parameter Name="foreground" Type="System.Windows.Media.Brush" />
      </Parameters>
      <Docs>
        <param name="textToFormat">Tekst, który będzie wyświetlany.</param>
        <param name="culture">Określoną kulturę tekstu.</param>
        <param name="flowDirection">Kierunek tekstu jest do odczytu.</param>
        <param name="typeface">Rodziny czcionek, wagi, styl i stretch powinien być sformatowany tekst.</param>
        <param name="emSize">Rozmiar czcionki tekstu powinien być sformatowany w.</param>
        <param name="foreground">Pędzel używany do rysowania każdego symbolu.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.Media.FormattedText" /> z określonego tekstu, kultury, kierunek przepływu krój czcionki, rozmiaru czcionki i pędzla.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FormattedText (string textToFormat, System.Globalization.CultureInfo culture, System.Windows.FlowDirection flowDirection, System.Windows.Media.Typeface typeface, double emSize, System.Windows.Media.Brush foreground, double pixelsPerDip);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string textToFormat, class System.Globalization.CultureInfo culture, valuetype System.Windows.FlowDirection flowDirection, class System.Windows.Media.Typeface typeface, float64 emSize, class System.Windows.Media.Brush foreground, float64 pixelsPerDip) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.FormattedText.#ctor(System.String,System.Globalization.CultureInfo,System.Windows.FlowDirection,System.Windows.Media.Typeface,System.Double,System.Windows.Media.Brush,System.Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FormattedText(System::String ^ textToFormat, System::Globalization::CultureInfo ^ culture, System::Windows::FlowDirection flowDirection, System::Windows::Media::Typeface ^ typeface, double emSize, System::Windows::Media::Brush ^ foreground, double pixelsPerDip);" />
      <MemberSignature Language="F#" Value="new System.Windows.Media.FormattedText : string * System.Globalization.CultureInfo * System.Windows.FlowDirection * System.Windows.Media.Typeface * double * System.Windows.Media.Brush * double -&gt; System.Windows.Media.FormattedText" Usage="new System.Windows.Media.FormattedText (textToFormat, culture, flowDirection, typeface, emSize, foreground, pixelsPerDip)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="textToFormat" Type="System.String" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="flowDirection" Type="System.Windows.FlowDirection" />
        <Parameter Name="typeface" Type="System.Windows.Media.Typeface" />
        <Parameter Name="emSize" Type="System.Double" />
        <Parameter Name="foreground" Type="System.Windows.Media.Brush" />
        <Parameter Name="pixelsPerDip" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="textToFormat">Tekst, który będzie wyświetlany.</param>
        <param name="culture">Określoną kulturę tekstu.</param>
        <param name="flowDirection">Kierunek tekstu jest do odczytu.</param>
        <param name="typeface">Rodziny czcionek, wagi, styl i stretch powinien być sformatowany tekst.</param>
        <param name="emSize">Rozmiar czcionki tekstu em miar, w [! INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-MD.MD)].</param>
        <param name="foreground">Pędzel używany do rysowania każdego symbolu.</param>
        <param name="pixelsPerDip">Wartość pikseli na gęstość niezależne pikseli, która jest odpowiednikiem współczynnik skali. Na przykład, jeśli rozdzielczości ekranu to 120 (lub 1,25 ponieważ 120/96 = 1,25), 1,25 pikseli na gęstość jest rysowane niezależnie od pikseli. DIP to jednostka miary niezależnie od rozdzielczości i DPIs przez WPF.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.Media.FormattedText" /> z określonego tekstu, kultury, kierunek przepływu, krój czcionki, rozmiaru czcionki, pędzla pierwszego planu i pixelsPerDip wartość.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FormattedText (string textToFormat, System.Globalization.CultureInfo culture, System.Windows.FlowDirection flowDirection, System.Windows.Media.Typeface typeface, double emSize, System.Windows.Media.Brush foreground, System.Windows.Media.NumberSubstitution numberSubstitution);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string textToFormat, class System.Globalization.CultureInfo culture, valuetype System.Windows.FlowDirection flowDirection, class System.Windows.Media.Typeface typeface, float64 emSize, class System.Windows.Media.Brush foreground, class System.Windows.Media.NumberSubstitution numberSubstitution) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.FormattedText.#ctor(System.String,System.Globalization.CultureInfo,System.Windows.FlowDirection,System.Windows.Media.Typeface,System.Double,System.Windows.Media.Brush,System.Windows.Media.NumberSubstitution)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FormattedText(System::String ^ textToFormat, System::Globalization::CultureInfo ^ culture, System::Windows::FlowDirection flowDirection, System::Windows::Media::Typeface ^ typeface, double emSize, System::Windows::Media::Brush ^ foreground, System::Windows::Media::NumberSubstitution ^ numberSubstitution);" />
      <MemberSignature Language="F#" Value="new System.Windows.Media.FormattedText : string * System.Globalization.CultureInfo * System.Windows.FlowDirection * System.Windows.Media.Typeface * double * System.Windows.Media.Brush * System.Windows.Media.NumberSubstitution -&gt; System.Windows.Media.FormattedText" Usage="new System.Windows.Media.FormattedText (textToFormat, culture, flowDirection, typeface, emSize, foreground, numberSubstitution)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Use the PixelsPerDip override", false)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="textToFormat" Type="System.String" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="flowDirection" Type="System.Windows.FlowDirection" />
        <Parameter Name="typeface" Type="System.Windows.Media.Typeface" />
        <Parameter Name="emSize" Type="System.Double" />
        <Parameter Name="foreground" Type="System.Windows.Media.Brush" />
        <Parameter Name="numberSubstitution" Type="System.Windows.Media.NumberSubstitution" />
      </Parameters>
      <Docs>
        <param name="textToFormat">Tekst, który będzie wyświetlany.</param>
        <param name="culture">Określoną kulturę tekstu.</param>
        <param name="flowDirection">Kierunek tekstu jest do odczytu.</param>
        <param name="typeface">Rodziny czcionek, wagi, styl i stretch powinien być sformatowany tekst.</param>
        <param name="emSize">Rozmiar czcionki tekstu em miar, w [! INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-MD.MD)].</param>
        <param name="foreground">Pędzel używany do rysowania każdego symbolu.</param>
        <param name="numberSubstitution">Liczba zachowanie podstawienia do zastosowania w tekście.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.Media.FormattedText" /> z określonego tekstu, kultury, kierunek przepływu, krój czcionki, rozmiaru czcionki, pędzla i numer zachowanie podstawienia.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FormattedText (string textToFormat, System.Globalization.CultureInfo culture, System.Windows.FlowDirection flowDirection, System.Windows.Media.Typeface typeface, double emSize, System.Windows.Media.Brush foreground, System.Windows.Media.NumberSubstitution numberSubstitution, double pixelsPerDip);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string textToFormat, class System.Globalization.CultureInfo culture, valuetype System.Windows.FlowDirection flowDirection, class System.Windows.Media.Typeface typeface, float64 emSize, class System.Windows.Media.Brush foreground, class System.Windows.Media.NumberSubstitution numberSubstitution, float64 pixelsPerDip) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.FormattedText.#ctor(System.String,System.Globalization.CultureInfo,System.Windows.FlowDirection,System.Windows.Media.Typeface,System.Double,System.Windows.Media.Brush,System.Windows.Media.NumberSubstitution,System.Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FormattedText(System::String ^ textToFormat, System::Globalization::CultureInfo ^ culture, System::Windows::FlowDirection flowDirection, System::Windows::Media::Typeface ^ typeface, double emSize, System::Windows::Media::Brush ^ foreground, System::Windows::Media::NumberSubstitution ^ numberSubstitution, double pixelsPerDip);" />
      <MemberSignature Language="F#" Value="new System.Windows.Media.FormattedText : string * System.Globalization.CultureInfo * System.Windows.FlowDirection * System.Windows.Media.Typeface * double * System.Windows.Media.Brush * System.Windows.Media.NumberSubstitution * double -&gt; System.Windows.Media.FormattedText" Usage="new System.Windows.Media.FormattedText (textToFormat, culture, flowDirection, typeface, emSize, foreground, numberSubstitution, pixelsPerDip)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="textToFormat" Type="System.String" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="flowDirection" Type="System.Windows.FlowDirection" />
        <Parameter Name="typeface" Type="System.Windows.Media.Typeface" />
        <Parameter Name="emSize" Type="System.Double" />
        <Parameter Name="foreground" Type="System.Windows.Media.Brush" />
        <Parameter Name="numberSubstitution" Type="System.Windows.Media.NumberSubstitution" />
        <Parameter Name="pixelsPerDip" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="textToFormat">Tekst do wyświetlenia.</param>
        <param name="culture">Określoną kulturę tekstu.</param>
        <param name="flowDirection">Kierunek tekstu jest do odczytu.</param>
        <param name="typeface">Rodziny czcionek, wagi, styl i stretch powinien być sformatowany tekst.</param>
        <param name="emSize">Rozmiar czcionki tekstu em miar, w [! INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-MD.MD)].</param>
        <param name="foreground">Pędzel używany do rysowania każdego symbolu.</param>
        <param name="numberSubstitution">Określa sposób wyświetlania liczb w tekście, na podstawie <see cref="T:System.Windows.Media.NumberSubstitution" />. Ta wartość może być <see langword="null" />.</param>
        <param name="pixelsPerDip">Wartość pikseli na gęstość niezależne pikseli, która jest odpowiednikiem współczynnik skali. Na przykład, jeśli rozdzielczości ekranu to 120 (lub 1,25 ponieważ 120/96 = 1,25), 1,25 pikseli na gęstość jest rysowane niezależnie od pikseli. DIP to jednostka miary niezależnie od rozdzielczości i DPIs przez WPF.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.Media.FormattedText" /> z określonego tekstu, kultury, kierunek przepływu, krój, rozmiar czcionki, pędzla pierwszego planu, liczba zachowanie podstawienia i pixelsPerDip wartość.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FormattedText (string textToFormat, System.Globalization.CultureInfo culture, System.Windows.FlowDirection flowDirection, System.Windows.Media.Typeface typeface, double emSize, System.Windows.Media.Brush foreground, System.Windows.Media.NumberSubstitution numberSubstitution, System.Windows.Media.TextFormattingMode textFormattingMode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string textToFormat, class System.Globalization.CultureInfo culture, valuetype System.Windows.FlowDirection flowDirection, class System.Windows.Media.Typeface typeface, float64 emSize, class System.Windows.Media.Brush foreground, class System.Windows.Media.NumberSubstitution numberSubstitution, valuetype System.Windows.Media.TextFormattingMode textFormattingMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.FormattedText.#ctor(System.String,System.Globalization.CultureInfo,System.Windows.FlowDirection,System.Windows.Media.Typeface,System.Double,System.Windows.Media.Brush,System.Windows.Media.NumberSubstitution,System.Windows.Media.TextFormattingMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FormattedText(System::String ^ textToFormat, System::Globalization::CultureInfo ^ culture, System::Windows::FlowDirection flowDirection, System::Windows::Media::Typeface ^ typeface, double emSize, System::Windows::Media::Brush ^ foreground, System::Windows::Media::NumberSubstitution ^ numberSubstitution, System::Windows::Media::TextFormattingMode textFormattingMode);" />
      <MemberSignature Language="F#" Value="new System.Windows.Media.FormattedText : string * System.Globalization.CultureInfo * System.Windows.FlowDirection * System.Windows.Media.Typeface * double * System.Windows.Media.Brush * System.Windows.Media.NumberSubstitution * System.Windows.Media.TextFormattingMode -&gt; System.Windows.Media.FormattedText" Usage="new System.Windows.Media.FormattedText (textToFormat, culture, flowDirection, typeface, emSize, foreground, numberSubstitution, textFormattingMode)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Use the PixelsPerDip override", false)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="textToFormat" Type="System.String" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="flowDirection" Type="System.Windows.FlowDirection" />
        <Parameter Name="typeface" Type="System.Windows.Media.Typeface" />
        <Parameter Name="emSize" Type="System.Double" />
        <Parameter Name="foreground" Type="System.Windows.Media.Brush" />
        <Parameter Name="numberSubstitution" Type="System.Windows.Media.NumberSubstitution" />
        <Parameter Name="textFormattingMode" Type="System.Windows.Media.TextFormattingMode" />
      </Parameters>
      <Docs>
        <param name="textToFormat">Tekst, który będzie wyświetlany.</param>
        <param name="culture">Określoną kulturę tekstu.</param>
        <param name="flowDirection">Kierunek tekstu jest do odczytu.</param>
        <param name="typeface">Rodziny czcionek, wagi, styl i stretch powinien być sformatowany tekst.</param>
        <param name="emSize">Rozmiar czcionki tekstu em miar, w [! INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-MD.MD)].</param>
        <param name="foreground">Pędzel używany do rysowania każdego symbolu.</param>
        <param name="numberSubstitution">Liczba zachowanie podstawienia do zastosowania w tekście.</param>
        <param name="textFormattingMode">
          <see cref="T:System.Windows.Media.TextFormattingMode" /> Do zastosowania w tekście.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.Media.FormattedText" /> z określonego tekstu, kultury, kierunek przepływu, krój czcionki, rozmiaru czcionki, pędzla, numer zachowanie podstawienia i tryb formatowania tekstu.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FormattedText (string textToFormat, System.Globalization.CultureInfo culture, System.Windows.FlowDirection flowDirection, System.Windows.Media.Typeface typeface, double emSize, System.Windows.Media.Brush foreground, System.Windows.Media.NumberSubstitution numberSubstitution, System.Windows.Media.TextFormattingMode textFormattingMode, double pixelsPerDip);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string textToFormat, class System.Globalization.CultureInfo culture, valuetype System.Windows.FlowDirection flowDirection, class System.Windows.Media.Typeface typeface, float64 emSize, class System.Windows.Media.Brush foreground, class System.Windows.Media.NumberSubstitution numberSubstitution, valuetype System.Windows.Media.TextFormattingMode textFormattingMode, float64 pixelsPerDip) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.FormattedText.#ctor(System.String,System.Globalization.CultureInfo,System.Windows.FlowDirection,System.Windows.Media.Typeface,System.Double,System.Windows.Media.Brush,System.Windows.Media.NumberSubstitution,System.Windows.Media.TextFormattingMode,System.Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FormattedText(System::String ^ textToFormat, System::Globalization::CultureInfo ^ culture, System::Windows::FlowDirection flowDirection, System::Windows::Media::Typeface ^ typeface, double emSize, System::Windows::Media::Brush ^ foreground, System::Windows::Media::NumberSubstitution ^ numberSubstitution, System::Windows::Media::TextFormattingMode textFormattingMode, double pixelsPerDip);" />
      <MemberSignature Language="F#" Value="new System.Windows.Media.FormattedText : string * System.Globalization.CultureInfo * System.Windows.FlowDirection * System.Windows.Media.Typeface * double * System.Windows.Media.Brush * System.Windows.Media.NumberSubstitution * System.Windows.Media.TextFormattingMode * double -&gt; System.Windows.Media.FormattedText" Usage="new System.Windows.Media.FormattedText (textToFormat, culture, flowDirection, typeface, emSize, foreground, numberSubstitution, textFormattingMode, pixelsPerDip)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="textToFormat" Type="System.String" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="flowDirection" Type="System.Windows.FlowDirection" />
        <Parameter Name="typeface" Type="System.Windows.Media.Typeface" />
        <Parameter Name="emSize" Type="System.Double" />
        <Parameter Name="foreground" Type="System.Windows.Media.Brush" />
        <Parameter Name="numberSubstitution" Type="System.Windows.Media.NumberSubstitution" />
        <Parameter Name="textFormattingMode" Type="System.Windows.Media.TextFormattingMode" />
        <Parameter Name="pixelsPerDip" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="textToFormat">Tekst do wyświetlenia.</param>
        <param name="culture">Określoną kulturę tekstu.</param>
        <param name="flowDirection">Kierunek tekstu jest do odczytu.</param>
        <param name="typeface">Rodziny czcionek, wagi, styl i stretch powinien być sformatowany tekst.</param>
        <param name="emSize">Rozmiar czcionki tekstu em miar, w [! INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-MD.MD)].</param>
        <param name="foreground">HE pędzel używany do rysowania każdego symbolu.</param>
        <param name="numberSubstitution">Określa sposób wyświetlania liczb w tekście, na podstawie <see cref="T:System.Windows.Media.NumberSubstitution" />. Ta wartość może być <see langword="null" />.</param>
        <param name="textFormattingMode">Tryb formatowania, która wpływa na sposób wyświetlania tekstu w WPF.</param>
        <param name="pixelsPerDip">Wartość pikseli na gęstość niezależne pikseli, która jest odpowiednikiem współczynnik skali. Na przykład, jeśli rozdzielczości ekranu to 120 (lub 1,25 ponieważ 120/96 = 1,25), 1,25 pikseli na gęstość jest rysowane niezależnie od pikseli. DIP to jednostka miary niezależnie od rozdzielczości i DPIs przez WPF.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.Media.FormattedText" /> z określonego tekstu, kultury, kierunek przepływu, krój, rozmiar czcionki, pędzla pierwszego planu, liczba zachowanie podstawienia i pixelsPerDip wartość.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Baseline">
      <MemberSignature Language="C#" Value="public double Baseline { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Baseline" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.FormattedText.Baseline" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Baseline As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double Baseline { double get(); };" />
      <MemberSignature Language="F#" Value="member this.Baseline : double" Usage="System.Windows.Media.FormattedText.Baseline" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera odległość od góry pierwszego wiersza do linii bazowej w pierwszym wierszu <see cref="T:System.Windows.Media.FormattedText" /> obiektu.</summary>
        <value>Odległość od góry pierwszego wiersza do linii bazowej pierwszego wiersza, podany w [! INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-MD.MD)].</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BuildGeometry">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Geometry BuildGeometry (System.Windows.Point origin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Media.Geometry BuildGeometry(valuetype System.Windows.Point origin) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.FormattedText.BuildGeometry(System.Windows.Point)" />
      <MemberSignature Language="VB.NET" Value="Public Function BuildGeometry (origin As Point) As Geometry" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Media::Geometry ^ BuildGeometry(System::Windows::Point origin);" />
      <MemberSignature Language="F#" Value="member this.BuildGeometry : System.Windows.Point -&gt; System.Windows.Media.Geometry" Usage="formattedText.BuildGeometry origin" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Geometry</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="origin" Type="System.Windows.Point" />
      </Parameters>
      <Docs>
        <param name="origin">Pochodzenie lewego górnego wynikowy geometrii.</param>
        <summary>Zwraca <see cref="T:System.Windows.Media.Geometry" /> obiekt, który reprezentuje tekst sformatowany, w tym wszystkie symbole i dekoracji tekstu.</summary>
        <returns>
          <see cref="T:System.Windows.Media.Geometry" /> Obiekt reprezentację tekst sformatowany.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli tekst jest konwertowany na <xref:System.Windows.Media.Geometry> obiektu, nie jest już zbiór znaków — nie można zmodyfikować znaków w ciągu tekstowym. Jednak może wpływać na wygląd tekst skonwertowany zmieniając jej obrysu i wypełnienie właściwości.  
  
 Poniższe przykłady przedstawiają kilka sposobów tworzenia efekty wizualne, modyfikując obrysu i wypełnienia przekonwertowanego tekstu.  
  
 ![Tekst z różnymi kolorami wypełnienia i pociągnięcia](~/add/media/outlinedtext03.jpg "tekst z różnymi kolorami wypełnienia i pociągnięcia")  
Przykładowa konfiguracja obrysu i wypełnienia do różnych kolorów  
  
 ![Tekst z pędzel obrazu na obrysu](~/add/media/outlinedtext04.jpg "tekst z zastosowany do obrysu pędzla obrazu")  
Przykład pędzel obrazu na obrysu  
  
 Tekst, który jest konwertowane na i renderowane jako <xref:System.Windows.Media.Geometry> obiektu może wyglądać inaczej jako tekst odwzorowany bezpośrednio:  
  
-   Tekst konwertowany na <xref:System.Windows.Media.Geometry> obiekt nie jest renderowany przy użyciu ClearType. Ponadto linii bazowej skonwertowany nie jest przypięta do piksela całej wyświetlana.  
  
-   Małe czcionki, takich jak często używane w treści, mogą utracić czytelności, są wyświetlane rozmyte i różnią się w wyglądu.  
  
   
  
## Examples  
 Poniższy przykład przedstawia sposób tworzenia <xref:System.Windows.Media.FormattedText> obiektu i pobrać mają geometrię tekst sformatowany i jego pola ograniczającego.  
  
 [!code-csharp[OutlineTextControlViewer#CreateText](~/samples/snippets/csharp/VS_Snippets_Wpf/OutlineTextControlViewer/CSharp/OutlineTextControl.cs#createtext)]
 [!code-vb[OutlineTextControlViewer#CreateText](~/samples/snippets/visualbasic/VS_Snippets_Wpf/OutlineTextControlViewer/visualbasic/outlinetextcontrol.vb#createtext)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="BuildHighlightGeometry">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Zwraca <see cref="T:System.Windows.Media.Geometry" /> obiekt, który reprezentuje obwiedni wyróżnianie tekstu sformatowanego.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="BuildHighlightGeometry">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Geometry BuildHighlightGeometry (System.Windows.Point origin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Media.Geometry BuildHighlightGeometry(valuetype System.Windows.Point origin) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.FormattedText.BuildHighlightGeometry(System.Windows.Point)" />
      <MemberSignature Language="VB.NET" Value="Public Function BuildHighlightGeometry (origin As Point) As Geometry" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Media::Geometry ^ BuildHighlightGeometry(System::Windows::Point origin);" />
      <MemberSignature Language="F#" Value="member this.BuildHighlightGeometry : System.Windows.Point -&gt; System.Windows.Media.Geometry" Usage="formattedText.BuildHighlightGeometry origin" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Geometry</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="origin" Type="System.Windows.Point" />
      </Parameters>
      <Docs>
        <param name="origin">Pochodzenie region wyróżnienia.</param>
        <summary>Zwraca <see cref="T:System.Windows.Media.Geometry" /> obiekt, który reprezentuje obwiedni wyróżnianie tekstu sformatowanego.</summary>
        <returns>
          <see cref="T:System.Windows.Media.Geometry" /> Obiekt, który reprezentuje obwiedni wyróżnianie tekstu sformatowanego.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ograniczający region pole zawiera obszar cały tekst sformatowany, zaczynając od punktu określonego przez `origin`. Zwrócona <xref:System.Windows.Media.Geometry> obiekt zawiera tylko obwiedni wyróżnionego tekstu i nie zawiera żadnych renderowanego tekstu.  
  
 Poniższy przykład przedstawia sposób tworzenia efekty wizualne, modyfikując obrysu i wyróżnianie tekstu przekonwertowany.  
  
 ![Tekst z pędzel obrazu na obrysu](~/add/media/outlinedtext05.jpg "tekst z zastosowany do obrysu pędzla obrazu")  
Przykład pędzel obrazu na obrysu i wyróżnienia  
  
   
  
## Examples  
 Poniższy przykład przedstawia sposób tworzenia <xref:System.Windows.Media.FormattedText> obiektu i pobrać mają geometrię tekst sformatowany i jego pola ograniczającego.  
  
 [!code-csharp[OutlineTextControlViewer#CreateText](~/samples/snippets/csharp/VS_Snippets_Wpf/OutlineTextControlViewer/CSharp/OutlineTextControl.cs#createtext)]
 [!code-vb[OutlineTextControlViewer#CreateText](~/samples/snippets/visualbasic/VS_Snippets_Wpf/OutlineTextControlViewer/visualbasic/outlinetextcontrol.vb#createtext)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BuildHighlightGeometry">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Geometry BuildHighlightGeometry (System.Windows.Point origin, int startIndex, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Media.Geometry BuildHighlightGeometry(valuetype System.Windows.Point origin, int32 startIndex, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.FormattedText.BuildHighlightGeometry(System.Windows.Point,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function BuildHighlightGeometry (origin As Point, startIndex As Integer, count As Integer) As Geometry" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Media::Geometry ^ BuildHighlightGeometry(System::Windows::Point origin, int startIndex, int count);" />
      <MemberSignature Language="F#" Value="member this.BuildHighlightGeometry : System.Windows.Point * int * int -&gt; System.Windows.Media.Geometry" Usage="formattedText.BuildHighlightGeometry (origin, startIndex, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Geometry</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="origin" Type="System.Windows.Point" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="origin">Pochodzenie region wyróżnienia.</param>
        <param name="startIndex">Indeks początkowy znaku, który należy uzyskać granice wyróżnienia.</param>
        <param name="count">Powinna zawierać liczbę znaków granice wyróżnienia.</param>
        <summary>Zwraca <see cref="T:System.Windows.Media.Geometry" /> obiekt, który reprezentuje wyróżnienie obwiedni wskazany podciąg sformatowanego tekstu.</summary>
        <returns>
          <see cref="T:System.Windows.Media.Geometry" /> Obiekt, który reprezentuje wyróżnienie obwiedni podciągu tekst sformatowany.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zwrócona <xref:System.Windows.Media.Geometry> obiekt zawiera tylko obwiedni wyróżnionego tekstu i nie zawiera żadnych renderowanego tekstu.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Extent">
      <MemberSignature Language="C#" Value="public double Extent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Extent" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.FormattedText.Extent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Extent As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double Extent { double get(); };" />
      <MemberSignature Language="F#" Value="member this.Extent : double" Usage="System.Windows.Media.FormattedText.Extent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera odległość od znajdujące się najwyżej piksela narysowanego pierwszego wiersza, aby znajdujących się najniżej narysowanego pikselach ostatniego wiersza.</summary>
        <value>Odległość od najwyższego piksela narysowanego pierwszego wiersza do znajdujących się najniżej narysowanego pikselach ostatniego wiersza zawarte w [! INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-MD.MD)].</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zakres obejmuje wszystkie elementy graficzne, które mogą być obecne w symbolu, w tym ozdobne elementów, które mogą wykraczać poza wysokość wiersza, linii bazowej lub znacznego udziału. Ta wartość jest zależna od znaki znajdujące się w wierszu i w związku z tym nie jest używana (i nie powinna być używana) do uzyskania wierszami. Można ją jednak umożliwia wyrównywanie początku lub końca akapitów elementy graficzne, lub w przypadku testowania trafień.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FlowDirection">
      <MemberSignature Language="C#" Value="public System.Windows.FlowDirection FlowDirection { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.FlowDirection FlowDirection" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.FormattedText.FlowDirection" />
      <MemberSignature Language="VB.NET" Value="Public Property FlowDirection As FlowDirection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::FlowDirection FlowDirection { System::Windows::FlowDirection get(); void set(System::Windows::FlowDirection value); };" />
      <MemberSignature Language="F#" Value="member this.FlowDirection : System.Windows.FlowDirection with get, set" Usage="System.Windows.Media.FormattedText.FlowDirection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.FlowDirection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia <see cref="T:System.Windows.FlowDirection" /> z <see cref="T:System.Windows.Media.FormattedText" /> obiektu.</summary>
        <value>
          <see cref="T:System.Windows.FlowDirection" /> Sformatowanego tekstu.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMaxTextWidths">
      <MemberSignature Language="C#" Value="public double[] GetMaxTextWidths ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance float64[] GetMaxTextWidths() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.FormattedText.GetMaxTextWidths" />
      <MemberSignature Language="VB.NET" Value="Public Function GetMaxTextWidths () As Double()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;double&gt; ^ GetMaxTextWidths();" />
      <MemberSignature Language="F#" Value="member this.GetMaxTextWidths : unit -&gt; double[]" Usage="formattedText.GetMaxTextWidths " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Pobiera tablicę szerokości tekstu. Każdy element tablicy reprezentuje szerokości tekstu z kolejnych wierszy tekstu.</summary>
        <returns>Tablicę szerokości tekstu każdego szerokość zawarte w [! INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-MD.MD)].</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli wierszy tekstu przekracza liczbę elementów w tablicy, ostatnią wartość elementu jest używany dla pozostałych wierszy. Jeśli nie jest tablicy o długości `null`, tablica wartości <xref:System.Windows.Media.FormattedText.GetMaxTextWidths%2A> są używane zamiast <xref:System.Windows.Media.FormattedText.MaxTextWidth%2A> wartości właściwości.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Height">
      <MemberSignature Language="C#" Value="public double Height { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Height" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.FormattedText.Height" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Height As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double Height { double get(); };" />
      <MemberSignature Language="F#" Value="member this.Height : double" Usage="System.Windows.Media.FormattedText.Height" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera odległość od góry pierwszy wiersz na końcu ostatniego wiersza <see cref="T:System.Windows.Media.FormattedText" /> obiektu.</summary>
        <value>Odległość od początku pierwszy wiersz na końcu ostatniego wiersza zawarte w [! INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-MD.MD)].</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LineHeight">
      <MemberSignature Language="C#" Value="public double LineHeight { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 LineHeight" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.FormattedText.LineHeight" />
      <MemberSignature Language="VB.NET" Value="Public Property LineHeight As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double LineHeight { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.LineHeight : double with get, set" Usage="System.Windows.Media.FormattedText.LineHeight" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wysokość wiersza lub wiersza odstępy między wierszami.</summary>
        <value>Wiersza odstępy między wierszami, w [! INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-MD.MD)].</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wysokość wiersza domyślna jest obliczana automatycznie i jest oparta na wartości czcionki, która została przekazana jako parametr <xref:System.Windows.Media.FormattedText.%23ctor%2A> konstruktora.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxLineCount">
      <MemberSignature Language="C#" Value="public int MaxLineCount { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxLineCount" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.FormattedText.MaxLineCount" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxLineCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaxLineCount { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.MaxLineCount : int with get, set" Usage="System.Windows.Media.FormattedText.MaxLineCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia maksymalną liczbę wierszy do wyświetlenia. Tekst powyżej <see cref="P:System.Windows.Media.FormattedText.MaxLineCount" /> nie będą wyświetlane.</summary>
        <value>Maksymalna liczba wierszy do wyświetlenia.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Windows.Media.FormattedText.Trimming%2A> właściwości jak pominięcia tekst kontrolki jest reprezentowana przekroczenia tekst <xref:System.Windows.Media.FormattedText.MaxLineCount%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxTextHeight">
      <MemberSignature Language="C#" Value="public double MaxTextHeight { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 MaxTextHeight" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.FormattedText.MaxTextHeight" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxTextHeight As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double MaxTextHeight { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.MaxTextHeight : double with get, set" Usage="System.Windows.Media.FormattedText.MaxTextHeight" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia maksymalną wysokość to kolumna tekstowa.</summary>
        <value>Maksymalna wysokość kolumny tekstu, w [! INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-MD.MD)].</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ostatni wiersz tekstu wyświetlanego jest ostatnim cały wiersz, który zmieści się w <xref:System.Windows.Media.FormattedText.MaxTextHeight%2A> limit lub numer wiersza, która nie przekracza <xref:System.Windows.Media.FormattedText.MaxLineCount%2A> właściwości, w zależności od wykonane jako pierwsze.  
  
   
  
## Examples  
 Poniższy przykład tworzy <xref:System.Windows.Media.FormattedText> obiekt, a następnie stosuje kilka stylów formatowania tekstu, w tym <xref:System.Windows.Media.FormattedText.MaxTextHeight%2A>.  
  
 [!code-csharp[FormattedTextSnippets#FormattedTextSnippets1](~/samples/snippets/csharp/VS_Snippets_Wpf/FormattedTextSnippets/CSharp/Window1.xaml.cs#formattedtextsnippets1)]
 [!code-vb[FormattedTextSnippets#FormattedTextSnippets1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/FormattedTextSnippets/visualbasic/window1.xaml.vb#formattedtextsnippets1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxTextWidth">
      <MemberSignature Language="C#" Value="public double MaxTextWidth { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 MaxTextWidth" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.FormattedText.MaxTextWidth" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxTextWidth As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double MaxTextWidth { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.MaxTextWidth : double with get, set" Usage="System.Windows.Media.FormattedText.MaxTextWidth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia szerokość maksymalna tekstu (długość) dla wiersza tekstu.</summary>
        <value>Szerokość maksymalna tekst wiersza tekstu, w [! INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-MD.MD)].</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Tekst zostanie zawinięty w celu uniknięcia przekroczenia <xref:System.Windows.Media.FormattedText.MaxTextWidth%2A> limit.  
  
 Symbol wyrównania krawędzi muszą być przechowywane w ramach limitów liczby wierszy. Ponieważ wiele czcionek zawiera symbole, które są nieco być umieszczany nad ich wyrównanie krawędzi, Zezwalaj na żądanie margines em (rozmiar czcionki) co najmniej 1/6 poza liczba wierszy, aby zostawić miejsce dla takich znacznego udziału.  
  
 Wartość zerową dla licznik wierszy jest traktowana jako liczba prostej.  
  
   
  
## Examples  
 Poniższy przykład tworzy <xref:System.Windows.Media.FormattedText> obiekt, a następnie stosuje kilka stylów formatowania tekstu, w tym <xref:System.Windows.Media.FormattedText.MaxTextWidth%2A>.  
  
 [!code-csharp[FormattedTextSnippets#FormattedTextSnippets1](~/samples/snippets/csharp/VS_Snippets_Wpf/FormattedTextSnippets/CSharp/Window1.xaml.cs#formattedtextsnippets1)]
 [!code-vb[FormattedTextSnippets#FormattedTextSnippets1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/FormattedTextSnippets/visualbasic/window1.xaml.vb#formattedtextsnippets1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MinWidth">
      <MemberSignature Language="C#" Value="public double MinWidth { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 MinWidth" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.FormattedText.MinWidth" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MinWidth As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double MinWidth { double get(); };" />
      <MemberSignature Language="F#" Value="member this.MinWidth : double" Usage="System.Windows.Media.FormattedText.MinWidth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera najmniejszą szerokość możliwe tekstu, który pełni może zawierać zawartość określony tekst.</summary>
        <value>Szerokość minimalna tekst źródła tekstu, w [! INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-MD.MD)].</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Następujący tekst ilustrowane używa szerokość minimalna tekstu dla tekstu źródłowego, który wyświetla jako wiele wierszy. Szerokość minimalna tekstu odnosi się do programu word, który ma największy szerokość — w tym przypadku słowo "przeskoki". Należy zauważyć, że wiele słów mogą być wyświetlane na tej samej linii, tak długo, jak ich łączna szerokość nie przekracza szerokość minimalna tekstu.  
  
 ![Program formatujący tekstu przy użyciu minimalna szerokość akapitu](~/add/media/textformatter03.png "tekst elementu formatującego za pomocą minimalna szerokość akapitu")  
Szerokość minimalna tekstu  
  
 Jeśli wartość przekazywana do <xref:System.Windows.Media.FormattedText.MaxTextWidth%2A> jest większa lub równa wartości <xref:System.Windows.Media.FormattedText.MinWidth%2A>, tekst zostanie sformatowany bez wielokropka znaków.  
  
   
  
## Examples  
 Poniższy przykład przedstawia użycie <xref:System.Windows.Media.FormattedText.MinWidth%2A> właściwość, aby wygenerować szerokość minimalna tekstu sformatowanego wierszy tekstu.  
  
 [!code-csharp[FormattedTextSnippets#FormattedTextSnippets3](~/samples/snippets/csharp/VS_Snippets_Wpf/FormattedTextSnippets/CSharp/Window1.xaml.cs#formattedtextsnippets3)]
 [!code-vb[FormattedTextSnippets#FormattedTextSnippets3](~/samples/snippets/visualbasic/VS_Snippets_Wpf/FormattedTextSnippets/visualbasic/window1.xaml.vb#formattedtextsnippets3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OverhangAfter">
      <MemberSignature Language="C#" Value="public double OverhangAfter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 OverhangAfter" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.FormattedText.OverhangAfter" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property OverhangAfter As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double OverhangAfter { double get(); };" />
      <MemberSignature Language="F#" Value="member this.OverhangAfter : double" Usage="System.Windows.Media.FormattedText.OverhangAfter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera odległość od dołu ostatniego wiersza tekstu do znajdujących się najniżej narysowanego pikselach.</summary>
        <value>Odległość od dołu ostatniego wiersza znajdujących się najniżej piksel połączone, podany w [! INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-MD.MD)].</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wartość jest dodatnia, jeśli znajdujących się najniżej narysowanego pikselach przechodzi poniżej dolnej wiersza i jest ujemna, jeśli znajduje się w (włączone lub nowszej) wiersza.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OverhangLeading">
      <MemberSignature Language="C#" Value="public double OverhangLeading { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 OverhangLeading" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.FormattedText.OverhangLeading" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property OverhangLeading As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double OverhangLeading { double get(); };" />
      <MemberSignature Language="F#" Value="member this.OverhangLeading : double" Usage="System.Windows.Media.FormattedText.OverhangLeading" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera maksymalną odległość od początku punktu wyrównanie do początku piksela narysowanego wiersza.</summary>
        <value>Maksymalną odległość od początku wyrównania wskaż wiodące pikseli narysowanego wiersza, w [! INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-MD.MD)].</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Gdy głównym punktem wyrównania przed wiodące narysowanego pikseli, wartość jest ujemna.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OverhangTrailing">
      <MemberSignature Language="C#" Value="public double OverhangTrailing { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 OverhangTrailing" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.FormattedText.OverhangTrailing" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property OverhangTrailing As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double OverhangTrailing { double get(); };" />
      <MemberSignature Language="F#" Value="member this.OverhangTrailing : double" Usage="System.Windows.Media.FormattedText.OverhangTrailing" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera maksymalną odległość od końcowej piksela połączone, aby punkt końcowy wyrównanie linii.</summary>
        <value>Maksymalną odległość od końcowe wypełnieniu piksela punkt końcowy wyrównanie wiersza, w [! INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-MD.MD)].</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Media.FormattedText.OverhangTrailing%2A> Wartość będzie dodatni, gdy końcowe narysowanego pikselach przed punkt końcowy wyrównania.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PixelsPerDip">
      <MemberSignature Language="C#" Value="public double PixelsPerDip { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 PixelsPerDip" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.FormattedText.PixelsPerDip" />
      <MemberSignature Language="VB.NET" Value="Public Property PixelsPerDip As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double PixelsPerDip { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.PixelsPerDip : double with get, set" Usage="System.Windows.Media.FormattedText.PixelsPerDip" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia PixelsPerDip tekst powinien być renderowany.</summary>
        <value>Bieżący <see cref="P:System.Windows.Media.FormattedText.PixelsPerDip" /> wartość.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetCulture">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Ustawia <see cref="T:System.Globalization.CultureInfo" /> tekstu sformatowanego.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetCulture">
      <MemberSignature Language="C#" Value="public void SetCulture (System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetCulture(class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.FormattedText.SetCulture(System.Globalization.CultureInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetCulture (culture As CultureInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetCulture(System::Globalization::CultureInfo ^ culture);" />
      <MemberSignature Language="F#" Value="member this.SetCulture : System.Globalization.CultureInfo -&gt; unit" Usage="formattedText.SetCulture culture" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="culture">
          <see cref="T:System.Globalization.CultureInfo" /> Do użycia na potrzeby formatowania tekstu.</param>
        <summary>Ustawia <see cref="T:System.Globalization.CultureInfo" /> dla całego zestawu znaków <see cref="T:System.Windows.Media.FormattedText" /> obiektu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Globalization.CultureInfo> Klasa przechowuje informacje specyficzne dla kultury, takie jak skojarzone języka, odmianą języka, kraj/region, kalendarza i konwencje kultury. Ta klasa udostępnia także dostęp do wystąpień specyficzne dla kultury <xref:System.Globalization.DateTimeFormatInfo>, <xref:System.Globalization.NumberFormatInfo>, <xref:System.Globalization.CompareInfo>, i <xref:System.Globalization.TextInfo>. Obiekty te zawierają informacje wymagane dla operacji specyficzne dla kultury, takich jak wielkość liter, formatowania daty i liczby i porównywanie ciągów.  
  
 Ta metoda ustawia wartość informacji kultury cały tekst. Aby ustawić wartość informacji kultury część ciągu tekstowego, użyj <xref:System.Windows.Media.FormattedText.SetCulture%28System.Globalization.CultureInfo%2CSystem.Int32%2CSystem.Int32%29> metody.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetCulture">
      <MemberSignature Language="C#" Value="public void SetCulture (System.Globalization.CultureInfo culture, int startIndex, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetCulture(class System.Globalization.CultureInfo culture, int32 startIndex, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.FormattedText.SetCulture(System.Globalization.CultureInfo,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetCulture (culture As CultureInfo, startIndex As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetCulture(System::Globalization::CultureInfo ^ culture, int startIndex, int count);" />
      <MemberSignature Language="F#" Value="member this.SetCulture : System.Globalization.CultureInfo * int * int -&gt; unit" Usage="formattedText.SetCulture (culture, startIndex, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="culture">
          <see cref="T:System.Globalization.CultureInfo" /> Do użycia na potrzeby formatowania tekstu.</param>
        <param name="startIndex">Indeks początkowy znaku początkowej, aby zastosować zmiany.</param>
        <param name="count">Liczba znaków, który powinien być zastosowany zmiany.</param>
        <summary>Ustawia <see cref="T:System.Globalization.CultureInfo" /> dla określonego podzbioru znaków <see cref="T:System.Windows.Media.FormattedText" /> obiektu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Globalization.CultureInfo> Klasa przechowuje informacje specyficzne dla kultury, takie jak skojarzone języka, odmianą języka, kraj/region, kalendarza i konwencje kultury. Ta klasa udostępnia także dostęp do wystąpień specyficzne dla kultury <xref:System.Globalization.DateTimeFormatInfo>, <xref:System.Globalization.NumberFormatInfo>, <xref:System.Globalization.CompareInfo>, i <xref:System.Globalization.TextInfo>. Obiekty te zawierają informacje wymagane dla operacji specyficzne dla kultury, takich jak wielkość liter, formatowania daty i liczby i porównywanie ciągów.  
  
 Aby ustawić wartość informacji kultury cały tekst, użyj <xref:System.Windows.Media.FormattedText.SetCulture%28System.Globalization.CultureInfo%29> metody.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetFontFamily">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Ustawia rodzinę czcionek dla <see cref="T:System.Windows.Media.FormattedText" /> obiektu.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetFontFamily">
      <MemberSignature Language="C#" Value="public void SetFontFamily (string fontFamily);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetFontFamily(string fontFamily) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.FormattedText.SetFontFamily(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetFontFamily (fontFamily As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetFontFamily(System::String ^ fontFamily);" />
      <MemberSignature Language="F#" Value="member this.SetFontFamily : string -&gt; unit" Usage="formattedText.SetFontFamily fontFamily" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fontFamily" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="fontFamily">Ciąg, który konstruuje <see cref="T:System.Windows.Media.FontFamily" /> do użycia na potrzeby formatowania tekstu. Dozwolone jest stosowanie przejścia; Aby uzyskać więcej informacji, zobacz <see cref="T:System.Windows.Media.FontFamily" />.</param>
        <summary>Ustawia rodzinę czcionek dla całego zestawu znaków <see cref="T:System.Windows.Media.FormattedText" /> obiektu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda ustawia wartość rodziny czcionek dla ciągu cały tekst. Aby ustawić wartość rodziny czcionek część ciągu tekstowego, użyj <xref:System.Windows.Media.FormattedText.SetFontFamily%28System.String%2CSystem.Int32%2CSystem.Int32%29> metody.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetFontFamily">
      <MemberSignature Language="C#" Value="public void SetFontFamily (System.Windows.Media.FontFamily fontFamily);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetFontFamily(class System.Windows.Media.FontFamily fontFamily) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.FormattedText.SetFontFamily(System.Windows.Media.FontFamily)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetFontFamily(System::Windows::Media::FontFamily ^ fontFamily);" />
      <MemberSignature Language="F#" Value="member this.SetFontFamily : System.Windows.Media.FontFamily -&gt; unit" Usage="formattedText.SetFontFamily fontFamily" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fontFamily" Type="System.Windows.Media.FontFamily" />
      </Parameters>
      <Docs>
        <param name="fontFamily">
          <see cref="T:System.Windows.Media.FontFamily" /> Do użycia na potrzeby formatowania tekstu.</param>
        <summary>Ustawia rodzinę czcionek dla <see cref="T:System.Windows.Media.FormattedText" /> obiektu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda ustawia wartość rodziny czcionek dla ciągu cały tekst. Aby ustawić wartość rodziny czcionek część ciągu tekstowego, użyj <xref:System.Windows.Media.FormattedText.SetFontFamily%2A> metody.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetFontFamily">
      <MemberSignature Language="C#" Value="public void SetFontFamily (string fontFamily, int startIndex, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetFontFamily(string fontFamily, int32 startIndex, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.FormattedText.SetFontFamily(System.String,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetFontFamily (fontFamily As String, startIndex As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetFontFamily(System::String ^ fontFamily, int startIndex, int count);" />
      <MemberSignature Language="F#" Value="member this.SetFontFamily : string * int * int -&gt; unit" Usage="formattedText.SetFontFamily (fontFamily, startIndex, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fontFamily" Type="System.String" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="fontFamily">Ciąg, który konstruuje <see cref="T:System.Windows.Media.FontFamily" /> do użycia na potrzeby formatowania tekstu. Dozwolone jest stosowanie przejścia; Aby uzyskać więcej informacji, zobacz <see cref="T:System.Windows.Media.FontFamily" />.</param>
        <param name="startIndex">Indeks początkowy znaku początkowego dotyczyć rodziny czcionek zmienić.</param>
        <param name="count">Liczba znaków, które dotyczą zmiany.</param>
        <summary>Ustawia rodzinę czcionek dla określonego podzbioru znaków w <see cref="T:System.Windows.Media.FormattedText" /> obiektu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby ustawić wartość rodziny czcionek cały tekst, użyj <xref:System.Windows.Media.FormattedText.SetFontFamily%2A> metody.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetFontFamily">
      <MemberSignature Language="C#" Value="public void SetFontFamily (System.Windows.Media.FontFamily fontFamily, int startIndex, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetFontFamily(class System.Windows.Media.FontFamily fontFamily, int32 startIndex, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.FormattedText.SetFontFamily(System.Windows.Media.FontFamily,System.Int32,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetFontFamily(System::Windows::Media::FontFamily ^ fontFamily, int startIndex, int count);" />
      <MemberSignature Language="F#" Value="member this.SetFontFamily : System.Windows.Media.FontFamily * int * int -&gt; unit" Usage="formattedText.SetFontFamily (fontFamily, startIndex, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fontFamily" Type="System.Windows.Media.FontFamily" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="fontFamily">
          <see cref="T:System.Windows.Media.FontFamily" /> Do użycia na potrzeby formatowania tekstu.</param>
        <param name="startIndex">Indeks początkowy znaku początkowego dotyczyć rodziny czcionek zmienić.</param>
        <param name="count">Liczba znaków, które dotyczą zmiany.</param>
        <summary>Ustawia rodzinę czcionek dla określonego podzbioru znaków w <see cref="T:System.Windows.Media.FormattedText" /> obiektu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby ustawić wartość rodziny czcionek cały tekst, użyj <xref:System.Windows.Media.FormattedText.SetFontFamily%2A> metody.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetFontSize">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Ustawia rozmiar czcionki.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetFontSize">
      <MemberSignature Language="C#" Value="public void SetFontSize (double emSize);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetFontSize(float64 emSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.FormattedText.SetFontSize(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetFontSize (emSize As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetFontSize(double emSize);" />
      <MemberSignature Language="F#" Value="member this.SetFontSize : double -&gt; unit" Usage="formattedText.SetFontSize emSize" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="emSize" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="emSize">Czcionka 'em "mierzyć rozmiar podany w [! INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-MD.MD)].</param>
        <summary>Ustawia rozmiar czcionki dla całego zestawu znaków <see cref="T:System.Windows.Media.FormattedText" /> obiektu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda ustawia rozmiar czcionki wartość ciągu cały tekst. Aby ustawić wartość rozmiaru czcionki dla podzbioru ciąg tekstowy, użyj <xref:System.Windows.Media.FormattedText.SetFontSize%2A> metody.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetFontSize">
      <MemberSignature Language="C#" Value="public void SetFontSize (double emSize, int startIndex, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetFontSize(float64 emSize, int32 startIndex, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.FormattedText.SetFontSize(System.Double,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetFontSize (emSize As Double, startIndex As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetFontSize(double emSize, int startIndex, int count);" />
      <MemberSignature Language="F#" Value="member this.SetFontSize : double * int * int -&gt; unit" Usage="formattedText.SetFontSize (emSize, startIndex, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="emSize" Type="System.Double" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="emSize">Czcionka 'em "mierzyć rozmiar podany w [! INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-MD.MD)].</param>
        <param name="startIndex">Indeks początkowy znaku początkowy rozmiar czcionki, aby zastosować.</param>
        <param name="count">Liczba znaków do zastosowania rozmiar czcionki.</param>
        <summary>Ustawia rozmiar czcionki dla określonego podzbioru znaków <see cref="T:System.Windows.Media.FormattedText" /> obiektu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby ustawić wartość rozmiaru czcionki dla ciągu cały tekst, użyj <xref:System.Windows.Media.FormattedText.SetFontSize%2A> metody.  
  
   
  
## Examples  
 Poniższy przykład tworzy <xref:System.Windows.Media.FormattedText> obiekt, a następnie stosuje kilka stylów formatowania tekstu, w tym <xref:System.Windows.Media.FormattedText.SetFontSize%2A>.  
  
 [!code-csharp[FormattedTextSnippets#FormattedTextSnippets1](~/samples/snippets/csharp/VS_Snippets_Wpf/FormattedTextSnippets/CSharp/Window1.xaml.cs#formattedtextsnippets1)]
 [!code-vb[FormattedTextSnippets#FormattedTextSnippets1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/FormattedTextSnippets/visualbasic/window1.xaml.vb#formattedtextsnippets1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetFontStretch">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Ustawia wartość stretch czcionki dla <see cref="T:System.Windows.Media.FormattedText" /> obiektu.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetFontStretch">
      <MemberSignature Language="C#" Value="public void SetFontStretch (System.Windows.FontStretch stretch);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetFontStretch(valuetype System.Windows.FontStretch stretch) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.FormattedText.SetFontStretch(System.Windows.FontStretch)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetFontStretch (stretch As FontStretch)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetFontStretch(System::Windows::FontStretch stretch);" />
      <MemberSignature Language="F#" Value="member this.SetFontStretch : System.Windows.FontStretch -&gt; unit" Usage="formattedText.SetFontStretch stretch" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stretch" Type="System.Windows.FontStretch" />
      </Parameters>
      <Docs>
        <param name="stretch">Żądane <see cref="T:System.Windows.FontStretch" /> wartości do użycia na potrzeby formatowania tekstu.</param>
        <summary>Ustawia wartość stretch czcionkę dla całego zestawu znaków <see cref="T:System.Windows.Media.FormattedText" /> obiektu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wartość stretch czcionki dotyczy stopnia, do którego czcionki jest rozciągany tak, na ekranie. <xref:System.Windows.FontStretch> obsługuje typ konwersji zachowanie takich tej wartości statycznej <xref:System.Windows.FontStretches> klasa może być używana do zainicjowania <xref:System.Windows.FontStretch> , a następnie wprowadź parametry, które są typu <xref:System.Windows.FontStretch>. Możesz także wywołać <xref:System.Windows.FontStretch.FromOpenTypeStretch%2A> można utworzyć prawidłowo zainicjowany <xref:System.Windows.FontStretch>.  
  
 Ta metoda ustawia wartość stretch czcionki dla ciągu cały tekst. Aby ustawić wartość stretch czcionki część ciągu tekstowego, użyj <xref:System.Windows.Media.FormattedText.SetFontStretch%28System.Windows.FontStretch%2CSystem.Int32%2CSystem.Int32%29> metody.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetFontStretch">
      <MemberSignature Language="C#" Value="public void SetFontStretch (System.Windows.FontStretch stretch, int startIndex, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetFontStretch(valuetype System.Windows.FontStretch stretch, int32 startIndex, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.FormattedText.SetFontStretch(System.Windows.FontStretch,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetFontStretch (stretch As FontStretch, startIndex As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetFontStretch(System::Windows::FontStretch stretch, int startIndex, int count);" />
      <MemberSignature Language="F#" Value="member this.SetFontStretch : System.Windows.FontStretch * int * int -&gt; unit" Usage="formattedText.SetFontStretch (stretch, startIndex, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stretch" Type="System.Windows.FontStretch" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="stretch">Żądane <see cref="T:System.Windows.FontStretch" /> wartości do użycia na potrzeby formatowania tekstu.</param>
        <param name="startIndex">Indeks początkowy znaku początkowego Rozciągnij czcionki, aby zastosować.</param>
        <param name="count">Rozciąganie i liczbę znaków, aby zastosować czcionki.</param>
        <summary>Ustawia wartość stretch czcionki dla określonego podzbiór znaków <see cref="T:System.Windows.Media.FormattedText" /> obiektu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wartość stretch czcionki dotyczy stopnia, do którego czcionki jest rozciągany tak, na ekranie.  
  
 <xref:System.Windows.FontStretch> obsługuje typ konwersji zachowanie takich tej wartości statycznej <xref:System.Windows.FontStretches> klasa może być używana do zainicjowania <xref:System.Windows.FontStretch> , a następnie wprowadź parametry, które są typu <xref:System.Windows.FontStretch>. Możesz także wywołać <xref:System.Windows.FontStretch.FromOpenTypeStretch%2A> można utworzyć prawidłowo zainicjowany <xref:System.Windows.FontStretch>.  
  
 Aby ustawić wartość stretch czcionki dla ciągu cały tekst, użyj <xref:System.Windows.Media.FormattedText.SetFontStretch%28System.Windows.FontStretch%29> metody.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetFontStyle">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Ustawia styl czcionki dla <see cref="T:System.Windows.Media.FormattedText" /> obiektu.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetFontStyle">
      <MemberSignature Language="C#" Value="public void SetFontStyle (System.Windows.FontStyle style);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetFontStyle(valuetype System.Windows.FontStyle style) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.FormattedText.SetFontStyle(System.Windows.FontStyle)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetFontStyle (style As FontStyle)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetFontStyle(System::Windows::FontStyle style);" />
      <MemberSignature Language="F#" Value="member this.SetFontStyle : System.Windows.FontStyle -&gt; unit" Usage="formattedText.SetFontStyle style" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="style" Type="System.Windows.FontStyle" />
      </Parameters>
      <Docs>
        <param name="style">
          <see cref="T:System.Windows.FontStyle" /> Wartości do użycia na potrzeby formatowania tekstu.</param>
        <summary>Ustawia styl czcionki dla całego zestawu znaków <see cref="T:System.Windows.Media.FormattedText" /> obiektu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.FontStyle> obsługuje typ konwersji zachowanie takich tej wartości statycznej <xref:System.Windows.FontStyles> klasa może być używana do zainicjowania <xref:System.Windows.FontStyle> , a następnie wprowadź parametry, które są typu <xref:System.Windows.FontStyle>.  
  
 Ta metoda ustawia styl czcionki dla ciągu cały tekst. Aby ustawić styl czcionki dla podzbioru ciąg tekstowy, użyj <xref:System.Windows.Media.FormattedText.SetFontStyle%28System.Windows.FontStyle%2CSystem.Int32%2CSystem.Int32%29> metody.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetFontStyle">
      <MemberSignature Language="C#" Value="public void SetFontStyle (System.Windows.FontStyle style, int startIndex, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetFontStyle(valuetype System.Windows.FontStyle style, int32 startIndex, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.FormattedText.SetFontStyle(System.Windows.FontStyle,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetFontStyle (style As FontStyle, startIndex As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetFontStyle(System::Windows::FontStyle style, int startIndex, int count);" />
      <MemberSignature Language="F#" Value="member this.SetFontStyle : System.Windows.FontStyle * int * int -&gt; unit" Usage="formattedText.SetFontStyle (style, startIndex, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="style" Type="System.Windows.FontStyle" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="style">
          <see cref="T:System.Windows.FontStyle" /> Wartości do użycia na potrzeby formatowania tekstu.</param>
        <param name="startIndex">Indeks początkowy znaku początkowej można zastosować styl czcionki.</param>
        <param name="count">Liczba znaków, aby zastosować styl czcionki.</param>
        <summary>Ustawia styl czcionki dla określonego podzbiór znaków <see cref="T:System.Windows.Media.FormattedText" /> obiektu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.FontStyle> obsługuje typ konwersji zachowanie takich tej wartości statycznej <xref:System.Windows.FontStyles> klasa może być używana do zainicjowania <xref:System.Windows.FontStyle> , a następnie wprowadź parametry, które są typu <xref:System.Windows.FontStyle>.  
  
 Aby ustawić styl czcionki dla ciągu cały tekst, użyj <xref:System.Windows.Media.FormattedText.SetFontStyle%28System.Windows.FontStyle%29> metody.  
  
   
  
## Examples  
 Poniższy przykład tworzy <xref:System.Windows.Media.FormattedText> obiekt, a następnie stosuje kilka stylów formatowania tekstu, w tym <xref:System.Windows.Media.FormattedText.SetFontStyle%2A>.  
  
 [!code-csharp[FormattedTextSnippets#FormattedTextSnippets1](~/samples/snippets/csharp/VS_Snippets_Wpf/FormattedTextSnippets/CSharp/Window1.xaml.cs#formattedtextsnippets1)]
 [!code-vb[FormattedTextSnippets#FormattedTextSnippets1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/FormattedTextSnippets/visualbasic/window1.xaml.vb#formattedtextsnippets1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetFontTypeface">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Określa krój czcionki dla <see cref="T:System.Windows.Media.FormattedText" /> obiektu.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetFontTypeface">
      <MemberSignature Language="C#" Value="public void SetFontTypeface (System.Windows.Media.Typeface typeface);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetFontTypeface(class System.Windows.Media.Typeface typeface) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.FormattedText.SetFontTypeface(System.Windows.Media.Typeface)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetFontTypeface(System::Windows::Media::Typeface ^ typeface);" />
      <MemberSignature Language="F#" Value="member this.SetFontTypeface : System.Windows.Media.Typeface -&gt; unit" Usage="formattedText.SetFontTypeface typeface" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeface" Type="System.Windows.Media.Typeface" />
      </Parameters>
      <Docs>
        <param name="typeface">
          <see cref="T:System.Windows.Media.Typeface" /> Do użycia na potrzeby formatowania tekstu.</param>
        <summary>Określa krój czcionki dla całego zestawu znaków <see cref="T:System.Windows.Media.FormattedText" /> obiektu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Media.Typeface> reprezentuje kombinację <xref:System.Windows.Media.FontFamily>, <xref:System.Windows.FontWeight>, <xref:System.Windows.FontStyle>, i <xref:System.Windows.FontStretch>. <xref:System.Windows.Media.Typeface> obsługuje wiele konstruktorów, co który konstrukcji oparte na kroju pisma nazwę drugiego z nich ma odrębny wartości dla <xref:System.Windows.Media.FontFamily>, <xref:System.Windows.FontWeight>, <xref:System.Windows.FontStyle>, i <xref:System.Windows.FontStretch>.  
  
 Ta metoda określa krój czcionki dla ciągu cały tekst. Aby ustawić krój czcionki dla podzbioru ciąg tekstowy, użyj <xref:System.Windows.Media.FormattedText.SetFontTypeface%28System.Windows.Media.Typeface%2CSystem.Int32%2CSystem.Int32%29> metody.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetFontTypeface">
      <MemberSignature Language="C#" Value="public void SetFontTypeface (System.Windows.Media.Typeface typeface, int startIndex, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetFontTypeface(class System.Windows.Media.Typeface typeface, int32 startIndex, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.FormattedText.SetFontTypeface(System.Windows.Media.Typeface,System.Int32,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetFontTypeface(System::Windows::Media::Typeface ^ typeface, int startIndex, int count);" />
      <MemberSignature Language="F#" Value="member this.SetFontTypeface : System.Windows.Media.Typeface * int * int -&gt; unit" Usage="formattedText.SetFontTypeface (typeface, startIndex, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeface" Type="System.Windows.Media.Typeface" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="typeface">
          <see cref="T:System.Windows.Media.Typeface" /> Do użycia na potrzeby formatowania tekstu.</param>
        <param name="startIndex">Indeks początkowy znaku początkowego dotyczyć krój czcionki do.</param>
        <param name="count">Liczba znaków, aby zastosować krój czcionki do.</param>
        <summary>Określa krój czcionki dla określonego podzbioru znaków <see cref="T:System.Windows.Media.FormattedText" /> obiektu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Media.Typeface> reprezentuje kombinację <xref:System.Windows.Media.FontFamily>, <xref:System.Windows.FontWeight>, <xref:System.Windows.FontStyle>, i <xref:System.Windows.FontStretch>. <xref:System.Windows.Media.Typeface> obsługuje wiele konstruktorów, co który konstrukcji oparte na kroju pisma nazwę drugiego z nich ma odrębny wartości dla <xref:System.Windows.Media.FontFamily>, <xref:System.Windows.FontWeight>, <xref:System.Windows.FontStyle>, i <xref:System.Windows.FontStretch>.  
  
 Aby ustawić krój czcionki dla ciągu cały tekst, użyj <xref:System.Windows.Media.FormattedText.SetFontTypeface%28System.Windows.Media.Typeface%29> metody.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetFontWeight">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Ustawia grubość czcionki dla <see cref="T:System.Windows.Media.FormattedText" /> obiektu.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetFontWeight">
      <MemberSignature Language="C#" Value="public void SetFontWeight (System.Windows.FontWeight weight);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetFontWeight(valuetype System.Windows.FontWeight weight) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.FormattedText.SetFontWeight(System.Windows.FontWeight)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetFontWeight (weight As FontWeight)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetFontWeight(System::Windows::FontWeight weight);" />
      <MemberSignature Language="F#" Value="member this.SetFontWeight : System.Windows.FontWeight -&gt; unit" Usage="formattedText.SetFontWeight weight" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="weight" Type="System.Windows.FontWeight" />
      </Parameters>
      <Docs>
        <param name="weight">
          <see cref="T:System.Windows.FontWeight" /> Do użycia na potrzeby formatowania tekstu.</param>
        <summary>Ustawia grubość czcionki dla całego zestawu znaków <see cref="T:System.Windows.Media.FormattedText" /> obiektu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.FontWeight> obsługuje typ konwersji zachowanie takich tej wartości statycznej <xref:System.Windows.FontWeights> klasa może być używana do zainicjowania <xref:System.Windows.FontWeight> , a następnie wprowadź parametry, które są typu <xref:System.Windows.FontWeight>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetFontWeight">
      <MemberSignature Language="C#" Value="public void SetFontWeight (System.Windows.FontWeight weight, int startIndex, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetFontWeight(valuetype System.Windows.FontWeight weight, int32 startIndex, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.FormattedText.SetFontWeight(System.Windows.FontWeight,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetFontWeight (weight As FontWeight, startIndex As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetFontWeight(System::Windows::FontWeight weight, int startIndex, int count);" />
      <MemberSignature Language="F#" Value="member this.SetFontWeight : System.Windows.FontWeight * int * int -&gt; unit" Usage="formattedText.SetFontWeight (weight, startIndex, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="weight" Type="System.Windows.FontWeight" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="weight">Grubość czcionki do użycia na potrzeby formatowania tekstu.</param>
        <param name="startIndex">Indeks początkowy litery do zastosowania do grubość czcionki.</param>
        <param name="count">Liczba znaków do zastosowania do grubość czcionki.</param>
        <summary>Zmiany <see cref="T:System.Windows.FontWeight" /> dla określonego tekstu w <see cref="T:System.Windows.Media.FormattedText" /> obiektu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.FontWeight> obsługuje typ konwersji zachowanie takich tej wartości statycznej <xref:System.Windows.FontWeights> klasa może być używana do zainicjowania <xref:System.Windows.FontWeight> , a następnie wprowadź parametry, które są typu <xref:System.Windows.FontWeight>.  
  
   
  
## Examples  
 Poniższy przykład tworzy <xref:System.Windows.Media.FormattedText> obiekt, a następnie stosuje kilka stylów formatowania tekstu, w tym <xref:System.Windows.Media.FormattedText.SetFontWeight%2A>.  
  
 [!code-csharp[FormattedTextSnippets#FormattedTextSnippets1](~/samples/snippets/csharp/VS_Snippets_Wpf/FormattedTextSnippets/CSharp/Window1.xaml.cs#formattedtextsnippets1)]
 [!code-vb[FormattedTextSnippets#FormattedTextSnippets1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/FormattedTextSnippets/visualbasic/window1.xaml.vb#formattedtextsnippets1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetForegroundBrush">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Zmienia pędzla pierwszego planu używany do rysowania tekstu.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetForegroundBrush">
      <MemberSignature Language="C#" Value="public void SetForegroundBrush (System.Windows.Media.Brush foregroundBrush);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetForegroundBrush(class System.Windows.Media.Brush foregroundBrush) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.FormattedText.SetForegroundBrush(System.Windows.Media.Brush)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetForegroundBrush (foregroundBrush As Brush)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetForegroundBrush(System::Windows::Media::Brush ^ foregroundBrush);" />
      <MemberSignature Language="F#" Value="member this.SetForegroundBrush : System.Windows.Media.Brush -&gt; unit" Usage="formattedText.SetForegroundBrush foregroundBrush" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="foregroundBrush" Type="System.Windows.Media.Brush" />
      </Parameters>
      <Docs>
        <param name="foregroundBrush">Pędzla do użycia na potrzeby pierwszego planu tekstu.</param>
        <summary>Zmienia kolor pierwszego planu <see cref="T:System.Windows.Media.Brush" /> dla całego <see cref="T:System.Windows.Media.FormattedText" /> obiektu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda ustawia pędzel pierwszego planu dla ciągu cały tekst. Aby ustawić pędzla pierwszego planu dla podzbioru ciąg tekstowy, użyj <xref:System.Windows.Media.FormattedText.SetForegroundBrush%28System.Windows.Media.Brush%2CSystem.Int32%2CSystem.Int32%29> metody.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetForegroundBrush">
      <MemberSignature Language="C#" Value="public void SetForegroundBrush (System.Windows.Media.Brush foregroundBrush, int startIndex, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetForegroundBrush(class System.Windows.Media.Brush foregroundBrush, int32 startIndex, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.FormattedText.SetForegroundBrush(System.Windows.Media.Brush,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetForegroundBrush (foregroundBrush As Brush, startIndex As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetForegroundBrush(System::Windows::Media::Brush ^ foregroundBrush, int startIndex, int count);" />
      <MemberSignature Language="F#" Value="member this.SetForegroundBrush : System.Windows.Media.Brush * int * int -&gt; unit" Usage="formattedText.SetForegroundBrush (foregroundBrush, startIndex, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="foregroundBrush" Type="System.Windows.Media.Brush" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="foregroundBrush">Pędzla do użycia na potrzeby pierwszego planu tekstu.</param>
        <param name="startIndex">Indeks początkowy znaku początkowego dotyczyć pędzla pierwszego planu, który ma.</param>
        <param name="count">Liczba znaków do zastosowania do pędzla pierwszego planu.</param>
        <summary>Zmienia kolor pierwszego planu <see cref="T:System.Windows.Media.Brush" /> dla określonego tekstu w <see cref="T:System.Windows.Media.FormattedText" /> obiektu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby ustawić pędzla pierwszego planu dla ciągu cały tekst, użyj <xref:System.Windows.Media.FormattedText.SetForegroundBrush%2A> metody.  
  
   
  
## Examples  
 Poniższy przykład tworzy <xref:System.Windows.Media.FormattedText> obiekt, a następnie stosuje kilka stylów formatowania tekstu, w tym <xref:System.Windows.Media.FormattedText.SetForegroundBrush%2A>.  
  
 [!code-csharp[FormattedTextSnippets#FormattedTextSnippets1](~/samples/snippets/csharp/VS_Snippets_Wpf/FormattedTextSnippets/CSharp/Window1.xaml.cs#formattedtextsnippets1)]
 [!code-vb[FormattedTextSnippets#FormattedTextSnippets1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/FormattedTextSnippets/visualbasic/window1.xaml.vb#formattedtextsnippets1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetMaxTextWidths">
      <MemberSignature Language="C#" Value="public void SetMaxTextWidths (double[] maxTextWidths);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetMaxTextWidths(float64[] maxTextWidths) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.FormattedText.SetMaxTextWidths(System.Double[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetMaxTextWidths (maxTextWidths As Double())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetMaxTextWidths(cli::array &lt;double&gt; ^ maxTextWidths);" />
      <MemberSignature Language="F#" Value="member this.SetMaxTextWidths : double[] -&gt; unit" Usage="formattedText.SetMaxTextWidths maxTextWidths" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="maxTextWidths" Type="System.Double[]" />
      </Parameters>
      <Docs>
        <param name="maxTextWidths">Tablicę szerokości tekstu każdego szerokość zawarte w [! INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-MD.MD)].</param>
        <summary>Ustawia tablicę szerokości tekstu w <see cref="T:System.Windows.Media.FormattedText" />, na podstawie-line. Każdy element tablicy reprezentuje szerokości tekstu z kolejnych wierszy tekstu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli wierszy tekstu przekracza liczbę elementów w tablicy, ostatnia wartość w tablicy jest używany dla pozostałych wierszy. Podając prawidłową tablicy <xref:System.Windows.Media.FormattedText.SetMaxTextWidths%2A> zastąpią wszelkie wartości podanej dla <xref:System.Windows.Media.FormattedText.MaxTextWidth%2A> właściwości.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetNumberSubstitution">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Określa zachowanie podstawienia numer <see cref="T:System.Windows.Media.FormattedText" /> obiektu.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetNumberSubstitution">
      <MemberSignature Language="C#" Value="public void SetNumberSubstitution (System.Windows.Media.NumberSubstitution numberSubstitution);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetNumberSubstitution(class System.Windows.Media.NumberSubstitution numberSubstitution) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.FormattedText.SetNumberSubstitution(System.Windows.Media.NumberSubstitution)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetNumberSubstitution(System::Windows::Media::NumberSubstitution ^ numberSubstitution);" />
      <MemberSignature Language="F#" Value="member this.SetNumberSubstitution : System.Windows.Media.NumberSubstitution -&gt; unit" Usage="formattedText.SetNumberSubstitution numberSubstitution" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="numberSubstitution" Type="System.Windows.Media.NumberSubstitution" />
      </Parameters>
      <Docs>
        <param name="numberSubstitution">Liczba zachowanie podstawienia do zastosowania do tekstu. może być <see langword="null" />, w takim przypadku używana jest domyślna metoda podstawienia numeracji dla kultury tekstu.</param>
        <summary>Ustawia numer zachowanie podstawienia dla całego zestawu znaków <see cref="T:System.Windows.Media.FormattedText" /> obiektu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Media.NumberSubstitution> Klasa określa, jak mają być wyświetlane liczby w tekście. Ta metoda określa numer zachowanie podstawienia cały tekst. Aby ustawić numer zachowanie podstawienia część ciągu tekstowego, użyj <xref:System.Windows.Media.FormattedText.SetNumberSubstitution%28System.Windows.Media.NumberSubstitution%2CSystem.Int32%2CSystem.Int32%29> metody.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetNumberSubstitution">
      <MemberSignature Language="C#" Value="public void SetNumberSubstitution (System.Windows.Media.NumberSubstitution numberSubstitution, int startIndex, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetNumberSubstitution(class System.Windows.Media.NumberSubstitution numberSubstitution, int32 startIndex, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.FormattedText.SetNumberSubstitution(System.Windows.Media.NumberSubstitution,System.Int32,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetNumberSubstitution(System::Windows::Media::NumberSubstitution ^ numberSubstitution, int startIndex, int count);" />
      <MemberSignature Language="F#" Value="member this.SetNumberSubstitution : System.Windows.Media.NumberSubstitution * int * int -&gt; unit" Usage="formattedText.SetNumberSubstitution (numberSubstitution, startIndex, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="numberSubstitution" Type="System.Windows.Media.NumberSubstitution" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="numberSubstitution">Liczba zachowanie podstawienia do zastosowania do tekstu. może być <see langword="null" />, w takim przypadku używana jest domyślna metoda podstawienia numeracji dla kultury tekstu.</param>
        <param name="startIndex">Indeks początkowy znaku początkowej, aby zastosować zmiany.</param>
        <param name="count">Liczba znaków, który powinien być zastosowany zmiany.</param>
        <summary>Ustawia numer zachowanie podstawienia dla określonego tekstu w <see cref="T:System.Windows.Media.FormattedText" /> obiektu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Media.NumberSubstitution> Klasa określa, jak mają być wyświetlane liczby w tekście. Aby ustawić numer zachowanie podstawienia cały tekst, użyj <xref:System.Windows.Media.FormattedText.SetNumberSubstitution%28System.Windows.Media.NumberSubstitution%29> metody.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetTextDecorations">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Ustawia <see cref="T:System.Windows.TextDecorationCollection" /> dla <see cref="T:System.Windows.Media.FormattedText" /> obiektu.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetTextDecorations">
      <MemberSignature Language="C#" Value="public void SetTextDecorations (System.Windows.TextDecorationCollection textDecorations);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetTextDecorations(class System.Windows.TextDecorationCollection textDecorations) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.FormattedText.SetTextDecorations(System.Windows.TextDecorationCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetTextDecorations (textDecorations As TextDecorationCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetTextDecorations(System::Windows::TextDecorationCollection ^ textDecorations);" />
      <MemberSignature Language="F#" Value="member this.SetTextDecorations : System.Windows.TextDecorationCollection -&gt; unit" Usage="formattedText.SetTextDecorations textDecorations" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="textDecorations" Type="System.Windows.TextDecorationCollection" />
      </Parameters>
      <Docs>
        <param name="textDecorations">
          <see cref="T:System.Windows.TextDecorationCollection" /> Do zastosowania w tekście.</param>
        <summary>Ustawia <see cref="T:System.Windows.TextDecorationCollection" /> dla całego zestawu znaków <see cref="T:System.Windows.Media.FormattedText" /> obiektu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.TextDecorationCollection> Klasy określa typy dekoracji tekstu do zastosowania w tekście. Istnieją cztery typy dekoracji tekstu: podkreślenia, linii bazowej, przekreślenia i nadkreślenia. Te ustawienia zostały opisane jako <xref:System.Windows.TextDecorationLocation> wartości ustawione dla każdego elementu w <xref:System.Windows.TextDecorationCollection>. Często który <xref:System.Windows.TextDecorationCollection> kolekcja zawiera tylko jeden decoration, ale właściwość używa kolekcji do zapewnienia bardziej zaawansowanych efekty decoration przez zastosowanie wielu dekoracje do tego samego tekstu.  
  
 Na poniższej ilustracji przedstawiono lokalizacje dekoracji tekstu względem tekstu.  
  
 ![Diagram lokalizacji dekoracji tekstu](~/add/media/textdecoration01.gif "Diagram lokalizacji dekoracji tekstu")  
Przykład typów dekoracji tekstu  
  
 Ta metoda ustawia <xref:System.Windows.TextDecorationCollection> ciągu cały tekst. Aby ustawić <xref:System.Windows.TextDecorationCollection> część ciągu tekstowego, można użyć <xref:System.Windows.Media.FormattedText.SetTextDecorations%28System.Windows.TextDecorationCollection%2CSystem.Int32%2CSystem.Int32%29> metody.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetTextDecorations">
      <MemberSignature Language="C#" Value="public void SetTextDecorations (System.Windows.TextDecorationCollection textDecorations, int startIndex, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetTextDecorations(class System.Windows.TextDecorationCollection textDecorations, int32 startIndex, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.FormattedText.SetTextDecorations(System.Windows.TextDecorationCollection,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetTextDecorations (textDecorations As TextDecorationCollection, startIndex As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetTextDecorations(System::Windows::TextDecorationCollection ^ textDecorations, int startIndex, int count);" />
      <MemberSignature Language="F#" Value="member this.SetTextDecorations : System.Windows.TextDecorationCollection * int * int -&gt; unit" Usage="formattedText.SetTextDecorations (textDecorations, startIndex, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="textDecorations" Type="System.Windows.TextDecorationCollection" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="textDecorations">
          <see cref="T:System.Windows.TextDecorationCollection" /> Do zastosowania w tekście.</param>
        <param name="startIndex">Indeks początkowy znaku początkowego do dekoracji tekstu do zastosowania.</param>
        <param name="count">Liczba znaków do dekoracji tekstu do zastosowania.</param>
        <summary>Ustawia <see cref="T:System.Windows.TextDecorationCollection" /> dla określonego tekstu w <see cref="T:System.Windows.Media.FormattedText" /> obiektu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.TextDecorationCollection> Klasy określa typy dekoracji tekstu do zastosowania w tekście. Istnieją cztery typy dekoracji tekstu: podkreślenia, linii bazowej, przekreślenia i nadkreślenia. Te ustawienia zostały opisane jako <xref:System.Windows.TextDecorationLocation> wartości ustawione dla każdego elementu w <xref:System.Windows.TextDecorationCollection>. Często który <xref:System.Windows.TextDecorationCollection> kolekcja zawiera tylko jeden decoration, ale właściwość używa kolekcji do zapewnienia bardziej zaawansowanych efekty decoration przez zastosowanie wielu dekoracje do tego samego tekstu.  
  
 Na poniższej ilustracji przedstawiono lokalizacje dekoracji tekstu względem tekstu.  
  
 ![Diagram lokalizacji dekoracji tekstu](~/add/media/textdecoration01.gif "Diagram lokalizacji dekoracji tekstu")  
Przykład typów dekoracji tekstu  
  
 Aby ustawić <xref:System.Windows.TextDecorationCollection> cały tekst, można użyć <xref:System.Windows.Media.FormattedText.SetTextDecorations%28System.Windows.TextDecorationCollection%29> metody.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Text">
      <MemberSignature Language="C#" Value="public string Text { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Text" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.FormattedText.Text" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Text As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Text { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Text : string" Usage="System.Windows.Media.FormattedText.Text" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera ciąg tekstowy, który będzie wyświetlany.</summary>
        <value>Ciąg tekstowy, który będzie wyświetlany.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość nie jest można ustawić na skonstruowane <xref:System.Windows.Media.FormattedText> obiektu. Należy tworzyć nowe <xref:System.Windows.Media.FormattedText> było ustawić inny tekst.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Media.FormattedText.#ctor(System.String,System.Globalization.CultureInfo,System.Windows.FlowDirection,System.Windows.Media.Typeface,System.Double,System.Windows.Media.Brush)" />
      </Docs>
    </Member>
    <Member MemberName="TextAlignment">
      <MemberSignature Language="C#" Value="public System.Windows.TextAlignment TextAlignment { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.TextAlignment TextAlignment" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.FormattedText.TextAlignment" />
      <MemberSignature Language="VB.NET" Value="Public Property TextAlignment As TextAlignment" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::TextAlignment TextAlignment { System::Windows::TextAlignment get(); void set(System::Windows::TextAlignment value); };" />
      <MemberSignature Language="F#" Value="member this.TextAlignment : System.Windows.TextAlignment with get, set" Usage="System.Windows.Media.FormattedText.TextAlignment" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.TextAlignment</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub Ustawia wyrównanie tekstu w <see cref="T:System.Windows.Media.FormattedText" /> obiektu.</summary>
        <value>Jeden z <see cref="T:System.Windows.TextAlignment" /> wartości, które określa wyrównanie tekstu w <see cref="T:System.Windows.Media.FormattedText" /> obiektu.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Trimming">
      <MemberSignature Language="C#" Value="public System.Windows.TextTrimming Trimming { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.TextTrimming Trimming" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.FormattedText.Trimming" />
      <MemberSignature Language="VB.NET" Value="Public Property Trimming As TextTrimming" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::TextTrimming Trimming { System::Windows::TextTrimming get(); void set(System::Windows::TextTrimming value); };" />
      <MemberSignature Language="F#" Value="member this.Trimming : System.Windows.TextTrimming with get, set" Usage="System.Windows.Media.FormattedText.Trimming" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.TextTrimming</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia sposób za pomocą którego jest wskazywany pominięcie tekstu.</summary>
        <value>Jeden z <see cref="T:System.Windows.TextTrimming" /> wartości, które określa, jak wskazuje pominięcie tekstu. Wartość domyślna to <see cref="F:System.Windows.TextTrimming.WordEllipsis" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Width">
      <MemberSignature Language="C#" Value="public double Width { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Width" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.FormattedText.Width" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Width As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double Width { double get(); };" />
      <MemberSignature Language="F#" Value="member this.Width : double" Usage="System.Windows.Media.FormattedText.Width" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera szerokość między punkty wyrównania wiodące i końcowe wiersza, bez żadnego końcowe białe znaki.</summary>
        <value>Szerokość między punkty wyrównania wiodące i końcowe wiersza, z wyłączeniem wszelkich znakami odstępu. Podany w [! INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-MD.MD)].</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dla tekstu wielowierszowego, najdłuższym wiersza służy do <xref:System.Windows.Media.FormattedText.Width%2A> wartości.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WidthIncludingTrailingWhitespace">
      <MemberSignature Language="C#" Value="public double WidthIncludingTrailingWhitespace { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 WidthIncludingTrailingWhitespace" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.FormattedText.WidthIncludingTrailingWhitespace" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property WidthIncludingTrailingWhitespace As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double WidthIncludingTrailingWhitespace { double get(); };" />
      <MemberSignature Language="F#" Value="member this.WidthIncludingTrailingWhitespace : double" Usage="System.Windows.Media.FormattedText.WidthIncludingTrailingWhitespace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera szerokość między punkty wyrównania wiodące i końcowe linii, wraz ze wszystkimi końcowe białe znaki.</summary>
        <value>Szerokość między punkty wyrównania wiodące i końcowe wiersza, w tym wszelkie znakami odstępu. Podany w [! INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-MD.MD)].</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dla tekstu wielowierszowego, najdłuższym wiersza służy do <xref:System.Windows.Media.FormattedText.WidthIncludingTrailingWhitespace%2A> wartości.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>