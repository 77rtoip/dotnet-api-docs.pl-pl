<Type Name="DrawingVisual" FullName="System.Windows.Media.DrawingVisual">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="99dc3c30e48b3d0a4c8e87df9c61a3bfc4cce898" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30711869" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class DrawingVisual : System.Windows.Media.ContainerVisual" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DrawingVisual extends System.Windows.Media.ContainerVisual" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Media.DrawingVisual" />
  <TypeSignature Language="VB.NET" Value="Public Class DrawingVisual&#xA;Inherits ContainerVisual" />
  <TypeSignature Language="C++ CLI" Value="public ref class DrawingVisual : System::Windows::Media::ContainerVisual" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Media.ContainerVisual</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <see cref="T:System.Windows.Media.DrawingVisual" /> jest obiektem visual, który może służyć do renderowania grafiki wektorowej na ekranie. Zawartość jest trwały przez system.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Media.DrawingVisual> jest klasą rysowania lekkie używany do renderowania kształty, obrazy i tekst. Ta klasa jest traktowane jako lekkie, ponieważ nie ma układ, dane wejściowe, fokus lub obsługi zdarzeń, co zwiększa wydajność. Z tego powodu rysunki idealnie nadają się do tła i grafik przycinania.  
  
 Aby można było używać <xref:System.Windows.Media.DrawingVisual> obiektów, należy utworzyć kontener hosta dla obiektów. Obiekt kontenera hosta musi pochodzić od <xref:System.Windows.FrameworkElement> klasy, która dostarcza układ i obsługa zdarzeń obsługi, który <xref:System.Windows.Media.DrawingVisual> klasa nie obsługuje. Obiekt kontenera hosta nie są wyświetlane wszystkie właściwości, ponieważ głównym celem musi zawierać obiektów podrzędnych. Aby uzyskać więcej informacji, zobacz [przy użyciu obiektów DrawingVisual](~/docs/framework/wpf/graphics-multimedia/using-drawingvisual-objects.md).  
  
 Pełny przykład przedstawiający sposób tworzenia <xref:System.Windows.Media.DrawingVisual> obiektów z kontenera hosta, zobacz [trafień przy użyciu DrawingVisuals próbki](http://go.microsoft.com/fwlink/?LinkID=159994) .  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DrawingVisual ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.DrawingVisual.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DrawingVisual();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.Media.DrawingVisual" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Po utworzeniu <xref:System.Windows.Media.DrawingVisual> obiektu, nie ma on rysowania zawartości. Podczas pobierania kontekstu rysowania obiektu i rysowanie w nim można dodać tekstu, grafiki lub zawartości obrazu. Rysowanie kontekstu jest zwracany przez wywołanie metody <xref:System.Windows.Media.DrawingVisual.RenderOpen%2A> metody <xref:System.Windows.Media.DrawingVisual> obiektu.  
  
   
  
## Examples  
 W poniższym przykładzie <xref:System.Windows.Media.DrawingVisual> obiekt jest tworzony i prostokąt jest rysowana na rysunku kontekst. Należy zauważyć, że należy wywołać <xref:System.Windows.Media.DrawingContext.Close%2A> metody <xref:System.Windows.Media.DrawingContext> do utrzymania rysowania zawartości.  
  
 [!code-csharp[DrawingVisualSample#101](~/samples/snippets/csharp/VS_Snippets_Wpf/DrawingVisualSample/CSharp/Window1.xaml.cs#101)]
 [!code-vb[DrawingVisualSample#101](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DrawingVisualSample/visualbasic/window1.xaml.vb#101)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Drawing">
      <MemberSignature Language="C#" Value="public System.Windows.Media.DrawingGroup Drawing { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.DrawingGroup Drawing" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.DrawingVisual.Drawing" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Drawing As DrawingGroup" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Media::DrawingGroup ^ Drawing { System::Windows::Media::DrawingGroup ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.DrawingGroup</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera zawartość z rysunku <see cref="T:System.Windows.Media.DrawingVisual" /> obiektu.</summary>
        <value>Pobiera wartość typu <see cref="T:System.Windows.Media.DrawingGroup" /> reprezentujący kolekcję <see cref="T:System.Windows.Media.Drawing" /> obiekty w <see cref="T:System.Windows.Media.DrawingVisual" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Obiekt wizualny przechowuje dane renderowania jako listę instrukcji grafiki wektorowej. Każdy element na liście instrukcji reprezentuje niskiego poziomu zestawu danych grafiki format serializacji. Aby uzyskać więcej informacji, w jaki sposób pakiet visual obiektach przechowywania danych grafiki, zobacz [Przegląd renderowania grafiki WPF](~/docs/framework/wpf/graphics-multimedia/wpf-graphics-rendering-overview.md).  
  
 Wszelkie zmiany do zwróconego <xref:System.Windows.Media.DrawingGroup> wartość nie jest trwały przez <xref:System.Windows.Media.DrawingVisual>.  
  
   
  
## Examples  
 W poniższym przykładzie <xref:System.Windows.Media.DrawingGroup> wartość każdego <xref:System.Windows.Media.DrawingVisual> na hoście jest wyliczyć visual.  
  
 [!code-csharp[VisualSnippets#DrawingVisualSnippet1](~/samples/snippets/csharp/VS_Snippets_Wpf/VisualSnippets/CSharp/DrawingVisual.xaml.cs#drawingvisualsnippet1)]
 [!code-vb[VisualSnippets#DrawingVisualSnippet1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/VisualSnippets/visualbasic/drawingvisual.xaml.vb#drawingvisualsnippet1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="HitTestCore">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <see cref="Overload:System.Windows.Media.DrawingVisual.HitTestCore" /> Określa, czy został trafiony granic obiektu visual.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="HitTestCore">
      <MemberSignature Language="C#" Value="protected override System.Windows.Media.GeometryHitTestResult HitTestCore (System.Windows.Media.GeometryHitTestParameters hitTestParameters);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Media.GeometryHitTestResult HitTestCore(class System.Windows.Media.GeometryHitTestParameters hitTestParameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.DrawingVisual.HitTestCore(System.Windows.Media.GeometryHitTestParameters)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function HitTestCore (hitTestParameters As GeometryHitTestParameters) As GeometryHitTestResult" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Media::GeometryHitTestResult ^ HitTestCore(System::Windows::Media::GeometryHitTestParameters ^ hitTestParameters);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.GeometryHitTestResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hitTestParameters" Type="System.Windows.Media.GeometryHitTestParameters" />
      </Parameters>
      <Docs>
        <param name="hitTestParameters">Wartości typu <see cref="T:System.Windows.Media.GeometryHitTestParameters" /> , który określa <see cref="T:System.Windows.Media.Geometry" /> trafienie badanie.</param>
        <summary>Określa, czy wartości geometrycznej znajduje się w granicach obiektu visual.</summary>
        <returns>Wartości typu <see cref="T:System.Windows.Media.GeometryHitTestResult" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HitTestCore">
      <MemberSignature Language="C#" Value="protected override System.Windows.Media.HitTestResult HitTestCore (System.Windows.Media.PointHitTestParameters hitTestParameters);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Media.HitTestResult HitTestCore(class System.Windows.Media.PointHitTestParameters hitTestParameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.DrawingVisual.HitTestCore(System.Windows.Media.PointHitTestParameters)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function HitTestCore (hitTestParameters As PointHitTestParameters) As HitTestResult" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Media::HitTestResult ^ HitTestCore(System::Windows::Media::PointHitTestParameters ^ hitTestParameters);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.HitTestResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hitTestParameters" Type="System.Windows.Media.PointHitTestParameters" />
      </Parameters>
      <Docs>
        <param name="hitTestParameters">Wartości typu <see cref="T:System.Windows.Media.PointHitTestParameters" /> , który określa <see cref="T:System.Windows.Point" /> trafienie badanie.</param>
        <summary>Określa, czy wartość współrzędnych punktu w granicach <see cref="T:System.Windows.Media.DrawingVisual" /> obiektu.</summary>
        <returns>Wartości typu <see cref="T:System.Windows.Media.HitTestResult" />, reprezentująca <see cref="T:System.Windows.Media.Visual" /> zwrócony z testu trafienia.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Media.HitTestResult.VisualHit%2A> Visual obiekt, który został trafiony reprezentuje właściwości zwracanej wartości.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RenderOpen">
      <MemberSignature Language="C#" Value="public System.Windows.Media.DrawingContext RenderOpen ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Media.DrawingContext RenderOpen() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.DrawingVisual.RenderOpen" />
      <MemberSignature Language="VB.NET" Value="Public Function RenderOpen () As DrawingContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Media::DrawingContext ^ RenderOpen();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.DrawingContext</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Otwiera <see cref="T:System.Windows.Media.DrawingVisual" /> obiektu do renderowania. Zwrócona <see cref="T:System.Windows.Media.DrawingContext" /> wartość może zostać użyty do renderowania do <see cref="T:System.Windows.Media.DrawingVisual" />.</summary>
        <returns>Wartości typu <see cref="T:System.Windows.Media.DrawingContext" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Podczas wywoływania <xref:System.Windows.Media.DrawingContext.Close%2A> metody <xref:System.Windows.Media.DrawingContext>, rysowania zawartości zastępuje rysowania zawartość poprzedniego zdefiniowanych dla bieżącej <xref:System.Windows.Media.DrawingVisual>. Oznacza to, że nie istnieje sposób można dołączyć nowego rysowania zawartości do istniejącej zawartości rysunku.  
  
   
  
## Examples  
 W poniższym przykładzie <xref:System.Windows.Media.DrawingVisual> obiekt jest tworzony i jego <xref:System.Windows.Media.DrawingContext> zwracane.  
  
 [!code-csharp[DrawingVisualSample#101](~/samples/snippets/csharp/VS_Snippets_Wpf/DrawingVisualSample/CSharp/Window1.xaml.cs#101)]
 [!code-vb[DrawingVisualSample#101](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DrawingVisualSample/visualbasic/window1.xaml.vb#101)]  
  
 Ważna jest kolejność rysowania w kontekście rysowania — każda kolejne rysunku jest rysowana na inne. W poniższym przykładzie prostokąt jest rysowane pierwszy, a następnie tekst.  
  
 [!code-csharp[VisualSnippets#RenderOrderSnippet1](~/samples/snippets/csharp/VS_Snippets_Wpf/VisualSnippets/CSharp/Snippets.cs#renderordersnippet1)]
 [!code-vb[VisualSnippets#RenderOrderSnippet1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/VisualSnippets/visualbasic/snippets.vb#renderordersnippet1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>