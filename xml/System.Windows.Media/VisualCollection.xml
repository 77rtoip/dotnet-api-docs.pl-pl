<Type Name="VisualCollection" FullName="System.Windows.Media.VisualCollection">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="19eeb062536a84069070c205aaddc936c33cd61d" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30712385" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class VisualCollection : System.Collections.ICollection" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit VisualCollection extends System.Object implements class System.Collections.ICollection, class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Media.VisualCollection" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class VisualCollection&#xA;Implements ICollection" />
  <TypeSignature Language="C++ CLI" Value="public ref class VisualCollection sealed : System::Collections::ICollection" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.ICollection</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Reprezentuje uporządkowaną kolekcję <see cref="T:System.Windows.Media.Visual" /> obiektów.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A <xref:System.Windows.Media.VisualCollection> ma niejawnego koligacji kontekstu. Jeśli procedura próbuje uzyskać dostęp do <xref:System.Windows.Media.VisualCollection> z inny kontekst niż kontekst będący właścicielem <xref:System.Windows.Media.ContainerVisual>, jest zgłaszany wyjątek.  
  
   
  
## Examples  
 Poniższy przykład przedstawia sposób tworzenia <xref:System.Windows.Media.VisualCollection> i Dodaj do niej członków.  
  
 [!code-csharp[DrawingVisualSample#100](~/samples/snippets/csharp/VS_Snippets_Wpf/DrawingVisualSample/CSharp/Window1.xaml.cs#100)]
 [!code-vb[DrawingVisualSample#100](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DrawingVisualSample/visualbasic/window1.xaml.vb#100)]  
  
> [!NOTE]
>  Pełny przykład, zobacz [trafień przy użyciu DrawingVisuals próbki](http://go.microsoft.com/fwlink/?LinkID=159994).  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public VisualCollection (System.Windows.Media.Visual parent);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Media.Visual parent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.VisualCollection.#ctor(System.Windows.Media.Visual)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (parent As Visual)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; VisualCollection(System::Windows::Media::Visual ^ parent);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="parent" Type="System.Windows.Media.Visual" />
      </Parameters>
      <Docs>
        <param name="parent">Obiekt nadrzędny visual, którego <see cref="T:System.Windows.Media.VisualCollection" /> jest zwracany.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.Media.VisualCollection" /> klasy.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public int Add (System.Windows.Media.Visual visual);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Add(class System.Windows.Media.Visual visual) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.VisualCollection.Add(System.Windows.Media.Visual)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Add(System::Windows::Media::Visual ^ visual);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="visual" Type="System.Windows.Media.Visual" />
      </Parameters>
      <Docs>
        <param name="visual">
          <see cref="T:System.Windows.Media.Visual" /> Do dołączenia do <see cref="T:System.Windows.Media.VisualCollection" />.</param>
        <summary>Dołącza <see cref="T:System.Windows.Media.Visual" /> na końcu <see cref="T:System.Windows.Media.VisualCollection" />.</summary>
        <returns>Indeks w kolekcji, w którym <paramref name="visual" /> został dodany.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dodawanie <xref:System.Windows.Media.Visual> o wartości `null` jest dozwolone i nie zgłosi wyjątek.  
  
 <xref:System.Windows.Media.VisualCollection.Add%2A> Metody konfiguruje również relacji nadrzędny podrzędny między elementem nadrzędnym wizualne, który jest właścicielem z <xref:System.Windows.Media.VisualCollection>, a podrzędne `visual`.  
  
 Aby uzyskać większą kontrolę niskiego poziomu nad ta implementacja magazynu obiektów podrzędnych visual klasy niestandardowej, należy rozważyć użycie <xref:System.Windows.Media.Visual.AddVisualChild%2A> i <xref:System.Windows.Media.Visual.RemoveVisualChild%2A> metody. Korzystając z tych metod, należy zdefiniować implementacji magazynu i nie używaj <xref:System.Windows.Media.VisualCollection>.  
  
   
  
## Examples  
 Poniższy przykład przedstawia sposób tworzenia <xref:System.Windows.Media.VisualCollection> i Dodaj do niej członków.  
  
 [!code-csharp[DrawingVisualSample#100](~/samples/snippets/csharp/VS_Snippets_Wpf/DrawingVisualSample/CSharp/Window1.xaml.cs#100)]
 [!code-vb[DrawingVisualSample#100](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DrawingVisualSample/visualbasic/window1.xaml.vb#100)]  
  
> [!NOTE]
>  Pełny przykład, zobacz [trafień przy użyciu DrawingVisuals próbki](http://go.microsoft.com/fwlink/?LinkID=159994).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <see cref="T:System.ArgumentException" /> Jest generowany, jeśli <see cref="T:System.Windows.Media.Visual" /> jest elementem głównym.</exception>
      </Docs>
    </Member>
    <Member MemberName="Capacity">
      <MemberSignature Language="C#" Value="public int Capacity { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Capacity" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.VisualCollection.Capacity" />
      <MemberSignature Language="VB.NET" Value="Public Property Capacity As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Capacity { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia liczbę elementów, które <see cref="T:System.Windows.Media.VisualCollection" /> może zawierać.</summary>
        <value>Liczba elementów który <see cref="T:System.Windows.Media.VisualCollection" /> może zawierać.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wartość <xref:System.Windows.Media.VisualCollection.Capacity%2A> jest liczba elementów który <xref:System.Windows.Media.VisualCollection> jest w stanie przechowywania. <xref:System.Windows.Media.VisualCollection.Count%2A> jest to liczba elementów wizualnych, które są rzeczywiście w <xref:System.Windows.Media.VisualCollection>. <xref:System.Windows.Media.VisualCollection.Capacity%2A> zawsze jest większa niż lub równa <xref:System.Windows.Media.VisualCollection.Count%2A>. Jeśli <xref:System.Windows.Media.VisualCollection.Count%2A> przekracza <xref:System.Windows.Media.VisualCollection.Capacity%2A> podczas dodawania elementów, pojemność <xref:System.Windows.Media.VisualCollection> zwiększa się. Domyślnie <xref:System.Windows.Media.VisualCollection.Capacity%2A> wynosi zero.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <see cref="P:System.Windows.Media.VisualCollection.Capacity" /> ma ustawioną wartość, która jest mniejsza niż <see cref="P:System.Windows.Media.VisualCollection.Count" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.VisualCollection.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Clear();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Usuwa wszystkie elementy z <see cref="T:System.Windows.Media.VisualCollection" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Media.VisualCollection.Count%2A> Jest resetowany do zera. Wartość <xref:System.Windows.Media.VisualCollection.Capacity%2A> pozostaje niezmieniona. Aby zresetować pojemność <xref:System.Windows.Media.VisualCollection>ustaw <xref:System.Windows.Media.VisualCollection.Capacity%2A> wymagany rozmiar dla właściwości.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (System.Windows.Media.Visual visual);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Contains(class System.Windows.Media.Visual visual) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.VisualCollection.Contains(System.Windows.Media.Visual)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Contains(System::Windows::Media::Visual ^ visual);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="visual" Type="System.Windows.Media.Visual" />
      </Parameters>
      <Docs>
        <param name="visual">
          <see cref="T:System.Windows.Media.Visual" /> Do wyszukania w kolekcji.</param>
        <summary>Zwraca <see cref="T:System.Boolean" /> wartość wskazującą, czy określony <see cref="T:System.Windows.Media.Visual" /> znajduje się w kolekcji.</summary>
        <returns>
          <see langword="true" /> Jeśli <paramref name="visual" /> jest zawarte w kolekcji; w przeciwnym razie <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Scenariusz najgorszego środowiska uruchomieniowego tej funkcji jest `O(n)`, gdzie `n` jest liczba elementów w <xref:System.Windows.Media.VisualCollection>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CopyTo">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Kopiuje bieżącej kolekcji do tablicy przekazany.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (Array array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(class System.Array array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.VisualCollection.CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CopyTo(Array ^ array, int index);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">Jednowymiarowa <see cref="T:System.Array" /> czyli docelowym elementów, które są kopiowane z <see cref="T:System.Windows.Media.VisualCollection" />.</param>
        <param name="index">Liczony od zera indeks w <c>tablicy</c> od rozpoczyna się kopiowanie które.</param>
        <summary>Kopiuje elementy kolekcji do tablicy, zaczynając od indeksu tablicy.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (System.Windows.Media.Visual[] array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CopyTo(class System.Windows.Media.Visual[] array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.VisualCollection.CopyTo(System.Windows.Media.Visual[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (array As Visual(), index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CopyTo(cli::array &lt;System::Windows::Media::Visual ^&gt; ^ array, int index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Windows.Media.Visual[]" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">Tablica <see cref="T:System.Windows.Media.Visual" /> obiektów (które mogą mieć indeksowania liczony od zera).</param>
        <param name="index">Indeks, aby rozpocząć kopiowanie z poziomu <c>tablicy</c>.</param>
        <summary>Kopiuje bieżącej kolekcji do przekazanych <see cref="T:System.Windows.Media.Visual" /> tablicy.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.VisualCollection.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera liczbę elementów w kolekcji.</summary>
        <value>Liczba elementów który <see cref="T:System.Windows.Media.VisualCollection" /> zawiera.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Media.VisualCollection.Count%2A> jest to liczba elementów, które są rzeczywiście w <xref:System.Windows.Media.VisualCollection>. <xref:System.Windows.Media.VisualCollection.Capacity%2A> Liczba elementów jest który <xref:System.Windows.Media.VisualCollection> jest w stanie przechowywania.  
  
 <xref:System.Windows.Media.VisualCollection.Count%2A> zawsze jest mniejsza lub równa <xref:System.Windows.Media.VisualCollection.Capacity%2A>. Jeśli <xref:System.Windows.Media.VisualCollection.Count%2A> przekracza <xref:System.Windows.Media.VisualCollection.Capacity%2A> podczas dodawania elementów, pojemność listy jest podwójny przez automatyczne ponowne przydzielanie tablicy wewnętrznej przed skopiowaniem starych elementów i dodawanie nowych elementów.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Windows.Media.VisualCollection.Enumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Windows.Media.VisualCollection/Enumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.VisualCollection.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As VisualCollection.Enumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Media::VisualCollection::Enumerator GetEnumerator();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.VisualCollection+Enumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Pobiera moduł wyliczający, który można wykonać iterację <see cref="T:System.Windows.Media.VisualCollection" />.</summary>
        <returns>Moduł wyliczający, który może służyć do iterowania po kolekcji.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Collections.IEnumerable.GetEnumerator" />
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public int IndexOf (System.Windows.Media.Visual visual);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 IndexOf(class System.Windows.Media.Visual visual) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.VisualCollection.IndexOf(System.Windows.Media.Visual)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int IndexOf(System::Windows::Media::Visual ^ visual);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="visual" Type="System.Windows.Media.Visual" />
      </Parameters>
      <Docs>
        <param name="visual">
          <see cref="T:System.Windows.Media.Visual" /> Do zlokalizowania w <see cref="T:System.Windows.Media.VisualCollection" />.</param>
        <summary>Zwraca liczony od zera indeks <see cref="T:System.Windows.Media.Visual" />.</summary>
        <returns>Indeks <see cref="T:System.Windows.Media.Visual" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli <xref:System.Windows.Media.Visual> nie znajduje się w <xref:System.Windows.Media.VisualCollection>, jest zwracana wartość -1. Jeśli `null` jest przekazywany do metody, indeks pierwszego wpisu, który ma `null` jest zwracany. Jeśli nie ma wartości null wpisu, jest zwracana wartość -1.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public void Insert (int index, System.Windows.Media.Visual visual);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Insert(int32 index, class System.Windows.Media.Visual visual) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.VisualCollection.Insert(System.Int32,System.Windows.Media.Visual)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Insert(int index, System::Windows::Media::Visual ^ visual);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="visual" Type="System.Windows.Media.Visual" />
      </Parameters>
      <Docs>
        <param name="index">Liczony od zera indeks, pod którym powinny zostać wstawione wartości.</param>
        <param name="visual">
          <see cref="T:System.Windows.Media.Visual" /> Do wstawienia do <see cref="T:System.Windows.Media.VisualCollection" />.</param>
        <summary>Wstawia element do <see cref="T:System.Windows.Media.VisualCollection" /> pod określonym indeksem.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli <xref:System.Windows.Media.VisualCollection.Count%2A> jest już równa <xref:System.Windows.Media.VisualCollection.Capacity%2A>, pojemność <xref:System.Windows.Media.VisualCollection> zwiększa się przed nowe <xref:System.Windows.Media.Visual> dodaje się. Jeśli `index` jest równa <xref:System.Windows.Media.VisualCollection.Count%2A>, `visual` zostanie dodany na końcu <xref:System.Windows.Media.VisualCollection>. Wszystkie istniejące visual obiektów, która jest równa lub większa niż `index` zostaną przesunięte w celu uwzględnienia nowej <xref:System.Windows.Media.Visual>, a ich wartości indeksu są aktualizowane.  
  
 <xref:System.Windows.Media.VisualCollection.Insert%2A> Metody konfiguruje również relacji nadrzędny podrzędny między elementem nadrzędnym wizualne, który jest właścicielem z <xref:System.Windows.Media.VisualCollection>, a podrzędne `visual`.  
  
 Aby uzyskać większą kontrolę niskiego poziomu nad ta implementacja magazynu obiektów podrzędnych visual, należy rozważyć użycie <xref:System.Windows.Media.Visual.AddVisualChild%2A> i <xref:System.Windows.Media.Visual.RemoveVisualChild%2A> metody. Korzystając z tych metod, zdefiniuj implementacji magazynu i nie używaj <xref:System.Windows.Media.VisualCollection>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="index" /> jest mniejsza niż zero lub większa niż <see cref="P:System.Windows.Media.VisualCollection.Count" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.VisualCollection.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsReadOnly { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość wskazującą, czy <see cref="T:System.Windows.Media.VisualCollection" /> jest tylko do odczytu.</summary>
        <value>Wartość, która wskazuje, czy <see cref="T:System.Windows.Media.VisualCollection" /> jest tylko do odczytu.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość jest zawsze `false` dla wszystkich <xref:System.Windows.Media.VisualCollection> obiektów.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSynchronized">
      <MemberSignature Language="C#" Value="public bool IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.VisualCollection.IsSynchronized" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsSynchronized As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsSynchronized { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość wskazującą, czy dostęp do <see cref="T:System.Windows.Media.VisualCollection" /> jest zsynchronizowany (wątkowo).</summary>
        <value>Wartość, która wskazuje, czy <see cref="T:System.Windows.Media.VisualCollection" /> jest zsynchronizowany (wątkowo).</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość jest zawsze `false` dla wszystkich <xref:System.Windows.Media.VisualCollection> obiektów.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Visual this[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.Visual Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.VisualCollection.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public Property Item(index As Integer) As Visual" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Media::Visual ^ default[int] { System::Windows::Media::Visual ^ get(int index); void set(int index, System::Windows::Media::Visual ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Visual</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">Liczony od zera indeks <see cref="T:System.Windows.Media.VisualCollection" /> z którego można pobrać lub ustawić <see cref="T:System.Windows.Media.Visual" />.</param>
        <summary>Pobiera lub ustawia <see cref="T:System.Windows.Media.Visual" /> przechowywanego w indeksie liczony od zera <see cref="T:System.Windows.Media.VisualCollection" />.</summary>
        <value>
          <see cref="T:System.Windows.Media.Visual" /> Jest przechowywana w <paramref name="index" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość umożliwia uzyskiwanie dostępu do określonych <xref:System.Windows.Media.Visual> w <xref:System.Windows.Media.VisualCollection> przy użyciu indeksu.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="index" /> jest mniejsza od zera, lub <paramref name="index" /> jest równa lub większa niż <see cref="P:System.Windows.Media.VisualCollection.Count" />.</exception>
        <exception cref="T:System.ArgumentException">Nowy element podrzędny ma już rekord nadrzędny lub wartość w określonym indeksie nie jest <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove (System.Windows.Media.Visual visual);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Remove(class System.Windows.Media.Visual visual) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.VisualCollection.Remove(System.Windows.Media.Visual)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Remove(System::Windows::Media::Visual ^ visual);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="visual" Type="System.Windows.Media.Visual" />
      </Parameters>
      <Docs>
        <param name="visual">
          <see cref="T:System.Windows.Media.Visual" /> Do usunięcia z <see cref="T:System.Windows.Media.VisualCollection" />.</param>
        <summary>Usuwa określoną <see cref="T:System.Windows.Media.Visual" /> obiekt z <see cref="T:System.Windows.Media.VisualCollection" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Visual obiektów, które należy wykonać usuniętym obiekcie zostaną przesunięte zajmować vacated pozycji, a ich wartości indeksu są aktualizowane. Jeśli `visual` jest `null`, pierwszy `null` wpis zostanie usunięty. Należy pamiętać, że usunięcie `null` wpis jest liniowa do rozmiaru kolekcji.  
  
 <xref:System.Windows.Media.VisualCollection.Remove%2A> Metody spowoduje również usunięcie relacji nadrzędny podrzędny między elementem nadrzędnym wizualne, który jest właścicielem z <xref:System.Windows.Media.VisualCollection>, a podrzędne `visual`.  
  
 Aby uzyskać większą kontrolę niskiego poziomu nad ta implementacja magazynu obiektów podrzędnych visual, należy rozważyć użycie <xref:System.Windows.Media.Visual.AddVisualChild%2A> i <xref:System.Windows.Media.Visual.RemoveVisualChild%2A> metody. Korzystając z tych metod, zdefiniuj implementacji magazynu i nie używaj <xref:System.Windows.Media.VisualCollection>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveAt">
      <MemberSignature Language="C#" Value="public void RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.VisualCollection.RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAt (index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveAt(int index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">Liczony od zera indeks elementu wizualnego do usunięcia.</param>
        <summary>Usuwa obiekt visual w określonym indeksie w <see cref="T:System.Windows.Media.VisualCollection" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Visual obiektów, które należy wykonać usuniętym obiekcie zostaną przesunięte zajmować vacated pozycji, a ich wartości indeksu są aktualizowane.  
  
 <xref:System.Windows.Media.VisualCollection.RemoveAt%2A> Metody spowoduje również usunięcie relacji nadrzędny podrzędny między elementem nadrzędnym wizualne, który jest właścicielem z <xref:System.Windows.Media.VisualCollection>, a podrzędne `visual`.  
  
 Aby uzyskać większą kontrolę niskiego poziomu nad ta implementacja magazynu obiektów podrzędnych visual, należy rozważyć użycie <xref:System.Windows.Media.Visual.AddVisualChild%2A> i <xref:System.Windows.Media.Visual.RemoveVisualChild%2A> metody. Korzystając z tych metod, zdefiniuj implementacji magazynu i nie używaj <xref:System.Windows.Media.VisualCollection>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="index" /> jest mniejsza od zera, lub <paramref name="index" /> jest równa lub większa niż <see cref="P:System.Windows.Media.VisualCollection.Count" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveRange">
      <MemberSignature Language="C#" Value="public void RemoveRange (int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveRange(int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.VisualCollection.RemoveRange(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveRange (index As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveRange(int index, int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">Liczony od zera indeks zakresu elementów do usunięcia.</param>
        <param name="count">Liczba elementów do usunięcia.</param>
        <summary>Usuwa zakres obiektów visual z <see cref="T:System.Windows.Media.VisualCollection" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Visual obiektów, które należy wykonać usunięte obiekty zostaną przesunięte zajmować vacated pozycji, a ich wartości indeksu są aktualizowane.  
  
 <xref:System.Windows.Media.VisualCollection.RemoveRange%2A> Metody spowoduje również usunięcie relacji nadrzędny podrzędny między nadrzędnego visual, który jest właścicielem z <xref:System.Windows.Media.VisualCollection>i zakres podrzędnych elementów wizualnych.  
  
 Aby uzyskać większą kontrolę niskiego poziomu nad ta implementacja magazynu obiektów podrzędnych visual, należy rozważyć użycie <xref:System.Windows.Media.Visual.AddVisualChild%2A> i <xref:System.Windows.Media.Visual.RemoveVisualChild%2A> metody. Korzystając z tych metod, zdefiniuj implementacji magazynu i nie używaj <xref:System.Windows.Media.VisualCollection>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="index" /> jest mniejsza od zera lub <paramref name="count" /> jest mniejsza od zera.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="index" /> i <paramref name="count" /> nie odwołują się do prawidłowego zakresu elementów w <see cref="T:System.Windows.Media.VisualCollection" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="SyncRoot">
      <MemberSignature Language="C#" Value="public object SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.VisualCollection.SyncRoot" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SyncRoot As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ SyncRoot { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera obiekt, który może służyć do synchronizujący dostęp do <see cref="T:System.Windows.Media.VisualCollection" />.</summary>
        <value>Wartości typu <see cref="T:System.Object" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.VisualCollection.System#Collections#IEnumerable#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IEnumerator ^ System.Collections.IEnumerable.GetEnumerator() = System::Collections::IEnumerable::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Ten element członkowski obsługuje [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] infrastrukturę i nie jest przeznaczona do użycia bezpośrednio w kodzie. Opis tego elementu członkowskiego, zobacz <see cref="M:System.Collections.IEnumerable.GetEnumerator" />.</summary>
        <returns>Obiekt, który może służyć do iterowania po kolekcji.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>