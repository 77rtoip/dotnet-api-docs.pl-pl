<Type Name="VisualBrush" FullName="System.Windows.Media.VisualBrush">
  <Metadata><Meta Name="ms.openlocfilehash" Value="439ad3ac959b352817972ca2705d565aea172fb1" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69446274" /></Metadata><TypeSignature Language="C#" Value="public sealed class VisualBrush : System.Windows.Media.TileBrush" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed VisualBrush extends System.Windows.Media.TileBrush" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Media.VisualBrush" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class VisualBrush&#xA;Inherits TileBrush" />
  <TypeSignature Language="C++ CLI" Value="public ref class VisualBrush sealed : System::Windows::Media::TileBrush" />
  <TypeSignature Language="F#" Value="type VisualBrush = class&#xA;    inherit TileBrush" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Media.TileBrush</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Maluje obszar z <see cref="P:System.Windows.Media.VisualBrush.Visual" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Istnieją dwa sposoby określania <xref:System.Windows.Media.VisualBrush.Visual%2A> zawartości. <xref:System.Windows.Media.VisualBrush>  
  
-   Utwórz nowy <xref:System.Windows.Media.Visual> i użyj go do <xref:System.Windows.Media.VisualBrush.Visual%2A> ustawienia właściwości <xref:System.Windows.Media.VisualBrush>.  
  
-   Użyj istniejącego <xref:System.Windows.Media.Visual>, który tworzy zduplikowany obraz obiektu docelowego <xref:System.Windows.Media.Visual>. Następnie można użyć <xref:System.Windows.Media.VisualBrush> do tworzenia interesujących efektów, takich jak odbicie i powiększanie.  
  
 Gdy definiujesz <xref:System.Windows.Media.VisualBrush.Visual%2A> nowy <xref:System.Windows.Media.VisualBrush> dla a, który <xref:System.Windows.Media.Visual> jest <xref:System.Windows.UIElement> (na przykład <xref:System.Windows.UIElement> panel lub kontrolka), system <xref:System.Windows.Media.VisualBrush.AutoLayoutContent%2A> układu jest uruchamiany na i jego elementach podrzędnych, gdy właściwość jest ustawiona na `true`. Jednak główny <xref:System.Windows.UIElement> jest głównie odizolowany od reszty systemu. Style, Scenorysy i układ zewnętrzny nie mogą permeate tej granicy. W związku z tym należy jawnie określić rozmiar elementu głównego <xref:System.Windows.UIElement>, ponieważ jego jedynym elementem nadrzędnym <xref:System.Windows.Media.VisualBrush> jest, a w związku z tym nie może on automatycznie zmieniać rozmiaru do rysowanego obszaru. Aby uzyskać więcej informacji na temat [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)]układu w, zobacz [Układ](~/docs/framework/wpf/advanced/layout.md).  
  
 Aktualizacje drzewa <xref:System.Windows.Media.VisualBrush> wizualnego obiektu nie zostaną rozpropagowane, <xref:System.Windows.Media.Effects.BitmapEffect> jeśli znajduje się w łańcuchu nadrzędnym pędzla. To ograniczenie można obejść, wymuszając aktualizację sceny na obiekcie powyżej danego efektu. Aby wymusić aktualizację sceny, można wywołać <xref:System.Windows.UIElement.InvalidateVisual%2A> lub dodać animację.  
  
 **Funkcje freezable:** Ponieważ dziedziczy z <xref:System.Windows.Freezable> klasy <xref:System.Windows.Media.VisualBrush> , Klasa zawiera kilka specjalnych funkcji: <xref:System.Windows.Media.VisualBrush> obiekty mogą być deklarowane jako i współużytkowane przez wiele obiektów. Aby uzyskać więcej informacji o różnych funkcjach zapewnianych przez <xref:System.Windows.Freezable> obiekty, zobacz [Omówienie obiektów Freezable](~/docs/framework/wpf/advanced/freezable-objects-overview.md).  
  
> [!NOTE]
>  Element <xref:System.Windows.Media.VisualBrush> A nie może być tylko do odczytu (zablokowany), <xref:System.Windows.Media.VisualBrush.Visual%2A> gdy jego właściwość jest ustawiona na dowolną wartość inną niż`null.`  
  
 ]]></format>
    </remarks>
    <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=160049">Przykład VisualBrush</related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.Media.VisualBrush" /> klasy.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public VisualBrush ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.VisualBrush.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; VisualBrush();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.Media.VisualBrush" /> klasy.</summary>
        <remarks>To be added.</remarks>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=160049">Przykład VisualBrush</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public VisualBrush (System.Windows.Media.Visual visual);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Media.Visual visual) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.VisualBrush.#ctor(System.Windows.Media.Visual)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; VisualBrush(System::Windows::Media::Visual ^ visual);" />
      <MemberSignature Language="F#" Value="new System.Windows.Media.VisualBrush : System.Windows.Media.Visual -&gt; System.Windows.Media.VisualBrush" Usage="new System.Windows.Media.VisualBrush visual" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="visual" Type="System.Windows.Media.Visual" />
      </Parameters>
      <Docs>
        <param name="visual">Zawartość nowej <see cref="T:System.Windows.Media.VisualBrush" />.</param>
        <summary>Inicjuje nowe wystąpienie <see cref="T:System.Windows.Media.VisualBrush" /> klasy, która zawiera określony <see cref="P:System.Windows.Media.VisualBrush.Visual" />element.</summary>
        <remarks>To be added.</remarks>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=160049">Przykład VisualBrush</related>
      </Docs>
    </Member>
    <Member MemberName="AutoLayoutContent">
      <MemberSignature Language="C#" Value="public bool AutoLayoutContent { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutoLayoutContent" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.VisualBrush.AutoLayoutContent" />
      <MemberSignature Language="VB.NET" Value="Public Property AutoLayoutContent As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AutoLayoutContent { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AutoLayoutContent : bool with get, set" Usage="System.Windows.Media.VisualBrush.AutoLayoutContent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość określającą, czy <see cref="T:System.Windows.Media.VisualBrush" /> ma zostać uruchomiony <see cref="P:System.Windows.Media.VisualBrush.Visual" />układ.</summary>
        <value><see langword="true" />Jeśli ten pędzel powinien być uruchamiany w <see cref="P:System.Windows.Media.VisualBrush.Visual" />układzie; <see langword="false" />w przeciwnym razie. Wartość domyślna to <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ustawienie tej właściwości na `true` działa tylko wtedy <xref:System.Windows.UIElement>, gdy ten <xref:System.Windows.Media.VisualBrush.Visual%2A> pędzel nie jest elementem nadrzędnym.  
  
<a name="dependencyPropertyInfo_AutoLayoutContent"></a>   
## <a name="dependency-property-information"></a>Informacje dotyczące właściwości zależności  
  
|||  
|-|-|  
|Pole identyfikatora|<xref:System.Windows.Media.VisualBrush.AutoLayoutContentProperty>|  
|Właściwości metadanych ustawione na`true`|Brak|  
  
   
  
## Examples  
 Poniższy przykład pokazuje efekty <xref:System.Windows.Media.VisualBrush.AutoLayoutContent%2A> właściwości dla <xref:System.Windows.UIElement>nienadrzędnego.  
  
 [!code-csharp[visualbrush_markup_snip#AutoLayoutContentNonParentedUIElementExample](~/samples/snippets/csharp/VS_Snippets_Wpf/visualbrush_markup_snip/CSharp/AutoLayoutContentExample.cs#autolayoutcontentnonparenteduielementexample)]
 [!code-vb[visualbrush_markup_snip#AutoLayoutContentNonParentedUIElementExample](~/samples/snippets/visualbasic/VS_Snippets_Wpf/visualbrush_markup_snip/visualbasic/autolayoutcontentexample.vb#autolayoutcontentnonparenteduielementexample)]
 [!code-xaml[visualbrush_markup_snip#AutoLayoutContentNonParentedUIElementExample](~/samples/snippets/xaml/VS_Snippets_Wpf/visualbrush_markup_snip/XAML/AutoLayoutContentExample.xaml#autolayoutcontentnonparenteduielementexample)]  
  
 Na poniższej ilustracji przedstawiono przykład danych wyjściowych:  
  
 ![AutoLayoutContent z&#45;nienadrzędnym elementem UIElement] (~/add/media/graphicsmm-visualbrush-autolayoutcontentproperty-nonparented.png "AutoLayoutContent z nienadrzędnym elementem UIElement")  
  
 W następnym przykładzie pokazano efekty <xref:System.Windows.Media.VisualBrush.AutoLayoutContent%2A> właściwości w <xref:System.Windows.UIElement>obiekcie nadrzędnym.  
  
 [!code-csharp[visualbrush_markup_snip#AutoLayoutContentParentedUIElementExample](~/samples/snippets/csharp/VS_Snippets_Wpf/visualbrush_markup_snip/CSharp/AutoLayoutContentExample.cs#autolayoutcontentparenteduielementexample)]
 [!code-vb[visualbrush_markup_snip#AutoLayoutContentParentedUIElementExample](~/samples/snippets/visualbasic/VS_Snippets_Wpf/visualbrush_markup_snip/visualbasic/autolayoutcontentexample.vb#autolayoutcontentparenteduielementexample)]
 [!code-xaml[visualbrush_markup_snip#AutoLayoutContentParentedUIElementExample](~/samples/snippets/xaml/VS_Snippets_Wpf/visualbrush_markup_snip/XAML/AutoLayoutContentExample.xaml#autolayoutcontentparenteduielementexample)]  
  
 Na poniższej ilustracji przedstawiono przykład danych wyjściowych:  
  
 ![AutoLayoutContent z nadrzędnym elementem UIElement] (~/add/media/graphicsmm-visualbrush-autolayoutcontentproperty-parented.png "AutoLayoutContent z nadrzędnym elementem UIElement")  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoLayoutContentProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty AutoLayoutContentProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty AutoLayoutContentProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Media.VisualBrush.AutoLayoutContentProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly AutoLayoutContentProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ AutoLayoutContentProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable AutoLayoutContentProperty : System.Windows.DependencyProperty" Usage="System.Windows.Media.VisualBrush.AutoLayoutContentProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identyfikuje właściwość <see cref="P:System.Windows.Media.VisualBrush.AutoLayoutContent" /> zależności.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public System.Windows.Media.VisualBrush Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Media.VisualBrush Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.VisualBrush.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Function Clone () As VisualBrush" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Media::VisualBrush ^ Clone();" />
      <MemberSignature Language="F#" Value="override this.Clone : unit -&gt; System.Windows.Media.VisualBrush" Usage="visualBrush.Clone " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.VisualBrush</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Tworzy modyfikowalny klon tego <see cref="T:System.Windows.Media.VisualBrush" />elementu, tworząc głębokie kopie wartości tego obiektu.</summary>
        <returns>Modyfikowalny klon bieżącego obiektu. <see cref="P:System.Windows.Freezable.IsFrozen" /> Właściwość sklonowanego obiektu jest <see langword="false" /> <see cref="P:System.Windows.Freezable.IsFrozen" /> nawet wtedy, gdy właściwość source ma wartość<see langword="true." /></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda służy do tworzenia modyfikowalnych kopii obiektów zamrożonych <xref:System.Windows.Freezable> (lub dowolnego <xref:System.Windows.Freezable> obiektu). Dla wygody ta metoda zaciemnienia dziedziczonej wersji z silnie wpisaną implementacją.  
  
 Aby uzyskać więcej informacji, zobacz <xref:System.Windows.Freezable.Clone%2A?displayProperty=nameWithType>.  
  
 Podczas kopiowania właściwości zależności ta metoda kopiuje odwołania do zasobów i powiązania danych (ale mogą nie być już rozpoznawane), ale nie ma animacji ani ich bieżących wartości.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CloneCurrentValue">
      <MemberSignature Language="C#" Value="public System.Windows.Media.VisualBrush CloneCurrentValue ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Media.VisualBrush CloneCurrentValue() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.VisualBrush.CloneCurrentValue" />
      <MemberSignature Language="VB.NET" Value="Public Function CloneCurrentValue () As VisualBrush" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Media::VisualBrush ^ CloneCurrentValue();" />
      <MemberSignature Language="F#" Value="override this.CloneCurrentValue : unit -&gt; System.Windows.Media.VisualBrush" Usage="visualBrush.CloneCurrentValue " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.VisualBrush</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Tworzy modyfikowalny klon tego <see cref="T:System.Windows.Media.VisualBrush" /> obiektu, tworząc głębokie kopie bieżących wartości tego obiektu. Odwołania do zasobów, powiązania danych i animacje nie są kopiowane, ale ich bieżące wartości to.</summary>
        <returns>Modyfikowalny klon bieżącego obiektu. <see cref="P:System.Windows.Freezable.IsFrozen" /> Właściwość sklonowanego obiektu <see langword="false" /> będzie <see cref="P:System.Windows.Freezable.IsFrozen" /> nawet wtedy, gdy właściwość źródła była <see langword="true" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda służy do tworzenia modyfikowalnych kopii obiektów zamrożonych <xref:System.Windows.Freezable> (lub dowolnego <xref:System.Windows.Freezable> obiektu). Dla wygody ta metoda zaciemnienia dziedziczonej wersji z silnie wpisaną implementacją.  
  
 Aby uzyskać więcej informacji, zobacz <xref:System.Windows.Freezable.CloneCurrentValue%2A?displayProperty=nameWithType>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateInstanceCore">
      <MemberSignature Language="C#" Value="protected override System.Windows.Freezable CreateInstanceCore ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Freezable CreateInstanceCore() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.VisualBrush.CreateInstanceCore" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateInstanceCore () As Freezable" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Freezable ^ CreateInstanceCore();" />
      <MemberSignature Language="F#" Value="override this.CreateInstanceCore : unit -&gt; System.Windows.Freezable" Usage="visualBrush.CreateInstanceCore " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Freezable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetContentBounds">
      <MemberSignature Language="C#" Value="protected override void GetContentBounds (out System.Windows.Rect contentBounds);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void GetContentBounds([out] valuetype System.Windows.Rect&amp; contentBounds) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.VisualBrush.GetContentBounds(System.Windows.Rect@)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub GetContentBounds (ByRef contentBounds As Rect)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void GetContentBounds([Runtime::InteropServices::Out] System::Windows::Rect % contentBounds);" />
      <MemberSignature Language="F#" Value="override this.GetContentBounds :  -&gt; unit" Usage="visualBrush.GetContentBounds contentBounds" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contentBounds" Type="System.Windows.Rect" RefType="out" />
      </Parameters>
      <Docs>
        <param name="contentBounds">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPropertyChanged">
      <MemberSignature Language="C#" Value="protected override void OnPropertyChanged (System.Windows.DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnPropertyChanged(valuetype System.Windows.DependencyPropertyChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.VisualBrush.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnPropertyChanged (e As DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnPropertyChanged(System::Windows::DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="F#" Value="override this.OnPropertyChanged : System.Windows.DependencyPropertyChangedEventArgs -&gt; unit" Usage="visualBrush.OnPropertyChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DependencyPropertyChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visual">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Visual Visual { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.Visual Visual" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.VisualBrush.Visual" />
      <MemberSignature Language="VB.NET" Value="Public Property Visual As Visual" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Media::Visual ^ Visual { System::Windows::Media::Visual ^ get(); void set(System::Windows::Media::Visual ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Visual : System.Windows.Media.Visual with get, set" Usage="System.Windows.Media.VisualBrush.Visual" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Visual</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia zawartość pędzla.</summary>
        <value>Zawartość pędzla. Wartość domyślna to <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Istnieją dwa sposoby określania <xref:System.Windows.Media.VisualBrush.Visual%2A> zawartości. <xref:System.Windows.Media.VisualBrush>  
  
-   Utwórz nowy <xref:System.Windows.Media.Visual> i użyj go do <xref:System.Windows.Media.VisualBrush.Visual%2A> ustawienia właściwości <xref:System.Windows.Media.VisualBrush>.  
  
-   Użyj istniejącego <xref:System.Windows.Media.Visual>, który tworzy zduplikowany obraz obiektu docelowego <xref:System.Windows.Media.Visual>. Następnie można użyć <xref:System.Windows.Media.VisualBrush> do tworzenia interesujących efektów, takich jak odbicie i powiększanie.  
  
 <xref:System.Windows.Media.Visual>jest całkiem wysoka w ogólnej hierarchii klas WPF, dlatego bardzo duża liczba obiektów może być używana jako Wizualizacja dla a <xref:System.Windows.Media.VisualBrush>; cała lista nie może być pokazywana w tym miejscu. Zobacz <xref:System.Windows.Media.Visual>sekcję: "Hierarchia dziedziczenia", która będzie zawierać bezpośrednio klasy pochodne. Następnie możesz kliknąć bezpośrednio pochodne klasy i przechodzenie przez hierarchie w celu uzyskania pełnego zakresu możliwości. Na najwyższym poziomie dwie najpopularniejsze kategorie obiektów, które mogą być używane przez <xref:System.Windows.Media.VisualBrush> program, to <xref:System.Windows.UIElement> lub <xref:System.Windows.Media.ContainerVisual>. <xref:System.Windows.UIElement>obejmuje zasadniczo każdy element interfejsu użytkownika, który może w inny sposób uczestniczyć w interfejsie użytkownika aplikacji WPF. <xref:System.Windows.Media.ContainerVisual>zawiera element <xref:System.Windows.Media.DrawingGroup> , który zawiera jeden lub <xref:System.Windows.Media.Drawing>więcej obiektów pochodnych.  
  
 Gdy definiujesz <xref:System.Windows.Media.VisualBrush.Visual%2A> nowy <xref:System.Windows.Media.VisualBrush> dla a, który <xref:System.Windows.Media.Visual> jest <xref:System.Windows.UIElement> (na przykład <xref:System.Windows.UIElement> panel lub kontrolka), system <xref:System.Windows.Media.VisualBrush.AutoLayoutContent%2A> układu jest uruchamiany na i jego elementach podrzędnych, gdy właściwość jest ustawiona na `true`. Jednak katalog główny <xref:System.Windows.UIElement> jest głównie odizolowany od reszty systemu. Style, Scenorysy i układ zewnętrzny podyktowany przez element nadrzędny, w którym zastosowano Pędzel, nie mogą permeate tej granicy. W związku z tym należy jawnie określić rozmiar elementu głównego <xref:System.Windows.UIElement>, ponieważ jego jedynym elementem nadrzędnym <xref:System.Windows.Media.VisualBrush> jest, a w związku z tym nie może on automatycznie zmieniać rozmiaru do rysowanego obszaru. Aby uzyskać więcej informacji na temat [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)]układu w, zobacz [Układ](~/docs/framework/wpf/advanced/layout.md).  
  
 Aktualizacje drzewa <xref:System.Windows.Media.VisualBrush> wizualnego obiektu nie zostaną rozpropagowane, <xref:System.Windows.Media.Effects.BitmapEffect> jeśli znajduje się w łańcuchu nadrzędnym pędzla. To ograniczenie można obejść, wymuszając aktualizację sceny na obiekcie powyżej danego efektu. Aby wymusić aktualizację sceny, można wywołać <xref:System.Windows.UIElement.InvalidateVisual%2A> lub dodać animację.  
  
> [!NOTE]
>  Element <xref:System.Windows.Media.VisualBrush> A nie może być tylko do odczytu (zablokowany), <xref:System.Windows.Media.VisualBrush.Visual%2A> gdy jego właściwość jest ustawiona na dowolną wartość inną niż`null.`  
  
<a name="xamlPropertyElementUsage_Visual"></a>   
## <a name="xaml-property-element-usage"></a>Użycie elementu właściwości języka XAML  
  
```  
<object>  
  <object.Visual>  
    singleVisualRoot  
  </object.Visual>  
</object>  
```  
  
<a name="xamlAttributeUsage_Visual"></a>   
## <a name="xaml-attribute-usage"></a>Użycie atrybutu języka XAML  
 <*object* `Visual`="{*bindingExpression*}"/>  
  
—lub—
  
 <*object* `Visual`="{*resourceExpression*}"/>  
  
<a name="xamlValues_Visual"></a>   
## <a name="xaml-values"></a>Wartości XAML  
 `singleVisualRoot`  
 Pojedynczy element obiektu, który definiuje nowy element wizualizacji dla pędzla. Musi to być obiekt pochodzący z <xref:System.Windows.Media.Visual>. Zobacz uwagi.  
  
 `bindingExpression`  
 A który jest obliczany w istniejącym <xref:System.Windows.Media.Visual> wystąpieniu.  
  
 `resourceExpression`  
 A `StaticResource` <xref:System.Windows.Media.Visual> lub `DynamicResource` który jest obliczany w istniejącym wystąpieniu. Zobacz [zasoby XAML](~/docs/framework/wpf/advanced/xaml-resources.md)  
  
<a name="dependencyPropertyInfo_Visual"></a>   
## <a name="dependency-property-information"></a>Informacje dotyczące właściwości zależności  
  
|||  
|-|-|  
|Pole identyfikatora|<xref:System.Windows.Media.VisualBrush.VisualProperty>|  
|Właściwości metadanych ustawione na`true`|Brak|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="VisualProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty VisualProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty VisualProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Media.VisualBrush.VisualProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly VisualProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ VisualProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable VisualProperty : System.Windows.DependencyProperty" Usage="System.Windows.Media.VisualBrush.VisualProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identyfikuje właściwość <see cref="P:System.Windows.Media.VisualBrush.Visual" /> zależności.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
