<Type Name="BezierSegment" FullName="System.Windows.Media.BezierSegment">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="289d601f34a78fd5db5018f9e40be9f18ff1f579" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class BezierSegment : System.Windows.Media.PathSegment" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed BezierSegment extends System.Windows.Media.PathSegment" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Media.BezierSegment" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class BezierSegment&#xA;Inherits PathSegment" />
  <TypeSignature Language="C++ CLI" Value="public ref class BezierSegment sealed : System::Windows::Media::PathSegment" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Media.PathSegment</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="d7f67-101">Reprezentuje sześcienny krzywej Beziera między dwoma punktami.</span>
      <span class="sxs-lookup">
        <span data-stu-id="d7f67-101">Represents a cubic Bezier curve drawn between two points.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d7f67-102">Użyj <xref:System.Windows.Media.PathFigure> obiekt, aby zapisać <xref:System.Windows.Media.BezierSegment> obiektów i inne segmenty.</span><span class="sxs-lookup"><span data-stu-id="d7f67-102">Use a <xref:System.Windows.Media.PathFigure> object to store <xref:System.Windows.Media.BezierSegment> objects and other segments.</span></span>  
  
 <span data-ttu-id="d7f67-103">Trzeciego krzywej Beziera jest definiowana za pomocą czterech punktów: punkt początkowy, punkt końcowy (<xref:System.Windows.Media.BezierSegment.Point3%2A>), dwa punktów kontrolnych i (<xref:System.Windows.Media.BezierSegment.Point1%2A> i <xref:System.Windows.Media.BezierSegment.Point2%2A>). <xref:System.Windows.Media.BezierSegment> Klasa nie zawiera właściwości dla punktu początkowego krzywej; definiuje on tylko punkt końcowy.</span><span class="sxs-lookup"><span data-stu-id="d7f67-103">A cubic Bezier curve is defined by four points: a start point, an end point (<xref:System.Windows.Media.BezierSegment.Point3%2A>), and two control points (<xref:System.Windows.Media.BezierSegment.Point1%2A> and <xref:System.Windows.Media.BezierSegment.Point2%2A>).The <xref:System.Windows.Media.BezierSegment> class does not contain a property for the starting point of the curve; it only defines the end point.</span></span> <span data-ttu-id="d7f67-104">Punkt początkowy krzywej jest bieżący punkt <xref:System.Windows.Media.PathFigure> do której <xref:System.Windows.Media.BezierSegment> został dodany.</span><span class="sxs-lookup"><span data-stu-id="d7f67-104">The beginning point of the curve is the current point of the <xref:System.Windows.Media.PathFigure> to which the <xref:System.Windows.Media.BezierSegment> is added.</span></span>  
  
 <span data-ttu-id="d7f67-105">Punkty kontrolne dwóch sześcienny krzywej Beziera przypominają pól, korzystające z części co byłoby prostej kierunku się i tworzenie krzywą.</span><span class="sxs-lookup"><span data-stu-id="d7f67-105">The two control points of a cubic Bezier curve behave like magnets, attracting portions of what would otherwise be a straight line toward themselves and producing a curve.</span></span> <span data-ttu-id="d7f67-106">Formant pierwszego punktu, <xref:System.Windows.Media.BezierSegment.Point1%2A>, ma wpływ na początku części krzywej; drugi punkt kontrolny, <xref:System.Windows.Media.BezierSegment.Point2%2A>, ma wpływ na końcową części krzywej.</span><span class="sxs-lookup"><span data-stu-id="d7f67-106">The first control point, <xref:System.Windows.Media.BezierSegment.Point1%2A>, affects the beginning portion of the curve; the second control point, <xref:System.Windows.Media.BezierSegment.Point2%2A>, affects the ending portion of the curve.</span></span> <span data-ttu-id="d7f67-107">Należy pamiętać, że krzywej nie musi przechodzić przez jednego z punktów kontrolnych; Każdy punkt kontrolny przenosi jego część wiersza do samej siebie, ale nie do samej siebie.</span><span class="sxs-lookup"><span data-stu-id="d7f67-107">Note that the curve doesn't necessarily pass through either of the control points; each control point moves its portion of the line toward itself, but not through itself.</span></span>  
  
## <a name="freezable-features"></a><span data-ttu-id="d7f67-108">Funkcje obiektu freezable</span><span class="sxs-lookup"><span data-stu-id="d7f67-108">Freezable Features</span></span>  
 <span data-ttu-id="d7f67-109">A <xref:System.Windows.Media.BezierSegment> jest typem <xref:System.Windows.Freezable> obiektu.</span><span class="sxs-lookup"><span data-stu-id="d7f67-109">A <xref:System.Windows.Media.BezierSegment> is a type of <xref:System.Windows.Freezable> object.</span></span> <span data-ttu-id="d7f67-110">Aby uzyskać informacje o <xref:System.Windows.Freezable> funkcje, takie jak zamrażanie i klonowania, zobacz [obiektu Freezable Przegląd obiektów](~/docs/framework/wpf/advanced/freezable-objects-overview.md).</span><span class="sxs-lookup"><span data-stu-id="d7f67-110">For information about <xref:System.Windows.Freezable> features, such as freezing and cloning, see the [Freezable Objects Overview](~/docs/framework/wpf/advanced/freezable-objects-overview.md).</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Media.PathFigure" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="d7f67-111">Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.Media.BezierSegment" /> klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d7f67-111">Initializes a new instance of the <see cref="T:System.Windows.Media.BezierSegment" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BezierSegment ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.BezierSegment.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; BezierSegment();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="d7f67-112">Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.Media.BezierSegment" /> klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d7f67-112">Initializes a new instance of the <see cref="T:System.Windows.Media.BezierSegment" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d7f67-113">Trzeciego krzywej Beziera jest definiowana za pomocą czterech punktów: punkt początkowy, punkt końcowy (`point3`), dwa punktów kontrolnych i (`point1` i `point2`).</span><span class="sxs-lookup"><span data-stu-id="d7f67-113">A cubic Bezier curve is defined by four points: a start point, an end point (`point3`), and two control points (`point1` and `point2`).</span></span> <span data-ttu-id="d7f67-114">Ta metoda nie umożliwiają określenie punkt początkowy krzywej; krzywej zaczyna się od bieżącego punktu <xref:System.Windows.Media.PathFigure> obiektu, do którego <xref:System.Windows.Media.BezierSegment> został dodany.</span><span class="sxs-lookup"><span data-stu-id="d7f67-114">This method does not enable you to specify the beginning point of the curve; the curve begins at the current point of the <xref:System.Windows.Media.PathFigure> object to which the <xref:System.Windows.Media.BezierSegment> is added.</span></span>  
  
 <span data-ttu-id="d7f67-115">Punkty kontrolne dwóch sześcienny krzywej Beziera przypominają pól, korzystające z części co byłoby prostej kierunku się i tworzenie krzywą.</span><span class="sxs-lookup"><span data-stu-id="d7f67-115">The two control points of a cubic Bezier curve behave like magnets, attracting portions of what would otherwise be a straight line toward themselves and producing a curve.</span></span> <span data-ttu-id="d7f67-116">Formant pierwszego punktu, `point1`, ma wpływ na początku części krzywej; drugi punkt kontrolny, `point2`, ma wpływ na końcową części krzywej.</span><span class="sxs-lookup"><span data-stu-id="d7f67-116">The first control point, `point1`, affects the beginning portion of the curve; the second control point, `point2`, affects the ending portion of the curve.</span></span> <span data-ttu-id="d7f67-117">Należy pamiętać, że krzywej nie musi przechodzić przez jednego z punktów kontrolnych; Każdy punkt kontrolny przenosi jego część wiersza do samej siebie, ale nie do samej siebie.</span><span class="sxs-lookup"><span data-stu-id="d7f67-117">Note that the curve doesn't necessarily pass through either of the control points; each control point moves its portion of the line toward itself, but not through itself.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BezierSegment (System.Windows.Point point1, System.Windows.Point point2, System.Windows.Point point3, bool isStroked);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Windows.Point point1, valuetype System.Windows.Point point2, valuetype System.Windows.Point point3, bool isStroked) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.BezierSegment.#ctor(System.Windows.Point,System.Windows.Point,System.Windows.Point,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (point1 As Point, point2 As Point, point3 As Point, isStroked As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; BezierSegment(System::Windows::Point point1, System::Windows::Point point2, System::Windows::Point point3, bool isStroked);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="point1" Type="System.Windows.Point" />
        <Parameter Name="point2" Type="System.Windows.Point" />
        <Parameter Name="point3" Type="System.Windows.Point" />
        <Parameter Name="isStroked" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="point1">
          <span data-ttu-id="d7f67-118">Pierwszy punkt, który określa początek części krzywej.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d7f67-118">The first control point, which determines the beginning portion of the curve.</span>
          </span>
        </param>
        <param name="point2">
          <span data-ttu-id="d7f67-119">Drugi punkt kontrolny, który określa końcowy części krzywej.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d7f67-119">The second control point, which determines the ending portion of the curve.</span>
          </span>
        </param>
        <param name="point3">
          <span data-ttu-id="d7f67-120">Punkt jest narysowanie krzywej.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d7f67-120">The point to which the curve is drawn.</span>
          </span>
        </param>
        <param name="isStroked">
          <span data-ttu-id="d7f67-121">
            <see langword="true" /> Aby obrysu krzywej po <see cref="T:System.Windows.Media.Pen" /> jest używany do renderowania segmentu; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d7f67-121">
              <see langword="true" /> to stroke the curve when a <see cref="T:System.Windows.Media.Pen" /> is used to render the segment; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d7f67-122">Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.Media.BezierSegment" /> klasy z punktów kontrolnych określonego punktu końcowego i obrysu opcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d7f67-122">Initializes a new instance of the <see cref="T:System.Windows.Media.BezierSegment" /> class with the specified control points, end point, and stroke option.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d7f67-123">Trzeciego krzywej Beziera jest definiowana za pomocą czterech punktów: punkt początkowy, punkt końcowy (`point3`), dwa punktów kontrolnych i (`point1` i `point2`).</span><span class="sxs-lookup"><span data-stu-id="d7f67-123">A cubic Bezier curve is defined by four points: a start point, an end point (`point3`), and two control points (`point1` and `point2`).</span></span> <span data-ttu-id="d7f67-124">Ta metoda nie umożliwiają określenie punkt początkowy krzywej; krzywej zaczyna się od bieżącego punktu <xref:System.Windows.Media.PathFigure> obiektu, do którego <xref:System.Windows.Media.BezierSegment> został dodany.</span><span class="sxs-lookup"><span data-stu-id="d7f67-124">This method does not enable you to specify the beginning point of the curve; the curve begins at the current point of the <xref:System.Windows.Media.PathFigure> object to which the <xref:System.Windows.Media.BezierSegment> is added.</span></span>  
  
 <span data-ttu-id="d7f67-125">Punkty kontrolne dwóch sześcienny krzywej Beziera przypominają pól, korzystające z części co byłoby prostej kierunku się i tworzenie krzywą.</span><span class="sxs-lookup"><span data-stu-id="d7f67-125">The two control points of a cubic Bezier curve behave like magnets, attracting portions of what would otherwise be a straight line toward themselves and producing a curve.</span></span> <span data-ttu-id="d7f67-126">Formant pierwszego punktu, `point1`, ma wpływ na początku części krzywej; drugi punkt kontrolny, `point2`, ma wpływ na końcową części krzywej.</span><span class="sxs-lookup"><span data-stu-id="d7f67-126">The first control point, `point1`, affects the beginning portion of the curve; the second control point, `point2`, affects the ending portion of the curve.</span></span> <span data-ttu-id="d7f67-127">Należy pamiętać, że krzywej nie musi przechodzić przez jednego z punktów kontrolnych; Każdy punkt kontrolny przenosi jego część wiersza do samej siebie, ale nie do samej siebie.</span><span class="sxs-lookup"><span data-stu-id="d7f67-127">Note that the curve doesn't necessarily pass through either of the control points; each control point moves its portion of the line toward itself, but not through itself.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public System.Windows.Media.BezierSegment Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Media.BezierSegment Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.BezierSegment.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Function Clone () As BezierSegment" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Media::BezierSegment ^ Clone();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.BezierSegment</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="d7f67-128">Tworzy modyfikowalną klonu tego <see cref="T:System.Windows.Media.BezierSegment" />, tworzenie bezpośrednich kopii wartości tego obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d7f67-128">Creates a modifiable clone of this <see cref="T:System.Windows.Media.BezierSegment" />, making deep copies of this object's values.</span>
          </span>
          <span data-ttu-id="d7f67-129">Podczas kopiowania właściwości zależności, ta metoda umożliwia skopiowanie powiązania odwołań i dane zasobów, ale nie rozpoznają może ale animacje lub ich bieżącymi wartościami.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d7f67-129">When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d7f67-130">Można modyfikować klonowania bieżącego obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d7f67-130">A modifiable clone of the current object.</span>
          </span>
          <span data-ttu-id="d7f67-131">Sklonowany obiekt <see cref="P:System.Windows.Freezable.IsFrozen" /> właściwość będzie <see langword="false" /> nawet wtedy, gdy źródło <see cref="P:System.Windows.Freezable.IsFrozen" /> właściwość <see langword="true." /></span>
          <span class="sxs-lookup">
            <span data-stu-id="d7f67-131">The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be <see langword="false" /> even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was <see langword="true." /></span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d7f67-132">Ta metoda służy do tworzenia kopii można modyfikować zablokowane <xref:System.Windows.Freezable> obiektów (lub dowolnej <xref:System.Windows.Freezable> obiektu).</span><span class="sxs-lookup"><span data-stu-id="d7f67-132">This method is used to produce modifiable copies of frozen <xref:System.Windows.Freezable> objects (or any <xref:System.Windows.Freezable> object).</span></span> <span data-ttu-id="d7f67-133">Dla wygody ta metoda zasłania dziedziczone wersji z silnie typizowaną implementację.</span><span class="sxs-lookup"><span data-stu-id="d7f67-133">For convenience, this method shadows the inherited version with a strongly typed implementation.</span></span>  
  
 <span data-ttu-id="d7f67-134">Aby uzyskać więcej informacji, zobacz <xref:System.Windows.Freezable.Clone%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="d7f67-134">For more information, see <xref:System.Windows.Freezable.Clone%2A?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CloneCurrentValue">
      <MemberSignature Language="C#" Value="public System.Windows.Media.BezierSegment CloneCurrentValue ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Media.BezierSegment CloneCurrentValue() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.BezierSegment.CloneCurrentValue" />
      <MemberSignature Language="VB.NET" Value="Public Function CloneCurrentValue () As BezierSegment" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Media::BezierSegment ^ CloneCurrentValue();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.BezierSegment</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="d7f67-135">Tworzy modyfikowalną klonu tego <see cref="T:System.Windows.Media.BezierSegment" /> obiekt Tworzenie bezpośrednich kopii wartości bieżących tego obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d7f67-135">Creates a modifiable clone of this <see cref="T:System.Windows.Media.BezierSegment" /> object, making deep copies of this object's current values.</span>
          </span>
          <span data-ttu-id="d7f67-136">Odwołania do zasobu, powiązania danych i animacji nie są kopiowane, ale są ich bieżącymi wartościami.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d7f67-136">Resource references, data bindings, and animations are not copied, but their current values are.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d7f67-137">Można modyfikować klonowania bieżącego obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d7f67-137">A modifiable clone of the current object.</span>
          </span>
          <span data-ttu-id="d7f67-138">Sklonowany obiekt <see cref="P:System.Windows.Freezable.IsFrozen" /> właściwość będzie <see langword="false" /> nawet wtedy, gdy źródło <see cref="P:System.Windows.Freezable.IsFrozen" /> właściwość <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d7f67-138">The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be <see langword="false" /> even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was <see langword="true" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d7f67-139">Ta metoda służy do tworzenia kopii można modyfikować zablokowane <xref:System.Windows.Freezable> obiektów (lub dowolnej <xref:System.Windows.Freezable> obiektu).</span><span class="sxs-lookup"><span data-stu-id="d7f67-139">This method is used to produce modifiable copies of frozen <xref:System.Windows.Freezable> objects (or any <xref:System.Windows.Freezable> object).</span></span> <span data-ttu-id="d7f67-140">Dla wygody ta metoda zasłania dziedziczone wersji z silnie typizowaną implementację.</span><span class="sxs-lookup"><span data-stu-id="d7f67-140">For convenience, this method shadows the inherited version with a strongly typed implementation.</span></span>  
  
 <span data-ttu-id="d7f67-141">Aby uzyskać więcej informacji, zobacz <xref:System.Windows.Freezable.CloneCurrentValue%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="d7f67-141">For more information, see <xref:System.Windows.Freezable.CloneCurrentValue%2A?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateInstanceCore">
      <MemberSignature Language="C#" Value="protected override System.Windows.Freezable CreateInstanceCore ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Freezable CreateInstanceCore() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.BezierSegment.CreateInstanceCore" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateInstanceCore () As Freezable" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Freezable ^ CreateInstanceCore();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Freezable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Point1">
      <MemberSignature Language="C#" Value="public System.Windows.Point Point1 { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Point Point1" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.BezierSegment.Point1" />
      <MemberSignature Language="VB.NET" Value="Public Property Point1 As Point" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Point Point1 { System::Windows::Point get(); void set(System::Windows::Point value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Point</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d7f67-142">Pobiera lub ustawia pierwszy punkt kontrolny krzywej.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d7f67-142">Gets or sets the first control point of the curve.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d7f67-143">Pierwszy punkt kontrolny krzywej.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d7f67-143">The first control point of the curve.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d7f67-144">Punkty kontrolne dwóch sześcienny krzywej Beziera przypominają pól, korzystające z części co byłoby prostej kierunku się i tworzenie krzywą.</span><span class="sxs-lookup"><span data-stu-id="d7f67-144">The two control points of a cubic Bezier curve behave like magnets, attracting portions of what would otherwise be a straight line toward themselves and producing a curve.</span></span> <span data-ttu-id="d7f67-145">Formant pierwszego punktu, <xref:System.Windows.Media.BezierSegment.Point1%2A>, ma wpływ na początku części krzywej; drugi punkt kontrolny, <xref:System.Windows.Media.BezierSegment.Point2%2A>, ma wpływ na końcową części krzywej.</span><span class="sxs-lookup"><span data-stu-id="d7f67-145">The first control point, <xref:System.Windows.Media.BezierSegment.Point1%2A>, affects the beginning portion of the curve; the second control point, <xref:System.Windows.Media.BezierSegment.Point2%2A>, affects the ending portion of the curve.</span></span> <span data-ttu-id="d7f67-146">Należy pamiętać, że krzywej nie musi przechodzić przez jednego z punktów kontrolnych; Każdy punkt kontrolny przenosi jego część wiersza do samej siebie, ale nie do samej siebie.</span><span class="sxs-lookup"><span data-stu-id="d7f67-146">Note that the curve doesn't necessarily pass through either of the control points; each control point moves its portion of the line toward itself, but not through itself.</span></span>  
  
<a name="dependencyPropertyInfo_Point1"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="d7f67-147">Informacje dotyczące właściwości zależności</span><span class="sxs-lookup"><span data-stu-id="d7f67-147">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="d7f67-148">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="d7f67-148">Identifier field</span></span>|<xref:System.Windows.Media.BezierSegment.Point1Property>|  
|<span data-ttu-id="d7f67-149">Wartość właściwości metadanych `true`</span><span class="sxs-lookup"><span data-stu-id="d7f67-149">Metadata properties set to `true`</span></span>|<span data-ttu-id="d7f67-150">Brak</span><span class="sxs-lookup"><span data-stu-id="d7f67-150">None</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Point1Property">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty Point1Property;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty Point1Property" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Media.BezierSegment.Point1Property" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Point1Property As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ Point1Property;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d7f67-151">Identyfikuje <see cref="P:System.Windows.Media.BezierSegment.Point1" /> właściwości zależności.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d7f67-151">Identifies the <see cref="P:System.Windows.Media.BezierSegment.Point1" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Point2">
      <MemberSignature Language="C#" Value="public System.Windows.Point Point2 { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Point Point2" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.BezierSegment.Point2" />
      <MemberSignature Language="VB.NET" Value="Public Property Point2 As Point" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Point Point2 { System::Windows::Point get(); void set(System::Windows::Point value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Point</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d7f67-152">Pobiera lub ustawia drugi punkt kontrolny krzywej.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d7f67-152">Gets or sets the second control point of the curve.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d7f67-153">Drugi punkt kontrolny krzywej.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d7f67-153">The second control point of the curve.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d7f67-154">Punkty kontrolne dwóch sześcienny krzywej Beziera przypominają pól, korzystające z części co byłoby prostej kierunku się i tworzenie krzywą.</span><span class="sxs-lookup"><span data-stu-id="d7f67-154">The two control points of a cubic Bezier curve behave like magnets, attracting portions of what would otherwise be a straight line toward themselves and producing a curve.</span></span> <span data-ttu-id="d7f67-155">Formant pierwszego punktu, <xref:System.Windows.Media.BezierSegment.Point1%2A>, ma wpływ na początku części krzywej; drugi punkt kontrolny, <xref:System.Windows.Media.BezierSegment.Point2%2A>, ma wpływ na końcową części krzywej.</span><span class="sxs-lookup"><span data-stu-id="d7f67-155">The first control point, <xref:System.Windows.Media.BezierSegment.Point1%2A>, affects the beginning portion of the curve; the second control point, <xref:System.Windows.Media.BezierSegment.Point2%2A>, affects the ending portion of the curve.</span></span> <span data-ttu-id="d7f67-156">Należy pamiętać, że krzywej nie musi przechodzić przez jednego z punktów kontrolnych; Każdy punkt kontrolny przenosi jego część wiersza do samej siebie, ale nie do samej siebie.</span><span class="sxs-lookup"><span data-stu-id="d7f67-156">Note that the curve doesn't necessarily pass through either of the control points; each control point moves its portion of the line toward itself, but not through itself.</span></span>  
  
<a name="dependencyPropertyInfo_Point2"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="d7f67-157">Informacje dotyczące właściwości zależności</span><span class="sxs-lookup"><span data-stu-id="d7f67-157">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="d7f67-158">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="d7f67-158">Identifier field</span></span>|<xref:System.Windows.Media.BezierSegment.Point2Property>|  
|<span data-ttu-id="d7f67-159">Wartość właściwości metadanych `true`</span><span class="sxs-lookup"><span data-stu-id="d7f67-159">Metadata properties set to `true`</span></span>|<span data-ttu-id="d7f67-160">Brak</span><span class="sxs-lookup"><span data-stu-id="d7f67-160">None</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Point2Property">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty Point2Property;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty Point2Property" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Media.BezierSegment.Point2Property" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Point2Property As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ Point2Property;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d7f67-161">Identyfikuje <see cref="P:System.Windows.Media.BezierSegment.Point2" /> właściwości zależności.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d7f67-161">Identifies the <see cref="P:System.Windows.Media.BezierSegment.Point2" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Point3">
      <MemberSignature Language="C#" Value="public System.Windows.Point Point3 { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Point Point3" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.BezierSegment.Point3" />
      <MemberSignature Language="VB.NET" Value="Public Property Point3 As Point" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Point Point3 { System::Windows::Point get(); void set(System::Windows::Point value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Point</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d7f67-162">Pobiera lub ustawia punkt końcowy krzywej.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d7f67-162">Gets or sets the end point of the curve.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d7f67-163">Punkt końcowy krzywej.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d7f67-163">The end point of the curve.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d7f67-164"><xref:System.Windows.Media.BezierSegment> Klasa nie zawiera właściwości dla punktu początkowego krzywej; definiuje on tylko punkt końcowy.</span><span class="sxs-lookup"><span data-stu-id="d7f67-164">The <xref:System.Windows.Media.BezierSegment> class does not contain a property for the starting point of the curve; it only defines the end point.</span></span> <span data-ttu-id="d7f67-165">Punkt początkowy krzywej jest bieżący punkt <xref:System.Windows.Media.PathFigure> do której <xref:System.Windows.Media.BezierSegment> został dodany.</span><span class="sxs-lookup"><span data-stu-id="d7f67-165">The beginning point of the curve is the current point of the <xref:System.Windows.Media.PathFigure> to which the <xref:System.Windows.Media.BezierSegment> is added.</span></span>  
  
<a name="dependencyPropertyInfo_Point3"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="d7f67-166">Informacje dotyczące właściwości zależności</span><span class="sxs-lookup"><span data-stu-id="d7f67-166">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="d7f67-167">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="d7f67-167">Identifier field</span></span>|<xref:System.Windows.Media.BezierSegment.Point3Property>|  
|<span data-ttu-id="d7f67-168">Wartość właściwości metadanych `true`</span><span class="sxs-lookup"><span data-stu-id="d7f67-168">Metadata properties set to `true`</span></span>|<span data-ttu-id="d7f67-169">Brak</span><span class="sxs-lookup"><span data-stu-id="d7f67-169">None</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Point3Property">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty Point3Property;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty Point3Property" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Media.BezierSegment.Point3Property" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Point3Property As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ Point3Property;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d7f67-170">Identyfikuje <see cref="P:System.Windows.Media.BezierSegment.Point3" /> właściwości zależności.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d7f67-170">Identifies the <see cref="P:System.Windows.Media.BezierSegment.Point3" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>