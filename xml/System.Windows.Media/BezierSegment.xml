<Type Name="BezierSegment" FullName="System.Windows.Media.BezierSegment">
  <Metadata><Meta Name="ms.openlocfilehash" Value="7a1060ec0f00dcc6fdab36e04a26c66194f52ed1" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69437043" /></Metadata><TypeSignature Language="C#" Value="public sealed class BezierSegment : System.Windows.Media.PathSegment" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed BezierSegment extends System.Windows.Media.PathSegment" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Media.BezierSegment" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class BezierSegment&#xA;Inherits PathSegment" />
  <TypeSignature Language="C++ CLI" Value="public ref class BezierSegment sealed : System::Windows::Media::PathSegment" />
  <TypeSignature Language="F#" Value="type BezierSegment = class&#xA;    inherit PathSegment" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Media.PathSegment</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="38f43-101">Reprezentuje zakrzywioną krzywą Beziera narysowanej między dwoma punktami.</span><span class="sxs-lookup"><span data-stu-id="38f43-101">Represents a cubic Bezier curve drawn between two points.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="38f43-102">Użyj obiektu, aby przechowywać <xref:System.Windows.Media.BezierSegment> obiekty i inne segmenty. <xref:System.Windows.Media.PathFigure></span><span class="sxs-lookup"><span data-stu-id="38f43-102">Use a <xref:System.Windows.Media.PathFigure> object to store <xref:System.Windows.Media.BezierSegment> objects and other segments.</span></span>  
  
 <span data-ttu-id="38f43-103">Krzywa Beziera w sześciennym jest definiowana przez cztery punkty: punkt początkowy, punkt końcowy<xref:System.Windows.Media.BezierSegment.Point3%2A>() i dwa punkty kontrolne<xref:System.Windows.Media.BezierSegment.Point1%2A> ( <xref:System.Windows.Media.BezierSegment.Point2%2A>i). <xref:System.Windows.Media.BezierSegment> Klasa nie zawiera właściwości punktu początkowego krzywej; definiuje tylko punkt końcowy.</span><span class="sxs-lookup"><span data-stu-id="38f43-103">A cubic Bezier curve is defined by four points: a start point, an end point (<xref:System.Windows.Media.BezierSegment.Point3%2A>), and two control points (<xref:System.Windows.Media.BezierSegment.Point1%2A> and <xref:System.Windows.Media.BezierSegment.Point2%2A>).The <xref:System.Windows.Media.BezierSegment> class does not contain a property for the starting point of the curve; it only defines the end point.</span></span> <span data-ttu-id="38f43-104">Punkt początkowy krzywej jest bieżącym punktem, <xref:System.Windows.Media.PathFigure> do <xref:System.Windows.Media.BezierSegment> którego jest dodawany.</span><span class="sxs-lookup"><span data-stu-id="38f43-104">The beginning point of the curve is the current point of the <xref:System.Windows.Media.PathFigure> to which the <xref:System.Windows.Media.BezierSegment> is added.</span></span>  
  
 <span data-ttu-id="38f43-105">Dwa punkty kontrolne zakrzywionej krzywej Beziera zachowują się jak magnets, co pociąga za sobą, że w przeciwnym razie będzie prosta linia, która prowadzi do siebie i wytwarzanie krzywej.</span><span class="sxs-lookup"><span data-stu-id="38f43-105">The two control points of a cubic Bezier curve behave like magnets, attracting portions of what would otherwise be a straight line toward themselves and producing a curve.</span></span> <span data-ttu-id="38f43-106">Pierwszy punkt <xref:System.Windows.Media.BezierSegment.Point1%2A>kontrolny, ma wpływ na początkową część krzywej; drugi <xref:System.Windows.Media.BezierSegment.Point2%2A>punkt kontrolny, ma wpływ na część końcową krzywej.</span><span class="sxs-lookup"><span data-stu-id="38f43-106">The first control point, <xref:System.Windows.Media.BezierSegment.Point1%2A>, affects the beginning portion of the curve; the second control point, <xref:System.Windows.Media.BezierSegment.Point2%2A>, affects the ending portion of the curve.</span></span> <span data-ttu-id="38f43-107">Należy zauważyć, że krzywa nie musi przechodzić przez jeden z punktów kontrolnych; Każdy punkt kontrolny przenosi swoją część linii do samego siebie, ale nie do samego siebie.</span><span class="sxs-lookup"><span data-stu-id="38f43-107">Note that the curve doesn't necessarily pass through either of the control points; each control point moves its portion of the line toward itself, but not through itself.</span></span>  
  
## <a name="freezable-features"></a><span data-ttu-id="38f43-108">Funkcje freezable</span><span class="sxs-lookup"><span data-stu-id="38f43-108">Freezable Features</span></span>  
 <span data-ttu-id="38f43-109">A <xref:System.Windows.Media.BezierSegment> jest<xref:System.Windows.Freezable> typem obiektu.</span><span class="sxs-lookup"><span data-stu-id="38f43-109">A <xref:System.Windows.Media.BezierSegment> is a type of <xref:System.Windows.Freezable> object.</span></span> <span data-ttu-id="38f43-110">Aby uzyskać informacje <xref:System.Windows.Freezable> o funkcjach, takich jak zamrażanie i klonowanie, zobacz [Omówienie obiektów Freezable](~/docs/framework/wpf/advanced/freezable-objects-overview.md).</span><span class="sxs-lookup"><span data-stu-id="38f43-110">For information about <xref:System.Windows.Freezable> features, such as freezing and cloning, see the [Freezable Objects Overview](~/docs/framework/wpf/advanced/freezable-objects-overview.md).</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Media.PathFigure" />
    <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=159989"><span data-ttu-id="38f43-111">Przykład geometrie</span><span class="sxs-lookup"><span data-stu-id="38f43-111">Geometries Sample</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="38f43-112">Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.Media.BezierSegment" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="38f43-112">Initializes a new instance of the <see cref="T:System.Windows.Media.BezierSegment" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BezierSegment ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.BezierSegment.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; BezierSegment();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="38f43-113">Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.Media.BezierSegment" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="38f43-113">Initializes a new instance of the <see cref="T:System.Windows.Media.BezierSegment" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="38f43-114">Krzywa Beziera w sześciennym jest definiowana przez cztery punkty: punkt początkowy, punkt końcowy`point3`() i dwa punkty kontrolne`point1` ( `point2`i).</span><span class="sxs-lookup"><span data-stu-id="38f43-114">A cubic Bezier curve is defined by four points: a start point, an end point (`point3`), and two control points (`point1` and `point2`).</span></span> <span data-ttu-id="38f43-115">Ta metoda nie pozwala na określenie punktu początkowego krzywej; Krzywa rozpoczyna się od bieżącego punktu <xref:System.Windows.Media.PathFigure> obiektu, do <xref:System.Windows.Media.BezierSegment> którego jest dodawany.</span><span class="sxs-lookup"><span data-stu-id="38f43-115">This method does not enable you to specify the beginning point of the curve; the curve begins at the current point of the <xref:System.Windows.Media.PathFigure> object to which the <xref:System.Windows.Media.BezierSegment> is added.</span></span>  
  
 <span data-ttu-id="38f43-116">Dwa punkty kontrolne zakrzywionej krzywej Beziera zachowują się jak magnets, co pociąga za sobą, że w przeciwnym razie będzie prosta linia, która prowadzi do siebie i wytwarzanie krzywej.</span><span class="sxs-lookup"><span data-stu-id="38f43-116">The two control points of a cubic Bezier curve behave like magnets, attracting portions of what would otherwise be a straight line toward themselves and producing a curve.</span></span> <span data-ttu-id="38f43-117">Pierwszy punkt `point1`kontrolny, ma wpływ na początkową część krzywej; drugi `point2`punkt kontrolny, ma wpływ na część końcową krzywej.</span><span class="sxs-lookup"><span data-stu-id="38f43-117">The first control point, `point1`, affects the beginning portion of the curve; the second control point, `point2`, affects the ending portion of the curve.</span></span> <span data-ttu-id="38f43-118">Należy zauważyć, że krzywa nie musi przechodzić przez jeden z punktów kontrolnych; Każdy punkt kontrolny przenosi swoją część linii do samego siebie, ale nie do samego siebie.</span><span class="sxs-lookup"><span data-stu-id="38f43-118">Note that the curve doesn't necessarily pass through either of the control points; each control point moves its portion of the line toward itself, but not through itself.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BezierSegment (System.Windows.Point point1, System.Windows.Point point2, System.Windows.Point point3, bool isStroked);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Windows.Point point1, valuetype System.Windows.Point point2, valuetype System.Windows.Point point3, bool isStroked) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.BezierSegment.#ctor(System.Windows.Point,System.Windows.Point,System.Windows.Point,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (point1 As Point, point2 As Point, point3 As Point, isStroked As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; BezierSegment(System::Windows::Point point1, System::Windows::Point point2, System::Windows::Point point3, bool isStroked);" />
      <MemberSignature Language="F#" Value="new System.Windows.Media.BezierSegment : System.Windows.Point * System.Windows.Point * System.Windows.Point * bool -&gt; System.Windows.Media.BezierSegment" Usage="new System.Windows.Media.BezierSegment (point1, point2, point3, isStroked)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="point1" Type="System.Windows.Point" />
        <Parameter Name="point2" Type="System.Windows.Point" />
        <Parameter Name="point3" Type="System.Windows.Point" />
        <Parameter Name="isStroked" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="point1"><span data-ttu-id="38f43-119">Pierwszy punkt kontrolny, który określa początkową część krzywej.</span><span class="sxs-lookup"><span data-stu-id="38f43-119">The first control point, which determines the beginning portion of the curve.</span></span></param>
        <param name="point2"><span data-ttu-id="38f43-120">Drugi punkt kontrolny, który określa końcową część krzywej.</span><span class="sxs-lookup"><span data-stu-id="38f43-120">The second control point, which determines the ending portion of the curve.</span></span></param>
        <param name="point3"><span data-ttu-id="38f43-121">Punkt, do którego jest rysowana krzywa.</span><span class="sxs-lookup"><span data-stu-id="38f43-121">The point to which the curve is drawn.</span></span></param>
        <param name="isStroked"><span data-ttu-id="38f43-122"><see langword="true" />Aby pociągnięcia krzywą, <see cref="T:System.Windows.Media.Pen" /> gdy jest używany do renderowania segmentu; <see langword="false" />w przeciwnym razie.</span><span class="sxs-lookup"><span data-stu-id="38f43-122"><see langword="true" /> to stroke the curve when a <see cref="T:System.Windows.Media.Pen" /> is used to render the segment; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="38f43-123">Inicjuje nowe wystąpienie <see cref="T:System.Windows.Media.BezierSegment" /> klasy z określonymi punktami kontrolnymi, punktem końcowym i opcją pociągnięcia.</span><span class="sxs-lookup"><span data-stu-id="38f43-123">Initializes a new instance of the <see cref="T:System.Windows.Media.BezierSegment" /> class with the specified control points, end point, and stroke option.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="38f43-124">Krzywa Beziera w sześciennym jest definiowana przez cztery punkty: punkt początkowy, punkt końcowy`point3`() i dwa punkty kontrolne`point1` ( `point2`i).</span><span class="sxs-lookup"><span data-stu-id="38f43-124">A cubic Bezier curve is defined by four points: a start point, an end point (`point3`), and two control points (`point1` and `point2`).</span></span> <span data-ttu-id="38f43-125">Ta metoda nie pozwala na określenie punktu początkowego krzywej; Krzywa rozpoczyna się od bieżącego punktu <xref:System.Windows.Media.PathFigure> obiektu, do <xref:System.Windows.Media.BezierSegment> którego jest dodawany.</span><span class="sxs-lookup"><span data-stu-id="38f43-125">This method does not enable you to specify the beginning point of the curve; the curve begins at the current point of the <xref:System.Windows.Media.PathFigure> object to which the <xref:System.Windows.Media.BezierSegment> is added.</span></span>  
  
 <span data-ttu-id="38f43-126">Dwa punkty kontrolne zakrzywionej krzywej Beziera zachowują się jak magnets, co pociąga za sobą, że w przeciwnym razie będzie prosta linia, która prowadzi do siebie i wytwarzanie krzywej.</span><span class="sxs-lookup"><span data-stu-id="38f43-126">The two control points of a cubic Bezier curve behave like magnets, attracting portions of what would otherwise be a straight line toward themselves and producing a curve.</span></span> <span data-ttu-id="38f43-127">Pierwszy punkt `point1`kontrolny, ma wpływ na początkową część krzywej; drugi `point2`punkt kontrolny, ma wpływ na część końcową krzywej.</span><span class="sxs-lookup"><span data-stu-id="38f43-127">The first control point, `point1`, affects the beginning portion of the curve; the second control point, `point2`, affects the ending portion of the curve.</span></span> <span data-ttu-id="38f43-128">Należy zauważyć, że krzywa nie musi przechodzić przez jeden z punktów kontrolnych; Każdy punkt kontrolny przenosi swoją część linii do samego siebie, ale nie do samego siebie.</span><span class="sxs-lookup"><span data-stu-id="38f43-128">Note that the curve doesn't necessarily pass through either of the control points; each control point moves its portion of the line toward itself, but not through itself.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public System.Windows.Media.BezierSegment Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Media.BezierSegment Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.BezierSegment.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Function Clone () As BezierSegment" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Media::BezierSegment ^ Clone();" />
      <MemberSignature Language="F#" Value="override this.Clone : unit -&gt; System.Windows.Media.BezierSegment" Usage="bezierSegment.Clone " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.BezierSegment</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="38f43-129">Tworzy modyfikowalny klon tego <see cref="T:System.Windows.Media.BezierSegment" />elementu, tworząc głębokie kopie wartości tego obiektu.</span><span class="sxs-lookup"><span data-stu-id="38f43-129">Creates a modifiable clone of this <see cref="T:System.Windows.Media.BezierSegment" />, making deep copies of this object's values.</span></span> <span data-ttu-id="38f43-130">Podczas kopiowania właściwości zależności ta metoda kopiuje odwołania do zasobów i powiązania danych (ale mogą nie być już rozpoznawane), ale nie ma animacji ani ich bieżących wartości.</span><span class="sxs-lookup"><span data-stu-id="38f43-130">When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.</span></span></summary>
        <returns><span data-ttu-id="38f43-131">Modyfikowalny klon bieżącego obiektu.</span><span class="sxs-lookup"><span data-stu-id="38f43-131">A modifiable clone of the current object.</span></span> <span data-ttu-id="38f43-132"><see cref="P:System.Windows.Freezable.IsFrozen" /> Właściwość sklonowanego obiektu <see langword="false" /> będzie <see cref="P:System.Windows.Freezable.IsFrozen" /> nawet wtedy, gdy właściwość źródła była<see langword="true." /></span><span class="sxs-lookup"><span data-stu-id="38f43-132">The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be <see langword="false" /> even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was <see langword="true." /></span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="38f43-133">Ta metoda służy do tworzenia modyfikowalnych kopii obiektów zamrożonych <xref:System.Windows.Freezable> (lub dowolnego <xref:System.Windows.Freezable> obiektu).</span><span class="sxs-lookup"><span data-stu-id="38f43-133">This method is used to produce modifiable copies of frozen <xref:System.Windows.Freezable> objects (or any <xref:System.Windows.Freezable> object).</span></span> <span data-ttu-id="38f43-134">Dla wygody ta metoda zaciemnienia dziedziczonej wersji z silnie wpisaną implementacją.</span><span class="sxs-lookup"><span data-stu-id="38f43-134">For convenience, this method shadows the inherited version with a strongly typed implementation.</span></span>  
  
 <span data-ttu-id="38f43-135">Aby uzyskać więcej informacji, zobacz <xref:System.Windows.Freezable.Clone%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="38f43-135">For more information, see <xref:System.Windows.Freezable.Clone%2A?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CloneCurrentValue">
      <MemberSignature Language="C#" Value="public System.Windows.Media.BezierSegment CloneCurrentValue ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Media.BezierSegment CloneCurrentValue() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.BezierSegment.CloneCurrentValue" />
      <MemberSignature Language="VB.NET" Value="Public Function CloneCurrentValue () As BezierSegment" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Media::BezierSegment ^ CloneCurrentValue();" />
      <MemberSignature Language="F#" Value="override this.CloneCurrentValue : unit -&gt; System.Windows.Media.BezierSegment" Usage="bezierSegment.CloneCurrentValue " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.BezierSegment</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="38f43-136">Tworzy modyfikowalny klon tego <see cref="T:System.Windows.Media.BezierSegment" /> obiektu, tworząc głębokie kopie bieżących wartości tego obiektu.</span><span class="sxs-lookup"><span data-stu-id="38f43-136">Creates a modifiable clone of this <see cref="T:System.Windows.Media.BezierSegment" /> object, making deep copies of this object's current values.</span></span> <span data-ttu-id="38f43-137">Odwołania do zasobów, powiązania danych i animacje nie są kopiowane, ale ich bieżące wartości to.</span><span class="sxs-lookup"><span data-stu-id="38f43-137">Resource references, data bindings, and animations are not copied, but their current values are.</span></span></summary>
        <returns><span data-ttu-id="38f43-138">Modyfikowalny klon bieżącego obiektu.</span><span class="sxs-lookup"><span data-stu-id="38f43-138">A modifiable clone of the current object.</span></span> <span data-ttu-id="38f43-139"><see cref="P:System.Windows.Freezable.IsFrozen" /> Właściwość sklonowanego obiektu <see langword="false" /> będzie <see cref="P:System.Windows.Freezable.IsFrozen" /> nawet wtedy, gdy właściwość źródła była <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="38f43-139">The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be <see langword="false" /> even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was <see langword="true" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="38f43-140">Ta metoda służy do tworzenia modyfikowalnych kopii obiektów zamrożonych <xref:System.Windows.Freezable> (lub dowolnego <xref:System.Windows.Freezable> obiektu).</span><span class="sxs-lookup"><span data-stu-id="38f43-140">This method is used to produce modifiable copies of frozen <xref:System.Windows.Freezable> objects (or any <xref:System.Windows.Freezable> object).</span></span> <span data-ttu-id="38f43-141">Dla wygody ta metoda zaciemnienia dziedziczonej wersji z silnie wpisaną implementacją.</span><span class="sxs-lookup"><span data-stu-id="38f43-141">For convenience, this method shadows the inherited version with a strongly typed implementation.</span></span>  
  
 <span data-ttu-id="38f43-142">Aby uzyskać więcej informacji, zobacz <xref:System.Windows.Freezable.CloneCurrentValue%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="38f43-142">For more information, see <xref:System.Windows.Freezable.CloneCurrentValue%2A?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateInstanceCore">
      <MemberSignature Language="C#" Value="protected override System.Windows.Freezable CreateInstanceCore ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Freezable CreateInstanceCore() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.BezierSegment.CreateInstanceCore" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateInstanceCore () As Freezable" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Freezable ^ CreateInstanceCore();" />
      <MemberSignature Language="F#" Value="override this.CreateInstanceCore : unit -&gt; System.Windows.Freezable" Usage="bezierSegment.CreateInstanceCore " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Freezable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Point1">
      <MemberSignature Language="C#" Value="public System.Windows.Point Point1 { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Point Point1" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.BezierSegment.Point1" />
      <MemberSignature Language="VB.NET" Value="Public Property Point1 As Point" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Point Point1 { System::Windows::Point get(); void set(System::Windows::Point value); };" />
      <MemberSignature Language="F#" Value="member this.Point1 : System.Windows.Point with get, set" Usage="System.Windows.Media.BezierSegment.Point1" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Point</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="38f43-143">Pobiera lub ustawia pierwszy punkt kontrolny krzywej.</span><span class="sxs-lookup"><span data-stu-id="38f43-143">Gets or sets the first control point of the curve.</span></span></summary>
        <value><span data-ttu-id="38f43-144">Pierwszy punkt kontrolny krzywej.</span><span class="sxs-lookup"><span data-stu-id="38f43-144">The first control point of the curve.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="38f43-145">Dwa punkty kontrolne zakrzywionej krzywej Beziera zachowują się jak magnets, co pociąga za sobą, że w przeciwnym razie będzie prosta linia, która prowadzi do siebie i wytwarzanie krzywej.</span><span class="sxs-lookup"><span data-stu-id="38f43-145">The two control points of a cubic Bezier curve behave like magnets, attracting portions of what would otherwise be a straight line toward themselves and producing a curve.</span></span> <span data-ttu-id="38f43-146">Pierwszy punkt <xref:System.Windows.Media.BezierSegment.Point1%2A>kontrolny, ma wpływ na początkową część krzywej; drugi <xref:System.Windows.Media.BezierSegment.Point2%2A>punkt kontrolny, ma wpływ na część końcową krzywej.</span><span class="sxs-lookup"><span data-stu-id="38f43-146">The first control point, <xref:System.Windows.Media.BezierSegment.Point1%2A>, affects the beginning portion of the curve; the second control point, <xref:System.Windows.Media.BezierSegment.Point2%2A>, affects the ending portion of the curve.</span></span> <span data-ttu-id="38f43-147">Należy zauważyć, że krzywa nie musi przechodzić przez jeden z punktów kontrolnych; Każdy punkt kontrolny przenosi swoją część linii do samego siebie, ale nie do samego siebie.</span><span class="sxs-lookup"><span data-stu-id="38f43-147">Note that the curve doesn't necessarily pass through either of the control points; each control point moves its portion of the line toward itself, but not through itself.</span></span>  
  
<a name="dependencyPropertyInfo_Point1"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="38f43-148">Informacje dotyczące właściwości zależności</span><span class="sxs-lookup"><span data-stu-id="38f43-148">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="38f43-149">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="38f43-149">Identifier field</span></span>|<xref:System.Windows.Media.BezierSegment.Point1Property>|  
|<span data-ttu-id="38f43-150">Właściwości metadanych ustawione na`true`</span><span class="sxs-lookup"><span data-stu-id="38f43-150">Metadata properties set to `true`</span></span>|<span data-ttu-id="38f43-151">Brak</span><span class="sxs-lookup"><span data-stu-id="38f43-151">None</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Point1Property">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty Point1Property;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty Point1Property" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Media.BezierSegment.Point1Property" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Point1Property As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ Point1Property;" />
      <MemberSignature Language="F#" Value=" staticval mutable Point1Property : System.Windows.DependencyProperty" Usage="System.Windows.Media.BezierSegment.Point1Property" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="38f43-152">Identyfikuje właściwość <see cref="P:System.Windows.Media.BezierSegment.Point1" /> zależności.</span><span class="sxs-lookup"><span data-stu-id="38f43-152">Identifies the <see cref="P:System.Windows.Media.BezierSegment.Point1" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Point2">
      <MemberSignature Language="C#" Value="public System.Windows.Point Point2 { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Point Point2" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.BezierSegment.Point2" />
      <MemberSignature Language="VB.NET" Value="Public Property Point2 As Point" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Point Point2 { System::Windows::Point get(); void set(System::Windows::Point value); };" />
      <MemberSignature Language="F#" Value="member this.Point2 : System.Windows.Point with get, set" Usage="System.Windows.Media.BezierSegment.Point2" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Point</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="38f43-153">Pobiera lub ustawia drugi punkt kontrolny krzywej.</span><span class="sxs-lookup"><span data-stu-id="38f43-153">Gets or sets the second control point of the curve.</span></span></summary>
        <value><span data-ttu-id="38f43-154">Drugi punkt kontrolny krzywej.</span><span class="sxs-lookup"><span data-stu-id="38f43-154">The second control point of the curve.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="38f43-155">Dwa punkty kontrolne zakrzywionej krzywej Beziera zachowują się jak magnets, co pociąga za sobą, że w przeciwnym razie będzie prosta linia, która prowadzi do siebie i wytwarzanie krzywej.</span><span class="sxs-lookup"><span data-stu-id="38f43-155">The two control points of a cubic Bezier curve behave like magnets, attracting portions of what would otherwise be a straight line toward themselves and producing a curve.</span></span> <span data-ttu-id="38f43-156">Pierwszy punkt <xref:System.Windows.Media.BezierSegment.Point1%2A>kontrolny, ma wpływ na początkową część krzywej; drugi <xref:System.Windows.Media.BezierSegment.Point2%2A>punkt kontrolny, ma wpływ na część końcową krzywej.</span><span class="sxs-lookup"><span data-stu-id="38f43-156">The first control point, <xref:System.Windows.Media.BezierSegment.Point1%2A>, affects the beginning portion of the curve; the second control point, <xref:System.Windows.Media.BezierSegment.Point2%2A>, affects the ending portion of the curve.</span></span> <span data-ttu-id="38f43-157">Należy zauważyć, że krzywa nie musi przechodzić przez jeden z punktów kontrolnych; Każdy punkt kontrolny przenosi swoją część linii do samego siebie, ale nie do samego siebie.</span><span class="sxs-lookup"><span data-stu-id="38f43-157">Note that the curve doesn't necessarily pass through either of the control points; each control point moves its portion of the line toward itself, but not through itself.</span></span>  
  
<a name="dependencyPropertyInfo_Point2"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="38f43-158">Informacje dotyczące właściwości zależności</span><span class="sxs-lookup"><span data-stu-id="38f43-158">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="38f43-159">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="38f43-159">Identifier field</span></span>|<xref:System.Windows.Media.BezierSegment.Point2Property>|  
|<span data-ttu-id="38f43-160">Właściwości metadanych ustawione na`true`</span><span class="sxs-lookup"><span data-stu-id="38f43-160">Metadata properties set to `true`</span></span>|<span data-ttu-id="38f43-161">Brak</span><span class="sxs-lookup"><span data-stu-id="38f43-161">None</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Point2Property">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty Point2Property;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty Point2Property" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Media.BezierSegment.Point2Property" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Point2Property As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ Point2Property;" />
      <MemberSignature Language="F#" Value=" staticval mutable Point2Property : System.Windows.DependencyProperty" Usage="System.Windows.Media.BezierSegment.Point2Property" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="38f43-162">Identyfikuje właściwość <see cref="P:System.Windows.Media.BezierSegment.Point2" /> zależności.</span><span class="sxs-lookup"><span data-stu-id="38f43-162">Identifies the <see cref="P:System.Windows.Media.BezierSegment.Point2" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Point3">
      <MemberSignature Language="C#" Value="public System.Windows.Point Point3 { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Point Point3" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.BezierSegment.Point3" />
      <MemberSignature Language="VB.NET" Value="Public Property Point3 As Point" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Point Point3 { System::Windows::Point get(); void set(System::Windows::Point value); };" />
      <MemberSignature Language="F#" Value="member this.Point3 : System.Windows.Point with get, set" Usage="System.Windows.Media.BezierSegment.Point3" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Point</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="38f43-163">Pobiera lub ustawia punkt końcowy krzywej.</span><span class="sxs-lookup"><span data-stu-id="38f43-163">Gets or sets the end point of the curve.</span></span></summary>
        <value><span data-ttu-id="38f43-164">Punkt końcowy krzywej.</span><span class="sxs-lookup"><span data-stu-id="38f43-164">The end point of the curve.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="38f43-165"><xref:System.Windows.Media.BezierSegment> Klasa nie zawiera właściwości punktu początkowego krzywej; definiuje tylko punkt końcowy.</span><span class="sxs-lookup"><span data-stu-id="38f43-165">The <xref:System.Windows.Media.BezierSegment> class does not contain a property for the starting point of the curve; it only defines the end point.</span></span> <span data-ttu-id="38f43-166">Punkt początkowy krzywej jest bieżącym punktem, <xref:System.Windows.Media.PathFigure> do <xref:System.Windows.Media.BezierSegment> którego jest dodawany.</span><span class="sxs-lookup"><span data-stu-id="38f43-166">The beginning point of the curve is the current point of the <xref:System.Windows.Media.PathFigure> to which the <xref:System.Windows.Media.BezierSegment> is added.</span></span>  
  
<a name="dependencyPropertyInfo_Point3"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="38f43-167">Informacje dotyczące właściwości zależności</span><span class="sxs-lookup"><span data-stu-id="38f43-167">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="38f43-168">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="38f43-168">Identifier field</span></span>|<xref:System.Windows.Media.BezierSegment.Point3Property>|  
|<span data-ttu-id="38f43-169">Właściwości metadanych ustawione na`true`</span><span class="sxs-lookup"><span data-stu-id="38f43-169">Metadata properties set to `true`</span></span>|<span data-ttu-id="38f43-170">Brak</span><span class="sxs-lookup"><span data-stu-id="38f43-170">None</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Point3Property">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty Point3Property;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty Point3Property" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Media.BezierSegment.Point3Property" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Point3Property As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ Point3Property;" />
      <MemberSignature Language="F#" Value=" staticval mutable Point3Property : System.Windows.DependencyProperty" Usage="System.Windows.Media.BezierSegment.Point3Property" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="38f43-171">Identyfikuje właściwość <see cref="P:System.Windows.Media.BezierSegment.Point3" /> zależności.</span><span class="sxs-lookup"><span data-stu-id="38f43-171">Identifies the <see cref="P:System.Windows.Media.BezierSegment.Point3" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
