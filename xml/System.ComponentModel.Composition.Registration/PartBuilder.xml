<Type Name="PartBuilder" FullName="System.ComponentModel.Composition.Registration.PartBuilder">
  <TypeSignature Language="C#" Value="public class PartBuilder" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit PartBuilder extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.Composition.Registration.PartBuilder" />
  <TypeSignature Language="VB.NET" Value="Public Class PartBuilder" />
  <TypeSignature Language="C++ CLI" Value="public ref class PartBuilder" />
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.Composition.Registration</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="e308a-101">Reprezentuje regułę dekoracji zestaw typów zgodnych z atrybutami Managed Extensibility Framework (MEF).</span><span class="sxs-lookup"><span data-stu-id="e308a-101">Represents a rule for decorating a set of matching types with Managed Extensibility Framework (MEF) attributes.</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName="AddMetadata">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition.Registration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="e308a-102">Dodaje metadane do pasujących typów.</span><span class="sxs-lookup"><span data-stu-id="e308a-102">Adds metadata to the matching types.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddMetadata">
      <MemberSignature Language="C#" Value="public System.ComponentModel.Composition.Registration.PartBuilder AddMetadata (string name, Func&lt;Type,object&gt; itemFunc);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.ComponentModel.Composition.Registration.PartBuilder AddMetadata(string name, class System.Func`2&lt;class System.Type, object&gt; itemFunc) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Registration.PartBuilder.AddMetadata(System.String,System.Func{System.Type,System.Object})" />
      <MemberSignature Language="VB.NET" Value="Public Function AddMetadata (name As String, itemFunc As Func(Of Type, Object)) As PartBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ComponentModel::Composition::Registration::PartBuilder ^ AddMetadata(System::String ^ name, Func&lt;Type ^, System::Object ^&gt; ^ itemFunc);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition.Registration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Composition.Registration.PartBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="itemFunc" Type="System.Func&lt;System.Type,System.Object&gt;" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="e308a-103">Klucz metadanych.</span><span class="sxs-lookup"><span data-stu-id="e308a-103">The metadata key.</span></span></param>
        <param name="itemFunc"><span data-ttu-id="e308a-104">Funkcja, która zwraca wartość metadanych danego typu docelowego.</span><span class="sxs-lookup"><span data-stu-id="e308a-104">A function that returns the metadata value, given the target type.</span></span></param>
        <summary><span data-ttu-id="e308a-105">Dodaje metadane do pasujących typów.</span><span class="sxs-lookup"><span data-stu-id="e308a-105">Adds metadata to the matching types.</span></span></summary>
        <returns><span data-ttu-id="e308a-106">Bieżący obiekt, aby umożliwić tworzenie łańcucha.</span><span class="sxs-lookup"><span data-stu-id="e308a-106">The current object, to allow chaining.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddMetadata">
      <MemberSignature Language="C#" Value="public System.ComponentModel.Composition.Registration.PartBuilder AddMetadata (string name, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.ComponentModel.Composition.Registration.PartBuilder AddMetadata(string name, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Registration.PartBuilder.AddMetadata(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddMetadata (name As String, value As Object) As PartBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ComponentModel::Composition::Registration::PartBuilder ^ AddMetadata(System::String ^ name, System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition.Registration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Composition.Registration.PartBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="e308a-107">Klucz metadanych.</span><span class="sxs-lookup"><span data-stu-id="e308a-107">The metadata key.</span></span></param>
        <param name="value"><span data-ttu-id="e308a-108">Wartość metadanych.</span><span class="sxs-lookup"><span data-stu-id="e308a-108">The metadata value.</span></span></param>
        <summary><span data-ttu-id="e308a-109">Dodaje metadane do pasujących typów.</span><span class="sxs-lookup"><span data-stu-id="e308a-109">Adds metadata to the matching types.</span></span></summary>
        <returns><span data-ttu-id="e308a-110">Bieżący obiekt, aby umożliwić tworzenie łańcucha.</span><span class="sxs-lookup"><span data-stu-id="e308a-110">The current object, to allow chaining.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Export">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition.Registration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="e308a-111">Określa, czy powinny być eksportowane do pasujących typów.</span><span class="sxs-lookup"><span data-stu-id="e308a-111">Specifies that matching types should be exported.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Export">
      <MemberSignature Language="C#" Value="public System.ComponentModel.Composition.Registration.PartBuilder Export ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.ComponentModel.Composition.Registration.PartBuilder Export() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Registration.PartBuilder.Export" />
      <MemberSignature Language="VB.NET" Value="Public Function Export () As PartBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ComponentModel::Composition::Registration::PartBuilder ^ Export();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition.Registration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Composition.Registration.PartBuilder</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e308a-112">Określa, czy powinny być eksportowane do pasujących typów.</span><span class="sxs-lookup"><span data-stu-id="e308a-112">Specifies that matching types should be exported.</span></span></summary>
        <returns><span data-ttu-id="e308a-113">Bieżący obiekt, aby umożliwić tworzenie łańcucha.</span><span class="sxs-lookup"><span data-stu-id="e308a-113">The current object, to allow chaining.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Export">
      <MemberSignature Language="C#" Value="public System.ComponentModel.Composition.Registration.PartBuilder Export (Action&lt;System.ComponentModel.Composition.Registration.ExportBuilder&gt; exportConfiguration);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.ComponentModel.Composition.Registration.PartBuilder Export(class System.Action`1&lt;class System.ComponentModel.Composition.Registration.ExportBuilder&gt; exportConfiguration) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Registration.PartBuilder.Export(System.Action{System.ComponentModel.Composition.Registration.ExportBuilder})" />
      <MemberSignature Language="VB.NET" Value="Public Function Export (exportConfiguration As Action(Of ExportBuilder)) As PartBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ComponentModel::Composition::Registration::PartBuilder ^ Export(Action&lt;System::ComponentModel::Composition::Registration::ExportBuilder ^&gt; ^ exportConfiguration);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition.Registration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Composition.Registration.PartBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="exportConfiguration" Type="System.Action&lt;System.ComponentModel.Composition.Registration.ExportBuilder&gt;" />
      </Parameters>
      <Docs>
        <param name="exportConfiguration"><span data-ttu-id="e308a-114">Obiekt zawierający informacje o konfiguracji dotyczące eksportu.</span><span class="sxs-lookup"><span data-stu-id="e308a-114">An object that contains configuration information about the export.</span></span> <span data-ttu-id="e308a-115">Wartość domyślna to <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="e308a-115">The default value is <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="e308a-116">Określa, czy do pasujących typów powinny być eksportowane i informacje dotyczące wynikowego eksportuje konfiguracji.</span><span class="sxs-lookup"><span data-stu-id="e308a-116">Specifies that matching types should be exported, and provides configuration information for the resulting exports.</span></span></summary>
        <returns><span data-ttu-id="e308a-117">Bieżący obiekt, aby umożliwić tworzenie łańcucha.</span><span class="sxs-lookup"><span data-stu-id="e308a-117">The current object, to allow chaining.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Export&lt;T&gt;">
      <MemberSignature Language="C#" Value="public System.ComponentModel.Composition.Registration.PartBuilder Export&lt;T&gt; ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.ComponentModel.Composition.Registration.PartBuilder Export&lt;T&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Registration.PartBuilder.Export``1" />
      <MemberSignature Language="VB.NET" Value="Public Function Export(Of T) () As PartBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; System::ComponentModel::Composition::Registration::PartBuilder ^ Export();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition.Registration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Composition.Registration.PartBuilder</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="T"><span data-ttu-id="e308a-118">Typ kontraktu.</span><span class="sxs-lookup"><span data-stu-id="e308a-118">The type of contract.</span></span></typeparam>
        <summary><span data-ttu-id="e308a-119">Określa, czy do pasujących typów powinny być wyeksportowane za pomocą kontraktu określonego typu.</span><span class="sxs-lookup"><span data-stu-id="e308a-119">Specifies that matching types should be exported by using the specified contract type.</span></span></summary>
        <returns><span data-ttu-id="e308a-120">Bieżący obiekt, aby umożliwić tworzenie łańcucha.</span><span class="sxs-lookup"><span data-stu-id="e308a-120">The current object, to allow chaining.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Export&lt;T&gt;">
      <MemberSignature Language="C#" Value="public System.ComponentModel.Composition.Registration.PartBuilder Export&lt;T&gt; (Action&lt;System.ComponentModel.Composition.Registration.ExportBuilder&gt; exportConfiguration);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.ComponentModel.Composition.Registration.PartBuilder Export&lt;T&gt;(class System.Action`1&lt;class System.ComponentModel.Composition.Registration.ExportBuilder&gt; exportConfiguration) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Registration.PartBuilder.Export``1(System.Action{System.ComponentModel.Composition.Registration.ExportBuilder})" />
      <MemberSignature Language="VB.NET" Value="Public Function Export(Of T) (exportConfiguration As Action(Of ExportBuilder)) As PartBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; System::ComponentModel::Composition::Registration::PartBuilder ^ Export(Action&lt;System::ComponentModel::Composition::Registration::ExportBuilder ^&gt; ^ exportConfiguration);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition.Registration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Composition.Registration.PartBuilder</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="exportConfiguration" Type="System.Action&lt;System.ComponentModel.Composition.Registration.ExportBuilder&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="e308a-121">Typ kontraktu.</span><span class="sxs-lookup"><span data-stu-id="e308a-121">The type of contract.</span></span></typeparam>
        <param name="exportConfiguration"><span data-ttu-id="e308a-122">Obiekt zawierający informacje o konfiguracji dotyczące eksportu.</span><span class="sxs-lookup"><span data-stu-id="e308a-122">An object that contains configuration information about the export.</span></span> <span data-ttu-id="e308a-123">Wartość domyślna to <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="e308a-123">The default value is <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="e308a-124">Określa, czy do pasujących typów powinny być wyeksportowane za pomocą typu określonego umowy i informacje dotyczące wynikowego eksportuje konfiguracji.</span><span class="sxs-lookup"><span data-stu-id="e308a-124">Specifies that matching types should be exported by using the specified contract type, and provides configuration information for the resulting exports.</span></span></summary>
        <returns><span data-ttu-id="e308a-125">Bieżący obiekt, aby umożliwić tworzenie łańcucha.</span><span class="sxs-lookup"><span data-stu-id="e308a-125">The current object, to allow chaining.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ExportInterfaces">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition.Registration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="e308a-126">Określa zestaw interfejsów, które powinny być eksportowane do pasujących typów.</span><span class="sxs-lookup"><span data-stu-id="e308a-126">Specifies a set of interfaces that should be exported on the matching types.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ExportInterfaces">
      <MemberSignature Language="C#" Value="public System.ComponentModel.Composition.Registration.PartBuilder ExportInterfaces ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.ComponentModel.Composition.Registration.PartBuilder ExportInterfaces() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Registration.PartBuilder.ExportInterfaces" />
      <MemberSignature Language="VB.NET" Value="Public Function ExportInterfaces () As PartBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ComponentModel::Composition::Registration::PartBuilder ^ ExportInterfaces();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition.Registration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Composition.Registration.PartBuilder</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e308a-127">Określa, czy można wyeksportować wszystkie interfejsy zgodne typy.</span><span class="sxs-lookup"><span data-stu-id="e308a-127">Specifies that all the interfaces of the matching types should be exported.</span></span></summary>
        <returns><span data-ttu-id="e308a-128">Bieżący obiekt, aby umożliwić tworzenie łańcucha.</span><span class="sxs-lookup"><span data-stu-id="e308a-128">The current object, to allow chaining.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExportInterfaces">
      <MemberSignature Language="C#" Value="public System.ComponentModel.Composition.Registration.PartBuilder ExportInterfaces (Predicate&lt;Type&gt; interfaceFilter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.ComponentModel.Composition.Registration.PartBuilder ExportInterfaces(class System.Predicate`1&lt;class System.Type&gt; interfaceFilter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Registration.PartBuilder.ExportInterfaces(System.Predicate{System.Type})" />
      <MemberSignature Language="VB.NET" Value="Public Function ExportInterfaces (interfaceFilter As Predicate(Of Type)) As PartBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ComponentModel::Composition::Registration::PartBuilder ^ ExportInterfaces(Predicate&lt;Type ^&gt; ^ interfaceFilter);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition.Registration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Composition.Registration.PartBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="interfaceFilter" Type="System.Predicate&lt;System.Type&gt;" />
      </Parameters>
      <Docs>
        <param name="interfaceFilter"><span data-ttu-id="e308a-129">Predykat określający zestaw interfejsów.</span><span class="sxs-lookup"><span data-stu-id="e308a-129">A predicate that specifies a set of interfaces.</span></span></param>
        <summary><span data-ttu-id="e308a-130">Określa zestaw interfejsów na pasujące typy, które powinny być wyeksportowane.</span><span class="sxs-lookup"><span data-stu-id="e308a-130">Specifies a set of interfaces on the matching types that should be exported.</span></span></summary>
        <returns><span data-ttu-id="e308a-131">Bieżący obiekt, aby umożliwić tworzenie łańcucha.</span><span class="sxs-lookup"><span data-stu-id="e308a-131">The current object, to allow chaining.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e308a-132">Tej metody nie zostaną wyeksportowane <xref:System.IDisposable> lub <xref:System.ComponentModel.Composition.IPartImportsSatisfiedNotification> obiektów.</span><span class="sxs-lookup"><span data-stu-id="e308a-132">This method will not export <xref:System.IDisposable> or <xref:System.ComponentModel.Composition.IPartImportsSatisfiedNotification> objects.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e308a-133"><paramref name="interfaceFilter" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="e308a-133"><paramref name="interfaceFilter" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ExportInterfaces">
      <MemberSignature Language="C#" Value="public System.ComponentModel.Composition.Registration.PartBuilder ExportInterfaces (Predicate&lt;Type&gt; interfaceFilter, Action&lt;Type,System.ComponentModel.Composition.Registration.ExportBuilder&gt; exportConfiguration);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.ComponentModel.Composition.Registration.PartBuilder ExportInterfaces(class System.Predicate`1&lt;class System.Type&gt; interfaceFilter, class System.Action`2&lt;class System.Type, class System.ComponentModel.Composition.Registration.ExportBuilder&gt; exportConfiguration) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Registration.PartBuilder.ExportInterfaces(System.Predicate{System.Type},System.Action{System.Type,System.ComponentModel.Composition.Registration.ExportBuilder})" />
      <MemberSignature Language="VB.NET" Value="Public Function ExportInterfaces (interfaceFilter As Predicate(Of Type), exportConfiguration As Action(Of Type, ExportBuilder)) As PartBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ComponentModel::Composition::Registration::PartBuilder ^ ExportInterfaces(Predicate&lt;Type ^&gt; ^ interfaceFilter, Action&lt;Type ^, System::ComponentModel::Composition::Registration::ExportBuilder ^&gt; ^ exportConfiguration);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition.Registration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Composition.Registration.PartBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="interfaceFilter" Type="System.Predicate&lt;System.Type&gt;" />
        <Parameter Name="exportConfiguration" Type="System.Action&lt;System.Type,System.ComponentModel.Composition.Registration.ExportBuilder&gt;" />
      </Parameters>
      <Docs>
        <param name="interfaceFilter"><span data-ttu-id="e308a-134">Predykat określający zestaw interfejsów.</span><span class="sxs-lookup"><span data-stu-id="e308a-134">A predicate that specifies a set of interfaces.</span></span></param>
        <param name="exportConfiguration"><span data-ttu-id="e308a-135">Obiekt zawierający informacje o konfiguracji dotyczące eksportu.</span><span class="sxs-lookup"><span data-stu-id="e308a-135">An object that contains configuration information about the export.</span></span> <span data-ttu-id="e308a-136">Wartość domyślna to <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="e308a-136">The default value is <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="e308a-137">Określa zestaw interfejsów na pasujące typy, które powinny być eksportowane i informacje dotyczące wynikowego eksportuje konfiguracji.</span><span class="sxs-lookup"><span data-stu-id="e308a-137">Specifies a set of interfaces on the matching types that should be exported, and provides configuration information for the resulting exports.</span></span></summary>
        <returns><span data-ttu-id="e308a-138">Bieżący obiekt, aby umożliwić tworzenie łańcucha.</span><span class="sxs-lookup"><span data-stu-id="e308a-138">The current object, to allow chaining.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e308a-139">Tej metody nie zostaną wyeksportowane <xref:System.IDisposable> lub <xref:System.ComponentModel.Composition.IPartImportsSatisfiedNotification> obiektów.</span><span class="sxs-lookup"><span data-stu-id="e308a-139">This method will not export <xref:System.IDisposable> or <xref:System.ComponentModel.Composition.IPartImportsSatisfiedNotification> objects.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e308a-140"><paramref name="interfaceFilter" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="e308a-140"><paramref name="interfaceFilter" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="ExportProperties">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition.Registration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="e308a-141">Określa zbiór właściwości na pasujące typy, które powinny być wyeksportowane.</span><span class="sxs-lookup"><span data-stu-id="e308a-141">Specifies a set of properties on the matching types that should be exported.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ExportProperties">
      <MemberSignature Language="C#" Value="public System.ComponentModel.Composition.Registration.PartBuilder ExportProperties (Predicate&lt;System.Reflection.PropertyInfo&gt; propertyFilter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.ComponentModel.Composition.Registration.PartBuilder ExportProperties(class System.Predicate`1&lt;class System.Reflection.PropertyInfo&gt; propertyFilter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Registration.PartBuilder.ExportProperties(System.Predicate{System.Reflection.PropertyInfo})" />
      <MemberSignature Language="VB.NET" Value="Public Function ExportProperties (propertyFilter As Predicate(Of PropertyInfo)) As PartBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ComponentModel::Composition::Registration::PartBuilder ^ ExportProperties(Predicate&lt;System::Reflection::PropertyInfo ^&gt; ^ propertyFilter);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition.Registration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Composition.Registration.PartBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyFilter" Type="System.Predicate&lt;System.Reflection.PropertyInfo&gt;" />
      </Parameters>
      <Docs>
        <param name="propertyFilter"><span data-ttu-id="e308a-142">Predykat określający zestaw właściwości.</span><span class="sxs-lookup"><span data-stu-id="e308a-142">A predicate that specifies a set of properties.</span></span></param>
        <summary><span data-ttu-id="e308a-143">Określa zbiór właściwości, które powinny być eksportowane do pasujących typów.</span><span class="sxs-lookup"><span data-stu-id="e308a-143">Specifies a set of properties that should be exported on the matching types.</span></span></summary>
        <returns><span data-ttu-id="e308a-144">Bieżący obiekt, aby umożliwić tworzenie łańcucha.</span><span class="sxs-lookup"><span data-stu-id="e308a-144">The current object, to allow chaining.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e308a-145"><paramref name="propertyFilter" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="e308a-145"><paramref name="propertyFilter" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ExportProperties">
      <MemberSignature Language="C#" Value="public System.ComponentModel.Composition.Registration.PartBuilder ExportProperties (Predicate&lt;System.Reflection.PropertyInfo&gt; propertyFilter, Action&lt;System.Reflection.PropertyInfo,System.ComponentModel.Composition.Registration.ExportBuilder&gt; exportConfiguration);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.ComponentModel.Composition.Registration.PartBuilder ExportProperties(class System.Predicate`1&lt;class System.Reflection.PropertyInfo&gt; propertyFilter, class System.Action`2&lt;class System.Reflection.PropertyInfo, class System.ComponentModel.Composition.Registration.ExportBuilder&gt; exportConfiguration) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Registration.PartBuilder.ExportProperties(System.Predicate{System.Reflection.PropertyInfo},System.Action{System.Reflection.PropertyInfo,System.ComponentModel.Composition.Registration.ExportBuilder})" />
      <MemberSignature Language="VB.NET" Value="Public Function ExportProperties (propertyFilter As Predicate(Of PropertyInfo), exportConfiguration As Action(Of PropertyInfo, ExportBuilder)) As PartBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ComponentModel::Composition::Registration::PartBuilder ^ ExportProperties(Predicate&lt;System::Reflection::PropertyInfo ^&gt; ^ propertyFilter, Action&lt;System::Reflection::PropertyInfo ^, System::ComponentModel::Composition::Registration::ExportBuilder ^&gt; ^ exportConfiguration);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition.Registration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Composition.Registration.PartBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyFilter" Type="System.Predicate&lt;System.Reflection.PropertyInfo&gt;" />
        <Parameter Name="exportConfiguration" Type="System.Action&lt;System.Reflection.PropertyInfo,System.ComponentModel.Composition.Registration.ExportBuilder&gt;" />
      </Parameters>
      <Docs>
        <param name="propertyFilter"><span data-ttu-id="e308a-146">Predykat określający zestaw właściwości.</span><span class="sxs-lookup"><span data-stu-id="e308a-146">A predicate that specifies a set of properties.</span></span></param>
        <param name="exportConfiguration"><span data-ttu-id="e308a-147">Obiekt zawierający informacje o konfiguracji dotyczące eksportu.</span><span class="sxs-lookup"><span data-stu-id="e308a-147">An object that contains configuration information about the export.</span></span> <span data-ttu-id="e308a-148">Wartość domyślna to <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="e308a-148">The default value is <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="e308a-149">Określa zbiór właściwości na pasujące typy, które powinny być eksportowane i informacje dotyczące tych eksportowanie konfiguracji.</span><span class="sxs-lookup"><span data-stu-id="e308a-149">Specifies a set of properties on the matching types that should be exported, and provides configuration information for those exports.</span></span></summary>
        <returns><span data-ttu-id="e308a-150">Bieżący obiekt, aby umożliwić tworzenie łańcucha.</span><span class="sxs-lookup"><span data-stu-id="e308a-150">The current object, to allow chaining.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e308a-151"><paramref name="propertyFilter" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="e308a-151"><paramref name="propertyFilter" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ExportProperties&lt;T&gt;">
      <MemberSignature Language="C#" Value="public System.ComponentModel.Composition.Registration.PartBuilder ExportProperties&lt;T&gt; (Predicate&lt;System.Reflection.PropertyInfo&gt; propertyFilter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.ComponentModel.Composition.Registration.PartBuilder ExportProperties&lt;T&gt;(class System.Predicate`1&lt;class System.Reflection.PropertyInfo&gt; propertyFilter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Registration.PartBuilder.ExportProperties``1(System.Predicate{System.Reflection.PropertyInfo})" />
      <MemberSignature Language="VB.NET" Value="Public Function ExportProperties(Of T) (propertyFilter As Predicate(Of PropertyInfo)) As PartBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; System::ComponentModel::Composition::Registration::PartBuilder ^ ExportProperties(Predicate&lt;System::Reflection::PropertyInfo ^&gt; ^ propertyFilter);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition.Registration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Composition.Registration.PartBuilder</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="propertyFilter" Type="System.Predicate&lt;System.Reflection.PropertyInfo&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="e308a-152">Typ kontraktu.</span><span class="sxs-lookup"><span data-stu-id="e308a-152">The type of contract.</span></span></typeparam>
        <param name="propertyFilter"><span data-ttu-id="e308a-153">Predykat określający zestaw właściwości.</span><span class="sxs-lookup"><span data-stu-id="e308a-153">A predicate that specifies a set of properties.</span></span></param>
        <summary><span data-ttu-id="e308a-154">Określa zbiór właściwości na pasujące typy, które powinny być wyeksportowane za pomocą kontraktu określonego typu.</span><span class="sxs-lookup"><span data-stu-id="e308a-154">Specifies a set of properties on the matching types that should be exported, by using the specified contract type.</span></span></summary>
        <returns><span data-ttu-id="e308a-155">Bieżący obiekt, aby umożliwić tworzenie łańcucha.</span><span class="sxs-lookup"><span data-stu-id="e308a-155">The current object, to allow chaining.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e308a-156"><paramref name="propertyFilter" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="e308a-156"><paramref name="propertyFilter" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ExportProperties&lt;T&gt;">
      <MemberSignature Language="C#" Value="public System.ComponentModel.Composition.Registration.PartBuilder ExportProperties&lt;T&gt; (Predicate&lt;System.Reflection.PropertyInfo&gt; propertyFilter, Action&lt;System.Reflection.PropertyInfo,System.ComponentModel.Composition.Registration.ExportBuilder&gt; exportConfiguration);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.ComponentModel.Composition.Registration.PartBuilder ExportProperties&lt;T&gt;(class System.Predicate`1&lt;class System.Reflection.PropertyInfo&gt; propertyFilter, class System.Action`2&lt;class System.Reflection.PropertyInfo, class System.ComponentModel.Composition.Registration.ExportBuilder&gt; exportConfiguration) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Registration.PartBuilder.ExportProperties``1(System.Predicate{System.Reflection.PropertyInfo},System.Action{System.Reflection.PropertyInfo,System.ComponentModel.Composition.Registration.ExportBuilder})" />
      <MemberSignature Language="VB.NET" Value="Public Function ExportProperties(Of T) (propertyFilter As Predicate(Of PropertyInfo), exportConfiguration As Action(Of PropertyInfo, ExportBuilder)) As PartBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; System::ComponentModel::Composition::Registration::PartBuilder ^ ExportProperties(Predicate&lt;System::Reflection::PropertyInfo ^&gt; ^ propertyFilter, Action&lt;System::Reflection::PropertyInfo ^, System::ComponentModel::Composition::Registration::ExportBuilder ^&gt; ^ exportConfiguration);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition.Registration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Composition.Registration.PartBuilder</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="propertyFilter" Type="System.Predicate&lt;System.Reflection.PropertyInfo&gt;" />
        <Parameter Name="exportConfiguration" Type="System.Action&lt;System.Reflection.PropertyInfo,System.ComponentModel.Composition.Registration.ExportBuilder&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="e308a-157">Typ kontraktu.</span><span class="sxs-lookup"><span data-stu-id="e308a-157">The type of contract.</span></span></typeparam>
        <param name="propertyFilter"><span data-ttu-id="e308a-158">Predykat określający zestaw właściwości.</span><span class="sxs-lookup"><span data-stu-id="e308a-158">A predicate that specifies a set of properties.</span></span></param>
        <param name="exportConfiguration"><span data-ttu-id="e308a-159">Obiekt zawierający informacje o konfiguracji dotyczące eksportu.</span><span class="sxs-lookup"><span data-stu-id="e308a-159">An object that contains configuration information about the export.</span></span> <span data-ttu-id="e308a-160">Wartość domyślna to <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="e308a-160">The default value is <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="e308a-161">Określa zbiór właściwości na pasujące typy, które powinny być wyeksportowane za pomocą typu określonego umowy i informacje dotyczące wynikowego eksportuje konfiguracji.</span><span class="sxs-lookup"><span data-stu-id="e308a-161">Specifies a set of properties on the matching types that should be exported by using the specified contract type, and provides configuration information for the resulting exports.</span></span></summary>
        <returns><span data-ttu-id="e308a-162">Bieżący obiekt, aby umożliwić tworzenie łańcucha.</span><span class="sxs-lookup"><span data-stu-id="e308a-162">The current object, to allow chaining.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e308a-163"><paramref name="propertyFilter" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="e308a-163"><paramref name="propertyFilter" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="ImportProperties">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition.Registration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="e308a-164">Określa zbiór właściwości pasujących typów, które powinny być importowane.</span><span class="sxs-lookup"><span data-stu-id="e308a-164">Specifies a set of properties on the matching types that should be imported.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ImportProperties">
      <MemberSignature Language="C#" Value="public System.ComponentModel.Composition.Registration.PartBuilder ImportProperties (Predicate&lt;System.Reflection.PropertyInfo&gt; propertyFilter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.ComponentModel.Composition.Registration.PartBuilder ImportProperties(class System.Predicate`1&lt;class System.Reflection.PropertyInfo&gt; propertyFilter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Registration.PartBuilder.ImportProperties(System.Predicate{System.Reflection.PropertyInfo})" />
      <MemberSignature Language="VB.NET" Value="Public Function ImportProperties (propertyFilter As Predicate(Of PropertyInfo)) As PartBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ComponentModel::Composition::Registration::PartBuilder ^ ImportProperties(Predicate&lt;System::Reflection::PropertyInfo ^&gt; ^ propertyFilter);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition.Registration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Composition.Registration.PartBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyFilter" Type="System.Predicate&lt;System.Reflection.PropertyInfo&gt;" />
      </Parameters>
      <Docs>
        <param name="propertyFilter"><span data-ttu-id="e308a-165">Predykat określający zestaw właściwości.</span><span class="sxs-lookup"><span data-stu-id="e308a-165">A predicate that specifies a set of properties.</span></span></param>
        <summary><span data-ttu-id="e308a-166">Określa zbiór właściwości pasujących typów, które powinny być importowane.</span><span class="sxs-lookup"><span data-stu-id="e308a-166">Specifies a set of properties on the matching types that should be imported.</span></span></summary>
        <returns><span data-ttu-id="e308a-167">Bieżący obiekt, aby umożliwić tworzenie łańcucha.</span><span class="sxs-lookup"><span data-stu-id="e308a-167">The current object, to allow chaining.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e308a-168"><paramref name="propertyFilter" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="e308a-168"><paramref name="propertyFilter" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ImportProperties">
      <MemberSignature Language="C#" Value="public System.ComponentModel.Composition.Registration.PartBuilder ImportProperties (Predicate&lt;System.Reflection.PropertyInfo&gt; propertyFilter, Action&lt;System.Reflection.PropertyInfo,System.ComponentModel.Composition.Registration.ImportBuilder&gt; importConfiguration);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.ComponentModel.Composition.Registration.PartBuilder ImportProperties(class System.Predicate`1&lt;class System.Reflection.PropertyInfo&gt; propertyFilter, class System.Action`2&lt;class System.Reflection.PropertyInfo, class System.ComponentModel.Composition.Registration.ImportBuilder&gt; importConfiguration) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Registration.PartBuilder.ImportProperties(System.Predicate{System.Reflection.PropertyInfo},System.Action{System.Reflection.PropertyInfo,System.ComponentModel.Composition.Registration.ImportBuilder})" />
      <MemberSignature Language="VB.NET" Value="Public Function ImportProperties (propertyFilter As Predicate(Of PropertyInfo), importConfiguration As Action(Of PropertyInfo, ImportBuilder)) As PartBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ComponentModel::Composition::Registration::PartBuilder ^ ImportProperties(Predicate&lt;System::Reflection::PropertyInfo ^&gt; ^ propertyFilter, Action&lt;System::Reflection::PropertyInfo ^, System::ComponentModel::Composition::Registration::ImportBuilder ^&gt; ^ importConfiguration);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition.Registration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Composition.Registration.PartBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyFilter" Type="System.Predicate&lt;System.Reflection.PropertyInfo&gt;" />
        <Parameter Name="importConfiguration" Type="System.Action&lt;System.Reflection.PropertyInfo,System.ComponentModel.Composition.Registration.ImportBuilder&gt;" />
      </Parameters>
      <Docs>
        <param name="propertyFilter"><span data-ttu-id="e308a-169">Predykat określający zestaw właściwości.</span><span class="sxs-lookup"><span data-stu-id="e308a-169">A predicate that specifies a set of properties.</span></span></param>
        <param name="importConfiguration"><span data-ttu-id="e308a-170">Obiekt, który zawiera informacje dotyczące importowania konfiguracji.</span><span class="sxs-lookup"><span data-stu-id="e308a-170">An object that contains configuration information about the import.</span></span> <span data-ttu-id="e308a-171">Wartość domyślna to <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="e308a-171">The default value is <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="e308a-172">Określa zbiór właściwości pasujących typów, które powinien być oznaczony jako importów i informacje dotyczące wynikowego importów konfiguracji.</span><span class="sxs-lookup"><span data-stu-id="e308a-172">Specifies a set of properties on the matching types that should be marked as imports, and provides configuration information for the resulting imports.</span></span></summary>
        <returns><span data-ttu-id="e308a-173">Bieżący obiekt, aby umożliwić tworzenie łańcucha.</span><span class="sxs-lookup"><span data-stu-id="e308a-173">The current object, to allow chaining.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e308a-174"><paramref name="propertyFilter" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="e308a-174"><paramref name="propertyFilter" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ImportProperties&lt;T&gt;">
      <MemberSignature Language="C#" Value="public System.ComponentModel.Composition.Registration.PartBuilder ImportProperties&lt;T&gt; (Predicate&lt;System.Reflection.PropertyInfo&gt; propertyFilter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.ComponentModel.Composition.Registration.PartBuilder ImportProperties&lt;T&gt;(class System.Predicate`1&lt;class System.Reflection.PropertyInfo&gt; propertyFilter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Registration.PartBuilder.ImportProperties``1(System.Predicate{System.Reflection.PropertyInfo})" />
      <MemberSignature Language="VB.NET" Value="Public Function ImportProperties(Of T) (propertyFilter As Predicate(Of PropertyInfo)) As PartBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; System::ComponentModel::Composition::Registration::PartBuilder ^ ImportProperties(Predicate&lt;System::Reflection::PropertyInfo ^&gt; ^ propertyFilter);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition.Registration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Composition.Registration.PartBuilder</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="propertyFilter" Type="System.Predicate&lt;System.Reflection.PropertyInfo&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="e308a-175">Typ kontraktu.</span><span class="sxs-lookup"><span data-stu-id="e308a-175">The type of contract.</span></span></typeparam>
        <param name="propertyFilter"><span data-ttu-id="e308a-176">Predykat określający zestaw właściwości.</span><span class="sxs-lookup"><span data-stu-id="e308a-176">A predicate that specifies a set of properties.</span></span></param>
        <summary><span data-ttu-id="e308a-177">Określa zbiór właściwości na pasujące typy, które powinno być oznaczone jako importuje przy użyciu typu określonego kontraktu.</span><span class="sxs-lookup"><span data-stu-id="e308a-177">Specifies a set of properties on the matching types that should be marked as imports using the specified contract type.</span></span></summary>
        <returns><span data-ttu-id="e308a-178">Bieżący obiekt, aby umożliwić tworzenie łańcucha.</span><span class="sxs-lookup"><span data-stu-id="e308a-178">The current object, to allow chaining.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e308a-179"><paramref name="propertyFilter" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="e308a-179"><paramref name="propertyFilter" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ImportProperties&lt;T&gt;">
      <MemberSignature Language="C#" Value="public System.ComponentModel.Composition.Registration.PartBuilder ImportProperties&lt;T&gt; (Predicate&lt;System.Reflection.PropertyInfo&gt; propertyFilter, Action&lt;System.Reflection.PropertyInfo,System.ComponentModel.Composition.Registration.ImportBuilder&gt; importConfiguration);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.ComponentModel.Composition.Registration.PartBuilder ImportProperties&lt;T&gt;(class System.Predicate`1&lt;class System.Reflection.PropertyInfo&gt; propertyFilter, class System.Action`2&lt;class System.Reflection.PropertyInfo, class System.ComponentModel.Composition.Registration.ImportBuilder&gt; importConfiguration) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Registration.PartBuilder.ImportProperties``1(System.Predicate{System.Reflection.PropertyInfo},System.Action{System.Reflection.PropertyInfo,System.ComponentModel.Composition.Registration.ImportBuilder})" />
      <MemberSignature Language="VB.NET" Value="Public Function ImportProperties(Of T) (propertyFilter As Predicate(Of PropertyInfo), importConfiguration As Action(Of PropertyInfo, ImportBuilder)) As PartBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; System::ComponentModel::Composition::Registration::PartBuilder ^ ImportProperties(Predicate&lt;System::Reflection::PropertyInfo ^&gt; ^ propertyFilter, Action&lt;System::Reflection::PropertyInfo ^, System::ComponentModel::Composition::Registration::ImportBuilder ^&gt; ^ importConfiguration);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition.Registration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Composition.Registration.PartBuilder</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="propertyFilter" Type="System.Predicate&lt;System.Reflection.PropertyInfo&gt;" />
        <Parameter Name="importConfiguration" Type="System.Action&lt;System.Reflection.PropertyInfo,System.ComponentModel.Composition.Registration.ImportBuilder&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="e308a-180">Typ kontraktu.</span><span class="sxs-lookup"><span data-stu-id="e308a-180">The type of contract.</span></span></typeparam>
        <param name="propertyFilter"><span data-ttu-id="e308a-181">Predykat określający zestaw właściwości.</span><span class="sxs-lookup"><span data-stu-id="e308a-181">A predicate that specifies a set of properties.</span></span></param>
        <param name="importConfiguration"><span data-ttu-id="e308a-182">Obiekt, który zawiera informacje dotyczące importowania konfiguracji.</span><span class="sxs-lookup"><span data-stu-id="e308a-182">An object that contains configuration information about the import.</span></span> <span data-ttu-id="e308a-183">Wartość domyślna to <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="e308a-183">The default value is <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="e308a-184">Określa zbiór właściwości pasujących typów, które powinno być oznaczone jako importuje przy użyciu typu określonego umowy i informacje dotyczące wynikowego importów konfiguracji.</span><span class="sxs-lookup"><span data-stu-id="e308a-184">Specifies a set of properties on the matching types that should be marked as imports by using the specified contract type, and provides configuration information for the resulting imports.</span></span></summary>
        <returns><span data-ttu-id="e308a-185">Bieżący obiekt, aby umożliwić tworzenie łańcucha.</span><span class="sxs-lookup"><span data-stu-id="e308a-185">The current object, to allow chaining.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e308a-186"><paramref name="propertyFilter" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="e308a-186"><paramref name="propertyFilter" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="SelectConstructor">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition.Registration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="e308a-187">Określa konstruktora, która do pasujących typów powinna być używana jako konstruktora importującego.</span><span class="sxs-lookup"><span data-stu-id="e308a-187">Specifies the constructor that matching types should use as an importing constructor.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SelectConstructor">
      <MemberSignature Language="C#" Value="public System.ComponentModel.Composition.Registration.PartBuilder SelectConstructor (Func&lt;System.Reflection.ConstructorInfo[],System.Reflection.ConstructorInfo&gt; constructorFilter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.ComponentModel.Composition.Registration.PartBuilder SelectConstructor(class System.Func`2&lt;class System.Reflection.ConstructorInfo[], class System.Reflection.ConstructorInfo&gt; constructorFilter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Registration.PartBuilder.SelectConstructor(System.Func{System.Reflection.ConstructorInfo[],System.Reflection.ConstructorInfo})" />
      <MemberSignature Language="VB.NET" Value="Public Function SelectConstructor (constructorFilter As Func(Of ConstructorInfo(), ConstructorInfo)) As PartBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ComponentModel::Composition::Registration::PartBuilder ^ SelectConstructor(Func&lt;cli::array &lt;System::Reflection::ConstructorInfo ^&gt; ^, System::Reflection::ConstructorInfo ^&gt; ^ constructorFilter);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition.Registration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Composition.Registration.PartBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="constructorFilter" Type="System.Func&lt;System.Reflection.ConstructorInfo[],System.Reflection.ConstructorInfo&gt;" />
      </Parameters>
      <Docs>
        <param name="constructorFilter"><span data-ttu-id="e308a-188">Funkcja, która wybiera jeden konstruktor z zestawem konstruktorów.</span><span class="sxs-lookup"><span data-stu-id="e308a-188">A function that chooses one constructor from a set of constructors.</span></span></param>
        <summary><span data-ttu-id="e308a-189">Określa konstruktora, która do pasujących typów powinna być używana jako konstruktora importującego.</span><span class="sxs-lookup"><span data-stu-id="e308a-189">Specifies the constructor that matching types should use as an importing constructor.</span></span></summary>
        <returns><span data-ttu-id="e308a-190">Bieżący obiekt, aby umożliwić tworzenie łańcucha.</span><span class="sxs-lookup"><span data-stu-id="e308a-190">The current object, to allow chaining.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e308a-191"><paramref name="constructorFilter" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="e308a-191"><paramref name="constructorFilter" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="e308a-192"><paramref name="constructorFilter" /> Zwraca <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="e308a-192"><paramref name="constructorFilter" /> returns <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="e308a-193"><paramref name="constructorFilter" /> Zwraca konstruktora, który nie jest skojarzony z typem docelowym.</span><span class="sxs-lookup"><span data-stu-id="e308a-193"><paramref name="constructorFilter" /> returns a constructor that is not associated with the target type.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SelectConstructor">
      <MemberSignature Language="C#" Value="public System.ComponentModel.Composition.Registration.PartBuilder SelectConstructor (Func&lt;System.Reflection.ConstructorInfo[],System.Reflection.ConstructorInfo&gt; constructorFilter, Action&lt;System.Reflection.ParameterInfo,System.ComponentModel.Composition.Registration.ImportBuilder&gt; importConfiguration);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.ComponentModel.Composition.Registration.PartBuilder SelectConstructor(class System.Func`2&lt;class System.Reflection.ConstructorInfo[], class System.Reflection.ConstructorInfo&gt; constructorFilter, class System.Action`2&lt;class System.Reflection.ParameterInfo, class System.ComponentModel.Composition.Registration.ImportBuilder&gt; importConfiguration) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Registration.PartBuilder.SelectConstructor(System.Func{System.Reflection.ConstructorInfo[],System.Reflection.ConstructorInfo},System.Action{System.Reflection.ParameterInfo,System.ComponentModel.Composition.Registration.ImportBuilder})" />
      <MemberSignature Language="VB.NET" Value="Public Function SelectConstructor (constructorFilter As Func(Of ConstructorInfo(), ConstructorInfo), importConfiguration As Action(Of ParameterInfo, ImportBuilder)) As PartBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ComponentModel::Composition::Registration::PartBuilder ^ SelectConstructor(Func&lt;cli::array &lt;System::Reflection::ConstructorInfo ^&gt; ^, System::Reflection::ConstructorInfo ^&gt; ^ constructorFilter, Action&lt;System::Reflection::ParameterInfo ^, System::ComponentModel::Composition::Registration::ImportBuilder ^&gt; ^ importConfiguration);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition.Registration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Composition.Registration.PartBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="constructorFilter" Type="System.Func&lt;System.Reflection.ConstructorInfo[],System.Reflection.ConstructorInfo&gt;" />
        <Parameter Name="importConfiguration" Type="System.Action&lt;System.Reflection.ParameterInfo,System.ComponentModel.Composition.Registration.ImportBuilder&gt;" />
      </Parameters>
      <Docs>
        <param name="constructorFilter"><span data-ttu-id="e308a-194">Funkcja, która wybiera jeden konstruktor z zestawem konstruktorów.</span><span class="sxs-lookup"><span data-stu-id="e308a-194">A function that chooses one constructor from a set of constructors.</span></span></param>
        <param name="importConfiguration"><span data-ttu-id="e308a-195">Obiekt zawierający informacje o konfiguracji dla konstruktora importującego.</span><span class="sxs-lookup"><span data-stu-id="e308a-195">An object that contains configuration information for the importing constructor.</span></span> <span data-ttu-id="e308a-196">Wartość domyślna to <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="e308a-196">The default is <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="e308a-197">Określa konstruktora, która do pasujących typów powinna być używana jako Konstruktor importujący i informacje dotyczące wynikowego importowania konfiguracji.</span><span class="sxs-lookup"><span data-stu-id="e308a-197">Specifies the constructor that matching types should use as an importing constructor, and provides configuration information for the resulting import.</span></span></summary>
        <returns><span data-ttu-id="e308a-198">Bieżący obiekt, aby umożliwić tworzenie łańcucha.</span><span class="sxs-lookup"><span data-stu-id="e308a-198">The current object, to allow chaining.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e308a-199"><paramref name="constructorFilter" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="e308a-199"><paramref name="constructorFilter" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="e308a-200"><paramref name="constructorFilter" /> Zwraca <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="e308a-200"><paramref name="constructorFilter" /> returns <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="e308a-201"><paramref name="constructorFilter" /> Zwraca konstruktora, który nie jest skojarzony z typem docelowym.</span><span class="sxs-lookup"><span data-stu-id="e308a-201"><paramref name="constructorFilter" /> returns a constructor that is not associated with the target type.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SetCreationPolicy">
      <MemberSignature Language="C#" Value="public System.ComponentModel.Composition.Registration.PartBuilder SetCreationPolicy (System.ComponentModel.Composition.CreationPolicy creationPolicy);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.ComponentModel.Composition.Registration.PartBuilder SetCreationPolicy(valuetype System.ComponentModel.Composition.CreationPolicy creationPolicy) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Registration.PartBuilder.SetCreationPolicy(System.ComponentModel.Composition.CreationPolicy)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ComponentModel::Composition::Registration::PartBuilder ^ SetCreationPolicy(System::ComponentModel::Composition::CreationPolicy creationPolicy);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition.Registration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Composition.Registration.PartBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="creationPolicy" Type="System.ComponentModel.Composition.CreationPolicy" />
      </Parameters>
      <Docs>
        <param name="creationPolicy"><span data-ttu-id="e308a-202">Zasady tworzenia.</span><span class="sxs-lookup"><span data-stu-id="e308a-202">The creation policy.</span></span></param>
        <summary><span data-ttu-id="e308a-203">Określa zasady tworzenia pasujących typów.</span><span class="sxs-lookup"><span data-stu-id="e308a-203">Specifies the creation policy for matching types.</span></span></summary>
        <returns><span data-ttu-id="e308a-204">Bieżący obiekt, aby umożliwić tworzenie łańcucha.</span><span class="sxs-lookup"><span data-stu-id="e308a-204">The current object, to allow chaining.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>