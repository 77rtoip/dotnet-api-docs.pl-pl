<Type Name="ContextAttribute" FullName="System.Runtime.Remoting.Contexts.ContextAttribute">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="6ac6821d52b1c70b48899f5f69d762ddf4415dce" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30567148" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ContextAttribute : Attribute, System.Runtime.Remoting.Contexts.IContextAttribute, System.Runtime.Remoting.Contexts.IContextProperty" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit ContextAttribute extends System.Attribute implements class System.Runtime.Remoting.Contexts.IContextAttribute, class System.Runtime.Remoting.Contexts.IContextProperty" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.Remoting.Contexts.ContextAttribute" />
  <TypeSignature Language="VB.NET" Value="Public Class ContextAttribute&#xA;Inherits Attribute&#xA;Implements IContextAttribute, IContextProperty" />
  <TypeSignature Language="C++ CLI" Value="public ref class ContextAttribute : Attribute, System::Runtime::Remoting::Contexts::IContextAttribute, System::Runtime::Remoting::Contexts::IContextProperty" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Runtime.Remoting.Contexts.IContextAttribute</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Runtime.Remoting.Contexts.IContextProperty</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Class)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Zawiera domyślne implementacje <see cref="T:System.Runtime.Remoting.Contexts.IContextAttribute" /> i <see cref="T:System.Runtime.Remoting.Contexts.IContextProperty" /> interfejsów.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Runtime.Remoting.Contexts.ContextAttribute> Klasa jest głównym dla wszystkich atrybutów kontekstu. Proste <xref:System.Runtime.Remoting.Contexts.Context> właściwości klasy mogą pochodzić z <xref:System.Runtime.Remoting.Contexts.ContextAttribute> z atrybutu kontekstu i właściwości kontekstu w klasie. Na potrzeby bardziej wyspecjalizowanych lub bardziej zaawansowanych, atrybutu kontekstu może pochodzić od <xref:System.Runtime.Remoting.Contexts.ContextAttribute> i właściwości kontekstu może zostać podzielony na rozdzielonych klasy. Aby uzyskać więcej informacji o korzystaniu z atrybutów, zobacz [atrybutów](~/docs/standard/attributes/index.md).  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <para>
        <see cref="P:System.Runtime.Remoting.Contexts.ContextAttribute.Name" /> Właściwości nie musi zostać zastąpiona w dowolnej klasy pochodnej użytkownika. Bieżący <see cref="M:System.Runtime.Remoting.Contexts.ContextAttribute.Equals(System.Object)" /> i <see cref="M:System.Runtime.Remoting.Contexts.ContextAttribute.GetHashCode" /> metody zależą od funkcje domyślne. Do zapewnienia zachowania zaawansowane rozszerzenie klasy <see cref="T:System.Runtime.Remoting.Contexts.ContextAttribute" /> klasy i zastąpić <see cref="P:System.Runtime.Remoting.Contexts.ContextAttribute.Name" /> właściwość, należy zastąpić domyślną implementację elementu <see cref="M:System.Runtime.Remoting.Contexts.ContextAttribute.Equals(System.Object)" /> i <see cref="M:System.Runtime.Remoting.Contexts.ContextAttribute.GetHashCode" /> metody.</para>
    </block>
    <forInternalUseOnly />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ContextAttribute (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Contexts.ContextAttribute.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ContextAttribute(System::String ^ name);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">Nazwa atrybutu kontekstu.</param>
        <summary>Tworzy wystąpienie <see cref="T:System.Runtime.Remoting.Contexts.ContextAttribute" /> klasy o określonej nazwie.</summary>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="AttributeName">
      <MemberSignature Language="C#" Value="protected string AttributeName;" />
      <MemberSignature Language="ILAsm" Value=".field family string AttributeName" />
      <MemberSignature Language="DocId" Value="F:System.Runtime.Remoting.Contexts.ContextAttribute.AttributeName" />
      <MemberSignature Language="VB.NET" Value="Protected AttributeName As String " />
      <MemberSignature Language="C++ CLI" Value="protected: System::String ^ AttributeName;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Wskazuje nazwę atrybutu kontekstu.</summary>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object o);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object o) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Contexts.ContextAttribute.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (o As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ o);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="o">Obiekt, który ma zostać porównany z tym wystąpieniem.</param>
        <summary>Zwraca wartość logiczną wskazującą, czy to wystąpienie jest taki sam jak określony obiekt.</summary>
        <returns>
          <see langword="true" /> Jeśli <paramref name="o" /> nie jest <see langword="null" /> i nazwy obiektów są równoważne; w przeciwnym razie <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="Freeze">
      <MemberSignature Language="C#" Value="public virtual void Freeze (System.Runtime.Remoting.Contexts.Context newContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Freeze(class System.Runtime.Remoting.Contexts.Context newContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Contexts.ContextAttribute.Freeze(System.Runtime.Remoting.Contexts.Context)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Freeze (newContext As Context)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Freeze(System::Runtime::Remoting::Contexts::Context ^ newContext);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Remoting.Contexts.IContextProperty.Freeze(System.Runtime.Remoting.Contexts.Context)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newContext" Type="System.Runtime.Remoting.Contexts.Context" />
      </Parameters>
      <Docs>
        <param name="newContext">Kontekst, aby zablokować.</param>
        <summary>Wywoływane, gdy kontekst jest zablokowana.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Nie można dodać właściwości kontekstu, po kontekst został zablokowany.  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Contexts.ContextAttribute.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zwraca wartości skrótu dla tego wystąpienia <see cref="T:System.Runtime.Remoting.Contexts.ContextAttribute" />.</summary>
        <returns>Wartości skrótu dla tego wystąpienia <see cref="T:System.Runtime.Remoting.Contexts.ContextAttribute" />.</returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="GetPropertiesForNewContext">
      <MemberSignature Language="C#" Value="public virtual void GetPropertiesForNewContext (System.Runtime.Remoting.Activation.IConstructionCallMessage ctorMsg);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetPropertiesForNewContext(class System.Runtime.Remoting.Activation.IConstructionCallMessage ctorMsg) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Contexts.ContextAttribute.GetPropertiesForNewContext(System.Runtime.Remoting.Activation.IConstructionCallMessage)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub GetPropertiesForNewContext (ctorMsg As IConstructionCallMessage)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void GetPropertiesForNewContext(System::Runtime::Remoting::Activation::IConstructionCallMessage ^ ctorMsg);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Remoting.Contexts.IContextAttribute.GetPropertiesForNewContext(System.Runtime.Remoting.Activation.IConstructionCallMessage)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ctorMsg" Type="System.Runtime.Remoting.Activation.IConstructionCallMessage" />
      </Parameters>
      <Docs>
        <param name="ctorMsg">
          <see cref="T:System.Runtime.Remoting.Activation.IConstructionCallMessage" /> Do której chcesz dodać właściwości kontekstu.</param>
        <summary>Dodaje właściwość bieżącego kontekstu do tego komunikatu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Runtime.Remoting.Contexts.ContextAttribute> Klasa jest implementacją <xref:System.Runtime.Remoting.Contexts.IContextProperty> właściwości. <xref:System.Runtime.Remoting.Contexts.ContextAttribute.GetPropertiesForNewContext%2A> Metoda dodaje właściwość do danego <xref:System.Runtime.Remoting.Activation.IConstructionCallMessage> klasy tak, aby po otrzymaniu komunikatu można utworzyć nowy obiekt w środowisku wymagane kontekstu.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="ctorMsg" /> Parametr jest <see langword="null" />.</exception>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="IsContextOK">
      <MemberSignature Language="C#" Value="public virtual bool IsContextOK (System.Runtime.Remoting.Contexts.Context ctx, System.Runtime.Remoting.Activation.IConstructionCallMessage ctorMsg);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsContextOK(class System.Runtime.Remoting.Contexts.Context ctx, class System.Runtime.Remoting.Activation.IConstructionCallMessage ctorMsg) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Contexts.ContextAttribute.IsContextOK(System.Runtime.Remoting.Contexts.Context,System.Runtime.Remoting.Activation.IConstructionCallMessage)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IsContextOK (ctx As Context, ctorMsg As IConstructionCallMessage) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsContextOK(System::Runtime::Remoting::Contexts::Context ^ ctx, System::Runtime::Remoting::Activation::IConstructionCallMessage ^ ctorMsg);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Remoting.Contexts.IContextAttribute.IsContextOK(System.Runtime.Remoting.Contexts.Context,System.Runtime.Remoting.Activation.IConstructionCallMessage)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ctx" Type="System.Runtime.Remoting.Contexts.Context" />
        <Parameter Name="ctorMsg" Type="System.Runtime.Remoting.Activation.IConstructionCallMessage" />
      </Parameters>
      <Docs>
        <param name="ctx">Kontekst, w którym do sprawdzenia.</param>
        <param name="ctorMsg">
          <see cref="T:System.Runtime.Remoting.Activation.IConstructionCallMessage" /> Do której chcesz dodać właściwości kontekstu.</param>
        <summary>Zwraca wartość logiczną wskazującą, czy parametru kontekstowego spełnia wymagania dotyczące atrybutów kontekstu.</summary>
        <returns>
          <see langword="true" /> Jeśli szkodzi przekazany w kontekście; w przeciwnym razie <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Albo <paramref name="ctx" /> lub <paramref name="ctorMsg" /> jest <see langword="null" />.</exception>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="IsNewContextOK">
      <MemberSignature Language="C#" Value="public virtual bool IsNewContextOK (System.Runtime.Remoting.Contexts.Context newCtx);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsNewContextOK(class System.Runtime.Remoting.Contexts.Context newCtx) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Contexts.ContextAttribute.IsNewContextOK(System.Runtime.Remoting.Contexts.Context)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IsNewContextOK (newCtx As Context) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsNewContextOK(System::Runtime::Remoting::Contexts::Context ^ newCtx);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Remoting.Contexts.IContextProperty.IsNewContextOK(System.Runtime.Remoting.Contexts.Context)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newCtx" Type="System.Runtime.Remoting.Contexts.Context" />
      </Parameters>
      <Docs>
        <param name="newCtx">Nowy kontekst, w którym utworzono właściwość.</param>
        <summary>Zwraca wartość logiczną wskazującą, czy właściwości kontekstu jest zgodny z nowym kontekście.</summary>
        <returns>
          <see langword="true" /> Jeśli zgadzasz się na nowy kontekst; właściwości kontekstu w przeciwnym razie <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Po wszystkich właściwości kontekstu zostały dodane do nowego kontekstu, ich są wszystkie pytani o to, czy są one zgadzasz w nowym kontekście. Właściwości kontekstu można przyjrzeć się do właściwości kontekstu w <xref:System.Runtime.Remoting.Contexts.Context.ContextProperties%2A> właściwości nowy kontekst i ustalić, czy jest zgodne z tymi właściwościami kontekstu.  
  
> [!NOTE]
>  Domyślnie <xref:System.Runtime.Remoting.Contexts.ContextAttribute.IsNewContextOK%2A> metoda zwraca `true`.  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public virtual string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Remoting.Contexts.ContextAttribute.Name" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Name { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Runtime.Remoting.Contexts.IContextProperty.Name</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera nazwę atrybutu kontekstu.</summary>
        <value>Nazwa atrybutu kontekstu.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Udostępnia domyślną implementację tej właściwości <xref:System.Runtime.Remoting.Contexts.ContextAttribute.AttributeName> jako nazwy właściwości.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Właściwości current nie musi zostać zastąpiona w dowolnej klasy pochodnej użytkownika. Bieżący <see cref="M:System.Runtime.Remoting.Contexts.ContextAttribute.Equals(System.Object)" /> i <see cref="M:System.Runtime.Remoting.Contexts.ContextAttribute.GetHashCode" /> implementacje metod są zależne od funkcje domyślne. Jeśli chcesz przewidzieć zachowania zaawansowane rozszerzenie klasy <see cref="T:System.Runtime.Remoting.Contexts.ContextAttribute" /> i zastąpić <see cref="P:System.Runtime.Remoting.Contexts.ContextAttribute.Name" /> właściwości, musisz również zastąpić domyślną implementację elementu <see cref="M:System.Runtime.Remoting.Contexts.ContextAttribute.Equals(System.Object)" /> i <see cref="M:System.Runtime.Remoting.Contexts.ContextAttribute.GetHashCode" /> metody.</para>
        </block>
        <forInternalUseOnly />
      </Docs>
    </Member>
  </Members>
</Type>