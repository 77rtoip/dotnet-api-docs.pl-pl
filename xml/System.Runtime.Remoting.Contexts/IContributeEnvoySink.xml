<Type Name="IContributeEnvoySink" FullName="System.Runtime.Remoting.Contexts.IContributeEnvoySink">
  <Metadata><Meta Name="ms.openlocfilehash" Value="d50b4a43c9a9c5f3a65a7642fc349a36f3181750" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69061726" /></Metadata><TypeSignature Language="C#" Value="public interface IContributeEnvoySink" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IContributeEnvoySink" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.Remoting.Contexts.IContributeEnvoySink" />
  <TypeSignature Language="VB.NET" Value="Public Interface IContributeEnvoySink" />
  <TypeSignature Language="C++ CLI" Value="public interface class IContributeEnvoySink" />
  <TypeSignature Language="F#" Value="type IContributeEnvoySink = interface" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="93012-101">Tworzy ujścia komunikatów wysłannika na końcu klienta.</span><span class="sxs-lookup"><span data-stu-id="93012-101">Contributes an envoy message sink on the client end.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93012-102">Interfejs jest implementowany przez właściwości kontekstu w klasie serwera <xref:System.Runtime.Remoting.Contexts.Context> , która chce współtworzyć ujścia komunikatów wysłannika na końcu klienta. <xref:System.Runtime.Remoting.Contexts.IContributeEnvoySink></span><span class="sxs-lookup"><span data-stu-id="93012-102">The <xref:System.Runtime.Remoting.Contexts.IContributeEnvoySink> interface is implemented by context properties in the server <xref:System.Runtime.Remoting.Contexts.Context> class that want to contribute an envoy message sink on the client end.</span></span> <span data-ttu-id="93012-103">Łańcuch wysłannika serwera składa się z tych właściwości kontekstu, które <xref:System.Runtime.Remoting.Contexts.IContributeEnvoySink>implementują.</span><span class="sxs-lookup"><span data-stu-id="93012-103">The server envoy chain is composed from those context properties that implement <xref:System.Runtime.Remoting.Contexts.IContributeEnvoySink>.</span></span> <span data-ttu-id="93012-104">Łańcuch wysłannika znajduje się na końcu klienta i pełni rolę przedstawiciela odpowiednich ujścia komunikatów z właściwości kontekstu serwera.</span><span class="sxs-lookup"><span data-stu-id="93012-104">The envoy chain resides on the client end and acts as a representative of the corresponding message sinks from the server context properties.</span></span>  
  
 ]]></format>
    </remarks>
    <forInternalUseOnly />
    <altmember cref="T:System.Runtime.Remoting.Contexts.Context" />
  </Docs>
  <Members>
    <Member MemberName="GetEnvoySink">
      <MemberSignature Language="C#" Value="public System.Runtime.Remoting.Messaging.IMessageSink GetEnvoySink (MarshalByRefObject obj, System.Runtime.Remoting.Messaging.IMessageSink nextSink);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Runtime.Remoting.Messaging.IMessageSink GetEnvoySink(class System.MarshalByRefObject obj, class System.Runtime.Remoting.Messaging.IMessageSink nextSink) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Contexts.IContributeEnvoySink.GetEnvoySink(System.MarshalByRefObject,System.Runtime.Remoting.Messaging.IMessageSink)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnvoySink (obj As MarshalByRefObject, nextSink As IMessageSink) As IMessageSink" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Runtime::Remoting::Messaging::IMessageSink ^ GetEnvoySink(MarshalByRefObject ^ obj, System::Runtime::Remoting::Messaging::IMessageSink ^ nextSink);" />
      <MemberSignature Language="F#" Value="abstract member GetEnvoySink : MarshalByRefObject * System.Runtime.Remoting.Messaging.IMessageSink -&gt; System.Runtime.Remoting.Messaging.IMessageSink" Usage="iContributeEnvoySink.GetEnvoySink (obj, nextSink)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.Messaging.IMessageSink</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.MarshalByRefObject" />
        <Parameter Name="nextSink" Type="System.Runtime.Remoting.Messaging.IMessageSink" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="93012-105">Obiekt serwera, dla którego tworzony jest łańcuch.</span><span class="sxs-lookup"><span data-stu-id="93012-105">The server object for which the chain is being created.</span></span></param>
        <param name="nextSink"><span data-ttu-id="93012-106">Łańcuch obiektów sink złożonych do tej pory.</span><span class="sxs-lookup"><span data-stu-id="93012-106">The chain of sinks composed so far.</span></span></param>
        <summary><span data-ttu-id="93012-107">Przyjmuje pierwszy ujścia w łańcuchu zlewów, a następnie łańcuchuje swój ujścia komunikatów przed już utworzonym łańcuchem.</span><span class="sxs-lookup"><span data-stu-id="93012-107">Takes the first sink in the chain of sinks composed so far, and then chains its message sink in front of the chain already formed.</span></span></summary>
        <returns><span data-ttu-id="93012-108">Złożony łańcuch obiektów sink.</span><span class="sxs-lookup"><span data-stu-id="93012-108">The composite sink chain.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93012-109"><xref:System.Runtime.Remoting.Contexts.IContributeEnvoySink.GetEnvoySink%2A> Metoda jest używana jako Optymalizacja do tworzenia ujścia wysłannika, gdy lokalizacja docelowa jest innym kontekstem w tej samej domenie aplikacji i jest używana przez operację zawijania.</span><span class="sxs-lookup"><span data-stu-id="93012-109">The <xref:System.Runtime.Remoting.Contexts.IContributeEnvoySink.GetEnvoySink%2A> method is used as an optimization to create an envoy sink when the destination is a different context in the same application domain and is used by the Wrap operation.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
  </Members>
</Type>
