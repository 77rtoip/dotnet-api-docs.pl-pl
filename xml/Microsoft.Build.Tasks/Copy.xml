<Type Name="Copy" FullName="Microsoft.Build.Tasks.Copy">
  <Metadata><Meta Name="ms.openlocfilehash" Value="b50c66b049a6de0ae9dadc71796d3d441cc52877" /><Meta Name="ms.sourcegitcommit" Value="756d085f27705e86604f1bba5f2086ee23761acf" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="01/30/2019" /><Meta Name="ms.locfileid" Value="55411567" /></Metadata><TypeSignature Language="C#" Value="public class Copy : Microsoft.Build.Tasks.TaskExtension, Microsoft.Build.Framework.ICancelableTask" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Copy extends Microsoft.Build.Tasks.TaskExtension implements class Microsoft.Build.Framework.ICancelableTask, class Microsoft.Build.Framework.ITask" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Build.Tasks.Copy" />
  <TypeSignature Language="VB.NET" Value="Public Class Copy&#xA;Inherits TaskExtension&#xA;Implements ICancelableTask" />
  <TypeSignature Language="C++ CLI" Value="public ref class Copy : Microsoft::Build::Tasks::TaskExtension, Microsoft::Build::Framework::ICancelableTask" />
  <TypeSignature Language="F#" Value="type Copy = class&#xA;    inherit TaskExtension&#xA;    interface ICancelableTask&#xA;    interface ITask" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>Microsoft.Build.Tasks</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.Build.Tasks.TaskExtension</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.Build.Framework.ICancelableTask</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.Build.Framework.ITask</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="adf48-101">Implementuje <c>kopiowania</c> zadania.</span><span class="sxs-lookup"><span data-stu-id="adf48-101">Implements the <c>Copy</c> task.</span></span> <span data-ttu-id="adf48-102">Użyj <c>kopiowania</c> elementu w pliku projektu do tworzenia i wykonywanie tego zadania.</span><span class="sxs-lookup"><span data-stu-id="adf48-102">Use the <c>Copy</c> element in your project file to create and execute this task.</span></span> <span data-ttu-id="adf48-103">Aby uzyskać informacje dotyczące użycia i parametrów, zobacz [zadanie kopiowania](https://msdn.microsoft.com/library/a46ba9da-3e4e-4890-b4ea-09a099b6bc40).</span><span class="sxs-lookup"><span data-stu-id="adf48-103">For usage and parameter information, see [Copy Task](https://msdn.microsoft.com/library/a46ba9da-3e4e-4890-b4ea-09a099b6bc40).</span></span></summary>
    <remarks>To be added.</remarks>
    <forInternalUseOnly />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Copy ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Tasks.Copy.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Copy();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="adf48-104">Inicjuje nowe wystąpienie klasy <see cref="T:Microsoft.Build.Tasks.Copy" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="adf48-104">Initializes a new instance of the <see cref="T:Microsoft.Build.Tasks.Copy" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="Cancel">
      <MemberSignature Language="C#" Value="public void Cancel ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Cancel() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Tasks.Copy.Cancel" />
      <MemberSignature Language="VB.NET" Value="Public Sub Cancel ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Cancel();" />
      <MemberSignature Language="F#" Value="abstract member Cancel : unit -&gt; unit&#xA;override this.Cancel : unit -&gt; unit" Usage="copy.Cancel " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Build.Framework.ICancelableTask.Cancel</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="adf48-105">Zatrzymaj i jak najszybciej zwrócić (w stanie niezdefiniowany).</span><span class="sxs-lookup"><span data-stu-id="adf48-105">Stop and return (in an undefined state) as soon as possible.</span></span></summary>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="CopiedFiles">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Framework.ITaskItem[] CopiedFiles { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Build.Framework.ITaskItem[] CopiedFiles" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Tasks.Copy.CopiedFiles" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CopiedFiles As ITaskItem()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;Microsoft::Build::Framework::ITaskItem ^&gt; ^ CopiedFiles { cli::array &lt;Microsoft::Build::Framework::ITaskItem ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CopiedFiles : Microsoft.Build.Framework.ITaskItem[]" Usage="Microsoft.Build.Tasks.Copy.CopiedFiles" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.Build.Framework.Output</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Framework.ITaskItem[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="adf48-106">Pobiera elementy, które zostały pomyślnie skopiowane.</span><span class="sxs-lookup"><span data-stu-id="adf48-106">Gets the items that were successfully copied.</span></span></summary>
        <value><span data-ttu-id="adf48-107">Elementy, które zostały pomyślnie skopiowane.</span><span class="sxs-lookup"><span data-stu-id="adf48-107">The items that were successfully copied.</span></span></value>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="DestinationFiles">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Framework.ITaskItem[] DestinationFiles { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Build.Framework.ITaskItem[] DestinationFiles" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Tasks.Copy.DestinationFiles" />
      <MemberSignature Language="VB.NET" Value="Public Property DestinationFiles As ITaskItem()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;Microsoft::Build::Framework::ITaskItem ^&gt; ^ DestinationFiles { cli::array &lt;Microsoft::Build::Framework::ITaskItem ^&gt; ^ get(); void set(cli::array &lt;Microsoft::Build::Framework::ITaskItem ^&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DestinationFiles : Microsoft.Build.Framework.ITaskItem[] with get, set" Usage="Microsoft.Build.Tasks.Copy.DestinationFiles" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.Build.Framework.Output</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Framework.ITaskItem[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="adf48-108">Pobiera lub ustawia listę plików do skopiowania plików źródłowych.</span><span class="sxs-lookup"><span data-stu-id="adf48-108">Gets or sets a list of files to copy the source files to.</span></span></summary>
        <value><span data-ttu-id="adf48-109">Lista plików do skopiowania plików źródłowych.</span><span class="sxs-lookup"><span data-stu-id="adf48-109">The list of files to copy the source files to.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="adf48-110">Lista plików docelowego powinien być mapowanie jeden do jednego na listę określoną w <xref:Microsoft.Build.Tasks.Copy.SourceFiles%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="adf48-110">The list of destination files is expected to be a one-to-one mapping with the list specified in the <xref:Microsoft.Build.Tasks.Copy.SourceFiles%2A> property.</span></span> <span data-ttu-id="adf48-111">Oznacza to, że pierwszy plik określony w parametrze <xref:Microsoft.Build.Tasks.Copy.SourceFiles%2A> będzie kopiowany do pierwszej lokalizacji określonej w parametrze <xref:Microsoft.Build.Tasks.Copy.DestinationFiles%2A> itd.</span><span class="sxs-lookup"><span data-stu-id="adf48-111">That is, the first file specified in <xref:Microsoft.Build.Tasks.Copy.SourceFiles%2A> will be copied to the first location specified in <xref:Microsoft.Build.Tasks.Copy.DestinationFiles%2A>, and so forth.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="DestinationFolder">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Framework.ITaskItem DestinationFolder { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Build.Framework.ITaskItem DestinationFolder" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Tasks.Copy.DestinationFolder" />
      <MemberSignature Language="VB.NET" Value="Public Property DestinationFolder As ITaskItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Build::Framework::ITaskItem ^ DestinationFolder { Microsoft::Build::Framework::ITaskItem ^ get(); void set(Microsoft::Build::Framework::ITaskItem ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DestinationFolder : Microsoft.Build.Framework.ITaskItem with get, set" Usage="Microsoft.Build.Tasks.Copy.DestinationFolder" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Framework.ITaskItem</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="adf48-112">Pobiera lub ustawia katalog, do którego chcesz skopiować pliki.</span><span class="sxs-lookup"><span data-stu-id="adf48-112">Gets or sets the directory to which you want to copy the files.</span></span></summary>
        <value><span data-ttu-id="adf48-113">Katalog, do którego chcesz skopiować pliki.</span><span class="sxs-lookup"><span data-stu-id="adf48-113">The directory to which you want to copy the files.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="adf48-114">Folder docelowy musi być katalogiem, nie w pliku.</span><span class="sxs-lookup"><span data-stu-id="adf48-114">The destination folder must be a directory, not a file.</span></span> <span data-ttu-id="adf48-115">Jeśli katalog nie istnieje, zostanie utworzony automatycznie.</span><span class="sxs-lookup"><span data-stu-id="adf48-115">If the directory does not exist, it is created automatically.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="Execute">
      <MemberSignature Language="C#" Value="public override bool Execute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Execute() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Tasks.Copy.Execute" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Execute () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Execute();" />
      <MemberSignature Language="F#" Value="override this.Execute : unit -&gt; bool" Usage="copy.Execute " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Build.Framework.ITask.Execute</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="adf48-116">Wykonuje <c>kopiowania</c> zadania.</span><span class="sxs-lookup"><span data-stu-id="adf48-116">Executes the <c>Copy</c> task.</span></span></summary>
        <returns><span data-ttu-id="adf48-117"><see langword="true" /> Jeśli wykonanie zadania zakończyło się pomyślnie; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="adf48-117"><see langword="true" /> if task execution succeeded; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="OverwriteReadOnlyFiles">
      <MemberSignature Language="C#" Value="public bool OverwriteReadOnlyFiles { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool OverwriteReadOnlyFiles" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Tasks.Copy.OverwriteReadOnlyFiles" />
      <MemberSignature Language="VB.NET" Value="Public Property OverwriteReadOnlyFiles As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool OverwriteReadOnlyFiles { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.OverwriteReadOnlyFiles : bool with get, set" Usage="Microsoft.Build.Tasks.Copy.OverwriteReadOnlyFiles" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="adf48-118">Pobiera lub ustawia wartość logiczną wskazującą, czy należy zastąpić pliki, nawet wtedy, gdy są one oznaczone jako odczytu tylko pliki.</span><span class="sxs-lookup"><span data-stu-id="adf48-118">Gets or sets a Boolean value that indicates whether to overwrite files even if they are marked as read only files.</span></span></summary>
        <value><span data-ttu-id="adf48-119"><see langword="true" /> Jeśli <c>kopiowania</c> zadań należy zastąpić pliki, nawet jeśli są one oznaczone jako tylko pliki odczytu; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="adf48-119"><see langword="true" /> if the <c>Copy</c> task should overwrite files even if they are marked as read only files; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="Retries">
      <MemberSignature Language="C#" Value="public int Retries { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Retries" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Tasks.Copy.Retries" />
      <MemberSignature Language="VB.NET" Value="Public Property Retries As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Retries { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.Retries : int with get, set" Usage="Microsoft.Build.Tasks.Copy.Retries" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="adf48-120">Ile razy należy podjąć próbę kopiowania, jeśli wszystkie poprzednie próby nie powiodła się.</span><span class="sxs-lookup"><span data-stu-id="adf48-120">How many times to attempt to copy, if all previous attempts failed.</span></span> <span data-ttu-id="adf48-121">Domyślnie przyjmuje wartość zero.</span><span class="sxs-lookup"><span data-stu-id="adf48-121">Defaults to zero.</span></span> <span data-ttu-id="adf48-122">Ostrzeżenie: za pomocą ponownych prób może maskować problem z synchronizacją w procesie kompilacji.</span><span class="sxs-lookup"><span data-stu-id="adf48-122">Warning: using retries may mask a synchronization problem in your build process.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="RetryDelayMilliseconds">
      <MemberSignature Language="C#" Value="public int RetryDelayMilliseconds { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 RetryDelayMilliseconds" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Tasks.Copy.RetryDelayMilliseconds" />
      <MemberSignature Language="VB.NET" Value="Public Property RetryDelayMilliseconds As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int RetryDelayMilliseconds { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.RetryDelayMilliseconds : int with get, set" Usage="Microsoft.Build.Tasks.Copy.RetryDelayMilliseconds" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="adf48-123">Opóźnienie między kolejnymi niezbędnymi ponownymi próbami.</span><span class="sxs-lookup"><span data-stu-id="adf48-123">Delay between any necessary retries.</span></span> <span data-ttu-id="adf48-124">Wartość domyślna to 1000 milisekund.</span><span class="sxs-lookup"><span data-stu-id="adf48-124">Defaults to 1,000 milliseconds.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="SkipUnchangedFiles">
      <MemberSignature Language="C#" Value="public bool SkipUnchangedFiles { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SkipUnchangedFiles" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Tasks.Copy.SkipUnchangedFiles" />
      <MemberSignature Language="VB.NET" Value="Public Property SkipUnchangedFiles As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool SkipUnchangedFiles { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.SkipUnchangedFiles : bool with get, set" Usage="Microsoft.Build.Tasks.Copy.SkipUnchangedFiles" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="adf48-125">Pobiera lub ustawia wartość logiczną wskazującą, czy <c>kopiowania</c> zadań należy pominąć kopiowania plików, które są niezmienione między miejscem źródłowym i docelowym.</span><span class="sxs-lookup"><span data-stu-id="adf48-125">Gets or sets a Boolean value that indicates whether the <c>Copy</c> task should skip the copying of files that are unchanged between the source and destination.</span></span></summary>
        <value><span data-ttu-id="adf48-126"><see langword="true" /> Jeśli <c>kopiowania</c> zadań należy pominąć, skopiowanie plików, które są niezmienione między źródłowymi i docelowymi a w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="adf48-126"><see langword="true" /> if the <c>Copy</c> task should skip the copying of files that are unchanged between the source and destination; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="adf48-127">Zadanie `Copy` uznaje pliki za niezmienione, jeśli mają taki sam rozmiar i taki sam czas ostatniej modyfikacji.</span><span class="sxs-lookup"><span data-stu-id="adf48-127">The `Copy` task considers files to be unchanged if they have the same size and the same last modified time.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="SourceFiles">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Framework.ITaskItem[] SourceFiles { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Build.Framework.ITaskItem[] SourceFiles" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Tasks.Copy.SourceFiles" />
      <MemberSignature Language="VB.NET" Value="Public Property SourceFiles As ITaskItem()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;Microsoft::Build::Framework::ITaskItem ^&gt; ^ SourceFiles { cli::array &lt;Microsoft::Build::Framework::ITaskItem ^&gt; ^ get(); void set(cli::array &lt;Microsoft::Build::Framework::ITaskItem ^&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SourceFiles : Microsoft.Build.Framework.ITaskItem[] with get, set" Usage="Microsoft.Build.Tasks.Copy.SourceFiles" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.Build.Framework.Required</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Framework.ITaskItem[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="adf48-128">Pobiera lub ustawia pliki do skopiowania.</span><span class="sxs-lookup"><span data-stu-id="adf48-128">Gets or sets the files to copy.</span></span></summary>
        <value><span data-ttu-id="adf48-129">Pliki do skopiowania.</span><span class="sxs-lookup"><span data-stu-id="adf48-129">The files to copy.</span></span></value>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="UseHardlinksIfPossible">
      <MemberSignature Language="C#" Value="public bool UseHardlinksIfPossible { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseHardlinksIfPossible" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Tasks.Copy.UseHardlinksIfPossible" />
      <MemberSignature Language="VB.NET" Value="Public Property UseHardlinksIfPossible As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseHardlinksIfPossible { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.UseHardlinksIfPossible : bool with get, set" Usage="Microsoft.Build.Tasks.Copy.UseHardlinksIfPossible" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="adf48-130">Wskazuje, jeśli należy używać twardych łączy.</span><span class="sxs-lookup"><span data-stu-id="adf48-130">Indicates if hard links should be used.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
  </Members>
</Type>