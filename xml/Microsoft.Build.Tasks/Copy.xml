<Type Name="Copy" FullName="Microsoft.Build.Tasks.Copy">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="254128abb292b3125f0395bfff80584c82797198" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30428775" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class Copy : Microsoft.Build.Tasks.TaskExtension, Microsoft.Build.Framework.ICancelableTask" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Copy extends Microsoft.Build.Tasks.TaskExtension implements class Microsoft.Build.Framework.ICancelableTask, class Microsoft.Build.Framework.ITask" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Build.Tasks.Copy" />
  <TypeSignature Language="VB.NET" Value="Public Class Copy&#xA;Inherits TaskExtension&#xA;Implements ICancelableTask" />
  <TypeSignature Language="C++ CLI" Value="public ref class Copy : Microsoft::Build::Tasks::TaskExtension, Microsoft::Build::Framework::ICancelableTask" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.Build.Tasks.TaskExtension</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.Build.Framework.ICancelableTask</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="f3a6f-101">Implementuje <c>kopiowania</c> zadań.</span>
      <span class="sxs-lookup">
        <span data-stu-id="f3a6f-101">Implements the <c>Copy</c> task.</span>
      </span>
      <span data-ttu-id="f3a6f-102">Użyj <c>kopiowania</c> elementu w pliku projektu, aby utworzyć i wykonać to zadanie.</span>
      <span class="sxs-lookup">
        <span data-stu-id="f3a6f-102">Use the <c>Copy</c> element in your project file to create and execute this task.</span>
      </span>
      <span data-ttu-id="f3a6f-103">Aby uzyskać informacje dotyczące użycia i parametrów, zobacz [zadanie kopiowania](http://msdn.microsoft.com/library/a46ba9da-3e4e-4890-b4ea-09a099b6bc40).</span>
      <span class="sxs-lookup">
        <span data-stu-id="f3a6f-103">For usage and parameter information, see [Copy Task](http://msdn.microsoft.com/library/a46ba9da-3e4e-4890-b4ea-09a099b6bc40).</span>
      </span>
    </summary>
    <remarks>To be added.</remarks>
    <forInternalUseOnly />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Copy ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Tasks.Copy.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Copy();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f3a6f-104">Inicjuje nowe wystąpienie klasy <see cref="T:Microsoft.Build.Tasks.Copy" /> klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3a6f-104">Initializes a new instance of the <see cref="T:Microsoft.Build.Tasks.Copy" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="Cancel">
      <MemberSignature Language="C#" Value="public void Cancel ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Cancel() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Tasks.Copy.Cancel" />
      <MemberSignature Language="VB.NET" Value="Public Sub Cancel ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Cancel();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Build.Framework.ICancelableTask.Cancel</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f3a6f-105">Zatrzymaj i jak najszybciej powrócić (w stanie niezdefiniowany).</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3a6f-105">Stop and return (in an undefined state) as soon as possible.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="CopiedFiles">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Framework.ITaskItem[] CopiedFiles { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Build.Framework.ITaskItem[] CopiedFiles" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Tasks.Copy.CopiedFiles" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CopiedFiles As ITaskItem()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;Microsoft::Build::Framework::ITaskItem ^&gt; ^ CopiedFiles { cli::array &lt;Microsoft::Build::Framework::ITaskItem ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.Build.Framework.Output</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Framework.ITaskItem[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f3a6f-106">Pobiera elementy, które zostały pomyślnie skopiowane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3a6f-106">Gets the items that were successfully copied.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f3a6f-107">Elementy, które zostały pomyślnie skopiowane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3a6f-107">The items that were successfully copied.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="DestinationFiles">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Framework.ITaskItem[] DestinationFiles { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Build.Framework.ITaskItem[] DestinationFiles" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Tasks.Copy.DestinationFiles" />
      <MemberSignature Language="VB.NET" Value="Public Property DestinationFiles As ITaskItem()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;Microsoft::Build::Framework::ITaskItem ^&gt; ^ DestinationFiles { cli::array &lt;Microsoft::Build::Framework::ITaskItem ^&gt; ^ get(); void set(cli::array &lt;Microsoft::Build::Framework::ITaskItem ^&gt; ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.Build.Framework.Output</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Framework.ITaskItem[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f3a6f-108">Pobiera lub ustawia listę plików do skopiowania plików źródłowych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3a6f-108">Gets or sets a list of files to copy the source files to.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f3a6f-109">Lista plików do skopiowania plików źródłowych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3a6f-109">The list of files to copy the source files to.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f3a6f-110">Lista plików docelowego powinien być mapowanie jeden do jednego z listą określone w <xref:Microsoft.Build.Tasks.Copy.SourceFiles%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="f3a6f-110">The list of destination files is expected to be a one-to-one mapping with the list specified in the <xref:Microsoft.Build.Tasks.Copy.SourceFiles%2A> property.</span></span> <span data-ttu-id="f3a6f-111">Oznacza to, że pierwszy plik określony w parametrze <xref:Microsoft.Build.Tasks.Copy.SourceFiles%2A> będzie kopiowany do pierwszej lokalizacji określonej w parametrze <xref:Microsoft.Build.Tasks.Copy.DestinationFiles%2A> itd.</span><span class="sxs-lookup"><span data-stu-id="f3a6f-111">That is, the first file specified in <xref:Microsoft.Build.Tasks.Copy.SourceFiles%2A> will be copied to the first location specified in <xref:Microsoft.Build.Tasks.Copy.DestinationFiles%2A>, and so forth.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="DestinationFolder">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Framework.ITaskItem DestinationFolder { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Build.Framework.ITaskItem DestinationFolder" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Tasks.Copy.DestinationFolder" />
      <MemberSignature Language="VB.NET" Value="Public Property DestinationFolder As ITaskItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Build::Framework::ITaskItem ^ DestinationFolder { Microsoft::Build::Framework::ITaskItem ^ get(); void set(Microsoft::Build::Framework::ITaskItem ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Framework.ITaskItem</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f3a6f-112">Pobiera lub ustawia katalog, do którego chcesz skopiować pliki.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3a6f-112">Gets or sets the directory to which you want to copy the files.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f3a6f-113">Katalog, do którego chcesz skopiować pliki.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3a6f-113">The directory to which you want to copy the files.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f3a6f-114">Folder docelowy musi być katalogiem, a nie plikiem.</span><span class="sxs-lookup"><span data-stu-id="f3a6f-114">The destination folder must be a directory, not a file.</span></span> <span data-ttu-id="f3a6f-115">Jeśli katalog nie istnieje, zostanie utworzony automatycznie.</span><span class="sxs-lookup"><span data-stu-id="f3a6f-115">If the directory does not exist, it is created automatically.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="Execute">
      <MemberSignature Language="C#" Value="public override bool Execute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Execute() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Tasks.Copy.Execute" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Execute () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Execute();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Build.Framework.ITask.Execute</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f3a6f-116">Wykonuje <c>kopiowania</c> zadań.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3a6f-116">Executes the <c>Copy</c> task.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f3a6f-117">
            <see langword="true" /> Jeśli wykonanie zadania zakończyło się pomyślnie; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3a6f-117">
              <see langword="true" /> if task execution succeeded; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="OverwriteReadOnlyFiles">
      <MemberSignature Language="C#" Value="public bool OverwriteReadOnlyFiles { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool OverwriteReadOnlyFiles" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Tasks.Copy.OverwriteReadOnlyFiles" />
      <MemberSignature Language="VB.NET" Value="Public Property OverwriteReadOnlyFiles As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool OverwriteReadOnlyFiles { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f3a6f-118">Pobiera lub ustawia wartość Boolean wskazującą, czy zastąpić plików, nawet jeśli są one oznaczone jako odczytu tylko pliki.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3a6f-118">Gets or sets a Boolean value that indicates whether to overwrite files even if they are marked as read only files.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f3a6f-119">
            <see langword="true" /> Jeśli <c>kopiowania</c> zadań należy zastąpić pliki, nawet jeśli są one oznaczone jako odczytu tylko pliki, a w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3a6f-119">
              <see langword="true" /> if the <c>Copy</c> task should overwrite files even if they are marked as read only files; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="Retries">
      <MemberSignature Language="C#" Value="public int Retries { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Retries" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Tasks.Copy.Retries" />
      <MemberSignature Language="VB.NET" Value="Public Property Retries As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Retries { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f3a6f-120">Ile razy próba skopiowania, jeśli wszystkie poprzednich prób.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3a6f-120">How many times to attempt to copy, if all previous attempts failed.</span>
          </span>
          <span data-ttu-id="f3a6f-121">Domyślnie przyjmuje wartość zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3a6f-121">Defaults to zero.</span>
          </span>
          <span data-ttu-id="f3a6f-122">Ostrzeżenie: przy użyciu ponownych prób mogą zamaskować problem z synchronizacją w procesie kompilacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3a6f-122">Warning: using retries may mask a synchronization problem in your build process.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="RetryDelayMilliseconds">
      <MemberSignature Language="C#" Value="public int RetryDelayMilliseconds { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 RetryDelayMilliseconds" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Tasks.Copy.RetryDelayMilliseconds" />
      <MemberSignature Language="VB.NET" Value="Public Property RetryDelayMilliseconds As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int RetryDelayMilliseconds { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f3a6f-123">Opóźnienie między wszelkie niezbędne ponownych prób.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3a6f-123">Delay between any necessary retries.</span>
          </span>
          <span data-ttu-id="f3a6f-124">Wartość domyślna to <see cref="F:Microsoft.Build.Tasks.Copy.RetryDelayMillisecondsDefault" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="f3a6f-124">Defaults to <see cref="F:Microsoft.Build.Tasks.Copy.RetryDelayMillisecondsDefault" /></span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="SkipUnchangedFiles">
      <MemberSignature Language="C#" Value="public bool SkipUnchangedFiles { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SkipUnchangedFiles" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Tasks.Copy.SkipUnchangedFiles" />
      <MemberSignature Language="VB.NET" Value="Public Property SkipUnchangedFiles As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool SkipUnchangedFiles { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f3a6f-125">Pobiera lub ustawia wartość Boolean wskazującą, czy <c>kopiowania</c> zadanie ma pomijać kopiowania plików, które uległy zmianie od źródłowego i docelowego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3a6f-125">Gets or sets a Boolean value that indicates whether the <c>Copy</c> task should skip the copying of files that are unchanged between the source and destination.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f3a6f-126">
            <see langword="true" /> Jeśli <c>kopiowania</c> zadanie ma pomijać kopiowania plików, które zostały zmienione między źródłowym i docelowym, a w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3a6f-126">
              <see langword="true" /> if the <c>Copy</c> task should skip the copying of files that are unchanged between the source and destination; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f3a6f-127">Zadanie `Copy` uznaje pliki za niezmienione, jeśli mają taki sam rozmiar i taki sam czas ostatniej modyfikacji.</span><span class="sxs-lookup"><span data-stu-id="f3a6f-127">The `Copy` task considers files to be unchanged if they have the same size and the same last modified time.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="SourceFiles">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Framework.ITaskItem[] SourceFiles { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Build.Framework.ITaskItem[] SourceFiles" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Tasks.Copy.SourceFiles" />
      <MemberSignature Language="VB.NET" Value="Public Property SourceFiles As ITaskItem()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;Microsoft::Build::Framework::ITaskItem ^&gt; ^ SourceFiles { cli::array &lt;Microsoft::Build::Framework::ITaskItem ^&gt; ^ get(); void set(cli::array &lt;Microsoft::Build::Framework::ITaskItem ^&gt; ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.Build.Framework.Required</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Framework.ITaskItem[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f3a6f-128">Pobiera lub ustawia plików do skopiowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3a6f-128">Gets or sets the files to copy.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f3a6f-129">Pliki do skopiowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3a6f-129">The files to copy.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="UseHardlinksIfPossible">
      <MemberSignature Language="C#" Value="public bool UseHardlinksIfPossible { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseHardlinksIfPossible" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Tasks.Copy.UseHardlinksIfPossible" />
      <MemberSignature Language="VB.NET" Value="Public Property UseHardlinksIfPossible As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseHardlinksIfPossible { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f3a6f-130">Wskazuje, czy można używać twardych łączy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3a6f-130">Indicates if hard links should be used.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
  </Members>
</Type>