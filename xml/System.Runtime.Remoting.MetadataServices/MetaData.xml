<Type Name="MetaData" FullName="System.Runtime.Remoting.MetadataServices.MetaData">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="cd177fe34cf67d6c2f7c863f55e202a07eddacd8" />
    <Meta Name="ms.sourcegitcommit" Value="cbcba80f998e27b87425ad54726bdb684fb3a932" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="09/04/2018" />
    <Meta Name="ms.locfileid" Value="43654437" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class MetaData" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MetaData extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.Remoting.MetadataServices.MetaData" />
  <TypeSignature Language="VB.NET" Value="Public Class MetaData" />
  <TypeSignature Language="C++ CLI" Value="public ref class MetaData" />
  <TypeSignature Language="F#" Value="type MetaData = class" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Remoting</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="55eb9-101">Udostępnia metody, które umożliwiają pracę ze schematem XML.</span>
      <span class="sxs-lookup">
        <span data-stu-id="55eb9-101">Provides methods that allow you to work with XML schema.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="55eb9-102"><xref:System.Runtime.Remoting.MetadataServices.MetaData> Klasa dostarcza metody, które umożliwiają generowanie Web Services Description Language (WSDL) na podstawie informacji o typie, przekonwertować schematu XML do strumienia kodu i kompilowania strumienia kodu do zestawu.</span><span class="sxs-lookup"><span data-stu-id="55eb9-102">The <xref:System.Runtime.Remoting.MetadataServices.MetaData> class provides methods that allow you to generate Web Services Description Language (WSDL) from type information, convert an XML Schema into a code stream, and compile the code stream into an assembly.</span></span> <span data-ttu-id="55eb9-103">Ta funkcja jest również obecny w [Soapsuds narzędzia (Soapsuds.exe)](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/xd176a6c(v=vs.100)).</span><span class="sxs-lookup"><span data-stu-id="55eb9-103">This functionality is also present in the [Soapsuds Tool (Soapsuds.exe)](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/xd176a6c(v=vs.100)).</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MetaData ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.MetadataServices.MetaData.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MetaData();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="55eb9-104">Tworzy wystąpienie <see cref="T:System.Runtime.Remoting.MetadataServices.MetaData" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="55eb9-104">Creates an instance of <see cref="T:System.Runtime.Remoting.MetadataServices.MetaData" />.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvertCodeSourceFileToAssemblyFile">
      <MemberSignature Language="C#" Value="public static void ConvertCodeSourceFileToAssemblyFile (string codePath, string assemblyPath, string strongNameFilename);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ConvertCodeSourceFileToAssemblyFile(string codePath, string assemblyPath, string strongNameFilename) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.MetadataServices.MetaData.ConvertCodeSourceFileToAssemblyFile(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ConvertCodeSourceFileToAssemblyFile (codePath As String, assemblyPath As String, strongNameFilename As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ConvertCodeSourceFileToAssemblyFile(System::String ^ codePath, System::String ^ assemblyPath, System::String ^ strongNameFilename);" />
      <MemberSignature Language="F#" Value="static member ConvertCodeSourceFileToAssemblyFile : string * string * string -&gt; unit" Usage="System.Runtime.Remoting.MetadataServices.MetaData.ConvertCodeSourceFileToAssemblyFile (codePath, assemblyPath, strongNameFilename)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="codePath" Type="System.String" />
        <Parameter Name="assemblyPath" Type="System.String" />
        <Parameter Name="strongNameFilename" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="codePath">
          <span data-ttu-id="55eb9-105">Ścieżka do pliku, który zawiera kod źródłowy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="55eb9-105">The path to the file that contains the source code.</span>
          </span>
        </param>
        <param name="assemblyPath">
          <span data-ttu-id="55eb9-106">Lokalizacja, w których jest generowany nowego zestawu środowiska wykonawczego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="55eb9-106">The location where the new run-time assembly is generated.</span>
          </span>
        </param>
        <param name="strongNameFilename">
          <span data-ttu-id="55eb9-107">Silna nazwa skompilować do nowego zestawu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="55eb9-107">The strong name to compile into the new assembly.</span>
          </span>
          <span data-ttu-id="55eb9-108">Może być <see cref="F:System.String.Empty" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="55eb9-108">Can be <see cref="F:System.String.Empty" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="55eb9-109">Kompiluje plik źródłowy określony kod w pliku zestawu czasu wykonywania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="55eb9-109">Compiles a specified code source file into a runtime assembly file.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="55eb9-110">Aby uzyskać dodatkowe informacje o silnych nazwach, zobacz [zestawy Strong-Named](~/docs/framework/app-domains/strong-named-assemblies.md).</span><span class="sxs-lookup"><span data-stu-id="55eb9-110">For additional information on strong names, see [Strong-Named Assemblies](~/docs/framework/app-domains/strong-named-assemblies.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="55eb9-111">Jeśli plik o określonej nazwie już istnieje, zostanie zastąpiony.</span><span class="sxs-lookup"><span data-stu-id="55eb9-111">If a file with the specified name already exists, it is overwritten.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="55eb9-112">Poniższy przykład kodu demonstruje użycie <xref:System.Runtime.Remoting.MetadataServices.MetaData.ConvertCodeSourceFileToAssemblyFile%2A> metodę, aby zapisać definicji schematu określonych typów w zestawie środowiska uruchomieniowego o określonej nazwie.</span><span class="sxs-lookup"><span data-stu-id="55eb9-112">The following code example demonstrates the use of the <xref:System.Runtime.Remoting.MetadataServices.MetaData.ConvertCodeSourceFileToAssemblyFile%2A> method to write the schema definition of the specified types to a runtime assembly with the specified name.</span></span> <span data-ttu-id="55eb9-113">`CsSource.cs` Tutaj skonwertowano plik zawiera kod źródłowy języka C#.</span><span class="sxs-lookup"><span data-stu-id="55eb9-113">The `CsSource.cs` file converted here contains C# source code.</span></span>  
  
 [!code-cpp[MetaData.ConvertCodeSourceFileToAssemblyFile#1](~/samples/snippets/cpp/VS_Snippets_Remoting/MetaData.ConvertCodeSourceFileToAssemblyFile/CPP/source.cpp#1)]
 [!code-csharp[MetaData.ConvertCodeSourceFileToAssemblyFile#1](~/samples/snippets/csharp/VS_Snippets_Remoting/MetaData.ConvertCodeSourceFileToAssemblyFile/CS/source.cs#1)]
 [!code-vb[MetaData.ConvertCodeSourceFileToAssemblyFile#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/MetaData.ConvertCodeSourceFileToAssemblyFile/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvertCodeSourceStreamToAssemblyFile">
      <MemberSignature Language="C#" Value="public static void ConvertCodeSourceStreamToAssemblyFile (System.Collections.ArrayList outCodeStreamList, string assemblyPath, string strongNameFilename);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ConvertCodeSourceStreamToAssemblyFile(class System.Collections.ArrayList outCodeStreamList, string assemblyPath, string strongNameFilename) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.MetadataServices.MetaData.ConvertCodeSourceStreamToAssemblyFile(System.Collections.ArrayList,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ConvertCodeSourceStreamToAssemblyFile (outCodeStreamList As ArrayList, assemblyPath As String, strongNameFilename As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ConvertCodeSourceStreamToAssemblyFile(System::Collections::ArrayList ^ outCodeStreamList, System::String ^ assemblyPath, System::String ^ strongNameFilename);" />
      <MemberSignature Language="F#" Value="static member ConvertCodeSourceStreamToAssemblyFile : System.Collections.ArrayList * string * string -&gt; unit" Usage="System.Runtime.Remoting.MetadataServices.MetaData.ConvertCodeSourceStreamToAssemblyFile (outCodeStreamList, assemblyPath, strongNameFilename)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="outCodeStreamList" Type="System.Collections.ArrayList" />
        <Parameter Name="assemblyPath" Type="System.String" />
        <Parameter Name="strongNameFilename" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="outCodeStreamList">
          <span data-ttu-id="55eb9-114">A <see cref="T:System.Collections.ArrayList" /> strumieni z kodem źródłowym.</span>
          <span class="sxs-lookup">
            <span data-stu-id="55eb9-114">A <see cref="T:System.Collections.ArrayList" /> of streams with the source code.</span>
          </span>
        </param>
        <param name="assemblyPath">
          <span data-ttu-id="55eb9-115">Lokalizacja, w których jest generowany nowego zestawu środowiska wykonawczego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="55eb9-115">The location where the new run-time assembly is generated.</span>
          </span>
        </param>
        <param name="strongNameFilename">
          <span data-ttu-id="55eb9-116">Silna nazwa skompilować do nowego zestawu środowiska wykonawczego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="55eb9-116">The strong name to compile into the new run-time assembly.</span>
          </span>
          <span data-ttu-id="55eb9-117">Może być <see cref="F:System.String.Empty" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="55eb9-117">Can be <see cref="F:System.String.Empty" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="55eb9-118">Kompiluje określony strumieni źródłowych kodu do pliku zestawu czasu wykonywania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="55eb9-118">Compiles specified code source streams into a run-time assembly file.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="55eb9-119">Aby uzyskać dodatkowe informacje o silnych nazwach, zobacz [zestawy Strong-Named](~/docs/framework/app-domains/strong-named-assemblies.md).</span><span class="sxs-lookup"><span data-stu-id="55eb9-119">For additional information on strong names, see [Strong-Named Assemblies](~/docs/framework/app-domains/strong-named-assemblies.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="55eb9-120">Jeśli plik o określonej nazwie już istnieje, zostanie zastąpiony.</span><span class="sxs-lookup"><span data-stu-id="55eb9-120">If a file with the specified name already exists, it is overwritten.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ConvertSchemaStreamToCodeSourceStream">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="55eb9-121">Konwertuje definicję określonego schematu języka C# źródła kodu serwera proxy, który można następnie skompilowany w zestawie środowiska uruchomieniowego serwera proxy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="55eb9-121">Converts a specified schema definition to C# source code proxy, which can then be compiled into a runtime proxy assembly.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ConvertSchemaStreamToCodeSourceStream">
      <MemberSignature Language="C#" Value="public static void ConvertSchemaStreamToCodeSourceStream (bool clientProxy, string outputDirectory, System.IO.Stream inputStream, System.Collections.ArrayList outCodeStreamList);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ConvertSchemaStreamToCodeSourceStream(bool clientProxy, string outputDirectory, class System.IO.Stream inputStream, class System.Collections.ArrayList outCodeStreamList) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.MetadataServices.MetaData.ConvertSchemaStreamToCodeSourceStream(System.Boolean,System.String,System.IO.Stream,System.Collections.ArrayList)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ConvertSchemaStreamToCodeSourceStream (clientProxy As Boolean, outputDirectory As String, inputStream As Stream, outCodeStreamList As ArrayList)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ConvertSchemaStreamToCodeSourceStream(bool clientProxy, System::String ^ outputDirectory, System::IO::Stream ^ inputStream, System::Collections::ArrayList ^ outCodeStreamList);" />
      <MemberSignature Language="F#" Value="static member ConvertSchemaStreamToCodeSourceStream : bool * string * System.IO.Stream * System.Collections.ArrayList -&gt; unit" Usage="System.Runtime.Remoting.MetadataServices.MetaData.ConvertSchemaStreamToCodeSourceStream (clientProxy, outputDirectory, inputStream, outCodeStreamList)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="clientProxy" Type="System.Boolean" />
        <Parameter Name="outputDirectory" Type="System.String" />
        <Parameter Name="inputStream" Type="System.IO.Stream" />
        <Parameter Name="outCodeStreamList" Type="System.Collections.ArrayList" />
      </Parameters>
      <Docs>
        <param name="clientProxy">
          <span data-ttu-id="55eb9-122">Wskazuje typ serwera proxy do wygenerowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="55eb9-122">Indicates the type of proxy to generate.</span>
          </span>
          <span data-ttu-id="55eb9-123">Jeśli <see langword="true" />, generuje prosty serwer proxy (znany także jako serwer proxy opakowana) automatycznie ładuje kanały, udostępnia wszystkie metody obiektu zdalnego, która zapewnia dostęp do właściwości kanału.</span>
          <span class="sxs-lookup">
            <span data-stu-id="55eb9-123">If <see langword="true" />, generates a simple proxy (also known as wrapped proxy) that automatically loads the channels, exposes all the methods of the remote object, and provides access to the channel properties.</span>
          </span>
          <span data-ttu-id="55eb9-124">Jeśli <see langword="false" />, generuje przezroczystym serwerem proxy, który udostępnia wszystkie metody obiektu zdalnego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="55eb9-124">If <see langword="false" />, generates a transparent proxy that exposes all the methods of the remote object.</span>
          </span>
        </param>
        <param name="outputDirectory">
          <span data-ttu-id="55eb9-125">Katalog, w których są tworzone nowe C# plików kodu źródłowego z serwerem proxy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="55eb9-125">The directory where the new C# source code files with the proxy are created.</span>
          </span>
        </param>
        <param name="inputStream">
          <span data-ttu-id="55eb9-126">Strumień wejściowy zawiera definicję schematu w formacie Web Services Description Language (WSDL).</span>
          <span class="sxs-lookup">
            <span data-stu-id="55eb9-126">The input stream that contains the schema definition in Web Services Description Language (WSDL) format.</span>
          </span>
        </param>
        <param name="outCodeStreamList">
          <span data-ttu-id="55eb9-127">Lista nazw plików dla strumieni kodu, które są generowane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="55eb9-127">The list of file names for the code streams that are generated.</span>
          </span>
          <span data-ttu-id="55eb9-128">Należy pamiętać, że <see cref="M:System.Runtime.Remoting.MetadataServices.MetaData.ConvertSchemaStreamToCodeSourceStream(System.Boolean,System.String,System.IO.Stream,System.Collections.ArrayList,System.String,System.String)" /> metoda źródło można utworzyć wiele strumieni kodu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="55eb9-128">Note that the <see cref="M:System.Runtime.Remoting.MetadataServices.MetaData.ConvertSchemaStreamToCodeSourceStream(System.Boolean,System.String,System.IO.Stream,System.Collections.ArrayList,System.String,System.String)" /> method can create multiple source code streams.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="55eb9-129">Konwertuje określony schemat definicji kodu źródłowego serwera proxy języka C#.</span>
          <span class="sxs-lookup">
            <span data-stu-id="55eb9-129">Converts the specified schema definition into C# proxy source code.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="55eb9-130">Jeśli istnieją już pliki o określonej nazwy, zostaną zastąpione.</span><span class="sxs-lookup"><span data-stu-id="55eb9-130">If files with the specified names already exist, they are overwritten.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvertSchemaStreamToCodeSourceStream">
      <MemberSignature Language="C#" Value="public static void ConvertSchemaStreamToCodeSourceStream (bool clientProxy, string outputDirectory, System.IO.Stream inputStream, System.Collections.ArrayList outCodeStreamList, string proxyUrl);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ConvertSchemaStreamToCodeSourceStream(bool clientProxy, string outputDirectory, class System.IO.Stream inputStream, class System.Collections.ArrayList outCodeStreamList, string proxyUrl) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.MetadataServices.MetaData.ConvertSchemaStreamToCodeSourceStream(System.Boolean,System.String,System.IO.Stream,System.Collections.ArrayList,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ConvertSchemaStreamToCodeSourceStream (clientProxy As Boolean, outputDirectory As String, inputStream As Stream, outCodeStreamList As ArrayList, proxyUrl As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ConvertSchemaStreamToCodeSourceStream(bool clientProxy, System::String ^ outputDirectory, System::IO::Stream ^ inputStream, System::Collections::ArrayList ^ outCodeStreamList, System::String ^ proxyUrl);" />
      <MemberSignature Language="F#" Value="static member ConvertSchemaStreamToCodeSourceStream : bool * string * System.IO.Stream * System.Collections.ArrayList * string -&gt; unit" Usage="System.Runtime.Remoting.MetadataServices.MetaData.ConvertSchemaStreamToCodeSourceStream (clientProxy, outputDirectory, inputStream, outCodeStreamList, proxyUrl)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="clientProxy" Type="System.Boolean" />
        <Parameter Name="outputDirectory" Type="System.String" />
        <Parameter Name="inputStream" Type="System.IO.Stream" />
        <Parameter Name="outCodeStreamList" Type="System.Collections.ArrayList" />
        <Parameter Name="proxyUrl" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="clientProxy">
          <span data-ttu-id="55eb9-131">Wskazuje typ serwera proxy do wygenerowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="55eb9-131">Indicates the type of proxy to generate.</span>
          </span>
          <span data-ttu-id="55eb9-132">Jeśli <see langword="true" />, generuje prosty serwer proxy (znany także jako serwer proxy opakowana) automatycznie ładuje kanały, udostępnia wszystkie metody obiektu zdalnego, która zapewnia dostęp do właściwości kanału.</span>
          <span class="sxs-lookup">
            <span data-stu-id="55eb9-132">If <see langword="true" />, generates a simple proxy (also known as wrapped proxy) that automatically loads the channels, exposes all the methods of the remote object, and provides access to the channel properties.</span>
          </span>
          <span data-ttu-id="55eb9-133">Jeśli <see langword="false" />, generuje przezroczystym serwerem proxy, który udostępnia wszystkie metody obiektu zdalnego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="55eb9-133">If <see langword="false" />, generates a transparent proxy that exposes all the methods of the remote object.</span>
          </span>
        </param>
        <param name="outputDirectory">
          <span data-ttu-id="55eb9-134">Katalog, w których są tworzone nowe C# plików kodu źródłowego z serwerem proxy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="55eb9-134">The directory where the new C# source code files with the proxy are created.</span>
          </span>
        </param>
        <param name="inputStream">
          <span data-ttu-id="55eb9-135">Strumień wejściowy zawiera definicję schematu w formacie Web Services Description Language (WSDL).</span>
          <span class="sxs-lookup">
            <span data-stu-id="55eb9-135">The input stream that contains the schema definition in Web Services Description Language (WSDL) format.</span>
          </span>
        </param>
        <param name="outCodeStreamList">
          <span data-ttu-id="55eb9-136">Lista nazw plików dla strumieni kodu, które są generowane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="55eb9-136">The list of file names for the code streams that are generated.</span>
          </span>
          <span data-ttu-id="55eb9-137">Należy pamiętać, że <see cref="M:System.Runtime.Remoting.MetadataServices.MetaData.ConvertSchemaStreamToCodeSourceStream(System.Boolean,System.String,System.IO.Stream,System.Collections.ArrayList,System.String,System.String)" /> metoda źródło można utworzyć wiele strumieni kodu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="55eb9-137">Note that the <see cref="M:System.Runtime.Remoting.MetadataServices.MetaData.ConvertSchemaStreamToCodeSourceStream(System.Boolean,System.String,System.IO.Stream,System.Collections.ArrayList,System.String,System.String)" /> method can create multiple source code streams.</span>
          </span>
        </param>
        <param name="proxyUrl">
          <span data-ttu-id="55eb9-138">Adres URL, gdzie zostaną umieszczone zdalnego obiektu docelowego, który jest reprezentowany przez nowy serwer proxy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="55eb9-138">The URL where the target remote object that is represented by the new proxy will be located.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="55eb9-139">Konwertuje definicję określony schemat proxy kod źródłowy C# dla obiektu zdalnego, który jest umieszczony pod określonym adresem URL.</span>
          <span class="sxs-lookup">
            <span data-stu-id="55eb9-139">Converts the specified schema definition into C# proxy source code for a remote object that is located at the specified URL.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="55eb9-140">Jeśli istnieją już pliki o określonej nazwy, zostaną zastąpione.</span><span class="sxs-lookup"><span data-stu-id="55eb9-140">If files with the specified names already exist, they are overwritten.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvertSchemaStreamToCodeSourceStream">
      <MemberSignature Language="C#" Value="public static void ConvertSchemaStreamToCodeSourceStream (bool clientProxy, string outputDirectory, System.IO.Stream inputStream, System.Collections.ArrayList outCodeStreamList, string proxyUrl, string proxyNamespace);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ConvertSchemaStreamToCodeSourceStream(bool clientProxy, string outputDirectory, class System.IO.Stream inputStream, class System.Collections.ArrayList outCodeStreamList, string proxyUrl, string proxyNamespace) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.MetadataServices.MetaData.ConvertSchemaStreamToCodeSourceStream(System.Boolean,System.String,System.IO.Stream,System.Collections.ArrayList,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ConvertSchemaStreamToCodeSourceStream (clientProxy As Boolean, outputDirectory As String, inputStream As Stream, outCodeStreamList As ArrayList, proxyUrl As String, proxyNamespace As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ConvertSchemaStreamToCodeSourceStream(bool clientProxy, System::String ^ outputDirectory, System::IO::Stream ^ inputStream, System::Collections::ArrayList ^ outCodeStreamList, System::String ^ proxyUrl, System::String ^ proxyNamespace);" />
      <MemberSignature Language="F#" Value="static member ConvertSchemaStreamToCodeSourceStream : bool * string * System.IO.Stream * System.Collections.ArrayList * string * string -&gt; unit" Usage="System.Runtime.Remoting.MetadataServices.MetaData.ConvertSchemaStreamToCodeSourceStream (clientProxy, outputDirectory, inputStream, outCodeStreamList, proxyUrl, proxyNamespace)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="clientProxy" Type="System.Boolean" />
        <Parameter Name="outputDirectory" Type="System.String" />
        <Parameter Name="inputStream" Type="System.IO.Stream" />
        <Parameter Name="outCodeStreamList" Type="System.Collections.ArrayList" />
        <Parameter Name="proxyUrl" Type="System.String" />
        <Parameter Name="proxyNamespace" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="clientProxy">
          <span data-ttu-id="55eb9-141">Wskazuje typ serwera proxy do wygenerowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="55eb9-141">Indicates the type of proxy to generate.</span>
          </span>
          <span data-ttu-id="55eb9-142">Jeśli <see langword="true" />, generuje prosty serwer proxy (znany także jako serwer proxy opakowana) automatycznie ładuje kanały, udostępnia wszystkie metody obiektu zdalnego, która zapewnia dostęp do właściwości kanału.</span>
          <span class="sxs-lookup">
            <span data-stu-id="55eb9-142">If <see langword="true" />, generates a simple proxy (also known as wrapped proxy) that automatically loads the channels, exposes all the methods of the remote object, and provides access to the channel properties.</span>
          </span>
          <span data-ttu-id="55eb9-143">Jeśli <see langword="false" />, generuje przezroczystym serwerem proxy, który udostępnia wszystkie metody obiektu zdalnego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="55eb9-143">If <see langword="false" />, generates a transparent proxy that exposes all the methods of the remote object.</span>
          </span>
        </param>
        <param name="outputDirectory">
          <span data-ttu-id="55eb9-144">Katalog, w których są tworzone nowe C# plików kodu źródłowego z serwerem proxy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="55eb9-144">The directory where the new C# source code files with the proxy are created.</span>
          </span>
        </param>
        <param name="inputStream">
          <span data-ttu-id="55eb9-145">Strumień wejściowy z definicją schematu, w formacie Web Services Description Language (WSDL).</span>
          <span class="sxs-lookup">
            <span data-stu-id="55eb9-145">The input stream containing the schema definition in Web Services Description Language (WSDL) format.</span>
          </span>
        </param>
        <param name="outCodeStreamList">
          <span data-ttu-id="55eb9-146">Lista nazw plików dla strumieni kodu, które są generowane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="55eb9-146">The list of file names for the code streams that are generated.</span>
          </span>
          <span data-ttu-id="55eb9-147">Należy pamiętać, że <see cref="M:System.Runtime.Remoting.MetadataServices.MetaData.ConvertSchemaStreamToCodeSourceStream(System.Boolean,System.String,System.IO.Stream,System.Collections.ArrayList,System.String,System.String)" /> metoda źródło można utworzyć wiele strumieni kodu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="55eb9-147">Note that the <see cref="M:System.Runtime.Remoting.MetadataServices.MetaData.ConvertSchemaStreamToCodeSourceStream(System.Boolean,System.String,System.IO.Stream,System.Collections.ArrayList,System.String,System.String)" /> method can create multiple source code streams.</span>
          </span>
        </param>
        <param name="proxyUrl">
          <span data-ttu-id="55eb9-148">Adres URL, gdzie zostaną umieszczone zdalnego obiektu docelowego, który jest reprezentowany przez nowy serwer proxy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="55eb9-148">The URL where the target remote object that is represented by the new proxy will be located.</span>
          </span>
        </param>
        <param name="proxyNamespace">
          <span data-ttu-id="55eb9-149">Przestrzeń nazw nowo utworzony serwer proxy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="55eb9-149">The namespace of the newly created proxy.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="55eb9-150">Konwertuje definicję określony schemat proxy kod źródłowy C# dla obiektu zdalnego, który jest umieszczony pod określonym adresem URL i w obszarze nazw podanej klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="55eb9-150">Converts the specified schema definition into C# proxy source code for a remote object that is located at the specified URL and in the provided class namespace.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="55eb9-151">Jeśli istnieją już pliki o określonej nazwy, zostaną zastąpione.</span><span class="sxs-lookup"><span data-stu-id="55eb9-151">If files with the specified names already exist, they are overwritten.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ConvertTypesToSchemaToFile">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="55eb9-152">Konwertuje określonych typów schematu XML i zapisuje je do pliku.</span>
          <span class="sxs-lookup">
            <span data-stu-id="55eb9-152">Converts the specified types to XML schema, and writes it to a file.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ConvertTypesToSchemaToFile">
      <MemberSignature Language="C#" Value="public static void ConvertTypesToSchemaToFile (System.Runtime.Remoting.MetadataServices.ServiceType[] types, System.Runtime.Remoting.MetadataServices.SdlType sdlType, string path);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ConvertTypesToSchemaToFile(class System.Runtime.Remoting.MetadataServices.ServiceType[] types, valuetype System.Runtime.Remoting.MetadataServices.SdlType sdlType, string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.MetadataServices.MetaData.ConvertTypesToSchemaToFile(System.Runtime.Remoting.MetadataServices.ServiceType[],System.Runtime.Remoting.MetadataServices.SdlType,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ConvertTypesToSchemaToFile(cli::array &lt;System::Runtime::Remoting::MetadataServices::ServiceType ^&gt; ^ types, System::Runtime::Remoting::MetadataServices::SdlType sdlType, System::String ^ path);" />
      <MemberSignature Language="F#" Value="static member ConvertTypesToSchemaToFile : System.Runtime.Remoting.MetadataServices.ServiceType[] * System.Runtime.Remoting.MetadataServices.SdlType * string -&gt; unit" Usage="System.Runtime.Remoting.MetadataServices.MetaData.ConvertTypesToSchemaToFile (types, sdlType, path)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="types" Type="System.Runtime.Remoting.MetadataServices.ServiceType[]" />
        <Parameter Name="sdlType" Type="System.Runtime.Remoting.MetadataServices.SdlType" />
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="types">
          <span data-ttu-id="55eb9-153">
            <see cref="T:System.Runtime.Remoting.MetadataServices.ServiceType" /> Wystąpień do przekonwertowania na schematu XML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="55eb9-153">The <see cref="T:System.Runtime.Remoting.MetadataServices.ServiceType" /> instances to convert to XML schema.</span>
          </span>
        </param>
        <param name="sdlType">
          <span data-ttu-id="55eb9-154">Typ język opisu usługi na potrzeby schematu XML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="55eb9-154">The type of service description language to use for the XML schema.</span>
          </span>
        </param>
        <param name="path">
          <span data-ttu-id="55eb9-155">Ścieżka pliku XML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="55eb9-155">The path of the XML file.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="55eb9-156">Konwertuje typów usług określonego schematu XML i zapisuje je do pliku, który jest określony przez nazwę.</span>
          <span class="sxs-lookup">
            <span data-stu-id="55eb9-156">Converts the specified service types to XML schema, and writes it to a file that is specified by name.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="55eb9-157">A <xref:System.Runtime.Remoting.MetadataServices.ServiceType> wystąpienie umożliwia skojarzenie adresu URL z obiektem <xref:System.Type>.</span><span class="sxs-lookup"><span data-stu-id="55eb9-157">A <xref:System.Runtime.Remoting.MetadataServices.ServiceType> instance allows you to associate a URL with an object <xref:System.Type>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="55eb9-158">Jeśli plik o określonej nazwie już istnieje, zostanie zastąpiony.</span><span class="sxs-lookup"><span data-stu-id="55eb9-158">If a file with the specified name already exists, it is overwritten.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvertTypesToSchemaToFile">
      <MemberSignature Language="C#" Value="public static void ConvertTypesToSchemaToFile (Type[] types, System.Runtime.Remoting.MetadataServices.SdlType sdlType, string path);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ConvertTypesToSchemaToFile(class System.Type[] types, valuetype System.Runtime.Remoting.MetadataServices.SdlType sdlType, string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.MetadataServices.MetaData.ConvertTypesToSchemaToFile(System.Type[],System.Runtime.Remoting.MetadataServices.SdlType,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ConvertTypesToSchemaToFile(cli::array &lt;Type ^&gt; ^ types, System::Runtime::Remoting::MetadataServices::SdlType sdlType, System::String ^ path);" />
      <MemberSignature Language="F#" Value="static member ConvertTypesToSchemaToFile : Type[] * System.Runtime.Remoting.MetadataServices.SdlType * string -&gt; unit" Usage="System.Runtime.Remoting.MetadataServices.MetaData.ConvertTypesToSchemaToFile (types, sdlType, path)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="types" Type="System.Type[]" />
        <Parameter Name="sdlType" Type="System.Runtime.Remoting.MetadataServices.SdlType" />
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="types">
          <span data-ttu-id="55eb9-159">Typy obiektów, które można przekonwertować na schematu XML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="55eb9-159">The object types to convert to XML schema.</span>
          </span>
        </param>
        <param name="sdlType">
          <span data-ttu-id="55eb9-160">Typ język opisu usługi na potrzeby schematu XML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="55eb9-160">The type of service description language to use for the XML schema.</span>
          </span>
        </param>
        <param name="path">
          <span data-ttu-id="55eb9-161">Ścieżka pliku XML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="55eb9-161">The path of the XML file.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="55eb9-162">Typy określony obiekt jest konwertowany na schemat XML i zapisuje go do pliku, który jest określony przez nazwę.</span>
          <span class="sxs-lookup">
            <span data-stu-id="55eb9-162">Converts the specified object types to XML schema, and writes it to a file that is specified by name.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="55eb9-163">Jeśli plik o określonej nazwie już istnieje, zostanie zastąpiony.</span><span class="sxs-lookup"><span data-stu-id="55eb9-163">If a file with the specified name already exists, it is overwritten.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="55eb9-164">Poniższy przykład kodu demonstruje użycie <xref:System.Runtime.Remoting.MetadataServices.MetaData.ConvertTypesToSchemaToFile%2A> metodę, aby zapisać definicji schematu określonego typu pliku.</span><span class="sxs-lookup"><span data-stu-id="55eb9-164">The following code example demonstrates the use of the <xref:System.Runtime.Remoting.MetadataServices.MetaData.ConvertTypesToSchemaToFile%2A> method to write the schema definition of the specified types to a file.</span></span>  
  
 [!code-cpp[MetaData.ConvertTypesToSchemaToFile#1](~/samples/snippets/cpp/VS_Snippets_Remoting/MetaData.ConvertTypesToSchemaToFile/CPP/source.cpp#1)]
 [!code-csharp[MetaData.ConvertTypesToSchemaToFile#1](~/samples/snippets/csharp/VS_Snippets_Remoting/MetaData.ConvertTypesToSchemaToFile/CS/source.cs#1)]
 [!code-vb[MetaData.ConvertTypesToSchemaToFile#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/MetaData.ConvertTypesToSchemaToFile/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ConvertTypesToSchemaToStream">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="55eb9-165">Konwertuje określonych typów schematu XML i zapisuje go do strumienia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="55eb9-165">Converts the specified types to XML schema, and writes it to a stream.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ConvertTypesToSchemaToStream">
      <MemberSignature Language="C#" Value="public static void ConvertTypesToSchemaToStream (System.Runtime.Remoting.MetadataServices.ServiceType[] serviceTypes, System.Runtime.Remoting.MetadataServices.SdlType sdlType, System.IO.Stream outputStream);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ConvertTypesToSchemaToStream(class System.Runtime.Remoting.MetadataServices.ServiceType[] serviceTypes, valuetype System.Runtime.Remoting.MetadataServices.SdlType sdlType, class System.IO.Stream outputStream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.MetadataServices.MetaData.ConvertTypesToSchemaToStream(System.Runtime.Remoting.MetadataServices.ServiceType[],System.Runtime.Remoting.MetadataServices.SdlType,System.IO.Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ConvertTypesToSchemaToStream(cli::array &lt;System::Runtime::Remoting::MetadataServices::ServiceType ^&gt; ^ serviceTypes, System::Runtime::Remoting::MetadataServices::SdlType sdlType, System::IO::Stream ^ outputStream);" />
      <MemberSignature Language="F#" Value="static member ConvertTypesToSchemaToStream : System.Runtime.Remoting.MetadataServices.ServiceType[] * System.Runtime.Remoting.MetadataServices.SdlType * System.IO.Stream -&gt; unit" Usage="System.Runtime.Remoting.MetadataServices.MetaData.ConvertTypesToSchemaToStream (serviceTypes, sdlType, outputStream)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceTypes" Type="System.Runtime.Remoting.MetadataServices.ServiceType[]" />
        <Parameter Name="sdlType" Type="System.Runtime.Remoting.MetadataServices.SdlType" />
        <Parameter Name="outputStream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="serviceTypes">
          <span data-ttu-id="55eb9-166">
            <see cref="T:System.Runtime.Remoting.MetadataServices.ServiceType" /> Wystąpień do przekonwertowania na schematu XML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="55eb9-166">The <see cref="T:System.Runtime.Remoting.MetadataServices.ServiceType" /> instances to convert to XML schema.</span>
          </span>
        </param>
        <param name="sdlType">
          <span data-ttu-id="55eb9-167">Typ język opisu usługi na potrzeby schematu XML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="55eb9-167">The type of service description language to use for the XML schema.</span>
          </span>
        </param>
        <param name="outputStream">
          <span data-ttu-id="55eb9-168">
            <see cref="T:System.IO.Stream" /> Zapisywanych schematu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="55eb9-168">The <see cref="T:System.IO.Stream" /> that the schema is written to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="55eb9-169">Konwertuje typów usług określonego schematu XML i zapisuje go do określonego strumienia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="55eb9-169">Converts the specified service types to XML schema, and writes it to a specified stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="55eb9-170">A <xref:System.Runtime.Remoting.MetadataServices.ServiceType> wystąpienie umożliwia skojarzenie adresu URL z obiektem <xref:System.Type>.</span><span class="sxs-lookup"><span data-stu-id="55eb9-170">A <xref:System.Runtime.Remoting.MetadataServices.ServiceType> instance allows you to associate a URL with an object <xref:System.Type>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvertTypesToSchemaToStream">
      <MemberSignature Language="C#" Value="public static void ConvertTypesToSchemaToStream (Type[] types, System.Runtime.Remoting.MetadataServices.SdlType sdlType, System.IO.Stream outputStream);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ConvertTypesToSchemaToStream(class System.Type[] types, valuetype System.Runtime.Remoting.MetadataServices.SdlType sdlType, class System.IO.Stream outputStream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.MetadataServices.MetaData.ConvertTypesToSchemaToStream(System.Type[],System.Runtime.Remoting.MetadataServices.SdlType,System.IO.Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ConvertTypesToSchemaToStream(cli::array &lt;Type ^&gt; ^ types, System::Runtime::Remoting::MetadataServices::SdlType sdlType, System::IO::Stream ^ outputStream);" />
      <MemberSignature Language="F#" Value="static member ConvertTypesToSchemaToStream : Type[] * System.Runtime.Remoting.MetadataServices.SdlType * System.IO.Stream -&gt; unit" Usage="System.Runtime.Remoting.MetadataServices.MetaData.ConvertTypesToSchemaToStream (types, sdlType, outputStream)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="types" Type="System.Type[]" />
        <Parameter Name="sdlType" Type="System.Runtime.Remoting.MetadataServices.SdlType" />
        <Parameter Name="outputStream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="types">
          <span data-ttu-id="55eb9-171">Typy obiektów, które można przekonwertować na schematu XML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="55eb9-171">The object types to convert to XML schema.</span>
          </span>
        </param>
        <param name="sdlType">
          <span data-ttu-id="55eb9-172">Typ język opisu usługi na potrzeby schematu XML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="55eb9-172">The type of service description language to use for the XML schema.</span>
          </span>
        </param>
        <param name="outputStream">
          <span data-ttu-id="55eb9-173">
            <see cref="T:System.IO.Stream" /> Zapisywanych schematu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="55eb9-173">The <see cref="T:System.IO.Stream" /> that the schema is written to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="55eb9-174">Typy określony obiekt jest konwertowany na schemat XML i zapisuje go do określonego strumienia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="55eb9-174">Converts the specified object types to XML schema, and writes it to a specified stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="55eb9-175">Poniższy przykład kodu demonstruje użycie <xref:System.Runtime.Remoting.MetadataServices.MetaData.ConvertTypesToSchemaToStream%2A> metodę, aby zapisać definicji schematu określonego typu w strumieniu.</span><span class="sxs-lookup"><span data-stu-id="55eb9-175">The following code example demonstrates the use of the <xref:System.Runtime.Remoting.MetadataServices.MetaData.ConvertTypesToSchemaToStream%2A> method to write the schema definition of the specified types to a stream.</span></span>  
  
 [!code-cpp[MetaData.ConvertTypesToSchemaToStream#1](~/samples/snippets/cpp/VS_Snippets_Remoting/MetaData.ConvertTypesToSchemaToStream/CPP/source.cpp#1)]
 [!code-csharp[MetaData.ConvertTypesToSchemaToStream#1](~/samples/snippets/csharp/VS_Snippets_Remoting/MetaData.ConvertTypesToSchemaToStream/CS/source.cs#1)]
 [!code-vb[MetaData.ConvertTypesToSchemaToStream#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/MetaData.ConvertTypesToSchemaToStream/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RetrieveSchemaFromUrlToFile">
      <MemberSignature Language="C#" Value="public static void RetrieveSchemaFromUrlToFile (string url, string path);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RetrieveSchemaFromUrlToFile(string url, string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.MetadataServices.MetaData.RetrieveSchemaFromUrlToFile(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RetrieveSchemaFromUrlToFile (url As String, path As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RetrieveSchemaFromUrlToFile(System::String ^ url, System::String ^ path);" />
      <MemberSignature Language="F#" Value="static member RetrieveSchemaFromUrlToFile : string * string -&gt; unit" Usage="System.Runtime.Remoting.MetadataServices.MetaData.RetrieveSchemaFromUrlToFile (url, path)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="url" Type="System.String" />
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="url">
          <span data-ttu-id="55eb9-176">Adres URL, gdzie znajduje się schematu XML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="55eb9-176">The URL where the XML schema is located.</span>
          </span>
        </param>
        <param name="path">
          <span data-ttu-id="55eb9-177">Ścieżka pliku, który jest zapisywany schematu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="55eb9-177">The path of the file that the schema is written to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="55eb9-178">Pobieranie schematu XML z adresu URL i zapisuje go do określonego pliku.</span>
          <span class="sxs-lookup">
            <span data-stu-id="55eb9-178">Downloads the XML schema from a URL, and writes it to the specified file.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="55eb9-179">Jeśli plik o określonej nazwie już istnieje, zostanie zastąpiony.</span><span class="sxs-lookup"><span data-stu-id="55eb9-179">If a file with the specified name already exists, it is overwritten.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RetrieveSchemaFromUrlToStream">
      <MemberSignature Language="C#" Value="public static void RetrieveSchemaFromUrlToStream (string url, System.IO.Stream outputStream);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RetrieveSchemaFromUrlToStream(string url, class System.IO.Stream outputStream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.MetadataServices.MetaData.RetrieveSchemaFromUrlToStream(System.String,System.IO.Stream)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RetrieveSchemaFromUrlToStream (url As String, outputStream As Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RetrieveSchemaFromUrlToStream(System::String ^ url, System::IO::Stream ^ outputStream);" />
      <MemberSignature Language="F#" Value="static member RetrieveSchemaFromUrlToStream : string * System.IO.Stream -&gt; unit" Usage="System.Runtime.Remoting.MetadataServices.MetaData.RetrieveSchemaFromUrlToStream (url, outputStream)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="url" Type="System.String" />
        <Parameter Name="outputStream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="url">
          <span data-ttu-id="55eb9-180">Adres URL, gdzie znajduje się schematu XML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="55eb9-180">The URL where the XML schema is located.</span>
          </span>
        </param>
        <param name="outputStream">
          <span data-ttu-id="55eb9-181">
            <see cref="T:System.IO.Stream" /> Zapisywanych schematu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="55eb9-181">The <see cref="T:System.IO.Stream" /> that the schema is written to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="55eb9-182">Pobieranie schematu XML z adresu URL i zapisuje go do określonego strumienia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="55eb9-182">Downloads the XML schema from a URL, and writes it to the specified stream.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveStreamToFile">
      <MemberSignature Language="C#" Value="public static void SaveStreamToFile (System.IO.Stream inputStream, string path);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SaveStreamToFile(class System.IO.Stream inputStream, string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.MetadataServices.MetaData.SaveStreamToFile(System.IO.Stream,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SaveStreamToFile (inputStream As Stream, path As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SaveStreamToFile(System::IO::Stream ^ inputStream, System::String ^ path);" />
      <MemberSignature Language="F#" Value="static member SaveStreamToFile : System.IO.Stream * string -&gt; unit" Usage="System.Runtime.Remoting.MetadataServices.MetaData.SaveStreamToFile (inputStream, path)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inputStream" Type="System.IO.Stream" />
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="inputStream">
          <span data-ttu-id="55eb9-183">Strumień, który można zapisać do określonego pliku.</span>
          <span class="sxs-lookup">
            <span data-stu-id="55eb9-183">The stream to write to the specified file.</span>
          </span>
        </param>
        <param name="path">
          <span data-ttu-id="55eb9-184">Plik, który jest zapisywany strumienia wejściowego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="55eb9-184">The file that the input stream is written to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="55eb9-185">Strumień wejściowy zapisuje do pliku o określonej nazwie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="55eb9-185">Saves the input stream to a file with the specified name.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="55eb9-186">Jeśli plik o określonej nazwie już istnieje, zostanie zastąpiony.</span><span class="sxs-lookup"><span data-stu-id="55eb9-186">If a file with the specified name already exists, it is overwritten.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>