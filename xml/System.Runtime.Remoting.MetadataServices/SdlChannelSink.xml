<Type Name="SdlChannelSink" FullName="System.Runtime.Remoting.MetadataServices.SdlChannelSink">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="26a23b101546a07f7526f7915ebf6f7f738a6225" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37634214" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class SdlChannelSink : System.Runtime.Remoting.Channels.IChannelSinkBase, System.Runtime.Remoting.Channels.IServerChannelSink" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SdlChannelSink extends System.Object implements class System.Runtime.Remoting.Channels.IChannelSinkBase, class System.Runtime.Remoting.Channels.IServerChannelSink" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.Remoting.MetadataServices.SdlChannelSink" />
  <TypeSignature Language="VB.NET" Value="Public Class SdlChannelSink&#xA;Implements IChannelSinkBase, IServerChannelSink" />
  <TypeSignature Language="C++ CLI" Value="public ref class SdlChannelSink : System::Runtime::Remoting::Channels::IChannelSinkBase, System::Runtime::Remoting::Channels::IServerChannelSink" />
  <TypeSignature Language="F#" Value="type SdlChannelSink = class&#xA;    interface IServerChannelSink&#xA;    interface IChannelSinkBase" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Remoting</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Runtime.Remoting.Channels.IChannelSinkBase</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Runtime.Remoting.Channels.IServerChannelSink</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Udostępnia implementację dla serwera ujścia kanału, który dynamicznie generuje Web Services Description Language (WSDL) na serwerze.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Runtime.Remoting.MetadataServices.SdlChannelSink> Służy do tworzenia WSDL w sytuacjach, w których adres URL kończy się ciągiem "? wsdl".  
  
 W poniższej tabeli przedstawiono kanał właściwości konfiguracji, które mogą być określone dla tego obiektu sink kanału. Pierwsze dwie właściwości są łączone w celu kontrolowania publikacja WSDL obiektów opublikowanych przez domeny aplikacji. Jeśli `false` określono pierwszą właściwością WSDL nie jest zwracany, niezależnie od tego, drugą właściwością. (Wartość domyślna to `true`.) W przeciwnym razie drugi określa, czy obiekt metadanych globalny identyfikator URI jest uprawniony do odpowiedzi. (Wartość domyślna to `false`.)  
  
|Właściwość|Opis|  
|--------------|-----------------|  
|`metadataEnabled`|Wartość logiczna określająca, czy honorować żądania, które kończą się na "? wsdl" przypadku ten zbiornik w łańcuchu ujścia kanału. Ustawieniem domyślnym jest `true`. Jeśli `false`, obiekt sink zgłasza wyjątek, we wszystkich przypadkach, w którym wymagany jest metadanych dla dowolnego obiektu w domenie aplikacji.<br /><br /> Ta właściwość jest obsługiwana tylko przez .NET Framework w wersji 1.1 na następujących platformach: Windows 98, Windows NT 4.0, Windows Millennium Edition, Windows 2000, Windows XP Home Edition, Windows XP Professional z rodziny Windows Server 2003.|  
|`remoteApplicationMetadataEnabled`|Wartość logiczna określająca, czy honoruje żądań obiekt URI "RemoteApplicationMetadata? wsdl", która zwraca WSDL, który opisuje wszystkie obiekty, które są publikowane przez domenę aplikacji. Jeśli `false`, a następnie zgłasza wyjątek, wszelkie żądania do "RemoteApplicationMetadata.rem". Wszystkie inne "? wsdl" żądań dla danego obiektu identyfikatory URI są uznawane. Jeśli `true`, żądanie metadanych globalnej zostanie uznane. Ustawieniem domyślnym jest `false`.<br /><br /> Ta właściwość jest obsługiwana tylko przez .NET Framework w wersji 1.1 na następujących platformach: Windows 98, Windows NT 4.0, Windows Millennium Edition, Windows 2000, Windows XP Home Edition, Windows XP Professional z rodziny Windows Server 2003.|  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SdlChannelSink (System.Runtime.Remoting.Channels.IChannelReceiver receiver, System.Runtime.Remoting.Channels.IServerChannelSink nextSink);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Runtime.Remoting.Channels.IChannelReceiver receiver, class System.Runtime.Remoting.Channels.IServerChannelSink nextSink) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.MetadataServices.SdlChannelSink.#ctor(System.Runtime.Remoting.Channels.IChannelReceiver,System.Runtime.Remoting.Channels.IServerChannelSink)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (receiver As IChannelReceiver, nextSink As IServerChannelSink)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SdlChannelSink(System::Runtime::Remoting::Channels::IChannelReceiver ^ receiver, System::Runtime::Remoting::Channels::IServerChannelSink ^ nextSink);" />
      <MemberSignature Language="F#" Value="new System.Runtime.Remoting.MetadataServices.SdlChannelSink : System.Runtime.Remoting.Channels.IChannelReceiver * System.Runtime.Remoting.Channels.IServerChannelSink -&gt; System.Runtime.Remoting.MetadataServices.SdlChannelSink" Usage="new System.Runtime.Remoting.MetadataServices.SdlChannelSink (receiver, nextSink)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="receiver" Type="System.Runtime.Remoting.Channels.IChannelReceiver" />
        <Parameter Name="nextSink" Type="System.Runtime.Remoting.Channels.IServerChannelSink" />
      </Parameters>
      <Docs>
        <param name="receiver">Wskazuje kanał, który będą otrzymywać wiadomości przez nowe wystąpienie klasy <see cref="T:System.Runtime.Remoting.MetadataServices.SdlChannelSink" />.</param>
        <param name="nextSink">Następny obiekt sink w łańcuchu ujścia.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Runtime.Remoting.MetadataServices.SdlChannelSink" /> klasy.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AsyncProcessResponse">
      <MemberSignature Language="C#" Value="public void AsyncProcessResponse (System.Runtime.Remoting.Channels.IServerResponseChannelSinkStack sinkStack, object state, System.Runtime.Remoting.Messaging.IMessage msg, System.Runtime.Remoting.Channels.ITransportHeaders headers, System.IO.Stream stream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AsyncProcessResponse(class System.Runtime.Remoting.Channels.IServerResponseChannelSinkStack sinkStack, object state, class System.Runtime.Remoting.Messaging.IMessage msg, class System.Runtime.Remoting.Channels.ITransportHeaders headers, class System.IO.Stream stream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.MetadataServices.SdlChannelSink.AsyncProcessResponse(System.Runtime.Remoting.Channels.IServerResponseChannelSinkStack,System.Object,System.Runtime.Remoting.Messaging.IMessage,System.Runtime.Remoting.Channels.ITransportHeaders,System.IO.Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AsyncProcessResponse(System::Runtime::Remoting::Channels::IServerResponseChannelSinkStack ^ sinkStack, System::Object ^ state, System::Runtime::Remoting::Messaging::IMessage ^ msg, System::Runtime::Remoting::Channels::ITransportHeaders ^ headers, System::IO::Stream ^ stream);" />
      <MemberSignature Language="F#" Value="abstract member AsyncProcessResponse : System.Runtime.Remoting.Channels.IServerResponseChannelSinkStack * obj * System.Runtime.Remoting.Messaging.IMessage * System.Runtime.Remoting.Channels.ITransportHeaders * System.IO.Stream -&gt; unit&#xA;override this.AsyncProcessResponse : System.Runtime.Remoting.Channels.IServerResponseChannelSinkStack * obj * System.Runtime.Remoting.Messaging.IMessage * System.Runtime.Remoting.Channels.ITransportHeaders * System.IO.Stream -&gt; unit" Usage="sdlChannelSink.AsyncProcessResponse (sinkStack, state, msg, headers, stream)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sinkStack" Type="System.Runtime.Remoting.Channels.IServerResponseChannelSinkStack" />
        <Parameter Name="state" Type="System.Object" />
        <Parameter Name="msg" Type="System.Runtime.Remoting.Messaging.IMessage" />
        <Parameter Name="headers" Type="System.Runtime.Remoting.Channels.ITransportHeaders" />
        <Parameter Name="stream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="sinkStack">Stos ujścia, które mogą prowadzić do ujścia transport serwera.</param>
        <param name="state">Informacje związane z bieżącego obiektu sink, wygenerowane na stronie żądania i potrzebny po stronie odpowiedzi.</param>
        <param name="msg">Komunikat odpowiedzi.</param>
        <param name="headers">Nagłówki do dodania do nagłówka wiadomości zwracany do klienta.</param>
        <param name="stream">Nagłówek strumienia z powrotem do ujścia transportu.</param>
        <summary>Żądania przetwarzania bieżącego obiektu sink odpowiedzi z wywołania metody, które zostało wysłane asynchronicznie.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetResponseStream">
      <MemberSignature Language="C#" Value="public System.IO.Stream GetResponseStream (System.Runtime.Remoting.Channels.IServerResponseChannelSinkStack sinkStack, object state, System.Runtime.Remoting.Messaging.IMessage msg, System.Runtime.Remoting.Channels.ITransportHeaders headers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IO.Stream GetResponseStream(class System.Runtime.Remoting.Channels.IServerResponseChannelSinkStack sinkStack, object state, class System.Runtime.Remoting.Messaging.IMessage msg, class System.Runtime.Remoting.Channels.ITransportHeaders headers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.MetadataServices.SdlChannelSink.GetResponseStream(System.Runtime.Remoting.Channels.IServerResponseChannelSinkStack,System.Object,System.Runtime.Remoting.Messaging.IMessage,System.Runtime.Remoting.Channels.ITransportHeaders)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetResponseStream (sinkStack As IServerResponseChannelSinkStack, state As Object, msg As IMessage, headers As ITransportHeaders) As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IO::Stream ^ GetResponseStream(System::Runtime::Remoting::Channels::IServerResponseChannelSinkStack ^ sinkStack, System::Object ^ state, System::Runtime::Remoting::Messaging::IMessage ^ msg, System::Runtime::Remoting::Channels::ITransportHeaders ^ headers);" />
      <MemberSignature Language="F#" Value="abstract member GetResponseStream : System.Runtime.Remoting.Channels.IServerResponseChannelSinkStack * obj * System.Runtime.Remoting.Messaging.IMessage * System.Runtime.Remoting.Channels.ITransportHeaders -&gt; System.IO.Stream&#xA;override this.GetResponseStream : System.Runtime.Remoting.Channels.IServerResponseChannelSinkStack * obj * System.Runtime.Remoting.Messaging.IMessage * System.Runtime.Remoting.Channels.ITransportHeaders -&gt; System.IO.Stream" Usage="sdlChannelSink.GetResponseStream (sinkStack, state, msg, headers)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sinkStack" Type="System.Runtime.Remoting.Channels.IServerResponseChannelSinkStack" />
        <Parameter Name="state" Type="System.Object" />
        <Parameter Name="msg" Type="System.Runtime.Remoting.Messaging.IMessage" />
        <Parameter Name="headers" Type="System.Runtime.Remoting.Channels.ITransportHeaders" />
      </Parameters>
      <Docs>
        <param name="sinkStack">Stos ujścia, które mogą prowadzić do ujścia transport serwera.</param>
        <param name="state">Informacje związane z bieżącego obiektu sink, wygenerowane na stronie żądania i potrzebny po stronie odpowiedzi.</param>
        <param name="msg">Komunikat odpowiedzi do serializacji.</param>
        <param name="headers">Nagłówki, które należy umieścić w strumieniu odpowiedzi do klienta.</param>
        <summary>Zwraca <see cref="T:System.IO.Stream" /> na której podany odpowiedź ma być serializowana.</summary>
        <returns>
          <see cref="T:System.IO.Stream" /> Na której podany odpowiedź ma być serializowana.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bieżąca metoda jest wywoływana, gdy w strumieniu odpowiedzi musi zostać utworzona.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NextChannelSink">
      <MemberSignature Language="C#" Value="public System.Runtime.Remoting.Channels.IServerChannelSink NextChannelSink { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Runtime.Remoting.Channels.IServerChannelSink NextChannelSink" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Remoting.MetadataServices.SdlChannelSink.NextChannelSink" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NextChannelSink As IServerChannelSink" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Runtime::Remoting::Channels::IServerChannelSink ^ NextChannelSink { System::Runtime::Remoting::Channels::IServerChannelSink ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.NextChannelSink : System.Runtime.Remoting.Channels.IServerChannelSink" Usage="System.Runtime.Remoting.MetadataServices.SdlChannelSink.NextChannelSink" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.Channels.IServerChannelSink</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera następnych <see cref="T:System.Runtime.Remoting.Channels.IServerChannelSink" /> w łańcuchu ujścia.</summary>
        <value>Następne <see cref="T:System.Runtime.Remoting.Channels.IServerChannelSink" /> w łańcuchu ujścia.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProcessMessage">
      <MemberSignature Language="C#" Value="public System.Runtime.Remoting.Channels.ServerProcessing ProcessMessage (System.Runtime.Remoting.Channels.IServerChannelSinkStack sinkStack, System.Runtime.Remoting.Messaging.IMessage requestMsg, System.Runtime.Remoting.Channels.ITransportHeaders requestHeaders, System.IO.Stream requestStream, out System.Runtime.Remoting.Messaging.IMessage responseMsg, out System.Runtime.Remoting.Channels.ITransportHeaders responseHeaders, out System.IO.Stream responseStream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Runtime.Remoting.Channels.ServerProcessing ProcessMessage(class System.Runtime.Remoting.Channels.IServerChannelSinkStack sinkStack, class System.Runtime.Remoting.Messaging.IMessage requestMsg, class System.Runtime.Remoting.Channels.ITransportHeaders requestHeaders, class System.IO.Stream requestStream, [out] class System.Runtime.Remoting.Messaging.IMessage&amp; responseMsg, [out] class System.Runtime.Remoting.Channels.ITransportHeaders&amp; responseHeaders, [out] class System.IO.Stream&amp; responseStream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.MetadataServices.SdlChannelSink.ProcessMessage(System.Runtime.Remoting.Channels.IServerChannelSinkStack,System.Runtime.Remoting.Messaging.IMessage,System.Runtime.Remoting.Channels.ITransportHeaders,System.IO.Stream,System.Runtime.Remoting.Messaging.IMessage@,System.Runtime.Remoting.Channels.ITransportHeaders@,System.IO.Stream@)" />
      <MemberSignature Language="VB.NET" Value="Public Function ProcessMessage (sinkStack As IServerChannelSinkStack, requestMsg As IMessage, requestHeaders As ITransportHeaders, requestStream As Stream, ByRef responseMsg As IMessage, ByRef responseHeaders As ITransportHeaders, ByRef responseStream As Stream) As ServerProcessing" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Runtime::Remoting::Channels::ServerProcessing ProcessMessage(System::Runtime::Remoting::Channels::IServerChannelSinkStack ^ sinkStack, System::Runtime::Remoting::Messaging::IMessage ^ requestMsg, System::Runtime::Remoting::Channels::ITransportHeaders ^ requestHeaders, System::IO::Stream ^ requestStream, [Runtime::InteropServices::Out] System::Runtime::Remoting::Messaging::IMessage ^ % responseMsg, [Runtime::InteropServices::Out] System::Runtime::Remoting::Channels::ITransportHeaders ^ % responseHeaders, [Runtime::InteropServices::Out] System::IO::Stream ^ % responseStream);" />
      <MemberSignature Language="F#" Value="abstract member ProcessMessage : System.Runtime.Remoting.Channels.IServerChannelSinkStack * System.Runtime.Remoting.Messaging.IMessage * System.Runtime.Remoting.Channels.ITransportHeaders * System.IO.Stream *  *  *  -&gt; System.Runtime.Remoting.Channels.ServerProcessing&#xA;override this.ProcessMessage : System.Runtime.Remoting.Channels.IServerChannelSinkStack * System.Runtime.Remoting.Messaging.IMessage * System.Runtime.Remoting.Channels.ITransportHeaders * System.IO.Stream *  *  *  -&gt; System.Runtime.Remoting.Channels.ServerProcessing" Usage="sdlChannelSink.ProcessMessage (sinkStack, requestMsg, requestHeaders, requestStream, responseMsg, responseHeaders, responseStream)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.Channels.ServerProcessing</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sinkStack" Type="System.Runtime.Remoting.Channels.IServerChannelSinkStack" />
        <Parameter Name="requestMsg" Type="System.Runtime.Remoting.Messaging.IMessage" />
        <Parameter Name="requestHeaders" Type="System.Runtime.Remoting.Channels.ITransportHeaders" />
        <Parameter Name="requestStream" Type="System.IO.Stream" />
        <Parameter Name="responseMsg" Type="System.Runtime.Remoting.Messaging.IMessage&amp;" RefType="out" />
        <Parameter Name="responseHeaders" Type="System.Runtime.Remoting.Channels.ITransportHeaders&amp;" RefType="out" />
        <Parameter Name="responseStream" Type="System.IO.Stream&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="sinkStack">Stos kanału wychwytywanie wywołaniu bieżącym ujścia.</param>
        <param name="requestMsg">Komunikat, który zawiera żądanie.</param>
        <param name="requestHeaders">Nagłówki, które są pobierane z przychodzących wiadomości od klienta.</param>
        <param name="requestStream">Strumień, który musi być przetwarzane i przekazywane do ujścia deserializacji.</param>
        <param name="responseMsg">Po powrocie z tej metody zawiera <see cref="T:System.Runtime.Remoting.Messaging.IMessage" /> zawierający komunikat odpowiedzi. Ten parametr jest przekazywany niezainicjowany.</param>
        <param name="responseHeaders">Po powrocie z tej metody zawiera <see cref="T:System.Runtime.Remoting.Channels.ITransportHeaders" /> zawierający nagłówki do dodania do zwrócenia nagłówek wiadomości do klienta. Ten parametr jest przekazywany niezainicjowany.</param>
        <param name="responseStream">Po powrocie z tej metody zawiera <see cref="T:System.IO.Stream" /> czyli nagłówka do ujścia transportu. Ten parametr jest przekazywany niezainicjowany.</param>
        <summary>Komunikat żądania przetwarzania bieżącego obiektu sink.</summary>
        <returns>A <see cref="T:System.Runtime.Remoting.Channels.ServerProcessing" /> wartość stanu, który zawiera informacje o przetwarzaniu wiadomości.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zadania serwera proxy jest Konwertuj wywołanie metody, która jest wywoływana w nim na obiekt komunikatu. Obiekt komunikatu, która implementuje <xref:System.Runtime.Remoting.Messaging.IMessage> interfejsu, jest przekazywany po stronie klienta-to-server end, wywołując <xref:System.Runtime.Remoting.Channels.IServerChannelSink.ProcessMessage%2A> obiektów sink komunikatu. Ujścia wiadomości są ze sobą w sposób, co oznacza, że obiekt sink każdy komunikat jest odpowiedzialny za wywołanie <xref:System.Runtime.Remoting.Channels.IServerChannelSink.ProcessMessage%2A> na następny ujścia komunikat po wykonaniu pracy. Na przykład obiekt sink wiadomość dotycząca synchronizacji może spowodować blokady w celu pozyskiwania lub wydania i delegować domenę do ujścia transmisji komunikatów.  
  
 Gdy program formatujący kanału ujścia otrzymuje komunikat, że musi być wysyłane za pośrednictwem kanału, wywoływanych przez nią <xref:System.Runtime.Remoting.Messaging.IMessageSink.SyncProcessMessage%2A>, przekazując komunikatu jako parametr. Ujścia program formatujący utworzy transportu nagłówek tablicy i wywołania <xref:System.Runtime.Remoting.Channels.IClientChannelSink.GetRequestStream%2A> względem obiektu sink elementu formatującego. To wywołanie jest przekazywany w łańcuchu ujścia, i dowolnego ujścia utworzyć strumienia żądania, który jest przekazywany z powrotem do ujścia elementu formatującego. Po to wywołanie zwraca, komunikat jest serializowana, <xref:System.Runtime.Remoting.Channels.IClientChannelSink.ProcessMessage%2A> jest wywoływana w pierwszym łańcucha w łańcuchu ujścia i wiadomości są przekazywane do ujścia kanału.  
  
 Po wychwytywanie kanał jest wyświetlany komunikat, mogą zapisywać dane w strumieniu, Dodaj nagłówki do tablicy nagłówka i dodają same siebie do stosu ujścia przed przekazaniem wywołania do następnego ujścia. Gdy wywołanie osiągnie ujścia transportu na końcu łańcucha, ujścia transportu wysyła nagłówki i serializacji komunikatu za pośrednictwem kanału do serwera, w której proces został wycofany.  
  
 Jeśli taka wiadomość dotrze po stronie serwera, ujścia transportu pobiera nagłówki wiadomości ze strumienia serializacji i przekazuje je za pomocą łańcucha ujścia, aż do osiągnięcia ujścia elementu formatującego. Obiekt sink program formatujący następnie deserializuje komunikat i przekazuje go do komunikacji zdalnej, gdy komunikat jest przekształcane w wywołaniu metody i nosi nazwę obiektu serwera.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Properties">
      <MemberSignature Language="C#" Value="public System.Collections.IDictionary Properties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.IDictionary Properties" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Remoting.MetadataServices.SdlChannelSink.Properties" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Properties As IDictionary" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::IDictionary ^ Properties { System::Collections::IDictionary ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Properties : System.Collections.IDictionary" Usage="System.Runtime.Remoting.MetadataServices.SdlChannelSink.Properties" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IDictionary</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera <see cref="T:System.Collections.IDictionary" /> właściwości bieżącego obiektu sink kanału.</summary>
        <value>A <see cref="T:System.Collections.IDictionary" /> właściwości bieżącego obiektu sink kanału.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Aby uzyskać więcej informacji, zobacz [ &#91; \<topic://cpconchannelformatterconfigurationproperties >&#93;](http://msdn.microsoft.com/library/226ecf74-ebbd-4ea0-a701-dcf4441deefe).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>