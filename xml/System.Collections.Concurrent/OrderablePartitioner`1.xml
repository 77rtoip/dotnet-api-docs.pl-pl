<Type Name="OrderablePartitioner&lt;TSource&gt;" FullName="System.Collections.Concurrent.OrderablePartitioner&lt;TSource&gt;">
  <TypeSignature Language="C#" Value="public abstract class OrderablePartitioner&lt;TSource&gt; : System.Collections.Concurrent.Partitioner&lt;TSource&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit OrderablePartitioner`1&lt;TSource&gt; extends System.Collections.Concurrent.Partitioner`1&lt;!TSource&gt;" />
  <TypeSignature Language="DocId" Value="T:System.Collections.Concurrent.OrderablePartitioner`1" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class OrderablePartitioner(Of TSource)&#xA;Inherits Partitioner(Of TSource)" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename TSource&gt;&#xA;public ref class OrderablePartitioner abstract : System::Collections::Concurrent::Partitioner&lt;TSource&gt;" />
  <AssemblyInfo>
    <AssemblyName>System.Collections.Concurrent</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.14.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TSource" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Collections.Concurrent.Partitioner&lt;TSource&gt;</BaseTypeName>
    <BaseTypeArguments>
      <BaseTypeArgument TypeParamName="TSource">TSource</BaseTypeArgument>
    </BaseTypeArguments>
  </Base>
  <Interfaces />
  <Docs>
    <typeparam name="TSource"><span data-ttu-id="b0243-101">Typ elementów w kolekcji.</span><span class="sxs-lookup"><span data-stu-id="b0243-101">Type of the elements in the collection.</span></span></typeparam>
    <summary><span data-ttu-id="b0243-102">Reprezentuje określonego sposób rozdzielania źródła danych może ustalać kolejności do wielu partycji.</span><span class="sxs-lookup"><span data-stu-id="b0243-102">Represents a particular manner of splitting an orderable data source into multiple partitions.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0243-103">Implementacja klasy pochodnej jest odpowiedzialny za kolejność elementów na pary klucz wartość w jakikolwiek sposób jest odpowiedni.</span><span class="sxs-lookup"><span data-stu-id="b0243-103">The implementation of the derived class is responsible for ordering the elements into key-value pairs in whatever manner is appropriate.</span></span> <span data-ttu-id="b0243-104">Aby uzyskać więcej informacji, zobacz [niestandardowe Partycjonery dla PLINQ i TPL](~/docs/standard/parallel-programming/custom-partitioners-for-plinq-and-tpl.md).</span><span class="sxs-lookup"><span data-stu-id="b0243-104">For more information, see [Custom Partitioners for PLINQ and TPL](~/docs/standard/parallel-programming/custom-partitioners-for-plinq-and-tpl.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b0243-105">Poniższy przykład przedstawia sposób wykonania prędkości partycjonerem, który zwraca jeden element w czasie:</span><span class="sxs-lookup"><span data-stu-id="b0243-105">The following example shows how to implement an orderable partitioner that returns one element at a time:</span></span>  
  
 [!code-csharp[System.Collections.Concurrent.OrderablePartitioner#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.concurrent.orderablepartitioner/cs/orderablepartitioner.cs#1)]
 [!code-vb[System.Collections.Concurrent.OrderablePartitioner#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.concurrent.orderablepartitioner/vb/orderablepartitioner.vb#1)]  
  
 ]]></format>
    </remarks>
    <threadsafe><span data-ttu-id="b0243-106">Wszystkie publiczne elementy członkowskie <see cref="T:System.Collections.Concurrent.OrderablePartitioner`1" /> są wątkowo i może być wywoływana przez wiele wątków jednocześnie.</span><span class="sxs-lookup"><span data-stu-id="b0243-106">All public members of <see cref="T:System.Collections.Concurrent.OrderablePartitioner`1" /> are thread-safe and may be called from multiple threads concurrently.</span></span></threadsafe>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected OrderablePartitioner (bool keysOrderedInEachPartition, bool keysOrderedAcrossPartitions, bool keysNormalized);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(bool keysOrderedInEachPartition, bool keysOrderedAcrossPartitions, bool keysNormalized) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.OrderablePartitioner`1.#ctor(System.Boolean,System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (keysOrderedInEachPartition As Boolean, keysOrderedAcrossPartitions As Boolean, keysNormalized As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; OrderablePartitioner(bool keysOrderedInEachPartition, bool keysOrderedAcrossPartitions, bool keysNormalized);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="keysOrderedInEachPartition" Type="System.Boolean" />
        <Parameter Name="keysOrderedAcrossPartitions" Type="System.Boolean" />
        <Parameter Name="keysNormalized" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="keysOrderedInEachPartition"><span data-ttu-id="b0243-107">Wskazuje, czy elementy w każdej partycji są zwróciło kolejności zwiększenie kluczy.</span><span class="sxs-lookup"><span data-stu-id="b0243-107">Indicates whether the elements in each partition are yielded in the order of increasing keys.</span></span></param>
        <param name="keysOrderedAcrossPartitions"><span data-ttu-id="b0243-108">Wskazuje, czy elementy w starszych partycji zawsze występować przed elementów w późniejszym partycji.</span><span class="sxs-lookup"><span data-stu-id="b0243-108">Indicates whether elements in an earlier partition always come before elements in a later partition.</span></span> <span data-ttu-id="b0243-109">Jeśli PRAWDA, każdy element w partycji 0 ma klucz kolejności mniejsze niż dowolny element w partycji 1 każdego elementu w partycji 1 ma klucz kolejności mniejsze niż dowolny element w partycji 2 i tak dalej.</span><span class="sxs-lookup"><span data-stu-id="b0243-109">If true, each element in partition 0 has a smaller order key than any element in partition 1, each element in partition 1 has a smaller order key than any element in partition 2, and so on.</span></span></param>
        <param name="keysNormalized"><span data-ttu-id="b0243-110">Wskazuje, czy klucze są znormalizowany.</span><span class="sxs-lookup"><span data-stu-id="b0243-110">Indicates whether keys are normalized.</span></span> <span data-ttu-id="b0243-111">Jeśli PRAWDA, wszystkie klucze kolejność są różne liczby całkowite z zakresu [0..</span><span class="sxs-lookup"><span data-stu-id="b0243-111">If true, all order keys are distinct integers in the range [0 ..</span></span> <span data-ttu-id="b0243-112">numberOfElements-1].</span><span class="sxs-lookup"><span data-stu-id="b0243-112">numberOfElements-1].</span></span> <span data-ttu-id="b0243-113">Jeśli FAŁSZ, należy nadal kluczy zamówienia się różnić, ale ich względną kolejność uważa nie ich wartości bezwzględne.</span><span class="sxs-lookup"><span data-stu-id="b0243-113">If false, order keys must still be distinct, but only their relative order is considered, not their absolute values.</span></span></param>
        <summary><span data-ttu-id="b0243-114">Metoda wywoływana z konstruktorów w klasach pochodnych zainicjować <see cref="T:System.Collections.Concurrent.OrderablePartitioner`1" /> klasy z określonych warunków ograniczających na kluczy indeksu.</span><span class="sxs-lookup"><span data-stu-id="b0243-114">Called from constructors in derived classes to initialize the <see cref="T:System.Collections.Concurrent.OrderablePartitioner`1" /> class with the specified constraints on the index keys.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0243-115">Aby uzyskać więcej informacji, zobacz [niestandardowe Partycjonery dla PLINQ i TPL](~/docs/standard/parallel-programming/custom-partitioners-for-plinq-and-tpl.md).</span><span class="sxs-lookup"><span data-stu-id="b0243-115">For more information, see [Custom Partitioners for PLINQ and TPL](~/docs/standard/parallel-programming/custom-partitioners-for-plinq-and-tpl.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDynamicPartitions">
      <MemberSignature Language="C#" Value="public override System.Collections.Generic.IEnumerable&lt;TSource&gt; GetDynamicPartitions ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Collections.Generic.IEnumerable`1&lt;!TSource&gt; GetDynamicPartitions() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.OrderablePartitioner`1.GetDynamicPartitions" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetDynamicPartitions () As IEnumerable(Of TSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Collections::Generic::IEnumerable&lt;TSource&gt; ^ GetDynamicPartitions();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;TSource&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b0243-116">Tworzy obiekt, który można partycji podstawowej kolekcji do zmiennej liczby partycji.</span><span class="sxs-lookup"><span data-stu-id="b0243-116">Creates an object that can partition the underlying collection into a variable number of partitions.</span></span></summary>
        <returns><span data-ttu-id="b0243-117">Obiekt, który można utworzyć partycji w źródle danych.</span><span class="sxs-lookup"><span data-stu-id="b0243-117">An object that can create partitions over the underlying data source.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0243-118">Implementuje zwrócony obiekt <xref:System.Collections.Generic.IEnumerable%601?displayProperty=nameWithType> interfejsu.</span><span class="sxs-lookup"><span data-stu-id="b0243-118">The returned object implements the <xref:System.Collections.Generic.IEnumerable%601?displayProperty=nameWithType> interface.</span></span> <span data-ttu-id="b0243-119">Wywoływanie <xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A> obiektu tworzy innej partycji w sekwencji.</span><span class="sxs-lookup"><span data-stu-id="b0243-119">Calling <xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A> on the object creates another partition over the sequence.</span></span>  
  
 <span data-ttu-id="b0243-120">Domyślna implementacja zapewnia takie samo zachowanie jako <xref:System.Collections.Concurrent.OrderablePartitioner%601.GetOrderableDynamicPartitions%2A> z tą różnicą, że zestaw zwrócony partycji nie ma kluczy dla elementów.</span><span class="sxs-lookup"><span data-stu-id="b0243-120">The default implementation provides the same behavior as <xref:System.Collections.Concurrent.OrderablePartitioner%601.GetOrderableDynamicPartitions%2A> except that the returned set of partitions does not provide the keys for the elements.</span></span>  
  
 <span data-ttu-id="b0243-121"><xref:System.Collections.Concurrent.OrderablePartitioner%601.GetDynamicPartitions%2A> Metoda jest obsługiwana tylko, jeśli <xref:System.Collections.Concurrent.Partitioner%601.SupportsDynamicPartitions%2A> właściwość zwraca wartość true.</span><span class="sxs-lookup"><span data-stu-id="b0243-121">The <xref:System.Collections.Concurrent.OrderablePartitioner%601.GetDynamicPartitions%2A> method is only supported if the <xref:System.Collections.Concurrent.Partitioner%601.SupportsDynamicPartitions%2A> property returns true.</span></span>  
  
 <span data-ttu-id="b0243-122">Aby uzyskać więcej informacji, zobacz [niestandardowe Partycjonery dla PLINQ i TPL](~/docs/standard/parallel-programming/custom-partitioners-for-plinq-and-tpl.md).</span><span class="sxs-lookup"><span data-stu-id="b0243-122">For more information, see [Custom Partitioners for PLINQ and TPL](~/docs/standard/parallel-programming/custom-partitioners-for-plinq-and-tpl.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="b0243-123">Dynamiczne partycjonowanie nie jest obsługiwana przez klasę podstawową.</span><span class="sxs-lookup"><span data-stu-id="b0243-123">Dynamic partitioning is not supported by the base class.</span></span> <span data-ttu-id="b0243-124">Musi być implementowana w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="b0243-124">It must be implemented in derived classes.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetOrderableDynamicPartitions">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;long,TSource&gt;&gt; GetOrderableDynamicPartitions ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;int64, !TSource&gt;&gt; GetOrderableDynamicPartitions() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.OrderablePartitioner`1.GetOrderableDynamicPartitions" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetOrderableDynamicPartitions () As IEnumerable(Of KeyValuePair(Of Long, TSource))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::Generic::IEnumerable&lt;System::Collections::Generic::KeyValuePair&lt;long, TSource&gt;&gt; ^ GetOrderableDynamicPartitions();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;System.Int64,TSource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b0243-125">Tworzy obiekt, który można partycji podstawowej kolekcji do zmiennej liczby partycji.</span><span class="sxs-lookup"><span data-stu-id="b0243-125">Creates an object that can partition the underlying collection into a variable number of partitions.</span></span></summary>
        <returns><span data-ttu-id="b0243-126">Obiekt, który można utworzyć partycji w źródle danych.</span><span class="sxs-lookup"><span data-stu-id="b0243-126">An object that can create partitions over the underlying data source.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0243-127">Implementuje zwrócony obiekt <xref:System.Collections.Generic.IEnumerable%601?displayProperty=nameWithType> interfejsu.</span><span class="sxs-lookup"><span data-stu-id="b0243-127">The returned object implements the <xref:System.Collections.Generic.IEnumerable%601?displayProperty=nameWithType> interface.</span></span> <span data-ttu-id="b0243-128">Wywoływanie <xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A> obiektu tworzy innej partycji w sekwencji.</span><span class="sxs-lookup"><span data-stu-id="b0243-128">Calling <xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A> on the object creates another partition over the sequence.</span></span>  
  
 <span data-ttu-id="b0243-129">Każda partycja jest reprezentowany jako moduł wyliczający za pośrednictwem pary klucz wartość.</span><span class="sxs-lookup"><span data-stu-id="b0243-129">Each partition is represented as an enumerator over key-value pairs.</span></span> <span data-ttu-id="b0243-130">Wartość w parze jest samego elementu, a klucz jest liczbą całkowitą, która określa względne uporządkowanie tego elementu do innych elementów.</span><span class="sxs-lookup"><span data-stu-id="b0243-130">The value in the pair is the element itself, and the key is an integer which determines the relative ordering of this element against other elements.</span></span>  
  
 <span data-ttu-id="b0243-131"><xref:System.Collections.Concurrent.OrderablePartitioner%601.GetOrderableDynamicPartitions%2A> Metoda jest obsługiwana tylko, jeśli <xref:System.Collections.Concurrent.Partitioner%601.SupportsDynamicPartitions%2A> właściwość zwraca wartość true.</span><span class="sxs-lookup"><span data-stu-id="b0243-131">The <xref:System.Collections.Concurrent.OrderablePartitioner%601.GetOrderableDynamicPartitions%2A> method is only supported if the <xref:System.Collections.Concurrent.Partitioner%601.SupportsDynamicPartitions%2A> property returns true.</span></span>  
  
 <span data-ttu-id="b0243-132">Aby uzyskać więcej informacji, zobacz [niestandardowe Partycjonery dla PLINQ i TPL](~/docs/standard/parallel-programming/custom-partitioners-for-plinq-and-tpl.md).</span><span class="sxs-lookup"><span data-stu-id="b0243-132">For more information, see [Custom Partitioners for PLINQ and TPL](~/docs/standard/parallel-programming/custom-partitioners-for-plinq-and-tpl.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="b0243-133">Dynamiczne partycjonowanie nie jest obsługiwana przez ten moduł partycjonowania.</span><span class="sxs-lookup"><span data-stu-id="b0243-133">Dynamic partitioning is not supported by this partitioner.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetOrderablePartitions">
      <MemberSignature Language="C#" Value="public abstract System.Collections.Generic.IList&lt;System.Collections.Generic.IEnumerator&lt;System.Collections.Generic.KeyValuePair&lt;long,TSource&gt;&gt;&gt; GetOrderablePartitions (int partitionCount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IList`1&lt;class System.Collections.Generic.IEnumerator`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;int64, !TSource&gt;&gt;&gt; GetOrderablePartitions(int32 partitionCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.OrderablePartitioner`1.GetOrderablePartitions(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetOrderablePartitions (partitionCount As Integer) As IList(Of IEnumerator(Of KeyValuePair(Of Long, TSource)))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Collections::Generic::IList&lt;System::Collections::Generic::IEnumerator&lt;System::Collections::Generic::KeyValuePair&lt;long, TSource&gt;&gt; ^&gt; ^ GetOrderablePartitions(int partitionCount);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Collections.Generic.IEnumerator&lt;System.Collections.Generic.KeyValuePair&lt;System.Int64,TSource&gt;&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="partitionCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="partitionCount"><span data-ttu-id="b0243-134">Liczba partycji do utworzenia.</span><span class="sxs-lookup"><span data-stu-id="b0243-134">The number of partitions to create.</span></span></param>
        <summary><span data-ttu-id="b0243-135">Partycji podstawowej kolekcji do określonej liczby partycji może ustalać kolejności.</span><span class="sxs-lookup"><span data-stu-id="b0243-135">Partitions the underlying collection into the specified number of orderable partitions.</span></span></summary>
        <returns><span data-ttu-id="b0243-136">Lista zawierająca <paramref name="partitionCount" /> wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="b0243-136">A list containing <paramref name="partitionCount" /> enumerators.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0243-137">Każda partycja jest reprezentowany jako moduł wyliczający za pośrednictwem pary klucz wartość.</span><span class="sxs-lookup"><span data-stu-id="b0243-137">Each partition is represented as an enumerator over key-value pairs.</span></span>  
  
 <span data-ttu-id="b0243-138">Wartość pary jest samego elementu, a klucz jest liczbą całkowitą, która określa względne uporządkowanie tego elementu do innych elementów w źródle danych.</span><span class="sxs-lookup"><span data-stu-id="b0243-138">The value of the pair is the element itself, and the key is an integer which determines the relative ordering of this element against other elements in the data source.</span></span>  
  
 <span data-ttu-id="b0243-139">Aby uzyskać więcej informacji, zobacz [niestandardowe Partycjonery dla PLINQ i TPL](~/docs/standard/parallel-programming/custom-partitioners-for-plinq-and-tpl.md).</span><span class="sxs-lookup"><span data-stu-id="b0243-139">For more information, see [Custom Partitioners for PLINQ and TPL](~/docs/standard/parallel-programming/custom-partitioners-for-plinq-and-tpl.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPartitions">
      <MemberSignature Language="C#" Value="public override System.Collections.Generic.IList&lt;System.Collections.Generic.IEnumerator&lt;TSource&gt;&gt; GetPartitions (int partitionCount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Collections.Generic.IList`1&lt;class System.Collections.Generic.IEnumerator`1&lt;!TSource&gt;&gt; GetPartitions(int32 partitionCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.OrderablePartitioner`1.GetPartitions(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetPartitions (partitionCount As Integer) As IList(Of IEnumerator(Of TSource))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Collections::Generic::IList&lt;System::Collections::Generic::IEnumerator&lt;TSource&gt; ^&gt; ^ GetPartitions(int partitionCount);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Collections.Generic.IEnumerator&lt;TSource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="partitionCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="partitionCount"><span data-ttu-id="b0243-140">Liczba partycji do utworzenia.</span><span class="sxs-lookup"><span data-stu-id="b0243-140">The number of partitions to create.</span></span></param>
        <summary><span data-ttu-id="b0243-141">Partycji podstawowej kolekcji do podanej liczby partycji uporządkowanej.</span><span class="sxs-lookup"><span data-stu-id="b0243-141">Partitions the underlying collection into the given number of ordered partitions.</span></span></summary>
        <returns><span data-ttu-id="b0243-142">Lista zawierająca <paramref name="partitionCount" /> wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="b0243-142">A list containing <paramref name="partitionCount" /> enumerators.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0243-143">Domyślna implementacja zapewnia takie samo zachowanie jako <xref:System.Collections.Concurrent.OrderablePartitioner%601.GetOrderablePartitions%2A> z tą różnicą, że zestaw zwrócony partycji nie ma kluczy dla elementów.</span><span class="sxs-lookup"><span data-stu-id="b0243-143">The default implementation provides the same behavior as <xref:System.Collections.Concurrent.OrderablePartitioner%601.GetOrderablePartitions%2A> except that the returned set of partitions does not provide the keys for the elements.</span></span>  
  
 <span data-ttu-id="b0243-144">Aby uzyskać więcej informacji, zobacz [niestandardowe Partycjonery dla PLINQ i TPL](~/docs/standard/parallel-programming/custom-partitioners-for-plinq-and-tpl.md).</span><span class="sxs-lookup"><span data-stu-id="b0243-144">For more information, see [Custom Partitioners for PLINQ and TPL](~/docs/standard/parallel-programming/custom-partitioners-for-plinq-and-tpl.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="KeysNormalized">
      <MemberSignature Language="C#" Value="public bool KeysNormalized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool KeysNormalized" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Concurrent.OrderablePartitioner`1.KeysNormalized" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property KeysNormalized As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool KeysNormalized { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b0243-145">Pobiera czy znormalizowany są klucze kolejności.</span><span class="sxs-lookup"><span data-stu-id="b0243-145">Gets whether order keys are normalized.</span></span></summary>
        <value><span data-ttu-id="b0243-146">wartość true, jeśli klucze są znormalizowany; w przeciwnym razie wartość false.</span><span class="sxs-lookup"><span data-stu-id="b0243-146">true if the keys are normalized; otherwise false.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0243-147">Jeśli <xref:System.Collections.Concurrent.OrderablePartitioner%601.KeysNormalized%2A> zwraca wartość PRAWDA, wszystkie klucze kolejność są różne liczby całkowite z zakresu [0..</span><span class="sxs-lookup"><span data-stu-id="b0243-147">If <xref:System.Collections.Concurrent.OrderablePartitioner%601.KeysNormalized%2A> returns true, all order keys are distinct integers in the range [0 ..</span></span> <span data-ttu-id="b0243-148">numberOfElements-1].</span><span class="sxs-lookup"><span data-stu-id="b0243-148">numberOfElements-1].</span></span> <span data-ttu-id="b0243-149">Jeśli właściwość zwraca wartość FAŁSZ, kolejność kluczy może nadal się różnić, ale tylko ich kolejność względną uważa nie ich wartości bezwzględne.</span><span class="sxs-lookup"><span data-stu-id="b0243-149">If the property returns false, order keys must still be distinct, but only their relative order is considered, not their absolute values.</span></span>  
  
 <span data-ttu-id="b0243-150">Aby uzyskać więcej informacji, zobacz [niestandardowe Partycjonery dla PLINQ i TPL](~/docs/standard/parallel-programming/custom-partitioners-for-plinq-and-tpl.md).</span><span class="sxs-lookup"><span data-stu-id="b0243-150">For more information, see [Custom Partitioners for PLINQ and TPL](~/docs/standard/parallel-programming/custom-partitioners-for-plinq-and-tpl.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="KeysOrderedAcrossPartitions">
      <MemberSignature Language="C#" Value="public bool KeysOrderedAcrossPartitions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool KeysOrderedAcrossPartitions" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Concurrent.OrderablePartitioner`1.KeysOrderedAcrossPartitions" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property KeysOrderedAcrossPartitions As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool KeysOrderedAcrossPartitions { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b0243-151">Pobiera informacje, czy elementy w starszych partycji zawsze występować przed elementów w późniejszym partycji.</span><span class="sxs-lookup"><span data-stu-id="b0243-151">Gets whether elements in an earlier partition always come before elements in a later partition.</span></span></summary>
        <value><span data-ttu-id="b0243-152">wartość true, jeśli elementy w starszych partycji zawsze występować przed elementów w późniejszym partycji; w przeciwnym razie wartość false.</span><span class="sxs-lookup"><span data-stu-id="b0243-152">true if the elements in an earlier partition always come before elements in a later partition; otherwise false.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0243-153">Jeśli <xref:System.Collections.Concurrent.OrderablePartitioner%601.KeysOrderedAcrossPartitions%2A> zwraca wartość true, każdy element w partycji 0 ma klucz kolejności mniejsze niż dowolny element w partycji 1, każdy element partycji 1 ma klucz kolejności mniejsze niż dowolny element w partycji 2 i tak dalej.</span><span class="sxs-lookup"><span data-stu-id="b0243-153">If <xref:System.Collections.Concurrent.OrderablePartitioner%601.KeysOrderedAcrossPartitions%2A> returns true, each element in partition 0 has a smaller order key than any element in partition 1, each element in partition 1 has a smaller order key than any element in partition 2, and so on.</span></span>  
  
 <span data-ttu-id="b0243-154">Aby uzyskać więcej informacji, zobacz [niestandardowe Partycjonery dla PLINQ i TPL](~/docs/standard/parallel-programming/custom-partitioners-for-plinq-and-tpl.md).</span><span class="sxs-lookup"><span data-stu-id="b0243-154">For more information, see [Custom Partitioners for PLINQ and TPL](~/docs/standard/parallel-programming/custom-partitioners-for-plinq-and-tpl.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="KeysOrderedInEachPartition">
      <MemberSignature Language="C#" Value="public bool KeysOrderedInEachPartition { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool KeysOrderedInEachPartition" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Concurrent.OrderablePartitioner`1.KeysOrderedInEachPartition" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property KeysOrderedInEachPartition As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool KeysOrderedInEachPartition { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b0243-155">Pobiera czy elementów w każdej partycji są zwróciło kolejności zwiększenie kluczy.</span><span class="sxs-lookup"><span data-stu-id="b0243-155">Gets whether elements in each partition are yielded in the order of increasing keys.</span></span></summary>
        <value><span data-ttu-id="b0243-156">wartość true, jeśli elementów w każdej partycji są zwróciło kolejności zwiększenie klucze; w przeciwnym razie wartość false.</span><span class="sxs-lookup"><span data-stu-id="b0243-156">true if the elements in each partition are yielded in the order of increasing keys; otherwise false.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0243-157">Aby uzyskać więcej informacji, zobacz [niestandardowe Partycjonery dla PLINQ i TPL](~/docs/standard/parallel-programming/custom-partitioners-for-plinq-and-tpl.md).</span><span class="sxs-lookup"><span data-stu-id="b0243-157">For more information, see [Custom Partitioners for PLINQ and TPL](~/docs/standard/parallel-programming/custom-partitioners-for-plinq-and-tpl.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>