<Type Name="ConcurrentDictionary&lt;TKey,TValue&gt;" FullName="System.Collections.Concurrent.ConcurrentDictionary&lt;TKey,TValue&gt;">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="7b5b64bda45195ab96799b7b89f2cc2e70b9f5ef" />
    <Meta Name="ms.sourcegitcommit" Value="c0c07dbd19cd7017243f9ac36915755f79bc8da6" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="11/27/2018" />
    <Meta Name="ms.locfileid" Value="52361893" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ConcurrentDictionary&lt;TKey,TValue&gt; : System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;, System.Collections.Generic.IDictionary&lt;TKey,TValue&gt;, System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;, System.Collections.Generic.IReadOnlyCollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;, System.Collections.Generic.IReadOnlyDictionary&lt;TKey,TValue&gt;, System.Collections.IDictionary" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit ConcurrentDictionary`2&lt;TKey, TValue&gt; extends System.Object implements class System.Collections.Generic.ICollection`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;!TKey, !TValue&gt;&gt;, class System.Collections.Generic.IDictionary`2&lt;!TKey, !TValue&gt;, class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;!TKey, !TValue&gt;&gt;, class System.Collections.Generic.IReadOnlyCollection`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;!TKey, !TValue&gt;&gt;, class System.Collections.Generic.IReadOnlyDictionary`2&lt;!TKey, !TValue&gt;, class System.Collections.ICollection, class System.Collections.IDictionary, class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:System.Collections.Concurrent.ConcurrentDictionary`2" />
  <TypeSignature Language="VB.NET" Value="Public Class ConcurrentDictionary(Of TKey, TValue)&#xA;Implements ICollection(Of KeyValuePair(Of TKey, TValue)), IDictionary, IDictionary(Of TKey, TValue), IEnumerable(Of KeyValuePair(Of TKey, TValue)), IReadOnlyCollection(Of KeyValuePair(Of TKey, TValue)), IReadOnlyDictionary(Of TKey, TValue)" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename TKey, typename TValue&gt;&#xA;public ref class ConcurrentDictionary : System::Collections::Generic::ICollection&lt;System::Collections::Generic::KeyValuePair&lt;TKey, TValue&gt;&gt;, System::Collections::Generic::IDictionary&lt;TKey, TValue&gt;, System::Collections::Generic::IEnumerable&lt;System::Collections::Generic::KeyValuePair&lt;TKey, TValue&gt;&gt;, System::Collections::Generic::IReadOnlyCollection&lt;System::Collections::Generic::KeyValuePair&lt;TKey, TValue&gt;&gt;, System::Collections::Generic::IReadOnlyDictionary&lt;TKey, TValue&gt;, System::Collections::IDictionary" />
  <TypeSignature Language="F#" Value="type ConcurrentDictionary&lt;'Key, 'Value&gt; = class&#xA;    interface IDictionary&lt;'Key, 'Value&gt;&#xA;    interface IDictionary&#xA;    interface IReadOnlyDictionary&lt;'Key, 'Value&gt;&#xA;    interface ICollection&lt;KeyValuePair&lt;'Key, 'Value&gt;&gt;&#xA;    interface seq&lt;KeyValuePair&lt;'Key, 'Value&gt;&gt;&#xA;    interface IEnumerable&#xA;    interface ICollection&#xA;    interface IReadOnlyCollection&lt;KeyValuePair&lt;'Key, 'Value&gt;&gt;" />
  <AssemblyInfo>
    <AssemblyName>System.Collections.Concurrent</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.14.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TKey" />
    <TypeParameter Name="TValue" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IDictionary&lt;TKey,TValue&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;T&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IReadOnlyCollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IReadOnlyDictionary&lt;TKey,TValue&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.ICollection</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IDictionary</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Diagnostics.DebuggerDisplay("Count = {Count}")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Diagnostics.DebuggerTypeProxy(typeof(System.Collections.Generic.Mscorlib_DictionaryDebugView`2))</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <typeparam name="TKey">
      <span data-ttu-id="f9ccb-101">Typ kluczy w słowniku.</span>
      <span class="sxs-lookup">
        <span data-stu-id="f9ccb-101">The type of the keys in the dictionary.</span>
      </span>
    </typeparam>
    <typeparam name="TValue">
      <span data-ttu-id="f9ccb-102">Typ wartości w słowniku.</span>
      <span class="sxs-lookup">
        <span data-stu-id="f9ccb-102">The type of the values in the dictionary.</span>
      </span>
    </typeparam>
    <summary>
      <span data-ttu-id="f9ccb-103">Reprezentuje kolekcję bezpiecznych pary klucz/wartość, które mogą być udostępniane przez wiele wątków jednocześnie.</span>
      <span class="sxs-lookup">
        <span data-stu-id="f9ccb-103">Represents a thread-safe collection of key/value pairs that can be accessed by multiple threads concurrently.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9ccb-104">Dla bardzo dużych <xref:System.Collections.Concurrent.ConcurrentDictionary%602> obiektów, można zwiększyć maksymalny rozmiar tablicy do 2 gigabajty (GB) w systemie 64-bitowych, ustawiając element konfiguracji `true` w środowisku uruchomieniowym.</span><span class="sxs-lookup"><span data-stu-id="f9ccb-104">For very large <xref:System.Collections.Concurrent.ConcurrentDictionary%602> objects, you can increase the maximum array size to 2 gigabytes (GB) on a 64-bit system by setting the  configuration element to `true` in the run-time environment.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f9ccb-105"><xref:System.Collections.Concurrent.ConcurrentDictionary%602> implementuje <xref:System.Collections.Generic.IReadOnlyCollection%601> i <xref:System.Collections.Generic.IReadOnlyDictionary%602> interfejsów, począwszy od [!INCLUDE[net_v46](~/includes/net-v46-md.md)]; w poprzednich wersjach programu .NET Framework, <xref:System.Collections.Concurrent.ConcurrentDictionary%602> klasa nie implementuje te interfejsy.</span><span class="sxs-lookup"><span data-stu-id="f9ccb-105"><xref:System.Collections.Concurrent.ConcurrentDictionary%602> implements the <xref:System.Collections.Generic.IReadOnlyCollection%601> and <xref:System.Collections.Generic.IReadOnlyDictionary%602> interfaces starting with the [!INCLUDE[net_v46](~/includes/net-v46-md.md)]; in previous versions of the .NET Framework, the <xref:System.Collections.Concurrent.ConcurrentDictionary%602> class did not implement these interfaces.</span></span>  
  
 <span data-ttu-id="f9ccb-106">Podobnie jak <xref:System.Collections.Generic.Dictionary%602?displayProperty=nameWithType> klasy <xref:System.Collections.Concurrent.ConcurrentDictionary%602> implementuje <xref:System.Collections.Generic.IDictionary%602> interfejsu.</span><span class="sxs-lookup"><span data-stu-id="f9ccb-106">Like the <xref:System.Collections.Generic.Dictionary%602?displayProperty=nameWithType> class, <xref:System.Collections.Concurrent.ConcurrentDictionary%602> implements the <xref:System.Collections.Generic.IDictionary%602> interface.</span></span> <span data-ttu-id="f9ccb-107">Ponadto <xref:System.Collections.Concurrent.ConcurrentDictionary%602> udostępnia kilka metod dodawania i aktualizowania pary klucz/wartość w słowniku, zgodnie z opisem w poniższej tabeli.</span><span class="sxs-lookup"><span data-stu-id="f9ccb-107">In addition, <xref:System.Collections.Concurrent.ConcurrentDictionary%602> provides several methods for adding or updating key/value pairs in the dictionary, as described in the following table.</span></span>  
  
|<span data-ttu-id="f9ccb-108">Wymagana czynność</span><span class="sxs-lookup"><span data-stu-id="f9ccb-108">To do this</span></span>|<span data-ttu-id="f9ccb-109">Użyj tej metody</span><span class="sxs-lookup"><span data-stu-id="f9ccb-109">Use this method</span></span>|<span data-ttu-id="f9ccb-110">Uwagi dotyczące użycia</span><span class="sxs-lookup"><span data-stu-id="f9ccb-110">Usage notes</span></span>|  
|----------------|---------------------|-----------------|  
|<span data-ttu-id="f9ccb-111">Dodaj nowy klucz do słownika, jeśli jeszcze nie istnieje w słowniku</span><span class="sxs-lookup"><span data-stu-id="f9ccb-111">Add a new key to the dictionary, if it doesn’t already exist in the dictionary</span></span>|<xref:System.Collections.Concurrent.ConcurrentDictionary%602.TryAdd%2A>|<span data-ttu-id="f9ccb-112">Ta metoda Dodaje parę określonego klucza i wartości, jeśli klucz aktualnie nie istnieje w słowniku.</span><span class="sxs-lookup"><span data-stu-id="f9ccb-112">This method adds the specified key/value pair, if the key doesn’t currently exist in the dictionary.</span></span> <span data-ttu-id="f9ccb-113">Metoda ta zwraca `true` lub `false` w zależności od tego, czy dodano nową parę.</span><span class="sxs-lookup"><span data-stu-id="f9ccb-113">The method returns `true` or `false` depending on whether the new pair was added.</span></span>|  
|<span data-ttu-id="f9ccb-114">Zaktualizuj wartość istniejącego klucza w słowniku, jeśli ten klucz ma określoną wartość</span><span class="sxs-lookup"><span data-stu-id="f9ccb-114">Update the value for an existing key in the dictionary, if that key has a specific value</span></span>|<xref:System.Collections.Concurrent.ConcurrentDictionary%602.TryUpdate%2A>|<span data-ttu-id="f9ccb-115">Ta metoda sprawdza, czy klucza ma określoną wartość, a jeśli on aktualizuje klucz z nową wartością.</span><span class="sxs-lookup"><span data-stu-id="f9ccb-115">This method checks whether the key has a specified value, and if it does, updates the key with a new value.</span></span> <span data-ttu-id="f9ccb-116">Jest on podobny do <xref:System.Threading.Interlocked.CompareExchange%2A> metody, z wyjątkiem, że użytkownika używanych dla elementów w słowniku.</span><span class="sxs-lookup"><span data-stu-id="f9ccb-116">It's similar to the <xref:System.Threading.Interlocked.CompareExchange%2A> method, except that it's used for dictionary elements.</span></span>|  
|<span data-ttu-id="f9ccb-117">Bezwarunkowo Store para klucza i wartości w słowniku i zastąp wartość klucza, która już istnieje</span><span class="sxs-lookup"><span data-stu-id="f9ccb-117">Store a key/value pair in the dictionary unconditionally, and overwrite the value of a key that already exists</span></span>|<span data-ttu-id="f9ccb-118">Metoda ustawiająca indeksatora: `dictionary[key] = newValue`</span><span class="sxs-lookup"><span data-stu-id="f9ccb-118">The indexer’s setter: `dictionary[key] = newValue`</span></span>||  
|<span data-ttu-id="f9ccb-119">Dodaj parę klucza i wartości do słownika, lub jeśli klucz już istnieje, zaktualizuj wartość klucza, w oparciu o wartość istniejącego klucza</span><span class="sxs-lookup"><span data-stu-id="f9ccb-119">Add a key/value pair to the dictionary, or if the key already exists, update the value for the key based on the key’s existing value</span></span>|<xref:System.Collections.Concurrent.ConcurrentDictionary%602.AddOrUpdate%28%600%2CSystem.Func%7B%600%2C%601%7D%2CSystem.Func%7B%600%2C%601%2C%601%7D%29><br /><br /> <span data-ttu-id="f9ccb-120">—lub—</span><span class="sxs-lookup"><span data-stu-id="f9ccb-120">—or—</span></span><br /><br /> <xref:System.Collections.Concurrent.ConcurrentDictionary%602.AddOrUpdate%28%600%2C%601%2CSystem.Func%7B%600%2C%601%2C%601%7D%29>|<span data-ttu-id="f9ccb-121"><xref:System.Collections.Concurrent.ConcurrentDictionary%602.AddOrUpdate%28%600%2CSystem.Func%7B%600%2C%601%7D%2CSystem.Func%7B%600%2C%601%2C%601%7D%29> akceptuje dwie delegatów i klucz.</span><span class="sxs-lookup"><span data-stu-id="f9ccb-121"><xref:System.Collections.Concurrent.ConcurrentDictionary%602.AddOrUpdate%28%600%2CSystem.Func%7B%600%2C%601%7D%2CSystem.Func%7B%600%2C%601%2C%601%7D%29> accepts the key and two delegates.</span></span> <span data-ttu-id="f9ccb-122">Używa pierwszego delegata, jeśli klucz nie istnieje w słowniku; go akceptuje klucz i zwraca wartość, która powinna być dodana dla klucza.</span><span class="sxs-lookup"><span data-stu-id="f9ccb-122">It uses the first delegate if the key doesn’t exist in the dictionary; it accepts the key and returns the value that should be added for the key.</span></span> <span data-ttu-id="f9ccb-123">Używa ona drugiego delegata, jeśli klucz istnieje; akceptuje ona klucz i jego bieżąca wartość i zwraca nową wartość, która powinna być ustawiona dla klucza.</span><span class="sxs-lookup"><span data-stu-id="f9ccb-123">It uses the second delegate if the key does exist; it accepts the key and its current value, and it returns the new value that should be set for the key.</span></span><br /><br /> <span data-ttu-id="f9ccb-124"><xref:System.Collections.Concurrent.ConcurrentDictionary%602.AddOrUpdate%28%600%2C%601%2CSystem.Func%7B%600%2C%601%2C%601%7D%29> akceptuje klucz, wartość do dodania i delegata aktualizacji.</span><span class="sxs-lookup"><span data-stu-id="f9ccb-124"><xref:System.Collections.Concurrent.ConcurrentDictionary%602.AddOrUpdate%28%600%2C%601%2CSystem.Func%7B%600%2C%601%2C%601%7D%29> accepts the key, a value to add, and the update delegate.</span></span> <span data-ttu-id="f9ccb-125">To taka sama jak poprzednie przeciążenia, z tą różnicą, że delegat nie korzysta z dodanie klucza.</span><span class="sxs-lookup"><span data-stu-id="f9ccb-125">This is the same as the previous overload, except that it doesn't use a delegate to add a key.</span></span>|  
|<span data-ttu-id="f9ccb-126">Pobierz wartość dla klucza w słowniku, dodanie wartości do słownika i przywróceniem go, jeśli klucz nie istnieje.</span><span class="sxs-lookup"><span data-stu-id="f9ccb-126">Get the value for a key in the dictionary, adding the value to the dictionary and returning it if the key doesn’t exist</span></span>|<xref:System.Collections.Concurrent.ConcurrentDictionary%602.GetOrAdd%28%600%2C%601%29><br /><br /> <span data-ttu-id="f9ccb-127">—lub—</span><span class="sxs-lookup"><span data-stu-id="f9ccb-127">—or—</span></span><br /><br /> <xref:System.Collections.Concurrent.ConcurrentDictionary%602.GetOrAdd%28%600%2CSystem.Func%7B%600%2C%601%7D%29>|<span data-ttu-id="f9ccb-128">Te przeciążenia zawierają inicjowania z opóźnieniem dla pary klucz/wartość w słowniku, dodając wartość tylko wtedy, gdy nie jest określony.</span><span class="sxs-lookup"><span data-stu-id="f9ccb-128">These overloads provide lazy initialization for a key/value pair in the dictionary, adding the value only if it’s not there.</span></span><br /><br /> <span data-ttu-id="f9ccb-129"><xref:System.Collections.Concurrent.ConcurrentDictionary%602.GetOrAdd%28%600%2C%601%29> pobiera wartość, która ma zostać dodany, jeśli klucz nie istnieje.</span><span class="sxs-lookup"><span data-stu-id="f9ccb-129"><xref:System.Collections.Concurrent.ConcurrentDictionary%602.GetOrAdd%28%600%2C%601%29> takes the value to be added if the key doesn’t exist.</span></span><br /><br /> <span data-ttu-id="f9ccb-130"><xref:System.Collections.Concurrent.ConcurrentDictionary%602.GetOrAdd%28%600%2CSystem.Func%7B%600%2C%601%7D%29> pobiera obiekt delegowany, który zostanie wygenerowany wartość, jeśli klucz nie istnieje.</span><span class="sxs-lookup"><span data-stu-id="f9ccb-130"><xref:System.Collections.Concurrent.ConcurrentDictionary%602.GetOrAdd%28%600%2CSystem.Func%7B%600%2C%601%7D%29> takes a delegate that will generate the value if the key doesn’t exist.</span></span>|  
  
 <span data-ttu-id="f9ccb-131">Wszystkie te operacje są niepodzielne i są odporne na wątki w odniesieniu do wszystkich innych operacji dotyczących <xref:System.Collections.Concurrent.ConcurrentDictionary%602> klasy.</span><span class="sxs-lookup"><span data-stu-id="f9ccb-131">All these operations are atomic and are thread-safe with regards to all other operations on the <xref:System.Collections.Concurrent.ConcurrentDictionary%602> class.</span></span> <span data-ttu-id="f9ccb-132">Jedyne wyjątki to metody, które akceptują delegata, oznacza to, <xref:System.Collections.Concurrent.ConcurrentDictionary%602.AddOrUpdate%2A> i <xref:System.Collections.Concurrent.ConcurrentDictionary%602.GetOrAdd%2A>.</span><span class="sxs-lookup"><span data-stu-id="f9ccb-132">The only exceptions are the methods that accept a delegate, that is, <xref:System.Collections.Concurrent.ConcurrentDictionary%602.AddOrUpdate%2A> and <xref:System.Collections.Concurrent.ConcurrentDictionary%602.GetOrAdd%2A>.</span></span> <span data-ttu-id="f9ccb-133">Do modyfikacji i operacje zapisu do słownika <xref:System.Collections.Concurrent.ConcurrentDictionary%602> używa blokowanie szczegółowe, aby zapewnić bezpieczeństwo wątkowe.</span><span class="sxs-lookup"><span data-stu-id="f9ccb-133">For modifications and write operations to the dictionary, <xref:System.Collections.Concurrent.ConcurrentDictionary%602> uses fine-grained locking to ensure thread safety.</span></span> <span data-ttu-id="f9ccb-134">(Operacje odczytu w słowniku są wykonywane w sposób, wolne od blokady). Jednak delegatów dla metody te są nazywane poza blokad, aby uniknąć problemów wynikających z wykonywania nieznanego kodu w ramach blokady.</span><span class="sxs-lookup"><span data-stu-id="f9ccb-134">(Read operations on the dictionary are performed in a lock-free manner.) However, delegates for these methods are called outside the locks to avoid the problems that can arise from executing unknown code under a lock.</span></span> <span data-ttu-id="f9ccb-135">W związku z tym kod wykonywany przez Ci delegaci nie podlega niepodzielność operacji.</span><span class="sxs-lookup"><span data-stu-id="f9ccb-135">Therefore, the code executed by these delegates is not subject to the atomicity of the operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f9ccb-136">Poniższy przykład pokazuje, jak skonstruować <xref:System.Collections.Concurrent.ConcurrentDictionary%602> obiektu.</span><span class="sxs-lookup"><span data-stu-id="f9ccb-136">The following example shows how to construct a <xref:System.Collections.Concurrent.ConcurrentDictionary%602> object.</span></span>  
  
 [!code-csharp[System.Collections.Concurrent.ConcurrentDictionary#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.concurrent.concurrentdictionary/cs/concdictionary.cs#1)]
 [!code-vb[System.Collections.Concurrent.ConcurrentDictionary#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.concurrent.concurrentdictionary/vb/concdictionary.vb#1)]  
  
 ]]></format>
    </remarks>
    <threadsafe>
      <span data-ttu-id="f9ccb-137">Wszystkie publiczne i chronione elementy członkowskie <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> są odporne na wątki i mogą być używane jednocześnie z wielu wątków.</span>
      <span class="sxs-lookup">
        <span data-stu-id="f9ccb-137">All public and protected members of <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> are thread-safe and may be used concurrently from multiple threads.</span>
      </span>
      <span data-ttu-id="f9ccb-138">Jednak elementy członkowskie są dostępne za pośrednictwem jednego z interfejsów <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> implementuje, włączając w to metody rozszerzenia nie ma gwarancji bezpieczeństwa wątków i w razie potrzeby mają być synchronizowane przez obiekt wywołujący.</span>
      <span class="sxs-lookup">
        <span data-stu-id="f9ccb-138">However, members accessed through one of the interfaces the <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> implements, including extension methods, are not guaranteed to be thread safe and may need to be synchronized by the caller.</span>
      </span>
    </threadsafe>
    <related type="Article" href="https://msdn.microsoft.com/library/2e7ca21f-786c-4367-96be-0cf3f3dcc6bd">
      <span data-ttu-id="f9ccb-139">Kolekcje bezpieczne wątkowo</span>
      <span class="sxs-lookup">
        <span data-stu-id="f9ccb-139">Thread-Safe Collections</span>
      </span>
    </related>
    <related type="Article" href="https://msdn.microsoft.com/library/81b64b95-13f7-4532-9249-ab532f629598">
      <span data-ttu-id="f9ccb-140">Porady: dodawanie i usuwanie elementów ConcurrentDictionary</span>
      <span class="sxs-lookup">
        <span data-stu-id="f9ccb-140">How to: Add and Remove Items from a ConcurrentDictionary</span>
      </span>
    </related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="f9ccb-141">Inicjuje nowe wystąpienie klasy <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9ccb-141">Initializes a new instance of the <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> class.</span>
          </span>
        </summary>
        <related type="Article" href="https://msdn.microsoft.com/library/2e7ca21f-786c-4367-96be-0cf3f3dcc6bd">
          <span data-ttu-id="f9ccb-142">Kolekcje bezpieczne wątkowo</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9ccb-142">Thread-Safe Collections</span>
          </span>
        </related>
        <related type="Article" href="https://msdn.microsoft.com/library/81b64b95-13f7-4532-9249-ab532f629598">
          <span data-ttu-id="f9ccb-143">Porady: dodawanie i usuwanie elementów ConcurrentDictionary</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9ccb-143">How to: Add and Remove Items from a ConcurrentDictionary</span>
          </span>
        </related>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ConcurrentDictionary ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.ConcurrentDictionary`2.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ConcurrentDictionary();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f9ccb-144">Inicjuje nowe wystąpienie klasy <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> klasę, która jest pusta, zawiera domyślny poziom współbieżności, ma pojemność domyślna i używa domyślny moduł porównujący dla typu klucza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9ccb-144">Initializes a new instance of the <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> class that is empty, has the default concurrency level, has the default initial capacity, and uses the default comparer for the key type.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9ccb-145">Domyślny poziom współbieżności jest równy liczbie procesorów.</span><span class="sxs-lookup"><span data-stu-id="f9ccb-145">The default concurrency level is equal to the number of CPUs.</span></span> <span data-ttu-id="f9ccb-146">Im wyższy poziom współbieżności, większą liczbę jednoczesnych operacji zapisu może odbywać się bez zakłóceń i blokowanie.</span><span class="sxs-lookup"><span data-stu-id="f9ccb-146">The higher the concurrency level is, the more concurrent write operations can take place without interference and blocking.</span></span> <span data-ttu-id="f9ccb-147">Wyższej wartości poziomu współbieżności również powodować operacje, które wymagają wszystkie blokady (na przykład, tabel, zmienianie rozmiaru, `ToArray` i `Count`) do stają się bardziej kosztowne.</span><span class="sxs-lookup"><span data-stu-id="f9ccb-147">Higher concurrency level values also cause operations that require all locks (for example, table resizing, `ToArray` and `Count`) to become more expensive.</span></span> <span data-ttu-id="f9ccb-148">Pojemność domyślna (DEFAULT_CAPACITY), która reprezentuje początkowa liczba zasobników, jest kompromis między rozmiarem bardzo małych słownika i liczba zmiany rozmiaru przy konstruowaniu Duży słownik.</span><span class="sxs-lookup"><span data-stu-id="f9ccb-148">The default capacity (DEFAULT_CAPACITY), which represents the initial number of buckets, is a trade-off between the size of a very small dictionary and the number of resizes when constructing a large dictionary.</span></span> <span data-ttu-id="f9ccb-149">Ponadto pojemności nie powinien być podzielna przez mniejszą liczbą Północnej.</span><span class="sxs-lookup"><span data-stu-id="f9ccb-149">Also, the capacity should not be divisible by a small prime number.</span></span> <span data-ttu-id="f9ccb-150">Pojemność domyślna to 31.</span><span class="sxs-lookup"><span data-stu-id="f9ccb-150">The default capacity is 31.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/2e7ca21f-786c-4367-96be-0cf3f3dcc6bd">
          <span data-ttu-id="f9ccb-151">Kolekcje bezpieczne wątkowo</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9ccb-151">Thread-Safe Collections</span>
          </span>
        </related>
        <related type="Article" href="https://msdn.microsoft.com/library/81b64b95-13f7-4532-9249-ab532f629598">
          <span data-ttu-id="f9ccb-152">Porady: dodawanie i usuwanie elementów ConcurrentDictionary</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9ccb-152">How to: Add and Remove Items from a ConcurrentDictionary</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ConcurrentDictionary (System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt; collection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;!TKey, !TValue&gt;&gt; collection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.ConcurrentDictionary`2.#ctor(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (collection As IEnumerable(Of KeyValuePair(Of TKey, TValue)))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ConcurrentDictionary(System::Collections::Generic::IEnumerable&lt;System::Collections::Generic::KeyValuePair&lt;TKey, TValue&gt;&gt; ^ collection);" />
      <MemberSignature Language="F#" Value="new System.Collections.Concurrent.ConcurrentDictionary&lt;'Key, 'Value&gt; : seq&lt;System.Collections.Generic.KeyValuePair&lt;'Key, 'Value&gt;&gt; -&gt; System.Collections.Concurrent.ConcurrentDictionary&lt;'Key, 'Value&gt;" Usage="new System.Collections.Concurrent.ConcurrentDictionary&lt;'Key, 'Value&gt; collection" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="collection" Type="System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;" />
      </Parameters>
      <Docs>
        <param name="collection">
          <span data-ttu-id="f9ccb-153">
            <see cref="T:System.Collections.Generic.IEnumerable`1" /> Której elementy są kopiowane do nowego <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9ccb-153">The <see cref="T:System.Collections.Generic.IEnumerable`1" /> whose elements are copied to the new <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f9ccb-154">Inicjuje nowe wystąpienie klasy <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> klasy, która zawiera elementy kopiowane z określonego <see cref="T:System.Collections.Generic.IEnumerable`1" />, ma domyślny poziom współbieżności, ma pojemność domyślna i wykorzystuje domyślny moduł porównujący dla typu klucza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9ccb-154">Initializes a new instance of the <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> class that contains elements copied from the specified <see cref="T:System.Collections.Generic.IEnumerable`1" />, has the default concurrency level, has the default initial capacity, and uses the default comparer for the key type.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f9ccb-155">
            <paramref name="collection" /> lub są jego klucze <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9ccb-155">
              <paramref name="collection" /> or any of its keys is  <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="f9ccb-156">
            <paramref name="collection" /> zawiera co najmniej jeden zduplikowany klucz.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9ccb-156">
              <paramref name="collection" /> contains one or more duplicate keys.</span>
          </span>
        </exception>
        <related type="Article" href="https://msdn.microsoft.com/library/2e7ca21f-786c-4367-96be-0cf3f3dcc6bd">
          <span data-ttu-id="f9ccb-157">Kolekcje bezpieczne wątkowo</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9ccb-157">Thread-Safe Collections</span>
          </span>
        </related>
        <related type="Article" href="https://msdn.microsoft.com/library/81b64b95-13f7-4532-9249-ab532f629598">
          <span data-ttu-id="f9ccb-158">Porady: dodawanie i usuwanie elementów ConcurrentDictionary</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9ccb-158">How to: Add and Remove Items from a ConcurrentDictionary</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ConcurrentDictionary (System.Collections.Generic.IEqualityComparer&lt;TKey&gt; comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IEqualityComparer`1&lt;!TKey&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.ConcurrentDictionary`2.#ctor(System.Collections.Generic.IEqualityComparer{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (comparer As IEqualityComparer(Of TKey))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ConcurrentDictionary(System::Collections::Generic::IEqualityComparer&lt;TKey&gt; ^ comparer);" />
      <MemberSignature Language="F#" Value="new System.Collections.Concurrent.ConcurrentDictionary&lt;'Key, 'Value&gt; : System.Collections.Generic.IEqualityComparer&lt;'Key&gt; -&gt; System.Collections.Concurrent.ConcurrentDictionary&lt;'Key, 'Value&gt;" Usage="new System.Collections.Concurrent.ConcurrentDictionary&lt;'Key, 'Value&gt; comparer" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="comparer" Type="System.Collections.Generic.IEqualityComparer&lt;TKey&gt;" />
      </Parameters>
      <Docs>
        <param name="comparer">
          <span data-ttu-id="f9ccb-159">Implementacja porównania równości do użycia podczas porównywania kluczy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9ccb-159">The equality comparison implementation to use when comparing keys.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f9ccb-160">Inicjuje nowe wystąpienie klasy <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> klasę, która jest pusta, zawiera domyślny poziom współbieżności i pojemności i używa określonego <see cref="T:System.Collections.Generic.IEqualityComparer`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9ccb-160">Initializes a new instance of the <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> class that is empty, has the default concurrency level and capacity, and uses the specified <see cref="T:System.Collections.Generic.IEqualityComparer`1" />.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f9ccb-161">
            <paramref name="comparer" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9ccb-161">
              <paramref name="comparer" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <related type="Article" href="https://msdn.microsoft.com/library/2e7ca21f-786c-4367-96be-0cf3f3dcc6bd">
          <span data-ttu-id="f9ccb-162">Kolekcje bezpieczne wątkowo</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9ccb-162">Thread-Safe Collections</span>
          </span>
        </related>
        <related type="Article" href="https://msdn.microsoft.com/library/81b64b95-13f7-4532-9249-ab532f629598">
          <span data-ttu-id="f9ccb-163">Porady: dodawanie i usuwanie elementów ConcurrentDictionary</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9ccb-163">How to: Add and Remove Items from a ConcurrentDictionary</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ConcurrentDictionary (System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt; collection, System.Collections.Generic.IEqualityComparer&lt;TKey&gt; comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;!TKey, !TValue&gt;&gt; collection, class System.Collections.Generic.IEqualityComparer`1&lt;!TKey&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.ConcurrentDictionary`2.#ctor(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}},System.Collections.Generic.IEqualityComparer{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (collection As IEnumerable(Of KeyValuePair(Of TKey, TValue)), comparer As IEqualityComparer(Of TKey))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ConcurrentDictionary(System::Collections::Generic::IEnumerable&lt;System::Collections::Generic::KeyValuePair&lt;TKey, TValue&gt;&gt; ^ collection, System::Collections::Generic::IEqualityComparer&lt;TKey&gt; ^ comparer);" />
      <MemberSignature Language="F#" Value="new System.Collections.Concurrent.ConcurrentDictionary&lt;'Key, 'Value&gt; : seq&lt;System.Collections.Generic.KeyValuePair&lt;'Key, 'Value&gt;&gt; * System.Collections.Generic.IEqualityComparer&lt;'Key&gt; -&gt; System.Collections.Concurrent.ConcurrentDictionary&lt;'Key, 'Value&gt;" Usage="new System.Collections.Concurrent.ConcurrentDictionary&lt;'Key, 'Value&gt; (collection, comparer)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="collection" Type="System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IEqualityComparer&lt;TKey&gt;" />
      </Parameters>
      <Docs>
        <param name="collection">
          <span data-ttu-id="f9ccb-164">
            <see cref="T:System.Collections.Generic.IEnumerable`1" /> Której elementy są kopiowane do nowego <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9ccb-164">The <see cref="T:System.Collections.Generic.IEnumerable`1" /> whose elements are copied to the new <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" />.</span>
          </span>
        </param>
        <param name="comparer">
          <span data-ttu-id="f9ccb-165">
            <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> Wdrożenia do użycia podczas porównywania kluczy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9ccb-165">The <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> implementation to use when comparing keys.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f9ccb-166">Inicjuje nowe wystąpienie klasy <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> klasy, która zawiera elementy kopiowane z określonego <see cref="T:System.Collections.IEnumerable" /> zawiera domyślny poziom współbieżności, ma pojemność domyślna i używa określonego <see cref="T:System.Collections.Generic.IEqualityComparer`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9ccb-166">Initializes a new instance of the <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> class that contains elements copied from the specified <see cref="T:System.Collections.IEnumerable" /> has the default concurrency level, has the default initial capacity, and uses the specified  <see cref="T:System.Collections.Generic.IEqualityComparer`1" />.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f9ccb-167">
            <paramref name="collection" /> lub <paramref name="comparer" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9ccb-167">
              <paramref name="collection" /> or <paramref name="comparer" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <related type="Article" href="https://msdn.microsoft.com/library/2e7ca21f-786c-4367-96be-0cf3f3dcc6bd">
          <span data-ttu-id="f9ccb-168">Kolekcje bezpieczne wątkowo</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9ccb-168">Thread-Safe Collections</span>
          </span>
        </related>
        <related type="Article" href="https://msdn.microsoft.com/library/81b64b95-13f7-4532-9249-ab532f629598">
          <span data-ttu-id="f9ccb-169">Porady: dodawanie i usuwanie elementów ConcurrentDictionary</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9ccb-169">How to: Add and Remove Items from a ConcurrentDictionary</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ConcurrentDictionary (int concurrencyLevel, int capacity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 concurrencyLevel, int32 capacity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.ConcurrentDictionary`2.#ctor(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (concurrencyLevel As Integer, capacity As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ConcurrentDictionary(int concurrencyLevel, int capacity);" />
      <MemberSignature Language="F#" Value="new System.Collections.Concurrent.ConcurrentDictionary&lt;'Key, 'Value&gt; : int * int -&gt; System.Collections.Concurrent.ConcurrentDictionary&lt;'Key, 'Value&gt;" Usage="new System.Collections.Concurrent.ConcurrentDictionary&lt;'Key, 'Value&gt; (concurrencyLevel, capacity)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="concurrencyLevel" Type="System.Int32" />
        <Parameter Name="capacity" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="concurrencyLevel">
          <span data-ttu-id="f9ccb-170">Szacowana liczba wątków, które spowoduje zaktualizowanie <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> jednocześnie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9ccb-170">The estimated number of threads that will update the <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> concurrently.</span>
          </span>
        </param>
        <param name="capacity">
          <span data-ttu-id="f9ccb-171">Początkowa liczba elementów, <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> może zawierać.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9ccb-171">The initial number of elements that the <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> can contain.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f9ccb-172">Inicjuje nowe wystąpienie klasy <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> klasę, która jest pusta, ma poziom współbieżności określonego i pojemności i wykorzystuje domyślny moduł porównujący typ klucza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9ccb-172">Initializes a new instance of the <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> class that is empty, has the specified concurrency level and capacity, and uses the default comparer for the key type.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="f9ccb-173">
            <paramref name="concurrencyLevel" /> jest mniejsza niż 1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9ccb-173">
              <paramref name="concurrencyLevel" /> is less than 1.</span>
          </span>
          <span data-ttu-id="f9ccb-174">—lub—</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9ccb-174">-or-</span>
          </span>
          <span data-ttu-id="f9ccb-175">
            <paramref name="capacity" /> jest mniejsza niż 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9ccb-175">
              <paramref name="capacity" /> is less than 0.</span>
          </span>
        </exception>
        <related type="Article" href="https://msdn.microsoft.com/library/2e7ca21f-786c-4367-96be-0cf3f3dcc6bd">
          <span data-ttu-id="f9ccb-176">Kolekcje bezpieczne wątkowo</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9ccb-176">Thread-Safe Collections</span>
          </span>
        </related>
        <related type="Article" href="https://msdn.microsoft.com/library/81b64b95-13f7-4532-9249-ab532f629598">
          <span data-ttu-id="f9ccb-177">Porady: dodawanie i usuwanie elementów ConcurrentDictionary</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9ccb-177">How to: Add and Remove Items from a ConcurrentDictionary</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ConcurrentDictionary (int concurrencyLevel, System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt; collection, System.Collections.Generic.IEqualityComparer&lt;TKey&gt; comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 concurrencyLevel, class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;!TKey, !TValue&gt;&gt; collection, class System.Collections.Generic.IEqualityComparer`1&lt;!TKey&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.ConcurrentDictionary`2.#ctor(System.Int32,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}},System.Collections.Generic.IEqualityComparer{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (concurrencyLevel As Integer, collection As IEnumerable(Of KeyValuePair(Of TKey, TValue)), comparer As IEqualityComparer(Of TKey))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ConcurrentDictionary(int concurrencyLevel, System::Collections::Generic::IEnumerable&lt;System::Collections::Generic::KeyValuePair&lt;TKey, TValue&gt;&gt; ^ collection, System::Collections::Generic::IEqualityComparer&lt;TKey&gt; ^ comparer);" />
      <MemberSignature Language="F#" Value="new System.Collections.Concurrent.ConcurrentDictionary&lt;'Key, 'Value&gt; : int * seq&lt;System.Collections.Generic.KeyValuePair&lt;'Key, 'Value&gt;&gt; * System.Collections.Generic.IEqualityComparer&lt;'Key&gt; -&gt; System.Collections.Concurrent.ConcurrentDictionary&lt;'Key, 'Value&gt;" Usage="new System.Collections.Concurrent.ConcurrentDictionary&lt;'Key, 'Value&gt; (concurrencyLevel, collection, comparer)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="concurrencyLevel" Type="System.Int32" />
        <Parameter Name="collection" Type="System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IEqualityComparer&lt;TKey&gt;" />
      </Parameters>
      <Docs>
        <param name="concurrencyLevel">
          <span data-ttu-id="f9ccb-178">Szacowana liczba wątków, które spowoduje zaktualizowanie <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> jednocześnie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9ccb-178">The estimated number of threads that will update the <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> concurrently.</span>
          </span>
        </param>
        <param name="collection">
          <span data-ttu-id="f9ccb-179">
            <see cref="T:System.Collections.Generic.IEnumerable`1" /> Której elementy są kopiowane do nowego <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9ccb-179">The <see cref="T:System.Collections.Generic.IEnumerable`1" /> whose elements are copied to the new <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" />.</span>
          </span>
        </param>
        <param name="comparer">
          <span data-ttu-id="f9ccb-180">
            <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> Wdrożenia do użycia podczas porównywania kluczy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9ccb-180">The <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> implementation to use when comparing keys.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f9ccb-181">Inicjuje nowe wystąpienie klasy <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> klasy, która zawiera elementy kopiowane z określonego <see cref="T:System.Collections.IEnumerable" />i używa określonego <see cref="T:System.Collections.Generic.IEqualityComparer`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9ccb-181">Initializes a new instance of the <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> class that contains elements copied from the specified <see cref="T:System.Collections.IEnumerable" />, and uses the specified <see cref="T:System.Collections.Generic.IEqualityComparer`1" />.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f9ccb-182">
            <paramref name="collection" /> lub <paramref name="comparer" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9ccb-182">
              <paramref name="collection" /> or <paramref name="comparer" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="f9ccb-183">
            <paramref name="concurrencyLevel" /> jest mniejsza niż 1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9ccb-183">
              <paramref name="concurrencyLevel" /> is less than 1.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="f9ccb-184">
            <paramref name="collection" /> zawiera co najmniej jeden zduplikowany klucz.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9ccb-184">
              <paramref name="collection" /> contains one or more duplicate keys.</span>
          </span>
        </exception>
        <related type="Article" href="https://msdn.microsoft.com/library/2e7ca21f-786c-4367-96be-0cf3f3dcc6bd">
          <span data-ttu-id="f9ccb-185">Kolekcje bezpieczne wątkowo</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9ccb-185">Thread-Safe Collections</span>
          </span>
        </related>
        <related type="Article" href="https://msdn.microsoft.com/library/81b64b95-13f7-4532-9249-ab532f629598">
          <span data-ttu-id="f9ccb-186">Porady: dodawanie i usuwanie elementów ConcurrentDictionary</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9ccb-186">How to: Add and Remove Items from a ConcurrentDictionary</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ConcurrentDictionary (int concurrencyLevel, int capacity, System.Collections.Generic.IEqualityComparer&lt;TKey&gt; comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 concurrencyLevel, int32 capacity, class System.Collections.Generic.IEqualityComparer`1&lt;!TKey&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.ConcurrentDictionary`2.#ctor(System.Int32,System.Int32,System.Collections.Generic.IEqualityComparer{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (concurrencyLevel As Integer, capacity As Integer, comparer As IEqualityComparer(Of TKey))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ConcurrentDictionary(int concurrencyLevel, int capacity, System::Collections::Generic::IEqualityComparer&lt;TKey&gt; ^ comparer);" />
      <MemberSignature Language="F#" Value="new System.Collections.Concurrent.ConcurrentDictionary&lt;'Key, 'Value&gt; : int * int * System.Collections.Generic.IEqualityComparer&lt;'Key&gt; -&gt; System.Collections.Concurrent.ConcurrentDictionary&lt;'Key, 'Value&gt;" Usage="new System.Collections.Concurrent.ConcurrentDictionary&lt;'Key, 'Value&gt; (concurrencyLevel, capacity, comparer)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="concurrencyLevel" Type="System.Int32" />
        <Parameter Name="capacity" Type="System.Int32" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IEqualityComparer&lt;TKey&gt;" />
      </Parameters>
      <Docs>
        <param name="concurrencyLevel">
          <span data-ttu-id="f9ccb-187">Szacowana liczba wątków, które spowoduje zaktualizowanie <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> jednocześnie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9ccb-187">The estimated number of threads that will update the <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> concurrently.</span>
          </span>
        </param>
        <param name="capacity">
          <span data-ttu-id="f9ccb-188">Początkowa liczba elementów, <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> może zawierać.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9ccb-188">The initial number of elements that the <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> can contain.</span>
          </span>
        </param>
        <param name="comparer">
          <span data-ttu-id="f9ccb-189">
            <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> Wdrożenia do użycia podczas porównywania kluczy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9ccb-189">The <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> implementation to use when comparing keys.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f9ccb-190">Inicjuje nowe wystąpienie klasy <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> klasę, która jest pusta, zawiera poziom współbieżności określonego, ma określoną pojemność i używa określonego <see cref="T:System.Collections.Generic.IEqualityComparer`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9ccb-190">Initializes a new instance of the <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> class that is empty, has the specified concurrency level, has the specified initial capacity, and uses the specified <see cref="T:System.Collections.Generic.IEqualityComparer`1" />.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f9ccb-191">
            <paramref name="comparer" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9ccb-191">
              <paramref name="comparer" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="f9ccb-192">
            <paramref name="concurrencyLevel" /> lub <paramref name="capacity" /> jest mniejszy niż 1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9ccb-192">
              <paramref name="concurrencyLevel" /> or <paramref name="capacity" /> is less than 1.</span>
          </span>
        </exception>
        <related type="Article" href="https://msdn.microsoft.com/library/2e7ca21f-786c-4367-96be-0cf3f3dcc6bd">
          <span data-ttu-id="f9ccb-193">Kolekcje bezpieczne wątkowo</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9ccb-193">Thread-Safe Collections</span>
          </span>
        </related>
        <related type="Article" href="https://msdn.microsoft.com/library/81b64b95-13f7-4532-9249-ab532f629598">
          <span data-ttu-id="f9ccb-194">Porady: dodawanie i usuwanie elementów ConcurrentDictionary</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9ccb-194">How to: Add and Remove Items from a ConcurrentDictionary</span>
          </span>
        </related>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddOrUpdate">
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="f9ccb-195">Dodaje parę klucza i wartości do <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> Jeśli klucz jeszcze nie istnieje lub aktualizuje para klucz/wartość w <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> Jeśli klucz już istnieje.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9ccb-195">Adds a key/value pair to the <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> if the key does not already exist, or updates a key/value pair in the <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> if the key already exists.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="f9ccb-196">Poniższy przykład pokazuje sposób wywoływania <xref:System.Collections.Concurrent.ConcurrentDictionary%602.AddOrUpdate%2A> metody:</span><span class="sxs-lookup"><span data-stu-id="f9ccb-196">The following example shows how to call the <xref:System.Collections.Concurrent.ConcurrentDictionary%602.AddOrUpdate%2A> method:</span></span>  
  
 [!code-csharp[System.Collections.Concurrent.ConcurrentDictionary#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.concurrent.concurrentdictionary/cs/concdictionary.cs#3)]
 [!code-vb[System.Collections.Concurrent.ConcurrentDictionary#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.concurrent.concurrentdictionary/vb/concdictionary.vb#3)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/2e7ca21f-786c-4367-96be-0cf3f3dcc6bd">
          <span data-ttu-id="f9ccb-197">Kolekcje bezpieczne wątkowo</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9ccb-197">Thread-Safe Collections</span>
          </span>
        </related>
        <related type="Article" href="https://msdn.microsoft.com/library/81b64b95-13f7-4532-9249-ab532f629598">
          <span data-ttu-id="f9ccb-198">Porady: dodawanie i usuwanie elementów ConcurrentDictionary</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9ccb-198">How to: Add and Remove Items from a ConcurrentDictionary</span>
          </span>
        </related>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddOrUpdate">
      <MemberSignature Language="C#" Value="public TValue AddOrUpdate (TKey key, Func&lt;TKey,TValue&gt; addValueFactory, Func&lt;TKey,TValue,TValue&gt; updateValueFactory);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !TValue AddOrUpdate(!TKey key, class System.Func`2&lt;!TKey, !TValue&gt; addValueFactory, class System.Func`3&lt;!TKey, !TValue, !TValue&gt; updateValueFactory) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.ConcurrentDictionary`2.AddOrUpdate(`0,System.Func{`0,`1},System.Func{`0,`1,`1})" />
      <MemberSignature Language="VB.NET" Value="Public Function AddOrUpdate (key As TKey, addValueFactory As Func(Of TKey, TValue), updateValueFactory As Func(Of TKey, TValue, TValue)) As TValue" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TValue AddOrUpdate(TKey key, Func&lt;TKey, TValue&gt; ^ addValueFactory, Func&lt;TKey, TValue, TValue&gt; ^ updateValueFactory);" />
      <MemberSignature Language="F#" Value="member this.AddOrUpdate : 'Key * Func&lt;'Key, 'Value&gt; * Func&lt;'Key, 'Value, 'Value&gt; -&gt; 'Value" Usage="concurrentDictionary.AddOrUpdate (key, addValueFactory, updateValueFactory)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TValue</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="TKey" />
        <Parameter Name="addValueFactory" Type="System.Func&lt;TKey,TValue&gt;" />
        <Parameter Name="updateValueFactory" Type="System.Func&lt;TKey,TValue,TValue&gt;" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="f9ccb-199">Klucz do dodania lub powinien być zaktualizowany o wartości</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9ccb-199">The key to be added or whose value should be updated</span>
          </span>
        </param>
        <param name="addValueFactory">
          <span data-ttu-id="f9ccb-200">Funkcja używana do generowania wartości dla klucza nieobecne</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9ccb-200">The function used to generate a value for an absent key</span>
          </span>
        </param>
        <param name="updateValueFactory">
          <span data-ttu-id="f9ccb-201">Funkcja używana do generowania nowych wartości dla istniejącego klucza, w oparciu o istniejącą wartość klucza</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9ccb-201">The function used to generate a new value for an existing key based on the key's existing value</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f9ccb-202">Używa określonej funkcji, aby dodawać pary klucz/wartość do <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> Jeśli klucz jeszcze nie istnieje, lub zaktualizować parę klucz/wartość w <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> Jeśli klucz już istnieje.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9ccb-202">Uses the specified functions to add a key/value pair to the <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> if the key does not already exist, or to update a key/value pair in the <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> if the key already exists.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f9ccb-203">Nowa wartość dla klucza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9ccb-203">The new value for the key.</span>
          </span>
          <span data-ttu-id="f9ccb-204">Będzie to albo być to wynikiem <paramref name="addValueFactory" /> (Jeśli nie było klucz) lub wynik <paramref name="updateValueFactory" /> (jeśli jest to klucz był obecny).</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9ccb-204">This will be either be the result of <paramref name="addValueFactory" /> (if the key was absent) or the result of <paramref name="updateValueFactory" /> (if the key was present).</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9ccb-205">Jeśli wywołasz <xref:System.Collections.Concurrent.ConcurrentDictionary%602.AddOrUpdate%2A> jednocześnie w różnych wątkach, `addValueFactory` może zostać wywołana wiele razy, ale jego pary klucz/wartość, nie mogą być dodawane do słownika za każde wywołanie.</span><span class="sxs-lookup"><span data-stu-id="f9ccb-205">If you call <xref:System.Collections.Concurrent.ConcurrentDictionary%602.AddOrUpdate%2A> simultaneously on different threads, `addValueFactory` may be called multiple times, but its key/value pair might not be added to the dictionary for every call.</span></span>  

 <span data-ttu-id="f9ccb-206">Do modyfikacji i operacje zapisu do słownika <xref:System.Collections.Concurrent.ConcurrentDictionary%602> używa blokowanie szczegółowe, aby zapewnić bezpieczeństwo wątkowe.</span><span class="sxs-lookup"><span data-stu-id="f9ccb-206">For modifications and write operations to the dictionary, <xref:System.Collections.Concurrent.ConcurrentDictionary%602> uses fine-grained locking to ensure thread safety.</span></span> <span data-ttu-id="f9ccb-207">(Operacje odczytu w słowniku są wykonywane w sposób, wolne od blokady). Jednak `addValueFactory` i `updateValueFactory` obiekty delegowane są nazywane poza blokad, aby uniknąć problemów wynikających z wykonywania nieznanego kodu w ramach blokady.</span><span class="sxs-lookup"><span data-stu-id="f9ccb-207">(Read operations on the dictionary are performed in a lock-free manner.) However, the `addValueFactory` and `updateValueFactory` delegates are called outside the locks to avoid the problems that can arise from executing unknown code under a lock.</span></span> <span data-ttu-id="f9ccb-208">W związku z tym <xref:System.Collections.Concurrent.ConcurrentDictionary%602.AddOrUpdate%2A> nie jest atomic w odniesieniu do wszystkich innych operacji dotyczących <xref:System.Collections.Concurrent.ConcurrentDictionary%602> klasy.</span><span class="sxs-lookup"><span data-stu-id="f9ccb-208">Therefore, <xref:System.Collections.Concurrent.ConcurrentDictionary%602.AddOrUpdate%2A> is not atomic with regards to all other operations on the <xref:System.Collections.Concurrent.ConcurrentDictionary%602> class.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f9ccb-209">
            <paramref name="key" />, <paramref name="addValueFactory" />, lub <paramref name="updateValueFactory" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9ccb-209">
              <paramref name="key" />, <paramref name="addValueFactory" />, or <paramref name="updateValueFactory" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="f9ccb-210">Słownik zawiera już maksymalną liczbę elementów (<see cref="F:System.Int32.MaxValue" />).</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9ccb-210">The dictionary already contains the maximum number of elements (<see cref="F:System.Int32.MaxValue" />).</span>
          </span>
        </exception>
        <related type="Article" href="https://msdn.microsoft.com/library/2e7ca21f-786c-4367-96be-0cf3f3dcc6bd">
          <span data-ttu-id="f9ccb-211">Kolekcje bezpieczne wątkowo</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9ccb-211">Thread-Safe Collections</span>
          </span>
        </related>
        <related type="Article" href="https://msdn.microsoft.com/library/81b64b95-13f7-4532-9249-ab532f629598">
          <span data-ttu-id="f9ccb-212">Porady: dodawanie i usuwanie elementów ConcurrentDictionary</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9ccb-212">How to: Add and Remove Items from a ConcurrentDictionary</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="AddOrUpdate">
      <MemberSignature Language="C#" Value="public TValue AddOrUpdate (TKey key, TValue addValue, Func&lt;TKey,TValue,TValue&gt; updateValueFactory);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !TValue AddOrUpdate(!TKey key, !TValue addValue, class System.Func`3&lt;!TKey, !TValue, !TValue&gt; updateValueFactory) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.ConcurrentDictionary`2.AddOrUpdate(`0,`1,System.Func{`0,`1,`1})" />
      <MemberSignature Language="VB.NET" Value="Public Function AddOrUpdate (key As TKey, addValue As TValue, updateValueFactory As Func(Of TKey, TValue, TValue)) As TValue" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TValue AddOrUpdate(TKey key, TValue addValue, Func&lt;TKey, TValue, TValue&gt; ^ updateValueFactory);" />
      <MemberSignature Language="F#" Value="member this.AddOrUpdate : 'Key * 'Value * Func&lt;'Key, 'Value, 'Value&gt; -&gt; 'Value" Usage="concurrentDictionary.AddOrUpdate (key, addValue, updateValueFactory)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TValue</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="TKey" />
        <Parameter Name="addValue" Type="TValue" />
        <Parameter Name="updateValueFactory" Type="System.Func&lt;TKey,TValue,TValue&gt;" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="f9ccb-213">Klucz do dodania lub powinien być zaktualizowany o wartości</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9ccb-213">The key to be added or whose value should be updated</span>
          </span>
        </param>
        <param name="addValue">
          <span data-ttu-id="f9ccb-214">Wartość do dodania dla klucza nieobecne</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9ccb-214">The value to be added for an absent key</span>
          </span>
        </param>
        <param name="updateValueFactory">
          <span data-ttu-id="f9ccb-215">Funkcja używana do generowania nowych wartości dla istniejącego klucza, w oparciu o istniejącą wartość klucza</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9ccb-215">The function used to generate a new value for an existing key based on the key's existing value</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f9ccb-216">Dodaje parę klucza i wartości do <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> Jeśli klucz jeszcze nie istnieje lub aktualizuje para klucz/wartość w <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> przy użyciu określonej funkcji, jeśli klucz już istnieje.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9ccb-216">Adds a key/value pair to the <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> if the key does not already exist, or updates a key/value pair in the <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> by using the specified function if the key already exists.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f9ccb-217">Nowa wartość dla klucza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9ccb-217">The new value for the key.</span>
          </span>
          <span data-ttu-id="f9ccb-218">Można będzie <paramref name="addValue" /> (Jeśli nie było klucz) lub wynik <paramref name="updateValueFactory" /> (jeśli jest to klucz był obecny).</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9ccb-218">This will be either be <paramref name="addValue" /> (if the key was absent) or the result of <paramref name="updateValueFactory" /> (if the key was present).</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="f9ccb-219">Poniższy przykład kodu pokazuje, jak zainicjować <xref:System.Collections.Concurrent.ConcurrentDictionary%602> oraz jak użyć metody AddOrUpdate, aby dodać dodatkowy element do kolekcji, a następnie zaktualizować istniejące elementy.</span><span class="sxs-lookup"><span data-stu-id="f9ccb-219">The following code example shows how to initialize an <xref:System.Collections.Concurrent.ConcurrentDictionary%602> and how to use the AddOrUpdate method to add an additional item to the collection, and update the existing items.</span></span>  
  
 [!code-csharp[System.Collections.ConcurrentColAddUpdate#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.concurrentcoladdupdate/cs/program.cs#1)]
 [!code-vb[System.Collections.ConcurrentColAddUpdate#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.concurrentcoladdupdate/vb/module1.vb#1)]  

## Remarks  
 <span data-ttu-id="f9ccb-220">Do modyfikacji i operacje zapisu do słownika <xref:System.Collections.Concurrent.ConcurrentDictionary%602> używa blokowanie szczegółowe, aby zapewnić bezpieczeństwo wątkowe.</span><span class="sxs-lookup"><span data-stu-id="f9ccb-220">For modifications and write operations to the dictionary, <xref:System.Collections.Concurrent.ConcurrentDictionary%602> uses fine-grained locking to ensure thread safety.</span></span> <span data-ttu-id="f9ccb-221">(Operacje odczytu w słowniku są wykonywane w sposób, wolne od blokady). Jednak `updateValueFactory` delegata jest nazywany poza blokad, aby uniknąć problemów wynikających z wykonywania nieznanego kodu w ramach blokady.</span><span class="sxs-lookup"><span data-stu-id="f9ccb-221">(Read operations on the dictionary are performed in a lock-free manner.) However, the `updateValueFactory` delegate is called outside the locks to avoid the problems that can arise from executing unknown code under a lock.</span></span> <span data-ttu-id="f9ccb-222">W związku z tym <xref:System.Collections.Concurrent.ConcurrentDictionary%602.AddOrUpdate%2A> nie jest atomic w odniesieniu do wszystkich innych operacji dotyczących <xref:System.Collections.Concurrent.ConcurrentDictionary%602> klasy.</span><span class="sxs-lookup"><span data-stu-id="f9ccb-222">Therefore, <xref:System.Collections.Concurrent.ConcurrentDictionary%602.AddOrUpdate%2A> is not atomic with regards to all other operations on the <xref:System.Collections.Concurrent.ConcurrentDictionary%602> class.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f9ccb-223">
            <paramref name="key" /> lub <paramref name="updateValueFactory" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9ccb-223">
              <paramref name="key" /> or <paramref name="updateValueFactory" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="f9ccb-224">Słownik zawiera już maksymalną liczbę elementów (<see cref="F:System.Int32.MaxValue" />).</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9ccb-224">The dictionary already contains the maximum number of elements (<see cref="F:System.Int32.MaxValue" />).</span>
          </span>
        </exception>
        <related type="Article" href="https://msdn.microsoft.com/library/2e7ca21f-786c-4367-96be-0cf3f3dcc6bd">
          <span data-ttu-id="f9ccb-225">Kolekcje bezpieczne wątkowo</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9ccb-225">Thread-Safe Collections</span>
          </span>
        </related>
        <related type="Article" href="https://msdn.microsoft.com/library/81b64b95-13f7-4532-9249-ab532f629598">
          <span data-ttu-id="f9ccb-226">Porady: dodawanie i usuwanie elementów ConcurrentDictionary</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9ccb-226">How to: Add and Remove Items from a ConcurrentDictionary</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="AddOrUpdate&lt;TArg&gt;">
      <MemberSignature Language="C#" Value="public TValue AddOrUpdate&lt;TArg&gt; (TKey key, Func&lt;TKey,TArg,TValue&gt; addValueFactory, Func&lt;TKey,TValue,TArg,TValue&gt; updateValueFactory, TArg factoryArgument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !TValue AddOrUpdate&lt;TArg&gt;(!TKey key, class System.Func`3&lt;!TKey, !!TArg, !TValue&gt; addValueFactory, class System.Func`4&lt;!TKey, !TValue, !!TArg, !TValue&gt; updateValueFactory, !!TArg factoryArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.ConcurrentDictionary`2.AddOrUpdate``1(`0,System.Func{`0,``0,`1},System.Func{`0,`1,``0,`1},``0)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddOrUpdate(Of TArg) (key As TKey, addValueFactory As Func(Of TKey, TArg, TValue), updateValueFactory As Func(Of TKey, TValue, TArg, TValue), factoryArgument As TArg) As TValue" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TArg&gt;&#xA; TValue AddOrUpdate(TKey key, Func&lt;TKey, TArg, TValue&gt; ^ addValueFactory, Func&lt;TKey, TValue, TArg, TValue&gt; ^ updateValueFactory, TArg factoryArgument);" />
      <MemberSignature Language="F#" Value="member this.AddOrUpdate : 'Key * Func&lt;'Key, 'Arg, 'Value&gt; * Func&lt;'Key, 'Value, 'Arg, 'Value&gt; * 'Arg -&gt; 'Value" Usage="concurrentDictionary.AddOrUpdate (key, addValueFactory, updateValueFactory, factoryArgument)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TValue</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TArg" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="key" Type="TKey" />
        <Parameter Name="addValueFactory" Type="System.Func&lt;TKey,TArg,TValue&gt;" />
        <Parameter Name="updateValueFactory" Type="System.Func&lt;TKey,TValue,TArg,TValue&gt;" />
        <Parameter Name="factoryArgument" Type="TArg" />
      </Parameters>
      <Docs>
        <typeparam name="TArg">
          <span data-ttu-id="f9ccb-227">Typ argumentu do przekazania do <paramref name="addValueFactory" /> i <paramref name="updateValueFactory" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9ccb-227">The type of an argument to pass into <paramref name="addValueFactory" /> and <paramref name="updateValueFactory" />.</span>
          </span>
        </typeparam>
        <param name="key">
          <span data-ttu-id="f9ccb-228">Klucz do dodania lub o wartości powinny być aktualizowane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9ccb-228">The key to be added or whose value should be updated.</span>
          </span>
        </param>
        <param name="addValueFactory">
          <span data-ttu-id="f9ccb-229">Funkcja używana do generowania wartości dla klucza nieobecne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9ccb-229">The function used to generate a value for an absent key.</span>
          </span>
        </param>
        <param name="updateValueFactory">
          <span data-ttu-id="f9ccb-230">Funkcja używana do generowania nowych wartości dla istniejącego klucza, w oparciu o istniejącą wartość klucza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9ccb-230">The function used to generate a new value for an existing key based on the key's existing value.</span>
          </span>
        </param>
        <param name="factoryArgument">
          <span data-ttu-id="f9ccb-231">Argument do przekazania do <paramref name="addValueFactory" /> i <paramref name="updateValueFactory" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9ccb-231">An argument to pass into <paramref name="addValueFactory" /> and <paramref name="updateValueFactory" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f9ccb-232">Korzysta z określonych funkcji i argument para klucza i wartości, aby dodać <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> Jeśli klucz jeszcze nie istnieje, lub zaktualizować parę klucz/wartość w <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> Jeśli klucz już istnieje.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9ccb-232">Uses the specified functions and argument to add a key/value pair to the <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> if the key does not already exist, or to update a key/value pair in the <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> if the key already exists.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f9ccb-233">Nowa wartość dla klucza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9ccb-233">The new value for the key.</span>
          </span>
          <span data-ttu-id="f9ccb-234">Będzie to albo być to wynikiem <paramref name="addValueFactory" /> (Jeśli nie było klucz) lub wynik <paramref name="updateValueFactory" /> (jeśli jest to klucz był obecny).</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9ccb-234">This will be either be the result of <paramref name="addValueFactory" /> (if the key was absent) or the result of <paramref name="updateValueFactory" /> (if the key was present).</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9ccb-235">Jeśli wywołasz <xref:System.Collections.Concurrent.ConcurrentDictionary%602.AddOrUpdate%2A> jednocześnie w różnych wątkach, `addValueFactory` może zostać wywołana wiele razy, ale jego pary klucz/wartość, nie mogą być dodawane do słownika za każde wywołanie.</span><span class="sxs-lookup"><span data-stu-id="f9ccb-235">If you call <xref:System.Collections.Concurrent.ConcurrentDictionary%602.AddOrUpdate%2A> simultaneously on different threads, `addValueFactory` may be called multiple times, but its key/value pair might not be added to the dictionary for every call.</span></span>  

 <span data-ttu-id="f9ccb-236">Do modyfikacji i operacje zapisu do słownika <xref:System.Collections.Concurrent.ConcurrentDictionary%602> używa blokowanie szczegółowe, aby zapewnić bezpieczeństwo wątkowe.</span><span class="sxs-lookup"><span data-stu-id="f9ccb-236">For modifications and write operations to the dictionary, <xref:System.Collections.Concurrent.ConcurrentDictionary%602> uses fine-grained locking to ensure thread safety.</span></span> <span data-ttu-id="f9ccb-237">(Operacje odczytu w słowniku są wykonywane w sposób, wolne od blokady). Jednak `addValueFactory` i `updateValueFactory` obiekty delegowane są nazywane poza blokad, aby uniknąć problemów wynikających z wykonywania nieznanego kodu w ramach blokady.</span><span class="sxs-lookup"><span data-stu-id="f9ccb-237">(Read operations on the dictionary are performed in a lock-free manner.) However, the `addValueFactory` and `updateValueFactory` delegates are called outside the locks to avoid the problems that can arise from executing unknown code under a lock.</span></span> <span data-ttu-id="f9ccb-238">W związku z tym <xref:System.Collections.Concurrent.ConcurrentDictionary%602.AddOrUpdate%2A> nie jest atomic w odniesieniu do wszystkich innych operacji dotyczących <xref:System.Collections.Concurrent.ConcurrentDictionary%602> klasy.</span><span class="sxs-lookup"><span data-stu-id="f9ccb-238">Therefore, <xref:System.Collections.Concurrent.ConcurrentDictionary%602.AddOrUpdate%2A> is not atomic with regards to all other operations on the <xref:System.Collections.Concurrent.ConcurrentDictionary%602> class.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f9ccb-239">
            <paramref name="key" />, <paramref name="addValueFactory" />, lub <paramref name="updateValueFactory" /> jest odwołaniem o wartości null (Nothing w języku Visual Basic).</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9ccb-239">
              <paramref name="key" />, <paramref name="addValueFactory" />, or <paramref name="updateValueFactory" /> is a null reference (Nothing in Visual Basic).</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.ConcurrentDictionary`2.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Clear();" />
      <MemberSignature Language="F#" Value="abstract member Clear : unit -&gt; unit&#xA;override this.Clear : unit -&gt; unit" Usage="concurrentDictionary.Clear " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IDictionary.Clear</InterfaceMember>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Clear</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f9ccb-240">Usuwa wszystkie klucze i wartości z kolekcji <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9ccb-240">Removes all keys and values from the <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" />.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/2e7ca21f-786c-4367-96be-0cf3f3dcc6bd">
          <span data-ttu-id="f9ccb-241">Kolekcje bezpieczne wątkowo</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9ccb-241">Thread-Safe Collections</span>
          </span>
        </related>
        <related type="Article" href="https://msdn.microsoft.com/library/81b64b95-13f7-4532-9249-ab532f629598">
          <span data-ttu-id="f9ccb-242">Porady: dodawanie i usuwanie elementów ConcurrentDictionary</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9ccb-242">How to: Add and Remove Items from a ConcurrentDictionary</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="ContainsKey">
      <MemberSignature Language="C#" Value="public bool ContainsKey (TKey key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ContainsKey(!TKey key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.ConcurrentDictionary`2.ContainsKey(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function ContainsKey (key As TKey) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool ContainsKey(TKey key);" />
      <MemberSignature Language="F#" Value="abstract member ContainsKey : 'Key -&gt; bool&#xA;override this.ContainsKey : 'Key -&gt; bool" Usage="concurrentDictionary.ContainsKey key" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IDictionary`2.ContainsKey(`0)</InterfaceMember>
        <InterfaceMember>M:System.Collections.Generic.IReadOnlyDictionary`2.ContainsKey(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="TKey" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="f9ccb-243">Klucz do zlokalizowania w <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9ccb-243">The key to locate in the <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f9ccb-244">Określa, czy <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> zawiera określony klucz.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9ccb-244">Determines whether the <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> contains the specified key.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f9ccb-245">
            <see langword="true" /> Jeśli <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> zawiera element z określonym kluczem, a w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9ccb-245">
              <see langword="true" /> if the <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> contains an element with the specified key; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f9ccb-246">
            <paramref name="key" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9ccb-246">
              <paramref name="key" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <related type="Article" href="https://msdn.microsoft.com/library/2e7ca21f-786c-4367-96be-0cf3f3dcc6bd">
          <span data-ttu-id="f9ccb-247">Kolekcje bezpieczne wątkowo</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9ccb-247">Thread-Safe Collections</span>
          </span>
        </related>
        <related type="Article" href="https://msdn.microsoft.com/library/81b64b95-13f7-4532-9249-ab532f629598">
          <span data-ttu-id="f9ccb-248">Porady: dodawanie i usuwanie elementów ConcurrentDictionary</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9ccb-248">How to: Add and Remove Items from a ConcurrentDictionary</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Concurrent.ConcurrentDictionary`2.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="System.Collections.Concurrent.ConcurrentDictionary&lt;'Key, 'Value&gt;.Count" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.ICollection`1.Count</InterfaceMember>
        <InterfaceMember>P:System.Collections.Generic.IReadOnlyCollection`1.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f9ccb-249">Pobiera liczbę par klucz/wartość zawartych w <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9ccb-249">Gets the number of key/value pairs contained in the <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f9ccb-250">Liczba par klucz/wartość zawartych w <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9ccb-250">The number of key/value pairs contained in the <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9ccb-251">Ta właściwość ma migawki semantyki i reprezentuje liczbę elementów w <xref:System.Collections.Concurrent.ConcurrentDictionary%602?displayProperty=nameWithType> w chwili, gdy właściwość została otwarta.</span><span class="sxs-lookup"><span data-stu-id="f9ccb-251">This property has snapshot semantics and represents the number of items in the <xref:System.Collections.Concurrent.ConcurrentDictionary%602?displayProperty=nameWithType> at the moment when the property was accessed.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="f9ccb-252">Słownik zawiera już maksymalną liczbę elementów (<see cref="F:System.Int32.MaxValue" />).</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9ccb-252">The dictionary already contains the maximum number of elements (<see cref="F:System.Int32.MaxValue" />).</span>
          </span>
        </exception>
        <related type="Article" href="https://msdn.microsoft.com/library/2e7ca21f-786c-4367-96be-0cf3f3dcc6bd">
          <span data-ttu-id="f9ccb-253">Kolekcje bezpieczne wątkowo</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9ccb-253">Thread-Safe Collections</span>
          </span>
        </related>
        <related type="Article" href="https://msdn.microsoft.com/library/81b64b95-13f7-4532-9249-ab532f629598">
          <span data-ttu-id="f9ccb-254">Porady: dodawanie i usuwanie elementów ConcurrentDictionary</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9ccb-254">How to: Add and Remove Items from a ConcurrentDictionary</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerator&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt; GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerator`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;!TKey, !TValue&gt;&gt; GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.ConcurrentDictionary`2.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator(Of KeyValuePair(Of TKey, TValue))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::Generic::IEnumerator&lt;System::Collections::Generic::KeyValuePair&lt;TKey, TValue&gt;&gt; ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="abstract member GetEnumerator : unit -&gt; System.Collections.Generic.IEnumerator&lt;System.Collections.Generic.KeyValuePair&lt;'Key, 'Value&gt;&gt;&#xA;override this.GetEnumerator : unit -&gt; System.Collections.Generic.IEnumerator&lt;System.Collections.Generic.KeyValuePair&lt;'Key, 'Value&gt;&gt;" Usage="concurrentDictionary.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IEnumerable`1.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.6">
          <AttributeName>System.Runtime.CompilerServices.IteratorStateMachine(typeof(System.Collections.Concurrent.ConcurrentDictionary`2/&lt;GetEnumerator&gt;d__1))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1">
          <AttributeName>System.Runtime.CompilerServices.IteratorStateMachine(typeof(System.Collections.Concurrent.ConcurrentDictionary`2/&lt;GetEnumerator&gt;d__35))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Runtime.CompilerServices.IteratorStateMachine(typeof(System.Collections.Concurrent.ConcurrentDictionary`2/&lt;GetEnumerator&gt;d__34))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerator&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f9ccb-255">Zwraca moduł wyliczający, który iteruje po <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9ccb-255">Returns an enumerator that iterates through the <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f9ccb-256">Moduł wyliczający <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9ccb-256">An enumerator for the <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9ccb-257">Moduł wyliczający zwrócone ze słownika bezpiecznym rozwiązaniem jest użycie wątkom odczytuje i zapisuje do słownika, jednak nie reprezentuje moment w czasie migawki słownika.</span><span class="sxs-lookup"><span data-stu-id="f9ccb-257">The enumerator returned from the dictionary is safe to use concurrently with reads and writes to the dictionary, however it does not represent a moment-in-time snapshot of the dictionary.</span></span> <span data-ttu-id="f9ccb-258">Treści dostępne za pośrednictwem moduł wyliczający może zawierać modyfikacje wprowadzone do słownika po <xref:System.Collections.Concurrent.ConcurrentDictionary%602.GetEnumerator%2A> została wywołana.</span><span class="sxs-lookup"><span data-stu-id="f9ccb-258">The contents exposed through the enumerator may contain modifications made to the dictionary after <xref:System.Collections.Concurrent.ConcurrentDictionary%602.GetEnumerator%2A> was called.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/2e7ca21f-786c-4367-96be-0cf3f3dcc6bd">
          <span data-ttu-id="f9ccb-259">Kolekcje bezpieczne wątkowo</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9ccb-259">Thread-Safe Collections</span>
          </span>
        </related>
        <related type="Article" href="https://msdn.microsoft.com/library/81b64b95-13f7-4532-9249-ab532f629598">
          <span data-ttu-id="f9ccb-260">Porady: dodawanie i usuwanie elementów ConcurrentDictionary</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9ccb-260">How to: Add and Remove Items from a ConcurrentDictionary</span>
          </span>
        </related>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetOrAdd">
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="f9ccb-261">Dodaje parę klucza i wartości do <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> Jeśli klucz jeszcze nie istnieje.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9ccb-261">Adds a key/value pair to the <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> if the key does not already exist.</span>
          </span>
          <span data-ttu-id="f9ccb-262">Zwraca nową wartość i istniejącą wartość, jeśli klucz już istnieje.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9ccb-262">Returns the new value, or the existing value if the key already exists.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="f9ccb-263">Poniższy przykład pokazuje sposób wywoływania <xref:System.Collections.Concurrent.ConcurrentDictionary%602.GetOrAdd%2A> metody:</span><span class="sxs-lookup"><span data-stu-id="f9ccb-263">The following example shows how to call the <xref:System.Collections.Concurrent.ConcurrentDictionary%602.GetOrAdd%2A> method:</span></span>  
  
 [!code-csharp[System.Collections.Concurrent.ConcurrentDictionary#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.concurrent.concurrentdictionary/cs/concdictionary.cs#3)]
 [!code-vb[System.Collections.Concurrent.ConcurrentDictionary#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.concurrent.concurrentdictionary/vb/concdictionary.vb#3)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/2e7ca21f-786c-4367-96be-0cf3f3dcc6bd">
          <span data-ttu-id="f9ccb-264">Kolekcje bezpieczne wątkowo</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9ccb-264">Thread-Safe Collections</span>
          </span>
        </related>
        <related type="Article" href="https://msdn.microsoft.com/library/81b64b95-13f7-4532-9249-ab532f629598">
          <span data-ttu-id="f9ccb-265">Porady: dodawanie i usuwanie elementów ConcurrentDictionary</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9ccb-265">How to: Add and Remove Items from a ConcurrentDictionary</span>
          </span>
        </related>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetOrAdd">
      <MemberSignature Language="C#" Value="public TValue GetOrAdd (TKey key, Func&lt;TKey,TValue&gt; valueFactory);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !TValue GetOrAdd(!TKey key, class System.Func`2&lt;!TKey, !TValue&gt; valueFactory) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(`0,System.Func{`0,`1})" />
      <MemberSignature Language="VB.NET" Value="Public Function GetOrAdd (key As TKey, valueFactory As Func(Of TKey, TValue)) As TValue" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TValue GetOrAdd(TKey key, Func&lt;TKey, TValue&gt; ^ valueFactory);" />
      <MemberSignature Language="F#" Value="member this.GetOrAdd : 'Key * Func&lt;'Key, 'Value&gt; -&gt; 'Value" Usage="concurrentDictionary.GetOrAdd (key, valueFactory)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TValue</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="TKey" />
        <Parameter Name="valueFactory" Type="System.Func&lt;TKey,TValue&gt;" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="f9ccb-266">Klucz elementu do dodania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9ccb-266">The key of the element to add.</span>
          </span>
        </param>
        <param name="valueFactory">
          <span data-ttu-id="f9ccb-267">Funkcja używana do generowania wartości dla klucza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9ccb-267">The function used to generate a value for the key.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f9ccb-268">Dodaje parę klucza i wartości do <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> przy użyciu określonej funkcji, jeśli klucz jeszcze nie istnieje.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9ccb-268">Adds a key/value pair to the <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> by using the specified function if the key does not already exist.</span>
          </span>
          <span data-ttu-id="f9ccb-269">Zwraca nową wartość i istniejącą wartość, jeśli klucz istnieje.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9ccb-269">Returns the new value, or the existing value if the key exists.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f9ccb-270">Wartość dla klucza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9ccb-270">The value for the key.</span>
          </span>
          <span data-ttu-id="f9ccb-271">Będzie to wartość istniejącego klucza, jeśli klucz już znajduje się w słowniku lub nową wartość, jeśli klucz nie był w słowniku.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9ccb-271">This will be either the existing value for the key if the key is already in the dictionary, or the new value if the key was not in the dictionary.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks   
 <span data-ttu-id="f9ccb-272">Do modyfikacji i operacje zapisu do słownika <xref:System.Collections.Concurrent.ConcurrentDictionary%602> używa blokowanie szczegółowe, aby zapewnić bezpieczeństwo wątkowe.</span><span class="sxs-lookup"><span data-stu-id="f9ccb-272">For modifications and write operations to the dictionary, <xref:System.Collections.Concurrent.ConcurrentDictionary%602> uses fine-grained locking to ensure thread safety.</span></span> <span data-ttu-id="f9ccb-273">(Operacje odczytu w słowniku są wykonywane w sposób, wolne od blokady). Jednak `valueFactory` delegata jest nazywany poza blokad, aby uniknąć problemów wynikających z wykonywania nieznanego kodu w ramach blokady.</span><span class="sxs-lookup"><span data-stu-id="f9ccb-273">(Read operations on the dictionary are performed in a lock-free manner.) However, the `valueFactory` delegate is called outside the locks to avoid the problems that can arise from executing unknown code under a lock.</span></span> <span data-ttu-id="f9ccb-274">W związku z tym <xref:System.Collections.Concurrent.ConcurrentDictionary%602.GetOrAdd%2A> nie jest atomic w odniesieniu do wszystkich innych operacji dotyczących <xref:System.Collections.Concurrent.ConcurrentDictionary%602> klasy.</span><span class="sxs-lookup"><span data-stu-id="f9ccb-274">Therefore, <xref:System.Collections.Concurrent.ConcurrentDictionary%602.GetOrAdd%2A> is not atomic with regards to all other operations on the <xref:System.Collections.Concurrent.ConcurrentDictionary%602> class.</span></span>  

 <span data-ttu-id="f9ccb-275">Ponieważ klucz/wartość mogą być wstawiane przez inny wątek podczas `valueFactory` jest generuje wartość, nie można zaufać, po prostu, ponieważ `valueFactory` wykonywane, jego wartość utworzone zostanie być wstawione do słownika i zwracane.</span><span class="sxs-lookup"><span data-stu-id="f9ccb-275">Since a key/value can be inserted by another thread while `valueFactory` is generating a value, you cannot trust that just because `valueFactory` executed, its produced value will be inserted into the dictionary and returned.</span></span> <span data-ttu-id="f9ccb-276">Jeśli wywołasz <xref:System.Collections.Concurrent.ConcurrentDictionary%602.GetOrAdd%2A> jednocześnie w różnych wątkach, `valueFactory` może zostać wywołana wiele razy, ale tylko jeden klucz/wartość pary zostanie dodany do słownika.</span><span class="sxs-lookup"><span data-stu-id="f9ccb-276">If you call <xref:System.Collections.Concurrent.ConcurrentDictionary%602.GetOrAdd%2A> simultaneously on different threads, `valueFactory` may be called multiple times, but only one key/value pair will be added to the dictionary.</span></span> 
 
 <span data-ttu-id="f9ccb-277">Wartość zwracana jest zależna od obecności kluczem w słowniku i tego, czy klucz/wartość jest wstawiany przez inny wątek po <xref:System.Collections.Concurrent.ConcurrentDictionary%602.GetOrAdd%2A> nosi nazwę lecz przed `valueFactory` generuje wartość:</span><span class="sxs-lookup"><span data-stu-id="f9ccb-277">The return value depends on the presence of the key in the dictionary and whether a key/value is inserted by another thread after <xref:System.Collections.Concurrent.ConcurrentDictionary%602.GetOrAdd%2A> is called but before `valueFactory` generates a value:</span></span>

 | <span data-ttu-id="f9ccb-278">Scenariusz</span><span class="sxs-lookup"><span data-stu-id="f9ccb-278">Scenario</span></span> | <span data-ttu-id="f9ccb-279">Wartość zwracana</span><span class="sxs-lookup"><span data-stu-id="f9ccb-279">Return value</span></span> |
 | -------- | ------------ |
 | <span data-ttu-id="f9ccb-280">Klucz jest już w słowniku.</span><span class="sxs-lookup"><span data-stu-id="f9ccb-280">The key is already in the dictionary.</span></span> | <span data-ttu-id="f9ccb-281">Istniejąca wartość jest zwracana.</span><span class="sxs-lookup"><span data-stu-id="f9ccb-281">The existing value is returned.</span></span> |
 | <span data-ttu-id="f9ccb-282">Klucz nie jest w słowniku.</span><span class="sxs-lookup"><span data-stu-id="f9ccb-282">The key is not in the dictionary.</span></span> <span data-ttu-id="f9ccb-283">`valueFactory` generuje wartość.</span><span class="sxs-lookup"><span data-stu-id="f9ccb-283">`valueFactory` generates a value.</span></span> <span data-ttu-id="f9ccb-284">Na ponowne sprawdzanie dla klucza, klucz nie zostanie znaleziony.</span><span class="sxs-lookup"><span data-stu-id="f9ccb-284">On rechecking for the key, no key is found.</span></span> | <span data-ttu-id="f9ccb-285">Klucz/wartość są wstawiane do słownika, a wartość jest zwracana.</span><span class="sxs-lookup"><span data-stu-id="f9ccb-285">The key/value is inserted into the dictionary, and the value is returned.</span></span> |
 | <span data-ttu-id="f9ccb-286">Klucz nie jest w słowniku.</span><span class="sxs-lookup"><span data-stu-id="f9ccb-286">The key is not in the dictionary.</span></span> <span data-ttu-id="f9ccb-287">`valueFactory` generuje wartość.</span><span class="sxs-lookup"><span data-stu-id="f9ccb-287">`valueFactory` generates a value.</span></span> <span data-ttu-id="f9ccb-288">Gdy `valueFactory` jest generowanie wartości, w innym wątku wstawia wartość dla klucza.</span><span class="sxs-lookup"><span data-stu-id="f9ccb-288">While `valueFactory` is generating the value, a different thread inserts a value for the key.</span></span> <span data-ttu-id="f9ccb-289">Po `valueFactory` wykonuje i na ponowne sprawdzanie dla klucza, znajduje się klucz wstawione przez inny wątek.</span><span class="sxs-lookup"><span data-stu-id="f9ccb-289">After `valueFactory` executes and upon rechecking for the key, the key inserted by the other thread is found.</span></span> | <span data-ttu-id="f9ccb-290">Zwracana jest wartość wstawione przez inny wątek.</span><span class="sxs-lookup"><span data-stu-id="f9ccb-290">The value inserted by the other thread is returned.</span></span> |
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f9ccb-291">
            <paramref name="key" /> lub <paramref name="valueFactory" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9ccb-291">
              <paramref name="key" /> or <paramref name="valueFactory" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="f9ccb-292">Słownik zawiera już maksymalną liczbę elementów (<see cref="F:System.Int32.MaxValue" />).</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9ccb-292">The dictionary already contains the maximum number of elements (<see cref="F:System.Int32.MaxValue" />).</span>
          </span>
        </exception>
        <related type="Article" href="https://msdn.microsoft.com/library/2e7ca21f-786c-4367-96be-0cf3f3dcc6bd">
          <span data-ttu-id="f9ccb-293">Kolekcje bezpieczne wątkowo</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9ccb-293">Thread-Safe Collections</span>
          </span>
        </related>
        <related type="Article" href="https://msdn.microsoft.com/library/81b64b95-13f7-4532-9249-ab532f629598">
          <span data-ttu-id="f9ccb-294">Porady: dodawanie i usuwanie elementów ConcurrentDictionary</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9ccb-294">How to: Add and Remove Items from a ConcurrentDictionary</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="GetOrAdd">
      <MemberSignature Language="C#" Value="public TValue GetOrAdd (TKey key, TValue value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !TValue GetOrAdd(!TKey key, !TValue value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(`0,`1)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetOrAdd (key As TKey, value As TValue) As TValue" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TValue GetOrAdd(TKey key, TValue value);" />
      <MemberSignature Language="F#" Value="member this.GetOrAdd : 'Key * 'Value -&gt; 'Value" Usage="concurrentDictionary.GetOrAdd (key, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TValue</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="TKey" />
        <Parameter Name="value" Type="TValue" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="f9ccb-295">Klucz elementu do dodania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9ccb-295">The key of the element to add.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="f9ccb-296">Wartość, która ma zostać dodany, jeśli klucz jeszcze nie istnieje.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9ccb-296">The value to be added, if the key does not already exist.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f9ccb-297">Dodaje parę klucza i wartości do <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> Jeśli klucz jeszcze nie istnieje.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9ccb-297">Adds a key/value pair to the <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> if the key does not already exist.</span>
          </span>
          <span data-ttu-id="f9ccb-298">Zwraca nową wartość i istniejącą wartość, jeśli klucz istnieje.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9ccb-298">Returns the new value, or the existing value if the key exists.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f9ccb-299">Wartość dla klucza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9ccb-299">The value for the key.</span>
          </span>
          <span data-ttu-id="f9ccb-300">Będzie to wartość istniejącego klucza, jeśli klucz już znajduje się w słowniku lub nową wartość, jeśli klucz nie był w słowniku.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9ccb-300">This will be either the existing value for the key if the key is already in the dictionary, or the new value if the key was not in the dictionary.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f9ccb-301">
            <paramref name="key" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9ccb-301">
              <paramref name="key" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="f9ccb-302">Słownik zawiera już maksymalną liczbę elementów (<see cref="F:System.Int32.MaxValue" />).</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9ccb-302">The dictionary already contains the maximum number of elements (<see cref="F:System.Int32.MaxValue" />).</span>
          </span>
        </exception>
        <related type="Article" href="https://msdn.microsoft.com/library/2e7ca21f-786c-4367-96be-0cf3f3dcc6bd">
          <span data-ttu-id="f9ccb-303">Kolekcje bezpieczne wątkowo</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9ccb-303">Thread-Safe Collections</span>
          </span>
        </related>
        <related type="Article" href="https://msdn.microsoft.com/library/81b64b95-13f7-4532-9249-ab532f629598">
          <span data-ttu-id="f9ccb-304">Porady: dodawanie i usuwanie elementów ConcurrentDictionary</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9ccb-304">How to: Add and Remove Items from a ConcurrentDictionary</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="GetOrAdd&lt;TArg&gt;">
      <MemberSignature Language="C#" Value="public TValue GetOrAdd&lt;TArg&gt; (TKey key, Func&lt;TKey,TArg,TValue&gt; valueFactory, TArg factoryArgument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !TValue GetOrAdd&lt;TArg&gt;(!TKey key, class System.Func`3&lt;!TKey, !!TArg, !TValue&gt; valueFactory, !!TArg factoryArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd``1(`0,System.Func{`0,``0,`1},``0)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetOrAdd(Of TArg) (key As TKey, valueFactory As Func(Of TKey, TArg, TValue), factoryArgument As TArg) As TValue" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TArg&gt;&#xA; TValue GetOrAdd(TKey key, Func&lt;TKey, TArg, TValue&gt; ^ valueFactory, TArg factoryArgument);" />
      <MemberSignature Language="F#" Value="member this.GetOrAdd : 'Key * Func&lt;'Key, 'Arg, 'Value&gt; * 'Arg -&gt; 'Value" Usage="concurrentDictionary.GetOrAdd (key, valueFactory, factoryArgument)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TValue</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TArg" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="key" Type="TKey" />
        <Parameter Name="valueFactory" Type="System.Func&lt;TKey,TArg,TValue&gt;" />
        <Parameter Name="factoryArgument" Type="TArg" />
      </Parameters>
      <Docs>
        <typeparam name="TArg">
          <span data-ttu-id="f9ccb-305">Typ argumentu do przekazania do <paramref name="valueFactory" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9ccb-305">The type of an argument to pass into <paramref name="valueFactory" />.</span>
          </span>
        </typeparam>
        <param name="key">
          <span data-ttu-id="f9ccb-306">Klucz elementu do dodania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9ccb-306">The key of the element to add.</span>
          </span>
        </param>
        <param name="valueFactory">
          <span data-ttu-id="f9ccb-307">Funkcja używana do generowania wartości dla klucza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9ccb-307">The function used to generate a value for the key.</span>
          </span>
        </param>
        <param name="factoryArgument">
          <span data-ttu-id="f9ccb-308">Wartość argumentu do przekazania do <paramref name="valueFactory" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9ccb-308">An argument value to pass into <paramref name="valueFactory" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f9ccb-309">Dodaje parę klucza i wartości do <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> przy użyciu określonej funkcji i argumentu, jeśli klucz jeszcze nie istnieje lub zwraca wartość, jeśli istnieje klucz.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9ccb-309">Adds a key/value pair to the <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> by using the specified function and an argument if the key does not already exist, or returns the existing value if the key exists.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f9ccb-310">Wartość dla klucza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9ccb-310">The value for the key.</span>
          </span>
          <span data-ttu-id="f9ccb-311">Będzie to wartość istniejącego klucza, jeśli klucz już znajduje się w słowniku lub nową wartość, jeśli klucz nie był w słowniku.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9ccb-311">This will be either the existing value for the key if the key is already in the dictionary, or the new value if the key was not in the dictionary.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks   
 <span data-ttu-id="f9ccb-312">Do modyfikacji i operacje zapisu do słownika <xref:System.Collections.Concurrent.ConcurrentDictionary%602> używa blokowanie szczegółowe, aby zapewnić bezpieczeństwo wątkowe.</span><span class="sxs-lookup"><span data-stu-id="f9ccb-312">For modifications and write operations to the dictionary, <xref:System.Collections.Concurrent.ConcurrentDictionary%602> uses fine-grained locking to ensure thread safety.</span></span> <span data-ttu-id="f9ccb-313">(Operacje odczytu w słowniku są wykonywane w sposób, wolne od blokady). Jednak `valueFactory` delegata jest nazywany poza blokad, aby uniknąć problemów wynikających z wykonywania nieznanego kodu w ramach blokady.</span><span class="sxs-lookup"><span data-stu-id="f9ccb-313">(Read operations on the dictionary are performed in a lock-free manner.) However, the `valueFactory` delegate is called outside the locks to avoid the problems that can arise from executing unknown code under a lock.</span></span> <span data-ttu-id="f9ccb-314">W związku z tym <xref:System.Collections.Concurrent.ConcurrentDictionary%602.GetOrAdd%2A> nie jest atomic w odniesieniu do wszystkich innych operacji dotyczących <xref:System.Collections.Concurrent.ConcurrentDictionary%602> klasy.</span><span class="sxs-lookup"><span data-stu-id="f9ccb-314">Therefore, <xref:System.Collections.Concurrent.ConcurrentDictionary%602.GetOrAdd%2A> is not atomic with regards to all other operations on the <xref:System.Collections.Concurrent.ConcurrentDictionary%602> class.</span></span>  

 <span data-ttu-id="f9ccb-315">Ponieważ klucz/wartość mogą być wstawiane przez inny wątek podczas `valueFactory` jest generuje wartość, nie można zaufać, po prostu, ponieważ `valueFactory` wykonywane, jego wartość utworzone zostanie być wstawione do słownika i zwracane.</span><span class="sxs-lookup"><span data-stu-id="f9ccb-315">Since a key/value can be inserted by another thread while `valueFactory` is generating a value, you cannot trust that just because `valueFactory` executed, its produced value will be inserted into the dictionary and returned.</span></span> <span data-ttu-id="f9ccb-316">Jeśli wywołasz <xref:System.Collections.Concurrent.ConcurrentDictionary%602.GetOrAdd%2A> jednocześnie w różnych wątkach, `valueFactory` może zostać wywołana wiele razy, ale tylko jeden klucz/wartość pary zostanie dodany do słownika.</span><span class="sxs-lookup"><span data-stu-id="f9ccb-316">If you call <xref:System.Collections.Concurrent.ConcurrentDictionary%602.GetOrAdd%2A> simultaneously on different threads, `valueFactory` may be called multiple times, but only one key/value pair will be added to the dictionary.</span></span> 
 
 <span data-ttu-id="f9ccb-317">Wartość zwracana jest zależna od obecności kluczem w słowniku i tego, czy klucz/wartość jest wstawiany przez inny wątek po <xref:System.Collections.Concurrent.ConcurrentDictionary%602.GetOrAdd%2A> nosi nazwę lecz przed `valueFactory` generuje wartość:</span><span class="sxs-lookup"><span data-stu-id="f9ccb-317">The return value depends on the presence of the key in the dictionary and whether a key/value is inserted by another thread after <xref:System.Collections.Concurrent.ConcurrentDictionary%602.GetOrAdd%2A> is called but before `valueFactory` generates a value:</span></span>

 | <span data-ttu-id="f9ccb-318">Scenariusz</span><span class="sxs-lookup"><span data-stu-id="f9ccb-318">Scenario</span></span> | <span data-ttu-id="f9ccb-319">Wartość zwracana</span><span class="sxs-lookup"><span data-stu-id="f9ccb-319">Return value</span></span> |
 | -------- | ------------ |
 | <span data-ttu-id="f9ccb-320">Klucz jest już w słowniku.</span><span class="sxs-lookup"><span data-stu-id="f9ccb-320">The key is already in the dictionary.</span></span> | <span data-ttu-id="f9ccb-321">Istniejąca wartość jest zwracana.</span><span class="sxs-lookup"><span data-stu-id="f9ccb-321">The existing value is returned.</span></span> |
 | <span data-ttu-id="f9ccb-322">Klucz nie jest w słowniku.</span><span class="sxs-lookup"><span data-stu-id="f9ccb-322">The key is not in the dictionary.</span></span> <span data-ttu-id="f9ccb-323">`valueFactory` generuje wartość.</span><span class="sxs-lookup"><span data-stu-id="f9ccb-323">`valueFactory` generates a value.</span></span> <span data-ttu-id="f9ccb-324">Na ponowne sprawdzanie dla klucza, klucz nie zostanie znaleziony.</span><span class="sxs-lookup"><span data-stu-id="f9ccb-324">On rechecking for the key, no key is found.</span></span> | <span data-ttu-id="f9ccb-325">Klucz/wartość są wstawiane do słownika, a wartość jest zwracana.</span><span class="sxs-lookup"><span data-stu-id="f9ccb-325">The key/value is inserted into the dictionary, and the value is returned.</span></span> |
 | <span data-ttu-id="f9ccb-326">Klucz nie jest w słowniku.</span><span class="sxs-lookup"><span data-stu-id="f9ccb-326">The key is not in the dictionary.</span></span> <span data-ttu-id="f9ccb-327">`valueFactory` generuje wartość.</span><span class="sxs-lookup"><span data-stu-id="f9ccb-327">`valueFactory` generates a value.</span></span> <span data-ttu-id="f9ccb-328">Gdy `valueFactory` jest generowanie wartości, w innym wątku wstawia wartość dla klucza.</span><span class="sxs-lookup"><span data-stu-id="f9ccb-328">While `valueFactory` is generating the value, a different thread inserts a value for the key.</span></span> <span data-ttu-id="f9ccb-329">Po `valueFactory` wykonuje i na ponowne sprawdzanie dla klucza, znajduje się klucz wstawione przez inny wątek.</span><span class="sxs-lookup"><span data-stu-id="f9ccb-329">After `valueFactory` executes and upon rechecking for the key, the key inserted by the other thread is found.</span></span> | <span data-ttu-id="f9ccb-330">Zwracana jest wartość wstawione przez inny wątek.</span><span class="sxs-lookup"><span data-stu-id="f9ccb-330">The value inserted by the other thread is returned.</span></span> |
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEmpty">
      <MemberSignature Language="C#" Value="public bool IsEmpty { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEmpty" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Concurrent.ConcurrentDictionary`2.IsEmpty" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsEmpty As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsEmpty { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsEmpty : bool" Usage="System.Collections.Concurrent.ConcurrentDictionary&lt;'Key, 'Value&gt;.IsEmpty" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f9ccb-331">Pobiera wartość wskazującą, czy <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> jest pusty.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9ccb-331">Gets a value that indicates whether the <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> is empty.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f9ccb-332">
            <see langword="true" /> Jeśli <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> jest pusty; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9ccb-332">
              <see langword="true" /> if the <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> is empty; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/2e7ca21f-786c-4367-96be-0cf3f3dcc6bd">
          <span data-ttu-id="f9ccb-333">Kolekcje bezpieczne wątkowo</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9ccb-333">Thread-Safe Collections</span>
          </span>
        </related>
        <related type="Article" href="https://msdn.microsoft.com/library/81b64b95-13f7-4532-9249-ab532f629598">
          <span data-ttu-id="f9ccb-334">Porady: dodawanie i usuwanie elementów ConcurrentDictionary</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9ccb-334">How to: Add and Remove Items from a ConcurrentDictionary</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public TValue this[TKey key] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !TValue Item(!TKey)" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Concurrent.ConcurrentDictionary`2.Item(`0)" />
      <MemberSignature Language="VB.NET" Value="Default Public Property Item(key As TKey) As TValue" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TValue default[TKey] { TValue get(TKey key); void set(TKey key, TValue value); };" />
      <MemberSignature Language="F#" Value="member this.Item('Key) : 'Value with get, set" Usage="System.Collections.Concurrent.ConcurrentDictionary&lt;'Key, 'Value&gt;.Item" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.IDictionary`2.Item(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TValue</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="TKey" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="f9ccb-335">Klucz wartości do pobrania lub ustawienia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9ccb-335">The key of the value to get or set.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f9ccb-336">Pobiera lub ustawia wartość skojarzoną z określonym kluczem.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9ccb-336">Gets or sets the value associated with the specified key.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f9ccb-337">Wartość pary klucz/wartość w określonym indeksie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9ccb-337">The value of the key/value pair at the specified index.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f9ccb-338">
            <paramref name="key" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9ccb-338">
              <paramref name="key" /> is  <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Collections.Generic.KeyNotFoundException">
          <span data-ttu-id="f9ccb-339">Właściwości są pobierane i <paramref name="key" /> nie istnieje w kolekcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9ccb-339">The property is retrieved and <paramref name="key" /> does not exist in the collection.</span>
          </span>
        </exception>
        <related type="Article" href="https://msdn.microsoft.com/library/2e7ca21f-786c-4367-96be-0cf3f3dcc6bd">
          <span data-ttu-id="f9ccb-340">Kolekcje bezpieczne wątkowo</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9ccb-340">Thread-Safe Collections</span>
          </span>
        </related>
        <related type="Article" href="https://msdn.microsoft.com/library/81b64b95-13f7-4532-9249-ab532f629598">
          <span data-ttu-id="f9ccb-341">Porady: dodawanie i usuwanie elementów ConcurrentDictionary</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9ccb-341">How to: Add and Remove Items from a ConcurrentDictionary</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Keys">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.ICollection&lt;TKey&gt; Keys { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.ICollection`1&lt;!TKey&gt; Keys" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Concurrent.ConcurrentDictionary`2.Keys" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Keys As ICollection(Of TKey)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::ICollection&lt;TKey&gt; ^ Keys { System::Collections::Generic::ICollection&lt;TKey&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Keys : System.Collections.Generic.ICollection&lt;'Key&gt;" Usage="System.Collections.Concurrent.ConcurrentDictionary&lt;'Key, 'Value&gt;.Keys" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.IDictionary`2.Keys</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;TKey&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f9ccb-342">Pobiera kolekcję zawierającą klucze ze słownika <see cref="T:System.Collections.Generic.Dictionary`2" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9ccb-342">Gets a collection containing the keys in the <see cref="T:System.Collections.Generic.Dictionary`2" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f9ccb-343">Kolekcja kluczy w <see cref="T:System.Collections.Generic.Dictionary`2" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9ccb-343">A collection of keys in the <see cref="T:System.Collections.Generic.Dictionary`2" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/2e7ca21f-786c-4367-96be-0cf3f3dcc6bd">
          <span data-ttu-id="f9ccb-344">Kolekcje bezpieczne wątkowo</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9ccb-344">Thread-Safe Collections</span>
          </span>
        </related>
        <related type="Article" href="https://msdn.microsoft.com/library/81b64b95-13f7-4532-9249-ab532f629598">
          <span data-ttu-id="f9ccb-345">Porady: dodawanie i usuwanie elementów ConcurrentDictionary</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9ccb-345">How to: Add and Remove Items from a ConcurrentDictionary</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.Add">
      <MemberSignature Language="C#" Value="void ICollection&lt;KeyValuePair&lt;TKey,TValue&gt;&gt;.Add (System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt; keyValuePair);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.Add(valuetype System.Collections.Generic.KeyValuePair`2&lt;!TKey, !TValue&gt; keyValuePair) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#Generic#ICollection&lt;System#Collections#Generic#KeyValuePair&lt;TKey,TValue&gt;&gt;#Add(System.Collections.Generic.KeyValuePair{`0,`1})" />
      <MemberSignature Language="VB.NET" Value="Sub Add (keyValuePair As KeyValuePair(Of TKey, TValue)) Implements ICollection(Of KeyValuePair(Of TKey, TValue)).Add" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.Add(System::Collections::Generic::KeyValuePair&lt;TKey, TValue&gt; keyValuePair) = System::Collections::Generic::ICollection&lt;System::Collections::Generic::KeyValuePair&lt;TKey, TValue&gt;&gt;::Add;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Add(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyValuePair" Type="System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;" />
      </Parameters>
      <Docs>
        <param name="keyValuePair">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/2e7ca21f-786c-4367-96be-0cf3f3dcc6bd">
          <span data-ttu-id="f9ccb-346">Kolekcje bezpieczne wątkowo</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9ccb-346">Thread-Safe Collections</span>
          </span>
        </related>
        <related type="Article" href="https://msdn.microsoft.com/library/81b64b95-13f7-4532-9249-ab532f629598">
          <span data-ttu-id="f9ccb-347">Porady: dodawanie i usuwanie elementów ConcurrentDictionary</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9ccb-347">How to: Add and Remove Items from a ConcurrentDictionary</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.Contains">
      <MemberSignature Language="C#" Value="bool ICollection&lt;KeyValuePair&lt;TKey,TValue&gt;&gt;.Contains (System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt; keyValuePair);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.Contains(valuetype System.Collections.Generic.KeyValuePair`2&lt;!TKey, !TValue&gt; keyValuePair) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#Generic#ICollection&lt;System#Collections#Generic#KeyValuePair&lt;TKey,TValue&gt;&gt;#Contains(System.Collections.Generic.KeyValuePair{`0,`1})" />
      <MemberSignature Language="VB.NET" Value="Function Contains (keyValuePair As KeyValuePair(Of TKey, TValue)) As Boolean Implements ICollection(Of KeyValuePair(Of TKey, TValue)).Contains" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.Contains(System::Collections::Generic::KeyValuePair&lt;TKey, TValue&gt; keyValuePair) = System::Collections::Generic::ICollection&lt;System::Collections::Generic::KeyValuePair&lt;TKey, TValue&gt;&gt;::Contains;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Contains(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyValuePair" Type="System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;" />
      </Parameters>
      <Docs>
        <param name="keyValuePair">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/2e7ca21f-786c-4367-96be-0cf3f3dcc6bd">
          <span data-ttu-id="f9ccb-348">Kolekcje bezpieczne wątkowo</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9ccb-348">Thread-Safe Collections</span>
          </span>
        </related>
        <related type="Article" href="https://msdn.microsoft.com/library/81b64b95-13f7-4532-9249-ab532f629598">
          <span data-ttu-id="f9ccb-349">Porady: dodawanie i usuwanie elementów ConcurrentDictionary</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9ccb-349">How to: Add and Remove Items from a ConcurrentDictionary</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.CopyTo">
      <MemberSignature Language="C#" Value="void ICollection&lt;KeyValuePair&lt;TKey,TValue&gt;&gt;.CopyTo (System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;[] array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.CopyTo(valuetype System.Collections.Generic.KeyValuePair`2&lt;!TKey, !TValue&gt;[] array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#Generic#ICollection&lt;System#Collections#Generic#KeyValuePair&lt;TKey,TValue&gt;&gt;#CopyTo(System.Collections.Generic.KeyValuePair{`0,`1}[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Sub CopyTo (array As KeyValuePair(Of TKey, TValue)(), index As Integer) Implements ICollection(Of KeyValuePair(Of TKey, TValue)).CopyTo" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.CopyTo(cli::array &lt;System::Collections::Generic::KeyValuePair&lt;TKey, TValue&gt;&gt; ^ array, int index) = System::Collections::Generic::ICollection&lt;System::Collections::Generic::KeyValuePair&lt;TKey, TValue&gt;&gt;::CopyTo;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;[]" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">To be added.</param>
        <param name="index">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/2e7ca21f-786c-4367-96be-0cf3f3dcc6bd">
          <span data-ttu-id="f9ccb-350">Kolekcje bezpieczne wątkowo</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9ccb-350">Thread-Safe Collections</span>
          </span>
        </related>
        <related type="Article" href="https://msdn.microsoft.com/library/81b64b95-13f7-4532-9249-ab532f629598">
          <span data-ttu-id="f9ccb-351">Porady: dodawanie i usuwanie elementów ConcurrentDictionary</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9ccb-351">How to: Add and Remove Items from a ConcurrentDictionary</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.IsReadOnly">
      <MemberSignature Language="C#" Value="bool System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#Generic#ICollection&lt;System#Collections#Generic#KeyValuePair&lt;TKey,TValue&gt;&gt;#IsReadOnly" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsReadOnly As Boolean Implements ICollection(Of KeyValuePair(Of TKey, TValue)).IsReadOnly" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Collections::Generic::ICollection&lt;System::Collections::Generic::KeyValuePair&lt;TKey,TValue&gt;&gt;::IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.IsReadOnly" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.ICollection`1.IsReadOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/2e7ca21f-786c-4367-96be-0cf3f3dcc6bd">
          <span data-ttu-id="f9ccb-352">Kolekcje bezpieczne wątkowo</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9ccb-352">Thread-Safe Collections</span>
          </span>
        </related>
        <related type="Article" href="https://msdn.microsoft.com/library/81b64b95-13f7-4532-9249-ab532f629598">
          <span data-ttu-id="f9ccb-353">Porady: dodawanie i usuwanie elementów ConcurrentDictionary</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9ccb-353">How to: Add and Remove Items from a ConcurrentDictionary</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.Remove">
      <MemberSignature Language="C#" Value="bool ICollection&lt;KeyValuePair&lt;TKey,TValue&gt;&gt;.Remove (System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt; keyValuePair);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.Remove(valuetype System.Collections.Generic.KeyValuePair`2&lt;!TKey, !TValue&gt; keyValuePair) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#Generic#ICollection&lt;System#Collections#Generic#KeyValuePair&lt;TKey,TValue&gt;&gt;#Remove(System.Collections.Generic.KeyValuePair{`0,`1})" />
      <MemberSignature Language="VB.NET" Value="Function Remove (keyValuePair As KeyValuePair(Of TKey, TValue)) As Boolean Implements ICollection(Of KeyValuePair(Of TKey, TValue)).Remove" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.Remove(System::Collections::Generic::KeyValuePair&lt;TKey, TValue&gt; keyValuePair) = System::Collections::Generic::ICollection&lt;System::Collections::Generic::KeyValuePair&lt;TKey, TValue&gt;&gt;::Remove;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Remove(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyValuePair" Type="System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;" />
      </Parameters>
      <Docs>
        <param name="keyValuePair">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/2e7ca21f-786c-4367-96be-0cf3f3dcc6bd">
          <span data-ttu-id="f9ccb-354">Kolekcje bezpieczne wątkowo</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9ccb-354">Thread-Safe Collections</span>
          </span>
        </related>
        <related type="Article" href="https://msdn.microsoft.com/library/81b64b95-13f7-4532-9249-ab532f629598">
          <span data-ttu-id="f9ccb-355">Porady: dodawanie i usuwanie elementów ConcurrentDictionary</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9ccb-355">How to: Add and Remove Items from a ConcurrentDictionary</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.IDictionary&lt;TKey,TValue&gt;.Add">
      <MemberSignature Language="C#" Value="void IDictionary&lt;TKey,TValue&gt;.Add (TKey key, TValue value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.Generic.IDictionary&lt;TKey,TValue&gt;.Add(!TKey key, !TValue value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#Generic#IDictionary&lt;TKey,TValue&gt;#Add(`0,`1)" />
      <MemberSignature Language="VB.NET" Value="Sub Add (key As TKey, value As TValue) Implements IDictionary(Of TKey, TValue).Add" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.Generic.IDictionary&lt;TKey,TValue&gt;.Add(TKey key, TValue value) = System::Collections::Generic::IDictionary&lt;TKey, TValue&gt;::Add;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IDictionary`2.Add(`0,`1)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="TKey" />
        <Parameter Name="value" Type="TValue" />
      </Parameters>
      <Docs>
        <param name="key">To be added.</param>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/2e7ca21f-786c-4367-96be-0cf3f3dcc6bd">
          <span data-ttu-id="f9ccb-356">Kolekcje bezpieczne wątkowo</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9ccb-356">Thread-Safe Collections</span>
          </span>
        </related>
        <related type="Article" href="https://msdn.microsoft.com/library/81b64b95-13f7-4532-9249-ab532f629598">
          <span data-ttu-id="f9ccb-357">Porady: dodawanie i usuwanie elementów ConcurrentDictionary</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9ccb-357">How to: Add and Remove Items from a ConcurrentDictionary</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.IDictionary&lt;TKey,TValue&gt;.Remove">
      <MemberSignature Language="C#" Value="bool IDictionary&lt;TKey,TValue&gt;.Remove (TKey key);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Collections.Generic.IDictionary&lt;TKey,TValue&gt;.Remove(!TKey key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#Generic#IDictionary&lt;TKey,TValue&gt;#Remove(`0)" />
      <MemberSignature Language="VB.NET" Value="Function Remove (key As TKey) As Boolean Implements IDictionary(Of TKey, TValue).Remove" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Collections.Generic.IDictionary&lt;TKey,TValue&gt;.Remove(TKey key) = System::Collections::Generic::IDictionary&lt;TKey, TValue&gt;::Remove;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IDictionary`2.Remove(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="TKey" />
      </Parameters>
      <Docs>
        <param name="key">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/2e7ca21f-786c-4367-96be-0cf3f3dcc6bd">
          <span data-ttu-id="f9ccb-358">Kolekcje bezpieczne wątkowo</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9ccb-358">Thread-Safe Collections</span>
          </span>
        </related>
        <related type="Article" href="https://msdn.microsoft.com/library/81b64b95-13f7-4532-9249-ab532f629598">
          <span data-ttu-id="f9ccb-359">Porady: dodawanie i usuwanie elementów ConcurrentDictionary</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9ccb-359">How to: Add and Remove Items from a ConcurrentDictionary</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.IReadOnlyDictionary&lt;TKey,TValue&gt;.Keys">
      <MemberSignature Language="C#" Value="System.Collections.Generic.IEnumerable&lt;TKey&gt; System.Collections.Generic.IReadOnlyDictionary&lt;TKey,TValue&gt;.Keys { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;!TKey&gt; System.Collections.Generic.IReadOnlyDictionary&lt;TKey,TValue&gt;.Keys" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#Generic#IReadOnlyDictionary&lt;TKey,TValue&gt;#Keys" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Keys As IEnumerable(Of TKey) Implements IReadOnlyDictionary(Of TKey, TValue).Keys" />
      <MemberSignature Language="C++ CLI" Value="property System::Collections::Generic::IEnumerable&lt;TKey&gt; ^ System::Collections::Generic::IReadOnlyDictionary&lt;TKey,TValue&gt;::Keys { System::Collections::Generic::IEnumerable&lt;TKey&gt; ^ get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.Generic.IReadOnlyDictionary&lt;TKey,TValue&gt;.Keys" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.IReadOnlyDictionary`2.Keys</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;TKey&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f9ccb-360">Pobiera kolekcję zawierającą klucze ze słownika <see cref="T:System.Collections.Generic.Dictionary`2" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9ccb-360">Gets a collection containing the keys in the <see cref="T:System.Collections.Generic.Dictionary`2" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f9ccb-361">Kolekcja zawierająca klucze ze słownika <see cref="T:System.Collections.Generic.Dictionary`2" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9ccb-361">A collection containing the keys in the <see cref="T:System.Collections.Generic.Dictionary`2" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.IReadOnlyDictionary&lt;TKey,TValue&gt;.Values">
      <MemberSignature Language="C#" Value="System.Collections.Generic.IEnumerable&lt;TValue&gt; System.Collections.Generic.IReadOnlyDictionary&lt;TKey,TValue&gt;.Values { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;!TValue&gt; System.Collections.Generic.IReadOnlyDictionary&lt;TKey,TValue&gt;.Values" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#Generic#IReadOnlyDictionary&lt;TKey,TValue&gt;#Values" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Values As IEnumerable(Of TValue) Implements IReadOnlyDictionary(Of TKey, TValue).Values" />
      <MemberSignature Language="C++ CLI" Value="property System::Collections::Generic::IEnumerable&lt;TValue&gt; ^ System::Collections::Generic::IReadOnlyDictionary&lt;TKey,TValue&gt;::Values { System::Collections::Generic::IEnumerable&lt;TValue&gt; ^ get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.Generic.IReadOnlyDictionary&lt;TKey,TValue&gt;.Values" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.IReadOnlyDictionary`2.Values</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;TValue&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f9ccb-362">Pobiera kolekcję zawierającą wartości w <see cref="T:System.Collections.Generic.Dictionary`2" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9ccb-362">Gets a collection that contains the values in the <see cref="T:System.Collections.Generic.Dictionary`2" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f9ccb-363">Kolekcja zawierająca wartości w <see cref="T:System.Collections.Generic.Dictionary`2" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9ccb-363">A collection that contains the values in the <see cref="T:System.Collections.Generic.Dictionary`2" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.CopyTo">
      <MemberSignature Language="C#" Value="void ICollection.CopyTo (Array array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.ICollection.CopyTo(class System.Array array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.ICollection.CopyTo(Array ^ array, int index) = System::Collections::ICollection::CopyTo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">
          <span data-ttu-id="f9ccb-364">Jednowymiarowa tablica, która jest lokalizacją docelową elementów kopiowanych z <see cref="T:System.Collections.ICollection" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9ccb-364">The one-dimensional array that is the destination of the elements copied from the <see cref="T:System.Collections.ICollection" />.</span>
          </span>
          <span data-ttu-id="f9ccb-365">Tablica musi mieć indeksowane zaczynające od zera.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9ccb-365">The array must have zero-based indexing.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="f9ccb-366">Liczony od zera indeks w <paramref name="array" /> od rozpoczyna się kopiowanie które.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9ccb-366">The zero-based index in <paramref name="array" /> at which copying begins.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f9ccb-367">Kopiuje elementy ze <see cref="T:System.Collections.ICollection" /> do tablicy, zaczynając od określonego indeksu tablicy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9ccb-367">Copies the elements of the <see cref="T:System.Collections.ICollection" /> to an array, starting at the specified array index.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f9ccb-368">
            <paramref name="array" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9ccb-368">
              <paramref name="array" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="f9ccb-369">
            <paramref name="index" /> jest mniejsza niż 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9ccb-369">
              <paramref name="index" /> is less than 0.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="f9ccb-370">
            <paramref name="index" /> jest równa lub większa niż długość <paramref name="array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9ccb-370">
              <paramref name="index" /> is equal to or greater than the length of the <paramref name="array" />.</span>
          </span>
          <span data-ttu-id="f9ccb-371">—lub—</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9ccb-371">-or-</span>
          </span>
          <span data-ttu-id="f9ccb-372">Liczba elementów w źródle <see cref="T:System.Collections.ICollection" /> jest większa niż dostępna ilość miejsca od <paramref name="index" /> do końca tablicy docelowej <paramref name="array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9ccb-372">The number of elements in the source <see cref="T:System.Collections.ICollection" /> is greater than the available space from <paramref name="index" /> to the end of the destination <paramref name="array" />.</span>
          </span>
        </exception>
        <related type="Article" href="https://msdn.microsoft.com/library/2e7ca21f-786c-4367-96be-0cf3f3dcc6bd">
          <span data-ttu-id="f9ccb-373">Kolekcje bezpieczne wątkowo</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9ccb-373">Thread-Safe Collections</span>
          </span>
        </related>
        <related type="Article" href="https://msdn.microsoft.com/library/81b64b95-13f7-4532-9249-ab532f629598">
          <span data-ttu-id="f9ccb-374">Porady: dodawanie i usuwanie elementów ConcurrentDictionary</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9ccb-374">How to: Add and Remove Items from a ConcurrentDictionary</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.IsSynchronized">
      <MemberSignature Language="C#" Value="bool System.Collections.ICollection.IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.ICollection.IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#ICollection#IsSynchronized" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsSynchronized As Boolean Implements ICollection.IsSynchronized" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Collections::ICollection::IsSynchronized { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.ICollection.IsSynchronized" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f9ccb-375">Pobiera wartość wskazującą czy dostęp do <see cref="T:System.Collections.ICollection" /> jest zsynchronizowany z SyncRoot.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9ccb-375">Gets a value indicating whether access to the <see cref="T:System.Collections.ICollection" /> is synchronized with the SyncRoot.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f9ccb-376">
            <see langword="true" /> Jeśli dostęp do <see cref="T:System.Collections.ICollection" /> jest synchronizowane (wątkowo); w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9ccb-376">
              <see langword="true" /> if access to the <see cref="T:System.Collections.ICollection" /> is synchronized (thread safe); otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="f9ccb-377">Aby uzyskać <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> właściwość ta zwraca zawsze **false**.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9ccb-377">For <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> this property always returns **false**.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/2e7ca21f-786c-4367-96be-0cf3f3dcc6bd">
          <span data-ttu-id="f9ccb-378">Kolekcje bezpieczne wątkowo</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9ccb-378">Thread-Safe Collections</span>
          </span>
        </related>
        <related type="Article" href="https://msdn.microsoft.com/library/81b64b95-13f7-4532-9249-ab532f629598">
          <span data-ttu-id="f9ccb-379">Porady: dodawanie i usuwanie elementów ConcurrentDictionary</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9ccb-379">How to: Add and Remove Items from a ConcurrentDictionary</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.SyncRoot">
      <MemberSignature Language="C#" Value="object System.Collections.ICollection.SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.ICollection.SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#ICollection#SyncRoot" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property SyncRoot As Object Implements ICollection.SyncRoot" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System::Collections::ICollection::SyncRoot { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.ICollection.SyncRoot" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f9ccb-380">Pobiera obiekt, który może służyć do synchronizowania dostępu do <see cref="T:System.Collections.ICollection" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9ccb-380">Gets an object that can be used to synchronize access to the <see cref="T:System.Collections.ICollection" />.</span>
          </span>
          <span data-ttu-id="f9ccb-381">Ta właściwość nie jest obsługiwana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9ccb-381">This property is not supported.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f9ccb-382">Zawsze zwraca wartość null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9ccb-382">Always returns null.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="f9ccb-383">Ta właściwość nie jest obsługiwana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9ccb-383">This property is not supported.</span>
          </span>
        </exception>
        <related type="Article" href="https://msdn.microsoft.com/library/2e7ca21f-786c-4367-96be-0cf3f3dcc6bd">
          <span data-ttu-id="f9ccb-384">Kolekcje bezpieczne wątkowo</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9ccb-384">Thread-Safe Collections</span>
          </span>
        </related>
        <related type="Article" href="https://msdn.microsoft.com/library/81b64b95-13f7-4532-9249-ab532f629598">
          <span data-ttu-id="f9ccb-385">Porady: dodawanie i usuwanie elementów ConcurrentDictionary</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9ccb-385">How to: Add and Remove Items from a ConcurrentDictionary</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IDictionary.Add">
      <MemberSignature Language="C#" Value="void IDictionary.Add (object key, object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IDictionary.Add(object key, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#IDictionary#Add(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub Add (key As Object, value As Object) Implements IDictionary.Add" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IDictionary.Add(System::Object ^ key, System::Object ^ value) = System::Collections::IDictionary::Add;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IDictionary.Add(System.Object,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Object" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="f9ccb-386">Obiekt do użycia jako klucz.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9ccb-386">The object to use as the key.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="f9ccb-387">Obiekt do użycia jako wartość.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9ccb-387">The object to use as the value.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f9ccb-388">Dodaje określony klucz i wartość do słownika.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9ccb-388">Adds the specified key and value to the dictionary.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f9ccb-389">
            <paramref name="key" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9ccb-389">
              <paramref name="key" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="f9ccb-390">
            <paramref name="key" /> Typ, który nie jest możliwy do przypisania do klucza typu <see cref="T:System.Collections.Generic.Dictionary`2" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9ccb-390">
              <paramref name="key" /> is of a type that is not assignable to the key type  of the <see cref="T:System.Collections.Generic.Dictionary`2" />.</span>
          </span>
          <span data-ttu-id="f9ccb-391">—lub—</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9ccb-391">-or-</span>
          </span>
          <span data-ttu-id="f9ccb-392">
            <paramref name="value" /> jest typu, który nie jest możliwy do przypisania do typu wartości w <see cref="T:System.Collections.Generic.Dictionary`2" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9ccb-392">
              <paramref name="value" /> is of a type that is not assignable to the type of values in the <see cref="T:System.Collections.Generic.Dictionary`2" />.</span>
          </span>
          <span data-ttu-id="f9ccb-393">—lub—</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9ccb-393">-or-</span>
          </span>
          <span data-ttu-id="f9ccb-394">Wartość składającą się z tym samym kluczem już istnieje w <see cref="T:System.Collections.Generic.Dictionary`2" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9ccb-394">A value with the same key already exists in the <see cref="T:System.Collections.Generic.Dictionary`2" />.</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="f9ccb-395">Słownik zawiera już maksymalną liczbę elementów (<see cref="F:System.Int32.MaxValue" />).</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9ccb-395">The dictionary already contains the maximum number of elements (<see cref="F:System.Int32.MaxValue" />).</span>
          </span>
        </exception>
        <related type="Article" href="https://msdn.microsoft.com/library/2e7ca21f-786c-4367-96be-0cf3f3dcc6bd">
          <span data-ttu-id="f9ccb-396">Kolekcje bezpieczne wątkowo</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9ccb-396">Thread-Safe Collections</span>
          </span>
        </related>
        <related type="Article" href="https://msdn.microsoft.com/library/81b64b95-13f7-4532-9249-ab532f629598">
          <span data-ttu-id="f9ccb-397">Porady: dodawanie i usuwanie elementów ConcurrentDictionary</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9ccb-397">How to: Add and Remove Items from a ConcurrentDictionary</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IDictionary.Contains">
      <MemberSignature Language="C#" Value="bool IDictionary.Contains (object key);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Collections.IDictionary.Contains(object key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#IDictionary#Contains(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Contains (key As Object) As Boolean Implements IDictionary.Contains" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Collections.IDictionary.Contains(System::Object ^ key) = System::Collections::IDictionary::Contains;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IDictionary.Contains(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="f9ccb-398">Klucz do zlokalizowania w <see cref="T:System.Collections.Generic.IDictionary`2" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9ccb-398">The key to locate in the <see cref="T:System.Collections.Generic.IDictionary`2" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f9ccb-399">Pobiera czy <see cref="T:System.Collections.Generic.IDictionary`2" /> zawiera element z określonym kluczem.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9ccb-399">Gets whether the <see cref="T:System.Collections.Generic.IDictionary`2" /> contains an element with the specified key.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f9ccb-400">
            <see langword="true" /> Jeśli <see cref="T:System.Collections.Generic.IDictionary`2" /> zawiera element z określonym kluczem, a w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9ccb-400">
              <see langword="true" /> if the <see cref="T:System.Collections.Generic.IDictionary`2" /> contains an element with the specified key; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f9ccb-401">
            <paramref name="key" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9ccb-401">
              <paramref name="key" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <related type="Article" href="https://msdn.microsoft.com/library/2e7ca21f-786c-4367-96be-0cf3f3dcc6bd">
          <span data-ttu-id="f9ccb-402">Kolekcje bezpieczne wątkowo</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9ccb-402">Thread-Safe Collections</span>
          </span>
        </related>
        <related type="Article" href="https://msdn.microsoft.com/library/81b64b95-13f7-4532-9249-ab532f629598">
          <span data-ttu-id="f9ccb-403">Porady: dodawanie i usuwanie elementów ConcurrentDictionary</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9ccb-403">How to: Add and Remove Items from a ConcurrentDictionary</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IDictionary.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IDictionaryEnumerator IDictionary.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IDictionaryEnumerator System.Collections.IDictionary.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#IDictionary#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IDictionaryEnumerator Implements IDictionary.GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IDictionaryEnumerator ^ System.Collections.IDictionary.GetEnumerator() = System::Collections::IDictionary::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IDictionary.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IDictionaryEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f9ccb-404">Udostępnia <see cref="T:System.Collections.IDictionaryEnumerator" /> dla <see cref="T:System.Collections.Generic.IDictionary`2" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9ccb-404">Provides a <see cref="T:System.Collections.IDictionaryEnumerator" /> for the <see cref="T:System.Collections.Generic.IDictionary`2" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f9ccb-405">A <see cref="T:System.Collections.IDictionaryEnumerator" /> dla <see cref="T:System.Collections.Generic.IDictionary`2" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9ccb-405">A <see cref="T:System.Collections.IDictionaryEnumerator" /> for the <see cref="T:System.Collections.Generic.IDictionary`2" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/2e7ca21f-786c-4367-96be-0cf3f3dcc6bd">
          <span data-ttu-id="f9ccb-406">Kolekcje bezpieczne wątkowo</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9ccb-406">Thread-Safe Collections</span>
          </span>
        </related>
        <related type="Article" href="https://msdn.microsoft.com/library/81b64b95-13f7-4532-9249-ab532f629598">
          <span data-ttu-id="f9ccb-407">Porady: dodawanie i usuwanie elementów ConcurrentDictionary</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9ccb-407">How to: Add and Remove Items from a ConcurrentDictionary</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IDictionary.IsFixedSize">
      <MemberSignature Language="C#" Value="bool System.Collections.IDictionary.IsFixedSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.IDictionary.IsFixedSize" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#IDictionary#IsFixedSize" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsFixedSize As Boolean Implements IDictionary.IsFixedSize" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Collections::IDictionary::IsFixedSize { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.IDictionary.IsFixedSize" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IDictionary.IsFixedSize</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f9ccb-408">Pobiera wartość wskazującą czy <see cref="T:System.Collections.Generic.IDictionary`2" /> ma stały rozmiar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9ccb-408">Gets a value indicating whether the <see cref="T:System.Collections.Generic.IDictionary`2" /> has a fixed size.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f9ccb-409">
            <see langword="true" /> Jeśli <see cref="T:System.Collections.Generic.IDictionary`2" /> ma stały rozmiar; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9ccb-409">
              <see langword="true" /> if the <see cref="T:System.Collections.Generic.IDictionary`2" /> has a fixed size; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="f9ccb-410">Aby uzyskać <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" />, właściwość ta zwraca zawsze <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9ccb-410">For <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" />, this property always returns <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/2e7ca21f-786c-4367-96be-0cf3f3dcc6bd">
          <span data-ttu-id="f9ccb-411">Kolekcje bezpieczne wątkowo</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9ccb-411">Thread-Safe Collections</span>
          </span>
        </related>
        <related type="Article" href="https://msdn.microsoft.com/library/81b64b95-13f7-4532-9249-ab532f629598">
          <span data-ttu-id="f9ccb-412">Porady: dodawanie i usuwanie elementów ConcurrentDictionary</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9ccb-412">How to: Add and Remove Items from a ConcurrentDictionary</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IDictionary.IsReadOnly">
      <MemberSignature Language="C#" Value="bool System.Collections.IDictionary.IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.IDictionary.IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#IDictionary#IsReadOnly" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsReadOnly As Boolean Implements IDictionary.IsReadOnly" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Collections::IDictionary::IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.IDictionary.IsReadOnly" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IDictionary.IsReadOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f9ccb-413">Pobiera wartość wskazującą czy <see cref="T:System.Collections.Generic.IDictionary`2" /> jest tylko do odczytu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9ccb-413">Gets a value indicating whether the <see cref="T:System.Collections.Generic.IDictionary`2" /> is read-only.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f9ccb-414">
            <see langword="true" /> Jeśli <see cref="T:System.Collections.Generic.IDictionary`2" /> jest tylko do odczytu; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9ccb-414">
              <see langword="true" /> if the <see cref="T:System.Collections.Generic.IDictionary`2" /> is read-only; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="f9ccb-415">Aby uzyskać <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" />, właściwość ta zwraca zawsze <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9ccb-415">For <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" />, this property always returns <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/2e7ca21f-786c-4367-96be-0cf3f3dcc6bd">
          <span data-ttu-id="f9ccb-416">Kolekcje bezpieczne wątkowo</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9ccb-416">Thread-Safe Collections</span>
          </span>
        </related>
        <related type="Article" href="https://msdn.microsoft.com/library/81b64b95-13f7-4532-9249-ab532f629598">
          <span data-ttu-id="f9ccb-417">Porady: dodawanie i usuwanie elementów ConcurrentDictionary</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9ccb-417">How to: Add and Remove Items from a ConcurrentDictionary</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IDictionary.Item">
      <MemberSignature Language="C#" Value="object System.Collections.IDictionary.Item[object key] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.IDictionary.Item(object)" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#IDictionary#Item(System.Object)" />
      <MemberSignature Language="VB.NET" Value=" Property Item(key As Object) As Object Implements IDictionary.Item" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System::Collections::IDictionary::Item[System::Object ^] { System::Object ^ get(System::Object ^ key); void set(System::Object ^ key, System::Object ^ value); };" />
      <MemberSignature Language="F#" Usage="System.Collections.IDictionary.Item" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IDictionary.Item(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="f9ccb-418">Klucz wartości do pobrania lub ustawienia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9ccb-418">The key of the value to get or set.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f9ccb-419">Pobiera lub ustawia wartość skojarzoną z określonym kluczem.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9ccb-419">Gets or sets the value associated with the specified key.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f9ccb-420">Wartość skojarzoną z określonym kluczem, lub <see langword="null" /> Jeśli <paramref name="key" /> nie znajduje się w słowniku lub <paramref name="key" /> typu, który nie jest możliwy do przypisania do klucza typu <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9ccb-420">The value associated with the specified key, or  <see langword="null" /> if <paramref name="key" /> is not in the dictionary or <paramref name="key" /> is of a type that is not assignable to the key type of the <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f9ccb-421">
            <paramref name="key" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9ccb-421">
              <paramref name="key" /> is  <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="f9ccb-422">Wartość jest przypisany, i <paramref name="key" /> typu, który nie jest możliwy do przypisania do klucza typu lub typ wartości <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9ccb-422">A value is being assigned, and <paramref name="key" /> is of a type that is not assignable to the key type or the value type of the <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" />.</span>
          </span>
        </exception>
        <related type="Article" href="https://msdn.microsoft.com/library/2e7ca21f-786c-4367-96be-0cf3f3dcc6bd">
          <span data-ttu-id="f9ccb-423">Kolekcje bezpieczne wątkowo</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9ccb-423">Thread-Safe Collections</span>
          </span>
        </related>
        <related type="Article" href="https://msdn.microsoft.com/library/81b64b95-13f7-4532-9249-ab532f629598">
          <span data-ttu-id="f9ccb-424">Porady: dodawanie i usuwanie elementów ConcurrentDictionary</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9ccb-424">How to: Add and Remove Items from a ConcurrentDictionary</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IDictionary.Keys">
      <MemberSignature Language="C#" Value="System.Collections.ICollection System.Collections.IDictionary.Keys { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ICollection System.Collections.IDictionary.Keys" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#IDictionary#Keys" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Keys As ICollection Implements IDictionary.Keys" />
      <MemberSignature Language="C++ CLI" Value="property System::Collections::ICollection ^ System::Collections::IDictionary::Keys { System::Collections::ICollection ^ get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.IDictionary.Keys" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IDictionary.Keys</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f9ccb-425">Pobiera <see cref="T:System.Collections.ICollection" /> zawierającą klucze ze słownika z <see cref="T:System.Collections.Generic.IDictionary`2" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9ccb-425">Gets an <see cref="T:System.Collections.ICollection" /> that contains the keys of the  <see cref="T:System.Collections.Generic.IDictionary`2" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f9ccb-426">Interfejs, który zawiera klucze <see cref="T:System.Collections.Generic.IDictionary`2" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9ccb-426">An interface that contains the keys of the <see cref="T:System.Collections.Generic.IDictionary`2" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/2e7ca21f-786c-4367-96be-0cf3f3dcc6bd">
          <span data-ttu-id="f9ccb-427">Kolekcje bezpieczne wątkowo</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9ccb-427">Thread-Safe Collections</span>
          </span>
        </related>
        <related type="Article" href="https://msdn.microsoft.com/library/81b64b95-13f7-4532-9249-ab532f629598">
          <span data-ttu-id="f9ccb-428">Porady: dodawanie i usuwanie elementów ConcurrentDictionary</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9ccb-428">How to: Add and Remove Items from a ConcurrentDictionary</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IDictionary.Remove">
      <MemberSignature Language="C#" Value="void IDictionary.Remove (object key);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IDictionary.Remove(object key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#IDictionary#Remove(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub Remove (key As Object) Implements IDictionary.Remove" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IDictionary.Remove(System::Object ^ key) = System::Collections::IDictionary::Remove;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IDictionary.Remove(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="f9ccb-429">Klucz elementu do usunięcia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9ccb-429">The key of the element to remove.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f9ccb-430">Usuwa element z określonym kluczem z <see cref="T:System.Collections.IDictionary" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9ccb-430">Removes the element with the specified key from the <see cref="T:System.Collections.IDictionary" />.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f9ccb-431">
            <paramref name="key" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9ccb-431">
              <paramref name="key" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <related type="Article" href="https://msdn.microsoft.com/library/2e7ca21f-786c-4367-96be-0cf3f3dcc6bd">
          <span data-ttu-id="f9ccb-432">Kolekcje bezpieczne wątkowo</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9ccb-432">Thread-Safe Collections</span>
          </span>
        </related>
        <related type="Article" href="https://msdn.microsoft.com/library/81b64b95-13f7-4532-9249-ab532f629598">
          <span data-ttu-id="f9ccb-433">Porady: dodawanie i usuwanie elementów ConcurrentDictionary</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9ccb-433">How to: Add and Remove Items from a ConcurrentDictionary</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IDictionary.Values">
      <MemberSignature Language="C#" Value="System.Collections.ICollection System.Collections.IDictionary.Values { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ICollection System.Collections.IDictionary.Values" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#IDictionary#Values" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Values As ICollection Implements IDictionary.Values" />
      <MemberSignature Language="C++ CLI" Value="property System::Collections::ICollection ^ System::Collections::IDictionary::Values { System::Collections::ICollection ^ get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.IDictionary.Values" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IDictionary.Values</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f9ccb-434">Pobiera <see cref="T:System.Collections.ICollection" /> zawierający wartości w <see cref="T:System.Collections.IDictionary" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9ccb-434">Gets an <see cref="T:System.Collections.ICollection" /> that contains the values in the <see cref="T:System.Collections.IDictionary" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f9ccb-435">Interfejs, który zawiera wartości w <see cref="T:System.Collections.IDictionary" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9ccb-435">An interface that contains the values in the <see cref="T:System.Collections.IDictionary" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/2e7ca21f-786c-4367-96be-0cf3f3dcc6bd">
          <span data-ttu-id="f9ccb-436">Kolekcje bezpieczne wątkowo</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9ccb-436">Thread-Safe Collections</span>
          </span>
        </related>
        <related type="Article" href="https://msdn.microsoft.com/library/81b64b95-13f7-4532-9249-ab532f629598">
          <span data-ttu-id="f9ccb-437">Porady: dodawanie i usuwanie elementów ConcurrentDictionary</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9ccb-437">How to: Add and Remove Items from a ConcurrentDictionary</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#IEnumerable#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IEnumerator ^ System.Collections.IEnumerable.GetEnumerator() = System::Collections::IEnumerable::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f9ccb-438">Zwraca moduł wyliczający, który iteruje po <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9ccb-438">Returns an enumerator that iterates through the <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f9ccb-439">Moduł wyliczający <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9ccb-439">An enumerator for the <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9ccb-440">Moduł wyliczający zwrócone ze słownika bezpiecznym rozwiązaniem jest użycie wątkom odczytuje i zapisuje do słownika, jednak nie reprezentuje moment w czasie migawki słownika.</span><span class="sxs-lookup"><span data-stu-id="f9ccb-440">The enumerator returned from the dictionary is safe to use concurrently with reads and writes to the dictionary, however it does not represent a moment-in-time snapshot of the dictionary.</span></span> <span data-ttu-id="f9ccb-441">Treści dostępne za pośrednictwem moduł wyliczający może zawierać modyfikacje wprowadzone do słownika po <xref:System.Collections.Concurrent.ConcurrentDictionary%602.GetEnumerator%2A> została wywołana.</span><span class="sxs-lookup"><span data-stu-id="f9ccb-441">The contents exposed through the enumerator may contain modifications made to the dictionary after <xref:System.Collections.Concurrent.ConcurrentDictionary%602.GetEnumerator%2A> was called.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/2e7ca21f-786c-4367-96be-0cf3f3dcc6bd">
          <span data-ttu-id="f9ccb-442">Kolekcje bezpieczne wątkowo</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9ccb-442">Thread-Safe Collections</span>
          </span>
        </related>
        <related type="Article" href="https://msdn.microsoft.com/library/81b64b95-13f7-4532-9249-ab532f629598">
          <span data-ttu-id="f9ccb-443">Porady: dodawanie i usuwanie elementów ConcurrentDictionary</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9ccb-443">How to: Add and Remove Items from a ConcurrentDictionary</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="ToArray">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;[] ToArray ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Collections.Generic.KeyValuePair`2&lt;!TKey, !TValue&gt;[] ToArray() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.ConcurrentDictionary`2.ToArray" />
      <MemberSignature Language="VB.NET" Value="Public Function ToArray () As KeyValuePair(Of TKey, TValue)()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Collections::Generic::KeyValuePair&lt;TKey, TValue&gt;&gt; ^ ToArray();" />
      <MemberSignature Language="F#" Value="member this.ToArray : unit -&gt; System.Collections.Generic.KeyValuePair&lt;'Key, 'Value&gt;[]" Usage="concurrentDictionary.ToArray " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f9ccb-444">Kopiuje par kluczy i wartości przechowywane w <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> do nowej tablicy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9ccb-444">Copies the key and value pairs stored in the <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> to a new array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f9ccb-445">Nową tablicę zawierającą migawkę par kluczy i wartości są kopiowane z <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9ccb-445">A new array containing a snapshot of key and value pairs copied from the <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/2e7ca21f-786c-4367-96be-0cf3f3dcc6bd">
          <span data-ttu-id="f9ccb-446">Kolekcje bezpieczne wątkowo</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9ccb-446">Thread-Safe Collections</span>
          </span>
        </related>
        <related type="Article" href="https://msdn.microsoft.com/library/81b64b95-13f7-4532-9249-ab532f629598">
          <span data-ttu-id="f9ccb-447">Porady: dodawanie i usuwanie elementów ConcurrentDictionary</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9ccb-447">How to: Add and Remove Items from a ConcurrentDictionary</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="TryAdd">
      <MemberSignature Language="C#" Value="public bool TryAdd (TKey key, TValue value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryAdd(!TKey key, !TValue value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.ConcurrentDictionary`2.TryAdd(`0,`1)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryAdd (key As TKey, value As TValue) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryAdd(TKey key, TValue value);" />
      <MemberSignature Language="F#" Value="member this.TryAdd : 'Key * 'Value -&gt; bool" Usage="concurrentDictionary.TryAdd (key, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="TKey" />
        <Parameter Name="value" Type="TValue" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="f9ccb-448">Klucz elementu do dodania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9ccb-448">The key of the element to add.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="f9ccb-449">Wartość elementu do dodania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9ccb-449">The value of the element to add.</span>
          </span>
          <span data-ttu-id="f9ccb-450">Wartość może być <see langword="null" /> dla typów odwołań.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9ccb-450">The value can be  <see langword="null" /> for reference types.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f9ccb-451">Próbuje dodać określony klucz i wartość, która <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9ccb-451">Attempts to add the specified key and value to the <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f9ccb-452">
            <see langword="true" /> Jeśli para klucza i wartości została dodana do <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> pomyślnie; <see langword="false" /> Jeśli klucz już istnieje.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9ccb-452">
              <see langword="true" /> if the key/value pair was added to the <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> successfully; <see langword="false" /> if the key already exists.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9ccb-453">Ta metoda zwraca `false` Jeśli klucz już istnieje.</span><span class="sxs-lookup"><span data-stu-id="f9ccb-453">This method returns `false` if the key already exists.</span></span> <span data-ttu-id="f9ccb-454">Użyj <xref:System.Collections.Concurrent.ConcurrentDictionary%602.TryUpdate%2A> lub <xref:System.Collections.Concurrent.ConcurrentDictionary%602.AddOrUpdate%2A> metodę, aby zaktualizować wartość, w przypadku, gdy klucz już istnieje.</span><span class="sxs-lookup"><span data-stu-id="f9ccb-454">Use the <xref:System.Collections.Concurrent.ConcurrentDictionary%602.TryUpdate%2A> or <xref:System.Collections.Concurrent.ConcurrentDictionary%602.AddOrUpdate%2A> method to update the value in case a key already exists.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f9ccb-455">Poniższy przykład pokazuje sposób wywoływania <xref:System.Collections.Concurrent.ConcurrentDictionary%602.TryAdd%2A?displayProperty=nameWithType> metody:</span><span class="sxs-lookup"><span data-stu-id="f9ccb-455">The following example shows how to call the <xref:System.Collections.Concurrent.ConcurrentDictionary%602.TryAdd%2A?displayProperty=nameWithType> method:</span></span>  
  
 [!code-csharp[System.Collections.Concurrent.ConcurrentDictionary#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.concurrent.concurrentdictionary/cs/concdictionary.cs#2)]
 [!code-vb[System.Collections.Concurrent.ConcurrentDictionary#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.concurrent.concurrentdictionary/vb/concdictionary.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f9ccb-456">
            <paramref name="key" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9ccb-456">
              <paramref name="key" /> is  <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="f9ccb-457">Słownik zawiera już maksymalną liczbę elementów (<see cref="F:System.Int32.MaxValue" />).</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9ccb-457">The dictionary already contains the maximum number of elements (<see cref="F:System.Int32.MaxValue" />).</span>
          </span>
        </exception>
        <related type="Article" href="https://msdn.microsoft.com/library/2e7ca21f-786c-4367-96be-0cf3f3dcc6bd">
          <span data-ttu-id="f9ccb-458">Kolekcje bezpieczne wątkowo</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9ccb-458">Thread-Safe Collections</span>
          </span>
        </related>
        <related type="Article" href="https://msdn.microsoft.com/library/81b64b95-13f7-4532-9249-ab532f629598">
          <span data-ttu-id="f9ccb-459">Porady: dodawanie i usuwanie elementów ConcurrentDictionary</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9ccb-459">How to: Add and Remove Items from a ConcurrentDictionary</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="TryGetValue">
      <MemberSignature Language="C#" Value="public bool TryGetValue (TKey key, out TValue value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool TryGetValue(!TKey key, [out] !TValue&amp; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.ConcurrentDictionary`2.TryGetValue(`0,`1@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryGetValue (key As TKey, ByRef value As TValue) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool TryGetValue(TKey key, [Runtime::InteropServices::Out] TValue % value);" />
      <MemberSignature Language="F#" Value="abstract member TryGetValue : 'Key *  -&gt; bool&#xA;override this.TryGetValue : 'Key *  -&gt; bool" Usage="concurrentDictionary.TryGetValue (key, value)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IDictionary`2.TryGetValue(`0,`1@)</InterfaceMember>
        <InterfaceMember>M:System.Collections.Generic.IReadOnlyDictionary`2.TryGetValue(`0,`1@)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="TKey" />
        <Parameter Name="value" Type="TValue" RefType="out" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="f9ccb-460">Klucz wartości do pobrania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9ccb-460">The key of the value to get.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="f9ccb-461">Po powrocie z tej metody zawiera obiekt z <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> który ma określony klucz lub wartość domyślną typu, jeśli operacja nie powiodła się.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9ccb-461">When this method returns, contains the object from the <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> that has the specified key, or the default value of the type if the operation failed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f9ccb-462">Próbuje pobrać wartość skojarzoną z określonym kluczem z <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9ccb-462">Attempts to get the value associated with the specified key from the <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f9ccb-463">
            <see langword="true" /> Jeśli klucz został znaleziony w <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" />; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9ccb-463">
              <see langword="true" /> if the key was found in the <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f9ccb-464">
            <paramref name="key" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9ccb-464">
              <paramref name="key" /> is  <see langword="null" />.</span>
          </span>
        </exception>
        <related type="Article" href="https://msdn.microsoft.com/library/2e7ca21f-786c-4367-96be-0cf3f3dcc6bd">
          <span data-ttu-id="f9ccb-465">Kolekcje bezpieczne wątkowo</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9ccb-465">Thread-Safe Collections</span>
          </span>
        </related>
        <related type="Article" href="https://msdn.microsoft.com/library/81b64b95-13f7-4532-9249-ab532f629598">
          <span data-ttu-id="f9ccb-466">Porady: dodawanie i usuwanie elementów ConcurrentDictionary</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9ccb-466">How to: Add and Remove Items from a ConcurrentDictionary</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="TryRemove">
      <MemberSignature Language="C#" Value="public bool TryRemove (TKey key, out TValue value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryRemove(!TKey key, [out] !TValue&amp; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.ConcurrentDictionary`2.TryRemove(`0,`1@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryRemove (key As TKey, ByRef value As TValue) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryRemove(TKey key, [Runtime::InteropServices::Out] TValue % value);" />
      <MemberSignature Language="F#" Value="member this.TryRemove : 'Key *  -&gt; bool" Usage="concurrentDictionary.TryRemove (key, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="TKey" />
        <Parameter Name="value" Type="TValue" RefType="out" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="f9ccb-467">Klucz elementu do usunięcia, a następnie zwracają.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9ccb-467">The key of the element to remove and return.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="f9ccb-468">Po powrocie z tej metody zawiera obiekt, który został usunięty z <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" />, lub wartość domyślną <see langword="TValue" /> wpisz Jeśli <paramref name="key" /> nie istnieje.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9ccb-468">When this method returns, contains the object removed from the <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" />, or the default value of  the <see langword="TValue" /> type if <paramref name="key" /> does not exist.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f9ccb-469">Próbuje usunąć i zwracają wartość, która ma określony klucz z <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9ccb-469">Attempts to remove and return the value that has the specified key from the <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f9ccb-470">
            <see langword="true" /> Jeśli obiekt został usunięty pomyślnie; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9ccb-470">
              <see langword="true" /> if the object was removed successfully; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="f9ccb-471">Poniższy przykład pokazuje sposób wywoływania <xref:System.Collections.Concurrent.ConcurrentDictionary%602.TryRemove%2A?displayProperty=nameWithType> metody:</span><span class="sxs-lookup"><span data-stu-id="f9ccb-471">The following example shows how to call the <xref:System.Collections.Concurrent.ConcurrentDictionary%602.TryRemove%2A?displayProperty=nameWithType> method:</span></span>  
  
 [!code-csharp[System.Collections.Concurrent.ConcurrentDictionary#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.concurrent.concurrentdictionary/cs/concdictionary.cs#2)]
 [!code-vb[System.Collections.Concurrent.ConcurrentDictionary#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.concurrent.concurrentdictionary/vb/concdictionary.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f9ccb-472">
            <paramref name="key" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9ccb-472">
              <paramref name="key" /> is  <see langword="null" />.</span>
          </span>
        </exception>
        <related type="Article" href="https://msdn.microsoft.com/library/2e7ca21f-786c-4367-96be-0cf3f3dcc6bd">
          <span data-ttu-id="f9ccb-473">Kolekcje bezpieczne wątkowo</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9ccb-473">Thread-Safe Collections</span>
          </span>
        </related>
        <related type="Article" href="https://msdn.microsoft.com/library/81b64b95-13f7-4532-9249-ab532f629598">
          <span data-ttu-id="f9ccb-474">Porady: dodawanie i usuwanie elementów ConcurrentDictionary</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9ccb-474">How to: Add and Remove Items from a ConcurrentDictionary</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="TryUpdate">
      <MemberSignature Language="C#" Value="public bool TryUpdate (TKey key, TValue newValue, TValue comparisonValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryUpdate(!TKey key, !TValue newValue, !TValue comparisonValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.ConcurrentDictionary`2.TryUpdate(`0,`1,`1)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryUpdate (key As TKey, newValue As TValue, comparisonValue As TValue) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryUpdate(TKey key, TValue newValue, TValue comparisonValue);" />
      <MemberSignature Language="F#" Value="member this.TryUpdate : 'Key * 'Value * 'Value -&gt; bool" Usage="concurrentDictionary.TryUpdate (key, newValue, comparisonValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="TKey" />
        <Parameter Name="newValue" Type="TValue" />
        <Parameter Name="comparisonValue" Type="TValue" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="f9ccb-475">Klucz wartość, która jest porównywana z <paramref name="comparisonValue" /> i ewentualnie zamieniany.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9ccb-475">The key of the value that is compared with <paramref name="comparisonValue" /> and possibly replaced.</span>
          </span>
        </param>
        <param name="newValue">
          <span data-ttu-id="f9ccb-476">Wartość, która zastępuje wartość elementu, który ma określony <paramref name="key" /> Jeśli wynikiem porównania jest równość.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9ccb-476">The value that replaces the value of the element that has the specified <paramref name="key" /> if the comparison results in equality.</span>
          </span>
        </param>
        <param name="comparisonValue">
          <span data-ttu-id="f9ccb-477">Wartość, która jest porównywana z wartością elementu, który ma określony <paramref name="key" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9ccb-477">The value that is compared with the value of the element that has the specified <paramref name="key" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f9ccb-478">Aktualizuje wartość skojarzoną z <paramref name="key" /> do <paramref name="newValue" /> Jeśli istniejącą wartością <paramref name="key" /> jest równa <paramref name="comparisonValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9ccb-478">Updates the value associated with <paramref name="key" /> to <paramref name="newValue" /> if the existing value with <paramref name="key" /> is equal to <paramref name="comparisonValue" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f9ccb-479">
            <see langword="true" /> Jeśli wartość z <paramref name="key" /> była równa <paramref name="comparisonValue" /> i został zastąpiony <paramref name="newValue" />; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9ccb-479">
              <see langword="true" /> if the value with <paramref name="key" /> was equal to <paramref name="comparisonValue" /> and was replaced with <paramref name="newValue" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="f9ccb-480">Poniższy przykład pokazuje sposób wywoływania <xref:System.Collections.Concurrent.ConcurrentDictionary%602.TryUpdate%2A> metody:</span><span class="sxs-lookup"><span data-stu-id="f9ccb-480">The following example shows how to call the <xref:System.Collections.Concurrent.ConcurrentDictionary%602.TryUpdate%2A> method:</span></span>  
  
 [!code-csharp[System.Collections.Concurrent.ConcurrentDictionary#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.concurrent.concurrentdictionary/cs/concdictionary.cs#2)]
 [!code-vb[System.Collections.Concurrent.ConcurrentDictionary#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.concurrent.concurrentdictionary/vb/concdictionary.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f9ccb-481">
            <paramref name="key" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9ccb-481">
              <paramref name="key" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <related type="Article" href="https://msdn.microsoft.com/library/2e7ca21f-786c-4367-96be-0cf3f3dcc6bd">
          <span data-ttu-id="f9ccb-482">Kolekcje bezpieczne wątkowo</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9ccb-482">Thread-Safe Collections</span>
          </span>
        </related>
        <related type="Article" href="https://msdn.microsoft.com/library/81b64b95-13f7-4532-9249-ab532f629598">
          <span data-ttu-id="f9ccb-483">Porady: dodawanie i usuwanie elementów ConcurrentDictionary</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9ccb-483">How to: Add and Remove Items from a ConcurrentDictionary</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Values">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.ICollection&lt;TValue&gt; Values { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.ICollection`1&lt;!TValue&gt; Values" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Concurrent.ConcurrentDictionary`2.Values" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Values As ICollection(Of TValue)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::ICollection&lt;TValue&gt; ^ Values { System::Collections::Generic::ICollection&lt;TValue&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Values : System.Collections.Generic.ICollection&lt;'Value&gt;" Usage="System.Collections.Concurrent.ConcurrentDictionary&lt;'Key, 'Value&gt;.Values" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.IDictionary`2.Values</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;TValue&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f9ccb-484">Pobiera kolekcję zawierającą wartości w <see cref="T:System.Collections.Generic.Dictionary`2" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9ccb-484">Gets a collection that contains the values in the <see cref="T:System.Collections.Generic.Dictionary`2" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f9ccb-485">Kolekcja zawierająca wartości w <see cref="T:System.Collections.Generic.Dictionary`2" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9ccb-485">A collection that contains the values in the <see cref="T:System.Collections.Generic.Dictionary`2" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/2e7ca21f-786c-4367-96be-0cf3f3dcc6bd">
          <span data-ttu-id="f9ccb-486">Kolekcje bezpieczne wątkowo</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9ccb-486">Thread-Safe Collections</span>
          </span>
        </related>
        <related type="Article" href="https://msdn.microsoft.com/library/81b64b95-13f7-4532-9249-ab532f629598">
          <span data-ttu-id="f9ccb-487">Porady: dodawanie i usuwanie elementów ConcurrentDictionary</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9ccb-487">How to: Add and Remove Items from a ConcurrentDictionary</span>
          </span>
        </related>
      </Docs>
    </Member>
  </Members>
</Type>