<Type Name="TextFieldParser" FullName="Microsoft.VisualBasic.FileIO.TextFieldParser">
  <Metadata><Meta Name="ms.openlocfilehash" Value="7bdbec6a6cef4db7dc377c0a8582f3fae19508f4" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69318742" /></Metadata><TypeSignature Language="C#" Value="public class TextFieldParser : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi TextFieldParser extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:Microsoft.VisualBasic.FileIO.TextFieldParser" />
  <TypeSignature Language="VB.NET" Value="Public Class TextFieldParser&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class TextFieldParser : IDisposable" />
  <TypeSignature Language="F#" Value="type TextFieldParser = class&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic</AssemblyName>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
    <AssemblyVersion>10.0.4.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="96ccb-101">Zapewnia metody i właściwości do analizowania strukturalnych plików tekstowych.</span><span class="sxs-lookup"><span data-stu-id="96ccb-101">Provides methods and properties for parsing structured text files.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="96ccb-102">`TextFieldParser` Obiekt zawiera metody i właściwości służące do analizowania plików tekstu strukturalnego.</span><span class="sxs-lookup"><span data-stu-id="96ccb-102">The `TextFieldParser` object provides methods and properties for parsing structured text files.</span></span> <span data-ttu-id="96ccb-103">Analizowanie pliku tekstowego za pomocą `TextFieldParser` jest podobne do iteracji w pliku tekstowym, `ReadFields` podczas gdy metoda wyodrębniania pól tekstowych jest podobna do podzielenia ciągów.</span><span class="sxs-lookup"><span data-stu-id="96ccb-103">Parsing a text file with the `TextFieldParser` is similar to iterating over a text file, while the `ReadFields` method to extract fields of text is similar to splitting the strings.</span></span>  
  
 <span data-ttu-id="96ccb-104">`TextFieldParser` Może analizować dwa typy plików: rozdzielone lub o stałej szerokości.</span><span class="sxs-lookup"><span data-stu-id="96ccb-104">The `TextFieldParser` can parse two types of files: delimited or fixed-width.</span></span> <span data-ttu-id="96ccb-105">Niektóre właściwości, takie jak `Delimiters` i `HasFieldsEnclosedInQuotes` są zrozumiałe tylko podczas pracy z `FieldWidths` rozdzielonymi plikami, podczas gdy właściwość ma znaczenie tylko podczas pracy z plikami o stałej szerokości.</span><span class="sxs-lookup"><span data-stu-id="96ccb-105">Some properties, such as `Delimiters` and `HasFieldsEnclosedInQuotes` are meaningful only when working with delimited files, while the `FieldWidths` property is meaningful only when working with fixed-width files.</span></span>  
  
 <span data-ttu-id="96ccb-106">W poniższej tabeli przedstawiono przykłady zadań z obiektem `Microsoft.VisualBasic.FileIO.TextFieldParser`.</span><span class="sxs-lookup"><span data-stu-id="96ccb-106">The following table lists examples of tasks involving the `Microsoft.VisualBasic.FileIO.TextFieldParser` object.</span></span>  
  
|<span data-ttu-id="96ccb-107">Zadanie</span><span class="sxs-lookup"><span data-stu-id="96ccb-107">To</span></span>|<span data-ttu-id="96ccb-108">Zobacz</span><span class="sxs-lookup"><span data-stu-id="96ccb-108">See</span></span>|  
|--------|---------|  
|<span data-ttu-id="96ccb-109">Odczytaj z rozdzielanego pliku tekstowego</span><span class="sxs-lookup"><span data-stu-id="96ccb-109">Read from a delimited text file</span></span>|[<span data-ttu-id="96ccb-110">Instrukcje: Odczyt z rozdzielanych przecinkami plików tekstowych</span><span class="sxs-lookup"><span data-stu-id="96ccb-110">How to: Read From Comma-Delimited Text Files</span></span>](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-comma-delimited-text-files.md)|  
|<span data-ttu-id="96ccb-111">Odczytaj z pliku tekstowego o stałej szerokości</span><span class="sxs-lookup"><span data-stu-id="96ccb-111">Read from a fixed-width text file</span></span>|[<span data-ttu-id="96ccb-112">Instrukcje: Odczyt z plików tekstowych o stałej szerokości</span><span class="sxs-lookup"><span data-stu-id="96ccb-112">How to: Read From Fixed-width Text Files</span></span>](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-fixed-width-text-files.md)|  
|<span data-ttu-id="96ccb-113">Odczytaj z pliku tekstowego z wieloma formatami</span><span class="sxs-lookup"><span data-stu-id="96ccb-113">Read from a text file with multiple formats</span></span>|[<span data-ttu-id="96ccb-114">Instrukcje: Odczyt z plików tekstowych z wieloma formatami</span><span class="sxs-lookup"><span data-stu-id="96ccb-114">How to: Read From Text Files with Multiple Formats</span></span>](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-text-files-with-multiple-formats.md)|  
  
   
  
## Examples  
 <span data-ttu-id="96ccb-115">Ten przykład analizuje przedzieloną tabulatorami plik `Bigfile`tekstowy.</span><span class="sxs-lookup"><span data-stu-id="96ccb-115">This example parses through a tab-delimited text file, `Bigfile`.</span></span>  
  
 [!code-vb[VbVbalrTextFieldParser#17](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrTextFieldParser/VB/Class1.vb#17)]  
  
 ]]></format>
    </remarks>
    <altmember cref="M:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFieldParser(System.String)" />
    <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md"><span data-ttu-id="96ccb-116">Obiekty (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="96ccb-116">Objects (Visual Basic)</span></span></related>
    <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/parsing-text-files-with-the-textfieldparser-object.md"><span data-ttu-id="96ccb-117">Analizowanie plików tekstowych za pomocą obiektu TextFieldParser</span><span class="sxs-lookup"><span data-stu-id="96ccb-117">Parsing Text Files with the TextFieldParser Object</span></span></related>
    <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-3.0/2ewecs64(v=vs.85)"><span data-ttu-id="96ccb-118">Rozwiązywanie problemów z wyjątkami: Microsoft.VisualBasic.FileIO.TextFieldParser.MalformedLineException</span><span class="sxs-lookup"><span data-stu-id="96ccb-118">Troubleshooting Exceptions: Microsoft.VisualBasic.FileIO.TextFieldParser.MalformedLineException</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="96ccb-119">Inicjuje nowe wystąpienie klasy <see langword="TextFieldParser" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="96ccb-119">Initializes a new instance of the <see langword="TextFieldParser" /> class.</span></span></summary>
        <altmember cref="M:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFieldParser(System.String)" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md"><span data-ttu-id="96ccb-120">Obiekty (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="96ccb-120">Objects (Visual Basic)</span></span></related>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TextFieldParser (System.IO.Stream stream);" />
      <MemberSignature Language="ILAsm" Value=".method public specialname rtspecialname instance void .ctor(class System.IO.Stream stream) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.IO.Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TextFieldParser(System::IO::Stream ^ stream);" />
      <MemberSignature Language="F#" Value="new Microsoft.VisualBasic.FileIO.TextFieldParser : System.IO.Stream -&gt; Microsoft.VisualBasic.FileIO.TextFieldParser" Usage="new Microsoft.VisualBasic.FileIO.TextFieldParser stream" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="stream"><span data-ttu-id="96ccb-121"><see cref="T:System.IO.Stream" />.</span><span class="sxs-lookup"><span data-stu-id="96ccb-121"><see cref="T:System.IO.Stream" />.</span></span> <span data-ttu-id="96ccb-122">Strumień, który będzie analizowany.</span><span class="sxs-lookup"><span data-stu-id="96ccb-122">The stream to be parsed.</span></span></param>
        <summary><span data-ttu-id="96ccb-123">Inicjuje nowe wystąpienie klasy <see langword="TextFieldParser" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="96ccb-123">Initializes a new instance of the <see langword="TextFieldParser" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="96ccb-124">Tworzy nowy `TextFieldParser` obiekt, aby przeanalizować plik lub strumień, który jest reprezentowany `stream` przez parametr.</span><span class="sxs-lookup"><span data-stu-id="96ccb-124">Creates a new `TextFieldParser` object to parse the file or stream that is represented by the `stream` parameter.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="96ccb-125"><paramref name="stream" />jest <see langword="Nothing" />.</span><span class="sxs-lookup"><span data-stu-id="96ccb-125"><paramref name="stream" /> is <see langword="Nothing" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="96ccb-126"><paramref name="stream" />nie można odczytać z.</span><span class="sxs-lookup"><span data-stu-id="96ccb-126"><paramref name="stream" /> cannot be read from.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFieldParser(System.String)" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md"><span data-ttu-id="96ccb-127">Obiekty (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="96ccb-127">Objects (Visual Basic)</span></span></related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-comma-delimited-text-files.md"><span data-ttu-id="96ccb-128">Instrukcje: Odczytaj z rozdzielanych przecinkami plików tekstowych w Visual Basic</span><span class="sxs-lookup"><span data-stu-id="96ccb-128">How to: Read From Comma-Delimited Text Files in Visual Basic</span></span></related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-fixed-width-text-files.md"><span data-ttu-id="96ccb-129">Instrukcje: Odczytaj od plików tekstowych o stałej szerokości w Visual Basic</span><span class="sxs-lookup"><span data-stu-id="96ccb-129">How to: Read From Fixed-width Text Files in Visual Basic</span></span></related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-text-files-with-multiple-formats.md"><span data-ttu-id="96ccb-130">Instrukcje: Odczytuj z plików tekstowych z wieloma formatami w Visual Basic</span><span class="sxs-lookup"><span data-stu-id="96ccb-130">How to: Read From Text Files with Multiple Formats in Visual Basic</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TextFieldParser (System.IO.TextReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public specialname rtspecialname instance void .ctor(class System.IO.TextReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.IO.TextReader)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (reader As TextReader)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TextFieldParser(System::IO::TextReader ^ reader);" />
      <MemberSignature Language="F#" Value="new Microsoft.VisualBasic.FileIO.TextFieldParser : System.IO.TextReader -&gt; Microsoft.VisualBasic.FileIO.TextFieldParser" Usage="new Microsoft.VisualBasic.FileIO.TextFieldParser reader" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="reader" Type="System.IO.TextReader" />
      </Parameters>
      <Docs>
        <param name="reader"><span data-ttu-id="96ccb-131"><see cref="T:System.IO.TextReader" />.</span><span class="sxs-lookup"><span data-stu-id="96ccb-131"><see cref="T:System.IO.TextReader" />.</span></span> <span data-ttu-id="96ccb-132">Strumień <see cref="T:System.IO.TextReader" /> , który ma zostać przeanalizowany.</span><span class="sxs-lookup"><span data-stu-id="96ccb-132">The <see cref="T:System.IO.TextReader" /> stream to be parsed.</span></span></param>
        <summary><span data-ttu-id="96ccb-133">Inicjuje nowe wystąpienie klasy <see langword="TextFieldParser" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="96ccb-133">Initializes a new instance of the <see langword="TextFieldParser" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="96ccb-134">Tworzy nowy `TextFieldParser` obiekt, aby przeanalizować plik lub strumień, który jest reprezentowany `reader` przez parametr.</span><span class="sxs-lookup"><span data-stu-id="96ccb-134">Creates a new `TextFieldParser` object to parse the file or stream that is represented by the `reader` parameter.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="96ccb-135"><paramref name="reader" />jest <see langword="Nothing" />.</span><span class="sxs-lookup"><span data-stu-id="96ccb-135"><paramref name="reader" /> is <see langword="Nothing" />.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFieldParser(System.String)" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md"><span data-ttu-id="96ccb-136">Obiekty (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="96ccb-136">Objects (Visual Basic)</span></span></related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-comma-delimited-text-files.md"><span data-ttu-id="96ccb-137">Instrukcje: Odczytaj z rozdzielanych przecinkami plików tekstowych w Visual Basic</span><span class="sxs-lookup"><span data-stu-id="96ccb-137">How to: Read From Comma-Delimited Text Files in Visual Basic</span></span></related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-fixed-width-text-files.md"><span data-ttu-id="96ccb-138">Instrukcje: Odczytaj od plików tekstowych o stałej szerokości w Visual Basic</span><span class="sxs-lookup"><span data-stu-id="96ccb-138">How to: Read From Fixed-width Text Files in Visual Basic</span></span></related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-text-files-with-multiple-formats.md"><span data-ttu-id="96ccb-139">Instrukcje: Odczytuj z plików tekstowych z wieloma formatami w Visual Basic</span><span class="sxs-lookup"><span data-stu-id="96ccb-139">How to: Read From Text Files with Multiple Formats in Visual Basic</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TextFieldParser (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public specialname rtspecialname instance void .ctor(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (path As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TextFieldParser(System::String ^ path);" />
      <MemberSignature Language="F#" Value="new Microsoft.VisualBasic.FileIO.TextFieldParser : string -&gt; Microsoft.VisualBasic.FileIO.TextFieldParser" Usage="new Microsoft.VisualBasic.FileIO.TextFieldParser path" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="96ccb-140"><see langword="String" />.</span><span class="sxs-lookup"><span data-stu-id="96ccb-140"><see langword="String" />.</span></span> <span data-ttu-id="96ccb-141">Pełna ścieżka pliku, który ma zostać przeanalizowany.</span><span class="sxs-lookup"><span data-stu-id="96ccb-141">The complete path of the file to be parsed.</span></span></param>
        <summary><span data-ttu-id="96ccb-142">Inicjuje nowe wystąpienie klasy <see langword="TextFieldParser" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="96ccb-142">Initializes a new instance of the <see langword="TextFieldParser" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="96ccb-143">Tworzy nowy `TextFieldParser` obiekt do analizy pliku określonego `path` przez parametr.</span><span class="sxs-lookup"><span data-stu-id="96ccb-143">Creates a new `TextFieldParser` object to parse the file specified by the `path` parameter.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="96ccb-144"><paramref name="path" />jest pustym ciągiem.</span><span class="sxs-lookup"><span data-stu-id="96ccb-144"><paramref name="path" /> is an empty string.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFieldParser(System.String)" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md"><span data-ttu-id="96ccb-145">Obiekty (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="96ccb-145">Objects (Visual Basic)</span></span></related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-comma-delimited-text-files.md"><span data-ttu-id="96ccb-146">Instrukcje: Odczytaj z rozdzielanych przecinkami plików tekstowych w Visual Basic</span><span class="sxs-lookup"><span data-stu-id="96ccb-146">How to: Read From Comma-Delimited Text Files in Visual Basic</span></span></related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-fixed-width-text-files.md"><span data-ttu-id="96ccb-147">Instrukcje: Odczytaj od plików tekstowych o stałej szerokości w Visual Basic</span><span class="sxs-lookup"><span data-stu-id="96ccb-147">How to: Read From Fixed-width Text Files in Visual Basic</span></span></related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-text-files-with-multiple-formats.md"><span data-ttu-id="96ccb-148">Instrukcje: Odczytuj z plików tekstowych z wieloma formatami w Visual Basic</span><span class="sxs-lookup"><span data-stu-id="96ccb-148">How to: Read From Text Files with Multiple Formats in Visual Basic</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TextFieldParser (System.IO.Stream stream, System.Text.Encoding defaultEncoding);" />
      <MemberSignature Language="ILAsm" Value=".method public specialname rtspecialname instance void .ctor(class System.IO.Stream stream, class System.Text.Encoding defaultEncoding) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.IO.Stream,System.Text.Encoding)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TextFieldParser(System::IO::Stream ^ stream, System::Text::Encoding ^ defaultEncoding);" />
      <MemberSignature Language="F#" Value="new Microsoft.VisualBasic.FileIO.TextFieldParser : System.IO.Stream * System.Text.Encoding -&gt; Microsoft.VisualBasic.FileIO.TextFieldParser" Usage="new Microsoft.VisualBasic.FileIO.TextFieldParser (stream, defaultEncoding)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="defaultEncoding" Type="System.Text.Encoding" />
      </Parameters>
      <Docs>
        <param name="stream"><span data-ttu-id="96ccb-149"><see cref="T:System.IO.Stream" />.</span><span class="sxs-lookup"><span data-stu-id="96ccb-149"><see cref="T:System.IO.Stream" />.</span></span> <span data-ttu-id="96ccb-150">Strumień, który będzie analizowany.</span><span class="sxs-lookup"><span data-stu-id="96ccb-150">The stream to be parsed.</span></span></param>
        <param name="defaultEncoding"><span data-ttu-id="96ccb-151"><see cref="T:System.Text.Encoding" />.</span><span class="sxs-lookup"><span data-stu-id="96ccb-151"><see cref="T:System.Text.Encoding" />.</span></span> <span data-ttu-id="96ccb-152">System kodowania znaków, który będzie używany w razie niemożności ustalenia kodowania na podstawie treści pliku.</span><span class="sxs-lookup"><span data-stu-id="96ccb-152">The character encoding to use if encoding is not determined from file.</span></span> <span data-ttu-id="96ccb-153">Wartość domyślna to <see cref="P:System.Text.Encoding.UTF8" />.</span><span class="sxs-lookup"><span data-stu-id="96ccb-153">Default is <see cref="P:System.Text.Encoding.UTF8" />.</span></span></param>
        <summary><span data-ttu-id="96ccb-154">Inicjuje nowe wystąpienie klasy <see langword="TextFieldParser" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="96ccb-154">Initializes a new instance of the <see langword="TextFieldParser" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="96ccb-155">Tworzy nowy `TextFieldParser` obiekt, aby przeanalizować plik lub strumień, który jest reprezentowany `stream` przez parametr.</span><span class="sxs-lookup"><span data-stu-id="96ccb-155">Creates a new `TextFieldParser` object to parse the file or stream that is represented by the `stream` parameter.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="96ccb-156">Gdy zbiór znaków zostanie skompilowany z określonym ustawieniem kultury, po czym pobrany z użyciem innego ustawienia kultury, znaki mogą nie nadawać się do interpretacji i powodować zgłoszenie wyjątku.</span><span class="sxs-lookup"><span data-stu-id="96ccb-156">When you compile a set of characters with a particular cultural setting and retrieve those same characters with a different cultural setting, the characters might not be interpretable and could cause an exception to be thrown.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="96ccb-157"><paramref name="stream" />lub <paramref name="defaultEncoding" /> jest <see langword="Nothing" />.</span><span class="sxs-lookup"><span data-stu-id="96ccb-157"><paramref name="stream" /> or <paramref name="defaultEncoding" /> is <see langword="Nothing" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="96ccb-158"><paramref name="stream" />nie można odczytać z.</span><span class="sxs-lookup"><span data-stu-id="96ccb-158"><paramref name="stream" /> cannot be read from.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFieldParser(System.String)" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md"><span data-ttu-id="96ccb-159">Obiekty (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="96ccb-159">Objects (Visual Basic)</span></span></related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-comma-delimited-text-files.md"><span data-ttu-id="96ccb-160">Instrukcje: Odczytaj z rozdzielanych przecinkami plików tekstowych w Visual Basic</span><span class="sxs-lookup"><span data-stu-id="96ccb-160">How to: Read From Comma-Delimited Text Files in Visual Basic</span></span></related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-fixed-width-text-files.md"><span data-ttu-id="96ccb-161">Instrukcje: Odczytaj od plików tekstowych o stałej szerokości w Visual Basic</span><span class="sxs-lookup"><span data-stu-id="96ccb-161">How to: Read From Fixed-width Text Files in Visual Basic</span></span></related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-text-files-with-multiple-formats.md"><span data-ttu-id="96ccb-162">Instrukcje: Odczytuj z plików tekstowych z wieloma formatami w Visual Basic</span><span class="sxs-lookup"><span data-stu-id="96ccb-162">How to: Read From Text Files with Multiple Formats in Visual Basic</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TextFieldParser (string path, System.Text.Encoding defaultEncoding);" />
      <MemberSignature Language="ILAsm" Value=".method public specialname rtspecialname instance void .ctor(string path, class System.Text.Encoding defaultEncoding) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.String,System.Text.Encoding)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (path As String, defaultEncoding As Encoding)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TextFieldParser(System::String ^ path, System::Text::Encoding ^ defaultEncoding);" />
      <MemberSignature Language="F#" Value="new Microsoft.VisualBasic.FileIO.TextFieldParser : string * System.Text.Encoding -&gt; Microsoft.VisualBasic.FileIO.TextFieldParser" Usage="new Microsoft.VisualBasic.FileIO.TextFieldParser (path, defaultEncoding)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="defaultEncoding" Type="System.Text.Encoding" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="96ccb-163"><see langword="String" />.</span><span class="sxs-lookup"><span data-stu-id="96ccb-163"><see langword="String" />.</span></span> <span data-ttu-id="96ccb-164">Pełna ścieżka pliku, który ma zostać przeanalizowany.</span><span class="sxs-lookup"><span data-stu-id="96ccb-164">The complete path of the file to be parsed.</span></span></param>
        <param name="defaultEncoding"><span data-ttu-id="96ccb-165"><see cref="T:System.Text.Encoding" />.</span><span class="sxs-lookup"><span data-stu-id="96ccb-165"><see cref="T:System.Text.Encoding" />.</span></span> <span data-ttu-id="96ccb-166">System kodowania znaków, który będzie używany w razie niemożności ustalenia kodowania na podstawie treści pliku.</span><span class="sxs-lookup"><span data-stu-id="96ccb-166">The character encoding to use if encoding is not determined from file.</span></span> <span data-ttu-id="96ccb-167">Wartość domyślna to <see cref="P:System.Text.Encoding.UTF8" />.</span><span class="sxs-lookup"><span data-stu-id="96ccb-167">Default is <see cref="P:System.Text.Encoding.UTF8" />.</span></span></param>
        <summary><span data-ttu-id="96ccb-168">Inicjuje nowe wystąpienie klasy <see langword="TextFieldParser" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="96ccb-168">Initializes a new instance of the <see langword="TextFieldParser" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="96ccb-169">Tworzy nowy `TextFieldParser` obiekt do analizy pliku określonego `path` przez parametr.</span><span class="sxs-lookup"><span data-stu-id="96ccb-169">Creates a new `TextFieldParser` object to parse the file specified by the `path` parameter.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="96ccb-170">Gdy zbiór znaków zostanie skompilowany z określonym ustawieniem kultury, po czym pobrany z użyciem innego ustawienia kultury, znaki mogą nie nadawać się do interpretacji i powodować zgłoszenie wyjątku.</span><span class="sxs-lookup"><span data-stu-id="96ccb-170">When you compile a set of characters with a particular cultural setting and retrieve those same characters with a different cultural setting, the characters might not be interpretable and could cause an exception to be thrown.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="96ccb-171"><paramref name="path" />jest ciągiem pustym lub <paramref name="defaultEncoding" /> jest <see langword="Nothing" />.</span><span class="sxs-lookup"><span data-stu-id="96ccb-171"><paramref name="path" /> is an empty string or <paramref name="defaultEncoding" /> is <see langword="Nothing" />.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFieldParser(System.String)" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md"><span data-ttu-id="96ccb-172">Obiekty (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="96ccb-172">Objects (Visual Basic)</span></span></related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-comma-delimited-text-files.md"><span data-ttu-id="96ccb-173">Instrukcje: Odczytaj z rozdzielanych przecinkami plików tekstowych w Visual Basic</span><span class="sxs-lookup"><span data-stu-id="96ccb-173">How to: Read From Comma-Delimited Text Files in Visual Basic</span></span></related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-fixed-width-text-files.md"><span data-ttu-id="96ccb-174">Instrukcje: Odczytaj od plików tekstowych o stałej szerokości w Visual Basic</span><span class="sxs-lookup"><span data-stu-id="96ccb-174">How to: Read From Fixed-width Text Files in Visual Basic</span></span></related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-text-files-with-multiple-formats.md"><span data-ttu-id="96ccb-175">Instrukcje: Odczytuj z plików tekstowych z wieloma formatami w Visual Basic</span><span class="sxs-lookup"><span data-stu-id="96ccb-175">How to: Read From Text Files with Multiple Formats in Visual Basic</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TextFieldParser (System.IO.Stream stream, System.Text.Encoding defaultEncoding, bool detectEncoding);" />
      <MemberSignature Language="ILAsm" Value=".method public specialname rtspecialname instance void .ctor(class System.IO.Stream stream, class System.Text.Encoding defaultEncoding, bool detectEncoding) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.IO.Stream,System.Text.Encoding,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TextFieldParser(System::IO::Stream ^ stream, System::Text::Encoding ^ defaultEncoding, bool detectEncoding);" />
      <MemberSignature Language="F#" Value="new Microsoft.VisualBasic.FileIO.TextFieldParser : System.IO.Stream * System.Text.Encoding * bool -&gt; Microsoft.VisualBasic.FileIO.TextFieldParser" Usage="new Microsoft.VisualBasic.FileIO.TextFieldParser (stream, defaultEncoding, detectEncoding)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="defaultEncoding" Type="System.Text.Encoding" />
        <Parameter Name="detectEncoding" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="stream"><span data-ttu-id="96ccb-176"><see cref="T:System.IO.Stream" />.</span><span class="sxs-lookup"><span data-stu-id="96ccb-176"><see cref="T:System.IO.Stream" />.</span></span> <span data-ttu-id="96ccb-177">Strumień, który będzie analizowany.</span><span class="sxs-lookup"><span data-stu-id="96ccb-177">The stream to be parsed.</span></span></param>
        <param name="defaultEncoding"><span data-ttu-id="96ccb-178"><see cref="T:System.Text.Encoding" />.</span><span class="sxs-lookup"><span data-stu-id="96ccb-178"><see cref="T:System.Text.Encoding" />.</span></span> <span data-ttu-id="96ccb-179">System kodowania znaków, który będzie używany w razie niemożności ustalenia kodowania na podstawie treści pliku.</span><span class="sxs-lookup"><span data-stu-id="96ccb-179">The character encoding to use if encoding is not determined from file.</span></span> <span data-ttu-id="96ccb-180">Wartość domyślna to <see cref="P:System.Text.Encoding.UTF8" />.</span><span class="sxs-lookup"><span data-stu-id="96ccb-180">Default is <see cref="P:System.Text.Encoding.UTF8" />.</span></span></param>
        <param name="detectEncoding"><span data-ttu-id="96ccb-181"><see langword="Boolean" />.</span><span class="sxs-lookup"><span data-stu-id="96ccb-181"><see langword="Boolean" />.</span></span> <span data-ttu-id="96ccb-182">Wskazuje, czy na początku pliku mają być szukane znaczniki kolejności bajtów.</span><span class="sxs-lookup"><span data-stu-id="96ccb-182">Indicates whether to look for byte order marks at the beginning of the file.</span></span> <span data-ttu-id="96ccb-183">Wartość domyślna to <see langword="True" />.</span><span class="sxs-lookup"><span data-stu-id="96ccb-183">Default is <see langword="True" />.</span></span></param>
        <summary><span data-ttu-id="96ccb-184">Inicjuje nowe wystąpienie klasy <see langword="TextFieldParser" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="96ccb-184">Initializes a new instance of the <see langword="TextFieldParser" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="96ccb-185">Tworzy nowy `TextFieldParser` obiekt, aby przeanalizować plik lub strumień, który jest reprezentowany `stream` przez parametr.</span><span class="sxs-lookup"><span data-stu-id="96ccb-185">Creates a new `TextFieldParser` object to parse the file or stream that is represented by the `stream` parameter.</span></span>  
  
 <span data-ttu-id="96ccb-186">Jeśli parametr jest `True`, ten Konstruktor próbuje wykryć kodowanie, patrząc na pierwsze trzy bajty pliku lub strumienia. `detectEncoding`</span><span class="sxs-lookup"><span data-stu-id="96ccb-186">If the `detectEncoding` parameter is `True`, this constructor attempts to detect the encoding by looking at the first three bytes of the file or stream.</span></span> <span data-ttu-id="96ccb-187">Automatycznie rozpoznaje kodowanie UTF-8, little-endian Unicode i big-endian Unicode, jeśli plik zaczyna się od odpowiednich znaków kolejności bajtów.</span><span class="sxs-lookup"><span data-stu-id="96ccb-187">It automatically recognizes UTF-8, little-endian Unicode, and big-endian Unicode text if the file starts with the appropriate byte-order marks.</span></span> <span data-ttu-id="96ccb-188">W przeciwnym razie używane jest kodowanie `defaultEncoding` określone przez.</span><span class="sxs-lookup"><span data-stu-id="96ccb-188">Otherwise, the encoding specified by `defaultEncoding` is used.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="96ccb-189">Gdy zbiór znaków zostanie skompilowany z określonym ustawieniem kultury, po czym pobrany z użyciem innego ustawienia kultury, znaki mogą nie nadawać się do interpretacji i powodować zgłoszenie wyjątku.</span><span class="sxs-lookup"><span data-stu-id="96ccb-189">When you compile a set of characters with a particular cultural setting and retrieve those same characters with a different cultural setting, the characters might not be interpretable and could cause an exception to be thrown.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="96ccb-190"><paramref name="stream" />lub <paramref name="defaultEncoding" /> jest <see langword="Nothing" />.</span><span class="sxs-lookup"><span data-stu-id="96ccb-190"><paramref name="stream" /> or <paramref name="defaultEncoding" /> is <see langword="Nothing" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="96ccb-191"><paramref name="stream" />nie można odczytać z.</span><span class="sxs-lookup"><span data-stu-id="96ccb-191"><paramref name="stream" /> cannot be read from.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFieldParser(System.String)" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md"><span data-ttu-id="96ccb-192">Obiekty (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="96ccb-192">Objects (Visual Basic)</span></span></related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-comma-delimited-text-files.md"><span data-ttu-id="96ccb-193">Instrukcje: Odczytaj z rozdzielanych przecinkami plików tekstowych w Visual Basic</span><span class="sxs-lookup"><span data-stu-id="96ccb-193">How to: Read From Comma-Delimited Text Files in Visual Basic</span></span></related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-fixed-width-text-files.md"><span data-ttu-id="96ccb-194">Instrukcje: Odczytaj od plików tekstowych o stałej szerokości w Visual Basic</span><span class="sxs-lookup"><span data-stu-id="96ccb-194">How to: Read From Fixed-width Text Files in Visual Basic</span></span></related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-text-files-with-multiple-formats.md"><span data-ttu-id="96ccb-195">Instrukcje: Odczytuj z plików tekstowych z wieloma formatami w Visual Basic</span><span class="sxs-lookup"><span data-stu-id="96ccb-195">How to: Read From Text Files with Multiple Formats in Visual Basic</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TextFieldParser (string path, System.Text.Encoding defaultEncoding, bool detectEncoding);" />
      <MemberSignature Language="ILAsm" Value=".method public specialname rtspecialname instance void .ctor(string path, class System.Text.Encoding defaultEncoding, bool detectEncoding) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.String,System.Text.Encoding,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (path As String, defaultEncoding As Encoding, detectEncoding As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TextFieldParser(System::String ^ path, System::Text::Encoding ^ defaultEncoding, bool detectEncoding);" />
      <MemberSignature Language="F#" Value="new Microsoft.VisualBasic.FileIO.TextFieldParser : string * System.Text.Encoding * bool -&gt; Microsoft.VisualBasic.FileIO.TextFieldParser" Usage="new Microsoft.VisualBasic.FileIO.TextFieldParser (path, defaultEncoding, detectEncoding)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="defaultEncoding" Type="System.Text.Encoding" />
        <Parameter Name="detectEncoding" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="96ccb-196"><see langword="String" />.</span><span class="sxs-lookup"><span data-stu-id="96ccb-196"><see langword="String" />.</span></span> <span data-ttu-id="96ccb-197">Pełna ścieżka pliku, który ma zostać przeanalizowany.</span><span class="sxs-lookup"><span data-stu-id="96ccb-197">The complete path of the file to be parsed.</span></span></param>
        <param name="defaultEncoding"><span data-ttu-id="96ccb-198"><see cref="T:System.Text.Encoding" />.</span><span class="sxs-lookup"><span data-stu-id="96ccb-198"><see cref="T:System.Text.Encoding" />.</span></span> <span data-ttu-id="96ccb-199">System kodowania znaków, który będzie używany w razie niemożności ustalenia kodowania na podstawie treści pliku.</span><span class="sxs-lookup"><span data-stu-id="96ccb-199">The character encoding to use if encoding is not determined from file.</span></span> <span data-ttu-id="96ccb-200">Wartość domyślna to <see cref="P:System.Text.Encoding.UTF8" />.</span><span class="sxs-lookup"><span data-stu-id="96ccb-200">Default is <see cref="P:System.Text.Encoding.UTF8" />.</span></span></param>
        <param name="detectEncoding"><span data-ttu-id="96ccb-201"><see langword="Boolean" />.</span><span class="sxs-lookup"><span data-stu-id="96ccb-201"><see langword="Boolean" />.</span></span> <span data-ttu-id="96ccb-202">Wskazuje, czy na początku pliku mają być szukane znaczniki kolejności bajtów.</span><span class="sxs-lookup"><span data-stu-id="96ccb-202">Indicates whether to look for byte order marks at the beginning of the file.</span></span> <span data-ttu-id="96ccb-203">Wartość domyślna to <see langword="True" />.</span><span class="sxs-lookup"><span data-stu-id="96ccb-203">Default is <see langword="True" />.</span></span></param>
        <summary><span data-ttu-id="96ccb-204">Inicjuje nowe wystąpienie klasy <see langword="TextFieldParser" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="96ccb-204">Initializes a new instance of the <see langword="TextFieldParser" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="96ccb-205">Tworzy nowy `TextFieldParser` obiekt do analizy pliku określonego `path` przez parametr.</span><span class="sxs-lookup"><span data-stu-id="96ccb-205">Creates a new `TextFieldParser` object to parse the file specified by the `path` parameter.</span></span>  
  
 <span data-ttu-id="96ccb-206">Jeśli parametr jest `True`, ten Konstruktor próbuje wykryć kodowanie, patrząc na pierwsze trzy bajty pliku lub strumienia. `detectEncoding`</span><span class="sxs-lookup"><span data-stu-id="96ccb-206">If the `detectEncoding` parameter is `True`, this constructor attempts to detect the encoding by looking at the first three bytes of the file or stream.</span></span> <span data-ttu-id="96ccb-207">Automatycznie rozpoznaje kodowanie UTF-8, little-endian Unicode i big-endian Unicode, jeśli plik zaczyna się od odpowiednich znaków kolejności bajtów.</span><span class="sxs-lookup"><span data-stu-id="96ccb-207">It automatically recognizes UTF-8, little-endian Unicode, and big-endian Unicode text if the file starts with the appropriate byte-order marks.</span></span> <span data-ttu-id="96ccb-208">W przeciwnym razie używane jest kodowanie `defaultEncoding` określone przez.</span><span class="sxs-lookup"><span data-stu-id="96ccb-208">Otherwise, the encoding specified by `defaultEncoding` is used.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="96ccb-209">Gdy zbiór znaków zostanie skompilowany z określonym ustawieniem kultury, po czym pobrany z użyciem innego ustawienia kultury, znaki mogą nie nadawać się do interpretacji i powodować zgłoszenie wyjątku.</span><span class="sxs-lookup"><span data-stu-id="96ccb-209">When you compile a set of characters with a particular cultural setting and retrieve those same characters with a different cultural setting, the characters might not be interpretable and could cause an exception to be thrown.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="96ccb-210"><paramref name="path" />jest ciągiem pustym lub <paramref name="defaultEncoding" /> jest <see langword="Nothing" />.</span><span class="sxs-lookup"><span data-stu-id="96ccb-210"><paramref name="path" /> is an empty string or <paramref name="defaultEncoding" /> is <see langword="Nothing" />.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFieldParser(System.String)" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md"><span data-ttu-id="96ccb-211">Obiekty (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="96ccb-211">Objects (Visual Basic)</span></span></related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-comma-delimited-text-files.md"><span data-ttu-id="96ccb-212">Instrukcje: Odczytaj z rozdzielanych przecinkami plików tekstowych w Visual Basic</span><span class="sxs-lookup"><span data-stu-id="96ccb-212">How to: Read From Comma-Delimited Text Files in Visual Basic</span></span></related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-fixed-width-text-files.md"><span data-ttu-id="96ccb-213">Instrukcje: Odczytaj od plików tekstowych o stałej szerokości w Visual Basic</span><span class="sxs-lookup"><span data-stu-id="96ccb-213">How to: Read From Fixed-width Text Files in Visual Basic</span></span></related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-text-files-with-multiple-formats.md"><span data-ttu-id="96ccb-214">Instrukcje: Odczytuj z plików tekstowych z wieloma formatami w Visual Basic</span><span class="sxs-lookup"><span data-stu-id="96ccb-214">How to: Read From Text Files with Multiple Formats in Visual Basic</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TextFieldParser (System.IO.Stream stream, System.Text.Encoding defaultEncoding, bool detectEncoding, bool leaveOpen);" />
      <MemberSignature Language="ILAsm" Value=".method public specialname rtspecialname instance void .ctor(class System.IO.Stream stream, class System.Text.Encoding defaultEncoding, bool detectEncoding, bool leaveOpen) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.IO.Stream,System.Text.Encoding,System.Boolean,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TextFieldParser(System::IO::Stream ^ stream, System::Text::Encoding ^ defaultEncoding, bool detectEncoding, bool leaveOpen);" />
      <MemberSignature Language="F#" Value="new Microsoft.VisualBasic.FileIO.TextFieldParser : System.IO.Stream * System.Text.Encoding * bool * bool -&gt; Microsoft.VisualBasic.FileIO.TextFieldParser" Usage="new Microsoft.VisualBasic.FileIO.TextFieldParser (stream, defaultEncoding, detectEncoding, leaveOpen)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="defaultEncoding" Type="System.Text.Encoding" />
        <Parameter Name="detectEncoding" Type="System.Boolean" />
        <Parameter Name="leaveOpen" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="stream"><span data-ttu-id="96ccb-215"><see cref="T:System.IO.Stream" />.</span><span class="sxs-lookup"><span data-stu-id="96ccb-215"><see cref="T:System.IO.Stream" />.</span></span> <span data-ttu-id="96ccb-216">Strumień, który będzie analizowany.</span><span class="sxs-lookup"><span data-stu-id="96ccb-216">The stream to be parsed.</span></span></param>
        <param name="defaultEncoding"><span data-ttu-id="96ccb-217"><see cref="T:System.Text.Encoding" />.</span><span class="sxs-lookup"><span data-stu-id="96ccb-217"><see cref="T:System.Text.Encoding" />.</span></span> <span data-ttu-id="96ccb-218">System kodowania znaków, który będzie używany w razie niemożności ustalenia kodowania na podstawie treści pliku.</span><span class="sxs-lookup"><span data-stu-id="96ccb-218">The character encoding to use if encoding is not determined from file.</span></span> <span data-ttu-id="96ccb-219">Wartość domyślna to <see cref="P:System.Text.Encoding.UTF8" />.</span><span class="sxs-lookup"><span data-stu-id="96ccb-219">Default is <see cref="P:System.Text.Encoding.UTF8" />.</span></span></param>
        <param name="detectEncoding"><span data-ttu-id="96ccb-220"><see langword="Boolean" />.</span><span class="sxs-lookup"><span data-stu-id="96ccb-220"><see langword="Boolean" />.</span></span> <span data-ttu-id="96ccb-221">Wskazuje, czy na początku pliku mają być szukane znaczniki kolejności bajtów.</span><span class="sxs-lookup"><span data-stu-id="96ccb-221">Indicates whether to look for byte order marks at the beginning of the file.</span></span> <span data-ttu-id="96ccb-222">Wartość domyślna to <see langword="True" />.</span><span class="sxs-lookup"><span data-stu-id="96ccb-222">Default is <see langword="True" />.</span></span></param>
        <param name="leaveOpen"><span data-ttu-id="96ccb-223"><see langword="Boolean" />.</span><span class="sxs-lookup"><span data-stu-id="96ccb-223"><see langword="Boolean" />.</span></span> <span data-ttu-id="96ccb-224">Wskazuje, czy pozostawić <paramref name="stream" /> otwarty, <see langword="TextFieldParser" /> gdy obiekt jest zamknięty.</span><span class="sxs-lookup"><span data-stu-id="96ccb-224">Indicates whether to leave <paramref name="stream" /> open when the <see langword="TextFieldParser" /> object is closed.</span></span> <span data-ttu-id="96ccb-225">Wartość domyślna to <see langword="False" />.</span><span class="sxs-lookup"><span data-stu-id="96ccb-225">Default is <see langword="False" />.</span></span></param>
        <summary><span data-ttu-id="96ccb-226">Inicjuje nowe wystąpienie klasy <see langword="TextFieldParser" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="96ccb-226">Initializes a new instance of the <see langword="TextFieldParser" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="96ccb-227">Tworzy nowy `TextFieldParser` obiekt, aby przeanalizować plik lub strumień, który jest reprezentowany `stream` przez parametr.</span><span class="sxs-lookup"><span data-stu-id="96ccb-227">Creates a new `TextFieldParser` object to parse the file or stream that is represented by the `stream` parameter.</span></span>  
  
 <span data-ttu-id="96ccb-228">Jeśli parametr jest `True`, ten Konstruktor próbuje wykryć kodowanie, patrząc na pierwsze trzy bajty pliku lub strumienia. `detectEncoding`</span><span class="sxs-lookup"><span data-stu-id="96ccb-228">If the `detectEncoding` parameter is `True`, this constructor attempts to detect the encoding by looking at the first three bytes of the file or stream.</span></span> <span data-ttu-id="96ccb-229">Automatycznie rozpoznaje kodowanie UTF-8, little-endian Unicode i big-endian Unicode, jeśli plik zaczyna się od odpowiednich znaków kolejności bajtów.</span><span class="sxs-lookup"><span data-stu-id="96ccb-229">It automatically recognizes UTF-8, little-endian Unicode, and big-endian Unicode text if the file starts with the appropriate byte-order marks.</span></span> <span data-ttu-id="96ccb-230">W przeciwnym razie używane jest kodowanie `defaultEncoding` określone przez.</span><span class="sxs-lookup"><span data-stu-id="96ccb-230">Otherwise, the encoding specified by `defaultEncoding` is used.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="96ccb-231">Gdy zbiór znaków zostanie skompilowany z określonym ustawieniem kultury, po czym pobrany z użyciem innego ustawienia kultury, znaki mogą nie nadawać się do interpretacji i powodować zgłoszenie wyjątku.</span><span class="sxs-lookup"><span data-stu-id="96ccb-231">When you compile a set of characters with a particular cultural setting and retrieve those same characters with a different cultural setting, the characters might not be interpretable and could cause an exception to be thrown.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="96ccb-232"><paramref name="stream" />lub <paramref name="defaultEncoding" /> jest <see langword="Nothing" />.</span><span class="sxs-lookup"><span data-stu-id="96ccb-232"><paramref name="stream" /> or <paramref name="defaultEncoding" /> is <see langword="Nothing" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="96ccb-233"><paramref name="stream" />nie można odczytać z.</span><span class="sxs-lookup"><span data-stu-id="96ccb-233"><paramref name="stream" /> cannot be read from.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFieldParser(System.String)" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md"><span data-ttu-id="96ccb-234">Obiekty (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="96ccb-234">Objects (Visual Basic)</span></span></related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-comma-delimited-text-files.md"><span data-ttu-id="96ccb-235">Instrukcje: Odczytaj z rozdzielanych przecinkami plików tekstowych w Visual Basic</span><span class="sxs-lookup"><span data-stu-id="96ccb-235">How to: Read From Comma-Delimited Text Files in Visual Basic</span></span></related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-fixed-width-text-files.md"><span data-ttu-id="96ccb-236">Instrukcje: Odczytaj od plików tekstowych o stałej szerokości w Visual Basic</span><span class="sxs-lookup"><span data-stu-id="96ccb-236">How to: Read From Fixed-width Text Files in Visual Basic</span></span></related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-text-files-with-multiple-formats.md"><span data-ttu-id="96ccb-237">Instrukcje: Odczytuj z plików tekstowych z wieloma formatami w Visual Basic</span><span class="sxs-lookup"><span data-stu-id="96ccb-237">How to: Read From Text Files with Multiple Formats in Visual Basic</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileIO.TextFieldParser.Close" />
      <MemberSignature Language="VB.NET" Value="Public Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Close();" />
      <MemberSignature Language="F#" Value="member this.Close : unit -&gt; unit" Usage="textFieldParser.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-3.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="96ccb-238">Zamyka bieżący <see langword="TextFieldParser" /> obiekt.</span><span class="sxs-lookup"><span data-stu-id="96ccb-238">Closes the current <see langword="TextFieldParser" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="96ccb-239">Ten przykład zamyka `TextFieldParser.FileReader`.</span><span class="sxs-lookup"><span data-stu-id="96ccb-239">This example closes the `TextFieldParser.FileReader`.</span></span>  
  
 [!code-vb[VbVbalrTextFieldParser#14](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrTextFieldParser/VB/Class1.vb#14)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFieldParser(System.String)" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md"><span data-ttu-id="96ccb-240">Obiekty (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="96ccb-240">Objects (Visual Basic)</span></span></related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/parsing-text-files-with-the-textfieldparser-object.md"><span data-ttu-id="96ccb-241">Analizowanie plików tekstowych za pomocą obiektu TextFieldParser</span><span class="sxs-lookup"><span data-stu-id="96ccb-241">Parsing Text Files with the TextFieldParser Object</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="CommentTokens">
      <MemberSignature Language="C#" Value="public string[] CommentTokens { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] CommentTokens" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.FileIO.TextFieldParser.CommentTokens" />
      <MemberSignature Language="VB.NET" Value="Public Property CommentTokens As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::String ^&gt; ^ CommentTokens { cli::array &lt;System::String ^&gt; ^ get(); void set(cli::array &lt;System::String ^&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CommentTokens : string[] with get, set" Usage="Microsoft.VisualBasic.FileIO.TextFieldParser.CommentTokens" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="96ccb-242">Definiuje tokeny komentarza.</span><span class="sxs-lookup"><span data-stu-id="96ccb-242">Defines comment tokens.</span></span> <span data-ttu-id="96ccb-243">Token komentarza jest ciągiem, który po umieszczeniu na początku wiersza wskazuje, że wiersz jest komentarzem i powinien być ignorowany przez parser.</span><span class="sxs-lookup"><span data-stu-id="96ccb-243">A comment token is a string that, when placed at the beginning of a line, indicates that the line is a comment and should be ignored by the parser.</span></span></summary>
        <value><span data-ttu-id="96ccb-244">Tablica ciągów zawierająca wszystkie tokeny komentarza dla <see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" /> obiektu.</span><span class="sxs-lookup"><span data-stu-id="96ccb-244">A string array that contains all of the comment tokens for the <see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" /> object.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="96ccb-245">Jest to zaawansowany element członkowski; nie jest wyświetlana w IntelliSense, chyba że klikniesz kartę **wszystkie** .</span><span class="sxs-lookup"><span data-stu-id="96ccb-245">This is an advanced member; it does not show in IntelliSense unless you click the **All** tab.</span></span>  
  
 <span data-ttu-id="96ccb-246">Tokeny komentarza o zerowej długości są ignorowane.</span><span class="sxs-lookup"><span data-stu-id="96ccb-246">Zero-length comment tokens are ignored.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="96ccb-247">Ten przykład określa, że dla `TextFieldParser`, `FileReader` wierszy zaczynających się od pojedynczego cudzysłowu (') powinien zostać zignorowany.</span><span class="sxs-lookup"><span data-stu-id="96ccb-247">This example specifies that for the `TextFieldParser`, `FileReader` lines beginning with a single quotation mark (') should be ignored.</span></span>  
  
 [!code-vb[VbVbalrTextFieldParser#5](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrTextFieldParser/VB/Class1.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="96ccb-248">Token komentarza zawiera biały znak.</span><span class="sxs-lookup"><span data-stu-id="96ccb-248">A comment token includes white space.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFieldParser(System.String)" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md"><span data-ttu-id="96ccb-249">Obiekty (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="96ccb-249">Objects (Visual Basic)</span></span></related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-comma-delimited-text-files.md"><span data-ttu-id="96ccb-250">Instrukcje: Odczytaj z rozdzielanego przecinkami pliku tekstowego w Visual Basic</span><span class="sxs-lookup"><span data-stu-id="96ccb-250">How to: Read From a Comma-Delimited Text File in Visual Basic</span></span></related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-fixed-width-text-files.md"><span data-ttu-id="96ccb-251">Instrukcje: Odczytaj z pliku tekstowego o stałej szerokości w Visual Basic</span><span class="sxs-lookup"><span data-stu-id="96ccb-251">How to: Read From a Fixed-width Text File in Visual Basic</span></span></related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-text-files-with-multiple-formats.md"><span data-ttu-id="96ccb-252">Instrukcje: Odczytaj z pliku tekstowego wiele formatów w Visual Basic</span><span class="sxs-lookup"><span data-stu-id="96ccb-252">How to: Read From a Text File with Multiple Formats in Visual Basic</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Delimiters">
      <MemberSignature Language="C#" Value="public string[] Delimiters { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] Delimiters" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.FileIO.TextFieldParser.Delimiters" />
      <MemberSignature Language="VB.NET" Value="Public Property Delimiters As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::String ^&gt; ^ Delimiters { cli::array &lt;System::String ^&gt; ^ get(); void set(cli::array &lt;System::String ^&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Delimiters : string[] with get, set" Usage="Microsoft.VisualBasic.FileIO.TextFieldParser.Delimiters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="96ccb-253">Definiuje ograniczniki dla pliku tekstowego.</span><span class="sxs-lookup"><span data-stu-id="96ccb-253">Defines the delimiters for a text file.</span></span></summary>
        <value><span data-ttu-id="96ccb-254">Tablica ciągów zawierająca wszystkie ograniczniki pól dla <see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" /> obiektu.</span><span class="sxs-lookup"><span data-stu-id="96ccb-254">A string array that contains all of the field delimiters for the <see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" /> object.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="96ccb-255">Ta właściwość ma znaczenie tylko wtedy, <xref:Microsoft.VisualBasic.FileIO.TextFieldParser.TextFieldType%2A> gdy właściwość jest ustawiona `FieldType.Delimited`na.</span><span class="sxs-lookup"><span data-stu-id="96ccb-255">This property is meaningful only if the <xref:Microsoft.VisualBasic.FileIO.TextFieldParser.TextFieldType%2A> property is set to `FieldType.Delimited`.</span></span>  
  
 <span data-ttu-id="96ccb-256">Definiowanie ograniczników dla pliku tekstowego można także wykonać przy użyciu <xref:Microsoft.VisualBasic.FileIO.TextFieldParser.SetDelimiters%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="96ccb-256">Defining the delimiters for a text file can also be accomplished with the <xref:Microsoft.VisualBasic.FileIO.TextFieldParser.SetDelimiters%2A> method.</span></span>  
  
 <span data-ttu-id="96ccb-257">W poniższej tabeli przedstawiono przykład zadania związanego `Delimiters` z właściwością.</span><span class="sxs-lookup"><span data-stu-id="96ccb-257">The following table lists an example of a task involving the `Delimiters` property.</span></span>  
  
|<span data-ttu-id="96ccb-258">Zadanie</span><span class="sxs-lookup"><span data-stu-id="96ccb-258">To</span></span>|<span data-ttu-id="96ccb-259">Zobacz</span><span class="sxs-lookup"><span data-stu-id="96ccb-259">See</span></span>|  
|--------|---------|  
|<span data-ttu-id="96ccb-260">Odczytaj z rozdzielanego pliku tekstowego</span><span class="sxs-lookup"><span data-stu-id="96ccb-260">Read from a delimited text file</span></span>|[<span data-ttu-id="96ccb-261">Instrukcje: Odczyt z rozdzielanych przecinkami plików tekstowych</span><span class="sxs-lookup"><span data-stu-id="96ccb-261">How to: Read From Comma-Delimited Text Files</span></span>](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-comma-delimited-text-files.md)|  
  
   
  
## Examples  
 <span data-ttu-id="96ccb-262">Ten przykład określa, że ogranicznik dla `TextFieldParser` obiektu, `FileReader`, jest przecinkiem (,).</span><span class="sxs-lookup"><span data-stu-id="96ccb-262">This example specifies that the delimiter for the `TextFieldParser` object, `FileReader`, is a comma (,).</span></span>  
  
 [!code-vb[VbVbalrTextFieldParser#9](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrTextFieldParser/VB/Class1.vb#9)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="96ccb-263">Wartość ogranicznika jest ustawiana na znak nowego wiersza, pusty ciąg lub <see langword="Nothing" />.</span><span class="sxs-lookup"><span data-stu-id="96ccb-263">A delimiter value is set to a newline character, an empty string, or <see langword="Nothing" />.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFieldParser(System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.FileIO.TextFieldParser.SetDelimiters(System.String[])" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md"><span data-ttu-id="96ccb-264">Obiekty (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="96ccb-264">Objects (Visual Basic)</span></span></related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/parsing-text-files-with-the-textfieldparser-object.md"><span data-ttu-id="96ccb-265">Analizowanie plików tekstowych za pomocą obiektu TextFieldParser</span><span class="sxs-lookup"><span data-stu-id="96ccb-265">Parsing Text Files with the TextFieldParser Object</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="96ccb-266">Zwalnia zasoby używane przez <see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" /> obiekt.</span><span class="sxs-lookup"><span data-stu-id="96ccb-266">Releases resources used by the <see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" /> object.</span></span></summary>
        <altmember cref="M:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFieldParser(System.String)" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md"><span data-ttu-id="96ccb-267">Obiekty (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="96ccb-267">Objects (Visual Basic)</span></span></related>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileIO.TextFieldParser.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose() = IDisposable::Dispose;" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="textFieldParser.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="96ccb-268">Zwalnia zasoby używane przez <see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" /> obiekt.</span><span class="sxs-lookup"><span data-stu-id="96ccb-268">Releases resources used by the <see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" /> object.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFieldParser(System.String)" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md"><span data-ttu-id="96ccb-269">Obiekty (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="96ccb-269">Objects (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familynewslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileIO.TextFieldParser.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="textFieldParser.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing"><span data-ttu-id="96ccb-270">Typu.</span><span class="sxs-lookup"><span data-stu-id="96ccb-270">Boolean.</span></span> <span data-ttu-id="96ccb-271"><see langword="True" />Zwalnia zasoby zarządzane i niezarządzane; <see langword="False" /> zwalnia tylko niezarządzane zasoby.</span><span class="sxs-lookup"><span data-stu-id="96ccb-271"><see langword="True" /> releases both managed and unmanaged resources; <see langword="False" /> releases only unmanaged resources.</span></span></param>
        <summary><span data-ttu-id="96ccb-272">Zwalnia zasoby używane przez <see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" /> obiekt.</span><span class="sxs-lookup"><span data-stu-id="96ccb-272">Releases resources used by the <see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" /> object.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFieldParser(System.String)" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md"><span data-ttu-id="96ccb-273">Obiekty (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="96ccb-273">Objects (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="EndOfData">
      <MemberSignature Language="C#" Value="public bool EndOfData { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EndOfData" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.FileIO.TextFieldParser.EndOfData" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EndOfData As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EndOfData { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.EndOfData : bool" Usage="Microsoft.VisualBasic.FileIO.TextFieldParser.EndOfData" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="96ccb-274">Zwraca <see langword="True" /> czy nie ma niepustych wierszy niebędących komentarzami między bieżącą pozycją kursora a końcem pliku.</span><span class="sxs-lookup"><span data-stu-id="96ccb-274">Returns <see langword="True" /> if there are no non-blank, non-comment lines between the current cursor position and the end of the file.</span></span></summary>
        <value><span data-ttu-id="96ccb-275"><see langword="True" />Jeśli nie ma więcej danych do odczytu; w przeciwnym razie. <see langword="False" /></span><span class="sxs-lookup"><span data-stu-id="96ccb-275"><see langword="True" /> if there is no more data to read; otherwise, <see langword="False" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="96ccb-276">Ta właściwość może być używana podczas odczytywania plików w celu określenia końca odczytywanych danych.</span><span class="sxs-lookup"><span data-stu-id="96ccb-276">This property can be used when reading from files to determine the end of the data being read.</span></span>  
  
 <span data-ttu-id="96ccb-277">W poniższej tabeli przedstawiono przykłady zadań związanych z `EndOfData` właściwością.</span><span class="sxs-lookup"><span data-stu-id="96ccb-277">The following table lists examples of tasks involving the `EndOfData` property.</span></span>  
  
|<span data-ttu-id="96ccb-278">Zadanie</span><span class="sxs-lookup"><span data-stu-id="96ccb-278">To</span></span>|<span data-ttu-id="96ccb-279">Zobacz</span><span class="sxs-lookup"><span data-stu-id="96ccb-279">See</span></span>|  
|--------|---------|  
|<span data-ttu-id="96ccb-280">Odczytać zawartość pliku o wartościach rozdzielanych</span><span class="sxs-lookup"><span data-stu-id="96ccb-280">Read from a delimited file</span></span>|[<span data-ttu-id="96ccb-281">Instrukcje: Odczyt z rozdzielanych przecinkami plików tekstowych</span><span class="sxs-lookup"><span data-stu-id="96ccb-281">How to: Read From Comma-Delimited Text Files</span></span>](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-comma-delimited-text-files.md)|  
|<span data-ttu-id="96ccb-282">Odczytać zawartość pliku z wartościami o stałej szerokości</span><span class="sxs-lookup"><span data-stu-id="96ccb-282">Read from a fixed-width file</span></span>|[<span data-ttu-id="96ccb-283">Instrukcje: Odczyt z plików tekstowych o stałej szerokości</span><span class="sxs-lookup"><span data-stu-id="96ccb-283">How to: Read From Fixed-width Text Files</span></span>](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-fixed-width-text-files.md)|  
  
   
  
## Examples  
 <span data-ttu-id="96ccb-284">Ten przykład używa `EndofData` właściwości `TextFieldReader`, aby przepętlać przez wszystkie pola w pliku z, `FileReader`.</span><span class="sxs-lookup"><span data-stu-id="96ccb-284">This example uses the `EndofData` property to loop through all the fields in the file with the `TextFieldReader`, `FileReader`.</span></span>  
  
 [!code-vb[VbVbalrTextFieldParser#6](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrTextFieldParser/VB/Class1.vb#6)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFieldParser(System.String)" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md"><span data-ttu-id="96ccb-285">Obiekty (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="96ccb-285">Objects (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ErrorLine">
      <MemberSignature Language="C#" Value="public string ErrorLine { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ErrorLine" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLine" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ErrorLine As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ErrorLine { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ErrorLine : string" Usage="Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLine" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="96ccb-286">Zwraca wiersz, który spowodował ostatni <see cref="T:Microsoft.VisualBasic.FileIO.MalformedLineException" /> wyjątek.</span><span class="sxs-lookup"><span data-stu-id="96ccb-286">Returns the line that caused the most recent <see cref="T:Microsoft.VisualBasic.FileIO.MalformedLineException" /> exception.</span></span></summary>
        <value><span data-ttu-id="96ccb-287">Wiersz, który spowodował ostatni <see cref="T:Microsoft.VisualBasic.FileIO.MalformedLineException" /> wyjątek.</span><span class="sxs-lookup"><span data-stu-id="96ccb-287">The line that caused the most recent <see cref="T:Microsoft.VisualBasic.FileIO.MalformedLineException" /> exception.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="96ccb-288">Jeśli nie <xref:Microsoft.VisualBasic.FileIO.MalformedLineException> zgłoszono żadnych wyjątków, zwracany jest pusty ciąg.</span><span class="sxs-lookup"><span data-stu-id="96ccb-288">If no <xref:Microsoft.VisualBasic.FileIO.MalformedLineException> exceptions have been thrown, an empty string is returned.</span></span>  
  
 <span data-ttu-id="96ccb-289"><xref:Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLineNumber%2A> Właściwość może służyć do wyświetlania numeru wiersza, który spowodował wyjątek.</span><span class="sxs-lookup"><span data-stu-id="96ccb-289">The <xref:Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLineNumber%2A> property can be used to display the number of the line that caused the exception.</span></span>  
  
 <span data-ttu-id="96ccb-290">W poniższej tabeli przedstawiono przykłady zadań związanych z `ErrorLine` właściwością.</span><span class="sxs-lookup"><span data-stu-id="96ccb-290">The following table lists examples of tasks involving the `ErrorLine` property.</span></span>  
  
|<span data-ttu-id="96ccb-291">Zadanie</span><span class="sxs-lookup"><span data-stu-id="96ccb-291">To</span></span>|<span data-ttu-id="96ccb-292">Zobacz</span><span class="sxs-lookup"><span data-stu-id="96ccb-292">See</span></span>|  
|--------|---------|  
|<span data-ttu-id="96ccb-293">Odczytać zawartość pliku o wartościach rozdzielanych</span><span class="sxs-lookup"><span data-stu-id="96ccb-293">Read from a delimited file</span></span>|[<span data-ttu-id="96ccb-294">Instrukcje: Odczyt z rozdzielanych przecinkami plików tekstowych</span><span class="sxs-lookup"><span data-stu-id="96ccb-294">How to: Read From Comma-Delimited Text Files</span></span>](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-comma-delimited-text-files.md)|  
|<span data-ttu-id="96ccb-295">Odczytać zawartość pliku z wartościami o stałej szerokości</span><span class="sxs-lookup"><span data-stu-id="96ccb-295">Read from a fixed-width file</span></span>|[<span data-ttu-id="96ccb-296">Instrukcje: Odczyt z plików tekstowych o stałej szerokości</span><span class="sxs-lookup"><span data-stu-id="96ccb-296">How to: Read From Fixed-width Text Files</span></span>](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-fixed-width-text-files.md)|  
  
   
  
## Examples  
 <span data-ttu-id="96ccb-297">Ten przykład używa właściwości `ErrorLine` , aby wyświetlić wiersz powodujący bieżący <xref:Microsoft.VisualBasic.FileIO.MalformedLineException> wyjątek.</span><span class="sxs-lookup"><span data-stu-id="96ccb-297">This example uses the `ErrorLine` property to display the line causing the current <xref:Microsoft.VisualBasic.FileIO.MalformedLineException> exception.</span></span>  
  
 [!code-vb[VbVbalrTextFieldParser#1](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrTextFieldParser/VB/Class1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFieldParser(System.String)" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md"><span data-ttu-id="96ccb-298">Obiekty (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="96ccb-298">Objects (Visual Basic)</span></span></related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/parsing-text-files-with-the-textfieldparser-object.md"><span data-ttu-id="96ccb-299">Analizowanie plików tekstowych za pomocą obiektu TextFieldParser</span><span class="sxs-lookup"><span data-stu-id="96ccb-299">Parsing Text Files with the TextFieldParser Object</span></span></related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-text-files-with-multiple-formats.md"><span data-ttu-id="96ccb-300">Instrukcje: Odczytaj z pliku tekstowego wiele formatów w Visual Basic</span><span class="sxs-lookup"><span data-stu-id="96ccb-300">How to: Read From a Text File with Multiple Formats in Visual Basic</span></span></related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-fixed-width-text-files.md"><span data-ttu-id="96ccb-301">Instrukcje: Odczytaj z pliku tekstowego o stałej szerokości w Visual Basic</span><span class="sxs-lookup"><span data-stu-id="96ccb-301">How to: Read From a Fixed-width Text File in Visual Basic</span></span></related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-comma-delimited-text-files.md"><span data-ttu-id="96ccb-302">Instrukcje: Odczytaj z rozdzielanego przecinkami pliku tekstowego w Visual Basic</span><span class="sxs-lookup"><span data-stu-id="96ccb-302">How to: Read From a Comma-Delimited Text File in Visual Basic</span></span></related>
        <related type="Article" href="~/docs/visual-basic/language-reference/statements/try-catch-finally-statement.md"><span data-ttu-id="96ccb-303">Try...Catch...Finally — Instrukcja (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="96ccb-303">Try...Catch...Finally Statement (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ErrorLineNumber">
      <MemberSignature Language="C#" Value="public long ErrorLineNumber { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 ErrorLineNumber" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLineNumber" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ErrorLineNumber As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long ErrorLineNumber { long get(); };" />
      <MemberSignature Language="F#" Value="member this.ErrorLineNumber : int64" Usage="Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLineNumber" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="96ccb-304">Zwraca numer wiersza, który spowodował ostatni <see cref="T:Microsoft.VisualBasic.FileIO.MalformedLineException" /> wyjątek.</span><span class="sxs-lookup"><span data-stu-id="96ccb-304">Returns the number of the line that caused the most recent <see cref="T:Microsoft.VisualBasic.FileIO.MalformedLineException" /> exception.</span></span></summary>
        <value><span data-ttu-id="96ccb-305">Numer wiersza, który spowodował ostatni <see cref="T:Microsoft.VisualBasic.FileIO.MalformedLineException" /> wyjątek.</span><span class="sxs-lookup"><span data-stu-id="96ccb-305">The number of the line that caused the most recent <see cref="T:Microsoft.VisualBasic.FileIO.MalformedLineException" /> exception.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="96ccb-306">Jeśli nie <xref:Microsoft.VisualBasic.FileIO.MalformedLineException> zgłoszono żadnych wyjątków, zwracana jest liczba 1.</span><span class="sxs-lookup"><span data-stu-id="96ccb-306">If no <xref:Microsoft.VisualBasic.FileIO.MalformedLineException> exceptions have been thrown, -1 is returned.</span></span>  
  
 <span data-ttu-id="96ccb-307"><xref:Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLine%2A> Właściwość może służyć do wyświetlania numeru wiersza, który spowodował wyjątek.</span><span class="sxs-lookup"><span data-stu-id="96ccb-307">The <xref:Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLine%2A> property can be used to display the number of the line that caused the exception.</span></span> <span data-ttu-id="96ccb-308">Podczas określania numeru wiersza nie są ignorowane puste wiersze i komentarze.</span><span class="sxs-lookup"><span data-stu-id="96ccb-308">Blank lines and comments are not ignored when determining the line number.</span></span>  
  
 <span data-ttu-id="96ccb-309">W poniższej tabeli przedstawiono przykłady zadań związanych z `ErrorLineNumber` właściwością.</span><span class="sxs-lookup"><span data-stu-id="96ccb-309">The following table lists examples of tasks involving the `ErrorLineNumber` property.</span></span>  
  
|<span data-ttu-id="96ccb-310">Zadanie</span><span class="sxs-lookup"><span data-stu-id="96ccb-310">To</span></span>|<span data-ttu-id="96ccb-311">Zobacz</span><span class="sxs-lookup"><span data-stu-id="96ccb-311">See</span></span>|  
|--------|---------|  
|<span data-ttu-id="96ccb-312">Odczytać zawartość pliku o wartościach rozdzielanych</span><span class="sxs-lookup"><span data-stu-id="96ccb-312">Read from a delimited file</span></span>|[<span data-ttu-id="96ccb-313">Instrukcje: Odczyt z rozdzielanych przecinkami plików tekstowych</span><span class="sxs-lookup"><span data-stu-id="96ccb-313">How to: Read From Comma-Delimited Text Files</span></span>](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-comma-delimited-text-files.md)|  
|<span data-ttu-id="96ccb-314">Odczytać zawartość pliku z wartościami o stałej szerokości</span><span class="sxs-lookup"><span data-stu-id="96ccb-314">Read from a fixed-width file</span></span>|[<span data-ttu-id="96ccb-315">Instrukcje: Odczyt z plików tekstowych o stałej szerokości</span><span class="sxs-lookup"><span data-stu-id="96ccb-315">How to: Read From Fixed-width Text Files</span></span>](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-fixed-width-text-files.md)|  
  
   
  
## Examples  
 <span data-ttu-id="96ccb-316">Ten przykład używa właściwości `ErrorLineNumber` , aby wyświetlić lokalizację wiersza powodującego bieżący <xref:Microsoft.VisualBasic.FileIO.MalformedLineException> wyjątek.</span><span class="sxs-lookup"><span data-stu-id="96ccb-316">This example uses the `ErrorLineNumber` property to display the location of the line causing the current <xref:Microsoft.VisualBasic.FileIO.MalformedLineException> exception.</span></span>  
  
 [!code-vb[VbVbalrTextFieldParser#3](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrTextFieldParser/VB/Class1.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFieldParser(System.String)" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md"><span data-ttu-id="96ccb-317">Obiekty (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="96ccb-317">Objects (Visual Basic)</span></span></related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/parsing-text-files-with-the-textfieldparser-object.md"><span data-ttu-id="96ccb-318">Analizowanie plików tekstowych za pomocą obiektu TextFieldParser</span><span class="sxs-lookup"><span data-stu-id="96ccb-318">Parsing Text Files with the TextFieldParser Object</span></span></related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-text-files-with-multiple-formats.md"><span data-ttu-id="96ccb-319">Instrukcje: Odczytaj z pliku tekstowego wiele formatów w Visual Basic</span><span class="sxs-lookup"><span data-stu-id="96ccb-319">How to: Read From a Text File with Multiple Formats in Visual Basic</span></span></related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-fixed-width-text-files.md"><span data-ttu-id="96ccb-320">Instrukcje: Odczytaj z pliku tekstowego o stałej szerokości w Visual Basic</span><span class="sxs-lookup"><span data-stu-id="96ccb-320">How to: Read From a Fixed-width Text File in Visual Basic</span></span></related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-comma-delimited-text-files.md"><span data-ttu-id="96ccb-321">Instrukcje: Odczytaj z rozdzielanego przecinkami pliku tekstowego w Visual Basic</span><span class="sxs-lookup"><span data-stu-id="96ccb-321">How to: Read From a Comma-Delimited Text File in Visual Basic</span></span></related>
        <related type="Article" href="~/docs/visual-basic/language-reference/statements/try-catch-finally-statement.md"><span data-ttu-id="96ccb-322">Try...Catch...Finally — Instrukcja (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="96ccb-322">Try...Catch...Finally Statement (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="FieldWidths">
      <MemberSignature Language="C#" Value="public int[] FieldWidths { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32[] FieldWidths" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.FileIO.TextFieldParser.FieldWidths" />
      <MemberSignature Language="VB.NET" Value="Public Property FieldWidths As Integer()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;int&gt; ^ FieldWidths { cli::array &lt;int&gt; ^ get(); void set(cli::array &lt;int&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.FieldWidths : int[] with get, set" Usage="Microsoft.VisualBasic.FileIO.TextFieldParser.FieldWidths" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="96ccb-323">Określa szerokość każdej kolumny w analizowanym pliku tekstowym.</span><span class="sxs-lookup"><span data-stu-id="96ccb-323">Denotes the width of each column in the text file being parsed.</span></span></summary>
        <value><span data-ttu-id="96ccb-324">Tablica liczb całkowitych, która zawiera szerokość każdej kolumny w analizowanym pliku tekstowym.</span><span class="sxs-lookup"><span data-stu-id="96ccb-324">An integer array that contains the width of each column in the text file that is being parsed.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="96ccb-325">Ta właściwość ma znaczenie tylko wtedy, <xref:Microsoft.VisualBasic.FileIO.TextFieldParser.TextFieldType%2A> gdy właściwość jest ustawiona `FieldType.FixedWidth`na.</span><span class="sxs-lookup"><span data-stu-id="96ccb-325">This property is meaningful only if the <xref:Microsoft.VisualBasic.FileIO.TextFieldParser.TextFieldType%2A> property is set to `FieldType.FixedWidth`.</span></span> <span data-ttu-id="96ccb-326">Jeśli ostatni wpis w tablicy jest mniejszy lub równy zero, przyjmuje się, że pole ma szerokość zmiennej.</span><span class="sxs-lookup"><span data-stu-id="96ccb-326">If the last entry in the array is less than or equal to zero, the field is assumed to be of variable width.</span></span>  
  
 <span data-ttu-id="96ccb-327"><xref:Microsoft.VisualBasic.FileIO.TextFieldParser.SetFieldWidths%2A> Metoda może również służyć do ustawiania szerokości pól.</span><span class="sxs-lookup"><span data-stu-id="96ccb-327">The <xref:Microsoft.VisualBasic.FileIO.TextFieldParser.SetFieldWidths%2A> method can also be used to set field widths.</span></span>  
  
 <span data-ttu-id="96ccb-328">W poniższej tabeli przedstawiono przykłady zadań związanych z `FieldWidths` właściwością.</span><span class="sxs-lookup"><span data-stu-id="96ccb-328">The following table lists examples of tasks involving the `FieldWidths` property.</span></span>  
  
|<span data-ttu-id="96ccb-329">Zadanie</span><span class="sxs-lookup"><span data-stu-id="96ccb-329">To</span></span>|<span data-ttu-id="96ccb-330">Zobacz</span><span class="sxs-lookup"><span data-stu-id="96ccb-330">See</span></span>|  
|--------|---------|  
|<span data-ttu-id="96ccb-331">Odczytaj z pliku tekstowego o stałej szerokości</span><span class="sxs-lookup"><span data-stu-id="96ccb-331">Read from a fixed-width text file</span></span>|[<span data-ttu-id="96ccb-332">Instrukcje: Odczyt z plików tekstowych o stałej szerokości</span><span class="sxs-lookup"><span data-stu-id="96ccb-332">How to: Read From Fixed-width Text Files</span></span>](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-fixed-width-text-files.md)|  
  
   
  
## Examples  
 <span data-ttu-id="96ccb-333">Ten przykład odczytuje plik `ParserText.txt`, określając szerokości; pierwsza kolumna ma szerokość 5 znaków, drugi to 10, trzeci to 11, a czwarta jest szerokość zmiennej</span><span class="sxs-lookup"><span data-stu-id="96ccb-333">This example reads the file `ParserText.txt`, specifying the widths; the first column is 5 characters wide, the second is 10, the third is 11, and the fourth is of variable width</span></span>  
  
 [!code-vb[VbVbalrTextFieldParser#16](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrTextFieldParser/VB/Class1.vb#16)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="96ccb-334">Wartość szerokości w dowolnej lokalizacji innej niż ostatni wpis tablicy jest mniejsza lub równa zero.</span><span class="sxs-lookup"><span data-stu-id="96ccb-334">A width value in any location other than the last entry of the array is less than or equal to zero.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFieldParser(System.String)" />
        <altmember cref="T:Microsoft.VisualBasic.FileIO.FieldType" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md"><span data-ttu-id="96ccb-335">Obiekty (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="96ccb-335">Objects (Visual Basic)</span></span></related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-fixed-width-text-files.md"><span data-ttu-id="96ccb-336">Instrukcje: Odczytaj z pliku tekstowego o stałej szerokości w Visual Basic</span><span class="sxs-lookup"><span data-stu-id="96ccb-336">How to: Read From a Fixed-width Text File in Visual Basic</span></span></related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-comma-delimited-text-files.md"><span data-ttu-id="96ccb-337">Instrukcje: Odczytaj z rozdzielanego przecinkami pliku tekstowego w Visual Basic</span><span class="sxs-lookup"><span data-stu-id="96ccb-337">How to: Read From a Comma-Delimited Text File in Visual Basic</span></span></related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-text-files-with-multiple-formats.md"><span data-ttu-id="96ccb-338">Instrukcje: Odczytaj z pliku tekstowego wiele formatów w Visual Basic</span><span class="sxs-lookup"><span data-stu-id="96ccb-338">How to: Read From a Text File with Multiple Formats in Visual Basic</span></span></related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/parsing-text-files-with-the-textfieldparser-object.md"><span data-ttu-id="96ccb-339">Analizowanie plików tekstowych za pomocą obiektu TextFieldParser</span><span class="sxs-lookup"><span data-stu-id="96ccb-339">Parsing Text Files with the TextFieldParser Object</span></span></related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-3.0/2ewecs64(v=vs.85)"><span data-ttu-id="96ccb-340">Rozwiązywanie problemów z wyjątkami: Microsoft.VisualBasic.FileIO.TextFieldParser.MalformedLineException</span><span class="sxs-lookup"><span data-stu-id="96ccb-340">Troubleshooting Exceptions: Microsoft.VisualBasic.FileIO.TextFieldParser.MalformedLineException</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~TextFieldParser ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileIO.TextFieldParser.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!TextFieldParser ()" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; unit" Usage="textFieldParser.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="96ccb-341"><see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" /> Umożliwia obiektowi podjęcie próby zwolnienia zasobów i wykonywanie innych operacji czyszczenia, zanim zostanie on odrzucony przez wyrzucanie elementów bezużytecznych.</span><span class="sxs-lookup"><span data-stu-id="96ccb-341">Allows the <see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" /> object to attempt to free resources and perform other cleanup operations before it is reclaimed by garbage collection.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFieldParser(System.String)" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md"><span data-ttu-id="96ccb-342">Obiekty (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="96ccb-342">Objects (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="HasFieldsEnclosedInQuotes">
      <MemberSignature Language="C#" Value="public bool HasFieldsEnclosedInQuotes { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasFieldsEnclosedInQuotes" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.FileIO.TextFieldParser.HasFieldsEnclosedInQuotes" />
      <MemberSignature Language="VB.NET" Value="Public Property HasFieldsEnclosedInQuotes As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasFieldsEnclosedInQuotes { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.HasFieldsEnclosedInQuotes : bool with get, set" Usage="Microsoft.VisualBasic.FileIO.TextFieldParser.HasFieldsEnclosedInQuotes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="96ccb-343">Wskazuje, czy pola są ujęte w cudzysłów, gdy rozdzielany plik jest analizowany.</span><span class="sxs-lookup"><span data-stu-id="96ccb-343">Denotes whether fields are enclosed in quotation marks when a delimited file is being parsed.</span></span></summary>
        <value><span data-ttu-id="96ccb-344"><see langword="True" />Jeśli pola są ujęte w cudzysłów; w przeciwnym razie. <see langword="False" /></span><span class="sxs-lookup"><span data-stu-id="96ccb-344"><see langword="True" /> if fields are enclosed in quotation marks; otherwise, <see langword="False" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="96ccb-345">Jest to zaawansowany element członkowski; nie jest wyświetlana w IntelliSense, chyba że klikniesz kartę **wszystkie** .</span><span class="sxs-lookup"><span data-stu-id="96ccb-345">This is an advanced member; it does not show in IntelliSense unless you click the **All** tab.</span></span>  
  
 <span data-ttu-id="96ccb-346">Jeśli właściwość ma `True`wartość, parser zakłada, że pola są ujęte w cudzysłów ("") i mogą zawierać końce wierszy.</span><span class="sxs-lookup"><span data-stu-id="96ccb-346">If the property is `True`, the parser assumes that fields are enclosed in quotation marks (" ") and may contain line endings.</span></span>  
  
 <span data-ttu-id="96ccb-347">Jeśli pole jest ujęte w cudzysłów, na przykład `abc, "field2a,field2b", field3` , a ta właściwość to `True`, cały tekst ujęty w cudzysłów zostanie zwrócony w postaci, w jakiej jest; ten przykład zwróci `abc|field2a,field2b|field3`.</span><span class="sxs-lookup"><span data-stu-id="96ccb-347">If a field is enclosed in quotation marks, for example, `abc, "field2a,field2b", field3` and this property is `True`, then all text enclosed in quotation marks will be returned as is; this example would return `abc|field2a,field2b|field3`.</span></span> <span data-ttu-id="96ccb-348">Ustawienie tej właściwości w `False` taki sposób spowoduje zwrócenie `abc|"field2a|field2b"|field3`tego przykładu.</span><span class="sxs-lookup"><span data-stu-id="96ccb-348">Setting this property to `False` would make this example return `abc|"field2a|field2b"|field3`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="96ccb-349">Ten przykład ustawia `HasFieldsEnclosedInQuotes` Właściwość `True` na wartość `myReader`.</span><span class="sxs-lookup"><span data-stu-id="96ccb-349">This example sets the `HasFieldsEnclosedInQuotes` property to `True` for `myReader`.</span></span>  
  
 [!code-vb[VbVbalrTextFieldParser#18](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrTextFieldParser/VB/Class1.vb#18)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFieldParser(System.String)" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md"><span data-ttu-id="96ccb-350">Obiekty (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="96ccb-350">Objects (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="LineNumber">
      <MemberSignature Language="C#" Value="public long LineNumber { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 LineNumber" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.FileIO.TextFieldParser.LineNumber" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LineNumber As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long LineNumber { long get(); };" />
      <MemberSignature Language="F#" Value="member this.LineNumber : int64" Usage="Microsoft.VisualBasic.FileIO.TextFieldParser.LineNumber" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="96ccb-351">Zwraca bieżący numer wiersza lub zwraca wartość-1, jeśli w strumieniu nie ma więcej znaków.</span><span class="sxs-lookup"><span data-stu-id="96ccb-351">Returns the current line number, or returns -1 if no more characters are available in the stream.</span></span></summary>
        <value><span data-ttu-id="96ccb-352">Numer bieżącego wiersza.</span><span class="sxs-lookup"><span data-stu-id="96ccb-352">The current line number.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="96ccb-353">Jest to zaawansowany element członkowski; nie jest wyświetlana w IntelliSense, chyba że klikniesz kartę **wszystkie** .</span><span class="sxs-lookup"><span data-stu-id="96ccb-353">This is an advanced member; it does not show in IntelliSense unless you click the **All** tab.</span></span>  
  
 <span data-ttu-id="96ccb-354">Podczas określania numeru wiersza nie są ignorowane puste wiersze i komentarze.</span><span class="sxs-lookup"><span data-stu-id="96ccb-354">Blank lines and comments are not ignored when determining the line number.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="96ccb-355">Ten przykład wyszukuje w pliku tekstowym nazwę "Nowak" i raportuje, w jakich wierszach występuje.</span><span class="sxs-lookup"><span data-stu-id="96ccb-355">This example searches for the name "Jones" in the text file and reports what line(s) it occurs on.</span></span>  
  
 [!code-vb[VbVbalrTextFieldParser#11](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrTextFieldParser/VB/Class1.vb#11)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFieldParser(System.String)" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md"><span data-ttu-id="96ccb-356">Obiekty (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="96ccb-356">Objects (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="PeekChars">
      <MemberSignature Language="C#" Value="public string PeekChars (int numberOfChars);" />
      <MemberSignature Language="ILAsm" Value=".method public instance string PeekChars(int32 numberOfChars) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileIO.TextFieldParser.PeekChars(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function PeekChars (numberOfChars As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ PeekChars(int numberOfChars);" />
      <MemberSignature Language="F#" Value="member this.PeekChars : int -&gt; string" Usage="textFieldParser.PeekChars numberOfChars" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="numberOfChars" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="numberOfChars"><span data-ttu-id="96ccb-357"><see langword="Int32" />.</span><span class="sxs-lookup"><span data-stu-id="96ccb-357"><see langword="Int32" />.</span></span> <span data-ttu-id="96ccb-358">Liczba znaków do odczytania.</span><span class="sxs-lookup"><span data-stu-id="96ccb-358">Number of characters to read.</span></span> <span data-ttu-id="96ccb-359">Wymagane.</span><span class="sxs-lookup"><span data-stu-id="96ccb-359">Required.</span></span></param>
        <summary><span data-ttu-id="96ccb-360">Odczytuje określoną liczbę znaków bez przesuwania kursora.</span><span class="sxs-lookup"><span data-stu-id="96ccb-360">Reads the specified number of characters without advancing the cursor.</span></span></summary>
        <returns><span data-ttu-id="96ccb-361">Ciąg, który zawiera określoną liczbę odczytanych znaków.</span><span class="sxs-lookup"><span data-stu-id="96ccb-361">A string that contains the specified number of characters read.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="96ccb-362">`numberOfChars` Wartość musi być mniejsza od całkowitej liczby znaków w wierszu.</span><span class="sxs-lookup"><span data-stu-id="96ccb-362">The `numberOfChars` value must be less than the total number of characters in the line.</span></span> <span data-ttu-id="96ccb-363">Jeśli tak nie jest, ciąg zwracany przez `PeekChars` zostanie obcięty do długości wiersza.</span><span class="sxs-lookup"><span data-stu-id="96ccb-363">If it is not, the string returned by `PeekChars` will be truncated to the length of the line.</span></span>  
  
 <span data-ttu-id="96ccb-364">Puste wiersze są ignorowane.</span><span class="sxs-lookup"><span data-stu-id="96ccb-364">Blank lines are ignored.</span></span>  
  
 <span data-ttu-id="96ccb-365">Znaki końca wiersza nie są zwracane.</span><span class="sxs-lookup"><span data-stu-id="96ccb-365">End-of-line characters are not returned.</span></span>  
  
 <span data-ttu-id="96ccb-366">`PeekChars` Metoda nie wykonuje analizy; znak końca wiersza w rozdzielonym polu jest interpretowany jako rzeczywisty koniec wiersza.</span><span class="sxs-lookup"><span data-stu-id="96ccb-366">The `PeekChars` method performs no parsing; an end-of- line character within a delimited field is interpreted as the actual end of the line.</span></span>  
  
 <span data-ttu-id="96ccb-367">W poniższej tabeli przedstawiono przykłady zadań związanych z `PeekChars` tą metodą.</span><span class="sxs-lookup"><span data-stu-id="96ccb-367">The following table lists examples of tasks involving the `PeekChars` method.</span></span>  
  
|<span data-ttu-id="96ccb-368">Zadanie</span><span class="sxs-lookup"><span data-stu-id="96ccb-368">To</span></span>|<span data-ttu-id="96ccb-369">Zobacz</span><span class="sxs-lookup"><span data-stu-id="96ccb-369">See</span></span>|  
|--------|---------|  
|<span data-ttu-id="96ccb-370">Określ format pola przed jego przeanalizą</span><span class="sxs-lookup"><span data-stu-id="96ccb-370">Determine the format of a field before parsing it</span></span>|[<span data-ttu-id="96ccb-371">Instrukcje: Odczyt z plików tekstowych z wieloma formatami</span><span class="sxs-lookup"><span data-stu-id="96ccb-371">How to: Read From Text Files with Multiple Formats</span></span>](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-text-files-with-multiple-formats.md)|  
  
   
  
## Examples  
 <span data-ttu-id="96ccb-372">Ten przykład używa `PeekChars` , aby znaleźć koniec danych i zatrzymać analizowanie pliku w tym momencie.</span><span class="sxs-lookup"><span data-stu-id="96ccb-372">This example uses `PeekChars` to find the end of the data and stop parsing the file at that point.</span></span>  
  
 [!code-vb[VbVbalrTextFieldParser#8](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrTextFieldParser/VB/Class1.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="96ccb-373"><paramref name="numberOfChars" />jest mniejsza niż 0.</span><span class="sxs-lookup"><span data-stu-id="96ccb-373"><paramref name="numberOfChars" /> is less than 0.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFieldParser(System.String)" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md"><span data-ttu-id="96ccb-374">Obiekty (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="96ccb-374">Objects (Visual Basic)</span></span></related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/parsing-text-files-with-the-textfieldparser-object.md"><span data-ttu-id="96ccb-375">Analizowanie plików tekstowych za pomocą obiektu TextFieldParser</span><span class="sxs-lookup"><span data-stu-id="96ccb-375">Parsing Text Files with the TextFieldParser Object</span></span></related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/reading-from-files.md"><span data-ttu-id="96ccb-376">Odczyt z plików w Visual Basic</span><span class="sxs-lookup"><span data-stu-id="96ccb-376">Reading from Files in Visual Basic</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ReadFields">
      <MemberSignature Language="C#" Value="public string[] ReadFields ();" />
      <MemberSignature Language="ILAsm" Value=".method public instance string[] ReadFields() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileIO.TextFieldParser.ReadFields" />
      <MemberSignature Language="VB.NET" Value="Public Function ReadFields () As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::String ^&gt; ^ ReadFields();" />
      <MemberSignature Language="F#" Value="member this.ReadFields : unit -&gt; string[]" Usage="textFieldParser.ReadFields " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="96ccb-377">Odczytuje wszystkie pola w bieżącym wierszu, zwraca je jako tablicę ciągów i przesuwa kursor do następnego wiersza zawierającego dane.</span><span class="sxs-lookup"><span data-stu-id="96ccb-377">Reads all fields on the current line, returns them as an array of strings, and advances the cursor to the next line containing data.</span></span></summary>
        <returns><span data-ttu-id="96ccb-378">Tablica ciągów, która zawiera wartości pól dla bieżącego wiersza.</span><span class="sxs-lookup"><span data-stu-id="96ccb-378">An array of strings that contains field values for the current line.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="96ccb-379">Aby umożliwić użytkownikom analizowanie plików tekstowych w `ReadFields` wielu formatach, Metoda sprawdza `TextFieldType`wartości, `Delimiters`, i `FieldWidths`, jeśli są określone, przy każdym wywołaniu.</span><span class="sxs-lookup"><span data-stu-id="96ccb-379">In order to allow users to parse text files in multiple formats, the `ReadFields` method examines the values of `TextFieldType`, `Delimiters`, and `FieldWidths`, if they are specified, each time it is called.</span></span> <span data-ttu-id="96ccb-380">Użytkownicy muszą prawidłowo skonfigurować `TextFieldType` właściwości i `FieldWidths` lub `Delimiters` , odpowiednio do potrzeb.</span><span class="sxs-lookup"><span data-stu-id="96ccb-380">Users need to correctly configure the `TextFieldType` and `FieldWidths` or `Delimiters` properties, as appropriate.</span></span> <span data-ttu-id="96ccb-381">Jeśli `TextFieldType` jest ustawiona na `Delimited`, i `Delimiters` nie jest ustawiona lub jeśli `TextFieldType` jest ustawiona na `FixedWidth` i `FieldWidths`, zostanie zgłoszony wyjątek.</span><span class="sxs-lookup"><span data-stu-id="96ccb-381">If `TextFieldType` is set to `Delimited`, and `Delimiters` is not set, or if `TextFieldType` is set to `FixedWidth` and `FieldWidths`, an exception is thrown.</span></span>  
  
 <span data-ttu-id="96ccb-382">Jeśli `ReadFields` napotka puste wiersze, są one pomijane i zwracany jest następny niepusty wiersz.</span><span class="sxs-lookup"><span data-stu-id="96ccb-382">If `ReadFields` encounters blank lines, they are skipped and the next non-blank line is returned.</span></span>  
  
 <span data-ttu-id="96ccb-383">`ReadFields` Jeśli metoda nie może przeanalizować bieżącego wiersza, wywołuje wyjątek i nie przechodzi do następnego wiersza.</span><span class="sxs-lookup"><span data-stu-id="96ccb-383">If the `ReadFields` method cannot parse the current line, it raises an exception and does not move to the next line.</span></span> <span data-ttu-id="96ccb-384">Dzięki temu aplikacja może próbować ponownie analizować wiersz.</span><span class="sxs-lookup"><span data-stu-id="96ccb-384">This enables your application to attempt to parse the line again.</span></span>  
  
 <span data-ttu-id="96ccb-385">W poniższej tabeli przedstawiono przykłady zadań związanych z `ReadFields` tą metodą.</span><span class="sxs-lookup"><span data-stu-id="96ccb-385">The following table lists examples of tasks involving the `ReadFields` method.</span></span>  
  
|<span data-ttu-id="96ccb-386">Zadanie</span><span class="sxs-lookup"><span data-stu-id="96ccb-386">To</span></span>|<span data-ttu-id="96ccb-387">Zobacz</span><span class="sxs-lookup"><span data-stu-id="96ccb-387">See</span></span>|  
|--------|---------|  
|<span data-ttu-id="96ccb-388">Odczytać zawartość pliku o wartościach rozdzielanych</span><span class="sxs-lookup"><span data-stu-id="96ccb-388">Read from a delimited file</span></span>|[<span data-ttu-id="96ccb-389">Instrukcje: Odczyt z rozdzielanych przecinkami plików tekstowych</span><span class="sxs-lookup"><span data-stu-id="96ccb-389">How to: Read From Comma-Delimited Text Files</span></span>](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-comma-delimited-text-files.md)|  
|<span data-ttu-id="96ccb-390">Odczytać zawartość pliku z wartościami o stałej szerokości</span><span class="sxs-lookup"><span data-stu-id="96ccb-390">Read from a fixed-width file</span></span>|[<span data-ttu-id="96ccb-391">Instrukcje: Odczyt z plików tekstowych o stałej szerokości</span><span class="sxs-lookup"><span data-stu-id="96ccb-391">How to: Read From Fixed-width Text Files</span></span>](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-fixed-width-text-files.md)|  
  
   
  
## Examples  
 <span data-ttu-id="96ccb-392">W tym przykładzie używa `ReadFields` metody do odczytywania z pliku `ParserText.txt`rozdzielanego przecinkami.</span><span class="sxs-lookup"><span data-stu-id="96ccb-392">This example uses the `ReadFields` method to read from the comma-delimited file `ParserText.txt`.</span></span> <span data-ttu-id="96ccb-393">Przykład zapisuje pola w `Testfile.txt`.</span><span class="sxs-lookup"><span data-stu-id="96ccb-393">The example writes the fields to `Testfile.txt`.</span></span>  
  
 [!code-vb[VbVbalrTextFieldParser#2](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrTextFieldParser/VB/Class1.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:Microsoft.VisualBasic.FileIO.MalformedLineException"><span data-ttu-id="96ccb-394">Nie można przeanalizować pola przy użyciu podanego formatu.</span><span class="sxs-lookup"><span data-stu-id="96ccb-394">A field cannot be parsed by using the specified format.</span></span></exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="96ccb-395">Powiązane wartość typu wyliczeniowego: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</span><span class="sxs-lookup"><span data-stu-id="96ccb-395">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</span></span></permission>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="96ccb-396">Powiązane wartość typu wyliczeniowego: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" />.</span><span class="sxs-lookup"><span data-stu-id="96ccb-396">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" />.</span></span></permission>
        <altmember cref="M:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFieldParser(System.String)" />
        <altmember cref="P:Microsoft.VisualBasic.FileIO.TextFieldParser.TextFieldType" />
        <altmember cref="P:Microsoft.VisualBasic.FileIO.TextFieldParser.FieldWidths" />
        <altmember cref="P:Microsoft.VisualBasic.FileIO.TextFieldParser.Delimiters" />
        <altmember cref="M:Microsoft.VisualBasic.FileIO.TextFieldParser.ReadLine" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md"><span data-ttu-id="96ccb-397">Obiekty (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="96ccb-397">Objects (Visual Basic)</span></span></related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-comma-delimited-text-files.md"><span data-ttu-id="96ccb-398">Instrukcje: Odczytaj z rozdzielanego przecinkami pliku tekstowego w Visual Basic</span><span class="sxs-lookup"><span data-stu-id="96ccb-398">How to: Read From a Comma-Delimited Text File in Visual Basic</span></span></related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-fixed-width-text-files.md"><span data-ttu-id="96ccb-399">Instrukcje: Odczytaj z pliku tekstowego o stałej szerokości w Visual Basic</span><span class="sxs-lookup"><span data-stu-id="96ccb-399">How to: Read From a Fixed-width Text File in Visual Basic</span></span></related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-text-files-with-multiple-formats.md"><span data-ttu-id="96ccb-400">Instrukcje: Odczytaj z pliku tekstowego wiele formatów w Visual Basic</span><span class="sxs-lookup"><span data-stu-id="96ccb-400">How to: Read From a Text File with Multiple Formats in Visual Basic</span></span></related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/parsing-text-files-with-the-textfieldparser-object.md"><span data-ttu-id="96ccb-401">Analizowanie plików tekstowych za pomocą obiektu TextFieldParser</span><span class="sxs-lookup"><span data-stu-id="96ccb-401">Parsing Text Files with the TextFieldParser Object</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ReadLine">
      <MemberSignature Language="C#" Value="public string ReadLine ();" />
      <MemberSignature Language="ILAsm" Value=".method public instance string ReadLine() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileIO.TextFieldParser.ReadLine" />
      <MemberSignature Language="VB.NET" Value="Public Function ReadLine () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ReadLine();" />
      <MemberSignature Language="F#" Value="member this.ReadLine : unit -&gt; string" Usage="textFieldParser.ReadLine " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="96ccb-402">Zwraca bieżący wiersz jako ciąg i przesuwa kursor do następnego wiersza.</span><span class="sxs-lookup"><span data-stu-id="96ccb-402">Returns the current line as a string and advances the cursor to the next line.</span></span></summary>
        <returns><span data-ttu-id="96ccb-403">Bieżący wiersz z pliku lub strumienia.</span><span class="sxs-lookup"><span data-stu-id="96ccb-403">The current line from the file or stream.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="96ccb-404">`ReadLine` Metoda nie wykonuje analizy; znak końca wiersza w rozdzielonym polu jest interpretowany jako rzeczywisty koniec wiersza.</span><span class="sxs-lookup"><span data-stu-id="96ccb-404">The `ReadLine` method performs no parsing; an end-of-line character within a delimited field is interpreted as the actual end of the line.</span></span>  
  
 <span data-ttu-id="96ccb-405">`Nothing`jest zwracany, jeśli osiągnięto koniec pliku.</span><span class="sxs-lookup"><span data-stu-id="96ccb-405">`Nothing` is returned if the end of the file is reached.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="96ccb-406">Ten przykład odczytuje plik `ParserText.txt` i zapisuje go w. `Testfile.txt`</span><span class="sxs-lookup"><span data-stu-id="96ccb-406">This example reads through the file `ParserText.txt` and writes it to `Testfile.txt`.</span></span>  
  
 [!code-vb[VbVbalrTextFieldParser#15](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrTextFieldParser/VB/Class1.vb#15)]  
  
 <span data-ttu-id="96ccb-407">Jeśli `Testfile.txt` nie istnieje, jest tworzona `WriteAllText` przez metodę.</span><span class="sxs-lookup"><span data-stu-id="96ccb-407">If `Testfile.txt` does not exist, it is created by the `WriteAllText` method.</span></span>  
  
 <span data-ttu-id="96ccb-408">Ten przykład zapisuje pola jako pojedynczy ciąg; aby każdy wiersz był wyświetlany w osobnym wierszu w pliku docelowym, `VbCrLf` należy dołączyć znak na końcu każdego wiersza.</span><span class="sxs-lookup"><span data-stu-id="96ccb-408">This example writes the fields as a single string; to have each line display on its own line in the destination file, a `VbCrLf` character should be appended at the end of each line.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFieldParser(System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.FileIO.TextFieldParser.ReadFields" />
        <altmember cref="M:Microsoft.VisualBasic.FileIO.TextFieldParser.ReadToEnd" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md"><span data-ttu-id="96ccb-409">Obiekty (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="96ccb-409">Objects (Visual Basic)</span></span></related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/parsing-text-files-with-the-textfieldparser-object.md"><span data-ttu-id="96ccb-410">Analizowanie plików tekstowych za pomocą obiektu TextFieldParser</span><span class="sxs-lookup"><span data-stu-id="96ccb-410">Parsing Text Files with the TextFieldParser Object</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ReadToEnd">
      <MemberSignature Language="C#" Value="public string ReadToEnd ();" />
      <MemberSignature Language="ILAsm" Value=".method public instance string ReadToEnd() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileIO.TextFieldParser.ReadToEnd" />
      <MemberSignature Language="VB.NET" Value="Public Function ReadToEnd () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ReadToEnd();" />
      <MemberSignature Language="F#" Value="member this.ReadToEnd : unit -&gt; string" Usage="textFieldParser.ReadToEnd " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="96ccb-411">Odczytuje resztę pliku tekstowego i zwraca ją jako ciąg.</span><span class="sxs-lookup"><span data-stu-id="96ccb-411">Reads the remainder of the text file and returns it as a string.</span></span></summary>
        <returns><span data-ttu-id="96ccb-412">Pozostały tekst z pliku lub strumienia.</span><span class="sxs-lookup"><span data-stu-id="96ccb-412">The remaining text from the file or stream.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="96ccb-413">Jest to zaawansowany element członkowski; nie jest wyświetlana w IntelliSense, chyba że klikniesz kartę **wszystkie** .</span><span class="sxs-lookup"><span data-stu-id="96ccb-413">This is an advanced member; it does not show in IntelliSense unless you click the **All** tab.</span></span>  
  
 <span data-ttu-id="96ccb-414">Jeśli nie ma nic więcej do odczytu, ponieważ osiągnięto koniec pliku, `Nothing` jest zwracany.</span><span class="sxs-lookup"><span data-stu-id="96ccb-414">If there is nothing more to read because the end of the file has been reached, `Nothing` is returned.</span></span>  
  
 <span data-ttu-id="96ccb-415">`ReadToEnd` Metoda nie ignoruje pustych wierszy i komentarzy.</span><span class="sxs-lookup"><span data-stu-id="96ccb-415">The `ReadToEnd` method does not ignore blank lines and comments.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="96ccb-416">W tym przykładzie zastosowano metodę, `ReadToEnd` aby odczytać cały plik `ParserText.txt` i zapisać go w pliku `Testfile.txt`.</span><span class="sxs-lookup"><span data-stu-id="96ccb-416">This example uses the `ReadToEnd` method to read the entire file `ParserText.txt` and write it to the file `Testfile.txt`.</span></span>  
  
 [!code-vb[VbVbalrTextFieldParser#10](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrTextFieldParser/VB/Class1.vb#10)]  
  
 <span data-ttu-id="96ccb-417">Jeśli `Testfile.txt` nie istnieje, jest tworzona `WriteAllText` przez metodę.</span><span class="sxs-lookup"><span data-stu-id="96ccb-417">If `Testfile.txt` does not exist, it is created by the `WriteAllText` method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFieldParser(System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.FileIO.TextFieldParser.ReadFields" />
        <altmember cref="M:Microsoft.VisualBasic.FileIO.TextFieldParser.ReadLine" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md"><span data-ttu-id="96ccb-418">Obiekty (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="96ccb-418">Objects (Visual Basic)</span></span></related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/parsing-text-files-with-the-textfieldparser-object.md"><span data-ttu-id="96ccb-419">Analizowanie plików tekstowych za pomocą obiektu TextFieldParser</span><span class="sxs-lookup"><span data-stu-id="96ccb-419">Parsing Text Files with the TextFieldParser Object</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="SetDelimiters">
      <MemberSignature Language="C#" Value="public void SetDelimiters (params string[] delimiters);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void SetDelimiters(string[] delimiters) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileIO.TextFieldParser.SetDelimiters(System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetDelimiters (ParamArray delimiters As String())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetDelimiters(... cli::array &lt;System::String ^&gt; ^ delimiters);" />
      <MemberSignature Language="F#" Value="member this.SetDelimiters : string[] -&gt; unit" Usage="textFieldParser.SetDelimiters delimiters" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="delimiters" Type="System.String[]">
          <Attributes>
            <Attribute FrameworkAlternate="netcore-3.0">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="delimiters"><span data-ttu-id="96ccb-420">Tablica typu <see langword="String" />.</span><span class="sxs-lookup"><span data-stu-id="96ccb-420">Array of type <see langword="String" />.</span></span></param>
        <summary><span data-ttu-id="96ccb-421">Ustawia ograniczniki dla czytnika dla określonych wartości i ustawia typ pola na <see langword="Delimited" />.</span><span class="sxs-lookup"><span data-stu-id="96ccb-421">Sets the delimiters for the reader to the specified values, and sets the field type to <see langword="Delimited" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="96ccb-422">Istniejąca zawartość `Delimiters` właściwości jest czyszczona, gdy ta metoda jest ustawiona.</span><span class="sxs-lookup"><span data-stu-id="96ccb-422">The existing contents of the `Delimiters` property are cleared when this method is set.</span></span>  
  
 <span data-ttu-id="96ccb-423">Ta metoda zapewnia sposób ustawiania ograniczników bez tworzenia tablicy.</span><span class="sxs-lookup"><span data-stu-id="96ccb-423">This method provides a way to set delimiters without creating an array.</span></span>  
  
 <span data-ttu-id="96ccb-424">W poniższej tabeli przedstawiono przykład zadania związanego `SetDelimiters` z tą metodą.</span><span class="sxs-lookup"><span data-stu-id="96ccb-424">The following table lists an example of a task involving the `SetDelimiters` method.</span></span>  
  
|<span data-ttu-id="96ccb-425">Zadanie</span><span class="sxs-lookup"><span data-stu-id="96ccb-425">To</span></span>|<span data-ttu-id="96ccb-426">Zobacz</span><span class="sxs-lookup"><span data-stu-id="96ccb-426">See</span></span>|  
|--------|---------|  
|<span data-ttu-id="96ccb-427">Analizowanie pliku tekstowego</span><span class="sxs-lookup"><span data-stu-id="96ccb-427">Parse a text file</span></span>|[<span data-ttu-id="96ccb-428">Analizowanie plików tekstowych za pomocą obiektu TextFieldParser</span><span class="sxs-lookup"><span data-stu-id="96ccb-428">Parsing Text Files with the TextFieldParser Object</span></span>](~/docs/visual-basic/developing-apps/programming/drives-directories-files/parsing-text-files-with-the-textfieldparser-object.md)|  
  
   
  
## Examples  
 <span data-ttu-id="96ccb-429">Ten przykład otwiera Analizator pól tekstowych i definiuje ogranicznik jako `vbTab`.</span><span class="sxs-lookup"><span data-stu-id="96ccb-429">This example opens a text field parser and defines the delimiter as `vbTab`.</span></span>  
  
 [!code-vb[VbVbalrTextFieldParser#4](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrTextFieldParser/VB/Class1.vb#4)]  
  
 <span data-ttu-id="96ccb-430">Zastąp ścieżkę `C:\logs\test.log` ścieżką i nazwą pliku, który chcesz przeanalizować.</span><span class="sxs-lookup"><span data-stu-id="96ccb-430">Replace the path `C:\logs\test.log` with the path and name of the file you wish to parse.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="96ccb-431">Ogranicznik jest zerem o zerowej długości.</span><span class="sxs-lookup"><span data-stu-id="96ccb-431">A delimiter is zero-length.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFieldParser(System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.FileIO.TextFieldParser.SetFieldWidths(System.Int32[])" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md"><span data-ttu-id="96ccb-432">Obiekty (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="96ccb-432">Objects (Visual Basic)</span></span></related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/parsing-text-files-with-the-textfieldparser-object.md"><span data-ttu-id="96ccb-433">Analizowanie plików tekstowych za pomocą obiektu TextFieldParser</span><span class="sxs-lookup"><span data-stu-id="96ccb-433">Parsing Text Files with the TextFieldParser Object</span></span></related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-comma-delimited-text-files.md"><span data-ttu-id="96ccb-434">Instrukcje: Odczytaj z rozdzielanego przecinkami pliku tekstowego w Visual Basic</span><span class="sxs-lookup"><span data-stu-id="96ccb-434">How to: Read From a Comma-Delimited Text File in Visual Basic</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="SetFieldWidths">
      <MemberSignature Language="C#" Value="public void SetFieldWidths (params int[] fieldWidths);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void SetFieldWidths(int32[] fieldWidths) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileIO.TextFieldParser.SetFieldWidths(System.Int32[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetFieldWidths (ParamArray fieldWidths As Integer())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetFieldWidths(... cli::array &lt;int&gt; ^ fieldWidths);" />
      <MemberSignature Language="F#" Value="member this.SetFieldWidths : int[] -&gt; unit" Usage="textFieldParser.SetFieldWidths fieldWidths" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fieldWidths" Type="System.Int32[]">
          <Attributes>
            <Attribute FrameworkAlternate="netcore-3.0">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="fieldWidths"><span data-ttu-id="96ccb-435"><see langword="Integer" />Tablica.</span><span class="sxs-lookup"><span data-stu-id="96ccb-435">Array of <see langword="Integer" />.</span></span></param>
        <summary><span data-ttu-id="96ccb-436">Ustawia ograniczniki dla czytnika dla określonych wartości.</span><span class="sxs-lookup"><span data-stu-id="96ccb-436">Sets the delimiters for the reader to the specified values.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="96ccb-437">Istniejąca zawartość `Delimiters` właściwości jest czyszczona po ustawieniu tego ustawienia.</span><span class="sxs-lookup"><span data-stu-id="96ccb-437">The existing contents of the `Delimiters` property are cleared when this is set.</span></span>  
  
 <span data-ttu-id="96ccb-438">Ta metoda zapewnia sposób ustawiania ograniczników bez tworzenia tablicy.</span><span class="sxs-lookup"><span data-stu-id="96ccb-438">This method provides a way to set delimiters without creating an array.</span></span>  
  
 <span data-ttu-id="96ccb-439">W poniższej tabeli przedstawiono przykład zadań związanych z `SetFieldWidths` tą metodą.</span><span class="sxs-lookup"><span data-stu-id="96ccb-439">The following table lists example of tasks involving the `SetFieldWidths` method.</span></span>  
  
|<span data-ttu-id="96ccb-440">Zadanie</span><span class="sxs-lookup"><span data-stu-id="96ccb-440">To</span></span>|<span data-ttu-id="96ccb-441">Zobacz</span><span class="sxs-lookup"><span data-stu-id="96ccb-441">See</span></span>|  
|--------|---------|  
|<span data-ttu-id="96ccb-442">Analizuj plik tekstowy.</span><span class="sxs-lookup"><span data-stu-id="96ccb-442">Parse a text file.</span></span>|[<span data-ttu-id="96ccb-443">Analizowanie plików tekstowych za pomocą obiektu TextFieldParser</span><span class="sxs-lookup"><span data-stu-id="96ccb-443">Parsing Text Files with the TextFieldParser Object</span></span>](~/docs/visual-basic/developing-apps/programming/drives-directories-files/parsing-text-files-with-the-textfieldparser-object.md)|  
  
   
  
## Examples  
 <span data-ttu-id="96ccb-444">Ten przykład otwiera Analizator pól tekstowych i definiuje szerokość pola jako `5`.</span><span class="sxs-lookup"><span data-stu-id="96ccb-444">This example opens a text-field parser and defines the field width as `5`.</span></span>  
  
 [!code-vb[VbVbalrTextFieldParser#12](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrTextFieldParser/VB/Class1.vb#12)]  
  
 <span data-ttu-id="96ccb-445">Zastąp ścieżkę `C:\logs\test.log` ścieżką i nazwą pliku, który chcesz przeanalizować.</span><span class="sxs-lookup"><span data-stu-id="96ccb-445">Replace the path `C:\logs\test.log` with the path and name of the file you wish to parse.</span></span>  
  
 <span data-ttu-id="96ccb-446">Poniższy przykład otwiera Analizator pól tekstowych i definiuje szerokość pola jako `5` `10`zmienna.</span><span class="sxs-lookup"><span data-stu-id="96ccb-446">The following example opens a text-field parser and defines the field widths as `5`, `10`, and variable.</span></span>  
  
 [!code-vb[VbVbalrTextFieldParser#13](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrTextFieldParser/VB/Class1.vb#13)]  
  
 <span data-ttu-id="96ccb-447">Zastąp ścieżkę `C:\logs\test.log` ścieżką i nazwą pliku, który chcesz przeanalizować.</span><span class="sxs-lookup"><span data-stu-id="96ccb-447">Replace the path `C:\logs\test.log` with the path and name of the file you wish to parse.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFieldParser(System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.FileIO.TextFieldParser.SetDelimiters(System.String[])" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md"><span data-ttu-id="96ccb-448">Obiekty (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="96ccb-448">Objects (Visual Basic)</span></span></related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/parsing-text-files-with-the-textfieldparser-object.md"><span data-ttu-id="96ccb-449">Analizowanie plików tekstowych za pomocą obiektu TextFieldParser</span><span class="sxs-lookup"><span data-stu-id="96ccb-449">Parsing Text Files with the TextFieldParser Object</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="System.IDisposable.Dispose">
      <MemberSignature Language="C#" Value="void IDisposable.Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.IDisposable.Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileIO.TextFieldParser.System#IDisposable#Dispose" />
      <MemberSignature Language="VB.NET" Value="Sub Dispose () Implements IDisposable.Dispose" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.IDisposable.Dispose() = IDisposable::Dispose;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="96ccb-450">Zwalnia zasoby używane przez <see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" /> obiekt.</span><span class="sxs-lookup"><span data-stu-id="96ccb-450">Releases resources used by the <see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="96ccb-451">Ten element jest jawną implementacją członków.</span><span class="sxs-lookup"><span data-stu-id="96ccb-451">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="96ccb-452">Może być używana tylko wtedy, `TextFieldParser` gdy wystąpienie jest rzutowane <xref:System.IDisposable> do interfejsu.</span><span class="sxs-lookup"><span data-stu-id="96ccb-452">It can be used only when the `TextFieldParser` instance is cast to an <xref:System.IDisposable> interface.</span></span> <span data-ttu-id="96ccb-453">Zalecaną alternatywą jest wywołanie <xref:Microsoft.VisualBasic.FileIO.TextFieldParser.Dispose%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="96ccb-453">The recommended alternative is to call the <xref:Microsoft.VisualBasic.FileIO.TextFieldParser.Dispose%2A> method.</span></span>

         ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TextFieldType">
      <MemberSignature Language="C#" Value="public Microsoft.VisualBasic.FileIO.FieldType TextFieldType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.VisualBasic.FileIO.FieldType TextFieldType" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.FileIO.TextFieldParser.TextFieldType" />
      <MemberSignature Language="VB.NET" Value="Public Property TextFieldType As FieldType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::VisualBasic::FileIO::FieldType TextFieldType { Microsoft::VisualBasic::FileIO::FieldType get(); void set(Microsoft::VisualBasic::FileIO::FieldType value); };" />
      <MemberSignature Language="F#" Value="member this.TextFieldType : Microsoft.VisualBasic.FileIO.FieldType with get, set" Usage="Microsoft.VisualBasic.FileIO.TextFieldParser.TextFieldType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.FileIO.FieldType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="96ccb-454">Wskazuje, czy plik, który ma być analizowany, jest rozdzielony lub ma stałą szerokość.</span><span class="sxs-lookup"><span data-stu-id="96ccb-454">Indicates whether the file to be parsed is delimited or fixed-width.</span></span></summary>
        <value><span data-ttu-id="96ccb-455"><see cref="P:Microsoft.VisualBasic.FileIO.TextFieldParser.TextFieldType" /> Wartość wskazująca, czy plik, który ma być analizowany, jest rozdzielany, czy ma stałą szerokość.</span><span class="sxs-lookup"><span data-stu-id="96ccb-455">A <see cref="P:Microsoft.VisualBasic.FileIO.TextFieldParser.TextFieldType" /> value that indicates whether the file to be parsed is delimited or fixed-width.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="96ccb-456">Wartość domyślna tej właściwości jest rozdzielana.</span><span class="sxs-lookup"><span data-stu-id="96ccb-456">The default value of this property is delimited.</span></span>  
  
 <span data-ttu-id="96ccb-457">W poniższej tabeli przedstawiono przykłady zadań związanych z `TextFieldType` właściwością.</span><span class="sxs-lookup"><span data-stu-id="96ccb-457">The following table lists examples of tasks involving the `TextFieldType` property.</span></span>  
  
|<span data-ttu-id="96ccb-458">Zadanie</span><span class="sxs-lookup"><span data-stu-id="96ccb-458">To</span></span>|<span data-ttu-id="96ccb-459">Zobacz</span><span class="sxs-lookup"><span data-stu-id="96ccb-459">See</span></span>|  
|--------|---------|  
|<span data-ttu-id="96ccb-460">Odczytaj z rozdzielanego pliku tekstowego</span><span class="sxs-lookup"><span data-stu-id="96ccb-460">Read from a delimited text file</span></span>|[<span data-ttu-id="96ccb-461">Instrukcje: Odczyt z rozdzielanych przecinkami plików tekstowych</span><span class="sxs-lookup"><span data-stu-id="96ccb-461">How to: Read From Comma-Delimited Text Files</span></span>](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-comma-delimited-text-files.md)|  
|<span data-ttu-id="96ccb-462">Odczytaj z pliku tekstowego o stałej szerokości</span><span class="sxs-lookup"><span data-stu-id="96ccb-462">Read from a fixed-width text file</span></span>|[<span data-ttu-id="96ccb-463">Instrukcje: Odczyt z plików tekstowych o stałej szerokości</span><span class="sxs-lookup"><span data-stu-id="96ccb-463">How to: Read From Fixed-width Text Files</span></span>](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-fixed-width-text-files.md)|  
|<span data-ttu-id="96ccb-464">Odczytaj z pliku tekstowego z wieloma formatami</span><span class="sxs-lookup"><span data-stu-id="96ccb-464">Read from a text file with multiple formats</span></span>|[<span data-ttu-id="96ccb-465">Instrukcje: Odczyt z plików tekstowych z wieloma formatami</span><span class="sxs-lookup"><span data-stu-id="96ccb-465">How to: Read From Text Files with Multiple Formats</span></span>](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-text-files-with-multiple-formats.md)|  
  
   
  
## Examples  
 <span data-ttu-id="96ccb-466">Ten przykład tworzy `TextFieldParser`, `FileReader`, i określa, że jest rozdzielony.</span><span class="sxs-lookup"><span data-stu-id="96ccb-466">This example creates a `TextFieldParser`, `FileReader`, and specifies that it is delimited.</span></span>  
  
 [!code-vb[VbVbalrTextFieldParser#19](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrTextFieldParser/VB/Class1.vb#19)]  
  
 <span data-ttu-id="96ccb-467">Ten przykład tworzy `TextFieldParser`, `FileReader`, i określa, że ma stałą szerokość.</span><span class="sxs-lookup"><span data-stu-id="96ccb-467">This example creates a `TextFieldParser`, `FileReader`, and specifies that it is fixed-width.</span></span>  
  
 [!code-vb[VbVbalrTextFieldParser#20](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrTextFieldParser/VB/Class1.vb#20)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFieldParser(System.String)" />
        <altmember cref="T:Microsoft.VisualBasic.FileIO.FieldType" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md"><span data-ttu-id="96ccb-468">Obiekty (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="96ccb-468">Objects (Visual Basic)</span></span></related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/parsing-text-files-with-the-textfieldparser-object.md"><span data-ttu-id="96ccb-469">Analizowanie plików tekstowych za pomocą obiektu TextFieldParser</span><span class="sxs-lookup"><span data-stu-id="96ccb-469">Parsing Text Files with the TextFieldParser Object</span></span></related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-comma-delimited-text-files.md"><span data-ttu-id="96ccb-470">Instrukcje: Odczytaj z rozdzielanego przecinkami pliku tekstowego w Visual Basic</span><span class="sxs-lookup"><span data-stu-id="96ccb-470">How to: Read From a Comma-Delimited Text File in Visual Basic</span></span></related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-fixed-width-text-files.md"><span data-ttu-id="96ccb-471">Instrukcje: Odczytaj z pliku tekstowego o stałej szerokości w Visual Basic</span><span class="sxs-lookup"><span data-stu-id="96ccb-471">How to: Read From a Fixed-width Text File in Visual Basic</span></span></related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-text-files-with-multiple-formats.md"><span data-ttu-id="96ccb-472">Instrukcje: Odczytaj z pliku tekstowego wiele formatów w Visual Basic</span><span class="sxs-lookup"><span data-stu-id="96ccb-472">How to: Read From a Text File with Multiple Formats in Visual Basic</span></span></related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-3.0/2ewecs64(v=vs.85)"><span data-ttu-id="96ccb-473">Rozwiązywanie problemów z wyjątkami: Microsoft.VisualBasic.FileIO.TextFieldParser.MalformedLineException</span><span class="sxs-lookup"><span data-stu-id="96ccb-473">Troubleshooting Exceptions: Microsoft.VisualBasic.FileIO.TextFieldParser.MalformedLineException</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="TrimWhiteSpace">
      <MemberSignature Language="C#" Value="public bool TrimWhiteSpace { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool TrimWhiteSpace" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.FileIO.TextFieldParser.TrimWhiteSpace" />
      <MemberSignature Language="VB.NET" Value="Public Property TrimWhiteSpace As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool TrimWhiteSpace { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.TrimWhiteSpace : bool with get, set" Usage="Microsoft.VisualBasic.FileIO.TextFieldParser.TrimWhiteSpace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="96ccb-474">Wskazuje, czy spacja wiodąca i końcowa powinna być obcinana z wartości pól.</span><span class="sxs-lookup"><span data-stu-id="96ccb-474">Indicates whether leading and trailing white space should be trimmed from field values.</span></span></summary>
        <value><span data-ttu-id="96ccb-475"><see langword="True" />Jeśli odstępy wiodące i końcowe powinny być obcinane z wartości pól; w przeciwnym razie. <see langword="False" /></span><span class="sxs-lookup"><span data-stu-id="96ccb-475"><see langword="True" /> if leading and trailing white space should be trimmed from field values; otherwise, <see langword="False" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="96ccb-476">Wartość domyślna tej właściwości to `True`.</span><span class="sxs-lookup"><span data-stu-id="96ccb-476">The default value for this property is `True`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="96ccb-477">Ten przykład tworzy `TextFieldParser`, `FileReader`i ustawia `TrimWhiteSpace` właściwość na `True`.</span><span class="sxs-lookup"><span data-stu-id="96ccb-477">This example creates a `TextFieldParser`, `FileReader`, and sets the `TrimWhiteSpace` property to `True`.</span></span>  
  
 [!code-vb[VbVbalrTextFieldParser#7](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrTextFieldParser/VB/Class1.vb#7)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFieldParser(System.String)" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md"><span data-ttu-id="96ccb-478">Obiekty (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="96ccb-478">Objects (Visual Basic)</span></span></related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/parsing-text-files-with-the-textfieldparser-object.md"><span data-ttu-id="96ccb-479">Analizowanie plików tekstowych za pomocą obiektu TextFieldParser</span><span class="sxs-lookup"><span data-stu-id="96ccb-479">Parsing Text Files with the TextFieldParser Object</span></span></related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-comma-delimited-text-files.md"><span data-ttu-id="96ccb-480">Instrukcje: Odczytaj z rozdzielanego przecinkami pliku tekstowego w Visual Basic</span><span class="sxs-lookup"><span data-stu-id="96ccb-480">How to: Read From a Comma-Delimited Text File in Visual Basic</span></span></related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-fixed-width-text-files.md"><span data-ttu-id="96ccb-481">Instrukcje: Odczytaj z pliku tekstowego o stałej szerokości w Visual Basic</span><span class="sxs-lookup"><span data-stu-id="96ccb-481">How to: Read From a Fixed-width Text File in Visual Basic</span></span></related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-text-files-with-multiple-formats.md"><span data-ttu-id="96ccb-482">Instrukcje: Odczytaj z pliku tekstowego wiele formatów w Visual Basic</span><span class="sxs-lookup"><span data-stu-id="96ccb-482">How to: Read From a Text File with Multiple Formats in Visual Basic</span></span></related>
      </Docs>
    </Member>
  </Members>
</Type>
