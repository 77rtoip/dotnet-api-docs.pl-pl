<Type Name="TextFieldParser" FullName="Microsoft.VisualBasic.FileIO.TextFieldParser">
  <TypeSignature Language="C#" Value="public class TextFieldParser : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi TextFieldParser extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:Microsoft.VisualBasic.FileIO.TextFieldParser" />
  <TypeSignature Language="VB.NET" Value="Public Class TextFieldParser&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class TextFieldParser : IDisposable" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic</AssemblyName>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="44324-101">Udostępnia metody i właściwości dla analizowanie tekstu w strukturze plików.</span><span class="sxs-lookup"><span data-stu-id="44324-101">Provides methods and properties for parsing structured text files.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="44324-102">`TextFieldParser` Obiektu udostępnia metody i właściwości na potrzeby analizowania strukturę plików tekstowych.</span><span class="sxs-lookup"><span data-stu-id="44324-102">The `TextFieldParser` object provides methods and properties for parsing structured text files.</span></span> <span data-ttu-id="44324-103">Podczas analizowania pliku tekstowego z `TextFieldParser` jest podobny do Iterowanie po pliku tekstowego podczas `ReadFields` metody do wyodrębniania pól tekstu jest podobny do dzielenia na ciągi.</span><span class="sxs-lookup"><span data-stu-id="44324-103">Parsing a text file with the `TextFieldParser` is similar to iterating over a text file, while the `ReadFields` method to extract fields of text is similar to splitting the strings.</span></span>  
  
 <span data-ttu-id="44324-104">`TextFieldParser` Można analizować dwa typy plików: rozdzielanego lub o stałej szerokości.</span><span class="sxs-lookup"><span data-stu-id="44324-104">The `TextFieldParser` can parse two types of files: delimited or fixed-width.</span></span> <span data-ttu-id="44324-105">Niektóre właściwości, takie jak `Delimiters` i `HasFieldsEnclosedInQuotes` mają znaczenie tylko podczas pracy z plików, podczas gdy `FieldWidths` właściwość ma znaczenie tylko wtedy, gdy praca z plikami o stałej szerokości.</span><span class="sxs-lookup"><span data-stu-id="44324-105">Some properties, such as `Delimiters` and `HasFieldsEnclosedInQuotes` are meaningful only when working with delimited files, while the `FieldWidths` property is meaningful only when working with fixed-width files.</span></span>  
  
 <span data-ttu-id="44324-106">W poniższej tabeli przedstawiono przykłady dotyczące zadań `Microsoft.VisualBasic.FileIO.TextFieldParser` obiektu.</span><span class="sxs-lookup"><span data-stu-id="44324-106">The following table lists examples of tasks involving the `Microsoft.VisualBasic.FileIO.TextFieldParser` object.</span></span>  
  
|<span data-ttu-id="44324-107">Do</span><span class="sxs-lookup"><span data-stu-id="44324-107">To</span></span>|<span data-ttu-id="44324-108">Zobacz</span><span class="sxs-lookup"><span data-stu-id="44324-108">See</span></span>|  
|--------|---------|  
|<span data-ttu-id="44324-109">Odczyt z pliku tekstowego z separatorami</span><span class="sxs-lookup"><span data-stu-id="44324-109">Read from a delimited text file</span></span>|[<span data-ttu-id="44324-110">Instrukcje: odczyt z rozdzielonych przecinkami plików testowych</span><span class="sxs-lookup"><span data-stu-id="44324-110">How to: Read From Comma-Delimited Text Files</span></span>](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-comma-delimited-text-files.md)|  
|<span data-ttu-id="44324-111">Odczyt z plików testowych o stałej szerokości</span><span class="sxs-lookup"><span data-stu-id="44324-111">Read from a fixed-width text file</span></span>|[<span data-ttu-id="44324-112">Instrukcje: odczyt z plików testowych o stałej szerokości</span><span class="sxs-lookup"><span data-stu-id="44324-112">How to: Read From Fixed-width Text Files</span></span>](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-fixed-width-text-files.md)|  
|<span data-ttu-id="44324-113">Odczyt z pliku tekstowego w wielu formatach</span><span class="sxs-lookup"><span data-stu-id="44324-113">Read from a text file with multiple formats</span></span>|[<span data-ttu-id="44324-114">Instrukcje: odczyt z plików tekstowych w wielu formatach</span><span class="sxs-lookup"><span data-stu-id="44324-114">How to: Read From Text Files with Multiple Formats</span></span>](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-text-files-with-multiple-formats.md)|  
  
   
  
## Examples  
 <span data-ttu-id="44324-115">W tym przykładzie zostanie przetworzona za pomocą pliku tekstowego tabulacji `Bigfile`.</span><span class="sxs-lookup"><span data-stu-id="44324-115">This example parses through a tab-delimited text file, `Bigfile`.</span></span>  
  
 [!code-vb[VbVbalrTextFieldParser#17](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrTextFieldParser/VB/Class1.vb#17)]  
  
 ]]></format>
    </remarks>
    <altmember cref="M:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFieldParser(System.String)" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="44324-116">Inicjuje nowe wystąpienie klasy <see langword="TextFieldParser" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="44324-116">Initializes a new instance of the <see langword="TextFieldParser" /> class.</span></span></summary>
        <altmember cref="M:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFieldParser(System.String)" />
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TextFieldParser (System.IO.Stream stream);" />
      <MemberSignature Language="ILAsm" Value=".method public specialname rtspecialname instance void .ctor(class System.IO.Stream stream) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.IO.Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TextFieldParser(System::IO::Stream ^ stream);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="stream">
          <span data-ttu-id="44324-117"><see cref="T:System.IO.Stream" />.</span><span class="sxs-lookup"><span data-stu-id="44324-117"><see cref="T:System.IO.Stream" />.</span></span> <span data-ttu-id="44324-118">Strumień, który będzie analizowany.</span><span class="sxs-lookup"><span data-stu-id="44324-118">The stream to be parsed.</span></span></param>
        <summary><span data-ttu-id="44324-119">Inicjuje nowe wystąpienie klasy <see langword="TextFieldParser" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="44324-119">Initializes a new instance of the <see langword="TextFieldParser" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="44324-120">Tworzy nowy `TextFieldParser` obiekt, aby przeanalizować pliku lub strumienia, który jest reprezentowana przez `stream` parametru.</span><span class="sxs-lookup"><span data-stu-id="44324-120">Creates a new `TextFieldParser` object to parse the file or stream that is represented by the `stream` parameter.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="44324-121"><paramref name="stream" /> jest <see langword="Nothing" />.</span><span class="sxs-lookup"><span data-stu-id="44324-121"><paramref name="stream" /> is <see langword="Nothing" />.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="44324-122"><paramref name="stream" /> Nie można odczytać z.</span><span class="sxs-lookup"><span data-stu-id="44324-122"><paramref name="stream" /> cannot be read from.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFieldParser(System.String)" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TextFieldParser (System.IO.TextReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public specialname rtspecialname instance void .ctor(class System.IO.TextReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.IO.TextReader)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (reader As TextReader)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TextFieldParser(System::IO::TextReader ^ reader);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="reader" Type="System.IO.TextReader" />
      </Parameters>
      <Docs>
        <param name="reader">
          <span data-ttu-id="44324-123"><see cref="T:System.IO.TextReader" />.</span><span class="sxs-lookup"><span data-stu-id="44324-123"><see cref="T:System.IO.TextReader" />.</span></span> <span data-ttu-id="44324-124"><see cref="T:System.IO.TextReader" /> Strumienia do przeanalizowania.</span><span class="sxs-lookup"><span data-stu-id="44324-124">The <see cref="T:System.IO.TextReader" /> stream to be parsed.</span></span></param>
        <summary><span data-ttu-id="44324-125">Inicjuje nowe wystąpienie klasy <see langword="TextFieldParser" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="44324-125">Initializes a new instance of the <see langword="TextFieldParser" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="44324-126">Tworzy nowy `TextFieldParser` obiekt, aby przeanalizować pliku lub strumienia, który jest reprezentowana przez `reader` parametru.</span><span class="sxs-lookup"><span data-stu-id="44324-126">Creates a new `TextFieldParser` object to parse the file or stream that is represented by the `reader` parameter.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="44324-127"><paramref name="reader" /> jest <see langword="Nothing" />.</span><span class="sxs-lookup"><span data-stu-id="44324-127"><paramref name="reader" /> is <see langword="Nothing" />.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFieldParser(System.String)" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TextFieldParser (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public specialname rtspecialname instance void .ctor(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (path As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TextFieldParser(System::String ^ path);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path">
          <span data-ttu-id="44324-128"><see langword="String" />.</span><span class="sxs-lookup"><span data-stu-id="44324-128"><see langword="String" />.</span></span> <span data-ttu-id="44324-129">Pełna ścieżka pliku do przeanalizowania.</span><span class="sxs-lookup"><span data-stu-id="44324-129">The complete path of the file to be parsed.</span></span></param>
        <summary><span data-ttu-id="44324-130">Inicjuje nowe wystąpienie klasy <see langword="TextFieldParser" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="44324-130">Initializes a new instance of the <see langword="TextFieldParser" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="44324-131">Tworzy nowy `TextFieldParser` obiekt, aby przeanalizować plik określony przez `path` parametru.</span><span class="sxs-lookup"><span data-stu-id="44324-131">Creates a new `TextFieldParser` object to parse the file specified by the `path` parameter.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="44324-132"><paramref name="path" /> jest pustym ciągiem.</span><span class="sxs-lookup"><span data-stu-id="44324-132"><paramref name="path" /> is an empty string.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFieldParser(System.String)" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TextFieldParser (System.IO.Stream stream, System.Text.Encoding defaultEncoding);" />
      <MemberSignature Language="ILAsm" Value=".method public specialname rtspecialname instance void .ctor(class System.IO.Stream stream, class System.Text.Encoding defaultEncoding) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.IO.Stream,System.Text.Encoding)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TextFieldParser(System::IO::Stream ^ stream, System::Text::Encoding ^ defaultEncoding);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="defaultEncoding" Type="System.Text.Encoding" />
      </Parameters>
      <Docs>
        <param name="stream">
          <span data-ttu-id="44324-133"><see cref="T:System.IO.Stream" />.</span><span class="sxs-lookup"><span data-stu-id="44324-133"><see cref="T:System.IO.Stream" />.</span></span> <span data-ttu-id="44324-134">Strumień, który będzie analizowany.</span><span class="sxs-lookup"><span data-stu-id="44324-134">The stream to be parsed.</span></span></param>
        <param name="defaultEncoding">
          <span data-ttu-id="44324-135"><see cref="T:System.Text.Encoding" />.</span><span class="sxs-lookup"><span data-stu-id="44324-135"><see cref="T:System.Text.Encoding" />.</span></span> <span data-ttu-id="44324-136">System kodowania znaków, który będzie używany w razie niemożności ustalenia kodowania na podstawie treści pliku.</span><span class="sxs-lookup"><span data-stu-id="44324-136">The character encoding to use if encoding is not determined from file.</span></span> <span data-ttu-id="44324-137">Wartość domyślna to <see cref="P:System.Text.Encoding.UTF8" />.</span><span class="sxs-lookup"><span data-stu-id="44324-137">Default is <see cref="P:System.Text.Encoding.UTF8" />.</span></span></param>
        <summary><span data-ttu-id="44324-138">Inicjuje nowe wystąpienie klasy <see langword="TextFieldParser" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="44324-138">Initializes a new instance of the <see langword="TextFieldParser" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="44324-139">Tworzy nowy `TextFieldParser` obiekt, aby przeanalizować pliku lub strumienia, który jest reprezentowana przez `stream` parametru.</span><span class="sxs-lookup"><span data-stu-id="44324-139">Creates a new `TextFieldParser` object to parse the file or stream that is represented by the `stream` parameter.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="44324-140">Gdy zbiór znaków zostanie skompilowany z określonym ustawieniem kultury, po czym pobrany z użyciem innego ustawienia kultury, znaki mogą nie nadawać się do interpretacji i powodować zgłoszenie wyjątku.</span><span class="sxs-lookup"><span data-stu-id="44324-140">When you compile a set of characters with a particular cultural setting and retrieve those same characters with a different cultural setting, the characters might not be interpretable and could cause an exception to be thrown.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="44324-141"><paramref name="stream" /> lub <paramref name="defaultEncoding" /> jest <see langword="Nothing" />.</span><span class="sxs-lookup"><span data-stu-id="44324-141"><paramref name="stream" /> or <paramref name="defaultEncoding" /> is <see langword="Nothing" />.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="44324-142"><paramref name="stream" /> Nie można odczytać z.</span><span class="sxs-lookup"><span data-stu-id="44324-142"><paramref name="stream" /> cannot be read from.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFieldParser(System.String)" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TextFieldParser (string path, System.Text.Encoding defaultEncoding);" />
      <MemberSignature Language="ILAsm" Value=".method public specialname rtspecialname instance void .ctor(string path, class System.Text.Encoding defaultEncoding) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.String,System.Text.Encoding)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (path As String, defaultEncoding As Encoding)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TextFieldParser(System::String ^ path, System::Text::Encoding ^ defaultEncoding);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="defaultEncoding" Type="System.Text.Encoding" />
      </Parameters>
      <Docs>
        <param name="path">
          <span data-ttu-id="44324-143"><see langword="String" />.</span><span class="sxs-lookup"><span data-stu-id="44324-143"><see langword="String" />.</span></span> <span data-ttu-id="44324-144">Pełna ścieżka pliku do przeanalizowania.</span><span class="sxs-lookup"><span data-stu-id="44324-144">The complete path of the file to be parsed.</span></span></param>
        <param name="defaultEncoding">
          <span data-ttu-id="44324-145"><see cref="T:System.Text.Encoding" />.</span><span class="sxs-lookup"><span data-stu-id="44324-145"><see cref="T:System.Text.Encoding" />.</span></span> <span data-ttu-id="44324-146">System kodowania znaków, który będzie używany w razie niemożności ustalenia kodowania na podstawie treści pliku.</span><span class="sxs-lookup"><span data-stu-id="44324-146">The character encoding to use if encoding is not determined from file.</span></span> <span data-ttu-id="44324-147">Wartość domyślna to <see cref="P:System.Text.Encoding.UTF8" />.</span><span class="sxs-lookup"><span data-stu-id="44324-147">Default is <see cref="P:System.Text.Encoding.UTF8" />.</span></span></param>
        <summary><span data-ttu-id="44324-148">Inicjuje nowe wystąpienie klasy <see langword="TextFieldParser" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="44324-148">Initializes a new instance of the <see langword="TextFieldParser" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="44324-149">Tworzy nowy `TextFieldParser` obiekt, aby przeanalizować plik określony przez `path` parametru.</span><span class="sxs-lookup"><span data-stu-id="44324-149">Creates a new `TextFieldParser` object to parse the file specified by the `path` parameter.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="44324-150">Gdy zbiór znaków zostanie skompilowany z określonym ustawieniem kultury, po czym pobrany z użyciem innego ustawienia kultury, znaki mogą nie nadawać się do interpretacji i powodować zgłoszenie wyjątku.</span><span class="sxs-lookup"><span data-stu-id="44324-150">When you compile a set of characters with a particular cultural setting and retrieve those same characters with a different cultural setting, the characters might not be interpretable and could cause an exception to be thrown.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="44324-151"><paramref name="path" /> jest to pusty ciąg lub <paramref name="defaultEncoding" /> jest <see langword="Nothing" />.</span><span class="sxs-lookup"><span data-stu-id="44324-151"><paramref name="path" /> is an empty string or <paramref name="defaultEncoding" /> is <see langword="Nothing" />.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFieldParser(System.String)" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TextFieldParser (System.IO.Stream stream, System.Text.Encoding defaultEncoding, bool detectEncoding);" />
      <MemberSignature Language="ILAsm" Value=".method public specialname rtspecialname instance void .ctor(class System.IO.Stream stream, class System.Text.Encoding defaultEncoding, bool detectEncoding) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.IO.Stream,System.Text.Encoding,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TextFieldParser(System::IO::Stream ^ stream, System::Text::Encoding ^ defaultEncoding, bool detectEncoding);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="defaultEncoding" Type="System.Text.Encoding" />
        <Parameter Name="detectEncoding" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="stream">
          <span data-ttu-id="44324-152"><see cref="T:System.IO.Stream" />.</span><span class="sxs-lookup"><span data-stu-id="44324-152"><see cref="T:System.IO.Stream" />.</span></span> <span data-ttu-id="44324-153">Strumień, który będzie analizowany.</span><span class="sxs-lookup"><span data-stu-id="44324-153">The stream to be parsed.</span></span></param>
        <param name="defaultEncoding">
          <span data-ttu-id="44324-154"><see cref="T:System.Text.Encoding" />.</span><span class="sxs-lookup"><span data-stu-id="44324-154"><see cref="T:System.Text.Encoding" />.</span></span> <span data-ttu-id="44324-155">System kodowania znaków, który będzie używany w razie niemożności ustalenia kodowania na podstawie treści pliku.</span><span class="sxs-lookup"><span data-stu-id="44324-155">The character encoding to use if encoding is not determined from file.</span></span> <span data-ttu-id="44324-156">Wartość domyślna to <see cref="P:System.Text.Encoding.UTF8" />.</span><span class="sxs-lookup"><span data-stu-id="44324-156">Default is <see cref="P:System.Text.Encoding.UTF8" />.</span></span></param>
        <param name="detectEncoding">
          <span data-ttu-id="44324-157"><see langword="Boolean" />.</span><span class="sxs-lookup"><span data-stu-id="44324-157"><see langword="Boolean" />.</span></span> <span data-ttu-id="44324-158">Wskazuje, czy na początku pliku mają być szukane znaczniki kolejności bajtów.</span><span class="sxs-lookup"><span data-stu-id="44324-158">Indicates whether to look for byte order marks at the beginning of the file.</span></span> <span data-ttu-id="44324-159">Wartość domyślna to <see langword="True" />.</span><span class="sxs-lookup"><span data-stu-id="44324-159">Default is <see langword="True" />.</span></span></param>
        <summary><span data-ttu-id="44324-160">Inicjuje nowe wystąpienie klasy <see langword="TextFieldParser" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="44324-160">Initializes a new instance of the <see langword="TextFieldParser" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="44324-161">Tworzy nowy `TextFieldParser` obiekt, aby przeanalizować pliku lub strumienia, który jest reprezentowana przez `stream` parametru.</span><span class="sxs-lookup"><span data-stu-id="44324-161">Creates a new `TextFieldParser` object to parse the file or stream that is represented by the `stream` parameter.</span></span>  
  
 <span data-ttu-id="44324-162">Jeśli `detectEncoding` parametr jest `True`, próbuje wykryć kodowanie, analizując pierwsze trzy bajty pliku lub strumienia tego konstruktora.</span><span class="sxs-lookup"><span data-stu-id="44324-162">If the `detectEncoding` parameter is `True`, this constructor attempts to detect the encoding by looking at the first three bytes of the file or stream.</span></span> <span data-ttu-id="44324-163">Automatycznie rozpoznaje UTF-8, little endian Unicode i big-endian Unicode tekst Jeśli plik rozpoczyna się od znaków odpowiedniej kolejności bajtów.</span><span class="sxs-lookup"><span data-stu-id="44324-163">It automatically recognizes UTF-8, little-endian Unicode, and big-endian Unicode text if the file starts with the appropriate byte-order marks.</span></span> <span data-ttu-id="44324-164">W przeciwnym razie kodowania określony przez `defaultEncoding` jest używany.</span><span class="sxs-lookup"><span data-stu-id="44324-164">Otherwise, the encoding specified by `defaultEncoding` is used.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="44324-165">Gdy zbiór znaków zostanie skompilowany z określonym ustawieniem kultury, po czym pobrany z użyciem innego ustawienia kultury, znaki mogą nie nadawać się do interpretacji i powodować zgłoszenie wyjątku.</span><span class="sxs-lookup"><span data-stu-id="44324-165">When you compile a set of characters with a particular cultural setting and retrieve those same characters with a different cultural setting, the characters might not be interpretable and could cause an exception to be thrown.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="44324-166"><paramref name="stream" /> lub <paramref name="defaultEncoding" /> jest <see langword="Nothing" />.</span><span class="sxs-lookup"><span data-stu-id="44324-166"><paramref name="stream" /> or <paramref name="defaultEncoding" /> is <see langword="Nothing" />.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="44324-167"><paramref name="stream" /> Nie można odczytać z.</span><span class="sxs-lookup"><span data-stu-id="44324-167"><paramref name="stream" /> cannot be read from.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFieldParser(System.String)" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TextFieldParser (string path, System.Text.Encoding defaultEncoding, bool detectEncoding);" />
      <MemberSignature Language="ILAsm" Value=".method public specialname rtspecialname instance void .ctor(string path, class System.Text.Encoding defaultEncoding, bool detectEncoding) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.String,System.Text.Encoding,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (path As String, defaultEncoding As Encoding, detectEncoding As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TextFieldParser(System::String ^ path, System::Text::Encoding ^ defaultEncoding, bool detectEncoding);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="defaultEncoding" Type="System.Text.Encoding" />
        <Parameter Name="detectEncoding" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="path">
          <span data-ttu-id="44324-168"><see langword="String" />.</span><span class="sxs-lookup"><span data-stu-id="44324-168"><see langword="String" />.</span></span> <span data-ttu-id="44324-169">Pełna ścieżka pliku do przeanalizowania.</span><span class="sxs-lookup"><span data-stu-id="44324-169">The complete path of the file to be parsed.</span></span></param>
        <param name="defaultEncoding">
          <span data-ttu-id="44324-170"><see cref="T:System.Text.Encoding" />.</span><span class="sxs-lookup"><span data-stu-id="44324-170"><see cref="T:System.Text.Encoding" />.</span></span> <span data-ttu-id="44324-171">System kodowania znaków, który będzie używany w razie niemożności ustalenia kodowania na podstawie treści pliku.</span><span class="sxs-lookup"><span data-stu-id="44324-171">The character encoding to use if encoding is not determined from file.</span></span> <span data-ttu-id="44324-172">Wartość domyślna to <see cref="P:System.Text.Encoding.UTF8" />.</span><span class="sxs-lookup"><span data-stu-id="44324-172">Default is <see cref="P:System.Text.Encoding.UTF8" />.</span></span></param>
        <param name="detectEncoding">
          <span data-ttu-id="44324-173"><see langword="Boolean" />.</span><span class="sxs-lookup"><span data-stu-id="44324-173"><see langword="Boolean" />.</span></span> <span data-ttu-id="44324-174">Wskazuje, czy na początku pliku mają być szukane znaczniki kolejności bajtów.</span><span class="sxs-lookup"><span data-stu-id="44324-174">Indicates whether to look for byte order marks at the beginning of the file.</span></span> <span data-ttu-id="44324-175">Wartość domyślna to <see langword="True" />.</span><span class="sxs-lookup"><span data-stu-id="44324-175">Default is <see langword="True" />.</span></span></param>
        <summary><span data-ttu-id="44324-176">Inicjuje nowe wystąpienie klasy <see langword="TextFieldParser" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="44324-176">Initializes a new instance of the <see langword="TextFieldParser" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="44324-177">Tworzy nowy `TextFieldParser` obiekt, aby przeanalizować plik określony przez `path` parametru.</span><span class="sxs-lookup"><span data-stu-id="44324-177">Creates a new `TextFieldParser` object to parse the file specified by the `path` parameter.</span></span>  
  
 <span data-ttu-id="44324-178">Jeśli `detectEncoding` parametr jest `True`, próbuje wykryć kodowanie, analizując pierwsze trzy bajty pliku lub strumienia tego konstruktora.</span><span class="sxs-lookup"><span data-stu-id="44324-178">If the `detectEncoding` parameter is `True`, this constructor attempts to detect the encoding by looking at the first three bytes of the file or stream.</span></span> <span data-ttu-id="44324-179">Automatycznie rozpoznaje UTF-8, little endian Unicode i big-endian Unicode tekst Jeśli plik rozpoczyna się od znaków odpowiedniej kolejności bajtów.</span><span class="sxs-lookup"><span data-stu-id="44324-179">It automatically recognizes UTF-8, little-endian Unicode, and big-endian Unicode text if the file starts with the appropriate byte-order marks.</span></span> <span data-ttu-id="44324-180">W przeciwnym razie kodowania określony przez `defaultEncoding` jest używany.</span><span class="sxs-lookup"><span data-stu-id="44324-180">Otherwise, the encoding specified by `defaultEncoding` is used.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="44324-181">Gdy zbiór znaków zostanie skompilowany z określonym ustawieniem kultury, po czym pobrany z użyciem innego ustawienia kultury, znaki mogą nie nadawać się do interpretacji i powodować zgłoszenie wyjątku.</span><span class="sxs-lookup"><span data-stu-id="44324-181">When you compile a set of characters with a particular cultural setting and retrieve those same characters with a different cultural setting, the characters might not be interpretable and could cause an exception to be thrown.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="44324-182"><paramref name="path" /> jest to pusty ciąg lub <paramref name="defaultEncoding" /> jest <see langword="Nothing" />.</span><span class="sxs-lookup"><span data-stu-id="44324-182"><paramref name="path" /> is an empty string or <paramref name="defaultEncoding" /> is <see langword="Nothing" />.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFieldParser(System.String)" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TextFieldParser (System.IO.Stream stream, System.Text.Encoding defaultEncoding, bool detectEncoding, bool leaveOpen);" />
      <MemberSignature Language="ILAsm" Value=".method public specialname rtspecialname instance void .ctor(class System.IO.Stream stream, class System.Text.Encoding defaultEncoding, bool detectEncoding, bool leaveOpen) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.IO.Stream,System.Text.Encoding,System.Boolean,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TextFieldParser(System::IO::Stream ^ stream, System::Text::Encoding ^ defaultEncoding, bool detectEncoding, bool leaveOpen);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="defaultEncoding" Type="System.Text.Encoding" />
        <Parameter Name="detectEncoding" Type="System.Boolean" />
        <Parameter Name="leaveOpen" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="stream">
          <span data-ttu-id="44324-183"><see cref="T:System.IO.Stream" />.</span><span class="sxs-lookup"><span data-stu-id="44324-183"><see cref="T:System.IO.Stream" />.</span></span> <span data-ttu-id="44324-184">Strumień, który będzie analizowany.</span><span class="sxs-lookup"><span data-stu-id="44324-184">The stream to be parsed.</span></span></param>
        <param name="defaultEncoding">
          <span data-ttu-id="44324-185"><see cref="T:System.Text.Encoding" />.</span><span class="sxs-lookup"><span data-stu-id="44324-185"><see cref="T:System.Text.Encoding" />.</span></span> <span data-ttu-id="44324-186">System kodowania znaków, który będzie używany w razie niemożności ustalenia kodowania na podstawie treści pliku.</span><span class="sxs-lookup"><span data-stu-id="44324-186">The character encoding to use if encoding is not determined from file.</span></span> <span data-ttu-id="44324-187">Wartość domyślna to <see cref="P:System.Text.Encoding.UTF8" />.</span><span class="sxs-lookup"><span data-stu-id="44324-187">Default is <see cref="P:System.Text.Encoding.UTF8" />.</span></span></param>
        <param name="detectEncoding">
          <span data-ttu-id="44324-188"><see langword="Boolean" />.</span><span class="sxs-lookup"><span data-stu-id="44324-188"><see langword="Boolean" />.</span></span> <span data-ttu-id="44324-189">Wskazuje, czy na początku pliku mają być szukane znaczniki kolejności bajtów.</span><span class="sxs-lookup"><span data-stu-id="44324-189">Indicates whether to look for byte order marks at the beginning of the file.</span></span> <span data-ttu-id="44324-190">Wartość domyślna to <see langword="True" />.</span><span class="sxs-lookup"><span data-stu-id="44324-190">Default is <see langword="True" />.</span></span></param>
        <param name="leaveOpen">
          <span data-ttu-id="44324-191"><see langword="Boolean" />.</span><span class="sxs-lookup"><span data-stu-id="44324-191"><see langword="Boolean" />.</span></span> <span data-ttu-id="44324-192">Wskazuje, czy należy pozostawić <c>strumienia</c> podczas otwierania <see langword="TextFieldParser" /> obiekt jest zamknięty.</span><span class="sxs-lookup"><span data-stu-id="44324-192">Indicates whether to leave <c>stream</c> open when the <see langword="TextFieldParser" /> object is closed.</span></span> <span data-ttu-id="44324-193">Wartość domyślna to <see langword="False" />.</span><span class="sxs-lookup"><span data-stu-id="44324-193">Default is <see langword="False" />.</span></span></param>
        <summary><span data-ttu-id="44324-194">Inicjuje nowe wystąpienie klasy <see langword="TextFieldParser" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="44324-194">Initializes a new instance of the <see langword="TextFieldParser" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="44324-195">Tworzy nowy `TextFieldParser` obiekt, aby przeanalizować pliku lub strumienia, który jest reprezentowana przez `stream` parametru.</span><span class="sxs-lookup"><span data-stu-id="44324-195">Creates a new `TextFieldParser` object to parse the file or stream that is represented by the `stream` parameter.</span></span>  
  
 <span data-ttu-id="44324-196">Jeśli `detectEncoding` parametr jest `True`, próbuje wykryć kodowanie, analizując pierwsze trzy bajty pliku lub strumienia tego konstruktora.</span><span class="sxs-lookup"><span data-stu-id="44324-196">If the `detectEncoding` parameter is `True`, this constructor attempts to detect the encoding by looking at the first three bytes of the file or stream.</span></span> <span data-ttu-id="44324-197">Automatycznie rozpoznaje UTF-8, little endian Unicode i big-endian Unicode tekst Jeśli plik rozpoczyna się od znaków odpowiedniej kolejności bajtów.</span><span class="sxs-lookup"><span data-stu-id="44324-197">It automatically recognizes UTF-8, little-endian Unicode, and big-endian Unicode text if the file starts with the appropriate byte-order marks.</span></span> <span data-ttu-id="44324-198">W przeciwnym razie kodowania określony przez `defaultEncoding` jest używany.</span><span class="sxs-lookup"><span data-stu-id="44324-198">Otherwise, the encoding specified by `defaultEncoding` is used.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="44324-199">Gdy zbiór znaków zostanie skompilowany z określonym ustawieniem kultury, po czym pobrany z użyciem innego ustawienia kultury, znaki mogą nie nadawać się do interpretacji i powodować zgłoszenie wyjątku.</span><span class="sxs-lookup"><span data-stu-id="44324-199">When you compile a set of characters with a particular cultural setting and retrieve those same characters with a different cultural setting, the characters might not be interpretable and could cause an exception to be thrown.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="44324-200"><paramref name="stream" /> lub <paramref name="defaultEncoding" /> jest <see langword="Nothing" />.</span><span class="sxs-lookup"><span data-stu-id="44324-200"><paramref name="stream" /> or <paramref name="defaultEncoding" /> is <see langword="Nothing" />.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="44324-201"><paramref name="stream" /> Nie można odczytać z.</span><span class="sxs-lookup"><span data-stu-id="44324-201"><paramref name="stream" /> cannot be read from.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFieldParser(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileIO.TextFieldParser.Close" />
      <MemberSignature Language="VB.NET" Value="Public Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Close();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="44324-202">Zamyka bieżące <see langword="TextFieldParser" /> obiektu.</span><span class="sxs-lookup"><span data-stu-id="44324-202">Closes the current <see langword="TextFieldParser" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="44324-203">W tym przykładzie powoduje zamknięcie `TextFieldParser.FileReader`.</span><span class="sxs-lookup"><span data-stu-id="44324-203">This example closes the `TextFieldParser.FileReader`.</span></span>  
  
 [!code-vb[VbVbalrTextFieldParser#14](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrTextFieldParser/VB/Class1.vb#14)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFieldParser(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="CommentTokens">
      <MemberSignature Language="C#" Value="public string[] CommentTokens { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] CommentTokens" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.FileIO.TextFieldParser.CommentTokens" />
      <MemberSignature Language="VB.NET" Value="Public Property CommentTokens As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::String ^&gt; ^ CommentTokens { cli::array &lt;System::String ^&gt; ^ get(); void set(cli::array &lt;System::String ^&gt; ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="44324-204">Definiuje tokeny komentarza.</span><span class="sxs-lookup"><span data-stu-id="44324-204">Defines comment tokens.</span></span> <span data-ttu-id="44324-205">Token komentarz jest ciągiem, który po umieszczeniu na początku wiersza, wskazuje, że wiersz komentarz i należy ją ignorować przez analizator.</span><span class="sxs-lookup"><span data-stu-id="44324-205">A comment token is a string that, when placed at the beginning of a line, indicates that the line is a comment and should be ignored by the parser.</span></span></summary>
        <value><span data-ttu-id="44324-206">Tablica ciągów zawierająca wszystkie komentarza tokeny dla <see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" /> obiektu.</span><span class="sxs-lookup"><span data-stu-id="44324-206">A string array that contains all of the comment tokens for the <see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" /> object.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="44324-207">Jest to zaawansowane elementu członkowskiego; niewidoczne w IntelliSense dopóki nie klikniesz **wszystkie** kartę.</span><span class="sxs-lookup"><span data-stu-id="44324-207">This is an advanced member; it does not show in IntelliSense unless you click the **All** tab.</span></span>  
  
 <span data-ttu-id="44324-208">Tokenów komentarzy o zerowej długości są ignorowane.</span><span class="sxs-lookup"><span data-stu-id="44324-208">Zero-length comment tokens are ignored.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="44324-209">W tym przykładzie określa, że dla `TextFieldParser`, `FileReader` wiersze rozpoczynające się od pojedynczego cudzysłowu ('), należy ją ignorować.</span><span class="sxs-lookup"><span data-stu-id="44324-209">This example specifies that for the `TextFieldParser`, `FileReader` lines beginning with a single quotation mark (') should be ignored.</span></span>  
  
 [!code-vb[VbVbalrTextFieldParser#5](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrTextFieldParser/VB/Class1.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="44324-210">Token komentarz zawiera biały znak.</span><span class="sxs-lookup"><span data-stu-id="44324-210">A comment token includes white space.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFieldParser(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="Delimiters">
      <MemberSignature Language="C#" Value="public string[] Delimiters { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] Delimiters" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.FileIO.TextFieldParser.Delimiters" />
      <MemberSignature Language="VB.NET" Value="Public Property Delimiters As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::String ^&gt; ^ Delimiters { cli::array &lt;System::String ^&gt; ^ get(); void set(cli::array &lt;System::String ^&gt; ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="44324-211">Definiuje ograniczniki pliku tekstowego.</span><span class="sxs-lookup"><span data-stu-id="44324-211">Defines the delimiters for a text file.</span></span></summary>
        <value><span data-ttu-id="44324-212">Tablica ciągów zawierająca wszystkie pola ograniczniki <see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" /> obiektu.</span><span class="sxs-lookup"><span data-stu-id="44324-212">A string array that contains all of the field delimiters for the <see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" /> object.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="44324-213">Ta właściwość ma znaczenie tylko wtedy, gdy <xref:Microsoft.VisualBasic.FileIO.TextFieldParser.TextFieldType%2A> właściwość jest ustawiona na `FieldType.Delimited`.</span><span class="sxs-lookup"><span data-stu-id="44324-213">This property is meaningful only if the <xref:Microsoft.VisualBasic.FileIO.TextFieldParser.TextFieldType%2A> property is set to `FieldType.Delimited`.</span></span>  
  
 <span data-ttu-id="44324-214">Definiowanie ograniczniki dla pliku tekstowego może być również wykonywane z <xref:Microsoft.VisualBasic.FileIO.TextFieldParser.SetDelimiters%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="44324-214">Defining the delimiters for a text file can also be accomplished with the <xref:Microsoft.VisualBasic.FileIO.TextFieldParser.SetDelimiters%2A> method.</span></span>  
  
 <span data-ttu-id="44324-215">W poniższej tabeli przedstawiono przykład zadań, obejmujących `Delimiters` właściwości.</span><span class="sxs-lookup"><span data-stu-id="44324-215">The following table lists an example of a task involving the `Delimiters` property.</span></span>  
  
|<span data-ttu-id="44324-216">Do</span><span class="sxs-lookup"><span data-stu-id="44324-216">To</span></span>|<span data-ttu-id="44324-217">Zobacz</span><span class="sxs-lookup"><span data-stu-id="44324-217">See</span></span>|  
|--------|---------|  
|<span data-ttu-id="44324-218">Odczyt z pliku tekstowego z separatorami</span><span class="sxs-lookup"><span data-stu-id="44324-218">Read from a delimited text file</span></span>|[<span data-ttu-id="44324-219">Instrukcje: odczyt z rozdzielonych przecinkami plików testowych</span><span class="sxs-lookup"><span data-stu-id="44324-219">How to: Read From Comma-Delimited Text Files</span></span>](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-comma-delimited-text-files.md)|  
  
   
  
## Examples  
 <span data-ttu-id="44324-220">W tym przykładzie określa, że ogranicznik dla `TextFieldParser` obiektu `FileReader`, to przecinek (,).</span><span class="sxs-lookup"><span data-stu-id="44324-220">This example specifies that the delimiter for the `TextFieldParser` object, `FileReader`, is a comma (,).</span></span>  
  
 [!code-vb[VbVbalrTextFieldParser#9](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrTextFieldParser/VB/Class1.vb#9)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="44324-221">Wartość ogranicznika jest ustawiony na znak nowego wiersza, ciągiem pustym lub <see langword="Nothing" />.</span><span class="sxs-lookup"><span data-stu-id="44324-221">A delimiter value is set to a newline character, an empty string, or <see langword="Nothing" />.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFieldParser(System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.FileIO.TextFieldParser.SetDelimiters(System.String[])" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="44324-222">Zwalnia zasoby używane przez <see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" /> obiektu.</span><span class="sxs-lookup"><span data-stu-id="44324-222">Releases resources used by the <see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" /> object.</span></span></summary>
        <altmember cref="M:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFieldParser(System.String)" />
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileIO.TextFieldParser.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose() = IDisposable::Dispose;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="44324-223">Zwalnia zasoby używane przez <see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" /> obiektu.</span><span class="sxs-lookup"><span data-stu-id="44324-223">Releases resources used by the <see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" /> object.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFieldParser(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familynewslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileIO.TextFieldParser.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing"><span data-ttu-id="44324-224">Boolean.</span><span class="sxs-lookup"><span data-stu-id="44324-224">Boolean.</span></span> <span data-ttu-id="44324-225"><see langword="True" /> zwalnia zasoby zarządzane i niezarządzane; <see langword="False" /> wersje tylko zasobów niezarządzanych.</span><span class="sxs-lookup"><span data-stu-id="44324-225"><see langword="True" /> releases both managed and unmanaged resources; <see langword="False" /> releases only unmanaged resources.</span></span></param>
        <summary><span data-ttu-id="44324-226">Zwalnia zasoby używane przez <see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" /> obiektu.</span><span class="sxs-lookup"><span data-stu-id="44324-226">Releases resources used by the <see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" /> object.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFieldParser(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="EndOfData">
      <MemberSignature Language="C#" Value="public bool EndOfData { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EndOfData" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.FileIO.TextFieldParser.EndOfData" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EndOfData As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EndOfData { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="44324-227">Zwraca <see langword="True" /> Jeśli nie ma żadnych niepustą, z systemem innym niż komentarz linii między bieżącą pozycją kursora i na końcu pliku.</span><span class="sxs-lookup"><span data-stu-id="44324-227">Returns <see langword="True" /> if there are no non-blank, non-comment lines between the current cursor position and the end of the file.</span></span></summary>
        <value>
          <span data-ttu-id="44324-228"><see langword="True" /> Jeśli nie ma żadnych więcej danych do odczytania. w przeciwnym razie <see langword="False" />.</span><span class="sxs-lookup"><span data-stu-id="44324-228"><see langword="True" /> if there is no more data to read; otherwise, <see langword="False" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="44324-229">Ta właściwość umożliwia podczas czytania z plików ustalić końca odczytywane dane.</span><span class="sxs-lookup"><span data-stu-id="44324-229">This property can be used when reading from files to determine the end of the data being read.</span></span>  
  
 <span data-ttu-id="44324-230">W poniższej tabeli przedstawiono przykłady dotyczące zadań `EndOfData` właściwości.</span><span class="sxs-lookup"><span data-stu-id="44324-230">The following table lists examples of tasks involving the `EndOfData` property.</span></span>  
  
|<span data-ttu-id="44324-231">Do</span><span class="sxs-lookup"><span data-stu-id="44324-231">To</span></span>|<span data-ttu-id="44324-232">Zobacz</span><span class="sxs-lookup"><span data-stu-id="44324-232">See</span></span>|  
|--------|---------|  
|<span data-ttu-id="44324-233">Odczytać zawartość pliku o wartościach rozdzielanych</span><span class="sxs-lookup"><span data-stu-id="44324-233">Read from a delimited file</span></span>|[<span data-ttu-id="44324-234">Instrukcje: odczyt z rozdzielonych przecinkami plików testowych</span><span class="sxs-lookup"><span data-stu-id="44324-234">How to: Read From Comma-Delimited Text Files</span></span>](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-comma-delimited-text-files.md)|  
|<span data-ttu-id="44324-235">Odczytać zawartość pliku z wartościami o stałej szerokości</span><span class="sxs-lookup"><span data-stu-id="44324-235">Read from a fixed-width file</span></span>|[<span data-ttu-id="44324-236">Instrukcje: odczyt z plików testowych o stałej szerokości</span><span class="sxs-lookup"><span data-stu-id="44324-236">How to: Read From Fixed-width Text Files</span></span>](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-fixed-width-text-files.md)|  
  
   
  
## Examples  
 <span data-ttu-id="44324-237">W tym przykładzie użyto `EndofData` właściwości pętli wszystkich pól w pliku o `TextFieldReader`, `FileReader`.</span><span class="sxs-lookup"><span data-stu-id="44324-237">This example uses the `EndofData` property to loop through all the fields in the file with the `TextFieldReader`, `FileReader`.</span></span>  
  
 [!code-vb[VbVbalrTextFieldParser#6](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrTextFieldParser/VB/Class1.vb#6)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFieldParser(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="ErrorLine">
      <MemberSignature Language="C#" Value="public string ErrorLine { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ErrorLine" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLine" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ErrorLine As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ErrorLine { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="44324-238">Zwraca wiersz, który spowodował najnowszej <see cref="T:Microsoft.VisualBasic.FileIO.MalformedLineException" /> wyjątku.</span><span class="sxs-lookup"><span data-stu-id="44324-238">Returns the line that caused the most recent <see cref="T:Microsoft.VisualBasic.FileIO.MalformedLineException" /> exception.</span></span></summary>
        <value><span data-ttu-id="44324-239">Wiersz, który spowodował najnowszej <see cref="T:Microsoft.VisualBasic.FileIO.MalformedLineException" /> wyjątku.</span><span class="sxs-lookup"><span data-stu-id="44324-239">The line that caused the most recent <see cref="T:Microsoft.VisualBasic.FileIO.MalformedLineException" /> exception.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="44324-240">Jeśli nie <xref:Microsoft.VisualBasic.FileIO.MalformedLineException> były zgłaszane wyjątki, jest zwracany ciąg pusty.</span><span class="sxs-lookup"><span data-stu-id="44324-240">If no <xref:Microsoft.VisualBasic.FileIO.MalformedLineException> exceptions have been thrown, an empty string is returned.</span></span>  
  
 <span data-ttu-id="44324-241"><xref:Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLineNumber%2A> Właściwość może być używana do wyświetlania numer wiersza, który spowodował wyjątek.</span><span class="sxs-lookup"><span data-stu-id="44324-241">The <xref:Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLineNumber%2A> property can be used to display the number of the line that caused the exception.</span></span>  
  
 <span data-ttu-id="44324-242">W poniższej tabeli przedstawiono przykłady dotyczące zadań `ErrorLine` właściwości.</span><span class="sxs-lookup"><span data-stu-id="44324-242">The following table lists examples of tasks involving the `ErrorLine` property.</span></span>  
  
|<span data-ttu-id="44324-243">Do</span><span class="sxs-lookup"><span data-stu-id="44324-243">To</span></span>|<span data-ttu-id="44324-244">Zobacz</span><span class="sxs-lookup"><span data-stu-id="44324-244">See</span></span>|  
|--------|---------|  
|<span data-ttu-id="44324-245">Odczytać zawartość pliku o wartościach rozdzielanych</span><span class="sxs-lookup"><span data-stu-id="44324-245">Read from a delimited file</span></span>|[<span data-ttu-id="44324-246">Instrukcje: odczyt z rozdzielonych przecinkami plików testowych</span><span class="sxs-lookup"><span data-stu-id="44324-246">How to: Read From Comma-Delimited Text Files</span></span>](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-comma-delimited-text-files.md)|  
|<span data-ttu-id="44324-247">Odczytać zawartość pliku z wartościami o stałej szerokości</span><span class="sxs-lookup"><span data-stu-id="44324-247">Read from a fixed-width file</span></span>|[<span data-ttu-id="44324-248">Instrukcje: odczyt z plików testowych o stałej szerokości</span><span class="sxs-lookup"><span data-stu-id="44324-248">How to: Read From Fixed-width Text Files</span></span>](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-fixed-width-text-files.md)|  
  
   
  
## Examples  
 <span data-ttu-id="44324-249">W tym przykładzie użyto `ErrorLine` właściwości, aby wyświetlić wiersz przyczyną bieżącego <xref:Microsoft.VisualBasic.FileIO.MalformedLineException> wyjątku.</span><span class="sxs-lookup"><span data-stu-id="44324-249">This example uses the `ErrorLine` property to display the line causing the current <xref:Microsoft.VisualBasic.FileIO.MalformedLineException> exception.</span></span>  
  
 [!code-vb[VbVbalrTextFieldParser#1](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrTextFieldParser/VB/Class1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFieldParser(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="ErrorLineNumber">
      <MemberSignature Language="C#" Value="public long ErrorLineNumber { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 ErrorLineNumber" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLineNumber" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ErrorLineNumber As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long ErrorLineNumber { long get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="44324-250">Zwraca numer wiersza, który spowodował najnowszej <see cref="T:Microsoft.VisualBasic.FileIO.MalformedLineException" /> wyjątku.</span><span class="sxs-lookup"><span data-stu-id="44324-250">Returns the number of the line that caused the most recent <see cref="T:Microsoft.VisualBasic.FileIO.MalformedLineException" /> exception.</span></span></summary>
        <value><span data-ttu-id="44324-251">Numer wiersza, który spowodował najnowszej <see cref="T:Microsoft.VisualBasic.FileIO.MalformedLineException" /> wyjątku.</span><span class="sxs-lookup"><span data-stu-id="44324-251">The number of the line that caused the most recent <see cref="T:Microsoft.VisualBasic.FileIO.MalformedLineException" /> exception.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="44324-252">Jeśli nie <xref:Microsoft.VisualBasic.FileIO.MalformedLineException> były zgłaszane wyjątki, jest zwracana wartość -1.</span><span class="sxs-lookup"><span data-stu-id="44324-252">If no <xref:Microsoft.VisualBasic.FileIO.MalformedLineException> exceptions have been thrown, -1 is returned.</span></span>  
  
 <span data-ttu-id="44324-253"><xref:Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLine%2A> Właściwość może być używana do wyświetlania numer wiersza, który spowodował wyjątek.</span><span class="sxs-lookup"><span data-stu-id="44324-253">The <xref:Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLine%2A> property can be used to display the number of the line that caused the exception.</span></span> <span data-ttu-id="44324-254">Puste wiersze i komentarze nie są ignorowane podczas określania numer wiersza.</span><span class="sxs-lookup"><span data-stu-id="44324-254">Blank lines and comments are not ignored when determining the line number.</span></span>  
  
 <span data-ttu-id="44324-255">W poniższej tabeli przedstawiono przykłady dotyczące zadań `ErrorLineNumber` właściwości.</span><span class="sxs-lookup"><span data-stu-id="44324-255">The following table lists examples of tasks involving the `ErrorLineNumber` property.</span></span>  
  
|<span data-ttu-id="44324-256">Do</span><span class="sxs-lookup"><span data-stu-id="44324-256">To</span></span>|<span data-ttu-id="44324-257">Zobacz</span><span class="sxs-lookup"><span data-stu-id="44324-257">See</span></span>|  
|--------|---------|  
|<span data-ttu-id="44324-258">Odczytać zawartość pliku o wartościach rozdzielanych</span><span class="sxs-lookup"><span data-stu-id="44324-258">Read from a delimited file</span></span>|[<span data-ttu-id="44324-259">Instrukcje: odczyt z rozdzielonych przecinkami plików testowych</span><span class="sxs-lookup"><span data-stu-id="44324-259">How to: Read From Comma-Delimited Text Files</span></span>](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-comma-delimited-text-files.md)|  
|<span data-ttu-id="44324-260">Odczytać zawartość pliku z wartościami o stałej szerokości</span><span class="sxs-lookup"><span data-stu-id="44324-260">Read from a fixed-width file</span></span>|[<span data-ttu-id="44324-261">Instrukcje: odczyt z plików testowych o stałej szerokości</span><span class="sxs-lookup"><span data-stu-id="44324-261">How to: Read From Fixed-width Text Files</span></span>](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-fixed-width-text-files.md)|  
  
   
  
## Examples  
 <span data-ttu-id="44324-262">W tym przykładzie użyto `ErrorLineNumber` właściwość, aby wyświetlić lokalizacji przyczyną bieżącego wiersza <xref:Microsoft.VisualBasic.FileIO.MalformedLineException> wyjątku.</span><span class="sxs-lookup"><span data-stu-id="44324-262">This example uses the `ErrorLineNumber` property to display the location of the line causing the current <xref:Microsoft.VisualBasic.FileIO.MalformedLineException> exception.</span></span>  
  
 [!code-vb[VbVbalrTextFieldParser#3](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrTextFieldParser/VB/Class1.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFieldParser(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="FieldWidths">
      <MemberSignature Language="C#" Value="public int[] FieldWidths { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32[] FieldWidths" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.FileIO.TextFieldParser.FieldWidths" />
      <MemberSignature Language="VB.NET" Value="Public Property FieldWidths As Integer()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;int&gt; ^ FieldWidths { cli::array &lt;int&gt; ^ get(); void set(cli::array &lt;int&gt; ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="44324-263">Określa szerokość każdej kolumny w pliku tekstowym podczas analizowania.</span><span class="sxs-lookup"><span data-stu-id="44324-263">Denotes the width of each column in the text file being parsed.</span></span></summary>
        <value><span data-ttu-id="44324-264">Tablica liczba całkowita, która zawiera szerokość każdej kolumny w pliku tekstowym, które są analizowane.</span><span class="sxs-lookup"><span data-stu-id="44324-264">An integer array that contains the width of each column in the text file that is being parsed.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="44324-265">Ta właściwość ma znaczenie tylko wtedy, gdy <xref:Microsoft.VisualBasic.FileIO.TextFieldParser.TextFieldType%2A> właściwość jest ustawiona na `FieldType.FixedWidth`.</span><span class="sxs-lookup"><span data-stu-id="44324-265">This property is meaningful only if the <xref:Microsoft.VisualBasic.FileIO.TextFieldParser.TextFieldType%2A> property is set to `FieldType.FixedWidth`.</span></span> <span data-ttu-id="44324-266">Jeśli ostatni wpis w tablicy jest mniejsza lub równa zero, pole zakłada się, że o zmiennej szerokości.</span><span class="sxs-lookup"><span data-stu-id="44324-266">If the last entry in the array is less than or equal to zero, the field is assumed to be of variable width.</span></span>  
  
 <span data-ttu-id="44324-267"><xref:Microsoft.VisualBasic.FileIO.TextFieldParser.SetFieldWidths%2A> Metody można również ustawić szerokości pól.</span><span class="sxs-lookup"><span data-stu-id="44324-267">The <xref:Microsoft.VisualBasic.FileIO.TextFieldParser.SetFieldWidths%2A> method can also be used to set field widths.</span></span>  
  
 <span data-ttu-id="44324-268">W poniższej tabeli przedstawiono przykłady dotyczące zadań `FieldWidths` właściwości.</span><span class="sxs-lookup"><span data-stu-id="44324-268">The following table lists examples of tasks involving the `FieldWidths` property.</span></span>  
  
|<span data-ttu-id="44324-269">Do</span><span class="sxs-lookup"><span data-stu-id="44324-269">To</span></span>|<span data-ttu-id="44324-270">Zobacz</span><span class="sxs-lookup"><span data-stu-id="44324-270">See</span></span>|  
|--------|---------|  
|<span data-ttu-id="44324-271">Odczyt z plików testowych o stałej szerokości</span><span class="sxs-lookup"><span data-stu-id="44324-271">Read from a fixed-width text file</span></span>|[<span data-ttu-id="44324-272">Instrukcje: odczyt z plików testowych o stałej szerokości</span><span class="sxs-lookup"><span data-stu-id="44324-272">How to: Read From Fixed-width Text Files</span></span>](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-fixed-width-text-files.md)|  
  
   
  
## Examples  
 <span data-ttu-id="44324-273">Ten przykład odczytuje plik `ParserText.txt`, określając szerokości; pierwszej kolumny jest 5 znaków, drugą jest wartość 10 trzeci jest 11 i jest czwartym o zmiennej szerokości</span><span class="sxs-lookup"><span data-stu-id="44324-273">This example reads the file `ParserText.txt`, specifying the widths; the first column is 5 characters wide, the second is 10, the third is 11, and the fourth is of variable width</span></span>  
  
 [!code-vb[VbVbalrTextFieldParser#16](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrTextFieldParser/VB/Class1.vb#16)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="44324-274">Wartość szerokości, w dowolnym miejscu innym niż ostatni wpis tablicy jest mniejsza lub równa zero.</span><span class="sxs-lookup"><span data-stu-id="44324-274">A width value in any location other than the last entry of the array is less than or equal to zero.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFieldParser(System.String)" />
        <altmember cref="T:Microsoft.VisualBasic.FileIO.FieldType" />
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~TextFieldParser ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileIO.TextFieldParser.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!TextFieldParser ()" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="44324-275">Umożliwia <see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" /> obiektu, próby zwolnienia zasobów i wykonywać inne operacje oczyszczania, przed jego jest odzyskana przez wyrzucanie elementów bezużytecznych.</span><span class="sxs-lookup"><span data-stu-id="44324-275">Allows the <see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" /> object to attempt to free resources and perform other cleanup operations before it is reclaimed by garbage collection.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFieldParser(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="HasFieldsEnclosedInQuotes">
      <MemberSignature Language="C#" Value="public bool HasFieldsEnclosedInQuotes { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasFieldsEnclosedInQuotes" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.FileIO.TextFieldParser.HasFieldsEnclosedInQuotes" />
      <MemberSignature Language="VB.NET" Value="Public Property HasFieldsEnclosedInQuotes As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasFieldsEnclosedInQuotes { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="44324-276">Określa, czy rozdzielonym pliku jest podczas analizowania pól są ujęte w cudzysłów.</span><span class="sxs-lookup"><span data-stu-id="44324-276">Denotes whether fields are enclosed in quotation marks when a delimited file is being parsed.</span></span></summary>
        <value>
          <span data-ttu-id="44324-277"><see langword="True" /> Jeśli pola są ujęte w cudzysłów; w przeciwnym razie <see langword="False" />.</span><span class="sxs-lookup"><span data-stu-id="44324-277"><see langword="True" /> if fields are enclosed in quotation marks; otherwise, <see langword="False" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="44324-278">Jest to zaawansowane elementu członkowskiego; niewidoczne w IntelliSense dopóki nie klikniesz **wszystkie** kartę.</span><span class="sxs-lookup"><span data-stu-id="44324-278">This is an advanced member; it does not show in IntelliSense unless you click the **All** tab.</span></span>  
  
 <span data-ttu-id="44324-279">Jeśli właściwość jest `True`, analizator przyjęto założenie, że pola są ujęte w cudzysłów ("") i może zawierać zakończenia wierszy.</span><span class="sxs-lookup"><span data-stu-id="44324-279">If the property is `True`, the parser assumes that fields are enclosed in quotation marks (" ") and may contain line endings.</span></span>  
  
 <span data-ttu-id="44324-280">Jeśli pole jest ujęta w cudzysłów, na przykład `abc, "field2a,field2b", field3` i ta właściwość jest `True`, następnie cały tekst ujęty w cudzysłów zostaną zwrócone, ponieważ jest; zwróci w tym przykładzie `abc|field2a,field2b|field3`.</span><span class="sxs-lookup"><span data-stu-id="44324-280">If a field is enclosed in quotation marks, for example, `abc, "field2a,field2b", field3` and this property is `True`, then all text enclosed in quotation marks will be returned as is; this example would return `abc|field2a,field2b|field3`.</span></span> <span data-ttu-id="44324-281">Ustawienie tej właściwości na `False` spowodowałoby, w tym przykładzie zwracany `abc|"field2a|field2b"|field3`.</span><span class="sxs-lookup"><span data-stu-id="44324-281">Setting this property to `False` would make this example return `abc|"field2a|field2b"|field3`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="44324-282">W tym przykładzie `HasFieldsEnclosedInQuotes` właściwości `True` dla `myReader`.</span><span class="sxs-lookup"><span data-stu-id="44324-282">This example sets the `HasFieldsEnclosedInQuotes` property to `True` for `myReader`.</span></span>  
  
 [!code-vb[VbVbalrTextFieldParser#18](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrTextFieldParser/VB/Class1.vb#18)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFieldParser(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="LineNumber">
      <MemberSignature Language="C#" Value="public long LineNumber { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 LineNumber" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.FileIO.TextFieldParser.LineNumber" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LineNumber As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long LineNumber { long get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="44324-283">Zwraca bieżący numer wiersza, lub zwraca wartość -1, jeśli żadne więcej znaki nie są dostępne w strumieniu.</span><span class="sxs-lookup"><span data-stu-id="44324-283">Returns the current line number, or returns -1 if no more characters are available in the stream.</span></span></summary>
        <value><span data-ttu-id="44324-284">Numer bieżącego wiersza.</span><span class="sxs-lookup"><span data-stu-id="44324-284">The current line number.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="44324-285">Jest to zaawansowane elementu członkowskiego; niewidoczne w IntelliSense dopóki nie klikniesz **wszystkie** kartę.</span><span class="sxs-lookup"><span data-stu-id="44324-285">This is an advanced member; it does not show in IntelliSense unless you click the **All** tab.</span></span>  
  
 <span data-ttu-id="44324-286">Puste wiersze i komentarze nie są ignorowane podczas określania numer wiersza.</span><span class="sxs-lookup"><span data-stu-id="44324-286">Blank lines and comments are not ignored when determining the line number.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="44324-287">W tym przykładzie szuka nazwy "Nowak" w pliku tekstowym i raporty wiersze, jakie występuje on na.</span><span class="sxs-lookup"><span data-stu-id="44324-287">This example searches for the name "Jones" in the text file and reports what line(s) it occurs on.</span></span>  
  
 [!code-vb[VbVbalrTextFieldParser#11](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrTextFieldParser/VB/Class1.vb#11)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFieldParser(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="PeekChars">
      <MemberSignature Language="C#" Value="public string PeekChars (int numberOfChars);" />
      <MemberSignature Language="ILAsm" Value=".method public instance string PeekChars(int32 numberOfChars) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileIO.TextFieldParser.PeekChars(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function PeekChars (numberOfChars As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ PeekChars(int numberOfChars);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="numberOfChars" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="numberOfChars">
          <span data-ttu-id="44324-288"><see langword="Int32" />.</span><span class="sxs-lookup"><span data-stu-id="44324-288"><see langword="Int32" />.</span></span> <span data-ttu-id="44324-289">Liczba znaków do odczytania.</span><span class="sxs-lookup"><span data-stu-id="44324-289">Number of characters to read.</span></span> <span data-ttu-id="44324-290">Wymagany.</span><span class="sxs-lookup"><span data-stu-id="44324-290">Required.</span></span></param>
        <summary><span data-ttu-id="44324-291">Odczytuje określoną liczbę znaków, bez przesuwania kursora.</span><span class="sxs-lookup"><span data-stu-id="44324-291">Reads the specified number of characters without advancing the cursor.</span></span></summary>
        <returns><span data-ttu-id="44324-292">Ciąg zawierający określoną liczbę znaków do odczytu.</span><span class="sxs-lookup"><span data-stu-id="44324-292">A string that contains the specified number of characters read.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="44324-293">`numberOfChars` Wartość musi być mniejsza niż całkowita liczba znaków w wierszu.</span><span class="sxs-lookup"><span data-stu-id="44324-293">The `numberOfChars` value must be less than the total number of characters in the line.</span></span> <span data-ttu-id="44324-294">Jeśli nie, długość ciągu zwróconego przez `PeekChars` zostanie skrócona do długość wiersza.</span><span class="sxs-lookup"><span data-stu-id="44324-294">If it is not, the string returned by `PeekChars` will be truncated to the length of the line.</span></span>  
  
 <span data-ttu-id="44324-295">Puste wiersze są ignorowane.</span><span class="sxs-lookup"><span data-stu-id="44324-295">Blank lines are ignored.</span></span>  
  
 <span data-ttu-id="44324-296">Znaki końca wiersza nie są zwracane.</span><span class="sxs-lookup"><span data-stu-id="44324-296">End-of-line characters are not returned.</span></span>  
  
 <span data-ttu-id="44324-297">`PeekChars` Metoda przeprowadza analizy nie; znaku końca wiersza w rozdzielonych pól jest interpretowana jako rzeczywisty końca wiersza.</span><span class="sxs-lookup"><span data-stu-id="44324-297">The `PeekChars` method performs no parsing; an end-of- line character within a delimited field is interpreted as the actual end of the line.</span></span>  
  
 <span data-ttu-id="44324-298">W poniższej tabeli przedstawiono przykłady dotyczące zadań `PeekChars` metody.</span><span class="sxs-lookup"><span data-stu-id="44324-298">The following table lists examples of tasks involving the `PeekChars` method.</span></span>  
  
|<span data-ttu-id="44324-299">Do</span><span class="sxs-lookup"><span data-stu-id="44324-299">To</span></span>|<span data-ttu-id="44324-300">Zobacz</span><span class="sxs-lookup"><span data-stu-id="44324-300">See</span></span>|  
|--------|---------|  
|<span data-ttu-id="44324-301">Przed jego analizowanie określić format pola</span><span class="sxs-lookup"><span data-stu-id="44324-301">Determine the format of a field before parsing it</span></span>|[<span data-ttu-id="44324-302">Instrukcje: odczyt z plików tekstowych w wielu formatach</span><span class="sxs-lookup"><span data-stu-id="44324-302">How to: Read From Text Files with Multiple Formats</span></span>](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-text-files-with-multiple-formats.md)|  
  
   
  
## Examples  
 <span data-ttu-id="44324-303">W tym przykładzie użyto `PeekChars` można znaleźć końca danych i Zatrzymaj podczas analizowania pliku w tym momencie.</span><span class="sxs-lookup"><span data-stu-id="44324-303">This example uses `PeekChars` to find the end of the data and stop parsing the file at that point.</span></span>  
  
 [!code-vb[VbVbalrTextFieldParser#8](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrTextFieldParser/VB/Class1.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="44324-304"><paramref name="numberOfChars" /> jest mniejsza niż 0.</span><span class="sxs-lookup"><span data-stu-id="44324-304"><paramref name="numberOfChars" /> is less than 0.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFieldParser(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="ReadFields">
      <MemberSignature Language="C#" Value="public string[] ReadFields ();" />
      <MemberSignature Language="ILAsm" Value=".method public instance string[] ReadFields() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileIO.TextFieldParser.ReadFields" />
      <MemberSignature Language="VB.NET" Value="Public Function ReadFields () As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::String ^&gt; ^ ReadFields();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="44324-305">Odczytuje wszystkie pola w bieżącym wierszu zwraca je w postaci tablicy ciągów i przesuwa kursor do następnego wiersza zawierającego dane.</span><span class="sxs-lookup"><span data-stu-id="44324-305">Reads all fields on the current line, returns them as an array of strings, and advances the cursor to the next line containing data.</span></span></summary>
        <returns><span data-ttu-id="44324-306">Tablica ciągów zawierająca wartości pola dla bieżącego wiersza.</span><span class="sxs-lookup"><span data-stu-id="44324-306">An array of strings that contains field values for the current line.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="44324-307">Aby umożliwić użytkownikom analizy plików tekstowych w wielu formatach `ReadFields` metoda sprawdza, czy wartości `TextFieldType`, `Delimiters`, i `FieldWidths`, jeśli są one określone, zawsze jest ona wywoływana.</span><span class="sxs-lookup"><span data-stu-id="44324-307">In order to allow users to parse text files in multiple formats, the `ReadFields` method examines the values of `TextFieldType`, `Delimiters`, and `FieldWidths`, if they are specified, each time it is called.</span></span> <span data-ttu-id="44324-308">Użytkownicy muszą prawidłowo skonfigurować `TextFieldType` i `FieldWidths` lub `Delimiters` właściwości, zależnie od potrzeb.</span><span class="sxs-lookup"><span data-stu-id="44324-308">Users need to correctly configure the `TextFieldType` and `FieldWidths` or `Delimiters` properties, as appropriate.</span></span> <span data-ttu-id="44324-309">Jeśli `TextFieldType` ustawiono `Delimited`, i `Delimiters` nie jest ustawiona, lub jeśli `TextFieldType` ustawiono `FixedWidth` i `FieldWidths`, jest zgłaszany wyjątek.</span><span class="sxs-lookup"><span data-stu-id="44324-309">If `TextFieldType` is set to `Delimited`, and `Delimiters` is not set, or if `TextFieldType` is set to `FixedWidth` and `FieldWidths`, an exception is thrown.</span></span>  
  
 <span data-ttu-id="44324-310">Jeśli `ReadFields` napotka puste wiersze, są one pominięte, a następnego wiersza niepustych jest zwracany.</span><span class="sxs-lookup"><span data-stu-id="44324-310">If `ReadFields` encounters blank lines, they are skipped and the next non-blank line is returned.</span></span>  
  
 <span data-ttu-id="44324-311">Jeśli `ReadFields` metody nie można przeanalizować bieżącego wiersza, zgłasza wyjątek, a nie przenosi do następnego wiersza.</span><span class="sxs-lookup"><span data-stu-id="44324-311">If the `ReadFields` method cannot parse the current line, it raises an exception and does not move to the next line.</span></span> <span data-ttu-id="44324-312">Dzięki temu aplikacja spróbować ponownie przeanalizować wiersza.</span><span class="sxs-lookup"><span data-stu-id="44324-312">This enables your application to attempt to parse the line again.</span></span>  
  
 <span data-ttu-id="44324-313">W poniższej tabeli przedstawiono przykłady dotyczące zadań `ReadFields` metody.</span><span class="sxs-lookup"><span data-stu-id="44324-313">The following table lists examples of tasks involving the `ReadFields` method.</span></span>  
  
|<span data-ttu-id="44324-314">Do</span><span class="sxs-lookup"><span data-stu-id="44324-314">To</span></span>|<span data-ttu-id="44324-315">Zobacz</span><span class="sxs-lookup"><span data-stu-id="44324-315">See</span></span>|  
|--------|---------|  
|<span data-ttu-id="44324-316">Odczytać zawartość pliku o wartościach rozdzielanych</span><span class="sxs-lookup"><span data-stu-id="44324-316">Read from a delimited file</span></span>|[<span data-ttu-id="44324-317">Instrukcje: odczyt z rozdzielonych przecinkami plików testowych</span><span class="sxs-lookup"><span data-stu-id="44324-317">How to: Read From Comma-Delimited Text Files</span></span>](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-comma-delimited-text-files.md)|  
|<span data-ttu-id="44324-318">Odczytać zawartość pliku z wartościami o stałej szerokości</span><span class="sxs-lookup"><span data-stu-id="44324-318">Read from a fixed-width file</span></span>|[<span data-ttu-id="44324-319">Instrukcje: odczyt z plików testowych o stałej szerokości</span><span class="sxs-lookup"><span data-stu-id="44324-319">How to: Read From Fixed-width Text Files</span></span>](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-fixed-width-text-files.md)|  
  
   
  
## Examples  
 <span data-ttu-id="44324-320">W tym przykładzie użyto `ReadFields` metody można odczytać z pliku rozdzielanego przecinkami `ParserText.txt`.</span><span class="sxs-lookup"><span data-stu-id="44324-320">This example uses the `ReadFields` method to read from the comma-delimited file `ParserText.txt`.</span></span> <span data-ttu-id="44324-321">W przykładzie polecenie zapisuje pola `Testfile.txt`.</span><span class="sxs-lookup"><span data-stu-id="44324-321">The example writes the fields to `Testfile.txt`.</span></span>  
  
 [!code-vb[VbVbalrTextFieldParser#2](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrTextFieldParser/VB/Class1.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:Microsoft.VisualBasic.FileIO.MalformedLineException"><span data-ttu-id="44324-322">Nie można przeanalizować pola przy użyciu określonego formatu.</span><span class="sxs-lookup"><span data-stu-id="44324-322">A field cannot be parsed by using the specified format.</span></span></exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="44324-323">Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</span><span class="sxs-lookup"><span data-stu-id="44324-323">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</span></span></permission>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="44324-324">Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" />.</span><span class="sxs-lookup"><span data-stu-id="44324-324">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" />.</span></span></permission>
        <altmember cref="M:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFieldParser(System.String)" />
        <altmember cref="P:Microsoft.VisualBasic.FileIO.TextFieldParser.TextFieldType" />
        <altmember cref="P:Microsoft.VisualBasic.FileIO.TextFieldParser.FieldWidths" />
        <altmember cref="P:Microsoft.VisualBasic.FileIO.TextFieldParser.Delimiters" />
        <altmember cref="M:Microsoft.VisualBasic.FileIO.TextFieldParser.ReadLine" />
      </Docs>
    </Member>
    <Member MemberName="ReadLine">
      <MemberSignature Language="C#" Value="public string ReadLine ();" />
      <MemberSignature Language="ILAsm" Value=".method public instance string ReadLine() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileIO.TextFieldParser.ReadLine" />
      <MemberSignature Language="VB.NET" Value="Public Function ReadLine () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ReadLine();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="44324-325">Zwraca bieżący wiersz w postaci ciągu i przesuwa kursor do następnego wiersza.</span><span class="sxs-lookup"><span data-stu-id="44324-325">Returns the current line as a string and advances the cursor to the next line.</span></span></summary>
        <returns><span data-ttu-id="44324-326">Bieżący wiersz z pliku lub strumienia.</span><span class="sxs-lookup"><span data-stu-id="44324-326">The current line from the file or stream.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="44324-327">`ReadLine` Metoda przeprowadza analizy nie; znaku końca wiersza w rozdzielonych pól jest interpretowana jako rzeczywisty końca wiersza.</span><span class="sxs-lookup"><span data-stu-id="44324-327">The `ReadLine` method performs no parsing; an end-of-line character within a delimited field is interpreted as the actual end of the line.</span></span>  
  
 <span data-ttu-id="44324-328">`Nothing` jest zwracany, jeśli zostanie osiągnięty koniec pliku.</span><span class="sxs-lookup"><span data-stu-id="44324-328">`Nothing` is returned if the end of the file is reached.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="44324-329">Ten przykład odczytuje za pośrednictwem pliku `ParserText.txt` i zapisuje go do `Testfile.txt`.</span><span class="sxs-lookup"><span data-stu-id="44324-329">This example reads through the file `ParserText.txt` and writes it to `Testfile.txt`.</span></span>  
  
 [!code-vb[VbVbalrTextFieldParser#15](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrTextFieldParser/VB/Class1.vb#15)]  
  
 <span data-ttu-id="44324-330">Jeśli `Testfile.txt` nie istnieje, jest tworzony przez `WriteAllText` metody.</span><span class="sxs-lookup"><span data-stu-id="44324-330">If `Testfile.txt` does not exist, it is created by the `WriteAllText` method.</span></span>  
  
 <span data-ttu-id="44324-331">W tym przykładzie zapisuje pola jako pojedynczy ciąg; do każdej linii wyświetlane w osobnym wierszu w pliku docelowym `VbCrLf` powinna zostać dołączona znak na końcu każdej linii.</span><span class="sxs-lookup"><span data-stu-id="44324-331">This example writes the fields as a single string; to have each line display on its own line in the destination file, a `VbCrLf` character should be appended at the end of each line.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFieldParser(System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.FileIO.TextFieldParser.ReadFields" />
        <altmember cref="M:Microsoft.VisualBasic.FileIO.TextFieldParser.ReadToEnd" />
      </Docs>
    </Member>
    <Member MemberName="ReadToEnd">
      <MemberSignature Language="C#" Value="public string ReadToEnd ();" />
      <MemberSignature Language="ILAsm" Value=".method public instance string ReadToEnd() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileIO.TextFieldParser.ReadToEnd" />
      <MemberSignature Language="VB.NET" Value="Public Function ReadToEnd () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ReadToEnd();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="44324-332">Odczytuje pozostałej części pliku tekstowego i zwraca go jako ciąg.</span><span class="sxs-lookup"><span data-stu-id="44324-332">Reads the remainder of the text file and returns it as a string.</span></span></summary>
        <returns><span data-ttu-id="44324-333">Pozostały tekst z pliku lub strumienia.</span><span class="sxs-lookup"><span data-stu-id="44324-333">The remaining text from the file or stream.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="44324-334">Jest to zaawansowane elementu członkowskiego; niewidoczne w IntelliSense dopóki nie klikniesz **wszystkie** kartę.</span><span class="sxs-lookup"><span data-stu-id="44324-334">This is an advanced member; it does not show in IntelliSense unless you click the **All** tab.</span></span>  
  
 <span data-ttu-id="44324-335">Jeśli nie ma nic więcej do odczytu, ponieważ osiągnięto koniec pliku, `Nothing` jest zwracany.</span><span class="sxs-lookup"><span data-stu-id="44324-335">If there is nothing more to read because the end of the file has been reached, `Nothing` is returned.</span></span>  
  
 <span data-ttu-id="44324-336">`ReadToEnd` Metody pomija puste wiersze i komentarze.</span><span class="sxs-lookup"><span data-stu-id="44324-336">The `ReadToEnd` method does not ignore blank lines and comments.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="44324-337">W tym przykładzie użyto `ReadToEnd` metody odczytać całego pliku `ParserText.txt` i zapisać go do pliku `Testfile.txt`.</span><span class="sxs-lookup"><span data-stu-id="44324-337">This example uses the `ReadToEnd` method to read the entire file `ParserText.txt` and write it to the file `Testfile.txt`.</span></span>  
  
 [!code-vb[VbVbalrTextFieldParser#10](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrTextFieldParser/VB/Class1.vb#10)]  
  
 <span data-ttu-id="44324-338">Jeśli `Testfile.txt` nie istnieje, jest tworzony przez `WriteAllText` metody.</span><span class="sxs-lookup"><span data-stu-id="44324-338">If `Testfile.txt` does not exist, it is created by the `WriteAllText` method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFieldParser(System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.FileIO.TextFieldParser.ReadFields" />
        <altmember cref="M:Microsoft.VisualBasic.FileIO.TextFieldParser.ReadLine" />
      </Docs>
    </Member>
    <Member MemberName="SetDelimiters">
      <MemberSignature Language="C#" Value="public void SetDelimiters (params string[] delimiters);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void SetDelimiters(string[] delimiters) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileIO.TextFieldParser.SetDelimiters(System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetDelimiters (ParamArray delimiters As String())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetDelimiters(... cli::array &lt;System::String ^&gt; ^ delimiters);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="delimiters" Type="System.String[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="delimiters"><span data-ttu-id="44324-339">Tablica typu <see langword="String" />.</span><span class="sxs-lookup"><span data-stu-id="44324-339">Array of type <see langword="String" />.</span></span></param>
        <summary><span data-ttu-id="44324-340">Ustawia ograniczniki dla czytnika danych do określonych wartości i ustawia typ pola <see langword="Delimited" />.</span><span class="sxs-lookup"><span data-stu-id="44324-340">Sets the delimiters for the reader to the specified values, and sets the field type to <see langword="Delimited" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="44324-341">Istniejącą zawartość elementu `Delimiters` właściwości są usuwane, gdy ta metoda jest ustawiona.</span><span class="sxs-lookup"><span data-stu-id="44324-341">The existing contents of the `Delimiters` property are cleared when this method is set.</span></span>  
  
 <span data-ttu-id="44324-342">Ta metoda umożliwia ustawienie ograniczników bez tworzenia tablicy.</span><span class="sxs-lookup"><span data-stu-id="44324-342">This method provides a way to set delimiters without creating an array.</span></span>  
  
 <span data-ttu-id="44324-343">W poniższej tabeli przedstawiono przykład zadań, obejmujących `SetDelimiters` metody.</span><span class="sxs-lookup"><span data-stu-id="44324-343">The following table lists an example of a task involving the `SetDelimiters` method.</span></span>  
  
|<span data-ttu-id="44324-344">Do</span><span class="sxs-lookup"><span data-stu-id="44324-344">To</span></span>|<span data-ttu-id="44324-345">Zobacz</span><span class="sxs-lookup"><span data-stu-id="44324-345">See</span></span>|  
|--------|---------|  
|<span data-ttu-id="44324-346">Przeanalizować plik tekstowy</span><span class="sxs-lookup"><span data-stu-id="44324-346">Parse a text file</span></span>|[<span data-ttu-id="44324-347">Analizowanie plików tekstowych za pomocą obiektu TextFieldParser</span><span class="sxs-lookup"><span data-stu-id="44324-347">Parsing Text Files with the TextFieldParser Object</span></span>](~/docs/visual-basic/developing-apps/programming/drives-directories-files/parsing-text-files-with-the-textfieldparser-object.md)|  
  
   
  
## Examples  
 <span data-ttu-id="44324-348">W tym przykładzie otwiera analizator pole tekstowe i definiuje ogranicznik jako `vbTab`.</span><span class="sxs-lookup"><span data-stu-id="44324-348">This example opens a text field parser and defines the delimiter as `vbTab`.</span></span>  
  
 [!code-vb[VbVbalrTextFieldParser#4](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrTextFieldParser/VB/Class1.vb#4)]  
  
 <span data-ttu-id="44324-349">Zamień na ścieżkę `C:\logs\test.log` ze ścieżką i nazwą pliku chcesz przeanalizować.</span><span class="sxs-lookup"><span data-stu-id="44324-349">Replace the path `C:\logs\test.log` with the path and name of the file you wish to parse.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="44324-350">Ogranicznik jest o zerowej długości.</span><span class="sxs-lookup"><span data-stu-id="44324-350">A delimiter is zero-length.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFieldParser(System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.FileIO.TextFieldParser.SetFieldWidths(System.Int32[])" />
      </Docs>
    </Member>
    <Member MemberName="SetFieldWidths">
      <MemberSignature Language="C#" Value="public void SetFieldWidths (params int[] fieldWidths);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void SetFieldWidths(int32[] fieldWidths) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileIO.TextFieldParser.SetFieldWidths(System.Int32[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetFieldWidths (ParamArray fieldWidths As Integer())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetFieldWidths(... cli::array &lt;int&gt; ^ fieldWidths);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fieldWidths" Type="System.Int32[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="fieldWidths"><span data-ttu-id="44324-351">Tablica <see langword="Integer" />.</span><span class="sxs-lookup"><span data-stu-id="44324-351">Array of <see langword="Integer" />.</span></span></param>
        <summary><span data-ttu-id="44324-352">Ustawia ograniczniki dla czytelnika określonymi wartościami.</span><span class="sxs-lookup"><span data-stu-id="44324-352">Sets the delimiters for the reader to the specified values.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="44324-353">Istniejącą zawartość elementu `Delimiters` właściwości są czyszczone po jej ustawieniu.</span><span class="sxs-lookup"><span data-stu-id="44324-353">The existing contents of the `Delimiters` property are cleared when this is set.</span></span>  
  
 <span data-ttu-id="44324-354">Ta metoda umożliwia ustawienie ograniczników bez tworzenia tablicy.</span><span class="sxs-lookup"><span data-stu-id="44324-354">This method provides a way to set delimiters without creating an array.</span></span>  
  
 <span data-ttu-id="44324-355">W poniższej tabeli przedstawiono przykładowe zadania dotyczące `SetFieldWidths` metody.</span><span class="sxs-lookup"><span data-stu-id="44324-355">The following table lists example of tasks involving the `SetFieldWidths` method.</span></span>  
  
|<span data-ttu-id="44324-356">Do</span><span class="sxs-lookup"><span data-stu-id="44324-356">To</span></span>|<span data-ttu-id="44324-357">Zobacz</span><span class="sxs-lookup"><span data-stu-id="44324-357">See</span></span>|  
|--------|---------|  
|<span data-ttu-id="44324-358">Przeanalizować plik tekstowy.</span><span class="sxs-lookup"><span data-stu-id="44324-358">Parse a text file.</span></span>|[<span data-ttu-id="44324-359">Analizowanie plików tekstowych za pomocą obiektu TextFieldParser</span><span class="sxs-lookup"><span data-stu-id="44324-359">Parsing Text Files with the TextFieldParser Object</span></span>](~/docs/visual-basic/developing-apps/programming/drives-directories-files/parsing-text-files-with-the-textfieldparser-object.md)|  
  
   
  
## Examples  
 <span data-ttu-id="44324-360">W tym przykładzie otwiera analizator pola tekstowego i definiuje szerokość pola jako `5`.</span><span class="sxs-lookup"><span data-stu-id="44324-360">This example opens a text-field parser and defines the field width as `5`.</span></span>  
  
 [!code-vb[VbVbalrTextFieldParser#12](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrTextFieldParser/VB/Class1.vb#12)]  
  
 <span data-ttu-id="44324-361">Zamień na ścieżkę `C:\logs\test.log` ze ścieżką i nazwą pliku chcesz przeanalizować.</span><span class="sxs-lookup"><span data-stu-id="44324-361">Replace the path `C:\logs\test.log` with the path and name of the file you wish to parse.</span></span>  
  
 <span data-ttu-id="44324-362">Poniższy przykład otwiera analizator pola tekstowego i definiuje szerokości pól jako `5`, `10`, a zmienna.</span><span class="sxs-lookup"><span data-stu-id="44324-362">The following example opens a text-field parser and defines the field widths as `5`, `10`, and variable.</span></span>  
  
 [!code-vb[VbVbalrTextFieldParser#13](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrTextFieldParser/VB/Class1.vb#13)]  
  
 <span data-ttu-id="44324-363">Zamień na ścieżkę `C:\logs\test.log` ze ścieżką i nazwą pliku chcesz przeanalizować.</span><span class="sxs-lookup"><span data-stu-id="44324-363">Replace the path `C:\logs\test.log` with the path and name of the file you wish to parse.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFieldParser(System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.FileIO.TextFieldParser.SetDelimiters(System.String[])" />
      </Docs>
    </Member>
    <Member MemberName="TextFieldType">
      <MemberSignature Language="C#" Value="public Microsoft.VisualBasic.FileIO.FieldType TextFieldType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.VisualBasic.FileIO.FieldType TextFieldType" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.FileIO.TextFieldParser.TextFieldType" />
      <MemberSignature Language="VB.NET" Value="Public Property TextFieldType As FieldType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::VisualBasic::FileIO::FieldType TextFieldType { Microsoft::VisualBasic::FileIO::FieldType get(); void set(Microsoft::VisualBasic::FileIO::FieldType value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.FileIO.FieldType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="44324-364">Wskazuje, czy pliku do przeanalizowania rozdzielanego lub o stałej szerokości.</span><span class="sxs-lookup"><span data-stu-id="44324-364">Indicates whether the file to be parsed is delimited or fixed-width.</span></span></summary>
        <value><span data-ttu-id="44324-365">A <see cref="P:Microsoft.VisualBasic.FileIO.TextFieldParser.TextFieldType" /> wartość wskazującą, czy pliku do przeanalizowania rozdzielanego lub o stałej szerokości.</span><span class="sxs-lookup"><span data-stu-id="44324-365">A <see cref="P:Microsoft.VisualBasic.FileIO.TextFieldParser.TextFieldType" /> value that indicates whether the file to be parsed is delimited or fixed-width.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="44324-366">Wartość domyślna tej właściwości jest rozdzielana.</span><span class="sxs-lookup"><span data-stu-id="44324-366">The default value of this property is delimited.</span></span>  
  
 <span data-ttu-id="44324-367">W poniższej tabeli przedstawiono przykłady dotyczące zadań `TextFieldType` właściwości.</span><span class="sxs-lookup"><span data-stu-id="44324-367">The following table lists examples of tasks involving the `TextFieldType` property.</span></span>  
  
|<span data-ttu-id="44324-368">Do</span><span class="sxs-lookup"><span data-stu-id="44324-368">To</span></span>|<span data-ttu-id="44324-369">Zobacz</span><span class="sxs-lookup"><span data-stu-id="44324-369">See</span></span>|  
|--------|---------|  
|<span data-ttu-id="44324-370">Odczyt z pliku tekstowego z separatorami</span><span class="sxs-lookup"><span data-stu-id="44324-370">Read from a delimited text file</span></span>|[<span data-ttu-id="44324-371">Instrukcje: odczyt z rozdzielonych przecinkami plików testowych</span><span class="sxs-lookup"><span data-stu-id="44324-371">How to: Read From Comma-Delimited Text Files</span></span>](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-comma-delimited-text-files.md)|  
|<span data-ttu-id="44324-372">Odczyt z plików testowych o stałej szerokości</span><span class="sxs-lookup"><span data-stu-id="44324-372">Read from a fixed-width text file</span></span>|[<span data-ttu-id="44324-373">Instrukcje: odczyt z plików testowych o stałej szerokości</span><span class="sxs-lookup"><span data-stu-id="44324-373">How to: Read From Fixed-width Text Files</span></span>](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-fixed-width-text-files.md)|  
|<span data-ttu-id="44324-374">Odczyt z pliku tekstowego w wielu formatach</span><span class="sxs-lookup"><span data-stu-id="44324-374">Read from a text file with multiple formats</span></span>|[<span data-ttu-id="44324-375">Instrukcje: odczyt z plików tekstowych w wielu formatach</span><span class="sxs-lookup"><span data-stu-id="44324-375">How to: Read From Text Files with Multiple Formats</span></span>](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-text-files-with-multiple-formats.md)|  
  
   
  
## Examples  
 <span data-ttu-id="44324-376">Ten przykład tworzy `TextFieldParser`, `FileReader`i określa go przecinkami.</span><span class="sxs-lookup"><span data-stu-id="44324-376">This example creates a `TextFieldParser`, `FileReader`, and specifies that it is delimited.</span></span>  
  
 [!code-vb[VbVbalrTextFieldParser#19](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrTextFieldParser/VB/Class1.vb#19)]  
  
 <span data-ttu-id="44324-377">Ten przykład tworzy `TextFieldParser`, `FileReader`i określa, że jest ona stałej szerokości.</span><span class="sxs-lookup"><span data-stu-id="44324-377">This example creates a `TextFieldParser`, `FileReader`, and specifies that it is fixed-width.</span></span>  
  
 [!code-vb[VbVbalrTextFieldParser#20](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrTextFieldParser/VB/Class1.vb#20)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFieldParser(System.String)" />
        <altmember cref="T:Microsoft.VisualBasic.FileIO.FieldType" />
      </Docs>
    </Member>
    <Member MemberName="TrimWhiteSpace">
      <MemberSignature Language="C#" Value="public bool TrimWhiteSpace { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool TrimWhiteSpace" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.FileIO.TextFieldParser.TrimWhiteSpace" />
      <MemberSignature Language="VB.NET" Value="Public Property TrimWhiteSpace As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool TrimWhiteSpace { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="44324-378">Wskazuje, czy powinien zostać przycięty białe wiodące i końcowe z wartości pól.</span><span class="sxs-lookup"><span data-stu-id="44324-378">Indicates whether leading and trailing white space should be trimmed from field values.</span></span></summary>
        <value>
          <span data-ttu-id="44324-379"><see langword="True" /> Jeśli spacji wiodących i końcowych białych powinien zostać przycięty z wartości pola. w przeciwnym razie <see langword="False" />.</span><span class="sxs-lookup"><span data-stu-id="44324-379"><see langword="True" /> if leading and trailing white space should be trimmed from field values; otherwise, <see langword="False" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="44324-380">Wartość domyślna dla tej właściwości to `True`.</span><span class="sxs-lookup"><span data-stu-id="44324-380">The default value for this property is `True`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="44324-381">Ten przykład tworzy `TextFieldParser`, `FileReader`i ustawia `TrimWhiteSpace` właściwości `True`.</span><span class="sxs-lookup"><span data-stu-id="44324-381">This example creates a `TextFieldParser`, `FileReader`, and sets the `TrimWhiteSpace` property to `True`.</span></span>  
  
 [!code-vb[VbVbalrTextFieldParser#7](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrTextFieldParser/VB/Class1.vb#7)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFieldParser(System.String)" />
      </Docs>
    </Member>
  </Members>
</Type>