<Type Name="TextFieldParser" FullName="Microsoft.VisualBasic.FileIO.TextFieldParser">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="806523a2ac4e7853023da7afc4c04b405f3fafaf" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37710632" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class TextFieldParser : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi TextFieldParser extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:Microsoft.VisualBasic.FileIO.TextFieldParser" />
  <TypeSignature Language="VB.NET" Value="Public Class TextFieldParser&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class TextFieldParser : IDisposable" />
  <TypeSignature Language="F#" Value="type TextFieldParser = class&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic</AssemblyName>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="2b9a7-101">Udostępnia metody i właściwości do analizowania tekstu ze strukturą plików.</span>
      <span class="sxs-lookup">
        <span data-stu-id="2b9a7-101">Provides methods and properties for parsing structured text files.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b9a7-102">`TextFieldParser` Obiektu udostępnia metody i właściwości dla analizy strukturalne pliki tekstowe.</span><span class="sxs-lookup"><span data-stu-id="2b9a7-102">The `TextFieldParser` object provides methods and properties for parsing structured text files.</span></span> <span data-ttu-id="2b9a7-103">Podczas analizowania pliku tekstowego z `TextFieldParser` jest podobny do Iterowanie pliku tekstowego podczas `ReadFields` metoda do wyodrębniania pól tekstu jest podobna do dzielenia ciągów.</span><span class="sxs-lookup"><span data-stu-id="2b9a7-103">Parsing a text file with the `TextFieldParser` is similar to iterating over a text file, while the `ReadFields` method to extract fields of text is similar to splitting the strings.</span></span>  
  
 <span data-ttu-id="2b9a7-104">`TextFieldParser` Może przeanalizować dwa typy plików: rozdzielany lub o stałej szerokości.</span><span class="sxs-lookup"><span data-stu-id="2b9a7-104">The `TextFieldParser` can parse two types of files: delimited or fixed-width.</span></span> <span data-ttu-id="2b9a7-105">Niektóre właściwości, takie jak `Delimiters` i `HasFieldsEnclosedInQuotes` mają znaczenie tylko podczas pracy z plików, podczas gdy `FieldWidths` właściwość ma znaczenie tylko wtedy, gdy praca z plikami o stałej szerokości.</span><span class="sxs-lookup"><span data-stu-id="2b9a7-105">Some properties, such as `Delimiters` and `HasFieldsEnclosedInQuotes` are meaningful only when working with delimited files, while the `FieldWidths` property is meaningful only when working with fixed-width files.</span></span>  
  
 <span data-ttu-id="2b9a7-106">W poniższej tabeli wymieniono przykłady zadań obejmujących `Microsoft.VisualBasic.FileIO.TextFieldParser` obiektu.</span><span class="sxs-lookup"><span data-stu-id="2b9a7-106">The following table lists examples of tasks involving the `Microsoft.VisualBasic.FileIO.TextFieldParser` object.</span></span>  
  
|<span data-ttu-id="2b9a7-107">Do</span><span class="sxs-lookup"><span data-stu-id="2b9a7-107">To</span></span>|<span data-ttu-id="2b9a7-108">Zobacz</span><span class="sxs-lookup"><span data-stu-id="2b9a7-108">See</span></span>|  
|--------|---------|  
|<span data-ttu-id="2b9a7-109">Odczyt z pliku tekstowego z separatorami</span><span class="sxs-lookup"><span data-stu-id="2b9a7-109">Read from a delimited text file</span></span>|[<span data-ttu-id="2b9a7-110">Instrukcje: odczyt z rozdzielonych przecinkami plików testowych</span><span class="sxs-lookup"><span data-stu-id="2b9a7-110">How to: Read From Comma-Delimited Text Files</span></span>](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-comma-delimited-text-files.md)|  
|<span data-ttu-id="2b9a7-111">Odczyt z plików testowych o stałej szerokości</span><span class="sxs-lookup"><span data-stu-id="2b9a7-111">Read from a fixed-width text file</span></span>|[<span data-ttu-id="2b9a7-112">Instrukcje: odczyt z plików testowych o stałej szerokości</span><span class="sxs-lookup"><span data-stu-id="2b9a7-112">How to: Read From Fixed-width Text Files</span></span>](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-fixed-width-text-files.md)|  
|<span data-ttu-id="2b9a7-113">Odczyt z pliku tekstowego w wielu formatach</span><span class="sxs-lookup"><span data-stu-id="2b9a7-113">Read from a text file with multiple formats</span></span>|[<span data-ttu-id="2b9a7-114">Instrukcje: odczyt z plików tekstowych w wielu formatach</span><span class="sxs-lookup"><span data-stu-id="2b9a7-114">How to: Read From Text Files with Multiple Formats</span></span>](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-text-files-with-multiple-formats.md)|  
  
   
  
## Examples  
 <span data-ttu-id="2b9a7-115">W tym przykładzie zostanie przetworzona za pomocą pliku tekst rozdzielany tabulatorami `Bigfile`.</span><span class="sxs-lookup"><span data-stu-id="2b9a7-115">This example parses through a tab-delimited text file, `Bigfile`.</span></span>  
  
 [!code-vb[VbVbalrTextFieldParser#17](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrTextFieldParser/VB/Class1.vb#17)]  
  
 ]]></format>
    </remarks>
    <altmember cref="M:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFieldParser(System.String)" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="2b9a7-116">Inicjuje nowe wystąpienie klasy <see langword="TextFieldParser" /> klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b9a7-116">Initializes a new instance of the <see langword="TextFieldParser" /> class.</span>
          </span>
        </summary>
        <altmember cref="M:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFieldParser(System.String)" />
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TextFieldParser (System.IO.Stream stream);" />
      <MemberSignature Language="ILAsm" Value=".method public specialname rtspecialname instance void .ctor(class System.IO.Stream stream) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.IO.Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TextFieldParser(System::IO::Stream ^ stream);" />
      <MemberSignature Language="F#" Value="new Microsoft.VisualBasic.FileIO.TextFieldParser : System.IO.Stream -&gt; Microsoft.VisualBasic.FileIO.TextFieldParser" Usage="new Microsoft.VisualBasic.FileIO.TextFieldParser stream" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="stream">
          <span data-ttu-id="2b9a7-117">
            <see cref="T:System.IO.Stream" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b9a7-117">
              <see cref="T:System.IO.Stream" />.</span>
          </span>
          <span data-ttu-id="2b9a7-118">Strumień, który będzie analizowany.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b9a7-118">The stream to be parsed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2b9a7-119">Inicjuje nowe wystąpienie klasy <see langword="TextFieldParser" /> klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b9a7-119">Initializes a new instance of the <see langword="TextFieldParser" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b9a7-120">Tworzy nową `TextFieldParser` obiekt, aby przeanalizować pliku lub strumienia reprezentowanego przez `stream` parametru.</span><span class="sxs-lookup"><span data-stu-id="2b9a7-120">Creates a new `TextFieldParser` object to parse the file or stream that is represented by the `stream` parameter.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2b9a7-121">
            <paramref name="stream" /> jest <see langword="Nothing" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b9a7-121">
              <paramref name="stream" /> is <see langword="Nothing" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="2b9a7-122">
            <paramref name="stream" /> Nie można odczytać z.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b9a7-122">
              <paramref name="stream" /> cannot be read from.</span>
          </span>
        </exception>
        <altmember cref="M:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFieldParser(System.String)" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TextFieldParser (System.IO.TextReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public specialname rtspecialname instance void .ctor(class System.IO.TextReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.IO.TextReader)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (reader As TextReader)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TextFieldParser(System::IO::TextReader ^ reader);" />
      <MemberSignature Language="F#" Value="new Microsoft.VisualBasic.FileIO.TextFieldParser : System.IO.TextReader -&gt; Microsoft.VisualBasic.FileIO.TextFieldParser" Usage="new Microsoft.VisualBasic.FileIO.TextFieldParser reader" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="reader" Type="System.IO.TextReader" />
      </Parameters>
      <Docs>
        <param name="reader">
          <span data-ttu-id="2b9a7-123">
            <see cref="T:System.IO.TextReader" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b9a7-123">
              <see cref="T:System.IO.TextReader" />.</span>
          </span>
          <span data-ttu-id="2b9a7-124">
            <see cref="T:System.IO.TextReader" /> Strumienia do przeanalizowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b9a7-124">The <see cref="T:System.IO.TextReader" /> stream to be parsed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2b9a7-125">Inicjuje nowe wystąpienie klasy <see langword="TextFieldParser" /> klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b9a7-125">Initializes a new instance of the <see langword="TextFieldParser" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b9a7-126">Tworzy nową `TextFieldParser` obiekt, aby przeanalizować pliku lub strumienia reprezentowanego przez `reader` parametru.</span><span class="sxs-lookup"><span data-stu-id="2b9a7-126">Creates a new `TextFieldParser` object to parse the file or stream that is represented by the `reader` parameter.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2b9a7-127">
            <paramref name="reader" /> jest <see langword="Nothing" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b9a7-127">
              <paramref name="reader" /> is <see langword="Nothing" />.</span>
          </span>
        </exception>
        <altmember cref="M:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFieldParser(System.String)" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TextFieldParser (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public specialname rtspecialname instance void .ctor(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (path As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TextFieldParser(System::String ^ path);" />
      <MemberSignature Language="F#" Value="new Microsoft.VisualBasic.FileIO.TextFieldParser : string -&gt; Microsoft.VisualBasic.FileIO.TextFieldParser" Usage="new Microsoft.VisualBasic.FileIO.TextFieldParser path" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path">
          <span data-ttu-id="2b9a7-128">
            <see langword="String" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b9a7-128">
              <see langword="String" />.</span>
          </span>
          <span data-ttu-id="2b9a7-129">Pełna ścieżka pliku do przeanalizowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b9a7-129">The complete path of the file to be parsed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2b9a7-130">Inicjuje nowe wystąpienie klasy <see langword="TextFieldParser" /> klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b9a7-130">Initializes a new instance of the <see langword="TextFieldParser" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b9a7-131">Tworzy nową `TextFieldParser` obiektu można przeanalizować pliku określonego przez `path` parametru.</span><span class="sxs-lookup"><span data-stu-id="2b9a7-131">Creates a new `TextFieldParser` object to parse the file specified by the `path` parameter.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2b9a7-132">
            <paramref name="path" /> jest ciągiem pustym.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b9a7-132">
              <paramref name="path" /> is an empty string.</span>
          </span>
        </exception>
        <altmember cref="M:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFieldParser(System.String)" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TextFieldParser (System.IO.Stream stream, System.Text.Encoding defaultEncoding);" />
      <MemberSignature Language="ILAsm" Value=".method public specialname rtspecialname instance void .ctor(class System.IO.Stream stream, class System.Text.Encoding defaultEncoding) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.IO.Stream,System.Text.Encoding)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TextFieldParser(System::IO::Stream ^ stream, System::Text::Encoding ^ defaultEncoding);" />
      <MemberSignature Language="F#" Value="new Microsoft.VisualBasic.FileIO.TextFieldParser : System.IO.Stream * System.Text.Encoding -&gt; Microsoft.VisualBasic.FileIO.TextFieldParser" Usage="new Microsoft.VisualBasic.FileIO.TextFieldParser (stream, defaultEncoding)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="defaultEncoding" Type="System.Text.Encoding" />
      </Parameters>
      <Docs>
        <param name="stream">
          <span data-ttu-id="2b9a7-133">
            <see cref="T:System.IO.Stream" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b9a7-133">
              <see cref="T:System.IO.Stream" />.</span>
          </span>
          <span data-ttu-id="2b9a7-134">Strumień, który będzie analizowany.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b9a7-134">The stream to be parsed.</span>
          </span>
        </param>
        <param name="defaultEncoding">
          <span data-ttu-id="2b9a7-135">
            <see cref="T:System.Text.Encoding" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b9a7-135">
              <see cref="T:System.Text.Encoding" />.</span>
          </span>
          <span data-ttu-id="2b9a7-136">System kodowania znaków, który będzie używany w razie niemożności ustalenia kodowania na podstawie treści pliku.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b9a7-136">The character encoding to use if encoding is not determined from file.</span>
          </span>
          <span data-ttu-id="2b9a7-137">Wartość domyślna to <see cref="P:System.Text.Encoding.UTF8" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b9a7-137">Default is <see cref="P:System.Text.Encoding.UTF8" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2b9a7-138">Inicjuje nowe wystąpienie klasy <see langword="TextFieldParser" /> klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b9a7-138">Initializes a new instance of the <see langword="TextFieldParser" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b9a7-139">Tworzy nową `TextFieldParser` obiekt, aby przeanalizować pliku lub strumienia reprezentowanego przez `stream` parametru.</span><span class="sxs-lookup"><span data-stu-id="2b9a7-139">Creates a new `TextFieldParser` object to parse the file or stream that is represented by the `stream` parameter.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="2b9a7-140">Gdy zbiór znaków zostanie skompilowany z określonym ustawieniem kultury, po czym pobrany z użyciem innego ustawienia kultury, znaki mogą nie nadawać się do interpretacji i powodować zgłoszenie wyjątku.</span><span class="sxs-lookup"><span data-stu-id="2b9a7-140">When you compile a set of characters with a particular cultural setting and retrieve those same characters with a different cultural setting, the characters might not be interpretable and could cause an exception to be thrown.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2b9a7-141">
            <paramref name="stream" /> lub <paramref name="defaultEncoding" /> jest <see langword="Nothing" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b9a7-141">
              <paramref name="stream" /> or <paramref name="defaultEncoding" /> is <see langword="Nothing" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="2b9a7-142">
            <paramref name="stream" /> Nie można odczytać z.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b9a7-142">
              <paramref name="stream" /> cannot be read from.</span>
          </span>
        </exception>
        <altmember cref="M:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFieldParser(System.String)" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TextFieldParser (string path, System.Text.Encoding defaultEncoding);" />
      <MemberSignature Language="ILAsm" Value=".method public specialname rtspecialname instance void .ctor(string path, class System.Text.Encoding defaultEncoding) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.String,System.Text.Encoding)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (path As String, defaultEncoding As Encoding)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TextFieldParser(System::String ^ path, System::Text::Encoding ^ defaultEncoding);" />
      <MemberSignature Language="F#" Value="new Microsoft.VisualBasic.FileIO.TextFieldParser : string * System.Text.Encoding -&gt; Microsoft.VisualBasic.FileIO.TextFieldParser" Usage="new Microsoft.VisualBasic.FileIO.TextFieldParser (path, defaultEncoding)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="defaultEncoding" Type="System.Text.Encoding" />
      </Parameters>
      <Docs>
        <param name="path">
          <span data-ttu-id="2b9a7-143">
            <see langword="String" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b9a7-143">
              <see langword="String" />.</span>
          </span>
          <span data-ttu-id="2b9a7-144">Pełna ścieżka pliku do przeanalizowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b9a7-144">The complete path of the file to be parsed.</span>
          </span>
        </param>
        <param name="defaultEncoding">
          <span data-ttu-id="2b9a7-145">
            <see cref="T:System.Text.Encoding" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b9a7-145">
              <see cref="T:System.Text.Encoding" />.</span>
          </span>
          <span data-ttu-id="2b9a7-146">System kodowania znaków, który będzie używany w razie niemożności ustalenia kodowania na podstawie treści pliku.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b9a7-146">The character encoding to use if encoding is not determined from file.</span>
          </span>
          <span data-ttu-id="2b9a7-147">Wartość domyślna to <see cref="P:System.Text.Encoding.UTF8" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b9a7-147">Default is <see cref="P:System.Text.Encoding.UTF8" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2b9a7-148">Inicjuje nowe wystąpienie klasy <see langword="TextFieldParser" /> klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b9a7-148">Initializes a new instance of the <see langword="TextFieldParser" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b9a7-149">Tworzy nową `TextFieldParser` obiektu można przeanalizować pliku określonego przez `path` parametru.</span><span class="sxs-lookup"><span data-stu-id="2b9a7-149">Creates a new `TextFieldParser` object to parse the file specified by the `path` parameter.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="2b9a7-150">Gdy zbiór znaków zostanie skompilowany z określonym ustawieniem kultury, po czym pobrany z użyciem innego ustawienia kultury, znaki mogą nie nadawać się do interpretacji i powodować zgłoszenie wyjątku.</span><span class="sxs-lookup"><span data-stu-id="2b9a7-150">When you compile a set of characters with a particular cultural setting and retrieve those same characters with a different cultural setting, the characters might not be interpretable and could cause an exception to be thrown.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2b9a7-151">
            <paramref name="path" /> jest ciągiem pustym lub <paramref name="defaultEncoding" /> jest <see langword="Nothing" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b9a7-151">
              <paramref name="path" /> is an empty string or <paramref name="defaultEncoding" /> is <see langword="Nothing" />.</span>
          </span>
        </exception>
        <altmember cref="M:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFieldParser(System.String)" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TextFieldParser (System.IO.Stream stream, System.Text.Encoding defaultEncoding, bool detectEncoding);" />
      <MemberSignature Language="ILAsm" Value=".method public specialname rtspecialname instance void .ctor(class System.IO.Stream stream, class System.Text.Encoding defaultEncoding, bool detectEncoding) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.IO.Stream,System.Text.Encoding,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TextFieldParser(System::IO::Stream ^ stream, System::Text::Encoding ^ defaultEncoding, bool detectEncoding);" />
      <MemberSignature Language="F#" Value="new Microsoft.VisualBasic.FileIO.TextFieldParser : System.IO.Stream * System.Text.Encoding * bool -&gt; Microsoft.VisualBasic.FileIO.TextFieldParser" Usage="new Microsoft.VisualBasic.FileIO.TextFieldParser (stream, defaultEncoding, detectEncoding)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="defaultEncoding" Type="System.Text.Encoding" />
        <Parameter Name="detectEncoding" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="stream">
          <span data-ttu-id="2b9a7-152">
            <see cref="T:System.IO.Stream" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b9a7-152">
              <see cref="T:System.IO.Stream" />.</span>
          </span>
          <span data-ttu-id="2b9a7-153">Strumień, który będzie analizowany.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b9a7-153">The stream to be parsed.</span>
          </span>
        </param>
        <param name="defaultEncoding">
          <span data-ttu-id="2b9a7-154">
            <see cref="T:System.Text.Encoding" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b9a7-154">
              <see cref="T:System.Text.Encoding" />.</span>
          </span>
          <span data-ttu-id="2b9a7-155">System kodowania znaków, który będzie używany w razie niemożności ustalenia kodowania na podstawie treści pliku.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b9a7-155">The character encoding to use if encoding is not determined from file.</span>
          </span>
          <span data-ttu-id="2b9a7-156">Wartość domyślna to <see cref="P:System.Text.Encoding.UTF8" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b9a7-156">Default is <see cref="P:System.Text.Encoding.UTF8" />.</span>
          </span>
        </param>
        <param name="detectEncoding">
          <span data-ttu-id="2b9a7-157">
            <see langword="Boolean" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b9a7-157">
              <see langword="Boolean" />.</span>
          </span>
          <span data-ttu-id="2b9a7-158">Wskazuje, czy na początku pliku mają być szukane znaczniki kolejności bajtów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b9a7-158">Indicates whether to look for byte order marks at the beginning of the file.</span>
          </span>
          <span data-ttu-id="2b9a7-159">Wartość domyślna to <see langword="True" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b9a7-159">Default is <see langword="True" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2b9a7-160">Inicjuje nowe wystąpienie klasy <see langword="TextFieldParser" /> klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b9a7-160">Initializes a new instance of the <see langword="TextFieldParser" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b9a7-161">Tworzy nową `TextFieldParser` obiekt, aby przeanalizować pliku lub strumienia reprezentowanego przez `stream` parametru.</span><span class="sxs-lookup"><span data-stu-id="2b9a7-161">Creates a new `TextFieldParser` object to parse the file or stream that is represented by the `stream` parameter.</span></span>  
  
 <span data-ttu-id="2b9a7-162">Jeśli `detectEncoding` parametr jest `True`, ten konstruktor próbuje wykryć kodowanie, analizując pierwsze trzy bajty pliku lub strumienia.</span><span class="sxs-lookup"><span data-stu-id="2b9a7-162">If the `detectEncoding` parameter is `True`, this constructor attempts to detect the encoding by looking at the first three bytes of the file or stream.</span></span> <span data-ttu-id="2b9a7-163">Automatycznie rozpoznaje UTF-8, little-endian Unicode i tekst w formacie Unicode big-endian Jeśli plik rozpoczyna się od znaków w odpowiedniej kolejności bajtów.</span><span class="sxs-lookup"><span data-stu-id="2b9a7-163">It automatically recognizes UTF-8, little-endian Unicode, and big-endian Unicode text if the file starts with the appropriate byte-order marks.</span></span> <span data-ttu-id="2b9a7-164">W przeciwnym razie kodowanie określone przez `defaultEncoding` jest używany.</span><span class="sxs-lookup"><span data-stu-id="2b9a7-164">Otherwise, the encoding specified by `defaultEncoding` is used.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="2b9a7-165">Gdy zbiór znaków zostanie skompilowany z określonym ustawieniem kultury, po czym pobrany z użyciem innego ustawienia kultury, znaki mogą nie nadawać się do interpretacji i powodować zgłoszenie wyjątku.</span><span class="sxs-lookup"><span data-stu-id="2b9a7-165">When you compile a set of characters with a particular cultural setting and retrieve those same characters with a different cultural setting, the characters might not be interpretable and could cause an exception to be thrown.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2b9a7-166">
            <paramref name="stream" /> lub <paramref name="defaultEncoding" /> jest <see langword="Nothing" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b9a7-166">
              <paramref name="stream" /> or <paramref name="defaultEncoding" /> is <see langword="Nothing" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="2b9a7-167">
            <paramref name="stream" /> Nie można odczytać z.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b9a7-167">
              <paramref name="stream" /> cannot be read from.</span>
          </span>
        </exception>
        <altmember cref="M:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFieldParser(System.String)" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TextFieldParser (string path, System.Text.Encoding defaultEncoding, bool detectEncoding);" />
      <MemberSignature Language="ILAsm" Value=".method public specialname rtspecialname instance void .ctor(string path, class System.Text.Encoding defaultEncoding, bool detectEncoding) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.String,System.Text.Encoding,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (path As String, defaultEncoding As Encoding, detectEncoding As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TextFieldParser(System::String ^ path, System::Text::Encoding ^ defaultEncoding, bool detectEncoding);" />
      <MemberSignature Language="F#" Value="new Microsoft.VisualBasic.FileIO.TextFieldParser : string * System.Text.Encoding * bool -&gt; Microsoft.VisualBasic.FileIO.TextFieldParser" Usage="new Microsoft.VisualBasic.FileIO.TextFieldParser (path, defaultEncoding, detectEncoding)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="defaultEncoding" Type="System.Text.Encoding" />
        <Parameter Name="detectEncoding" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="path">
          <span data-ttu-id="2b9a7-168">
            <see langword="String" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b9a7-168">
              <see langword="String" />.</span>
          </span>
          <span data-ttu-id="2b9a7-169">Pełna ścieżka pliku do przeanalizowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b9a7-169">The complete path of the file to be parsed.</span>
          </span>
        </param>
        <param name="defaultEncoding">
          <span data-ttu-id="2b9a7-170">
            <see cref="T:System.Text.Encoding" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b9a7-170">
              <see cref="T:System.Text.Encoding" />.</span>
          </span>
          <span data-ttu-id="2b9a7-171">System kodowania znaków, który będzie używany w razie niemożności ustalenia kodowania na podstawie treści pliku.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b9a7-171">The character encoding to use if encoding is not determined from file.</span>
          </span>
          <span data-ttu-id="2b9a7-172">Wartość domyślna to <see cref="P:System.Text.Encoding.UTF8" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b9a7-172">Default is <see cref="P:System.Text.Encoding.UTF8" />.</span>
          </span>
        </param>
        <param name="detectEncoding">
          <span data-ttu-id="2b9a7-173">
            <see langword="Boolean" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b9a7-173">
              <see langword="Boolean" />.</span>
          </span>
          <span data-ttu-id="2b9a7-174">Wskazuje, czy na początku pliku mają być szukane znaczniki kolejności bajtów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b9a7-174">Indicates whether to look for byte order marks at the beginning of the file.</span>
          </span>
          <span data-ttu-id="2b9a7-175">Wartość domyślna to <see langword="True" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b9a7-175">Default is <see langword="True" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2b9a7-176">Inicjuje nowe wystąpienie klasy <see langword="TextFieldParser" /> klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b9a7-176">Initializes a new instance of the <see langword="TextFieldParser" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b9a7-177">Tworzy nową `TextFieldParser` obiektu można przeanalizować pliku określonego przez `path` parametru.</span><span class="sxs-lookup"><span data-stu-id="2b9a7-177">Creates a new `TextFieldParser` object to parse the file specified by the `path` parameter.</span></span>  
  
 <span data-ttu-id="2b9a7-178">Jeśli `detectEncoding` parametr jest `True`, ten konstruktor próbuje wykryć kodowanie, analizując pierwsze trzy bajty pliku lub strumienia.</span><span class="sxs-lookup"><span data-stu-id="2b9a7-178">If the `detectEncoding` parameter is `True`, this constructor attempts to detect the encoding by looking at the first three bytes of the file or stream.</span></span> <span data-ttu-id="2b9a7-179">Automatycznie rozpoznaje UTF-8, little-endian Unicode i tekst w formacie Unicode big-endian Jeśli plik rozpoczyna się od znaków w odpowiedniej kolejności bajtów.</span><span class="sxs-lookup"><span data-stu-id="2b9a7-179">It automatically recognizes UTF-8, little-endian Unicode, and big-endian Unicode text if the file starts with the appropriate byte-order marks.</span></span> <span data-ttu-id="2b9a7-180">W przeciwnym razie kodowanie określone przez `defaultEncoding` jest używany.</span><span class="sxs-lookup"><span data-stu-id="2b9a7-180">Otherwise, the encoding specified by `defaultEncoding` is used.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="2b9a7-181">Gdy zbiór znaków zostanie skompilowany z określonym ustawieniem kultury, po czym pobrany z użyciem innego ustawienia kultury, znaki mogą nie nadawać się do interpretacji i powodować zgłoszenie wyjątku.</span><span class="sxs-lookup"><span data-stu-id="2b9a7-181">When you compile a set of characters with a particular cultural setting and retrieve those same characters with a different cultural setting, the characters might not be interpretable and could cause an exception to be thrown.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2b9a7-182">
            <paramref name="path" /> jest ciągiem pustym lub <paramref name="defaultEncoding" /> jest <see langword="Nothing" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b9a7-182">
              <paramref name="path" /> is an empty string or <paramref name="defaultEncoding" /> is <see langword="Nothing" />.</span>
          </span>
        </exception>
        <altmember cref="M:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFieldParser(System.String)" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TextFieldParser (System.IO.Stream stream, System.Text.Encoding defaultEncoding, bool detectEncoding, bool leaveOpen);" />
      <MemberSignature Language="ILAsm" Value=".method public specialname rtspecialname instance void .ctor(class System.IO.Stream stream, class System.Text.Encoding defaultEncoding, bool detectEncoding, bool leaveOpen) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.IO.Stream,System.Text.Encoding,System.Boolean,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TextFieldParser(System::IO::Stream ^ stream, System::Text::Encoding ^ defaultEncoding, bool detectEncoding, bool leaveOpen);" />
      <MemberSignature Language="F#" Value="new Microsoft.VisualBasic.FileIO.TextFieldParser : System.IO.Stream * System.Text.Encoding * bool * bool -&gt; Microsoft.VisualBasic.FileIO.TextFieldParser" Usage="new Microsoft.VisualBasic.FileIO.TextFieldParser (stream, defaultEncoding, detectEncoding, leaveOpen)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="defaultEncoding" Type="System.Text.Encoding" />
        <Parameter Name="detectEncoding" Type="System.Boolean" />
        <Parameter Name="leaveOpen" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="stream">
          <span data-ttu-id="2b9a7-183">
            <see cref="T:System.IO.Stream" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b9a7-183">
              <see cref="T:System.IO.Stream" />.</span>
          </span>
          <span data-ttu-id="2b9a7-184">Strumień, który będzie analizowany.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b9a7-184">The stream to be parsed.</span>
          </span>
        </param>
        <param name="defaultEncoding">
          <span data-ttu-id="2b9a7-185">
            <see cref="T:System.Text.Encoding" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b9a7-185">
              <see cref="T:System.Text.Encoding" />.</span>
          </span>
          <span data-ttu-id="2b9a7-186">System kodowania znaków, który będzie używany w razie niemożności ustalenia kodowania na podstawie treści pliku.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b9a7-186">The character encoding to use if encoding is not determined from file.</span>
          </span>
          <span data-ttu-id="2b9a7-187">Wartość domyślna to <see cref="P:System.Text.Encoding.UTF8" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b9a7-187">Default is <see cref="P:System.Text.Encoding.UTF8" />.</span>
          </span>
        </param>
        <param name="detectEncoding">
          <span data-ttu-id="2b9a7-188">
            <see langword="Boolean" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b9a7-188">
              <see langword="Boolean" />.</span>
          </span>
          <span data-ttu-id="2b9a7-189">Wskazuje, czy na początku pliku mają być szukane znaczniki kolejności bajtów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b9a7-189">Indicates whether to look for byte order marks at the beginning of the file.</span>
          </span>
          <span data-ttu-id="2b9a7-190">Wartość domyślna to <see langword="True" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b9a7-190">Default is <see langword="True" />.</span>
          </span>
        </param>
        <param name="leaveOpen">
          <span data-ttu-id="2b9a7-191">
            <see langword="Boolean" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b9a7-191">
              <see langword="Boolean" />.</span>
          </span>
          <span data-ttu-id="2b9a7-192">Wskazuje, czy należy pozostawić <c>strumienia</c> podczas otwierania <see langword="TextFieldParser" /> obiekt jest zamknięty.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b9a7-192">Indicates whether to leave <c>stream</c> open when the <see langword="TextFieldParser" /> object is closed.</span>
          </span>
          <span data-ttu-id="2b9a7-193">Wartość domyślna to <see langword="False" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b9a7-193">Default is <see langword="False" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2b9a7-194">Inicjuje nowe wystąpienie klasy <see langword="TextFieldParser" /> klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b9a7-194">Initializes a new instance of the <see langword="TextFieldParser" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b9a7-195">Tworzy nową `TextFieldParser` obiekt, aby przeanalizować pliku lub strumienia reprezentowanego przez `stream` parametru.</span><span class="sxs-lookup"><span data-stu-id="2b9a7-195">Creates a new `TextFieldParser` object to parse the file or stream that is represented by the `stream` parameter.</span></span>  
  
 <span data-ttu-id="2b9a7-196">Jeśli `detectEncoding` parametr jest `True`, ten konstruktor próbuje wykryć kodowanie, analizując pierwsze trzy bajty pliku lub strumienia.</span><span class="sxs-lookup"><span data-stu-id="2b9a7-196">If the `detectEncoding` parameter is `True`, this constructor attempts to detect the encoding by looking at the first three bytes of the file or stream.</span></span> <span data-ttu-id="2b9a7-197">Automatycznie rozpoznaje UTF-8, little-endian Unicode i tekst w formacie Unicode big-endian Jeśli plik rozpoczyna się od znaków w odpowiedniej kolejności bajtów.</span><span class="sxs-lookup"><span data-stu-id="2b9a7-197">It automatically recognizes UTF-8, little-endian Unicode, and big-endian Unicode text if the file starts with the appropriate byte-order marks.</span></span> <span data-ttu-id="2b9a7-198">W przeciwnym razie kodowanie określone przez `defaultEncoding` jest używany.</span><span class="sxs-lookup"><span data-stu-id="2b9a7-198">Otherwise, the encoding specified by `defaultEncoding` is used.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="2b9a7-199">Gdy zbiór znaków zostanie skompilowany z określonym ustawieniem kultury, po czym pobrany z użyciem innego ustawienia kultury, znaki mogą nie nadawać się do interpretacji i powodować zgłoszenie wyjątku.</span><span class="sxs-lookup"><span data-stu-id="2b9a7-199">When you compile a set of characters with a particular cultural setting and retrieve those same characters with a different cultural setting, the characters might not be interpretable and could cause an exception to be thrown.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2b9a7-200">
            <paramref name="stream" /> lub <paramref name="defaultEncoding" /> jest <see langword="Nothing" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b9a7-200">
              <paramref name="stream" /> or <paramref name="defaultEncoding" /> is <see langword="Nothing" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="2b9a7-201">
            <paramref name="stream" /> Nie można odczytać z.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b9a7-201">
              <paramref name="stream" /> cannot be read from.</span>
          </span>
        </exception>
        <altmember cref="M:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFieldParser(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileIO.TextFieldParser.Close" />
      <MemberSignature Language="VB.NET" Value="Public Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Close();" />
      <MemberSignature Language="F#" Value="member this.Close : unit -&gt; unit" Usage="textFieldParser.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="2b9a7-202">Zamyka bieżące <see langword="TextFieldParser" /> obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b9a7-202">Closes the current <see langword="TextFieldParser" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="2b9a7-203">W tym przykładzie zamyka `TextFieldParser.FileReader`.</span><span class="sxs-lookup"><span data-stu-id="2b9a7-203">This example closes the `TextFieldParser.FileReader`.</span></span>  
  
 [!code-vb[VbVbalrTextFieldParser#14](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrTextFieldParser/VB/Class1.vb#14)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFieldParser(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="CommentTokens">
      <MemberSignature Language="C#" Value="public string[] CommentTokens { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] CommentTokens" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.FileIO.TextFieldParser.CommentTokens" />
      <MemberSignature Language="VB.NET" Value="Public Property CommentTokens As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::String ^&gt; ^ CommentTokens { cli::array &lt;System::String ^&gt; ^ get(); void set(cli::array &lt;System::String ^&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CommentTokens : string[] with get, set" Usage="Microsoft.VisualBasic.FileIO.TextFieldParser.CommentTokens" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2b9a7-204">Definiuje tokenami komentarzy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b9a7-204">Defines comment tokens.</span>
          </span>
          <span data-ttu-id="2b9a7-205">Znacznik komentarza jest ciągiem, jeśli znajduje się na początku wiersza, wskazuje, że wiersz jest komentarz i mają być ignorowane przez analizator.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b9a7-205">A comment token is a string that, when placed at the beginning of a line, indicates that the line is a comment and should be ignored by the parser.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2b9a7-206">Tablica ciągu, który zawiera wszystkie komentarza tokenów dla <see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" /> obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b9a7-206">A string array that contains all of the comment tokens for the <see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" /> object.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b9a7-207">To jest Zaawansowany element członkowski; go nie są wyświetlane w IntelliSense dopóki nie zostanie kliknięta **wszystkich** kartę.</span><span class="sxs-lookup"><span data-stu-id="2b9a7-207">This is an advanced member; it does not show in IntelliSense unless you click the **All** tab.</span></span>  
  
 <span data-ttu-id="2b9a7-208">Tokenami komentarzy o zerowej długości są ignorowane.</span><span class="sxs-lookup"><span data-stu-id="2b9a7-208">Zero-length comment tokens are ignored.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2b9a7-209">W tym przykładzie określa, że dla `TextFieldParser`, `FileReader` wiersze rozpoczynające się od pojedynczego cudzysłowu ('), które mają być ignorowane.</span><span class="sxs-lookup"><span data-stu-id="2b9a7-209">This example specifies that for the `TextFieldParser`, `FileReader` lines beginning with a single quotation mark (') should be ignored.</span></span>  
  
 [!code-vb[VbVbalrTextFieldParser#5](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrTextFieldParser/VB/Class1.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="2b9a7-210">Znacznik komentarza zawiera biały znak.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b9a7-210">A comment token includes white space.</span>
          </span>
        </exception>
        <altmember cref="M:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFieldParser(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="Delimiters">
      <MemberSignature Language="C#" Value="public string[] Delimiters { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] Delimiters" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.FileIO.TextFieldParser.Delimiters" />
      <MemberSignature Language="VB.NET" Value="Public Property Delimiters As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::String ^&gt; ^ Delimiters { cli::array &lt;System::String ^&gt; ^ get(); void set(cli::array &lt;System::String ^&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Delimiters : string[] with get, set" Usage="Microsoft.VisualBasic.FileIO.TextFieldParser.Delimiters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2b9a7-211">Definiuje ograniczników do pliku tekstowego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b9a7-211">Defines the delimiters for a text file.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2b9a7-212">Tablica ciągu, który zawiera wszystkie pola ograniczniki <see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" /> obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b9a7-212">A string array that contains all of the field delimiters for the <see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" /> object.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b9a7-213">Właściwość ta ma znaczenie tylko wtedy, gdy <xref:Microsoft.VisualBasic.FileIO.TextFieldParser.TextFieldType%2A> właściwość jest ustawiona na `FieldType.Delimited`.</span><span class="sxs-lookup"><span data-stu-id="2b9a7-213">This property is meaningful only if the <xref:Microsoft.VisualBasic.FileIO.TextFieldParser.TextFieldType%2A> property is set to `FieldType.Delimited`.</span></span>  
  
 <span data-ttu-id="2b9a7-214">Definiowanie ograniczników do pliku tekstowego może być również wykonywane przy użyciu <xref:Microsoft.VisualBasic.FileIO.TextFieldParser.SetDelimiters%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="2b9a7-214">Defining the delimiters for a text file can also be accomplished with the <xref:Microsoft.VisualBasic.FileIO.TextFieldParser.SetDelimiters%2A> method.</span></span>  
  
 <span data-ttu-id="2b9a7-215">W poniższej tabeli przedstawiono przykład zadań, obejmujących `Delimiters` właściwości.</span><span class="sxs-lookup"><span data-stu-id="2b9a7-215">The following table lists an example of a task involving the `Delimiters` property.</span></span>  
  
|<span data-ttu-id="2b9a7-216">Do</span><span class="sxs-lookup"><span data-stu-id="2b9a7-216">To</span></span>|<span data-ttu-id="2b9a7-217">Zobacz</span><span class="sxs-lookup"><span data-stu-id="2b9a7-217">See</span></span>|  
|--------|---------|  
|<span data-ttu-id="2b9a7-218">Odczyt z pliku tekstowego z separatorami</span><span class="sxs-lookup"><span data-stu-id="2b9a7-218">Read from a delimited text file</span></span>|[<span data-ttu-id="2b9a7-219">Instrukcje: odczyt z rozdzielonych przecinkami plików testowych</span><span class="sxs-lookup"><span data-stu-id="2b9a7-219">How to: Read From Comma-Delimited Text Files</span></span>](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-comma-delimited-text-files.md)|  
  
   
  
## Examples  
 <span data-ttu-id="2b9a7-220">W tym przykładzie określa, że / / / ogranicznik `TextFieldParser` obiektu `FileReader`, jest przecinek (,).</span><span class="sxs-lookup"><span data-stu-id="2b9a7-220">This example specifies that the delimiter for the `TextFieldParser` object, `FileReader`, is a comma (,).</span></span>  
  
 [!code-vb[VbVbalrTextFieldParser#9](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrTextFieldParser/VB/Class1.vb#9)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="2b9a7-221">Wartość ogranicznika jest ustawiona na znaku nowego wiersza, ciągiem pustym lub <see langword="Nothing" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b9a7-221">A delimiter value is set to a newline character, an empty string, or <see langword="Nothing" />.</span>
          </span>
        </exception>
        <altmember cref="M:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFieldParser(System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.FileIO.TextFieldParser.SetDelimiters(System.String[])" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="2b9a7-222">Zwalnia zasoby używane przez <see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" /> obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b9a7-222">Releases resources used by the <see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" /> object.</span>
          </span>
        </summary>
        <altmember cref="M:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFieldParser(System.String)" />
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileIO.TextFieldParser.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose() = IDisposable::Dispose;" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="textFieldParser.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="2b9a7-223">Zwalnia zasoby używane przez <see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" /> obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b9a7-223">Releases resources used by the <see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" /> object.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFieldParser(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familynewslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileIO.TextFieldParser.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="textFieldParser.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="2b9a7-224">Wartość logiczna.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b9a7-224">Boolean.</span>
          </span>
          <span data-ttu-id="2b9a7-225">
            <see langword="True" /> zwalnia zasoby zarządzane i niezarządzane; <see langword="False" /> wersje tylko niezarządzane zasoby.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b9a7-225">
              <see langword="True" /> releases both managed and unmanaged resources; <see langword="False" /> releases only unmanaged resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2b9a7-226">Zwalnia zasoby używane przez <see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" /> obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b9a7-226">Releases resources used by the <see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" /> object.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFieldParser(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="EndOfData">
      <MemberSignature Language="C#" Value="public bool EndOfData { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EndOfData" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.FileIO.TextFieldParser.EndOfData" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EndOfData As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EndOfData { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.EndOfData : bool" Usage="Microsoft.VisualBasic.FileIO.TextFieldParser.EndOfData" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2b9a7-227">Zwraca <see langword="True" /> w przypadku niepustych nie bez komentarza linie między bieżącym położeniu kursora i na końcu pliku.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b9a7-227">Returns <see langword="True" /> if there are no non-blank, non-comment lines between the current cursor position and the end of the file.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2b9a7-228">
            <see langword="True" /> Jeśli nie ma więcej danych do odczytania. w przeciwnym razie <see langword="False" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b9a7-228">
              <see langword="True" /> if there is no more data to read; otherwise, <see langword="False" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b9a7-229">Ta właściwość może służyć podczas odczytu z plików można określić koniec odczytywanych danych.</span><span class="sxs-lookup"><span data-stu-id="2b9a7-229">This property can be used when reading from files to determine the end of the data being read.</span></span>  
  
 <span data-ttu-id="2b9a7-230">W poniższej tabeli wymieniono przykłady zadań obejmujących `EndOfData` właściwości.</span><span class="sxs-lookup"><span data-stu-id="2b9a7-230">The following table lists examples of tasks involving the `EndOfData` property.</span></span>  
  
|<span data-ttu-id="2b9a7-231">Do</span><span class="sxs-lookup"><span data-stu-id="2b9a7-231">To</span></span>|<span data-ttu-id="2b9a7-232">Zobacz</span><span class="sxs-lookup"><span data-stu-id="2b9a7-232">See</span></span>|  
|--------|---------|  
|<span data-ttu-id="2b9a7-233">Odczytać zawartość pliku o wartościach rozdzielanych</span><span class="sxs-lookup"><span data-stu-id="2b9a7-233">Read from a delimited file</span></span>|[<span data-ttu-id="2b9a7-234">Instrukcje: odczyt z rozdzielonych przecinkami plików testowych</span><span class="sxs-lookup"><span data-stu-id="2b9a7-234">How to: Read From Comma-Delimited Text Files</span></span>](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-comma-delimited-text-files.md)|  
|<span data-ttu-id="2b9a7-235">Odczytać zawartość pliku z wartościami o stałej szerokości</span><span class="sxs-lookup"><span data-stu-id="2b9a7-235">Read from a fixed-width file</span></span>|[<span data-ttu-id="2b9a7-236">Instrukcje: odczyt z plików testowych o stałej szerokości</span><span class="sxs-lookup"><span data-stu-id="2b9a7-236">How to: Read From Fixed-width Text Files</span></span>](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-fixed-width-text-files.md)|  
  
   
  
## Examples  
 <span data-ttu-id="2b9a7-237">W tym przykładzie użyto `EndofData` właściwość pętli wszystkie pola w pliku o `TextFieldReader`, `FileReader`.</span><span class="sxs-lookup"><span data-stu-id="2b9a7-237">This example uses the `EndofData` property to loop through all the fields in the file with the `TextFieldReader`, `FileReader`.</span></span>  
  
 [!code-vb[VbVbalrTextFieldParser#6](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrTextFieldParser/VB/Class1.vb#6)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFieldParser(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="ErrorLine">
      <MemberSignature Language="C#" Value="public string ErrorLine { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ErrorLine" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLine" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ErrorLine As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ErrorLine { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ErrorLine : string" Usage="Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLine" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2b9a7-238">Zwraca wiersz, który spowodował najnowszych, ostatnio <see cref="T:Microsoft.VisualBasic.FileIO.MalformedLineException" /> wyjątku.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b9a7-238">Returns the line that caused the most recent <see cref="T:Microsoft.VisualBasic.FileIO.MalformedLineException" /> exception.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2b9a7-239">Wiersz, który spowodował najnowszych, ostatnio <see cref="T:Microsoft.VisualBasic.FileIO.MalformedLineException" /> wyjątku.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b9a7-239">The line that caused the most recent <see cref="T:Microsoft.VisualBasic.FileIO.MalformedLineException" /> exception.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b9a7-240">Jeśli nie <xref:Microsoft.VisualBasic.FileIO.MalformedLineException> były zgłaszane wyjątki, zwrócony pusty ciąg.</span><span class="sxs-lookup"><span data-stu-id="2b9a7-240">If no <xref:Microsoft.VisualBasic.FileIO.MalformedLineException> exceptions have been thrown, an empty string is returned.</span></span>  
  
 <span data-ttu-id="2b9a7-241"><xref:Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLineNumber%2A> Właściwości można wyświetlić numer wiersza, który spowodował wyjątek.</span><span class="sxs-lookup"><span data-stu-id="2b9a7-241">The <xref:Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLineNumber%2A> property can be used to display the number of the line that caused the exception.</span></span>  
  
 <span data-ttu-id="2b9a7-242">W poniższej tabeli wymieniono przykłady zadań obejmujących `ErrorLine` właściwości.</span><span class="sxs-lookup"><span data-stu-id="2b9a7-242">The following table lists examples of tasks involving the `ErrorLine` property.</span></span>  
  
|<span data-ttu-id="2b9a7-243">Do</span><span class="sxs-lookup"><span data-stu-id="2b9a7-243">To</span></span>|<span data-ttu-id="2b9a7-244">Zobacz</span><span class="sxs-lookup"><span data-stu-id="2b9a7-244">See</span></span>|  
|--------|---------|  
|<span data-ttu-id="2b9a7-245">Odczytać zawartość pliku o wartościach rozdzielanych</span><span class="sxs-lookup"><span data-stu-id="2b9a7-245">Read from a delimited file</span></span>|[<span data-ttu-id="2b9a7-246">Instrukcje: odczyt z rozdzielonych przecinkami plików testowych</span><span class="sxs-lookup"><span data-stu-id="2b9a7-246">How to: Read From Comma-Delimited Text Files</span></span>](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-comma-delimited-text-files.md)|  
|<span data-ttu-id="2b9a7-247">Odczytać zawartość pliku z wartościami o stałej szerokości</span><span class="sxs-lookup"><span data-stu-id="2b9a7-247">Read from a fixed-width file</span></span>|[<span data-ttu-id="2b9a7-248">Instrukcje: odczyt z plików testowych o stałej szerokości</span><span class="sxs-lookup"><span data-stu-id="2b9a7-248">How to: Read From Fixed-width Text Files</span></span>](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-fixed-width-text-files.md)|  
  
   
  
## Examples  
 <span data-ttu-id="2b9a7-249">W tym przykładzie użyto `ErrorLine` właściwość, aby wyświetlić wiersz, powodując bieżącego <xref:Microsoft.VisualBasic.FileIO.MalformedLineException> wyjątku.</span><span class="sxs-lookup"><span data-stu-id="2b9a7-249">This example uses the `ErrorLine` property to display the line causing the current <xref:Microsoft.VisualBasic.FileIO.MalformedLineException> exception.</span></span>  
  
 [!code-vb[VbVbalrTextFieldParser#1](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrTextFieldParser/VB/Class1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFieldParser(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="ErrorLineNumber">
      <MemberSignature Language="C#" Value="public long ErrorLineNumber { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 ErrorLineNumber" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLineNumber" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ErrorLineNumber As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long ErrorLineNumber { long get(); };" />
      <MemberSignature Language="F#" Value="member this.ErrorLineNumber : int64" Usage="Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLineNumber" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2b9a7-250">Zwraca numer wiersza, który spowodował najnowszych, ostatnio <see cref="T:Microsoft.VisualBasic.FileIO.MalformedLineException" /> wyjątku.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b9a7-250">Returns the number of the line that caused the most recent <see cref="T:Microsoft.VisualBasic.FileIO.MalformedLineException" /> exception.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2b9a7-251">Numer wiersza, który spowodował najnowszych, ostatnio <see cref="T:Microsoft.VisualBasic.FileIO.MalformedLineException" /> wyjątku.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b9a7-251">The number of the line that caused the most recent <see cref="T:Microsoft.VisualBasic.FileIO.MalformedLineException" /> exception.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b9a7-252">Jeśli nie <xref:Microsoft.VisualBasic.FileIO.MalformedLineException> były zgłaszane wyjątki, jest zwracana wartość -1.</span><span class="sxs-lookup"><span data-stu-id="2b9a7-252">If no <xref:Microsoft.VisualBasic.FileIO.MalformedLineException> exceptions have been thrown, -1 is returned.</span></span>  
  
 <span data-ttu-id="2b9a7-253"><xref:Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLine%2A> Właściwości można wyświetlić numer wiersza, który spowodował wyjątek.</span><span class="sxs-lookup"><span data-stu-id="2b9a7-253">The <xref:Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLine%2A> property can be used to display the number of the line that caused the exception.</span></span> <span data-ttu-id="2b9a7-254">Puste wiersze i komentarze nie są ignorowane podczas określania numer wiersza.</span><span class="sxs-lookup"><span data-stu-id="2b9a7-254">Blank lines and comments are not ignored when determining the line number.</span></span>  
  
 <span data-ttu-id="2b9a7-255">W poniższej tabeli wymieniono przykłady zadań obejmujących `ErrorLineNumber` właściwości.</span><span class="sxs-lookup"><span data-stu-id="2b9a7-255">The following table lists examples of tasks involving the `ErrorLineNumber` property.</span></span>  
  
|<span data-ttu-id="2b9a7-256">Do</span><span class="sxs-lookup"><span data-stu-id="2b9a7-256">To</span></span>|<span data-ttu-id="2b9a7-257">Zobacz</span><span class="sxs-lookup"><span data-stu-id="2b9a7-257">See</span></span>|  
|--------|---------|  
|<span data-ttu-id="2b9a7-258">Odczytać zawartość pliku o wartościach rozdzielanych</span><span class="sxs-lookup"><span data-stu-id="2b9a7-258">Read from a delimited file</span></span>|[<span data-ttu-id="2b9a7-259">Instrukcje: odczyt z rozdzielonych przecinkami plików testowych</span><span class="sxs-lookup"><span data-stu-id="2b9a7-259">How to: Read From Comma-Delimited Text Files</span></span>](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-comma-delimited-text-files.md)|  
|<span data-ttu-id="2b9a7-260">Odczytać zawartość pliku z wartościami o stałej szerokości</span><span class="sxs-lookup"><span data-stu-id="2b9a7-260">Read from a fixed-width file</span></span>|[<span data-ttu-id="2b9a7-261">Instrukcje: odczyt z plików testowych o stałej szerokości</span><span class="sxs-lookup"><span data-stu-id="2b9a7-261">How to: Read From Fixed-width Text Files</span></span>](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-fixed-width-text-files.md)|  
  
   
  
## Examples  
 <span data-ttu-id="2b9a7-262">W tym przykładzie użyto `ErrorLineNumber` właściwość, aby wyświetlić lokalizację wiersza, powodując bieżącego <xref:Microsoft.VisualBasic.FileIO.MalformedLineException> wyjątku.</span><span class="sxs-lookup"><span data-stu-id="2b9a7-262">This example uses the `ErrorLineNumber` property to display the location of the line causing the current <xref:Microsoft.VisualBasic.FileIO.MalformedLineException> exception.</span></span>  
  
 [!code-vb[VbVbalrTextFieldParser#3](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrTextFieldParser/VB/Class1.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFieldParser(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="FieldWidths">
      <MemberSignature Language="C#" Value="public int[] FieldWidths { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32[] FieldWidths" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.FileIO.TextFieldParser.FieldWidths" />
      <MemberSignature Language="VB.NET" Value="Public Property FieldWidths As Integer()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;int&gt; ^ FieldWidths { cli::array &lt;int&gt; ^ get(); void set(cli::array &lt;int&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.FieldWidths : int[] with get, set" Usage="Microsoft.VisualBasic.FileIO.TextFieldParser.FieldWidths" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2b9a7-263">Określa szerokość każdej kolumny w pliku tekstowym analizowana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b9a7-263">Denotes the width of each column in the text file being parsed.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2b9a7-264">Tablicę liczb całkowitych, który zawiera szerokość każdej kolumny w pliku tekstowym, które są analizowane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b9a7-264">An integer array that contains the width of each column in the text file that is being parsed.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b9a7-265">Właściwość ta ma znaczenie tylko wtedy, gdy <xref:Microsoft.VisualBasic.FileIO.TextFieldParser.TextFieldType%2A> właściwość jest ustawiona na `FieldType.FixedWidth`.</span><span class="sxs-lookup"><span data-stu-id="2b9a7-265">This property is meaningful only if the <xref:Microsoft.VisualBasic.FileIO.TextFieldParser.TextFieldType%2A> property is set to `FieldType.FixedWidth`.</span></span> <span data-ttu-id="2b9a7-266">Jeśli ostatni wpis w tablicy jest mniejsza lub równa zero, pole będzie traktowana jako o zmiennej szerokości.</span><span class="sxs-lookup"><span data-stu-id="2b9a7-266">If the last entry in the array is less than or equal to zero, the field is assumed to be of variable width.</span></span>  
  
 <span data-ttu-id="2b9a7-267"><xref:Microsoft.VisualBasic.FileIO.TextFieldParser.SetFieldWidths%2A> Metodę można również ustawić szerokościami pól.</span><span class="sxs-lookup"><span data-stu-id="2b9a7-267">The <xref:Microsoft.VisualBasic.FileIO.TextFieldParser.SetFieldWidths%2A> method can also be used to set field widths.</span></span>  
  
 <span data-ttu-id="2b9a7-268">W poniższej tabeli wymieniono przykłady zadań obejmujących `FieldWidths` właściwości.</span><span class="sxs-lookup"><span data-stu-id="2b9a7-268">The following table lists examples of tasks involving the `FieldWidths` property.</span></span>  
  
|<span data-ttu-id="2b9a7-269">Do</span><span class="sxs-lookup"><span data-stu-id="2b9a7-269">To</span></span>|<span data-ttu-id="2b9a7-270">Zobacz</span><span class="sxs-lookup"><span data-stu-id="2b9a7-270">See</span></span>|  
|--------|---------|  
|<span data-ttu-id="2b9a7-271">Odczyt z plików testowych o stałej szerokości</span><span class="sxs-lookup"><span data-stu-id="2b9a7-271">Read from a fixed-width text file</span></span>|[<span data-ttu-id="2b9a7-272">Instrukcje: odczyt z plików testowych o stałej szerokości</span><span class="sxs-lookup"><span data-stu-id="2b9a7-272">How to: Read From Fixed-width Text Files</span></span>](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-fixed-width-text-files.md)|  
  
   
  
## Examples  
 <span data-ttu-id="2b9a7-273">W tym przykładzie odczytuje plik `ParserText.txt`, określenie szerokości; pierwsza kolumna jest 5 znaki dwubajtowe, drugi to 10, trzecia będzie 11 i czwarta to o zmiennej szerokości</span><span class="sxs-lookup"><span data-stu-id="2b9a7-273">This example reads the file `ParserText.txt`, specifying the widths; the first column is 5 characters wide, the second is 10, the third is 11, and the fourth is of variable width</span></span>  
  
 [!code-vb[VbVbalrTextFieldParser#16](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrTextFieldParser/VB/Class1.vb#16)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="2b9a7-274">Wartość szerokości, w dowolnym miejscu innym niż ostatni wpis w tablicy jest mniejsza niż lub równy zeru.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b9a7-274">A width value in any location other than the last entry of the array is less than or equal to zero.</span>
          </span>
        </exception>
        <altmember cref="M:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFieldParser(System.String)" />
        <altmember cref="T:Microsoft.VisualBasic.FileIO.FieldType" />
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~TextFieldParser ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileIO.TextFieldParser.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!TextFieldParser ()" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; unit" Usage="textFieldParser.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="2b9a7-275">Umożliwia <see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" /> obiektu próbę zwolnić zasoby i wykonywać inne operacje oczyszczania, zanim go jest odzyskiwane przez wyrzucanie elementów bezużytecznych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b9a7-275">Allows the <see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" /> object to attempt to free resources and perform other cleanup operations before it is reclaimed by garbage collection.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFieldParser(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="HasFieldsEnclosedInQuotes">
      <MemberSignature Language="C#" Value="public bool HasFieldsEnclosedInQuotes { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasFieldsEnclosedInQuotes" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.FileIO.TextFieldParser.HasFieldsEnclosedInQuotes" />
      <MemberSignature Language="VB.NET" Value="Public Property HasFieldsEnclosedInQuotes As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasFieldsEnclosedInQuotes { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.HasFieldsEnclosedInQuotes : bool with get, set" Usage="Microsoft.VisualBasic.FileIO.TextFieldParser.HasFieldsEnclosedInQuotes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2b9a7-276">Wskazuje, czy pola są ujęte w znaki cudzysłowu, gdy jest analizowana rozdzielonym pliku.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b9a7-276">Denotes whether fields are enclosed in quotation marks when a delimited file is being parsed.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2b9a7-277">
            <see langword="True" /> Jeśli pola są ujęte w znaki cudzysłowu; w przeciwnym razie <see langword="False" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b9a7-277">
              <see langword="True" /> if fields are enclosed in quotation marks; otherwise, <see langword="False" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b9a7-278">To jest Zaawansowany element członkowski; go nie są wyświetlane w IntelliSense dopóki nie zostanie kliknięta **wszystkich** kartę.</span><span class="sxs-lookup"><span data-stu-id="2b9a7-278">This is an advanced member; it does not show in IntelliSense unless you click the **All** tab.</span></span>  
  
 <span data-ttu-id="2b9a7-279">Jeśli właściwość jest `True`, analizator założono, że pola są ujęte w znaki cudzysłowu ("") i może zawierać końce wierszy.</span><span class="sxs-lookup"><span data-stu-id="2b9a7-279">If the property is `True`, the parser assumes that fields are enclosed in quotation marks (" ") and may contain line endings.</span></span>  
  
 <span data-ttu-id="2b9a7-280">Jeśli pole jest ujęta w znaki cudzysłowu, na przykład `abc, "field2a,field2b", field3` i ta właściwość jest `True`, następnie cały tekst ujęta w znaki cudzysłowu zostaną zwrócone, ponieważ jest; w tym przykładzie zwróci `abc|field2a,field2b|field3`.</span><span class="sxs-lookup"><span data-stu-id="2b9a7-280">If a field is enclosed in quotation marks, for example, `abc, "field2a,field2b", field3` and this property is `True`, then all text enclosed in quotation marks will be returned as is; this example would return `abc|field2a,field2b|field3`.</span></span> <span data-ttu-id="2b9a7-281">Ustawienie tej właściwości na `False` czyniłyby w tym przykładzie zwracany `abc|"field2a|field2b"|field3`.</span><span class="sxs-lookup"><span data-stu-id="2b9a7-281">Setting this property to `False` would make this example return `abc|"field2a|field2b"|field3`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2b9a7-282">W tym przykładzie `HasFieldsEnclosedInQuotes` właściwości `True` dla `myReader`.</span><span class="sxs-lookup"><span data-stu-id="2b9a7-282">This example sets the `HasFieldsEnclosedInQuotes` property to `True` for `myReader`.</span></span>  
  
 [!code-vb[VbVbalrTextFieldParser#18](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrTextFieldParser/VB/Class1.vb#18)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFieldParser(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="LineNumber">
      <MemberSignature Language="C#" Value="public long LineNumber { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 LineNumber" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.FileIO.TextFieldParser.LineNumber" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LineNumber As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long LineNumber { long get(); };" />
      <MemberSignature Language="F#" Value="member this.LineNumber : int64" Usage="Microsoft.VisualBasic.FileIO.TextFieldParser.LineNumber" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2b9a7-283">Zwraca bieżący numer wiersza, lub zwraca wartość -1, jeśli nie więcej znaków są dostępne w strumieniu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b9a7-283">Returns the current line number, or returns -1 if no more characters are available in the stream.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2b9a7-284">Numer bieżącego wiersza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b9a7-284">The current line number.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b9a7-285">To jest Zaawansowany element członkowski; go nie są wyświetlane w IntelliSense dopóki nie zostanie kliknięta **wszystkich** kartę.</span><span class="sxs-lookup"><span data-stu-id="2b9a7-285">This is an advanced member; it does not show in IntelliSense unless you click the **All** tab.</span></span>  
  
 <span data-ttu-id="2b9a7-286">Puste wiersze i komentarze nie są ignorowane podczas określania numer wiersza.</span><span class="sxs-lookup"><span data-stu-id="2b9a7-286">Blank lines and comments are not ignored when determining the line number.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2b9a7-287">W tym przykładzie wyszukuje nazwy "Kowalski" w pliku tekstowym i raportowanie wiersze, które nastąpi to w.</span><span class="sxs-lookup"><span data-stu-id="2b9a7-287">This example searches for the name "Jones" in the text file and reports what line(s) it occurs on.</span></span>  
  
 [!code-vb[VbVbalrTextFieldParser#11](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrTextFieldParser/VB/Class1.vb#11)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFieldParser(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="PeekChars">
      <MemberSignature Language="C#" Value="public string PeekChars (int numberOfChars);" />
      <MemberSignature Language="ILAsm" Value=".method public instance string PeekChars(int32 numberOfChars) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileIO.TextFieldParser.PeekChars(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function PeekChars (numberOfChars As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ PeekChars(int numberOfChars);" />
      <MemberSignature Language="F#" Value="member this.PeekChars : int -&gt; string" Usage="textFieldParser.PeekChars numberOfChars" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="numberOfChars" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="numberOfChars">
          <span data-ttu-id="2b9a7-288">
            <see langword="Int32" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b9a7-288">
              <see langword="Int32" />.</span>
          </span>
          <span data-ttu-id="2b9a7-289">Liczba znaków do odczytania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b9a7-289">Number of characters to read.</span>
          </span>
          <span data-ttu-id="2b9a7-290">Wymagana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b9a7-290">Required.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2b9a7-291">Odczytuje określoną liczbę znaków, bez przesuwania kursora.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b9a7-291">Reads the specified number of characters without advancing the cursor.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2b9a7-292">Ciąg zawierający określoną liczbę znaków do odczytu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b9a7-292">A string that contains the specified number of characters read.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b9a7-293">`numberOfChars` Wartość musi być mniejsza niż całkowita liczba znaków w wierszu.</span><span class="sxs-lookup"><span data-stu-id="2b9a7-293">The `numberOfChars` value must be less than the total number of characters in the line.</span></span> <span data-ttu-id="2b9a7-294">Jeśli nie jest dostępna, ciąg zwracany przez `PeekChars` zostanie obcięta długość wiersza.</span><span class="sxs-lookup"><span data-stu-id="2b9a7-294">If it is not, the string returned by `PeekChars` will be truncated to the length of the line.</span></span>  
  
 <span data-ttu-id="2b9a7-295">Puste wiersze są ignorowane.</span><span class="sxs-lookup"><span data-stu-id="2b9a7-295">Blank lines are ignored.</span></span>  
  
 <span data-ttu-id="2b9a7-296">Znaki końca wiersza nie są zwracane.</span><span class="sxs-lookup"><span data-stu-id="2b9a7-296">End-of-line characters are not returned.</span></span>  
  
 <span data-ttu-id="2b9a7-297">`PeekChars` Metoda wykonuje nie analizowania; znak końca wiersza, w ramach pola z rozdzielaną wartością jest interpretowany jako rzeczywisty końca wiersza.</span><span class="sxs-lookup"><span data-stu-id="2b9a7-297">The `PeekChars` method performs no parsing; an end-of- line character within a delimited field is interpreted as the actual end of the line.</span></span>  
  
 <span data-ttu-id="2b9a7-298">W poniższej tabeli wymieniono przykłady zadań obejmujących `PeekChars` metody.</span><span class="sxs-lookup"><span data-stu-id="2b9a7-298">The following table lists examples of tasks involving the `PeekChars` method.</span></span>  
  
|<span data-ttu-id="2b9a7-299">Do</span><span class="sxs-lookup"><span data-stu-id="2b9a7-299">To</span></span>|<span data-ttu-id="2b9a7-300">Zobacz</span><span class="sxs-lookup"><span data-stu-id="2b9a7-300">See</span></span>|  
|--------|---------|  
|<span data-ttu-id="2b9a7-301">Przed jego analizowanie określić format pola</span><span class="sxs-lookup"><span data-stu-id="2b9a7-301">Determine the format of a field before parsing it</span></span>|[<span data-ttu-id="2b9a7-302">Instrukcje: odczyt z plików tekstowych w wielu formatach</span><span class="sxs-lookup"><span data-stu-id="2b9a7-302">How to: Read From Text Files with Multiple Formats</span></span>](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-text-files-with-multiple-formats.md)|  
  
   
  
## Examples  
 <span data-ttu-id="2b9a7-303">W tym przykładzie użyto `PeekChars` do znalezienia końca danych i zatrzymać, w tym momencie podczas analizowania pliku.</span><span class="sxs-lookup"><span data-stu-id="2b9a7-303">This example uses `PeekChars` to find the end of the data and stop parsing the file at that point.</span></span>  
  
 [!code-vb[VbVbalrTextFieldParser#8](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrTextFieldParser/VB/Class1.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="2b9a7-304">
            <paramref name="numberOfChars" /> jest mniejsza niż 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b9a7-304">
              <paramref name="numberOfChars" /> is less than 0.</span>
          </span>
        </exception>
        <altmember cref="M:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFieldParser(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="ReadFields">
      <MemberSignature Language="C#" Value="public string[] ReadFields ();" />
      <MemberSignature Language="ILAsm" Value=".method public instance string[] ReadFields() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileIO.TextFieldParser.ReadFields" />
      <MemberSignature Language="VB.NET" Value="Public Function ReadFields () As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::String ^&gt; ^ ReadFields();" />
      <MemberSignature Language="F#" Value="member this.ReadFields : unit -&gt; string[]" Usage="textFieldParser.ReadFields " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="2b9a7-305">Odczytuje wszystkie pola w bieżącym wierszu zwraca je jako tablicę ciągów, a następnie przesuwa kursor do następnego wiersza zawierającego dane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b9a7-305">Reads all fields on the current line, returns them as an array of strings, and advances the cursor to the next line containing data.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2b9a7-306">Tablica ciągów zawierająca wartości pól dla bieżącego wiersza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b9a7-306">An array of strings that contains field values for the current line.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b9a7-307">Aby umożliwić użytkownikom analizowanie plików tekstowych w wielu formatach `ReadFields` metoda sprawdza, czy wartości `TextFieldType`, `Delimiters`, i `FieldWidths`, jeśli są one określone, każdym razem jest wywoływana.</span><span class="sxs-lookup"><span data-stu-id="2b9a7-307">In order to allow users to parse text files in multiple formats, the `ReadFields` method examines the values of `TextFieldType`, `Delimiters`, and `FieldWidths`, if they are specified, each time it is called.</span></span> <span data-ttu-id="2b9a7-308">Użytkownicy muszą poprawnie skonfigurować `TextFieldType` i `FieldWidths` lub `Delimiters` właściwości, zgodnie z potrzebami.</span><span class="sxs-lookup"><span data-stu-id="2b9a7-308">Users need to correctly configure the `TextFieldType` and `FieldWidths` or `Delimiters` properties, as appropriate.</span></span> <span data-ttu-id="2b9a7-309">Jeśli `TextFieldType` ustawiono `Delimited`, i `Delimiters` nie jest ustawiona, lub jeśli `TextFieldType` jest ustawiona na `FixedWidth` i `FieldWidths`, zgłaszany jest wyjątek.</span><span class="sxs-lookup"><span data-stu-id="2b9a7-309">If `TextFieldType` is set to `Delimited`, and `Delimiters` is not set, or if `TextFieldType` is set to `FixedWidth` and `FieldWidths`, an exception is thrown.</span></span>  
  
 <span data-ttu-id="2b9a7-310">Jeśli `ReadFields` napotka puste wiersze są one pomijane i zwracany jest następny wiersz nie jest pusty.</span><span class="sxs-lookup"><span data-stu-id="2b9a7-310">If `ReadFields` encounters blank lines, they are skipped and the next non-blank line is returned.</span></span>  
  
 <span data-ttu-id="2b9a7-311">Jeśli `ReadFields` metody nie można przeanalizować bieżącego wiersza, zgłasza wyjątek, a nie przenosi do następnego wiersza.</span><span class="sxs-lookup"><span data-stu-id="2b9a7-311">If the `ReadFields` method cannot parse the current line, it raises an exception and does not move to the next line.</span></span> <span data-ttu-id="2b9a7-312">Pozwoli to aplikacji w taki sposób spróbować ponownie przeanalizować wiersza.</span><span class="sxs-lookup"><span data-stu-id="2b9a7-312">This enables your application to attempt to parse the line again.</span></span>  
  
 <span data-ttu-id="2b9a7-313">W poniższej tabeli wymieniono przykłady zadań obejmujących `ReadFields` metody.</span><span class="sxs-lookup"><span data-stu-id="2b9a7-313">The following table lists examples of tasks involving the `ReadFields` method.</span></span>  
  
|<span data-ttu-id="2b9a7-314">Do</span><span class="sxs-lookup"><span data-stu-id="2b9a7-314">To</span></span>|<span data-ttu-id="2b9a7-315">Zobacz</span><span class="sxs-lookup"><span data-stu-id="2b9a7-315">See</span></span>|  
|--------|---------|  
|<span data-ttu-id="2b9a7-316">Odczytać zawartość pliku o wartościach rozdzielanych</span><span class="sxs-lookup"><span data-stu-id="2b9a7-316">Read from a delimited file</span></span>|[<span data-ttu-id="2b9a7-317">Instrukcje: odczyt z rozdzielonych przecinkami plików testowych</span><span class="sxs-lookup"><span data-stu-id="2b9a7-317">How to: Read From Comma-Delimited Text Files</span></span>](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-comma-delimited-text-files.md)|  
|<span data-ttu-id="2b9a7-318">Odczytać zawartość pliku z wartościami o stałej szerokości</span><span class="sxs-lookup"><span data-stu-id="2b9a7-318">Read from a fixed-width file</span></span>|[<span data-ttu-id="2b9a7-319">Instrukcje: odczyt z plików testowych o stałej szerokości</span><span class="sxs-lookup"><span data-stu-id="2b9a7-319">How to: Read From Fixed-width Text Files</span></span>](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-fixed-width-text-files.md)|  
  
   
  
## Examples  
 <span data-ttu-id="2b9a7-320">W tym przykładzie użyto `ReadFields` metodę, aby odczytać z pliku rozdzielanego przecinkami `ParserText.txt`.</span><span class="sxs-lookup"><span data-stu-id="2b9a7-320">This example uses the `ReadFields` method to read from the comma-delimited file `ParserText.txt`.</span></span> <span data-ttu-id="2b9a7-321">W przykładzie polecenie zapisuje pola, które mają `Testfile.txt`.</span><span class="sxs-lookup"><span data-stu-id="2b9a7-321">The example writes the fields to `Testfile.txt`.</span></span>  
  
 [!code-vb[VbVbalrTextFieldParser#2](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrTextFieldParser/VB/Class1.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:Microsoft.VisualBasic.FileIO.MalformedLineException">
          <span data-ttu-id="2b9a7-322">Nie można przeanalizować pola, używając określonego formatu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b9a7-322">A field cannot be parsed by using the specified format.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">
          <span data-ttu-id="2b9a7-323">Powiązane wyliczenie: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b9a7-323">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</span>
          </span>
        </permission>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="2b9a7-324">Powiązane wyliczenie: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b9a7-324">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" />.</span>
          </span>
        </permission>
        <altmember cref="M:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFieldParser(System.String)" />
        <altmember cref="P:Microsoft.VisualBasic.FileIO.TextFieldParser.TextFieldType" />
        <altmember cref="P:Microsoft.VisualBasic.FileIO.TextFieldParser.FieldWidths" />
        <altmember cref="P:Microsoft.VisualBasic.FileIO.TextFieldParser.Delimiters" />
        <altmember cref="M:Microsoft.VisualBasic.FileIO.TextFieldParser.ReadLine" />
      </Docs>
    </Member>
    <Member MemberName="ReadLine">
      <MemberSignature Language="C#" Value="public string ReadLine ();" />
      <MemberSignature Language="ILAsm" Value=".method public instance string ReadLine() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileIO.TextFieldParser.ReadLine" />
      <MemberSignature Language="VB.NET" Value="Public Function ReadLine () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ReadLine();" />
      <MemberSignature Language="F#" Value="member this.ReadLine : unit -&gt; string" Usage="textFieldParser.ReadLine " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="2b9a7-325">Zwraca bieżący wiersz w postaci ciągu, a następnie przesuwa kursor do następnego wiersza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b9a7-325">Returns the current line as a string and advances the cursor to the next line.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2b9a7-326">Bieżący wiersz z pliku lub strumienia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b9a7-326">The current line from the file or stream.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b9a7-327">`ReadLine` Metoda wykonuje nie analizowania; znak końca wiersza, w ramach pola z rozdzielaną wartością jest interpretowany jako rzeczywisty końca wiersza.</span><span class="sxs-lookup"><span data-stu-id="2b9a7-327">The `ReadLine` method performs no parsing; an end-of-line character within a delimited field is interpreted as the actual end of the line.</span></span>  
  
 <span data-ttu-id="2b9a7-328">`Nothing` jest zwracany, jeśli osiągnięty zostanie koniec pliku.</span><span class="sxs-lookup"><span data-stu-id="2b9a7-328">`Nothing` is returned if the end of the file is reached.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2b9a7-329">W tym przykładzie odczytuje plik `ParserText.txt` i zapisuje go w `Testfile.txt`.</span><span class="sxs-lookup"><span data-stu-id="2b9a7-329">This example reads through the file `ParserText.txt` and writes it to `Testfile.txt`.</span></span>  
  
 [!code-vb[VbVbalrTextFieldParser#15](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrTextFieldParser/VB/Class1.vb#15)]  
  
 <span data-ttu-id="2b9a7-330">Jeśli `Testfile.txt` nie istnieje, jest tworzony przez `WriteAllText` metody.</span><span class="sxs-lookup"><span data-stu-id="2b9a7-330">If `Testfile.txt` does not exist, it is created by the `WriteAllText` method.</span></span>  
  
 <span data-ttu-id="2b9a7-331">Ten przykład Przepisuje pola jako pojedynczy ciąg; zapewnienie każdego wiersza, wyświetlanie w osobnym wierszu w pliku docelowym `VbCrLf` znak powinna zostać dołączona na końcu każdego wiersza.</span><span class="sxs-lookup"><span data-stu-id="2b9a7-331">This example writes the fields as a single string; to have each line display on its own line in the destination file, a `VbCrLf` character should be appended at the end of each line.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFieldParser(System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.FileIO.TextFieldParser.ReadFields" />
        <altmember cref="M:Microsoft.VisualBasic.FileIO.TextFieldParser.ReadToEnd" />
      </Docs>
    </Member>
    <Member MemberName="ReadToEnd">
      <MemberSignature Language="C#" Value="public string ReadToEnd ();" />
      <MemberSignature Language="ILAsm" Value=".method public instance string ReadToEnd() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileIO.TextFieldParser.ReadToEnd" />
      <MemberSignature Language="VB.NET" Value="Public Function ReadToEnd () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ReadToEnd();" />
      <MemberSignature Language="F#" Value="member this.ReadToEnd : unit -&gt; string" Usage="textFieldParser.ReadToEnd " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="2b9a7-332">Odczytuje w pozostałej części pliku tekstowego i zwraca je jako ciąg.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b9a7-332">Reads the remainder of the text file and returns it as a string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2b9a7-333">Pozostały tekst z pliku lub strumienia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b9a7-333">The remaining text from the file or stream.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b9a7-334">To jest Zaawansowany element członkowski; go nie są wyświetlane w IntelliSense dopóki nie zostanie kliknięta **wszystkich** kartę.</span><span class="sxs-lookup"><span data-stu-id="2b9a7-334">This is an advanced member; it does not show in IntelliSense unless you click the **All** tab.</span></span>  
  
 <span data-ttu-id="2b9a7-335">Jeśli nie ma nic więcej do odczytu, ponieważ osiągnięto koniec pliku, `Nothing` jest zwracana.</span><span class="sxs-lookup"><span data-stu-id="2b9a7-335">If there is nothing more to read because the end of the file has been reached, `Nothing` is returned.</span></span>  
  
 <span data-ttu-id="2b9a7-336">`ReadToEnd` Metoda pomija puste wiersze i komentarze.</span><span class="sxs-lookup"><span data-stu-id="2b9a7-336">The `ReadToEnd` method does not ignore blank lines and comments.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2b9a7-337">W tym przykładzie użyto `ReadToEnd` metodę, aby odczytać cały plik `ParserText.txt` i zapisz go w pliku `Testfile.txt`.</span><span class="sxs-lookup"><span data-stu-id="2b9a7-337">This example uses the `ReadToEnd` method to read the entire file `ParserText.txt` and write it to the file `Testfile.txt`.</span></span>  
  
 [!code-vb[VbVbalrTextFieldParser#10](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrTextFieldParser/VB/Class1.vb#10)]  
  
 <span data-ttu-id="2b9a7-338">Jeśli `Testfile.txt` nie istnieje, jest tworzony przez `WriteAllText` metody.</span><span class="sxs-lookup"><span data-stu-id="2b9a7-338">If `Testfile.txt` does not exist, it is created by the `WriteAllText` method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFieldParser(System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.FileIO.TextFieldParser.ReadFields" />
        <altmember cref="M:Microsoft.VisualBasic.FileIO.TextFieldParser.ReadLine" />
      </Docs>
    </Member>
    <Member MemberName="SetDelimiters">
      <MemberSignature Language="C#" Value="public void SetDelimiters (params string[] delimiters);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void SetDelimiters(string[] delimiters) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileIO.TextFieldParser.SetDelimiters(System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetDelimiters (ParamArray delimiters As String())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetDelimiters(... cli::array &lt;System::String ^&gt; ^ delimiters);" />
      <MemberSignature Language="F#" Value="member this.SetDelimiters : string[] -&gt; unit" Usage="textFieldParser.SetDelimiters delimiters" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="delimiters" Type="System.String[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="delimiters">
          <span data-ttu-id="2b9a7-339">Tablica typu <see langword="String" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b9a7-339">Array of type <see langword="String" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2b9a7-340">Określa ograniczniki dla czytelnika do określonej wartości i ustawia typ pola <see langword="Delimited" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b9a7-340">Sets the delimiters for the reader to the specified values, and sets the field type to <see langword="Delimited" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b9a7-341">Istniejącą zawartość elementu `Delimiters` właściwości są usuwane, gdy ta metoda jest ustawiona.</span><span class="sxs-lookup"><span data-stu-id="2b9a7-341">The existing contents of the `Delimiters` property are cleared when this method is set.</span></span>  
  
 <span data-ttu-id="2b9a7-342">Ta metoda umożliwia ustawienie ograniczniki bez tworzenia tablicy.</span><span class="sxs-lookup"><span data-stu-id="2b9a7-342">This method provides a way to set delimiters without creating an array.</span></span>  
  
 <span data-ttu-id="2b9a7-343">W poniższej tabeli przedstawiono przykład zadań, obejmujących `SetDelimiters` metody.</span><span class="sxs-lookup"><span data-stu-id="2b9a7-343">The following table lists an example of a task involving the `SetDelimiters` method.</span></span>  
  
|<span data-ttu-id="2b9a7-344">Do</span><span class="sxs-lookup"><span data-stu-id="2b9a7-344">To</span></span>|<span data-ttu-id="2b9a7-345">Zobacz</span><span class="sxs-lookup"><span data-stu-id="2b9a7-345">See</span></span>|  
|--------|---------|  
|<span data-ttu-id="2b9a7-346">Analizowanie pliku tekstowego</span><span class="sxs-lookup"><span data-stu-id="2b9a7-346">Parse a text file</span></span>|[<span data-ttu-id="2b9a7-347">Analizowanie plików tekstowych za pomocą obiektu TextFieldParser</span><span class="sxs-lookup"><span data-stu-id="2b9a7-347">Parsing Text Files with the TextFieldParser Object</span></span>](~/docs/visual-basic/developing-apps/programming/drives-directories-files/parsing-text-files-with-the-textfieldparser-object.md)|  
  
   
  
## Examples  
 <span data-ttu-id="2b9a7-348">W tym przykładzie otwiera analizatora pola tekstowe i definiuje ogranicznik jako `vbTab`.</span><span class="sxs-lookup"><span data-stu-id="2b9a7-348">This example opens a text field parser and defines the delimiter as `vbTab`.</span></span>  
  
 [!code-vb[VbVbalrTextFieldParser#4](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrTextFieldParser/VB/Class1.vb#4)]  
  
 <span data-ttu-id="2b9a7-349">Zastąp ścieżkę `C:\logs\test.log` ze ścieżką i nazwą pliku chcesz przeanalizować.</span><span class="sxs-lookup"><span data-stu-id="2b9a7-349">Replace the path `C:\logs\test.log` with the path and name of the file you wish to parse.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="2b9a7-350">Ogranicznik jest o zerowej długości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b9a7-350">A delimiter is zero-length.</span>
          </span>
        </exception>
        <altmember cref="M:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFieldParser(System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.FileIO.TextFieldParser.SetFieldWidths(System.Int32[])" />
      </Docs>
    </Member>
    <Member MemberName="SetFieldWidths">
      <MemberSignature Language="C#" Value="public void SetFieldWidths (params int[] fieldWidths);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void SetFieldWidths(int32[] fieldWidths) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileIO.TextFieldParser.SetFieldWidths(System.Int32[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetFieldWidths (ParamArray fieldWidths As Integer())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetFieldWidths(... cli::array &lt;int&gt; ^ fieldWidths);" />
      <MemberSignature Language="F#" Value="member this.SetFieldWidths : int[] -&gt; unit" Usage="textFieldParser.SetFieldWidths fieldWidths" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fieldWidths" Type="System.Int32[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="fieldWidths">
          <span data-ttu-id="2b9a7-351">Tablica <see langword="Integer" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b9a7-351">Array of <see langword="Integer" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2b9a7-352">Określa ograniczniki dla czytnika do określonej wartości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b9a7-352">Sets the delimiters for the reader to the specified values.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b9a7-353">Istniejącą zawartość elementu `Delimiters` właściwości są usuwane, gdy ta opcja jest ustawiona.</span><span class="sxs-lookup"><span data-stu-id="2b9a7-353">The existing contents of the `Delimiters` property are cleared when this is set.</span></span>  
  
 <span data-ttu-id="2b9a7-354">Ta metoda umożliwia ustawienie ograniczniki bez tworzenia tablicy.</span><span class="sxs-lookup"><span data-stu-id="2b9a7-354">This method provides a way to set delimiters without creating an array.</span></span>  
  
 <span data-ttu-id="2b9a7-355">W poniższej tabeli przedstawiono przykładowe zadania obejmujące `SetFieldWidths` metody.</span><span class="sxs-lookup"><span data-stu-id="2b9a7-355">The following table lists example of tasks involving the `SetFieldWidths` method.</span></span>  
  
|<span data-ttu-id="2b9a7-356">Do</span><span class="sxs-lookup"><span data-stu-id="2b9a7-356">To</span></span>|<span data-ttu-id="2b9a7-357">Zobacz</span><span class="sxs-lookup"><span data-stu-id="2b9a7-357">See</span></span>|  
|--------|---------|  
|<span data-ttu-id="2b9a7-358">Analizowanie pliku tekstowego.</span><span class="sxs-lookup"><span data-stu-id="2b9a7-358">Parse a text file.</span></span>|[<span data-ttu-id="2b9a7-359">Analizowanie plików tekstowych za pomocą obiektu TextFieldParser</span><span class="sxs-lookup"><span data-stu-id="2b9a7-359">Parsing Text Files with the TextFieldParser Object</span></span>](~/docs/visual-basic/developing-apps/programming/drives-directories-files/parsing-text-files-with-the-textfieldparser-object.md)|  
  
   
  
## Examples  
 <span data-ttu-id="2b9a7-360">W tym przykładzie otwiera analizatora pole tekstowe i definiuje szerokość pola jako `5`.</span><span class="sxs-lookup"><span data-stu-id="2b9a7-360">This example opens a text-field parser and defines the field width as `5`.</span></span>  
  
 [!code-vb[VbVbalrTextFieldParser#12](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrTextFieldParser/VB/Class1.vb#12)]  
  
 <span data-ttu-id="2b9a7-361">Zastąp ścieżkę `C:\logs\test.log` ze ścieżką i nazwą pliku chcesz przeanalizować.</span><span class="sxs-lookup"><span data-stu-id="2b9a7-361">Replace the path `C:\logs\test.log` with the path and name of the file you wish to parse.</span></span>  
  
 <span data-ttu-id="2b9a7-362">W poniższym przykładzie otwiera analizatora pole tekstowe i definiuje szerokościami pól jako `5`, `10`, a zmienna.</span><span class="sxs-lookup"><span data-stu-id="2b9a7-362">The following example opens a text-field parser and defines the field widths as `5`, `10`, and variable.</span></span>  
  
 [!code-vb[VbVbalrTextFieldParser#13](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrTextFieldParser/VB/Class1.vb#13)]  
  
 <span data-ttu-id="2b9a7-363">Zastąp ścieżkę `C:\logs\test.log` ze ścieżką i nazwą pliku chcesz przeanalizować.</span><span class="sxs-lookup"><span data-stu-id="2b9a7-363">Replace the path `C:\logs\test.log` with the path and name of the file you wish to parse.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFieldParser(System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.FileIO.TextFieldParser.SetDelimiters(System.String[])" />
      </Docs>
    </Member>
    <Member MemberName="TextFieldType">
      <MemberSignature Language="C#" Value="public Microsoft.VisualBasic.FileIO.FieldType TextFieldType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.VisualBasic.FileIO.FieldType TextFieldType" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.FileIO.TextFieldParser.TextFieldType" />
      <MemberSignature Language="VB.NET" Value="Public Property TextFieldType As FieldType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::VisualBasic::FileIO::FieldType TextFieldType { Microsoft::VisualBasic::FileIO::FieldType get(); void set(Microsoft::VisualBasic::FileIO::FieldType value); };" />
      <MemberSignature Language="F#" Value="member this.TextFieldType : Microsoft.VisualBasic.FileIO.FieldType with get, set" Usage="Microsoft.VisualBasic.FileIO.TextFieldParser.TextFieldType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.FileIO.FieldType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2b9a7-364">Wskazuje, czy jest rozdzielany plik, który ma być analizowany, lub o stałej szerokości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b9a7-364">Indicates whether the file to be parsed is delimited or fixed-width.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2b9a7-365">A <see cref="P:Microsoft.VisualBasic.FileIO.TextFieldParser.TextFieldType" /> wartość wskazującą, czy jest rozdzielany plik, który ma być analizowany, lub o stałej szerokości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b9a7-365">A <see cref="P:Microsoft.VisualBasic.FileIO.TextFieldParser.TextFieldType" /> value that indicates whether the file to be parsed is delimited or fixed-width.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b9a7-366">Wartość domyślna tej właściwości jest lista.</span><span class="sxs-lookup"><span data-stu-id="2b9a7-366">The default value of this property is delimited.</span></span>  
  
 <span data-ttu-id="2b9a7-367">W poniższej tabeli wymieniono przykłady zadań obejmujących `TextFieldType` właściwości.</span><span class="sxs-lookup"><span data-stu-id="2b9a7-367">The following table lists examples of tasks involving the `TextFieldType` property.</span></span>  
  
|<span data-ttu-id="2b9a7-368">Do</span><span class="sxs-lookup"><span data-stu-id="2b9a7-368">To</span></span>|<span data-ttu-id="2b9a7-369">Zobacz</span><span class="sxs-lookup"><span data-stu-id="2b9a7-369">See</span></span>|  
|--------|---------|  
|<span data-ttu-id="2b9a7-370">Odczyt z pliku tekstowego z separatorami</span><span class="sxs-lookup"><span data-stu-id="2b9a7-370">Read from a delimited text file</span></span>|[<span data-ttu-id="2b9a7-371">Instrukcje: odczyt z rozdzielonych przecinkami plików testowych</span><span class="sxs-lookup"><span data-stu-id="2b9a7-371">How to: Read From Comma-Delimited Text Files</span></span>](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-comma-delimited-text-files.md)|  
|<span data-ttu-id="2b9a7-372">Odczyt z plików testowych o stałej szerokości</span><span class="sxs-lookup"><span data-stu-id="2b9a7-372">Read from a fixed-width text file</span></span>|[<span data-ttu-id="2b9a7-373">Instrukcje: odczyt z plików testowych o stałej szerokości</span><span class="sxs-lookup"><span data-stu-id="2b9a7-373">How to: Read From Fixed-width Text Files</span></span>](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-fixed-width-text-files.md)|  
|<span data-ttu-id="2b9a7-374">Odczyt z pliku tekstowego w wielu formatach</span><span class="sxs-lookup"><span data-stu-id="2b9a7-374">Read from a text file with multiple formats</span></span>|[<span data-ttu-id="2b9a7-375">Instrukcje: odczyt z plików tekstowych w wielu formatach</span><span class="sxs-lookup"><span data-stu-id="2b9a7-375">How to: Read From Text Files with Multiple Formats</span></span>](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-text-files-with-multiple-formats.md)|  
  
   
  
## Examples  
 <span data-ttu-id="2b9a7-376">Ten przykład tworzy `TextFieldParser`, `FileReader`i określa je przecinkami.</span><span class="sxs-lookup"><span data-stu-id="2b9a7-376">This example creates a `TextFieldParser`, `FileReader`, and specifies that it is delimited.</span></span>  
  
 [!code-vb[VbVbalrTextFieldParser#19](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrTextFieldParser/VB/Class1.vb#19)]  
  
 <span data-ttu-id="2b9a7-377">Ten przykład tworzy `TextFieldParser`, `FileReader`i określa, że jest stałej szerokości.</span><span class="sxs-lookup"><span data-stu-id="2b9a7-377">This example creates a `TextFieldParser`, `FileReader`, and specifies that it is fixed-width.</span></span>  
  
 [!code-vb[VbVbalrTextFieldParser#20](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrTextFieldParser/VB/Class1.vb#20)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFieldParser(System.String)" />
        <altmember cref="T:Microsoft.VisualBasic.FileIO.FieldType" />
      </Docs>
    </Member>
    <Member MemberName="TrimWhiteSpace">
      <MemberSignature Language="C#" Value="public bool TrimWhiteSpace { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool TrimWhiteSpace" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.FileIO.TextFieldParser.TrimWhiteSpace" />
      <MemberSignature Language="VB.NET" Value="Public Property TrimWhiteSpace As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool TrimWhiteSpace { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.TrimWhiteSpace : bool with get, set" Usage="Microsoft.VisualBasic.FileIO.TextFieldParser.TrimWhiteSpace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2b9a7-378">Wskazuje, czy początkowe i końcowe biały powinny być usuwane z wartości pól.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b9a7-378">Indicates whether leading and trailing white space should be trimmed from field values.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2b9a7-379">
            <see langword="True" /> Jeśli początkowe i końcowe biały znak przycięcia z wartości pola. w przeciwnym razie <see langword="False" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b9a7-379">
              <see langword="True" /> if leading and trailing white space should be trimmed from field values; otherwise, <see langword="False" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b9a7-380">Wartość domyślna tej właściwości to `True`.</span><span class="sxs-lookup"><span data-stu-id="2b9a7-380">The default value for this property is `True`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2b9a7-381">Ten przykład tworzy `TextFieldParser`, `FileReader`i ustawia `TrimWhiteSpace` właściwość `True`.</span><span class="sxs-lookup"><span data-stu-id="2b9a7-381">This example creates a `TextFieldParser`, `FileReader`, and sets the `TrimWhiteSpace` property to `True`.</span></span>  
  
 [!code-vb[VbVbalrTextFieldParser#7](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrTextFieldParser/VB/Class1.vb#7)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFieldParser(System.String)" />
      </Docs>
    </Member>
  </Members>
</Type>