<Type Name="TextFieldParser" FullName="Microsoft.VisualBasic.FileIO.TextFieldParser">
  <Metadata><Meta Name="ms.openlocfilehash" Value="40e722f371b054098b8b460d1b9fba7c158b06db" /><Meta Name="ms.sourcegitcommit" Value="bc24a3ba616ee1df8b858f9400cae4f058ea3a7e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="06/19/2019" /><Meta Name="ms.locfileid" Value="67239208" /></Metadata><TypeSignature Language="C#" Value="public class TextFieldParser : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi TextFieldParser extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:Microsoft.VisualBasic.FileIO.TextFieldParser" />
  <TypeSignature Language="VB.NET" Value="Public Class TextFieldParser&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class TextFieldParser : IDisposable" />
  <TypeSignature Language="F#" Value="type TextFieldParser = class&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic</AssemblyName>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
    <AssemblyVersion>10.0.4.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="f3e3e-101">Udostępnia metody i właściwości do analizowania tekstu ze strukturą plików.</span><span class="sxs-lookup"><span data-stu-id="f3e3e-101">Provides methods and properties for parsing structured text files.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f3e3e-102">`TextFieldParser` Obiektu udostępnia metody i właściwości dla analizy strukturalne pliki tekstowe.</span><span class="sxs-lookup"><span data-stu-id="f3e3e-102">The `TextFieldParser` object provides methods and properties for parsing structured text files.</span></span> <span data-ttu-id="f3e3e-103">Podczas analizowania pliku tekstowego z `TextFieldParser` jest podobny do Iterowanie pliku tekstowego podczas `ReadFields` metoda do wyodrębniania pól tekstu jest podobna do dzielenia ciągów.</span><span class="sxs-lookup"><span data-stu-id="f3e3e-103">Parsing a text file with the `TextFieldParser` is similar to iterating over a text file, while the `ReadFields` method to extract fields of text is similar to splitting the strings.</span></span>  
  
 <span data-ttu-id="f3e3e-104">`TextFieldParser` Może przeanalizować dwa typy plików: rozdzielany lub o stałej szerokości.</span><span class="sxs-lookup"><span data-stu-id="f3e3e-104">The `TextFieldParser` can parse two types of files: delimited or fixed-width.</span></span> <span data-ttu-id="f3e3e-105">Niektóre właściwości, takie jak `Delimiters` i `HasFieldsEnclosedInQuotes` mają znaczenie tylko podczas pracy z plików, podczas gdy `FieldWidths` właściwość ma znaczenie tylko wtedy, gdy praca z plikami o stałej szerokości.</span><span class="sxs-lookup"><span data-stu-id="f3e3e-105">Some properties, such as `Delimiters` and `HasFieldsEnclosedInQuotes` are meaningful only when working with delimited files, while the `FieldWidths` property is meaningful only when working with fixed-width files.</span></span>  
  
 <span data-ttu-id="f3e3e-106">W poniższej tabeli przedstawiono przykłady zadań z obiektem `Microsoft.VisualBasic.FileIO.TextFieldParser`.</span><span class="sxs-lookup"><span data-stu-id="f3e3e-106">The following table lists examples of tasks involving the `Microsoft.VisualBasic.FileIO.TextFieldParser` object.</span></span>  
  
|<span data-ttu-id="f3e3e-107">Zadanie</span><span class="sxs-lookup"><span data-stu-id="f3e3e-107">To</span></span>|<span data-ttu-id="f3e3e-108">Zobacz</span><span class="sxs-lookup"><span data-stu-id="f3e3e-108">See</span></span>|  
|--------|---------|  
|<span data-ttu-id="f3e3e-109">Odczyt z pliku tekstowego z separatorami</span><span class="sxs-lookup"><span data-stu-id="f3e3e-109">Read from a delimited text file</span></span>|[<span data-ttu-id="f3e3e-110">Instrukcje: Odczyt z plików tekstowych rozdzielonych przecinkami</span><span class="sxs-lookup"><span data-stu-id="f3e3e-110">How to: Read From Comma-Delimited Text Files</span></span>](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-comma-delimited-text-files.md)|  
|<span data-ttu-id="f3e3e-111">Odczyt z plików testowych o stałej szerokości</span><span class="sxs-lookup"><span data-stu-id="f3e3e-111">Read from a fixed-width text file</span></span>|[<span data-ttu-id="f3e3e-112">Instrukcje: Odczyt z plików testowych o stałej szerokości</span><span class="sxs-lookup"><span data-stu-id="f3e3e-112">How to: Read From Fixed-width Text Files</span></span>](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-fixed-width-text-files.md)|  
|<span data-ttu-id="f3e3e-113">Odczyt z pliku tekstowego w wielu formatach</span><span class="sxs-lookup"><span data-stu-id="f3e3e-113">Read from a text file with multiple formats</span></span>|[<span data-ttu-id="f3e3e-114">Instrukcje: Odczyt z plików tekstowych w wielu formatach</span><span class="sxs-lookup"><span data-stu-id="f3e3e-114">How to: Read From Text Files with Multiple Formats</span></span>](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-text-files-with-multiple-formats.md)|  
  
   
  
## Examples  
 <span data-ttu-id="f3e3e-115">W tym przykładzie zostanie przetworzona za pomocą pliku tekst rozdzielany tabulatorami `Bigfile`.</span><span class="sxs-lookup"><span data-stu-id="f3e3e-115">This example parses through a tab-delimited text file, `Bigfile`.</span></span>  
  
 [!code-vb[VbVbalrTextFieldParser#17](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrTextFieldParser/VB/Class1.vb#17)]  
  
 ]]></format>
    </remarks>
    <altmember cref="M:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFieldParser(System.String)" />
    <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md"><span data-ttu-id="f3e3e-116">Obiekty (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="f3e3e-116">Objects (Visual Basic)</span></span></related>
    <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/parsing-text-files-with-the-textfieldparser-object.md"><span data-ttu-id="f3e3e-117">Analizowanie plików tekstowych za pomocą obiektu TextFieldParser</span><span class="sxs-lookup"><span data-stu-id="f3e3e-117">Parsing Text Files with the TextFieldParser Object</span></span></related>
    <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-3.0/2ewecs64(v=vs.85)"><span data-ttu-id="f3e3e-118">Rozwiązywanie problemów z wyjątkami: Microsoft.VisualBasic.FileIO.TextFieldParser.MalformedLineException</span><span class="sxs-lookup"><span data-stu-id="f3e3e-118">Troubleshooting Exceptions: Microsoft.VisualBasic.FileIO.TextFieldParser.MalformedLineException</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="f3e3e-119">Inicjuje nowe wystąpienie klasy <see langword="TextFieldParser" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="f3e3e-119">Initializes a new instance of the <see langword="TextFieldParser" /> class.</span></span></summary>
        <altmember cref="M:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFieldParser(System.String)" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md"><span data-ttu-id="f3e3e-120">Obiekty (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="f3e3e-120">Objects (Visual Basic)</span></span></related>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TextFieldParser (System.IO.Stream stream);" />
      <MemberSignature Language="ILAsm" Value=".method public specialname rtspecialname instance void .ctor(class System.IO.Stream stream) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.IO.Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TextFieldParser(System::IO::Stream ^ stream);" />
      <MemberSignature Language="F#" Value="new Microsoft.VisualBasic.FileIO.TextFieldParser : System.IO.Stream -&gt; Microsoft.VisualBasic.FileIO.TextFieldParser" Usage="new Microsoft.VisualBasic.FileIO.TextFieldParser stream" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="stream"><span data-ttu-id="f3e3e-121"><see cref="T:System.IO.Stream" />.</span><span class="sxs-lookup"><span data-stu-id="f3e3e-121"><see cref="T:System.IO.Stream" />.</span></span> <span data-ttu-id="f3e3e-122">Strumień, który będzie analizowany.</span><span class="sxs-lookup"><span data-stu-id="f3e3e-122">The stream to be parsed.</span></span></param>
        <summary><span data-ttu-id="f3e3e-123">Inicjuje nowe wystąpienie klasy <see langword="TextFieldParser" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="f3e3e-123">Initializes a new instance of the <see langword="TextFieldParser" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f3e3e-124">Tworzy nową `TextFieldParser` obiekt, aby przeanalizować pliku lub strumienia reprezentowanego przez `stream` parametru.</span><span class="sxs-lookup"><span data-stu-id="f3e3e-124">Creates a new `TextFieldParser` object to parse the file or stream that is represented by the `stream` parameter.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="f3e3e-125"><paramref name="stream" /> jest <see langword="Nothing" />.</span><span class="sxs-lookup"><span data-stu-id="f3e3e-125"><paramref name="stream" /> is <see langword="Nothing" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="f3e3e-126"><paramref name="stream" /> Nie można odczytać z.</span><span class="sxs-lookup"><span data-stu-id="f3e3e-126"><paramref name="stream" /> cannot be read from.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFieldParser(System.String)" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md"><span data-ttu-id="f3e3e-127">Obiekty (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="f3e3e-127">Objects (Visual Basic)</span></span></related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-comma-delimited-text-files.md"><span data-ttu-id="f3e3e-128">Instrukcje: Odczyt z plików tekstowych rozdzielonych przecinkami, w języku Visual Basic</span><span class="sxs-lookup"><span data-stu-id="f3e3e-128">How to: Read From Comma-Delimited Text Files in Visual Basic</span></span></related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-fixed-width-text-files.md"><span data-ttu-id="f3e3e-129">Instrukcje: Odczyt z plików testowych o stałej szerokości w Visual Basic</span><span class="sxs-lookup"><span data-stu-id="f3e3e-129">How to: Read From Fixed-width Text Files in Visual Basic</span></span></related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-text-files-with-multiple-formats.md"><span data-ttu-id="f3e3e-130">Instrukcje: Odczyt z plików tekstowych w wielu formatach w Visual Basic</span><span class="sxs-lookup"><span data-stu-id="f3e3e-130">How to: Read From Text Files with Multiple Formats in Visual Basic</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TextFieldParser (System.IO.TextReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public specialname rtspecialname instance void .ctor(class System.IO.TextReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.IO.TextReader)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (reader As TextReader)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TextFieldParser(System::IO::TextReader ^ reader);" />
      <MemberSignature Language="F#" Value="new Microsoft.VisualBasic.FileIO.TextFieldParser : System.IO.TextReader -&gt; Microsoft.VisualBasic.FileIO.TextFieldParser" Usage="new Microsoft.VisualBasic.FileIO.TextFieldParser reader" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="reader" Type="System.IO.TextReader" />
      </Parameters>
      <Docs>
        <param name="reader"><span data-ttu-id="f3e3e-131"><see cref="T:System.IO.TextReader" />.</span><span class="sxs-lookup"><span data-stu-id="f3e3e-131"><see cref="T:System.IO.TextReader" />.</span></span> <span data-ttu-id="f3e3e-132"><see cref="T:System.IO.TextReader" /> Strumienia do przeanalizowania.</span><span class="sxs-lookup"><span data-stu-id="f3e3e-132">The <see cref="T:System.IO.TextReader" /> stream to be parsed.</span></span></param>
        <summary><span data-ttu-id="f3e3e-133">Inicjuje nowe wystąpienie klasy <see langword="TextFieldParser" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="f3e3e-133">Initializes a new instance of the <see langword="TextFieldParser" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f3e3e-134">Tworzy nową `TextFieldParser` obiekt, aby przeanalizować pliku lub strumienia reprezentowanego przez `reader` parametru.</span><span class="sxs-lookup"><span data-stu-id="f3e3e-134">Creates a new `TextFieldParser` object to parse the file or stream that is represented by the `reader` parameter.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="f3e3e-135"><paramref name="reader" /> jest <see langword="Nothing" />.</span><span class="sxs-lookup"><span data-stu-id="f3e3e-135"><paramref name="reader" /> is <see langword="Nothing" />.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFieldParser(System.String)" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md"><span data-ttu-id="f3e3e-136">Obiekty (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="f3e3e-136">Objects (Visual Basic)</span></span></related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-comma-delimited-text-files.md"><span data-ttu-id="f3e3e-137">Instrukcje: Odczyt z plików tekstowych rozdzielonych przecinkami, w języku Visual Basic</span><span class="sxs-lookup"><span data-stu-id="f3e3e-137">How to: Read From Comma-Delimited Text Files in Visual Basic</span></span></related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-fixed-width-text-files.md"><span data-ttu-id="f3e3e-138">Instrukcje: Odczyt z plików testowych o stałej szerokości w Visual Basic</span><span class="sxs-lookup"><span data-stu-id="f3e3e-138">How to: Read From Fixed-width Text Files in Visual Basic</span></span></related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-text-files-with-multiple-formats.md"><span data-ttu-id="f3e3e-139">Instrukcje: Odczyt z plików tekstowych w wielu formatach w Visual Basic</span><span class="sxs-lookup"><span data-stu-id="f3e3e-139">How to: Read From Text Files with Multiple Formats in Visual Basic</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TextFieldParser (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public specialname rtspecialname instance void .ctor(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (path As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TextFieldParser(System::String ^ path);" />
      <MemberSignature Language="F#" Value="new Microsoft.VisualBasic.FileIO.TextFieldParser : string -&gt; Microsoft.VisualBasic.FileIO.TextFieldParser" Usage="new Microsoft.VisualBasic.FileIO.TextFieldParser path" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="f3e3e-140"><see langword="String" />.</span><span class="sxs-lookup"><span data-stu-id="f3e3e-140"><see langword="String" />.</span></span> <span data-ttu-id="f3e3e-141">Pełna ścieżka pliku do przeanalizowania.</span><span class="sxs-lookup"><span data-stu-id="f3e3e-141">The complete path of the file to be parsed.</span></span></param>
        <summary><span data-ttu-id="f3e3e-142">Inicjuje nowe wystąpienie klasy <see langword="TextFieldParser" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="f3e3e-142">Initializes a new instance of the <see langword="TextFieldParser" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f3e3e-143">Tworzy nową `TextFieldParser` obiektu można przeanalizować pliku określonego przez `path` parametru.</span><span class="sxs-lookup"><span data-stu-id="f3e3e-143">Creates a new `TextFieldParser` object to parse the file specified by the `path` parameter.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="f3e3e-144"><paramref name="path" /> jest ciągiem pustym.</span><span class="sxs-lookup"><span data-stu-id="f3e3e-144"><paramref name="path" /> is an empty string.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFieldParser(System.String)" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md"><span data-ttu-id="f3e3e-145">Obiekty (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="f3e3e-145">Objects (Visual Basic)</span></span></related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-comma-delimited-text-files.md"><span data-ttu-id="f3e3e-146">Instrukcje: Odczyt z plików tekstowych rozdzielonych przecinkami, w języku Visual Basic</span><span class="sxs-lookup"><span data-stu-id="f3e3e-146">How to: Read From Comma-Delimited Text Files in Visual Basic</span></span></related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-fixed-width-text-files.md"><span data-ttu-id="f3e3e-147">Instrukcje: Odczyt z plików testowych o stałej szerokości w Visual Basic</span><span class="sxs-lookup"><span data-stu-id="f3e3e-147">How to: Read From Fixed-width Text Files in Visual Basic</span></span></related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-text-files-with-multiple-formats.md"><span data-ttu-id="f3e3e-148">Instrukcje: Odczyt z plików tekstowych w wielu formatach w Visual Basic</span><span class="sxs-lookup"><span data-stu-id="f3e3e-148">How to: Read From Text Files with Multiple Formats in Visual Basic</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TextFieldParser (System.IO.Stream stream, System.Text.Encoding defaultEncoding);" />
      <MemberSignature Language="ILAsm" Value=".method public specialname rtspecialname instance void .ctor(class System.IO.Stream stream, class System.Text.Encoding defaultEncoding) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.IO.Stream,System.Text.Encoding)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TextFieldParser(System::IO::Stream ^ stream, System::Text::Encoding ^ defaultEncoding);" />
      <MemberSignature Language="F#" Value="new Microsoft.VisualBasic.FileIO.TextFieldParser : System.IO.Stream * System.Text.Encoding -&gt; Microsoft.VisualBasic.FileIO.TextFieldParser" Usage="new Microsoft.VisualBasic.FileIO.TextFieldParser (stream, defaultEncoding)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="defaultEncoding" Type="System.Text.Encoding" />
      </Parameters>
      <Docs>
        <param name="stream"><span data-ttu-id="f3e3e-149"><see cref="T:System.IO.Stream" />.</span><span class="sxs-lookup"><span data-stu-id="f3e3e-149"><see cref="T:System.IO.Stream" />.</span></span> <span data-ttu-id="f3e3e-150">Strumień, który będzie analizowany.</span><span class="sxs-lookup"><span data-stu-id="f3e3e-150">The stream to be parsed.</span></span></param>
        <param name="defaultEncoding"><span data-ttu-id="f3e3e-151"><see cref="T:System.Text.Encoding" />.</span><span class="sxs-lookup"><span data-stu-id="f3e3e-151"><see cref="T:System.Text.Encoding" />.</span></span> <span data-ttu-id="f3e3e-152">System kodowania znaków, który będzie używany w razie niemożności ustalenia kodowania na podstawie treści pliku.</span><span class="sxs-lookup"><span data-stu-id="f3e3e-152">The character encoding to use if encoding is not determined from file.</span></span> <span data-ttu-id="f3e3e-153">Wartość domyślna to <see cref="P:System.Text.Encoding.UTF8" />.</span><span class="sxs-lookup"><span data-stu-id="f3e3e-153">Default is <see cref="P:System.Text.Encoding.UTF8" />.</span></span></param>
        <summary><span data-ttu-id="f3e3e-154">Inicjuje nowe wystąpienie klasy <see langword="TextFieldParser" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="f3e3e-154">Initializes a new instance of the <see langword="TextFieldParser" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f3e3e-155">Tworzy nową `TextFieldParser` obiekt, aby przeanalizować pliku lub strumienia reprezentowanego przez `stream` parametru.</span><span class="sxs-lookup"><span data-stu-id="f3e3e-155">Creates a new `TextFieldParser` object to parse the file or stream that is represented by the `stream` parameter.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="f3e3e-156">Gdy zbiór znaków zostanie skompilowany z określonym ustawieniem kultury, po czym pobrany z użyciem innego ustawienia kultury, znaki mogą nie nadawać się do interpretacji i powodować zgłoszenie wyjątku.</span><span class="sxs-lookup"><span data-stu-id="f3e3e-156">When you compile a set of characters with a particular cultural setting and retrieve those same characters with a different cultural setting, the characters might not be interpretable and could cause an exception to be thrown.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="f3e3e-157"><paramref name="stream" /> lub <paramref name="defaultEncoding" /> jest <see langword="Nothing" />.</span><span class="sxs-lookup"><span data-stu-id="f3e3e-157"><paramref name="stream" /> or <paramref name="defaultEncoding" /> is <see langword="Nothing" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="f3e3e-158"><paramref name="stream" /> Nie można odczytać z.</span><span class="sxs-lookup"><span data-stu-id="f3e3e-158"><paramref name="stream" /> cannot be read from.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFieldParser(System.String)" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md"><span data-ttu-id="f3e3e-159">Obiekty (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="f3e3e-159">Objects (Visual Basic)</span></span></related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-comma-delimited-text-files.md"><span data-ttu-id="f3e3e-160">Instrukcje: Odczyt z plików tekstowych rozdzielonych przecinkami, w języku Visual Basic</span><span class="sxs-lookup"><span data-stu-id="f3e3e-160">How to: Read From Comma-Delimited Text Files in Visual Basic</span></span></related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-fixed-width-text-files.md"><span data-ttu-id="f3e3e-161">Instrukcje: Odczyt z plików testowych o stałej szerokości w Visual Basic</span><span class="sxs-lookup"><span data-stu-id="f3e3e-161">How to: Read From Fixed-width Text Files in Visual Basic</span></span></related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-text-files-with-multiple-formats.md"><span data-ttu-id="f3e3e-162">Instrukcje: Odczyt z plików tekstowych w wielu formatach w Visual Basic</span><span class="sxs-lookup"><span data-stu-id="f3e3e-162">How to: Read From Text Files with Multiple Formats in Visual Basic</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TextFieldParser (string path, System.Text.Encoding defaultEncoding);" />
      <MemberSignature Language="ILAsm" Value=".method public specialname rtspecialname instance void .ctor(string path, class System.Text.Encoding defaultEncoding) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.String,System.Text.Encoding)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (path As String, defaultEncoding As Encoding)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TextFieldParser(System::String ^ path, System::Text::Encoding ^ defaultEncoding);" />
      <MemberSignature Language="F#" Value="new Microsoft.VisualBasic.FileIO.TextFieldParser : string * System.Text.Encoding -&gt; Microsoft.VisualBasic.FileIO.TextFieldParser" Usage="new Microsoft.VisualBasic.FileIO.TextFieldParser (path, defaultEncoding)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="defaultEncoding" Type="System.Text.Encoding" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="f3e3e-163"><see langword="String" />.</span><span class="sxs-lookup"><span data-stu-id="f3e3e-163"><see langword="String" />.</span></span> <span data-ttu-id="f3e3e-164">Pełna ścieżka pliku do przeanalizowania.</span><span class="sxs-lookup"><span data-stu-id="f3e3e-164">The complete path of the file to be parsed.</span></span></param>
        <param name="defaultEncoding"><span data-ttu-id="f3e3e-165"><see cref="T:System.Text.Encoding" />.</span><span class="sxs-lookup"><span data-stu-id="f3e3e-165"><see cref="T:System.Text.Encoding" />.</span></span> <span data-ttu-id="f3e3e-166">System kodowania znaków, który będzie używany w razie niemożności ustalenia kodowania na podstawie treści pliku.</span><span class="sxs-lookup"><span data-stu-id="f3e3e-166">The character encoding to use if encoding is not determined from file.</span></span> <span data-ttu-id="f3e3e-167">Wartość domyślna to <see cref="P:System.Text.Encoding.UTF8" />.</span><span class="sxs-lookup"><span data-stu-id="f3e3e-167">Default is <see cref="P:System.Text.Encoding.UTF8" />.</span></span></param>
        <summary><span data-ttu-id="f3e3e-168">Inicjuje nowe wystąpienie klasy <see langword="TextFieldParser" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="f3e3e-168">Initializes a new instance of the <see langword="TextFieldParser" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f3e3e-169">Tworzy nową `TextFieldParser` obiektu można przeanalizować pliku określonego przez `path` parametru.</span><span class="sxs-lookup"><span data-stu-id="f3e3e-169">Creates a new `TextFieldParser` object to parse the file specified by the `path` parameter.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="f3e3e-170">Gdy zbiór znaków zostanie skompilowany z określonym ustawieniem kultury, po czym pobrany z użyciem innego ustawienia kultury, znaki mogą nie nadawać się do interpretacji i powodować zgłoszenie wyjątku.</span><span class="sxs-lookup"><span data-stu-id="f3e3e-170">When you compile a set of characters with a particular cultural setting and retrieve those same characters with a different cultural setting, the characters might not be interpretable and could cause an exception to be thrown.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="f3e3e-171"><paramref name="path" /> jest ciągiem pustym lub <paramref name="defaultEncoding" /> jest <see langword="Nothing" />.</span><span class="sxs-lookup"><span data-stu-id="f3e3e-171"><paramref name="path" /> is an empty string or <paramref name="defaultEncoding" /> is <see langword="Nothing" />.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFieldParser(System.String)" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md"><span data-ttu-id="f3e3e-172">Obiekty (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="f3e3e-172">Objects (Visual Basic)</span></span></related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-comma-delimited-text-files.md"><span data-ttu-id="f3e3e-173">Instrukcje: Odczyt z plików tekstowych rozdzielonych przecinkami, w języku Visual Basic</span><span class="sxs-lookup"><span data-stu-id="f3e3e-173">How to: Read From Comma-Delimited Text Files in Visual Basic</span></span></related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-fixed-width-text-files.md"><span data-ttu-id="f3e3e-174">Instrukcje: Odczyt z plików testowych o stałej szerokości w Visual Basic</span><span class="sxs-lookup"><span data-stu-id="f3e3e-174">How to: Read From Fixed-width Text Files in Visual Basic</span></span></related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-text-files-with-multiple-formats.md"><span data-ttu-id="f3e3e-175">Instrukcje: Odczyt z plików tekstowych w wielu formatach w Visual Basic</span><span class="sxs-lookup"><span data-stu-id="f3e3e-175">How to: Read From Text Files with Multiple Formats in Visual Basic</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TextFieldParser (System.IO.Stream stream, System.Text.Encoding defaultEncoding, bool detectEncoding);" />
      <MemberSignature Language="ILAsm" Value=".method public specialname rtspecialname instance void .ctor(class System.IO.Stream stream, class System.Text.Encoding defaultEncoding, bool detectEncoding) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.IO.Stream,System.Text.Encoding,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TextFieldParser(System::IO::Stream ^ stream, System::Text::Encoding ^ defaultEncoding, bool detectEncoding);" />
      <MemberSignature Language="F#" Value="new Microsoft.VisualBasic.FileIO.TextFieldParser : System.IO.Stream * System.Text.Encoding * bool -&gt; Microsoft.VisualBasic.FileIO.TextFieldParser" Usage="new Microsoft.VisualBasic.FileIO.TextFieldParser (stream, defaultEncoding, detectEncoding)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="defaultEncoding" Type="System.Text.Encoding" />
        <Parameter Name="detectEncoding" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="stream"><span data-ttu-id="f3e3e-176"><see cref="T:System.IO.Stream" />.</span><span class="sxs-lookup"><span data-stu-id="f3e3e-176"><see cref="T:System.IO.Stream" />.</span></span> <span data-ttu-id="f3e3e-177">Strumień, który będzie analizowany.</span><span class="sxs-lookup"><span data-stu-id="f3e3e-177">The stream to be parsed.</span></span></param>
        <param name="defaultEncoding"><span data-ttu-id="f3e3e-178"><see cref="T:System.Text.Encoding" />.</span><span class="sxs-lookup"><span data-stu-id="f3e3e-178"><see cref="T:System.Text.Encoding" />.</span></span> <span data-ttu-id="f3e3e-179">System kodowania znaków, który będzie używany w razie niemożności ustalenia kodowania na podstawie treści pliku.</span><span class="sxs-lookup"><span data-stu-id="f3e3e-179">The character encoding to use if encoding is not determined from file.</span></span> <span data-ttu-id="f3e3e-180">Wartość domyślna to <see cref="P:System.Text.Encoding.UTF8" />.</span><span class="sxs-lookup"><span data-stu-id="f3e3e-180">Default is <see cref="P:System.Text.Encoding.UTF8" />.</span></span></param>
        <param name="detectEncoding"><span data-ttu-id="f3e3e-181"><see langword="Boolean" />.</span><span class="sxs-lookup"><span data-stu-id="f3e3e-181"><see langword="Boolean" />.</span></span> <span data-ttu-id="f3e3e-182">Wskazuje, czy na początku pliku mają być szukane znaczniki kolejności bajtów.</span><span class="sxs-lookup"><span data-stu-id="f3e3e-182">Indicates whether to look for byte order marks at the beginning of the file.</span></span> <span data-ttu-id="f3e3e-183">Wartość domyślna to <see langword="True" />.</span><span class="sxs-lookup"><span data-stu-id="f3e3e-183">Default is <see langword="True" />.</span></span></param>
        <summary><span data-ttu-id="f3e3e-184">Inicjuje nowe wystąpienie klasy <see langword="TextFieldParser" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="f3e3e-184">Initializes a new instance of the <see langword="TextFieldParser" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f3e3e-185">Tworzy nową `TextFieldParser` obiekt, aby przeanalizować pliku lub strumienia reprezentowanego przez `stream` parametru.</span><span class="sxs-lookup"><span data-stu-id="f3e3e-185">Creates a new `TextFieldParser` object to parse the file or stream that is represented by the `stream` parameter.</span></span>  
  
 <span data-ttu-id="f3e3e-186">Jeśli `detectEncoding` parametr jest `True`, ten konstruktor próbuje wykryć kodowanie, analizując pierwsze trzy bajty pliku lub strumienia.</span><span class="sxs-lookup"><span data-stu-id="f3e3e-186">If the `detectEncoding` parameter is `True`, this constructor attempts to detect the encoding by looking at the first three bytes of the file or stream.</span></span> <span data-ttu-id="f3e3e-187">Automatycznie rozpoznaje UTF-8, little-endian Unicode i tekst w formacie Unicode big-endian Jeśli plik rozpoczyna się od znaków w odpowiedniej kolejności bajtów.</span><span class="sxs-lookup"><span data-stu-id="f3e3e-187">It automatically recognizes UTF-8, little-endian Unicode, and big-endian Unicode text if the file starts with the appropriate byte-order marks.</span></span> <span data-ttu-id="f3e3e-188">W przeciwnym razie kodowanie określone przez `defaultEncoding` jest używany.</span><span class="sxs-lookup"><span data-stu-id="f3e3e-188">Otherwise, the encoding specified by `defaultEncoding` is used.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="f3e3e-189">Gdy zbiór znaków zostanie skompilowany z określonym ustawieniem kultury, po czym pobrany z użyciem innego ustawienia kultury, znaki mogą nie nadawać się do interpretacji i powodować zgłoszenie wyjątku.</span><span class="sxs-lookup"><span data-stu-id="f3e3e-189">When you compile a set of characters with a particular cultural setting and retrieve those same characters with a different cultural setting, the characters might not be interpretable and could cause an exception to be thrown.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="f3e3e-190"><paramref name="stream" /> lub <paramref name="defaultEncoding" /> jest <see langword="Nothing" />.</span><span class="sxs-lookup"><span data-stu-id="f3e3e-190"><paramref name="stream" /> or <paramref name="defaultEncoding" /> is <see langword="Nothing" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="f3e3e-191"><paramref name="stream" /> Nie można odczytać z.</span><span class="sxs-lookup"><span data-stu-id="f3e3e-191"><paramref name="stream" /> cannot be read from.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFieldParser(System.String)" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md"><span data-ttu-id="f3e3e-192">Obiekty (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="f3e3e-192">Objects (Visual Basic)</span></span></related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-comma-delimited-text-files.md"><span data-ttu-id="f3e3e-193">Instrukcje: Odczyt z plików tekstowych rozdzielonych przecinkami, w języku Visual Basic</span><span class="sxs-lookup"><span data-stu-id="f3e3e-193">How to: Read From Comma-Delimited Text Files in Visual Basic</span></span></related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-fixed-width-text-files.md"><span data-ttu-id="f3e3e-194">Instrukcje: Odczyt z plików testowych o stałej szerokości w Visual Basic</span><span class="sxs-lookup"><span data-stu-id="f3e3e-194">How to: Read From Fixed-width Text Files in Visual Basic</span></span></related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-text-files-with-multiple-formats.md"><span data-ttu-id="f3e3e-195">Instrukcje: Odczyt z plików tekstowych w wielu formatach w Visual Basic</span><span class="sxs-lookup"><span data-stu-id="f3e3e-195">How to: Read From Text Files with Multiple Formats in Visual Basic</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TextFieldParser (string path, System.Text.Encoding defaultEncoding, bool detectEncoding);" />
      <MemberSignature Language="ILAsm" Value=".method public specialname rtspecialname instance void .ctor(string path, class System.Text.Encoding defaultEncoding, bool detectEncoding) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.String,System.Text.Encoding,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (path As String, defaultEncoding As Encoding, detectEncoding As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TextFieldParser(System::String ^ path, System::Text::Encoding ^ defaultEncoding, bool detectEncoding);" />
      <MemberSignature Language="F#" Value="new Microsoft.VisualBasic.FileIO.TextFieldParser : string * System.Text.Encoding * bool -&gt; Microsoft.VisualBasic.FileIO.TextFieldParser" Usage="new Microsoft.VisualBasic.FileIO.TextFieldParser (path, defaultEncoding, detectEncoding)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="defaultEncoding" Type="System.Text.Encoding" />
        <Parameter Name="detectEncoding" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="f3e3e-196"><see langword="String" />.</span><span class="sxs-lookup"><span data-stu-id="f3e3e-196"><see langword="String" />.</span></span> <span data-ttu-id="f3e3e-197">Pełna ścieżka pliku do przeanalizowania.</span><span class="sxs-lookup"><span data-stu-id="f3e3e-197">The complete path of the file to be parsed.</span></span></param>
        <param name="defaultEncoding"><span data-ttu-id="f3e3e-198"><see cref="T:System.Text.Encoding" />.</span><span class="sxs-lookup"><span data-stu-id="f3e3e-198"><see cref="T:System.Text.Encoding" />.</span></span> <span data-ttu-id="f3e3e-199">System kodowania znaków, który będzie używany w razie niemożności ustalenia kodowania na podstawie treści pliku.</span><span class="sxs-lookup"><span data-stu-id="f3e3e-199">The character encoding to use if encoding is not determined from file.</span></span> <span data-ttu-id="f3e3e-200">Wartość domyślna to <see cref="P:System.Text.Encoding.UTF8" />.</span><span class="sxs-lookup"><span data-stu-id="f3e3e-200">Default is <see cref="P:System.Text.Encoding.UTF8" />.</span></span></param>
        <param name="detectEncoding"><span data-ttu-id="f3e3e-201"><see langword="Boolean" />.</span><span class="sxs-lookup"><span data-stu-id="f3e3e-201"><see langword="Boolean" />.</span></span> <span data-ttu-id="f3e3e-202">Wskazuje, czy na początku pliku mają być szukane znaczniki kolejności bajtów.</span><span class="sxs-lookup"><span data-stu-id="f3e3e-202">Indicates whether to look for byte order marks at the beginning of the file.</span></span> <span data-ttu-id="f3e3e-203">Wartość domyślna to <see langword="True" />.</span><span class="sxs-lookup"><span data-stu-id="f3e3e-203">Default is <see langword="True" />.</span></span></param>
        <summary><span data-ttu-id="f3e3e-204">Inicjuje nowe wystąpienie klasy <see langword="TextFieldParser" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="f3e3e-204">Initializes a new instance of the <see langword="TextFieldParser" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f3e3e-205">Tworzy nową `TextFieldParser` obiektu można przeanalizować pliku określonego przez `path` parametru.</span><span class="sxs-lookup"><span data-stu-id="f3e3e-205">Creates a new `TextFieldParser` object to parse the file specified by the `path` parameter.</span></span>  
  
 <span data-ttu-id="f3e3e-206">Jeśli `detectEncoding` parametr jest `True`, ten konstruktor próbuje wykryć kodowanie, analizując pierwsze trzy bajty pliku lub strumienia.</span><span class="sxs-lookup"><span data-stu-id="f3e3e-206">If the `detectEncoding` parameter is `True`, this constructor attempts to detect the encoding by looking at the first three bytes of the file or stream.</span></span> <span data-ttu-id="f3e3e-207">Automatycznie rozpoznaje UTF-8, little-endian Unicode i tekst w formacie Unicode big-endian Jeśli plik rozpoczyna się od znaków w odpowiedniej kolejności bajtów.</span><span class="sxs-lookup"><span data-stu-id="f3e3e-207">It automatically recognizes UTF-8, little-endian Unicode, and big-endian Unicode text if the file starts with the appropriate byte-order marks.</span></span> <span data-ttu-id="f3e3e-208">W przeciwnym razie kodowanie określone przez `defaultEncoding` jest używany.</span><span class="sxs-lookup"><span data-stu-id="f3e3e-208">Otherwise, the encoding specified by `defaultEncoding` is used.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="f3e3e-209">Gdy zbiór znaków zostanie skompilowany z określonym ustawieniem kultury, po czym pobrany z użyciem innego ustawienia kultury, znaki mogą nie nadawać się do interpretacji i powodować zgłoszenie wyjątku.</span><span class="sxs-lookup"><span data-stu-id="f3e3e-209">When you compile a set of characters with a particular cultural setting and retrieve those same characters with a different cultural setting, the characters might not be interpretable and could cause an exception to be thrown.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="f3e3e-210"><paramref name="path" /> jest ciągiem pustym lub <paramref name="defaultEncoding" /> jest <see langword="Nothing" />.</span><span class="sxs-lookup"><span data-stu-id="f3e3e-210"><paramref name="path" /> is an empty string or <paramref name="defaultEncoding" /> is <see langword="Nothing" />.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFieldParser(System.String)" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md"><span data-ttu-id="f3e3e-211">Obiekty (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="f3e3e-211">Objects (Visual Basic)</span></span></related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-comma-delimited-text-files.md"><span data-ttu-id="f3e3e-212">Instrukcje: Odczyt z plików tekstowych rozdzielonych przecinkami, w języku Visual Basic</span><span class="sxs-lookup"><span data-stu-id="f3e3e-212">How to: Read From Comma-Delimited Text Files in Visual Basic</span></span></related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-fixed-width-text-files.md"><span data-ttu-id="f3e3e-213">Instrukcje: Odczyt z plików testowych o stałej szerokości w Visual Basic</span><span class="sxs-lookup"><span data-stu-id="f3e3e-213">How to: Read From Fixed-width Text Files in Visual Basic</span></span></related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-text-files-with-multiple-formats.md"><span data-ttu-id="f3e3e-214">Instrukcje: Odczyt z plików tekstowych w wielu formatach w Visual Basic</span><span class="sxs-lookup"><span data-stu-id="f3e3e-214">How to: Read From Text Files with Multiple Formats in Visual Basic</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TextFieldParser (System.IO.Stream stream, System.Text.Encoding defaultEncoding, bool detectEncoding, bool leaveOpen);" />
      <MemberSignature Language="ILAsm" Value=".method public specialname rtspecialname instance void .ctor(class System.IO.Stream stream, class System.Text.Encoding defaultEncoding, bool detectEncoding, bool leaveOpen) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.IO.Stream,System.Text.Encoding,System.Boolean,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TextFieldParser(System::IO::Stream ^ stream, System::Text::Encoding ^ defaultEncoding, bool detectEncoding, bool leaveOpen);" />
      <MemberSignature Language="F#" Value="new Microsoft.VisualBasic.FileIO.TextFieldParser : System.IO.Stream * System.Text.Encoding * bool * bool -&gt; Microsoft.VisualBasic.FileIO.TextFieldParser" Usage="new Microsoft.VisualBasic.FileIO.TextFieldParser (stream, defaultEncoding, detectEncoding, leaveOpen)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="defaultEncoding" Type="System.Text.Encoding" />
        <Parameter Name="detectEncoding" Type="System.Boolean" />
        <Parameter Name="leaveOpen" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="stream"><span data-ttu-id="f3e3e-215"><see cref="T:System.IO.Stream" />.</span><span class="sxs-lookup"><span data-stu-id="f3e3e-215"><see cref="T:System.IO.Stream" />.</span></span> <span data-ttu-id="f3e3e-216">Strumień, który będzie analizowany.</span><span class="sxs-lookup"><span data-stu-id="f3e3e-216">The stream to be parsed.</span></span></param>
        <param name="defaultEncoding"><span data-ttu-id="f3e3e-217"><see cref="T:System.Text.Encoding" />.</span><span class="sxs-lookup"><span data-stu-id="f3e3e-217"><see cref="T:System.Text.Encoding" />.</span></span> <span data-ttu-id="f3e3e-218">System kodowania znaków, który będzie używany w razie niemożności ustalenia kodowania na podstawie treści pliku.</span><span class="sxs-lookup"><span data-stu-id="f3e3e-218">The character encoding to use if encoding is not determined from file.</span></span> <span data-ttu-id="f3e3e-219">Wartość domyślna to <see cref="P:System.Text.Encoding.UTF8" />.</span><span class="sxs-lookup"><span data-stu-id="f3e3e-219">Default is <see cref="P:System.Text.Encoding.UTF8" />.</span></span></param>
        <param name="detectEncoding"><span data-ttu-id="f3e3e-220"><see langword="Boolean" />.</span><span class="sxs-lookup"><span data-stu-id="f3e3e-220"><see langword="Boolean" />.</span></span> <span data-ttu-id="f3e3e-221">Wskazuje, czy na początku pliku mają być szukane znaczniki kolejności bajtów.</span><span class="sxs-lookup"><span data-stu-id="f3e3e-221">Indicates whether to look for byte order marks at the beginning of the file.</span></span> <span data-ttu-id="f3e3e-222">Wartość domyślna to <see langword="True" />.</span><span class="sxs-lookup"><span data-stu-id="f3e3e-222">Default is <see langword="True" />.</span></span></param>
        <param name="leaveOpen"><span data-ttu-id="f3e3e-223"><see langword="Boolean" />.</span><span class="sxs-lookup"><span data-stu-id="f3e3e-223"><see langword="Boolean" />.</span></span> <span data-ttu-id="f3e3e-224">Wskazuje, czy należy pozostawić <paramref name="stream" /> podczas otwierania <see langword="TextFieldParser" /> obiekt jest zamknięty.</span><span class="sxs-lookup"><span data-stu-id="f3e3e-224">Indicates whether to leave <paramref name="stream" /> open when the <see langword="TextFieldParser" /> object is closed.</span></span> <span data-ttu-id="f3e3e-225">Wartość domyślna to <see langword="False" />.</span><span class="sxs-lookup"><span data-stu-id="f3e3e-225">Default is <see langword="False" />.</span></span></param>
        <summary><span data-ttu-id="f3e3e-226">Inicjuje nowe wystąpienie klasy <see langword="TextFieldParser" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="f3e3e-226">Initializes a new instance of the <see langword="TextFieldParser" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f3e3e-227">Tworzy nową `TextFieldParser` obiekt, aby przeanalizować pliku lub strumienia reprezentowanego przez `stream` parametru.</span><span class="sxs-lookup"><span data-stu-id="f3e3e-227">Creates a new `TextFieldParser` object to parse the file or stream that is represented by the `stream` parameter.</span></span>  
  
 <span data-ttu-id="f3e3e-228">Jeśli `detectEncoding` parametr jest `True`, ten konstruktor próbuje wykryć kodowanie, analizując pierwsze trzy bajty pliku lub strumienia.</span><span class="sxs-lookup"><span data-stu-id="f3e3e-228">If the `detectEncoding` parameter is `True`, this constructor attempts to detect the encoding by looking at the first three bytes of the file or stream.</span></span> <span data-ttu-id="f3e3e-229">Automatycznie rozpoznaje UTF-8, little-endian Unicode i tekst w formacie Unicode big-endian Jeśli plik rozpoczyna się od znaków w odpowiedniej kolejności bajtów.</span><span class="sxs-lookup"><span data-stu-id="f3e3e-229">It automatically recognizes UTF-8, little-endian Unicode, and big-endian Unicode text if the file starts with the appropriate byte-order marks.</span></span> <span data-ttu-id="f3e3e-230">W przeciwnym razie kodowanie określone przez `defaultEncoding` jest używany.</span><span class="sxs-lookup"><span data-stu-id="f3e3e-230">Otherwise, the encoding specified by `defaultEncoding` is used.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="f3e3e-231">Gdy zbiór znaków zostanie skompilowany z określonym ustawieniem kultury, po czym pobrany z użyciem innego ustawienia kultury, znaki mogą nie nadawać się do interpretacji i powodować zgłoszenie wyjątku.</span><span class="sxs-lookup"><span data-stu-id="f3e3e-231">When you compile a set of characters with a particular cultural setting and retrieve those same characters with a different cultural setting, the characters might not be interpretable and could cause an exception to be thrown.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="f3e3e-232"><paramref name="stream" /> lub <paramref name="defaultEncoding" /> jest <see langword="Nothing" />.</span><span class="sxs-lookup"><span data-stu-id="f3e3e-232"><paramref name="stream" /> or <paramref name="defaultEncoding" /> is <see langword="Nothing" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="f3e3e-233"><paramref name="stream" /> Nie można odczytać z.</span><span class="sxs-lookup"><span data-stu-id="f3e3e-233"><paramref name="stream" /> cannot be read from.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFieldParser(System.String)" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md"><span data-ttu-id="f3e3e-234">Obiekty (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="f3e3e-234">Objects (Visual Basic)</span></span></related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-comma-delimited-text-files.md"><span data-ttu-id="f3e3e-235">Instrukcje: Odczyt z plików tekstowych rozdzielonych przecinkami, w języku Visual Basic</span><span class="sxs-lookup"><span data-stu-id="f3e3e-235">How to: Read From Comma-Delimited Text Files in Visual Basic</span></span></related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-fixed-width-text-files.md"><span data-ttu-id="f3e3e-236">Instrukcje: Odczyt z plików testowych o stałej szerokości w Visual Basic</span><span class="sxs-lookup"><span data-stu-id="f3e3e-236">How to: Read From Fixed-width Text Files in Visual Basic</span></span></related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-text-files-with-multiple-formats.md"><span data-ttu-id="f3e3e-237">Instrukcje: Odczyt z plików tekstowych w wielu formatach w Visual Basic</span><span class="sxs-lookup"><span data-stu-id="f3e3e-237">How to: Read From Text Files with Multiple Formats in Visual Basic</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileIO.TextFieldParser.Close" />
      <MemberSignature Language="VB.NET" Value="Public Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Close();" />
      <MemberSignature Language="F#" Value="member this.Close : unit -&gt; unit" Usage="textFieldParser.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-3.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f3e3e-238">Zamyka bieżące <see langword="TextFieldParser" /> obiektu.</span><span class="sxs-lookup"><span data-stu-id="f3e3e-238">Closes the current <see langword="TextFieldParser" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="f3e3e-239">W tym przykładzie zamyka `TextFieldParser.FileReader`.</span><span class="sxs-lookup"><span data-stu-id="f3e3e-239">This example closes the `TextFieldParser.FileReader`.</span></span>  
  
 [!code-vb[VbVbalrTextFieldParser#14](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrTextFieldParser/VB/Class1.vb#14)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFieldParser(System.String)" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md"><span data-ttu-id="f3e3e-240">Obiekty (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="f3e3e-240">Objects (Visual Basic)</span></span></related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/parsing-text-files-with-the-textfieldparser-object.md"><span data-ttu-id="f3e3e-241">Analizowanie plików tekstowych za pomocą obiektu TextFieldParser</span><span class="sxs-lookup"><span data-stu-id="f3e3e-241">Parsing Text Files with the TextFieldParser Object</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="CommentTokens">
      <MemberSignature Language="C#" Value="public string[] CommentTokens { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] CommentTokens" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.FileIO.TextFieldParser.CommentTokens" />
      <MemberSignature Language="VB.NET" Value="Public Property CommentTokens As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::String ^&gt; ^ CommentTokens { cli::array &lt;System::String ^&gt; ^ get(); void set(cli::array &lt;System::String ^&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CommentTokens : string[] with get, set" Usage="Microsoft.VisualBasic.FileIO.TextFieldParser.CommentTokens" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f3e3e-242">Definiuje tokenami komentarzy.</span><span class="sxs-lookup"><span data-stu-id="f3e3e-242">Defines comment tokens.</span></span> <span data-ttu-id="f3e3e-243">Znacznik komentarza jest ciągiem, jeśli znajduje się na początku wiersza, wskazuje, że wiersz jest komentarz i mają być ignorowane przez analizator.</span><span class="sxs-lookup"><span data-stu-id="f3e3e-243">A comment token is a string that, when placed at the beginning of a line, indicates that the line is a comment and should be ignored by the parser.</span></span></summary>
        <value><span data-ttu-id="f3e3e-244">Tablica ciągu, który zawiera wszystkie komentarza tokenów dla <see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" /> obiektu.</span><span class="sxs-lookup"><span data-stu-id="f3e3e-244">A string array that contains all of the comment tokens for the <see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" /> object.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f3e3e-245">To jest Zaawansowany element członkowski; go nie są wyświetlane w IntelliSense dopóki nie zostanie kliknięta **wszystkich** kartę.</span><span class="sxs-lookup"><span data-stu-id="f3e3e-245">This is an advanced member; it does not show in IntelliSense unless you click the **All** tab.</span></span>  
  
 <span data-ttu-id="f3e3e-246">Tokenami komentarzy o zerowej długości są ignorowane.</span><span class="sxs-lookup"><span data-stu-id="f3e3e-246">Zero-length comment tokens are ignored.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f3e3e-247">W tym przykładzie określa, że dla `TextFieldParser`, `FileReader` wiersze rozpoczynające się od pojedynczego cudzysłowu ('), które mają być ignorowane.</span><span class="sxs-lookup"><span data-stu-id="f3e3e-247">This example specifies that for the `TextFieldParser`, `FileReader` lines beginning with a single quotation mark (') should be ignored.</span></span>  
  
 [!code-vb[VbVbalrTextFieldParser#5](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrTextFieldParser/VB/Class1.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="f3e3e-248">Znacznik komentarza zawiera biały znak.</span><span class="sxs-lookup"><span data-stu-id="f3e3e-248">A comment token includes white space.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFieldParser(System.String)" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md"><span data-ttu-id="f3e3e-249">Obiekty (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="f3e3e-249">Objects (Visual Basic)</span></span></related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-comma-delimited-text-files.md"><span data-ttu-id="f3e3e-250">Instrukcje: Odczyt z pliku tekstowego, rozdzielanego przecinkami w języku Visual Basic</span><span class="sxs-lookup"><span data-stu-id="f3e3e-250">How to: Read From a Comma-Delimited Text File in Visual Basic</span></span></related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-fixed-width-text-files.md"><span data-ttu-id="f3e3e-251">Instrukcje: Odczyt z plików testowych o stałej szerokości, w języku Visual Basic</span><span class="sxs-lookup"><span data-stu-id="f3e3e-251">How to: Read From a Fixed-width Text File in Visual Basic</span></span></related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-text-files-with-multiple-formats.md"><span data-ttu-id="f3e3e-252">Instrukcje: Odczyt z pliku tekstowego w wielu formatach w Visual Basic</span><span class="sxs-lookup"><span data-stu-id="f3e3e-252">How to: Read From a Text File with Multiple Formats in Visual Basic</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Delimiters">
      <MemberSignature Language="C#" Value="public string[] Delimiters { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] Delimiters" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.FileIO.TextFieldParser.Delimiters" />
      <MemberSignature Language="VB.NET" Value="Public Property Delimiters As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::String ^&gt; ^ Delimiters { cli::array &lt;System::String ^&gt; ^ get(); void set(cli::array &lt;System::String ^&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Delimiters : string[] with get, set" Usage="Microsoft.VisualBasic.FileIO.TextFieldParser.Delimiters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f3e3e-253">Definiuje ograniczników do pliku tekstowego.</span><span class="sxs-lookup"><span data-stu-id="f3e3e-253">Defines the delimiters for a text file.</span></span></summary>
        <value><span data-ttu-id="f3e3e-254">Tablica ciągu, który zawiera wszystkie pola ograniczniki <see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" /> obiektu.</span><span class="sxs-lookup"><span data-stu-id="f3e3e-254">A string array that contains all of the field delimiters for the <see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" /> object.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f3e3e-255">Właściwość ta ma znaczenie tylko wtedy, gdy <xref:Microsoft.VisualBasic.FileIO.TextFieldParser.TextFieldType%2A> właściwość jest ustawiona na `FieldType.Delimited`.</span><span class="sxs-lookup"><span data-stu-id="f3e3e-255">This property is meaningful only if the <xref:Microsoft.VisualBasic.FileIO.TextFieldParser.TextFieldType%2A> property is set to `FieldType.Delimited`.</span></span>  
  
 <span data-ttu-id="f3e3e-256">Definiowanie ograniczników do pliku tekstowego może być również wykonywane przy użyciu <xref:Microsoft.VisualBasic.FileIO.TextFieldParser.SetDelimiters%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="f3e3e-256">Defining the delimiters for a text file can also be accomplished with the <xref:Microsoft.VisualBasic.FileIO.TextFieldParser.SetDelimiters%2A> method.</span></span>  
  
 <span data-ttu-id="f3e3e-257">W poniższej tabeli przedstawiono przykład zadań, obejmujących `Delimiters` właściwości.</span><span class="sxs-lookup"><span data-stu-id="f3e3e-257">The following table lists an example of a task involving the `Delimiters` property.</span></span>  
  
|<span data-ttu-id="f3e3e-258">Zadanie</span><span class="sxs-lookup"><span data-stu-id="f3e3e-258">To</span></span>|<span data-ttu-id="f3e3e-259">Zobacz</span><span class="sxs-lookup"><span data-stu-id="f3e3e-259">See</span></span>|  
|--------|---------|  
|<span data-ttu-id="f3e3e-260">Odczyt z pliku tekstowego z separatorami</span><span class="sxs-lookup"><span data-stu-id="f3e3e-260">Read from a delimited text file</span></span>|[<span data-ttu-id="f3e3e-261">Instrukcje: Odczyt z plików tekstowych rozdzielonych przecinkami</span><span class="sxs-lookup"><span data-stu-id="f3e3e-261">How to: Read From Comma-Delimited Text Files</span></span>](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-comma-delimited-text-files.md)|  
  
   
  
## Examples  
 <span data-ttu-id="f3e3e-262">W tym przykładzie określa, że / / / ogranicznik `TextFieldParser` obiektu `FileReader`, jest przecinek (,).</span><span class="sxs-lookup"><span data-stu-id="f3e3e-262">This example specifies that the delimiter for the `TextFieldParser` object, `FileReader`, is a comma (,).</span></span>  
  
 [!code-vb[VbVbalrTextFieldParser#9](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrTextFieldParser/VB/Class1.vb#9)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="f3e3e-263">Wartość ogranicznika jest ustawiona na znaku nowego wiersza, ciągiem pustym lub <see langword="Nothing" />.</span><span class="sxs-lookup"><span data-stu-id="f3e3e-263">A delimiter value is set to a newline character, an empty string, or <see langword="Nothing" />.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFieldParser(System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.FileIO.TextFieldParser.SetDelimiters(System.String[])" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md"><span data-ttu-id="f3e3e-264">Obiekty (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="f3e3e-264">Objects (Visual Basic)</span></span></related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/parsing-text-files-with-the-textfieldparser-object.md"><span data-ttu-id="f3e3e-265">Analizowanie plików tekstowych za pomocą obiektu TextFieldParser</span><span class="sxs-lookup"><span data-stu-id="f3e3e-265">Parsing Text Files with the TextFieldParser Object</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="f3e3e-266">Zwalnia zasoby używane przez <see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" /> obiektu.</span><span class="sxs-lookup"><span data-stu-id="f3e3e-266">Releases resources used by the <see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" /> object.</span></span></summary>
        <altmember cref="M:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFieldParser(System.String)" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md"><span data-ttu-id="f3e3e-267">Obiekty (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="f3e3e-267">Objects (Visual Basic)</span></span></related>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileIO.TextFieldParser.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose() = IDisposable::Dispose;" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="textFieldParser.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f3e3e-268">Zwalnia zasoby używane przez <see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" /> obiektu.</span><span class="sxs-lookup"><span data-stu-id="f3e3e-268">Releases resources used by the <see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" /> object.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFieldParser(System.String)" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md"><span data-ttu-id="f3e3e-269">Obiekty (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="f3e3e-269">Objects (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familynewslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileIO.TextFieldParser.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="textFieldParser.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing"><span data-ttu-id="f3e3e-270">Wartość logiczna.</span><span class="sxs-lookup"><span data-stu-id="f3e3e-270">Boolean.</span></span> <span data-ttu-id="f3e3e-271"><see langword="True" /> zwalnia zasoby zarządzane i niezarządzane; <see langword="False" /> wersje tylko niezarządzane zasoby.</span><span class="sxs-lookup"><span data-stu-id="f3e3e-271"><see langword="True" /> releases both managed and unmanaged resources; <see langword="False" /> releases only unmanaged resources.</span></span></param>
        <summary><span data-ttu-id="f3e3e-272">Zwalnia zasoby używane przez <see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" /> obiektu.</span><span class="sxs-lookup"><span data-stu-id="f3e3e-272">Releases resources used by the <see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" /> object.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFieldParser(System.String)" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md"><span data-ttu-id="f3e3e-273">Obiekty (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="f3e3e-273">Objects (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="EndOfData">
      <MemberSignature Language="C#" Value="public bool EndOfData { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EndOfData" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.FileIO.TextFieldParser.EndOfData" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EndOfData As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EndOfData { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.EndOfData : bool" Usage="Microsoft.VisualBasic.FileIO.TextFieldParser.EndOfData" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f3e3e-274">Zwraca <see langword="True" /> w przypadku niepustych nie bez komentarza linie między bieżącym położeniu kursora i na końcu pliku.</span><span class="sxs-lookup"><span data-stu-id="f3e3e-274">Returns <see langword="True" /> if there are no non-blank, non-comment lines between the current cursor position and the end of the file.</span></span></summary>
        <value><span data-ttu-id="f3e3e-275"><see langword="True" /> Jeśli nie ma więcej danych do odczytania. w przeciwnym razie <see langword="False" />.</span><span class="sxs-lookup"><span data-stu-id="f3e3e-275"><see langword="True" /> if there is no more data to read; otherwise, <see langword="False" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f3e3e-276">Ta właściwość może służyć podczas odczytu z plików można określić koniec odczytywanych danych.</span><span class="sxs-lookup"><span data-stu-id="f3e3e-276">This property can be used when reading from files to determine the end of the data being read.</span></span>  
  
 <span data-ttu-id="f3e3e-277">W poniższej tabeli wymieniono przykłady zadań obejmujących `EndOfData` właściwości.</span><span class="sxs-lookup"><span data-stu-id="f3e3e-277">The following table lists examples of tasks involving the `EndOfData` property.</span></span>  
  
|<span data-ttu-id="f3e3e-278">Zadanie</span><span class="sxs-lookup"><span data-stu-id="f3e3e-278">To</span></span>|<span data-ttu-id="f3e3e-279">Zobacz</span><span class="sxs-lookup"><span data-stu-id="f3e3e-279">See</span></span>|  
|--------|---------|  
|<span data-ttu-id="f3e3e-280">Odczytać zawartość pliku o wartościach rozdzielanych</span><span class="sxs-lookup"><span data-stu-id="f3e3e-280">Read from a delimited file</span></span>|[<span data-ttu-id="f3e3e-281">Instrukcje: Odczyt z plików tekstowych rozdzielonych przecinkami</span><span class="sxs-lookup"><span data-stu-id="f3e3e-281">How to: Read From Comma-Delimited Text Files</span></span>](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-comma-delimited-text-files.md)|  
|<span data-ttu-id="f3e3e-282">Odczytać zawartość pliku z wartościami o stałej szerokości</span><span class="sxs-lookup"><span data-stu-id="f3e3e-282">Read from a fixed-width file</span></span>|[<span data-ttu-id="f3e3e-283">Instrukcje: Odczyt z plików testowych o stałej szerokości</span><span class="sxs-lookup"><span data-stu-id="f3e3e-283">How to: Read From Fixed-width Text Files</span></span>](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-fixed-width-text-files.md)|  
  
   
  
## Examples  
 <span data-ttu-id="f3e3e-284">W tym przykładzie użyto `EndofData` właściwość pętli wszystkie pola w pliku o `TextFieldReader`, `FileReader`.</span><span class="sxs-lookup"><span data-stu-id="f3e3e-284">This example uses the `EndofData` property to loop through all the fields in the file with the `TextFieldReader`, `FileReader`.</span></span>  
  
 [!code-vb[VbVbalrTextFieldParser#6](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrTextFieldParser/VB/Class1.vb#6)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFieldParser(System.String)" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md"><span data-ttu-id="f3e3e-285">Obiekty (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="f3e3e-285">Objects (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ErrorLine">
      <MemberSignature Language="C#" Value="public string ErrorLine { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ErrorLine" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLine" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ErrorLine As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ErrorLine { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ErrorLine : string" Usage="Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLine" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f3e3e-286">Zwraca wiersz, który spowodował najnowszych, ostatnio <see cref="T:Microsoft.VisualBasic.FileIO.MalformedLineException" /> wyjątku.</span><span class="sxs-lookup"><span data-stu-id="f3e3e-286">Returns the line that caused the most recent <see cref="T:Microsoft.VisualBasic.FileIO.MalformedLineException" /> exception.</span></span></summary>
        <value><span data-ttu-id="f3e3e-287">Wiersz, który spowodował najnowszych, ostatnio <see cref="T:Microsoft.VisualBasic.FileIO.MalformedLineException" /> wyjątku.</span><span class="sxs-lookup"><span data-stu-id="f3e3e-287">The line that caused the most recent <see cref="T:Microsoft.VisualBasic.FileIO.MalformedLineException" /> exception.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f3e3e-288">Jeśli nie <xref:Microsoft.VisualBasic.FileIO.MalformedLineException> były zgłaszane wyjątki, zwrócony pusty ciąg.</span><span class="sxs-lookup"><span data-stu-id="f3e3e-288">If no <xref:Microsoft.VisualBasic.FileIO.MalformedLineException> exceptions have been thrown, an empty string is returned.</span></span>  
  
 <span data-ttu-id="f3e3e-289"><xref:Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLineNumber%2A> Właściwości można wyświetlić numer wiersza, który spowodował wyjątek.</span><span class="sxs-lookup"><span data-stu-id="f3e3e-289">The <xref:Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLineNumber%2A> property can be used to display the number of the line that caused the exception.</span></span>  
  
 <span data-ttu-id="f3e3e-290">W poniższej tabeli wymieniono przykłady zadań obejmujących `ErrorLine` właściwości.</span><span class="sxs-lookup"><span data-stu-id="f3e3e-290">The following table lists examples of tasks involving the `ErrorLine` property.</span></span>  
  
|<span data-ttu-id="f3e3e-291">Zadanie</span><span class="sxs-lookup"><span data-stu-id="f3e3e-291">To</span></span>|<span data-ttu-id="f3e3e-292">Zobacz</span><span class="sxs-lookup"><span data-stu-id="f3e3e-292">See</span></span>|  
|--------|---------|  
|<span data-ttu-id="f3e3e-293">Odczytać zawartość pliku o wartościach rozdzielanych</span><span class="sxs-lookup"><span data-stu-id="f3e3e-293">Read from a delimited file</span></span>|[<span data-ttu-id="f3e3e-294">Instrukcje: Odczyt z plików tekstowych rozdzielonych przecinkami</span><span class="sxs-lookup"><span data-stu-id="f3e3e-294">How to: Read From Comma-Delimited Text Files</span></span>](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-comma-delimited-text-files.md)|  
|<span data-ttu-id="f3e3e-295">Odczytać zawartość pliku z wartościami o stałej szerokości</span><span class="sxs-lookup"><span data-stu-id="f3e3e-295">Read from a fixed-width file</span></span>|[<span data-ttu-id="f3e3e-296">Instrukcje: Odczyt z plików testowych o stałej szerokości</span><span class="sxs-lookup"><span data-stu-id="f3e3e-296">How to: Read From Fixed-width Text Files</span></span>](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-fixed-width-text-files.md)|  
  
   
  
## Examples  
 <span data-ttu-id="f3e3e-297">W tym przykładzie użyto `ErrorLine` właściwość, aby wyświetlić wiersz, powodując bieżącego <xref:Microsoft.VisualBasic.FileIO.MalformedLineException> wyjątku.</span><span class="sxs-lookup"><span data-stu-id="f3e3e-297">This example uses the `ErrorLine` property to display the line causing the current <xref:Microsoft.VisualBasic.FileIO.MalformedLineException> exception.</span></span>  
  
 [!code-vb[VbVbalrTextFieldParser#1](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrTextFieldParser/VB/Class1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFieldParser(System.String)" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md"><span data-ttu-id="f3e3e-298">Obiekty (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="f3e3e-298">Objects (Visual Basic)</span></span></related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/parsing-text-files-with-the-textfieldparser-object.md"><span data-ttu-id="f3e3e-299">Analizowanie plików tekstowych za pomocą obiektu TextFieldParser</span><span class="sxs-lookup"><span data-stu-id="f3e3e-299">Parsing Text Files with the TextFieldParser Object</span></span></related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-text-files-with-multiple-formats.md"><span data-ttu-id="f3e3e-300">Instrukcje: Odczyt z pliku tekstowego w wielu formatach w Visual Basic</span><span class="sxs-lookup"><span data-stu-id="f3e3e-300">How to: Read From a Text File with Multiple Formats in Visual Basic</span></span></related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-fixed-width-text-files.md"><span data-ttu-id="f3e3e-301">Instrukcje: Odczyt z plików testowych o stałej szerokości, w języku Visual Basic</span><span class="sxs-lookup"><span data-stu-id="f3e3e-301">How to: Read From a Fixed-width Text File in Visual Basic</span></span></related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-comma-delimited-text-files.md"><span data-ttu-id="f3e3e-302">Instrukcje: Odczyt z pliku tekstowego, rozdzielanego przecinkami w języku Visual Basic</span><span class="sxs-lookup"><span data-stu-id="f3e3e-302">How to: Read From a Comma-Delimited Text File in Visual Basic</span></span></related>
        <related type="Article" href="~/docs/visual-basic/language-reference/statements/try-catch-finally-statement.md"><span data-ttu-id="f3e3e-303">Try...Catch...Finally — Instrukcja (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="f3e3e-303">Try...Catch...Finally Statement (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ErrorLineNumber">
      <MemberSignature Language="C#" Value="public long ErrorLineNumber { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 ErrorLineNumber" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLineNumber" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ErrorLineNumber As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long ErrorLineNumber { long get(); };" />
      <MemberSignature Language="F#" Value="member this.ErrorLineNumber : int64" Usage="Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLineNumber" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f3e3e-304">Zwraca numer wiersza, który spowodował najnowszych, ostatnio <see cref="T:Microsoft.VisualBasic.FileIO.MalformedLineException" /> wyjątku.</span><span class="sxs-lookup"><span data-stu-id="f3e3e-304">Returns the number of the line that caused the most recent <see cref="T:Microsoft.VisualBasic.FileIO.MalformedLineException" /> exception.</span></span></summary>
        <value><span data-ttu-id="f3e3e-305">Numer wiersza, który spowodował najnowszych, ostatnio <see cref="T:Microsoft.VisualBasic.FileIO.MalformedLineException" /> wyjątku.</span><span class="sxs-lookup"><span data-stu-id="f3e3e-305">The number of the line that caused the most recent <see cref="T:Microsoft.VisualBasic.FileIO.MalformedLineException" /> exception.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f3e3e-306">Jeśli nie <xref:Microsoft.VisualBasic.FileIO.MalformedLineException> były zgłaszane wyjątki, jest zwracana wartość -1.</span><span class="sxs-lookup"><span data-stu-id="f3e3e-306">If no <xref:Microsoft.VisualBasic.FileIO.MalformedLineException> exceptions have been thrown, -1 is returned.</span></span>  
  
 <span data-ttu-id="f3e3e-307"><xref:Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLine%2A> Właściwości można wyświetlić numer wiersza, który spowodował wyjątek.</span><span class="sxs-lookup"><span data-stu-id="f3e3e-307">The <xref:Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLine%2A> property can be used to display the number of the line that caused the exception.</span></span> <span data-ttu-id="f3e3e-308">Puste wiersze i komentarze nie są ignorowane podczas określania numer wiersza.</span><span class="sxs-lookup"><span data-stu-id="f3e3e-308">Blank lines and comments are not ignored when determining the line number.</span></span>  
  
 <span data-ttu-id="f3e3e-309">W poniższej tabeli wymieniono przykłady zadań obejmujących `ErrorLineNumber` właściwości.</span><span class="sxs-lookup"><span data-stu-id="f3e3e-309">The following table lists examples of tasks involving the `ErrorLineNumber` property.</span></span>  
  
|<span data-ttu-id="f3e3e-310">Zadanie</span><span class="sxs-lookup"><span data-stu-id="f3e3e-310">To</span></span>|<span data-ttu-id="f3e3e-311">Zobacz</span><span class="sxs-lookup"><span data-stu-id="f3e3e-311">See</span></span>|  
|--------|---------|  
|<span data-ttu-id="f3e3e-312">Odczytać zawartość pliku o wartościach rozdzielanych</span><span class="sxs-lookup"><span data-stu-id="f3e3e-312">Read from a delimited file</span></span>|[<span data-ttu-id="f3e3e-313">Instrukcje: Odczyt z plików tekstowych rozdzielonych przecinkami</span><span class="sxs-lookup"><span data-stu-id="f3e3e-313">How to: Read From Comma-Delimited Text Files</span></span>](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-comma-delimited-text-files.md)|  
|<span data-ttu-id="f3e3e-314">Odczytać zawartość pliku z wartościami o stałej szerokości</span><span class="sxs-lookup"><span data-stu-id="f3e3e-314">Read from a fixed-width file</span></span>|[<span data-ttu-id="f3e3e-315">Instrukcje: Odczyt z plików testowych o stałej szerokości</span><span class="sxs-lookup"><span data-stu-id="f3e3e-315">How to: Read From Fixed-width Text Files</span></span>](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-fixed-width-text-files.md)|  
  
   
  
## Examples  
 <span data-ttu-id="f3e3e-316">W tym przykładzie użyto `ErrorLineNumber` właściwość, aby wyświetlić lokalizację wiersza, powodując bieżącego <xref:Microsoft.VisualBasic.FileIO.MalformedLineException> wyjątku.</span><span class="sxs-lookup"><span data-stu-id="f3e3e-316">This example uses the `ErrorLineNumber` property to display the location of the line causing the current <xref:Microsoft.VisualBasic.FileIO.MalformedLineException> exception.</span></span>  
  
 [!code-vb[VbVbalrTextFieldParser#3](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrTextFieldParser/VB/Class1.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFieldParser(System.String)" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md"><span data-ttu-id="f3e3e-317">Obiekty (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="f3e3e-317">Objects (Visual Basic)</span></span></related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/parsing-text-files-with-the-textfieldparser-object.md"><span data-ttu-id="f3e3e-318">Analizowanie plików tekstowych za pomocą obiektu TextFieldParser</span><span class="sxs-lookup"><span data-stu-id="f3e3e-318">Parsing Text Files with the TextFieldParser Object</span></span></related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-text-files-with-multiple-formats.md"><span data-ttu-id="f3e3e-319">Instrukcje: Odczyt z pliku tekstowego w wielu formatach w Visual Basic</span><span class="sxs-lookup"><span data-stu-id="f3e3e-319">How to: Read From a Text File with Multiple Formats in Visual Basic</span></span></related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-fixed-width-text-files.md"><span data-ttu-id="f3e3e-320">Instrukcje: Odczyt z plików testowych o stałej szerokości, w języku Visual Basic</span><span class="sxs-lookup"><span data-stu-id="f3e3e-320">How to: Read From a Fixed-width Text File in Visual Basic</span></span></related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-comma-delimited-text-files.md"><span data-ttu-id="f3e3e-321">Instrukcje: Odczyt z pliku tekstowego, rozdzielanego przecinkami w języku Visual Basic</span><span class="sxs-lookup"><span data-stu-id="f3e3e-321">How to: Read From a Comma-Delimited Text File in Visual Basic</span></span></related>
        <related type="Article" href="~/docs/visual-basic/language-reference/statements/try-catch-finally-statement.md"><span data-ttu-id="f3e3e-322">Try...Catch...Finally — Instrukcja (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="f3e3e-322">Try...Catch...Finally Statement (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="FieldWidths">
      <MemberSignature Language="C#" Value="public int[] FieldWidths { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32[] FieldWidths" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.FileIO.TextFieldParser.FieldWidths" />
      <MemberSignature Language="VB.NET" Value="Public Property FieldWidths As Integer()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;int&gt; ^ FieldWidths { cli::array &lt;int&gt; ^ get(); void set(cli::array &lt;int&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.FieldWidths : int[] with get, set" Usage="Microsoft.VisualBasic.FileIO.TextFieldParser.FieldWidths" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f3e3e-323">Określa szerokość każdej kolumny w pliku tekstowym analizowana.</span><span class="sxs-lookup"><span data-stu-id="f3e3e-323">Denotes the width of each column in the text file being parsed.</span></span></summary>
        <value><span data-ttu-id="f3e3e-324">Tablicę liczb całkowitych, który zawiera szerokość każdej kolumny w pliku tekstowym, które są analizowane.</span><span class="sxs-lookup"><span data-stu-id="f3e3e-324">An integer array that contains the width of each column in the text file that is being parsed.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f3e3e-325">Właściwość ta ma znaczenie tylko wtedy, gdy <xref:Microsoft.VisualBasic.FileIO.TextFieldParser.TextFieldType%2A> właściwość jest ustawiona na `FieldType.FixedWidth`.</span><span class="sxs-lookup"><span data-stu-id="f3e3e-325">This property is meaningful only if the <xref:Microsoft.VisualBasic.FileIO.TextFieldParser.TextFieldType%2A> property is set to `FieldType.FixedWidth`.</span></span> <span data-ttu-id="f3e3e-326">Jeśli ostatni wpis w tablicy jest mniejsza lub równa zero, pole będzie traktowana jako o zmiennej szerokości.</span><span class="sxs-lookup"><span data-stu-id="f3e3e-326">If the last entry in the array is less than or equal to zero, the field is assumed to be of variable width.</span></span>  
  
 <span data-ttu-id="f3e3e-327"><xref:Microsoft.VisualBasic.FileIO.TextFieldParser.SetFieldWidths%2A> Metodę można również ustawić szerokościami pól.</span><span class="sxs-lookup"><span data-stu-id="f3e3e-327">The <xref:Microsoft.VisualBasic.FileIO.TextFieldParser.SetFieldWidths%2A> method can also be used to set field widths.</span></span>  
  
 <span data-ttu-id="f3e3e-328">W poniższej tabeli wymieniono przykłady zadań obejmujących `FieldWidths` właściwości.</span><span class="sxs-lookup"><span data-stu-id="f3e3e-328">The following table lists examples of tasks involving the `FieldWidths` property.</span></span>  
  
|<span data-ttu-id="f3e3e-329">Zadanie</span><span class="sxs-lookup"><span data-stu-id="f3e3e-329">To</span></span>|<span data-ttu-id="f3e3e-330">Zobacz</span><span class="sxs-lookup"><span data-stu-id="f3e3e-330">See</span></span>|  
|--------|---------|  
|<span data-ttu-id="f3e3e-331">Odczyt z plików testowych o stałej szerokości</span><span class="sxs-lookup"><span data-stu-id="f3e3e-331">Read from a fixed-width text file</span></span>|[<span data-ttu-id="f3e3e-332">Instrukcje: Odczyt z plików testowych o stałej szerokości</span><span class="sxs-lookup"><span data-stu-id="f3e3e-332">How to: Read From Fixed-width Text Files</span></span>](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-fixed-width-text-files.md)|  
  
   
  
## Examples  
 <span data-ttu-id="f3e3e-333">W tym przykładzie odczytuje plik `ParserText.txt`, określenie szerokości; pierwsza kolumna jest 5 znaki dwubajtowe, drugi to 10, trzecia będzie 11 i czwarta to o zmiennej szerokości</span><span class="sxs-lookup"><span data-stu-id="f3e3e-333">This example reads the file `ParserText.txt`, specifying the widths; the first column is 5 characters wide, the second is 10, the third is 11, and the fourth is of variable width</span></span>  
  
 [!code-vb[VbVbalrTextFieldParser#16](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrTextFieldParser/VB/Class1.vb#16)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="f3e3e-334">Wartość szerokości, w dowolnym miejscu innym niż ostatni wpis w tablicy jest mniejsza niż lub równy zeru.</span><span class="sxs-lookup"><span data-stu-id="f3e3e-334">A width value in any location other than the last entry of the array is less than or equal to zero.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFieldParser(System.String)" />
        <altmember cref="T:Microsoft.VisualBasic.FileIO.FieldType" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md"><span data-ttu-id="f3e3e-335">Obiekty (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="f3e3e-335">Objects (Visual Basic)</span></span></related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-fixed-width-text-files.md"><span data-ttu-id="f3e3e-336">Instrukcje: Odczyt z plików testowych o stałej szerokości, w języku Visual Basic</span><span class="sxs-lookup"><span data-stu-id="f3e3e-336">How to: Read From a Fixed-width Text File in Visual Basic</span></span></related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-comma-delimited-text-files.md"><span data-ttu-id="f3e3e-337">Instrukcje: Odczyt z pliku tekstowego, rozdzielanego przecinkami w języku Visual Basic</span><span class="sxs-lookup"><span data-stu-id="f3e3e-337">How to: Read From a Comma-Delimited Text File in Visual Basic</span></span></related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-text-files-with-multiple-formats.md"><span data-ttu-id="f3e3e-338">Instrukcje: Odczyt z pliku tekstowego w wielu formatach w Visual Basic</span><span class="sxs-lookup"><span data-stu-id="f3e3e-338">How to: Read From a Text File with Multiple Formats in Visual Basic</span></span></related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/parsing-text-files-with-the-textfieldparser-object.md"><span data-ttu-id="f3e3e-339">Analizowanie plików tekstowych za pomocą obiektu TextFieldParser</span><span class="sxs-lookup"><span data-stu-id="f3e3e-339">Parsing Text Files with the TextFieldParser Object</span></span></related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-3.0/2ewecs64(v=vs.85)"><span data-ttu-id="f3e3e-340">Rozwiązywanie problemów z wyjątkami: Microsoft.VisualBasic.FileIO.TextFieldParser.MalformedLineException</span><span class="sxs-lookup"><span data-stu-id="f3e3e-340">Troubleshooting Exceptions: Microsoft.VisualBasic.FileIO.TextFieldParser.MalformedLineException</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~TextFieldParser ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileIO.TextFieldParser.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!TextFieldParser ()" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; unit" Usage="textFieldParser.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f3e3e-341">Umożliwia <see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" /> obiektu próbę zwolnić zasoby i wykonywać inne operacje oczyszczania, zanim go jest odzyskiwane przez wyrzucanie elementów bezużytecznych.</span><span class="sxs-lookup"><span data-stu-id="f3e3e-341">Allows the <see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" /> object to attempt to free resources and perform other cleanup operations before it is reclaimed by garbage collection.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFieldParser(System.String)" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md"><span data-ttu-id="f3e3e-342">Obiekty (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="f3e3e-342">Objects (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="HasFieldsEnclosedInQuotes">
      <MemberSignature Language="C#" Value="public bool HasFieldsEnclosedInQuotes { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasFieldsEnclosedInQuotes" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.FileIO.TextFieldParser.HasFieldsEnclosedInQuotes" />
      <MemberSignature Language="VB.NET" Value="Public Property HasFieldsEnclosedInQuotes As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasFieldsEnclosedInQuotes { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.HasFieldsEnclosedInQuotes : bool with get, set" Usage="Microsoft.VisualBasic.FileIO.TextFieldParser.HasFieldsEnclosedInQuotes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f3e3e-343">Wskazuje, czy pola są ujęte w znaki cudzysłowu, gdy jest analizowana rozdzielonym pliku.</span><span class="sxs-lookup"><span data-stu-id="f3e3e-343">Denotes whether fields are enclosed in quotation marks when a delimited file is being parsed.</span></span></summary>
        <value><span data-ttu-id="f3e3e-344"><see langword="True" /> Jeśli pola są ujęte w znaki cudzysłowu; w przeciwnym razie <see langword="False" />.</span><span class="sxs-lookup"><span data-stu-id="f3e3e-344"><see langword="True" /> if fields are enclosed in quotation marks; otherwise, <see langword="False" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f3e3e-345">To jest Zaawansowany element członkowski; go nie są wyświetlane w IntelliSense dopóki nie zostanie kliknięta **wszystkich** kartę.</span><span class="sxs-lookup"><span data-stu-id="f3e3e-345">This is an advanced member; it does not show in IntelliSense unless you click the **All** tab.</span></span>  
  
 <span data-ttu-id="f3e3e-346">Jeśli właściwość jest `True`, analizator założono, że pola są ujęte w znaki cudzysłowu ("") i może zawierać końce wierszy.</span><span class="sxs-lookup"><span data-stu-id="f3e3e-346">If the property is `True`, the parser assumes that fields are enclosed in quotation marks (" ") and may contain line endings.</span></span>  
  
 <span data-ttu-id="f3e3e-347">Jeśli pole jest ujęta w znaki cudzysłowu, na przykład `abc, "field2a,field2b", field3` i ta właściwość jest `True`, następnie cały tekst ujęta w znaki cudzysłowu zostaną zwrócone, ponieważ jest; w tym przykładzie zwróci `abc|field2a,field2b|field3`.</span><span class="sxs-lookup"><span data-stu-id="f3e3e-347">If a field is enclosed in quotation marks, for example, `abc, "field2a,field2b", field3` and this property is `True`, then all text enclosed in quotation marks will be returned as is; this example would return `abc|field2a,field2b|field3`.</span></span> <span data-ttu-id="f3e3e-348">Ustawienie tej właściwości na `False` czyniłyby w tym przykładzie zwracany `abc|"field2a|field2b"|field3`.</span><span class="sxs-lookup"><span data-stu-id="f3e3e-348">Setting this property to `False` would make this example return `abc|"field2a|field2b"|field3`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f3e3e-349">W tym przykładzie `HasFieldsEnclosedInQuotes` właściwości `True` dla `myReader`.</span><span class="sxs-lookup"><span data-stu-id="f3e3e-349">This example sets the `HasFieldsEnclosedInQuotes` property to `True` for `myReader`.</span></span>  
  
 [!code-vb[VbVbalrTextFieldParser#18](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrTextFieldParser/VB/Class1.vb#18)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFieldParser(System.String)" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md"><span data-ttu-id="f3e3e-350">Obiekty (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="f3e3e-350">Objects (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="LineNumber">
      <MemberSignature Language="C#" Value="public long LineNumber { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 LineNumber" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.FileIO.TextFieldParser.LineNumber" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LineNumber As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long LineNumber { long get(); };" />
      <MemberSignature Language="F#" Value="member this.LineNumber : int64" Usage="Microsoft.VisualBasic.FileIO.TextFieldParser.LineNumber" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f3e3e-351">Zwraca bieżący numer wiersza, lub zwraca wartość -1, jeśli nie więcej znaków są dostępne w strumieniu.</span><span class="sxs-lookup"><span data-stu-id="f3e3e-351">Returns the current line number, or returns -1 if no more characters are available in the stream.</span></span></summary>
        <value><span data-ttu-id="f3e3e-352">Numer bieżącego wiersza.</span><span class="sxs-lookup"><span data-stu-id="f3e3e-352">The current line number.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f3e3e-353">To jest Zaawansowany element członkowski; go nie są wyświetlane w IntelliSense dopóki nie zostanie kliknięta **wszystkich** kartę.</span><span class="sxs-lookup"><span data-stu-id="f3e3e-353">This is an advanced member; it does not show in IntelliSense unless you click the **All** tab.</span></span>  
  
 <span data-ttu-id="f3e3e-354">Puste wiersze i komentarze nie są ignorowane podczas określania numer wiersza.</span><span class="sxs-lookup"><span data-stu-id="f3e3e-354">Blank lines and comments are not ignored when determining the line number.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f3e3e-355">W tym przykładzie wyszukuje nazwy "Kowalski" w pliku tekstowym i raportowanie wiersze, które nastąpi to w.</span><span class="sxs-lookup"><span data-stu-id="f3e3e-355">This example searches for the name "Jones" in the text file and reports what line(s) it occurs on.</span></span>  
  
 [!code-vb[VbVbalrTextFieldParser#11](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrTextFieldParser/VB/Class1.vb#11)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFieldParser(System.String)" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md"><span data-ttu-id="f3e3e-356">Obiekty (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="f3e3e-356">Objects (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="PeekChars">
      <MemberSignature Language="C#" Value="public string PeekChars (int numberOfChars);" />
      <MemberSignature Language="ILAsm" Value=".method public instance string PeekChars(int32 numberOfChars) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileIO.TextFieldParser.PeekChars(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function PeekChars (numberOfChars As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ PeekChars(int numberOfChars);" />
      <MemberSignature Language="F#" Value="member this.PeekChars : int -&gt; string" Usage="textFieldParser.PeekChars numberOfChars" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="numberOfChars" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="numberOfChars"><span data-ttu-id="f3e3e-357"><see langword="Int32" />.</span><span class="sxs-lookup"><span data-stu-id="f3e3e-357"><see langword="Int32" />.</span></span> <span data-ttu-id="f3e3e-358">Liczba znaków do odczytania.</span><span class="sxs-lookup"><span data-stu-id="f3e3e-358">Number of characters to read.</span></span> <span data-ttu-id="f3e3e-359">Wymagana.</span><span class="sxs-lookup"><span data-stu-id="f3e3e-359">Required.</span></span></param>
        <summary><span data-ttu-id="f3e3e-360">Odczytuje określoną liczbę znaków, bez przesuwania kursora.</span><span class="sxs-lookup"><span data-stu-id="f3e3e-360">Reads the specified number of characters without advancing the cursor.</span></span></summary>
        <returns><span data-ttu-id="f3e3e-361">Ciąg zawierający określoną liczbę znaków do odczytu.</span><span class="sxs-lookup"><span data-stu-id="f3e3e-361">A string that contains the specified number of characters read.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f3e3e-362">`numberOfChars` Wartość musi być mniejsza niż całkowita liczba znaków w wierszu.</span><span class="sxs-lookup"><span data-stu-id="f3e3e-362">The `numberOfChars` value must be less than the total number of characters in the line.</span></span> <span data-ttu-id="f3e3e-363">Jeśli nie jest dostępna, ciąg zwracany przez `PeekChars` zostanie obcięta długość wiersza.</span><span class="sxs-lookup"><span data-stu-id="f3e3e-363">If it is not, the string returned by `PeekChars` will be truncated to the length of the line.</span></span>  
  
 <span data-ttu-id="f3e3e-364">Puste wiersze są ignorowane.</span><span class="sxs-lookup"><span data-stu-id="f3e3e-364">Blank lines are ignored.</span></span>  
  
 <span data-ttu-id="f3e3e-365">Znaki końca wiersza nie są zwracane.</span><span class="sxs-lookup"><span data-stu-id="f3e3e-365">End-of-line characters are not returned.</span></span>  
  
 <span data-ttu-id="f3e3e-366">`PeekChars` Metoda wykonuje nie analizowania; znak końca wiersza, w ramach pola z rozdzielaną wartością jest interpretowany jako rzeczywisty końca wiersza.</span><span class="sxs-lookup"><span data-stu-id="f3e3e-366">The `PeekChars` method performs no parsing; an end-of- line character within a delimited field is interpreted as the actual end of the line.</span></span>  
  
 <span data-ttu-id="f3e3e-367">W poniższej tabeli wymieniono przykłady zadań obejmujących `PeekChars` metody.</span><span class="sxs-lookup"><span data-stu-id="f3e3e-367">The following table lists examples of tasks involving the `PeekChars` method.</span></span>  
  
|<span data-ttu-id="f3e3e-368">Zadanie</span><span class="sxs-lookup"><span data-stu-id="f3e3e-368">To</span></span>|<span data-ttu-id="f3e3e-369">Zobacz</span><span class="sxs-lookup"><span data-stu-id="f3e3e-369">See</span></span>|  
|--------|---------|  
|<span data-ttu-id="f3e3e-370">Przed jego analizowanie określić format pola</span><span class="sxs-lookup"><span data-stu-id="f3e3e-370">Determine the format of a field before parsing it</span></span>|[<span data-ttu-id="f3e3e-371">Instrukcje: Odczyt z plików tekstowych w wielu formatach</span><span class="sxs-lookup"><span data-stu-id="f3e3e-371">How to: Read From Text Files with Multiple Formats</span></span>](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-text-files-with-multiple-formats.md)|  
  
   
  
## Examples  
 <span data-ttu-id="f3e3e-372">W tym przykładzie użyto `PeekChars` do znalezienia końca danych i zatrzymać, w tym momencie podczas analizowania pliku.</span><span class="sxs-lookup"><span data-stu-id="f3e3e-372">This example uses `PeekChars` to find the end of the data and stop parsing the file at that point.</span></span>  
  
 [!code-vb[VbVbalrTextFieldParser#8](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrTextFieldParser/VB/Class1.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="f3e3e-373"><paramref name="numberOfChars" /> jest mniejsza niż 0.</span><span class="sxs-lookup"><span data-stu-id="f3e3e-373"><paramref name="numberOfChars" /> is less than 0.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFieldParser(System.String)" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md"><span data-ttu-id="f3e3e-374">Obiekty (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="f3e3e-374">Objects (Visual Basic)</span></span></related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/parsing-text-files-with-the-textfieldparser-object.md"><span data-ttu-id="f3e3e-375">Analizowanie plików tekstowych za pomocą obiektu TextFieldParser</span><span class="sxs-lookup"><span data-stu-id="f3e3e-375">Parsing Text Files with the TextFieldParser Object</span></span></related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/reading-from-files.md"><span data-ttu-id="f3e3e-376">Odczyt z plików w Visual Basic</span><span class="sxs-lookup"><span data-stu-id="f3e3e-376">Reading from Files in Visual Basic</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ReadFields">
      <MemberSignature Language="C#" Value="public string[] ReadFields ();" />
      <MemberSignature Language="ILAsm" Value=".method public instance string[] ReadFields() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileIO.TextFieldParser.ReadFields" />
      <MemberSignature Language="VB.NET" Value="Public Function ReadFields () As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::String ^&gt; ^ ReadFields();" />
      <MemberSignature Language="F#" Value="member this.ReadFields : unit -&gt; string[]" Usage="textFieldParser.ReadFields " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f3e3e-377">Odczytuje wszystkie pola w bieżącym wierszu zwraca je jako tablicę ciągów, a następnie przesuwa kursor do następnego wiersza zawierającego dane.</span><span class="sxs-lookup"><span data-stu-id="f3e3e-377">Reads all fields on the current line, returns them as an array of strings, and advances the cursor to the next line containing data.</span></span></summary>
        <returns><span data-ttu-id="f3e3e-378">Tablica ciągów zawierająca wartości pól dla bieżącego wiersza.</span><span class="sxs-lookup"><span data-stu-id="f3e3e-378">An array of strings that contains field values for the current line.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f3e3e-379">Aby umożliwić użytkownikom analizowanie plików tekstowych w wielu formatach `ReadFields` metoda sprawdza, czy wartości `TextFieldType`, `Delimiters`, i `FieldWidths`, jeśli są one określone, każdym razem jest wywoływana.</span><span class="sxs-lookup"><span data-stu-id="f3e3e-379">In order to allow users to parse text files in multiple formats, the `ReadFields` method examines the values of `TextFieldType`, `Delimiters`, and `FieldWidths`, if they are specified, each time it is called.</span></span> <span data-ttu-id="f3e3e-380">Użytkownicy muszą poprawnie skonfigurować `TextFieldType` i `FieldWidths` lub `Delimiters` właściwości, zgodnie z potrzebami.</span><span class="sxs-lookup"><span data-stu-id="f3e3e-380">Users need to correctly configure the `TextFieldType` and `FieldWidths` or `Delimiters` properties, as appropriate.</span></span> <span data-ttu-id="f3e3e-381">Jeśli `TextFieldType` ustawiono `Delimited`, i `Delimiters` nie jest ustawiona, lub jeśli `TextFieldType` jest ustawiona na `FixedWidth` i `FieldWidths`, zgłaszany jest wyjątek.</span><span class="sxs-lookup"><span data-stu-id="f3e3e-381">If `TextFieldType` is set to `Delimited`, and `Delimiters` is not set, or if `TextFieldType` is set to `FixedWidth` and `FieldWidths`, an exception is thrown.</span></span>  
  
 <span data-ttu-id="f3e3e-382">Jeśli `ReadFields` napotka puste wiersze są one pomijane i zwracany jest następny wiersz nie jest pusty.</span><span class="sxs-lookup"><span data-stu-id="f3e3e-382">If `ReadFields` encounters blank lines, they are skipped and the next non-blank line is returned.</span></span>  
  
 <span data-ttu-id="f3e3e-383">Jeśli `ReadFields` metody nie można przeanalizować bieżącego wiersza, zgłasza wyjątek, a nie przenosi do następnego wiersza.</span><span class="sxs-lookup"><span data-stu-id="f3e3e-383">If the `ReadFields` method cannot parse the current line, it raises an exception and does not move to the next line.</span></span> <span data-ttu-id="f3e3e-384">Pozwoli to aplikacji w taki sposób spróbować ponownie przeanalizować wiersza.</span><span class="sxs-lookup"><span data-stu-id="f3e3e-384">This enables your application to attempt to parse the line again.</span></span>  
  
 <span data-ttu-id="f3e3e-385">W poniższej tabeli wymieniono przykłady zadań obejmujących `ReadFields` metody.</span><span class="sxs-lookup"><span data-stu-id="f3e3e-385">The following table lists examples of tasks involving the `ReadFields` method.</span></span>  
  
|<span data-ttu-id="f3e3e-386">Zadanie</span><span class="sxs-lookup"><span data-stu-id="f3e3e-386">To</span></span>|<span data-ttu-id="f3e3e-387">Zobacz</span><span class="sxs-lookup"><span data-stu-id="f3e3e-387">See</span></span>|  
|--------|---------|  
|<span data-ttu-id="f3e3e-388">Odczytać zawartość pliku o wartościach rozdzielanych</span><span class="sxs-lookup"><span data-stu-id="f3e3e-388">Read from a delimited file</span></span>|[<span data-ttu-id="f3e3e-389">Instrukcje: Odczyt z plików tekstowych rozdzielonych przecinkami</span><span class="sxs-lookup"><span data-stu-id="f3e3e-389">How to: Read From Comma-Delimited Text Files</span></span>](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-comma-delimited-text-files.md)|  
|<span data-ttu-id="f3e3e-390">Odczytać zawartość pliku z wartościami o stałej szerokości</span><span class="sxs-lookup"><span data-stu-id="f3e3e-390">Read from a fixed-width file</span></span>|[<span data-ttu-id="f3e3e-391">Instrukcje: Odczyt z plików testowych o stałej szerokości</span><span class="sxs-lookup"><span data-stu-id="f3e3e-391">How to: Read From Fixed-width Text Files</span></span>](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-fixed-width-text-files.md)|  
  
   
  
## Examples  
 <span data-ttu-id="f3e3e-392">W tym przykładzie użyto `ReadFields` metodę, aby odczytać z pliku rozdzielanego przecinkami `ParserText.txt`.</span><span class="sxs-lookup"><span data-stu-id="f3e3e-392">This example uses the `ReadFields` method to read from the comma-delimited file `ParserText.txt`.</span></span> <span data-ttu-id="f3e3e-393">W przykładzie polecenie zapisuje pola, które mają `Testfile.txt`.</span><span class="sxs-lookup"><span data-stu-id="f3e3e-393">The example writes the fields to `Testfile.txt`.</span></span>  
  
 [!code-vb[VbVbalrTextFieldParser#2](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrTextFieldParser/VB/Class1.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:Microsoft.VisualBasic.FileIO.MalformedLineException"><span data-ttu-id="f3e3e-394">Nie można przeanalizować pola, używając określonego formatu.</span><span class="sxs-lookup"><span data-stu-id="f3e3e-394">A field cannot be parsed by using the specified format.</span></span></exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="f3e3e-395">Powiązane wartość typu wyliczeniowego: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</span><span class="sxs-lookup"><span data-stu-id="f3e3e-395">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</span></span></permission>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="f3e3e-396">Powiązane wartość typu wyliczeniowego: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" />.</span><span class="sxs-lookup"><span data-stu-id="f3e3e-396">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" />.</span></span></permission>
        <altmember cref="M:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFieldParser(System.String)" />
        <altmember cref="P:Microsoft.VisualBasic.FileIO.TextFieldParser.TextFieldType" />
        <altmember cref="P:Microsoft.VisualBasic.FileIO.TextFieldParser.FieldWidths" />
        <altmember cref="P:Microsoft.VisualBasic.FileIO.TextFieldParser.Delimiters" />
        <altmember cref="M:Microsoft.VisualBasic.FileIO.TextFieldParser.ReadLine" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md"><span data-ttu-id="f3e3e-397">Obiekty (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="f3e3e-397">Objects (Visual Basic)</span></span></related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-comma-delimited-text-files.md"><span data-ttu-id="f3e3e-398">Instrukcje: Odczyt z pliku tekstowego, rozdzielanego przecinkami w języku Visual Basic</span><span class="sxs-lookup"><span data-stu-id="f3e3e-398">How to: Read From a Comma-Delimited Text File in Visual Basic</span></span></related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-fixed-width-text-files.md"><span data-ttu-id="f3e3e-399">Instrukcje: Odczyt z plików testowych o stałej szerokości, w języku Visual Basic</span><span class="sxs-lookup"><span data-stu-id="f3e3e-399">How to: Read From a Fixed-width Text File in Visual Basic</span></span></related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-text-files-with-multiple-formats.md"><span data-ttu-id="f3e3e-400">Instrukcje: Odczyt z pliku tekstowego w wielu formatach w Visual Basic</span><span class="sxs-lookup"><span data-stu-id="f3e3e-400">How to: Read From a Text File with Multiple Formats in Visual Basic</span></span></related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/parsing-text-files-with-the-textfieldparser-object.md"><span data-ttu-id="f3e3e-401">Analizowanie plików tekstowych za pomocą obiektu TextFieldParser</span><span class="sxs-lookup"><span data-stu-id="f3e3e-401">Parsing Text Files with the TextFieldParser Object</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ReadLine">
      <MemberSignature Language="C#" Value="public string ReadLine ();" />
      <MemberSignature Language="ILAsm" Value=".method public instance string ReadLine() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileIO.TextFieldParser.ReadLine" />
      <MemberSignature Language="VB.NET" Value="Public Function ReadLine () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ReadLine();" />
      <MemberSignature Language="F#" Value="member this.ReadLine : unit -&gt; string" Usage="textFieldParser.ReadLine " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f3e3e-402">Zwraca bieżący wiersz w postaci ciągu, a następnie przesuwa kursor do następnego wiersza.</span><span class="sxs-lookup"><span data-stu-id="f3e3e-402">Returns the current line as a string and advances the cursor to the next line.</span></span></summary>
        <returns><span data-ttu-id="f3e3e-403">Bieżący wiersz z pliku lub strumienia.</span><span class="sxs-lookup"><span data-stu-id="f3e3e-403">The current line from the file or stream.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f3e3e-404">`ReadLine` Metoda wykonuje nie analizowania; znak końca wiersza, w ramach pola z rozdzielaną wartością jest interpretowany jako rzeczywisty końca wiersza.</span><span class="sxs-lookup"><span data-stu-id="f3e3e-404">The `ReadLine` method performs no parsing; an end-of-line character within a delimited field is interpreted as the actual end of the line.</span></span>  
  
 <span data-ttu-id="f3e3e-405">`Nothing` jest zwracany, jeśli osiągnięty zostanie koniec pliku.</span><span class="sxs-lookup"><span data-stu-id="f3e3e-405">`Nothing` is returned if the end of the file is reached.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f3e3e-406">W tym przykładzie odczytuje plik `ParserText.txt` i zapisuje go w `Testfile.txt`.</span><span class="sxs-lookup"><span data-stu-id="f3e3e-406">This example reads through the file `ParserText.txt` and writes it to `Testfile.txt`.</span></span>  
  
 [!code-vb[VbVbalrTextFieldParser#15](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrTextFieldParser/VB/Class1.vb#15)]  
  
 <span data-ttu-id="f3e3e-407">Jeśli `Testfile.txt` nie istnieje, jest tworzony przez `WriteAllText` metody.</span><span class="sxs-lookup"><span data-stu-id="f3e3e-407">If `Testfile.txt` does not exist, it is created by the `WriteAllText` method.</span></span>  
  
 <span data-ttu-id="f3e3e-408">Ten przykład Przepisuje pola jako pojedynczy ciąg; zapewnienie każdego wiersza, wyświetlanie w osobnym wierszu w pliku docelowym `VbCrLf` znak powinna zostać dołączona na końcu każdego wiersza.</span><span class="sxs-lookup"><span data-stu-id="f3e3e-408">This example writes the fields as a single string; to have each line display on its own line in the destination file, a `VbCrLf` character should be appended at the end of each line.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFieldParser(System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.FileIO.TextFieldParser.ReadFields" />
        <altmember cref="M:Microsoft.VisualBasic.FileIO.TextFieldParser.ReadToEnd" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md"><span data-ttu-id="f3e3e-409">Obiekty (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="f3e3e-409">Objects (Visual Basic)</span></span></related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/parsing-text-files-with-the-textfieldparser-object.md"><span data-ttu-id="f3e3e-410">Analizowanie plików tekstowych za pomocą obiektu TextFieldParser</span><span class="sxs-lookup"><span data-stu-id="f3e3e-410">Parsing Text Files with the TextFieldParser Object</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ReadToEnd">
      <MemberSignature Language="C#" Value="public string ReadToEnd ();" />
      <MemberSignature Language="ILAsm" Value=".method public instance string ReadToEnd() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileIO.TextFieldParser.ReadToEnd" />
      <MemberSignature Language="VB.NET" Value="Public Function ReadToEnd () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ReadToEnd();" />
      <MemberSignature Language="F#" Value="member this.ReadToEnd : unit -&gt; string" Usage="textFieldParser.ReadToEnd " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f3e3e-411">Odczytuje w pozostałej części pliku tekstowego i zwraca je jako ciąg.</span><span class="sxs-lookup"><span data-stu-id="f3e3e-411">Reads the remainder of the text file and returns it as a string.</span></span></summary>
        <returns><span data-ttu-id="f3e3e-412">Pozostały tekst z pliku lub strumienia.</span><span class="sxs-lookup"><span data-stu-id="f3e3e-412">The remaining text from the file or stream.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f3e3e-413">To jest Zaawansowany element członkowski; go nie są wyświetlane w IntelliSense dopóki nie zostanie kliknięta **wszystkich** kartę.</span><span class="sxs-lookup"><span data-stu-id="f3e3e-413">This is an advanced member; it does not show in IntelliSense unless you click the **All** tab.</span></span>  
  
 <span data-ttu-id="f3e3e-414">Jeśli nie ma nic więcej do odczytu, ponieważ osiągnięto koniec pliku, `Nothing` jest zwracana.</span><span class="sxs-lookup"><span data-stu-id="f3e3e-414">If there is nothing more to read because the end of the file has been reached, `Nothing` is returned.</span></span>  
  
 <span data-ttu-id="f3e3e-415">`ReadToEnd` Metoda pomija puste wiersze i komentarze.</span><span class="sxs-lookup"><span data-stu-id="f3e3e-415">The `ReadToEnd` method does not ignore blank lines and comments.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f3e3e-416">W tym przykładzie użyto `ReadToEnd` metodę, aby odczytać cały plik `ParserText.txt` i zapisz go w pliku `Testfile.txt`.</span><span class="sxs-lookup"><span data-stu-id="f3e3e-416">This example uses the `ReadToEnd` method to read the entire file `ParserText.txt` and write it to the file `Testfile.txt`.</span></span>  
  
 [!code-vb[VbVbalrTextFieldParser#10](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrTextFieldParser/VB/Class1.vb#10)]  
  
 <span data-ttu-id="f3e3e-417">Jeśli `Testfile.txt` nie istnieje, jest tworzony przez `WriteAllText` metody.</span><span class="sxs-lookup"><span data-stu-id="f3e3e-417">If `Testfile.txt` does not exist, it is created by the `WriteAllText` method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFieldParser(System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.FileIO.TextFieldParser.ReadFields" />
        <altmember cref="M:Microsoft.VisualBasic.FileIO.TextFieldParser.ReadLine" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md"><span data-ttu-id="f3e3e-418">Obiekty (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="f3e3e-418">Objects (Visual Basic)</span></span></related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/parsing-text-files-with-the-textfieldparser-object.md"><span data-ttu-id="f3e3e-419">Analizowanie plików tekstowych za pomocą obiektu TextFieldParser</span><span class="sxs-lookup"><span data-stu-id="f3e3e-419">Parsing Text Files with the TextFieldParser Object</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="SetDelimiters">
      <MemberSignature Language="C#" Value="public void SetDelimiters (params string[] delimiters);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void SetDelimiters(string[] delimiters) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileIO.TextFieldParser.SetDelimiters(System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetDelimiters (ParamArray delimiters As String())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetDelimiters(... cli::array &lt;System::String ^&gt; ^ delimiters);" />
      <MemberSignature Language="F#" Value="member this.SetDelimiters : string[] -&gt; unit" Usage="textFieldParser.SetDelimiters delimiters" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="delimiters" Type="System.String[]">
          <Attributes>
            <Attribute FrameworkAlternate="netcore-3.0">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="delimiters"><span data-ttu-id="f3e3e-420">Tablica typu <see langword="String" />.</span><span class="sxs-lookup"><span data-stu-id="f3e3e-420">Array of type <see langword="String" />.</span></span></param>
        <summary><span data-ttu-id="f3e3e-421">Określa ograniczniki dla czytelnika do określonej wartości i ustawia typ pola <see langword="Delimited" />.</span><span class="sxs-lookup"><span data-stu-id="f3e3e-421">Sets the delimiters for the reader to the specified values, and sets the field type to <see langword="Delimited" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f3e3e-422">Istniejącą zawartość elementu `Delimiters` właściwości są usuwane, gdy ta metoda jest ustawiona.</span><span class="sxs-lookup"><span data-stu-id="f3e3e-422">The existing contents of the `Delimiters` property are cleared when this method is set.</span></span>  
  
 <span data-ttu-id="f3e3e-423">Ta metoda umożliwia ustawienie ograniczniki bez tworzenia tablicy.</span><span class="sxs-lookup"><span data-stu-id="f3e3e-423">This method provides a way to set delimiters without creating an array.</span></span>  
  
 <span data-ttu-id="f3e3e-424">W poniższej tabeli przedstawiono przykład zadań, obejmujących `SetDelimiters` metody.</span><span class="sxs-lookup"><span data-stu-id="f3e3e-424">The following table lists an example of a task involving the `SetDelimiters` method.</span></span>  
  
|<span data-ttu-id="f3e3e-425">Zadanie</span><span class="sxs-lookup"><span data-stu-id="f3e3e-425">To</span></span>|<span data-ttu-id="f3e3e-426">Zobacz</span><span class="sxs-lookup"><span data-stu-id="f3e3e-426">See</span></span>|  
|--------|---------|  
|<span data-ttu-id="f3e3e-427">Analizowanie pliku tekstowego</span><span class="sxs-lookup"><span data-stu-id="f3e3e-427">Parse a text file</span></span>|[<span data-ttu-id="f3e3e-428">Analizowanie plików tekstowych za pomocą obiektu TextFieldParser</span><span class="sxs-lookup"><span data-stu-id="f3e3e-428">Parsing Text Files with the TextFieldParser Object</span></span>](~/docs/visual-basic/developing-apps/programming/drives-directories-files/parsing-text-files-with-the-textfieldparser-object.md)|  
  
   
  
## Examples  
 <span data-ttu-id="f3e3e-429">W tym przykładzie otwiera analizatora pola tekstowe i definiuje ogranicznik jako `vbTab`.</span><span class="sxs-lookup"><span data-stu-id="f3e3e-429">This example opens a text field parser and defines the delimiter as `vbTab`.</span></span>  
  
 [!code-vb[VbVbalrTextFieldParser#4](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrTextFieldParser/VB/Class1.vb#4)]  
  
 <span data-ttu-id="f3e3e-430">Zastąp ścieżkę `C:\logs\test.log` ze ścieżką i nazwą pliku chcesz przeanalizować.</span><span class="sxs-lookup"><span data-stu-id="f3e3e-430">Replace the path `C:\logs\test.log` with the path and name of the file you wish to parse.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="f3e3e-431">Ogranicznik jest o zerowej długości.</span><span class="sxs-lookup"><span data-stu-id="f3e3e-431">A delimiter is zero-length.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFieldParser(System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.FileIO.TextFieldParser.SetFieldWidths(System.Int32[])" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md"><span data-ttu-id="f3e3e-432">Obiekty (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="f3e3e-432">Objects (Visual Basic)</span></span></related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/parsing-text-files-with-the-textfieldparser-object.md"><span data-ttu-id="f3e3e-433">Analizowanie plików tekstowych za pomocą obiektu TextFieldParser</span><span class="sxs-lookup"><span data-stu-id="f3e3e-433">Parsing Text Files with the TextFieldParser Object</span></span></related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-comma-delimited-text-files.md"><span data-ttu-id="f3e3e-434">Instrukcje: Odczyt z pliku tekstowego, rozdzielanego przecinkami w języku Visual Basic</span><span class="sxs-lookup"><span data-stu-id="f3e3e-434">How to: Read From a Comma-Delimited Text File in Visual Basic</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="SetFieldWidths">
      <MemberSignature Language="C#" Value="public void SetFieldWidths (params int[] fieldWidths);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void SetFieldWidths(int32[] fieldWidths) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileIO.TextFieldParser.SetFieldWidths(System.Int32[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetFieldWidths (ParamArray fieldWidths As Integer())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetFieldWidths(... cli::array &lt;int&gt; ^ fieldWidths);" />
      <MemberSignature Language="F#" Value="member this.SetFieldWidths : int[] -&gt; unit" Usage="textFieldParser.SetFieldWidths fieldWidths" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fieldWidths" Type="System.Int32[]">
          <Attributes>
            <Attribute FrameworkAlternate="netcore-3.0">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="fieldWidths"><span data-ttu-id="f3e3e-435">Tablica <see langword="Integer" />.</span><span class="sxs-lookup"><span data-stu-id="f3e3e-435">Array of <see langword="Integer" />.</span></span></param>
        <summary><span data-ttu-id="f3e3e-436">Określa ograniczniki dla czytnika do określonej wartości.</span><span class="sxs-lookup"><span data-stu-id="f3e3e-436">Sets the delimiters for the reader to the specified values.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f3e3e-437">Istniejącą zawartość elementu `Delimiters` właściwości są usuwane, gdy ta opcja jest ustawiona.</span><span class="sxs-lookup"><span data-stu-id="f3e3e-437">The existing contents of the `Delimiters` property are cleared when this is set.</span></span>  
  
 <span data-ttu-id="f3e3e-438">Ta metoda umożliwia ustawienie ograniczniki bez tworzenia tablicy.</span><span class="sxs-lookup"><span data-stu-id="f3e3e-438">This method provides a way to set delimiters without creating an array.</span></span>  
  
 <span data-ttu-id="f3e3e-439">W poniższej tabeli przedstawiono przykładowe zadania obejmujące `SetFieldWidths` metody.</span><span class="sxs-lookup"><span data-stu-id="f3e3e-439">The following table lists example of tasks involving the `SetFieldWidths` method.</span></span>  
  
|<span data-ttu-id="f3e3e-440">Zadanie</span><span class="sxs-lookup"><span data-stu-id="f3e3e-440">To</span></span>|<span data-ttu-id="f3e3e-441">Zobacz</span><span class="sxs-lookup"><span data-stu-id="f3e3e-441">See</span></span>|  
|--------|---------|  
|<span data-ttu-id="f3e3e-442">Analizowanie pliku tekstowego.</span><span class="sxs-lookup"><span data-stu-id="f3e3e-442">Parse a text file.</span></span>|[<span data-ttu-id="f3e3e-443">Analizowanie plików tekstowych za pomocą obiektu TextFieldParser</span><span class="sxs-lookup"><span data-stu-id="f3e3e-443">Parsing Text Files with the TextFieldParser Object</span></span>](~/docs/visual-basic/developing-apps/programming/drives-directories-files/parsing-text-files-with-the-textfieldparser-object.md)|  
  
   
  
## Examples  
 <span data-ttu-id="f3e3e-444">W tym przykładzie otwiera analizatora pole tekstowe i definiuje szerokość pola jako `5`.</span><span class="sxs-lookup"><span data-stu-id="f3e3e-444">This example opens a text-field parser and defines the field width as `5`.</span></span>  
  
 [!code-vb[VbVbalrTextFieldParser#12](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrTextFieldParser/VB/Class1.vb#12)]  
  
 <span data-ttu-id="f3e3e-445">Zastąp ścieżkę `C:\logs\test.log` ze ścieżką i nazwą pliku chcesz przeanalizować.</span><span class="sxs-lookup"><span data-stu-id="f3e3e-445">Replace the path `C:\logs\test.log` with the path and name of the file you wish to parse.</span></span>  
  
 <span data-ttu-id="f3e3e-446">W poniższym przykładzie otwiera analizatora pole tekstowe i definiuje szerokościami pól jako `5`, `10`, a zmienna.</span><span class="sxs-lookup"><span data-stu-id="f3e3e-446">The following example opens a text-field parser and defines the field widths as `5`, `10`, and variable.</span></span>  
  
 [!code-vb[VbVbalrTextFieldParser#13](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrTextFieldParser/VB/Class1.vb#13)]  
  
 <span data-ttu-id="f3e3e-447">Zastąp ścieżkę `C:\logs\test.log` ze ścieżką i nazwą pliku chcesz przeanalizować.</span><span class="sxs-lookup"><span data-stu-id="f3e3e-447">Replace the path `C:\logs\test.log` with the path and name of the file you wish to parse.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFieldParser(System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.FileIO.TextFieldParser.SetDelimiters(System.String[])" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md"><span data-ttu-id="f3e3e-448">Obiekty (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="f3e3e-448">Objects (Visual Basic)</span></span></related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/parsing-text-files-with-the-textfieldparser-object.md"><span data-ttu-id="f3e3e-449">Analizowanie plików tekstowych za pomocą obiektu TextFieldParser</span><span class="sxs-lookup"><span data-stu-id="f3e3e-449">Parsing Text Files with the TextFieldParser Object</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="System.IDisposable.Dispose">
      <MemberSignature Language="C#" Value="void IDisposable.Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.IDisposable.Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileIO.TextFieldParser.System#IDisposable#Dispose" />
      <MemberSignature Language="VB.NET" Value="Sub Dispose () Implements IDisposable.Dispose" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.IDisposable.Dispose() = IDisposable::Dispose;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TextFieldType">
      <MemberSignature Language="C#" Value="public Microsoft.VisualBasic.FileIO.FieldType TextFieldType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.VisualBasic.FileIO.FieldType TextFieldType" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.FileIO.TextFieldParser.TextFieldType" />
      <MemberSignature Language="VB.NET" Value="Public Property TextFieldType As FieldType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::VisualBasic::FileIO::FieldType TextFieldType { Microsoft::VisualBasic::FileIO::FieldType get(); void set(Microsoft::VisualBasic::FileIO::FieldType value); };" />
      <MemberSignature Language="F#" Value="member this.TextFieldType : Microsoft.VisualBasic.FileIO.FieldType with get, set" Usage="Microsoft.VisualBasic.FileIO.TextFieldParser.TextFieldType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.FileIO.FieldType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f3e3e-450">Wskazuje, czy jest rozdzielany plik, który ma być analizowany, lub o stałej szerokości.</span><span class="sxs-lookup"><span data-stu-id="f3e3e-450">Indicates whether the file to be parsed is delimited or fixed-width.</span></span></summary>
        <value><span data-ttu-id="f3e3e-451">A <see cref="P:Microsoft.VisualBasic.FileIO.TextFieldParser.TextFieldType" /> wartość wskazującą, czy jest rozdzielany plik, który ma być analizowany, lub o stałej szerokości.</span><span class="sxs-lookup"><span data-stu-id="f3e3e-451">A <see cref="P:Microsoft.VisualBasic.FileIO.TextFieldParser.TextFieldType" /> value that indicates whether the file to be parsed is delimited or fixed-width.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f3e3e-452">Wartość domyślna tej właściwości jest lista.</span><span class="sxs-lookup"><span data-stu-id="f3e3e-452">The default value of this property is delimited.</span></span>  
  
 <span data-ttu-id="f3e3e-453">W poniższej tabeli wymieniono przykłady zadań obejmujących `TextFieldType` właściwości.</span><span class="sxs-lookup"><span data-stu-id="f3e3e-453">The following table lists examples of tasks involving the `TextFieldType` property.</span></span>  
  
|<span data-ttu-id="f3e3e-454">Zadanie</span><span class="sxs-lookup"><span data-stu-id="f3e3e-454">To</span></span>|<span data-ttu-id="f3e3e-455">Zobacz</span><span class="sxs-lookup"><span data-stu-id="f3e3e-455">See</span></span>|  
|--------|---------|  
|<span data-ttu-id="f3e3e-456">Odczyt z pliku tekstowego z separatorami</span><span class="sxs-lookup"><span data-stu-id="f3e3e-456">Read from a delimited text file</span></span>|[<span data-ttu-id="f3e3e-457">Instrukcje: Odczyt z plików tekstowych rozdzielonych przecinkami</span><span class="sxs-lookup"><span data-stu-id="f3e3e-457">How to: Read From Comma-Delimited Text Files</span></span>](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-comma-delimited-text-files.md)|  
|<span data-ttu-id="f3e3e-458">Odczyt z plików testowych o stałej szerokości</span><span class="sxs-lookup"><span data-stu-id="f3e3e-458">Read from a fixed-width text file</span></span>|[<span data-ttu-id="f3e3e-459">Instrukcje: Odczyt z plików testowych o stałej szerokości</span><span class="sxs-lookup"><span data-stu-id="f3e3e-459">How to: Read From Fixed-width Text Files</span></span>](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-fixed-width-text-files.md)|  
|<span data-ttu-id="f3e3e-460">Odczyt z pliku tekstowego w wielu formatach</span><span class="sxs-lookup"><span data-stu-id="f3e3e-460">Read from a text file with multiple formats</span></span>|[<span data-ttu-id="f3e3e-461">Instrukcje: Odczyt z plików tekstowych w wielu formatach</span><span class="sxs-lookup"><span data-stu-id="f3e3e-461">How to: Read From Text Files with Multiple Formats</span></span>](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-text-files-with-multiple-formats.md)|  
  
   
  
## Examples  
 <span data-ttu-id="f3e3e-462">Ten przykład tworzy `TextFieldParser`, `FileReader`i określa je przecinkami.</span><span class="sxs-lookup"><span data-stu-id="f3e3e-462">This example creates a `TextFieldParser`, `FileReader`, and specifies that it is delimited.</span></span>  
  
 [!code-vb[VbVbalrTextFieldParser#19](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrTextFieldParser/VB/Class1.vb#19)]  
  
 <span data-ttu-id="f3e3e-463">Ten przykład tworzy `TextFieldParser`, `FileReader`i określa, że jest stałej szerokości.</span><span class="sxs-lookup"><span data-stu-id="f3e3e-463">This example creates a `TextFieldParser`, `FileReader`, and specifies that it is fixed-width.</span></span>  
  
 [!code-vb[VbVbalrTextFieldParser#20](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrTextFieldParser/VB/Class1.vb#20)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFieldParser(System.String)" />
        <altmember cref="T:Microsoft.VisualBasic.FileIO.FieldType" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md"><span data-ttu-id="f3e3e-464">Obiekty (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="f3e3e-464">Objects (Visual Basic)</span></span></related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/parsing-text-files-with-the-textfieldparser-object.md"><span data-ttu-id="f3e3e-465">Analizowanie plików tekstowych za pomocą obiektu TextFieldParser</span><span class="sxs-lookup"><span data-stu-id="f3e3e-465">Parsing Text Files with the TextFieldParser Object</span></span></related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-comma-delimited-text-files.md"><span data-ttu-id="f3e3e-466">Instrukcje: Odczyt z pliku tekstowego, rozdzielanego przecinkami w języku Visual Basic</span><span class="sxs-lookup"><span data-stu-id="f3e3e-466">How to: Read From a Comma-Delimited Text File in Visual Basic</span></span></related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-fixed-width-text-files.md"><span data-ttu-id="f3e3e-467">Instrukcje: Odczyt z plików testowych o stałej szerokości, w języku Visual Basic</span><span class="sxs-lookup"><span data-stu-id="f3e3e-467">How to: Read From a Fixed-width Text File in Visual Basic</span></span></related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-text-files-with-multiple-formats.md"><span data-ttu-id="f3e3e-468">Instrukcje: Odczyt z pliku tekstowego w wielu formatach w Visual Basic</span><span class="sxs-lookup"><span data-stu-id="f3e3e-468">How to: Read From a Text File with Multiple Formats in Visual Basic</span></span></related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-3.0/2ewecs64(v=vs.85)"><span data-ttu-id="f3e3e-469">Rozwiązywanie problemów z wyjątkami: Microsoft.VisualBasic.FileIO.TextFieldParser.MalformedLineException</span><span class="sxs-lookup"><span data-stu-id="f3e3e-469">Troubleshooting Exceptions: Microsoft.VisualBasic.FileIO.TextFieldParser.MalformedLineException</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="TrimWhiteSpace">
      <MemberSignature Language="C#" Value="public bool TrimWhiteSpace { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool TrimWhiteSpace" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.FileIO.TextFieldParser.TrimWhiteSpace" />
      <MemberSignature Language="VB.NET" Value="Public Property TrimWhiteSpace As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool TrimWhiteSpace { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.TrimWhiteSpace : bool with get, set" Usage="Microsoft.VisualBasic.FileIO.TextFieldParser.TrimWhiteSpace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f3e3e-470">Wskazuje, czy początkowe i końcowe biały powinny być usuwane z wartości pól.</span><span class="sxs-lookup"><span data-stu-id="f3e3e-470">Indicates whether leading and trailing white space should be trimmed from field values.</span></span></summary>
        <value><span data-ttu-id="f3e3e-471"><see langword="True" /> Jeśli początkowe i końcowe biały znak przycięcia z wartości pola. w przeciwnym razie <see langword="False" />.</span><span class="sxs-lookup"><span data-stu-id="f3e3e-471"><see langword="True" /> if leading and trailing white space should be trimmed from field values; otherwise, <see langword="False" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f3e3e-472">Wartość domyślna tej właściwości to `True`.</span><span class="sxs-lookup"><span data-stu-id="f3e3e-472">The default value for this property is `True`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f3e3e-473">Ten przykład tworzy `TextFieldParser`, `FileReader`i ustawia `TrimWhiteSpace` właściwość `True`.</span><span class="sxs-lookup"><span data-stu-id="f3e3e-473">This example creates a `TextFieldParser`, `FileReader`, and sets the `TrimWhiteSpace` property to `True`.</span></span>  
  
 [!code-vb[VbVbalrTextFieldParser#7](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrTextFieldParser/VB/Class1.vb#7)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFieldParser(System.String)" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md"><span data-ttu-id="f3e3e-474">Obiekty (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="f3e3e-474">Objects (Visual Basic)</span></span></related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/parsing-text-files-with-the-textfieldparser-object.md"><span data-ttu-id="f3e3e-475">Analizowanie plików tekstowych za pomocą obiektu TextFieldParser</span><span class="sxs-lookup"><span data-stu-id="f3e3e-475">Parsing Text Files with the TextFieldParser Object</span></span></related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-comma-delimited-text-files.md"><span data-ttu-id="f3e3e-476">Instrukcje: Odczyt z pliku tekstowego, rozdzielanego przecinkami w języku Visual Basic</span><span class="sxs-lookup"><span data-stu-id="f3e3e-476">How to: Read From a Comma-Delimited Text File in Visual Basic</span></span></related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-fixed-width-text-files.md"><span data-ttu-id="f3e3e-477">Instrukcje: Odczyt z plików testowych o stałej szerokości, w języku Visual Basic</span><span class="sxs-lookup"><span data-stu-id="f3e3e-477">How to: Read From a Fixed-width Text File in Visual Basic</span></span></related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-text-files-with-multiple-formats.md"><span data-ttu-id="f3e3e-478">Instrukcje: Odczyt z pliku tekstowego w wielu formatach w Visual Basic</span><span class="sxs-lookup"><span data-stu-id="f3e3e-478">How to: Read From a Text File with Multiple Formats in Visual Basic</span></span></related>
      </Docs>
    </Member>
  </Members>
</Type>