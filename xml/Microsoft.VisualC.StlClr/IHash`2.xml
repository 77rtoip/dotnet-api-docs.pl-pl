<Type Name="IHash&lt;TKey,TValue&gt;" FullName="Microsoft.VisualC.StlClr.IHash&lt;TKey,TValue&gt;">
  <Metadata><Meta Name="ms.openlocfilehash" Value="9788435894d164d5b9fb25037c8f7f8b85166c9b" /><Meta Name="ms.sourcegitcommit" Value="756d085f27705e86604f1bba5f2086ee23761acf" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="01/30/2019" /><Meta Name="ms.locfileid" Value="55313716" /></Metadata><TypeSignature Language="C#" Value="public interface IHash&lt;TKey,TValue&gt; : ICloneable, Microsoft.VisualC.StlClr.Generic.IBidirectionalContainer&lt;TValue&gt;, System.Collections.ICollection" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract beforefieldinit IHash`2&lt;TKey, TValue&gt; implements class Microsoft.VisualC.StlClr.Generic.IBidirectionalContainer`1&lt;!TValue&gt;, class System.Collections.ICollection, class System.Collections.IEnumerable, class System.ICloneable" />
  <TypeSignature Language="DocId" Value="T:Microsoft.VisualC.StlClr.IHash`2" />
  <TypeSignature Language="VB.NET" Value="Public Interface IHash(Of TKey, TValue)&#xA;Implements IBidirectionalContainer(Of TValue), ICloneable, ICollection" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename TKey, typename TValue&gt;&#xA;public interface class IHash : ICloneable, Microsoft::VisualC::StlClr::Generic::IBidirectionalContainer&lt;TValue&gt;, System::Collections::ICollection" />
  <TypeSignature Language="F#" Value="type IHash&lt;'Key, 'Value&gt; = interface&#xA;    interface IBidirectionalContainer&lt;'Value&gt;&#xA;    interface ICloneable&#xA;    interface ICollection&#xA;    interface IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TKey" />
    <TypeParameter Name="TValue" />
  </TypeParameters>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.VisualC.StlClr.Generic.IBidirectionalContainer&lt;TValue&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.ICollection</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1005")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <typeparam name="TKey"><span data-ttu-id="0917b-101">Typ kluczowy składnik elementu w kontrolowanej sekwencji.</span><span class="sxs-lookup"><span data-stu-id="0917b-101">The type of the key component of an element in the controlled sequence.</span></span></typeparam>
    <typeparam name="TValue"><span data-ttu-id="0917b-102">Typ składnika wartość elementu w kontrolowanej sekwencji.</span><span class="sxs-lookup"><span data-stu-id="0917b-102">The type of the value component of an element in the controlled sequence.</span></span></typeparam>
    <summary><span data-ttu-id="0917b-103">Definiuje interfejs STL/CLR <c>hash_map</c>, <c>hash_multimap</c>, <c>hash_set</c>, i <c>hash_multiset</c> obiektów.</span><span class="sxs-lookup"><span data-stu-id="0917b-103">Defines the interface of the STL/CLR <c>hash_map</c>, <c>hash_multimap</c>, <c>hash_set</c>, and <c>hash_multiset</c> objects.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[unnamed_parm](~/includes/unnamed-parm-md.md)]  
  
 <span data-ttu-id="0917b-104">Aby uzyskać więcej informacji, zobacz [skrótu\_mapy (STL/CLR)](/cpp/dotnet/hash-map-stl-clr), [skrótu\_multimap (STL/CLR)](/cpp/dotnet/hash-multimap-stl-clr), [skrótu\_Ustaw (STL/CLR)](/cpp/dotnet/hash-set-stl-clr)i [skrótu\_multiset (STL/CLR)](/cpp/dotnet/hash-multiset-stl-clr).</span><span class="sxs-lookup"><span data-stu-id="0917b-104">For more information, see [hash\_map (STL/CLR)](/cpp/dotnet/hash-map-stl-clr), [hash\_multimap (STL/CLR)](/cpp/dotnet/hash-multimap-stl-clr), [hash\_set (STL/CLR)](/cpp/dotnet/hash-set-stl-clr), and [hash\_multiset (STL/CLR)](/cpp/dotnet/hash-multiset-stl-clr).</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="begin">
      <MemberSignature Language="C#" Value="public void begin (ref Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator&lt;TValue&gt; );" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.void begin(class Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1&lt;!TValue&gt;&amp; ) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.IHash`2.begin(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}@)" />
      <MemberSignature Language="VB.NET" Value="Public Function begin (ByRef  As ContainerBidirectionalIterator(Of TValue)) As Void" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ^ begin(Microsoft::VisualC::StlClr::Generic::ContainerBidirectionalIterator&lt;TValue&gt; ^ % );" />
      <MemberSignature Language="F#" Value="abstract member begin :  -&gt; unit" Usage="iHash.begin " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="" Type="Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator&lt;TValue&gt;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name=""><span data-ttu-id="0917b-105">Iterator dwukierunkowy, który wyznacza pierwszego elementu w kontrolowanej sekwencji lub tuż za koniec pustą sekwencją.</span><span class="sxs-lookup"><span data-stu-id="0917b-105">A bidirectional iterator that designates the first element of the controlled sequence, or just beyond the end of an empty sequence.</span></span> <span data-ttu-id="0917b-106">Służy do uzyskiwania iterator, który wyznacza <paramref name="current" /> początek kontrolowanej sekwencji, ale jej stan można zmienić, jeśli zmieni się długość kontrolowanej sekwencji.</span><span class="sxs-lookup"><span data-stu-id="0917b-106">You use it to obtain an iterator that designates the <paramref name="current" /> beginning of the controlled sequence, but its status can change if the length of the controlled sequence changes.</span></span></param>
        <summary><span data-ttu-id="0917b-107">Określa początek kontrolowanej sekwencji.</span><span class="sxs-lookup"><span data-stu-id="0917b-107">Designates the beginning of the controlled sequence.</span></span></summary>
        <returns><span data-ttu-id="0917b-108">Iterator.</span><span class="sxs-lookup"><span data-stu-id="0917b-108">An iterator.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  
 <span data-ttu-id="0917b-109">Aby uzyskać więcej informacji, zobacz [skrótu\_map::begin (STL/CLR)](/cpp/dotnet/hash-map-begin-stl-clr), [skrótu\_multimap::begin (STL/CLR)](/cpp/dotnet/hash-multimap-begin-stl-clr), [skrótu\_set::begin (STL/CLR)](/cpp/dotnet/hash-set-begin-stl-clr), i [skrótu\_multiset::begin (STL/CLR)](/cpp/dotnet/hash-multiset-begin-stl-clr).</span><span class="sxs-lookup"><span data-stu-id="0917b-109">For more information, see [hash\_map::begin (STL/CLR)](/cpp/dotnet/hash-map-begin-stl-clr), [hash\_multimap::begin (STL/CLR)](/cpp/dotnet/hash-multimap-begin-stl-clr), [hash\_set::begin (STL/CLR)](/cpp/dotnet/hash-set-begin-stl-clr), and [hash\_multiset::begin (STL/CLR)](/cpp/dotnet/hash-multiset-begin-stl-clr).</span></span>  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="bucket_count">
      <MemberSignature Language="C#" Value="public int bucket_count ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 bucket_count() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.IHash`2.bucket_count" />
      <MemberSignature Language="VB.NET" Value="Public Function bucket_count () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int bucket_count();" />
      <MemberSignature Language="F#" Value="abstract member bucket_count : unit -&gt; int" Usage="iHash.bucket_count " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="0917b-110">Zlicza liczbę przedziałów w tabeli wyznaczania wartości skrótu.</span><span class="sxs-lookup"><span data-stu-id="0917b-110">Counts the number of buckets in the hash table.</span></span></summary>
        <returns><span data-ttu-id="0917b-111">Bieżąca liczba zasobników w tabeli wyznaczania wartości skrótu.</span><span class="sxs-lookup"><span data-stu-id="0917b-111">The current number of buckets in the hash table.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0917b-112">Aby uzyskać więcej informacji, zobacz [skrótu\_map::bucket_count (STL/CLR)](/cpp/dotnet/hash-map-bucket-count-stl-clr), [skrótu\_multimap::bucket_count (STL/CLR)](/cpp/dotnet/hash-multimap-bucket-count-stl-clr), [skrótu\_set::bucket _count (STL/CLR)](/cpp/dotnet/hash-set-bucket-count-stl-clr), i [skrótu\_multiset::bucket_count (STL/CLR)](/cpp/dotnet/hash-multiset-bucket-count-stl-clr).</span><span class="sxs-lookup"><span data-stu-id="0917b-112">For more information, see [hash\_map::bucket_count (STL/CLR)](/cpp/dotnet/hash-map-bucket-count-stl-clr), [hash\_multimap::bucket_count (STL/CLR)](/cpp/dotnet/hash-multimap-bucket-count-stl-clr), [hash\_set::bucket_count (STL/CLR)](/cpp/dotnet/hash-set-bucket-count-stl-clr), and [hash\_multiset::bucket_count (STL/CLR)](/cpp/dotnet/hash-multiset-bucket-count-stl-clr).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="clear">
      <MemberSignature Language="C#" Value="public void clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.IHash`2.clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void clear();" />
      <MemberSignature Language="F#" Value="abstract member clear : unit -&gt; unit" Usage="iHash.clear " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="0917b-113">Usuwa wszystkie elementy z kontenera.</span><span class="sxs-lookup"><span data-stu-id="0917b-113">Removes all elements from the container.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0917b-114">Aby uzyskać więcej informacji, zobacz [skrótu\_map::clear (STL/CLR)](/cpp/dotnet/hash-map-clear-stl-clr), [skrótu\_multimap::clear (STL/CLR)](/cpp/dotnet/hash-multimap-clear-stl-clr), [skrótu\_set::clear (STL/CLR)](/cpp/dotnet/hash-set-clear-stl-clr), i [skrótu\_multiset::clear (STL/CLR)](/cpp/dotnet/hash-multiset-clear-stl-clr).</span><span class="sxs-lookup"><span data-stu-id="0917b-114">For more information, see [hash\_map::clear (STL/CLR)](/cpp/dotnet/hash-map-clear-stl-clr), [hash\_multimap::clear (STL/CLR)](/cpp/dotnet/hash-multimap-clear-stl-clr), [hash\_set::clear (STL/CLR)](/cpp/dotnet/hash-set-clear-stl-clr), and [hash\_multiset::clear (STL/CLR)](/cpp/dotnet/hash-multiset-clear-stl-clr).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="count">
      <MemberSignature Language="C#" Value="public int count (TKey _Keyval);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 count(!TKey _Keyval) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.IHash`2.count(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function count (_Keyval As TKey) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int count(TKey _Keyval);" />
      <MemberSignature Language="F#" Value="abstract member count : 'Key -&gt; int" Usage="iHash.count _Keyval" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="_Keyval" Type="TKey" />
      </Parameters>
      <Docs>
        <param name="_Keyval"><span data-ttu-id="0917b-115">Wartość klucza do wyszukania.</span><span class="sxs-lookup"><span data-stu-id="0917b-115">The key value for which to search.</span></span></param>
        <summary><span data-ttu-id="0917b-116">Wyszukuje liczbę elementów, które odpowiadają określonemu kluczowi.</span><span class="sxs-lookup"><span data-stu-id="0917b-116">Finds the number of elements that match a specified key.</span></span></summary>
        <returns><span data-ttu-id="0917b-117">Liczba elementów w kontrolowanej sekwencji, który ma ten sam klucz jako <paramref name="_Keyval" />.</span><span class="sxs-lookup"><span data-stu-id="0917b-117">The number of elements in the controlled sequence that have the same key as <paramref name="_Keyval" />.</span></span> <span data-ttu-id="0917b-118">Umożliwia ona określenie liczby elementów aktualnie w kontrolowanej sekwencji, które odpowiadają określonemu kluczowi.</span><span class="sxs-lookup"><span data-stu-id="0917b-118">You use it to determine the number of elements currently in the controlled sequence that match a specified key.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0917b-119">Aby uzyskać więcej informacji, zobacz [skrótu\_map::count (STL/CLR)](/cpp/dotnet/hash-map-count-stl-clr), [skrótu\_multimap::count (STL/CLR)](/cpp/dotnet/hash-multimap-count-stl-clr), [skrótu\_set::count (STL/CLR)](/cpp/dotnet/hash-set-count-stl-clr), i [skrótu\_multiset::count (STL/CLR)](/cpp/dotnet/hash-multiset-count-stl-clr).</span><span class="sxs-lookup"><span data-stu-id="0917b-119">For more information, see [hash\_map::count (STL/CLR)](/cpp/dotnet/hash-map-count-stl-clr), [hash\_multimap::count (STL/CLR)](/cpp/dotnet/hash-multimap-count-stl-clr), [hash\_set::count (STL/CLR)](/cpp/dotnet/hash-set-count-stl-clr), and [hash\_multiset::count (STL/CLR)](/cpp/dotnet/hash-multiset-count-stl-clr).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="empty">
      <MemberSignature Language="C#" Value="public bool empty ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool empty() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.IHash`2.empty" />
      <MemberSignature Language="VB.NET" Value="Public Function empty () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool empty();" />
      <MemberSignature Language="F#" Value="abstract member empty : unit -&gt; bool" Usage="iHash.empty " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="0917b-120">Testy czy elementy nie są obecne w kontenerze.</span><span class="sxs-lookup"><span data-stu-id="0917b-120">Tests whether no elements are present in the container.</span></span></summary>
        <returns><span data-ttu-id="0917b-121"><see langword="true" /> Jeśli kontener nie ma żadnych elementów; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="0917b-121"><see langword="true" /> if the container has no elements; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0917b-122">Aby uzyskać więcej informacji, zobacz [skrótu\_map::empty (STL/CLR)](/cpp/dotnet/hash-map-empty-stl-clr), [skrótu\_multimap::empty (STL/CLR)](/cpp/dotnet/hash-multimap-empty-stl-clr), [skrótu\_set::empty (STL/CLR)](/cpp/dotnet/hash-set-empty-stl-clr), i [skrótu\_multiset::empty (STL/CLR)](/cpp/dotnet/hash-multiset-empty-stl-clr).</span><span class="sxs-lookup"><span data-stu-id="0917b-122">For more information, see [hash\_map::empty (STL/CLR)](/cpp/dotnet/hash-map-empty-stl-clr), [hash\_multimap::empty (STL/CLR)](/cpp/dotnet/hash-multimap-empty-stl-clr), [hash\_set::empty (STL/CLR)](/cpp/dotnet/hash-set-empty-stl-clr), and [hash\_multiset::empty (STL/CLR)](/cpp/dotnet/hash-multiset-empty-stl-clr).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="end">
      <MemberSignature Language="C#" Value="public void end (ref Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator&lt;TValue&gt; );" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.void end(class Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1&lt;!TValue&gt;&amp; ) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.IHash`2.end(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}@)" />
      <MemberSignature Language="VB.NET" Value="Public Function end (ByRef  As ContainerBidirectionalIterator(Of TValue)) As Void" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ^ end(Microsoft::VisualC::StlClr::Generic::ContainerBidirectionalIterator&lt;TValue&gt; ^ % );" />
      <MemberSignature Language="F#" Value="abstract member end :  -&gt; unit" Usage="iHash.end " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="" Type="Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator&lt;TValue&gt;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name=""><span data-ttu-id="0917b-123">Iterator dwukierunkowy, który wskazuje tuż za koniec kontrolowanej sekwencji.</span><span class="sxs-lookup"><span data-stu-id="0917b-123">A bidirectional iterator that points just beyond the end of the controlled sequence.</span></span> <span data-ttu-id="0917b-124">Umożliwia ona uzyskać iterator, który określa koniec kontrolowanej sekwencji.</span><span class="sxs-lookup"><span data-stu-id="0917b-124">You use it to obtain an iterator that designates the end of the controlled sequence.</span></span> <span data-ttu-id="0917b-125">Jego stan zmienia się na zmiany długości kontrolowanej sekwencji.</span><span class="sxs-lookup"><span data-stu-id="0917b-125">Its status does not change when the length of the controlled sequence changes.</span></span></param>
        <summary><span data-ttu-id="0917b-126">Określa koniec kontrolowanej sekwencji.</span><span class="sxs-lookup"><span data-stu-id="0917b-126">Designates the end of the controlled sequence.</span></span></summary>
        <returns><span data-ttu-id="0917b-127">Iterator.</span><span class="sxs-lookup"><span data-stu-id="0917b-127">An iterator.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  
 <span data-ttu-id="0917b-128">Aby uzyskać więcej informacji, zobacz [skrótu\_map::end (STL/CLR)](/cpp/dotnet/hash-map-end-stl-clr), [skrótu\_multimap::end (STL/CLR)](/cpp/dotnet/hash-multimap-end-stl-clr), [skrótu\_set::end (STL/CLR)](/cpp/dotnet/hash-set-end-stl-clr), i [skrótu\_multiset::end (STL/CLR)](/cpp/dotnet/hash-multiset-end-stl-clr).</span><span class="sxs-lookup"><span data-stu-id="0917b-128">For more information, see [hash\_map::end (STL/CLR)](/cpp/dotnet/hash-map-end-stl-clr), [hash\_multimap::end (STL/CLR)](/cpp/dotnet/hash-multimap-end-stl-clr), [hash\_set::end (STL/CLR)](/cpp/dotnet/hash-set-end-stl-clr), and [hash\_multiset::end (STL/CLR)](/cpp/dotnet/hash-multiset-end-stl-clr).</span></span>  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="equal_range">
      <MemberSignature Language="C#" Value="public void equal_range (ref Microsoft.VisualC.StlClr.GenericPair&lt;Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator&lt;TValue&gt;,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator&lt;TValue&gt;&gt; , TKey _Keyval);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.void equal_range(class Microsoft.VisualC.StlClr.GenericPair`2&lt;class Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1&lt;!TValue&gt;, class Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1&lt;!TValue&gt;&gt;&amp; , !TKey _Keyval) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.IHash`2.equal_range(Microsoft.VisualC.StlClr.GenericPair{Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1},Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}}@,`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function equal_range (ByRef  As GenericPair(Of ContainerBidirectionalIterator(Of TValue), ContainerBidirectionalIterator(Of TValue)), _Keyval As TKey) As Void" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ^ equal_range(Microsoft::VisualC::StlClr::GenericPair&lt;Microsoft::VisualC::StlClr::Generic::ContainerBidirectionalIterator&lt;TValue&gt; ^, Microsoft::VisualC::StlClr::Generic::ContainerBidirectionalIterator&lt;TValue&gt; ^&gt; ^ % , TKey _Keyval);" />
      <MemberSignature Language="F#" Value="abstract member equal_range :  * 'Key -&gt; unit" Usage="iHash.equal_range (, _Keyval)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="" Type="Microsoft.VisualC.StlClr.GenericPair&lt;Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator&lt;TValue&gt;,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator&lt;TValue&gt;&gt;" RefType="ref" />
        <Parameter Name="_Keyval" Type="TKey" />
      </Parameters>
      <Docs>
        <param name=""><span data-ttu-id="0917b-129">Para iteratorów, które określają zakres elementów aktualnie w kontrolowanej sekwencji, które odpowiadają określonemu kluczowi.</span><span class="sxs-lookup"><span data-stu-id="0917b-129">A pair of iterators that determine the range of elements currently in the controlled sequence that match a specified key.</span></span></param>
        <param name="_Keyval"><span data-ttu-id="0917b-130">Wartość klucza do wyszukania.</span><span class="sxs-lookup"><span data-stu-id="0917b-130">The key value for which to search.</span></span></param>
        <summary><span data-ttu-id="0917b-131">Wyszukuje zakres, który odpowiada określonemu kluczowi.</span><span class="sxs-lookup"><span data-stu-id="0917b-131">Finds the range that matches a specified key.</span></span></summary>
        <returns><span data-ttu-id="0917b-132">Para iteratorów.</span><span class="sxs-lookup"><span data-stu-id="0917b-132">A pair of iterators.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  
 <span data-ttu-id="0917b-133">Aby uzyskać więcej informacji, zobacz [wyznaczania wartości skrótu\_map::equal_range (STL/CLR)][skrótu\_map::equal_range (STL/CLR)](/cpp/dotnet/hash-map-stl-clr#equal_range)), [skrótu\_multimap::equal_range (STL/CLR)](/cpp/dotnet/hash-multimap-stl-clr#equal_range), [skrótu\_set::equal_range (STL/CLR)](/cpp/dotnet/hash-set-stl-clr#equal_range), i [skrótu\_multiset::equal_range (STL/CLR)](/cpp/dotnet/hash-multiset-stl-clr#equal_range).</span><span class="sxs-lookup"><span data-stu-id="0917b-133">For more information, see [hash\_map::equal_range (STL/CLR)][hash\_map::equal_range (STL/CLR)](/cpp/dotnet/hash-map-stl-clr#equal_range)), [hash\_multimap::equal_range (STL/CLR)](/cpp/dotnet/hash-multimap-stl-clr#equal_range), [hash\_set::equal_range (STL/CLR)](/cpp/dotnet/hash-set-stl-clr#equal_range), and [hash\_multiset::equal_range (STL/CLR)](/cpp/dotnet/hash-multiset-stl-clr#equal_range).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="erase">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="0917b-134">Usuwa elementy z kontenera.</span><span class="sxs-lookup"><span data-stu-id="0917b-134">Removes elements from the container.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0917b-135">Aby uzyskać więcej informacji, zobacz [skrótu\_map::erase (STL/CLR)](/cpp/dotnet/hash-map-stl-clr#erase), [skrótu\_multimap::erase (STL/CLR)](/cpp/dotnet/hash-multimap-stl-clr#erase), [skrótu\_set::erase (STL/CLR)](/cpp/dotnet/hash-set-stl-clr#erase), i [skrótu\_multiset::erase (STL/CLR)](/cpp/dotnet/hash-multiset-stl-clr#erase).</span><span class="sxs-lookup"><span data-stu-id="0917b-135">For more information, see [hash\_map::erase (STL/CLR)](/cpp/dotnet/hash-map-stl-clr#erase), [hash\_multimap::erase (STL/CLR)](/cpp/dotnet/hash-multimap-stl-clr#erase), [hash\_set::erase (STL/CLR)](/cpp/dotnet/hash-set-stl-clr#erase), and [hash\_multiset::erase (STL/CLR)](/cpp/dotnet/hash-multiset-stl-clr#erase).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="erase">
      <MemberSignature Language="C#" Value="public int erase (TKey _Keyval);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 erase(!TKey _Keyval) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.IHash`2.erase(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function erase (_Keyval As TKey) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int erase(TKey _Keyval);" />
      <MemberSignature Language="F#" Value="abstract member erase : 'Key -&gt; int" Usage="iHash.erase _Keyval" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="_Keyval" Type="TKey" />
      </Parameters>
      <Docs>
        <param name="_Keyval"><span data-ttu-id="0917b-136">Wartość klucza do wymazania.</span><span class="sxs-lookup"><span data-stu-id="0917b-136">The key value to erase.</span></span></param>
        <summary><span data-ttu-id="0917b-137">Usuwa elementy z kontenera, który jest zgodny z określonym kluczem.</span><span class="sxs-lookup"><span data-stu-id="0917b-137">Removes elements from the container that match the specified key.</span></span></summary>
        <returns><span data-ttu-id="0917b-138">Liczba elementów usuniętych.</span><span class="sxs-lookup"><span data-stu-id="0917b-138">The number of elements removed.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0917b-139">Aby uzyskać więcej informacji, zobacz [skrótu\_map::erase (STL/CLR)](/cpp/dotnet/hash-map-stl-clr#erase), [skrótu\_multimap::erase (STL/CLR)](/cpp/dotnet/hash-multimap-stl-clr#erase), [skrótu\_set::erase (STL/CLR)](/cpp/dotnet/hash-set-stl-clr#erase), i [skrótu\_multiset::erase (STL/CLR)](/cpp/dotnet/hash-multiset-stl-clr#erase).</span><span class="sxs-lookup"><span data-stu-id="0917b-139">For more information, see [hash\_map::erase (STL/CLR)](/cpp/dotnet/hash-map-stl-clr#erase), [hash\_multimap::erase (STL/CLR)](/cpp/dotnet/hash-multimap-stl-clr#erase), [hash\_set::erase (STL/CLR)](/cpp/dotnet/hash-set-stl-clr#erase), and [hash\_multiset::erase (STL/CLR)](/cpp/dotnet/hash-multiset-stl-clr#erase).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="erase">
      <MemberSignature Language="C#" Value="public void erase (ref Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator&lt;TValue&gt; , Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator&lt;TValue&gt; _Where);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.void erase(class Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1&lt;!TValue&gt;&amp; , class Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1&lt;!TValue&gt; _Where) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.IHash`2.erase(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}@,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}|System.Runtime.CompilerServices.IsByValue)" />
      <MemberSignature Language="VB.NET" Value="Public Function erase (ByRef  As ContainerBidirectionalIterator(Of TValue), _Where As ContainerBidirectionalIterator(Of TValue)) As Void" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ^ erase(Microsoft::VisualC::StlClr::Generic::ContainerBidirectionalIterator&lt;TValue&gt; ^ % , Microsoft::VisualC::StlClr::Generic::ContainerBidirectionalIterator&lt;TValue&gt; ^ _Where);" />
      <MemberSignature Language="F#" Value="abstract member erase :  * Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator&lt;'Value&gt; -&gt; unit" Usage="iHash.erase (, _Where)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="" Type="Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator&lt;TValue&gt;" RefType="ref" />
        <Parameter Name="_Where" Type="Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator&lt;TValue&gt;" />
      </Parameters>
      <Docs>
        <param name=""><span data-ttu-id="0917b-140">Iterator, który wyznacza pierwszego elementu poza usuniętym elemencie lub <see cref="M:Microsoft.VisualC.StlClr.IHash`2.end(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}@)" /> jeśli taki element nie istnieje.</span><span class="sxs-lookup"><span data-stu-id="0917b-140">An iterator that designates the first element beyond the removed element, or <see cref="M:Microsoft.VisualC.StlClr.IHash`2.end(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}@)" /> if no such element exists.</span></span></param>
        <param name="_Where"><span data-ttu-id="0917b-141">Iterator, który wskazuje na element, aby wymazać.</span><span class="sxs-lookup"><span data-stu-id="0917b-141">An iterator that points to the element to erase.</span></span></param>
        <summary><span data-ttu-id="0917b-142">Usuwa z kontenera elementu, który jest określony przez dany iteratora.</span><span class="sxs-lookup"><span data-stu-id="0917b-142">Removes from the container the element that is specified by the given iterator.</span></span></summary>
        <returns><span data-ttu-id="0917b-143">Iterator.</span><span class="sxs-lookup"><span data-stu-id="0917b-143">An iterator.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  
<span data-ttu-id="0917b-144">Aby uzyskać więcej informacji, zobacz [skrótu\_map::erase (STL/CLR)](/cpp/dotnet/hash-map-stl-clr#erase), [skrótu\_multimap::erase (STL/CLR)](/cpp/dotnet/hash-multimap-stl-clr#erase), [skrótu\_set::erase (STL/CLR)](/cpp/dotnet/hash-set-stl-clr#erase), i [skrótu\_multiset::erase (STL/CLR)](/cpp/dotnet/hash-multiset-stl-clr#erase).</span><span class="sxs-lookup"><span data-stu-id="0917b-144">For more information, see [hash\_map::erase (STL/CLR)](/cpp/dotnet/hash-map-stl-clr#erase), [hash\_multimap::erase (STL/CLR)](/cpp/dotnet/hash-multimap-stl-clr#erase), [hash\_set::erase (STL/CLR)](/cpp/dotnet/hash-set-stl-clr#erase), and [hash\_multiset::erase (STL/CLR)](/cpp/dotnet/hash-multiset-stl-clr#erase).</span></span>

]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="erase">
      <MemberSignature Language="C#" Value="public void erase (ref Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator&lt;TValue&gt; , Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator&lt;TValue&gt; _First_iter, Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator&lt;TValue&gt; _Last_iter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.void erase(class Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1&lt;!TValue&gt;&amp; , class Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1&lt;!TValue&gt; _First_iter, class Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1&lt;!TValue&gt; _Last_iter) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.IHash`2.erase(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}@,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}|System.Runtime.CompilerServices.IsByValue,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}|System.Runtime.CompilerServices.IsByValue)" />
      <MemberSignature Language="VB.NET" Value="Public Function erase (ByRef  As ContainerBidirectionalIterator(Of TValue), _First_iter As ContainerBidirectionalIterator(Of TValue), _Last_iter As ContainerBidirectionalIterator(Of TValue)) As Void" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ^ erase(Microsoft::VisualC::StlClr::Generic::ContainerBidirectionalIterator&lt;TValue&gt; ^ % , Microsoft::VisualC::StlClr::Generic::ContainerBidirectionalIterator&lt;TValue&gt; ^ _First_iter, Microsoft::VisualC::StlClr::Generic::ContainerBidirectionalIterator&lt;TValue&gt; ^ _Last_iter);" />
      <MemberSignature Language="F#" Value="abstract member erase :  * Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator&lt;'Value&gt; * Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator&lt;'Value&gt; -&gt; unit" Usage="iHash.erase (, _First_iter, _Last_iter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="" Type="Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator&lt;TValue&gt;" RefType="ref" />
        <Parameter Name="_First_iter" Type="Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator&lt;TValue&gt;" />
        <Parameter Name="_Last_iter" Type="Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator&lt;TValue&gt;" />
      </Parameters>
      <Docs>
        <param name=""><span data-ttu-id="0917b-145">Iterator, który wyznacza pierwszego elementu poza elementy usunięte, lub <see cref="M:Microsoft.VisualC.StlClr.IHash`2.end(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}@)" /> jeśli taki element nie istnieje.</span><span class="sxs-lookup"><span data-stu-id="0917b-145">An iterator that designates the first element beyond the elements removed, or <see cref="M:Microsoft.VisualC.StlClr.IHash`2.end(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}@)" /> if no such element exists.</span></span></param>
        <param name="_First_iter"><span data-ttu-id="0917b-146">Iterator wskazuje początek zakresu, aby wymazać.</span><span class="sxs-lookup"><span data-stu-id="0917b-146">An iterator that points to the beginning of the range to erase.</span></span></param>
        <param name="_Last_iter"><span data-ttu-id="0917b-147">Iterator, który wskazuje na stanowisko, który poprzedza zakres do wymazania.</span><span class="sxs-lookup"><span data-stu-id="0917b-147">An iterator that points to the position that immediately follows the range to erase.</span></span></param>
        <summary><span data-ttu-id="0917b-148">Usuwa z kontenera elementów między określonych iteratorów.</span><span class="sxs-lookup"><span data-stu-id="0917b-148">Removes from the container the elements between the specified iterators.</span></span></summary>
        <returns><span data-ttu-id="0917b-149">Iterator.</span><span class="sxs-lookup"><span data-stu-id="0917b-149">An iterator.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  
<span data-ttu-id="0917b-150">Aby uzyskać więcej informacji, zobacz [skrótu\_map::erase (STL/CLR)](/cpp/dotnet/hash-map-stl-clr#erase), [skrótu\_multimap::erase (STL/CLR)](/cpp/dotnet/hash-multimap-stl-clr#erase), [skrótu\_set::erase (STL/CLR)](/cpp/dotnet/hash-set-stl-clr#erase), i [skrótu\_multiset::erase (STL/CLR)](/cpp/dotnet/hash-multiset-stl-clr#erase).</span><span class="sxs-lookup"><span data-stu-id="0917b-150">For more information, see [hash\_map::erase (STL/CLR)](/cpp/dotnet/hash-map-stl-clr#erase), [hash\_multimap::erase (STL/CLR)](/cpp/dotnet/hash-multimap-stl-clr#erase), [hash\_set::erase (STL/CLR)](/cpp/dotnet/hash-set-stl-clr#erase), and [hash\_multiset::erase (STL/CLR)](/cpp/dotnet/hash-multiset-stl-clr#erase).</span></span>

]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="find">
      <MemberSignature Language="C#" Value="public void find (ref Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator&lt;TValue&gt; , TKey _Keyval);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.void find(class Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1&lt;!TValue&gt;&amp; , !TKey _Keyval) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.IHash`2.find(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}@,`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function find (ByRef  As ContainerBidirectionalIterator(Of TValue), _Keyval As TKey) As Void" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ^ find(Microsoft::VisualC::StlClr::Generic::ContainerBidirectionalIterator&lt;TValue&gt; ^ % , TKey _Keyval);" />
      <MemberSignature Language="F#" Value="abstract member find :  * 'Key -&gt; unit" Usage="iHash.find (, _Keyval)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="" Type="Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator&lt;TValue&gt;" RefType="ref" />
        <Parameter Name="_Keyval" Type="TKey" />
      </Parameters>
      <Docs>
        <param name=""><span data-ttu-id="0917b-151">Iterator, który wskazuje na jeden z elementów znaleziony; lub <see cref="M:Microsoft.VisualC.StlClr.IHash`2.end(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}@)" /> Jeśli zostanie znaleziony żaden element.</span><span class="sxs-lookup"><span data-stu-id="0917b-151">An iterator that designates one of the found elements; or <see cref="M:Microsoft.VisualC.StlClr.IHash`2.end(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}@)" /> if no element is found.</span></span></param>
        <param name="_Keyval"><span data-ttu-id="0917b-152">Wartość klucza do wyszukania.</span><span class="sxs-lookup"><span data-stu-id="0917b-152">The key value for which to search.</span></span></param>
        <summary><span data-ttu-id="0917b-153">Wyszukuje element, który odpowiada określonemu kluczowi.</span><span class="sxs-lookup"><span data-stu-id="0917b-153">Finds an element that matches a specified key.</span></span></summary>
        <returns><span data-ttu-id="0917b-154">Iterator.</span><span class="sxs-lookup"><span data-stu-id="0917b-154">An iterator.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  
 <span data-ttu-id="0917b-155">Aby uzyskać więcej informacji, zobacz [skrótu\_map::find (STL/CLR)](/cpp/dotnet/hash-map-stl-clr#find), [skrótu\_multimap::find (STL/CLR)](/cpp/dotnet/hash-multimap-stl-clr#find), [skrótu\_set::find (STL/CLR)](/cpp/dotnet/hash-set-stl-clr#find), i [skrótu\_multiset::find (STL/CLR)](/cpp/dotnet/hash-multiset-stl-clr#find).</span><span class="sxs-lookup"><span data-stu-id="0917b-155">For more information, see [hash\_map::find (STL/CLR)](/cpp/dotnet/hash-map-stl-clr#find), [hash\_multimap::find (STL/CLR)](/cpp/dotnet/hash-multimap-stl-clr#find), [hash\_set::find (STL/CLR)](/cpp/dotnet/hash-set-stl-clr#find), and [hash\_multiset::find (STL/CLR)](/cpp/dotnet/hash-multiset-stl-clr#find).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="hash_delegate">
      <MemberSignature Language="C#" Value="public Microsoft.VisualC.StlClr.UnaryDelegate&lt;TKey,int&gt; hash_delegate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.VisualC.StlClr.UnaryDelegate`2&lt;!TKey, int32&gt; hash_delegate() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.IHash`2.hash_delegate" />
      <MemberSignature Language="VB.NET" Value="Public Function hash_delegate () As UnaryDelegate(Of TKey, Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::VisualC::StlClr::UnaryDelegate&lt;TKey, int&gt; ^ hash_delegate();" />
      <MemberSignature Language="F#" Value="abstract member hash_delegate : unit -&gt; Microsoft.VisualC.StlClr.UnaryDelegate&lt;'Key, int&gt;" Usage="iHash.hash_delegate " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualC.StlClr.UnaryDelegate&lt;TKey,System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="0917b-156">Zwraca delegata, który służy do konwertowania wartości klucza na liczbę całkowitą.</span><span class="sxs-lookup"><span data-stu-id="0917b-156">Returns the delegate that is used to convert a key value to an integer.</span></span></summary>
        <returns><span data-ttu-id="0917b-157">Delegat, który służy do konwertowania wartości klucza na liczbę całkowitą.</span><span class="sxs-lookup"><span data-stu-id="0917b-157">The delegate that is used to convert a key value to an integer.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0917b-158">Aby uzyskać więcej informacji, zobacz [skrótu\_map::hash_delegate (STL/CLR)](/cpp/dotnet/hash-map-stl-clr#hash_delegate), [skrótu\_multimap::hash_delegate (STL/CLR)](/cpp/dotnet/hash-multimap-stl-clr#hash_delegate), [skrótu\_set::hash _delegate (STL/CLR)](/cpp/dotnet/hash-set-stl-clr#hash_delegate), i [skrótu\_multiset::hash_delegate (STL/CLR)](/cpp/dotnet/hash-multiset-stl-clr#hash_delegate).</span><span class="sxs-lookup"><span data-stu-id="0917b-158">For more information, see [hash\_map::hash_delegate (STL/CLR)](/cpp/dotnet/hash-map-stl-clr#hash_delegate), [hash\_multimap::hash_delegate (STL/CLR)](/cpp/dotnet/hash-multimap-stl-clr#hash_delegate), [hash\_set::hash_delegate (STL/CLR)](/cpp/dotnet/hash-set-stl-clr#hash_delegate), and [hash\_multiset::hash_delegate (STL/CLR)](/cpp/dotnet/hash-multiset-stl-clr#hash_delegate).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="insert">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="0917b-159">Dodaje elementy do kontenera.</span><span class="sxs-lookup"><span data-stu-id="0917b-159">Adds elements to the container.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0917b-160">Aby uzyskać więcej informacji, zobacz [skrótu\_map::insert (STL/CLR)](/cpp/dotnet/hash-map-stl-clr#insert), [skrótu\_multimap::insert (STL/CLR)](/cpp/dotnet/hash-multimap-stl-clr#insert), [skrótu\_set::insert (STL/CLR) ](/cpp/dotnet/hash-set-stl-clr#insert), i [skrótu\_multiset::insert (STL/CLR)](/cpp/dotnet/hash-multiset-stl-clr#insert).</span><span class="sxs-lookup"><span data-stu-id="0917b-160">For more information, see [hash\_map::insert (STL/CLR)](/cpp/dotnet/hash-map-stl-clr#insert), [hash\_multimap::insert (STL/CLR)](/cpp/dotnet/hash-multimap-stl-clr#insert), [hash\_set::insert (STL/CLR)](/cpp/dotnet/hash-set-stl-clr#insert), and [hash\_multiset::insert (STL/CLR)](/cpp/dotnet/hash-multiset-stl-clr#insert).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="insert">
      <MemberSignature Language="C#" Value="public void insert (System.Collections.IEnumerable _Right);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void insert(class System.Collections.IEnumerable _Right) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.IHash`2.insert(System.Collections.IEnumerable)" />
      <MemberSignature Language="VB.NET" Value="Public Sub insert (_Right As IEnumerable)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void insert(System::Collections::IEnumerable ^ _Right);" />
      <MemberSignature Language="F#" Value="abstract member insert : System.Collections.IEnumerable -&gt; unit" Usage="iHash.insert _Right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="_Right" Type="System.Collections.IEnumerable" />
      </Parameters>
      <Docs>
        <param name="_Right"><span data-ttu-id="0917b-161">Wyliczenie, które można wstawić do kontenera.</span><span class="sxs-lookup"><span data-stu-id="0917b-161">The enumeration to insert into the container.</span></span></param>
        <summary><span data-ttu-id="0917b-162">Dodaje dany wyliczenia do kontenera.</span><span class="sxs-lookup"><span data-stu-id="0917b-162">Adds the given enumeration to the container.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0917b-163">Aby uzyskać więcej informacji, zobacz [skrótu\_map::insert (STL/CLR)](/cpp/dotnet/hash-map-stl-clr#insert), [skrótu\_multimap::insert (STL/CLR)](/cpp/dotnet/hash-multimap-stl-clr#insert), [skrótu\_set::insert (STL/CLR) ](/cpp/dotnet/hash-set-stl-clr#insert), i [skrótu\_multiset::insert (STL/CLR)](/cpp/dotnet/hash-multiset-stl-clr#insert).</span><span class="sxs-lookup"><span data-stu-id="0917b-163">For more information, see [hash\_map::insert (STL/CLR)](/cpp/dotnet/hash-map-stl-clr#insert), [hash\_multimap::insert (STL/CLR)](/cpp/dotnet/hash-multimap-stl-clr#insert), [hash\_set::insert (STL/CLR)](/cpp/dotnet/hash-set-stl-clr#insert), and [hash\_multiset::insert (STL/CLR)](/cpp/dotnet/hash-multiset-stl-clr#insert).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="insert">
      <MemberSignature Language="C#" Value="public void insert (Microsoft.VisualC.StlClr.Generic.IInputIterator&lt;TValue&gt; _First, Microsoft.VisualC.StlClr.Generic.IInputIterator&lt;TValue&gt; _Last);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void insert(class Microsoft.VisualC.StlClr.Generic.IInputIterator`1&lt;!TValue&gt; _First, class Microsoft.VisualC.StlClr.Generic.IInputIterator`1&lt;!TValue&gt; _Last) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.IHash`2.insert(Microsoft.VisualC.StlClr.Generic.IInputIterator{`1},Microsoft.VisualC.StlClr.Generic.IInputIterator{`1})" />
      <MemberSignature Language="VB.NET" Value="Public Sub insert (_First As IInputIterator(Of TValue), _Last As IInputIterator(Of TValue))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void insert(Microsoft::VisualC::StlClr::Generic::IInputIterator&lt;TValue&gt; ^ _First, Microsoft::VisualC::StlClr::Generic::IInputIterator&lt;TValue&gt; ^ _Last);" />
      <MemberSignature Language="F#" Value="abstract member insert : Microsoft.VisualC.StlClr.Generic.IInputIterator&lt;'Value&gt; * Microsoft.VisualC.StlClr.Generic.IInputIterator&lt;'Value&gt; -&gt; unit" Usage="iHash.insert (_First, _Last)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="_First" Type="Microsoft.VisualC.StlClr.Generic.IInputIterator&lt;TValue&gt;" />
        <Parameter Name="_Last" Type="Microsoft.VisualC.StlClr.Generic.IInputIterator&lt;TValue&gt;" />
      </Parameters>
      <Docs>
        <param name="_First"><span data-ttu-id="0917b-164">Iterator wskazuje początek zakresu elementów do wstawienia.</span><span class="sxs-lookup"><span data-stu-id="0917b-164">An iterator that points to the beginning of the range of elements to insert.</span></span></param>
        <param name="_Last"><span data-ttu-id="0917b-165">Iterator, który wskazuje na element, który poprzedza zakres elementów do wstawienia.</span><span class="sxs-lookup"><span data-stu-id="0917b-165">An iterator that points to the element that immediately follows the range of elements to insert.</span></span></param>
        <summary><span data-ttu-id="0917b-166">Dodaje do kontenera elementy określone przez dany Iteratory.</span><span class="sxs-lookup"><span data-stu-id="0917b-166">Adds to the container the elements specified by the given iterators.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0917b-167">Aby uzyskać więcej informacji, zobacz [skrótu\_map::insert (STL/CLR)](/cpp/dotnet/hash-map-stl-clr#insert), [skrótu\_multimap::insert (STL/CLR)](/cpp/dotnet/hash-multimap-stl-clr#insert), [skrótu\_set::insert (STL/CLR) ](/cpp/dotnet/hash-set-stl-clr#insert), i [skrótu\_multiset::insert (STL/CLR)](/cpp/dotnet/hash-multiset-stl-clr#insert).</span><span class="sxs-lookup"><span data-stu-id="0917b-167">For more information, see [hash\_map::insert (STL/CLR)](/cpp/dotnet/hash-map-stl-clr#insert), [hash\_multimap::insert (STL/CLR)](/cpp/dotnet/hash-multimap-stl-clr#insert), [hash\_set::insert (STL/CLR)](/cpp/dotnet/hash-set-stl-clr#insert), and [hash\_multiset::insert (STL/CLR)](/cpp/dotnet/hash-multiset-stl-clr#insert).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="insert">
      <MemberSignature Language="C#" Value="public void insert (ref Microsoft.VisualC.StlClr.GenericPair&lt;Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator&lt;TValue&gt;,bool&gt; , TValue _Val);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.void insert(class Microsoft.VisualC.StlClr.GenericPair`2&lt;class Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1&lt;!TValue&gt;, bool&gt;&amp; , !TValue _Val) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.IHash`2.insert(Microsoft.VisualC.StlClr.GenericPair{Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1},System.Boolean}@,`1)" />
      <MemberSignature Language="VB.NET" Value="Public Function insert (ByRef  As GenericPair(Of ContainerBidirectionalIterator(Of TValue), Boolean), _Val As TValue) As Void" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ^ insert(Microsoft::VisualC::StlClr::GenericPair&lt;Microsoft::VisualC::StlClr::Generic::ContainerBidirectionalIterator&lt;TValue&gt; ^, bool&gt; ^ % , TValue _Val);" />
      <MemberSignature Language="F#" Value="abstract member insert :  * 'Value -&gt; unit" Usage="iHash.insert (, _Val)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="" Type="Microsoft.VisualC.StlClr.GenericPair&lt;Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator&lt;TValue&gt;,System.Boolean&gt;" RefType="ref" />
        <Parameter Name="_Val" Type="TValue" />
      </Parameters>
      <Docs>
        <param name=""><span data-ttu-id="0917b-168">Para wartości X. Jeśli jest X.second <see langword="true" />X.first wyznacza nowo wstawionego elementu; w przeciwnym razie X.first wyznacza element z równoważną kolejność, która już istnieje, a nie nowy element zostanie wstawiony.</span><span class="sxs-lookup"><span data-stu-id="0917b-168">A pair of values X. If X.second is <see langword="true" />, X.first designates the newly inserted element; otherwise X.first designates an element with equivalent ordering that already exists, and no new element is inserted.</span></span></param>
        <param name="_Val"><span data-ttu-id="0917b-169">Wartość klucza do wstawienia do kontenera.</span><span class="sxs-lookup"><span data-stu-id="0917b-169">The key value to insert into the container.</span></span></param>
        <summary><span data-ttu-id="0917b-170">Dodaje wartość do kontenera.</span><span class="sxs-lookup"><span data-stu-id="0917b-170">Adds the given value to the container.</span></span></summary>
        <returns><span data-ttu-id="0917b-171">Para iteratorów.</span><span class="sxs-lookup"><span data-stu-id="0917b-171">A pair of iterators.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  
 <span data-ttu-id="0917b-172">Aby uzyskać więcej informacji, zobacz [skrótu\_map::insert (STL/CLR)](/cpp/dotnet/hash-map-stl-clr#insert), [skrótu\_multimap::insert (STL/CLR)](/cpp/dotnet/hash-multimap-stl-clr#insert), [skrótu\_set::insert (STL/CLR) ](/cpp/dotnet/hash-set-stl-clr#insert), i [skrótu\_multiset::insert (STL/CLR)](/cpp/dotnet/hash-multiset-stl-clr#insert).</span><span class="sxs-lookup"><span data-stu-id="0917b-172">For more information, see [hash\_map::insert (STL/CLR)](/cpp/dotnet/hash-map-stl-clr#insert), [hash\_multimap::insert (STL/CLR)](/cpp/dotnet/hash-multimap-stl-clr#insert), [hash\_set::insert (STL/CLR)](/cpp/dotnet/hash-set-stl-clr#insert), and [hash\_multiset::insert (STL/CLR)](/cpp/dotnet/hash-multiset-stl-clr#insert).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="insert">
      <MemberSignature Language="C#" Value="public void insert (ref Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator&lt;TValue&gt; , Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator&lt;TValue&gt; _Where, TValue _Val);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.void insert(class Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1&lt;!TValue&gt;&amp; , class Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1&lt;!TValue&gt; _Where, !TValue _Val) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.IHash`2.insert(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}@,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}|System.Runtime.CompilerServices.IsByValue,`1)" />
      <MemberSignature Language="VB.NET" Value="Public Function insert (ByRef  As ContainerBidirectionalIterator(Of TValue), _Where As ContainerBidirectionalIterator(Of TValue), _Val As TValue) As Void" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ^ insert(Microsoft::VisualC::StlClr::Generic::ContainerBidirectionalIterator&lt;TValue&gt; ^ % , Microsoft::VisualC::StlClr::Generic::ContainerBidirectionalIterator&lt;TValue&gt; ^ _Where, TValue _Val);" />
      <MemberSignature Language="F#" Value="abstract member insert :  * Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator&lt;'Value&gt; * 'Value -&gt; unit" Usage="iHash.insert (, _Where, _Val)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="" Type="Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator&lt;TValue&gt;" RefType="ref" />
        <Parameter Name="_Where" Type="Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator&lt;TValue&gt;" />
        <Parameter Name="_Val" Type="TValue" />
      </Parameters>
      <Docs>
        <param name=""><span data-ttu-id="0917b-173">Iterator, który wyznacza nowo wstawionego elementu.</span><span class="sxs-lookup"><span data-stu-id="0917b-173">An iterator that designates the newly inserted element.</span></span></param>
        <param name="_Where"><span data-ttu-id="0917b-174">Iterator, który określa miejsce w kontenerze można wstawić elementu.</span><span class="sxs-lookup"><span data-stu-id="0917b-174">An iterator that specifies where in the container to insert the element.</span></span> <span data-ttu-id="0917b-175">To jest tylko wskazówką i jest używana w celu zwiększenia wydajności.</span><span class="sxs-lookup"><span data-stu-id="0917b-175">This is a hint only and is used to improve performance.</span></span> <span data-ttu-id="0917b-176">Element może nie można wstawić w tej lokalizacji.</span><span class="sxs-lookup"><span data-stu-id="0917b-176">The element might not be inserted at this location.</span></span></param>
        <param name="_Val"><span data-ttu-id="0917b-177">Wartość klucza do wstawienia do kontenera.</span><span class="sxs-lookup"><span data-stu-id="0917b-177">The key value to insert into the container.</span></span></param>
        <summary><span data-ttu-id="0917b-178">Dodaje dany element do kontenera.</span><span class="sxs-lookup"><span data-stu-id="0917b-178">Adds the given element to the container.</span></span></summary>
        <returns><span data-ttu-id="0917b-179">Iterator.</span><span class="sxs-lookup"><span data-stu-id="0917b-179">An iterator.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  
<span data-ttu-id="0917b-180">Aby uzyskać więcej informacji, zobacz [skrótu\_map::insert (STL/CLR)](/cpp/dotnet/hash-map-stl-clr#insert), [skrótu\_multimap::insert (STL/CLR)](/cpp/dotnet/hash-multimap-stl-clr#insert), [skrótu\_set::insert (STL/CLR) ](/cpp/dotnet/hash-set-stl-clr#insert), i [skrótu\_multiset::insert (STL/CLR)](/cpp/dotnet/hash-multiset-stl-clr#insert).</span><span class="sxs-lookup"><span data-stu-id="0917b-180">For more information, see [hash\_map::insert (STL/CLR)](/cpp/dotnet/hash-map-stl-clr#insert), [hash\_multimap::insert (STL/CLR)](/cpp/dotnet/hash-multimap-stl-clr#insert), [hash\_set::insert (STL/CLR)](/cpp/dotnet/hash-set-stl-clr#insert), and [hash\_multiset::insert (STL/CLR)](/cpp/dotnet/hash-multiset-stl-clr#insert).</span></span>

]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="key_comp">
      <MemberSignature Language="C#" Value="public Microsoft.VisualC.StlClr.BinaryDelegate&lt;TKey,TKey,bool&gt; key_comp ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.VisualC.StlClr.BinaryDelegate`3&lt;!TKey, !TKey, bool&gt; key_comp() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.IHash`2.key_comp" />
      <MemberSignature Language="VB.NET" Value="Public Function key_comp () As BinaryDelegate(Of TKey, TKey, Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::VisualC::StlClr::BinaryDelegate&lt;TKey, TKey, bool&gt; ^ key_comp();" />
      <MemberSignature Language="F#" Value="abstract member key_comp : unit -&gt; Microsoft.VisualC.StlClr.BinaryDelegate&lt;'Key, 'Key, bool&gt;" Usage="iHash.key_comp " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualC.StlClr.BinaryDelegate&lt;TKey,TKey,System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="0917b-181">Zwraca szeregowania delegat, który jest używany w celu uporządkowania kontrolowanej sekwencji.</span><span class="sxs-lookup"><span data-stu-id="0917b-181">Returns the ordering delegate that is used to order the controlled sequence.</span></span> <span data-ttu-id="0917b-182">Umożliwia ona porównać dwa klucze.</span><span class="sxs-lookup"><span data-stu-id="0917b-182">You use it to compare two keys.</span></span></summary>
        <returns><span data-ttu-id="0917b-183">Szeregowania delegat, który jest używany w celu uporządkowania kontrolowanej sekwencji.</span><span class="sxs-lookup"><span data-stu-id="0917b-183">The ordering delegate that is used to order the controlled sequence.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0917b-184">Aby uzyskać więcej informacji, zobacz [skrótu\_map::key_comp (STL/CLR)](/cpp/dotnet/hash-map-stl-clr#key_comp), [skrótu\_multimap::key_comp (STL/CLR)](/cpp/dotnet/hash-multimap-stl-clr#key_comp), [skrótu\_set::key_comp (STL / CLR)](/cpp/dotnet/hash-set-stl-clr#key_comp), i [skrótu\_multiset::key_comp (STL/CLR)](/cpp/dotnet/hash-multiset-stl-clr#key_comp).</span><span class="sxs-lookup"><span data-stu-id="0917b-184">For more information, see [hash\_map::key_comp (STL/CLR)](/cpp/dotnet/hash-map-stl-clr#key_comp), [hash\_multimap::key_comp (STL/CLR)](/cpp/dotnet/hash-multimap-stl-clr#key_comp), [hash\_set::key_comp (STL/CLR)](/cpp/dotnet/hash-set-stl-clr#key_comp), and [hash\_multiset::key_comp (STL/CLR)](/cpp/dotnet/hash-multiset-stl-clr#key_comp).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="load_factor">
      <MemberSignature Language="C#" Value="public float load_factor ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float32 load_factor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.IHash`2.load_factor" />
      <MemberSignature Language="VB.NET" Value="Public Function load_factor () As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; float load_factor();" />
      <MemberSignature Language="F#" Value="abstract member load_factor : unit -&gt; single" Usage="iHash.load_factor " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="0917b-185">Oblicza średnią liczbę elementów na przedział z tabeli wyznaczania wartości skrótu.</span><span class="sxs-lookup"><span data-stu-id="0917b-185">Counts the average number of elements per bucket in the hash table.</span></span></summary>
        <returns><span data-ttu-id="0917b-186">Średnia liczba elementów na przedział z tabeli wyznaczania wartości skrótu.</span><span class="sxs-lookup"><span data-stu-id="0917b-186">The average number of elements per bucket in the hash table.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0917b-187">Aby uzyskać więcej informacji, zobacz [skrótu\_map::load_factor (STL/CLR)](/cpp/dotnet/hash-map-stl-clr#load_factor), [skrótu\_multimap::load_factor (STL/CLR)](/cpp/dotnet/hash-multimap-stl-clr#load_factor), [skrótu\_set::load_ Współczynnik (STL/CLR)](/cpp/dotnet/hash-set-stl-clr#load_factor), i [skrótu\_multiset::load_factor (STL/CLR)](/cpp/dotnet/hash-multiset-stl-clr#load_factor).</span><span class="sxs-lookup"><span data-stu-id="0917b-187">For more information, see [hash\_map::load_factor (STL/CLR)](/cpp/dotnet/hash-map-stl-clr#load_factor), [hash\_multimap::load_factor (STL/CLR)](/cpp/dotnet/hash-multimap-stl-clr#load_factor), [hash\_set::load_factor (STL/CLR)](/cpp/dotnet/hash-set-stl-clr#load_factor), and [hash\_multiset::load_factor (STL/CLR)](/cpp/dotnet/hash-multiset-stl-clr#load_factor).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="lower_bound">
      <MemberSignature Language="C#" Value="public void lower_bound (ref Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator&lt;TValue&gt; , TKey _Keyval);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.void lower_bound(class Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1&lt;!TValue&gt;&amp; , !TKey _Keyval) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.IHash`2.lower_bound(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}@,`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function lower_bound (ByRef  As ContainerBidirectionalIterator(Of TValue), _Keyval As TKey) As Void" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ^ lower_bound(Microsoft::VisualC::StlClr::Generic::ContainerBidirectionalIterator&lt;TValue&gt; ^ % , TKey _Keyval);" />
      <MemberSignature Language="F#" Value="abstract member lower_bound :  * 'Key -&gt; unit" Usage="iHash.lower_bound (, _Keyval)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="" Type="Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator&lt;TValue&gt;" RefType="ref" />
        <Parameter Name="_Keyval" Type="TKey" />
      </Parameters>
      <Docs>
        <param name=""><span data-ttu-id="0917b-188">Iterator, który wyznacza pierwszego elementu w kontrolowanej sekwencji, która tworzy skrót do tego samego zasobnika jako <paramref name="_Keyval" /> i ma równoważną kolejność, tak aby <paramref name="_Keyval" />.</span><span class="sxs-lookup"><span data-stu-id="0917b-188">An iterator that designates the first element in the controlled sequence that hashes to the same bucket as <paramref name="_Keyval" /> and has equivalent ordering to <paramref name="_Keyval" />.</span></span> <span data-ttu-id="0917b-189">Jeśli taki element nie istnieje, zwraca <see cref="M:Microsoft.VisualC.StlClr.IHash`2.end(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}@)" />.</span><span class="sxs-lookup"><span data-stu-id="0917b-189">If no such element exists, it returns <see cref="M:Microsoft.VisualC.StlClr.IHash`2.end(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}@)" />.</span></span></param>
        <param name="_Keyval"><span data-ttu-id="0917b-190">Wartość klucza do wyszukania.</span><span class="sxs-lookup"><span data-stu-id="0917b-190">The key value for which to search.</span></span></param>
        <summary><span data-ttu-id="0917b-191">Umożliwia znalezienie początek zakresu elementów, które odpowiadają określonemu kluczowi.</span><span class="sxs-lookup"><span data-stu-id="0917b-191">Finds the beginning of the range of elements that match a specified key.</span></span></summary>
        <returns><span data-ttu-id="0917b-192">Iterator.</span><span class="sxs-lookup"><span data-stu-id="0917b-192">An iterator.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  
 <span data-ttu-id="0917b-193">Aby uzyskać więcej informacji, zobacz [skrótu\_map::lower_bound (STL/CLR)](/cpp/dotnet/hash-map-stl-clr#lower_bound), [skrótu\_multimap::lower_bound (STL/CLR)](/cpp/dotnet/hash-multimap-stl-clr#lower_bound), [skrótu\_set::lower_ powiązany (STL/CLR)](/cpp/dotnet/hash-set-stl-clr#lower_bound), i [skrótu\_multiset::lower_bound (STL/CLR)](/cpp/dotnet/hash-multiset-stl-clr#lower_bound).</span><span class="sxs-lookup"><span data-stu-id="0917b-193">For more information, see [hash\_map::lower_bound (STL/CLR)](/cpp/dotnet/hash-map-stl-clr#lower_bound), [hash\_multimap::lower_bound (STL/CLR)](/cpp/dotnet/hash-multimap-stl-clr#lower_bound), [hash\_set::lower_bound (STL/CLR)](/cpp/dotnet/hash-set-stl-clr#lower_bound), and [hash\_multiset::lower_bound (STL/CLR)](/cpp/dotnet/hash-multiset-stl-clr#lower_bound).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="max_load_factor">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="0917b-194">Pobiera lub ustawia maksymalną liczbę elementów na przedział z tabeli wyznaczania wartości skrótu.</span><span class="sxs-lookup"><span data-stu-id="0917b-194">Gets or sets the maximum number of elements per bucket in the hash table.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0917b-195">Aby uzyskać więcej informacji, zobacz [skrótu\_map::max_load_factor (STL/CLR)](/cpp/dotnet/hash-map-stl-clr#max_load_factor), [skrótu\_multimap::max_load_factor (STL/CLR)](/cpp/dotnet/hash-multimap-stl-clr#max_load_factor), [skrótu\_Ustaw:: max_load_factor — (STL/CLR)](/cpp/dotnet/hash-set-stl-clr#load_factor), i [skrótu\_multiset::max_load_factor (STL/CLR)](/cpp/dotnet/hash-multiset-stl-clr#max_load_factor).</span><span class="sxs-lookup"><span data-stu-id="0917b-195">For more information, see [hash\_map::max_load_factor (STL/CLR)](/cpp/dotnet/hash-map-stl-clr#max_load_factor), [hash\_multimap::max_load_factor (STL/CLR)](/cpp/dotnet/hash-multimap-stl-clr#max_load_factor), [hash\_set::max_load_factor (STL/CLR)](/cpp/dotnet/hash-set-stl-clr#load_factor), and [hash\_multiset::max_load_factor (STL/CLR)](/cpp/dotnet/hash-multiset-stl-clr#max_load_factor).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="max_load_factor">
      <MemberSignature Language="C#" Value="public float max_load_factor ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float32 max_load_factor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.IHash`2.max_load_factor" />
      <MemberSignature Language="VB.NET" Value="Public Function max_load_factor () As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; float max_load_factor();" />
      <MemberSignature Language="F#" Value="abstract member max_load_factor : unit -&gt; single" Usage="iHash.max_load_factor " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="0917b-196">Pobiera maksymalną liczbę elementów na przedział z tabeli wyznaczania wartości skrótu.</span><span class="sxs-lookup"><span data-stu-id="0917b-196">Gets the maximum number of elements per bucket in the hash table.</span></span></summary>
        <returns><span data-ttu-id="0917b-197">Maksymalna liczba elementów na przedział z tabeli wyznaczania wartości skrótu.</span><span class="sxs-lookup"><span data-stu-id="0917b-197">The maximum number of elements per bucket in the hash table.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0917b-198">Aby uzyskać więcej informacji, zobacz [skrótu\_map::max_load_factor (STL/CLR)](/cpp/dotnet/hash-map-stl-clr#max_load_factor), [skrótu\_multimap::max_load_factor (STL/CLR)](/cpp/dotnet/hash-multimap-stl-clr#max_load_factor), [skrótu\_Ustaw:: max_load_factor — (STL/CLR)](/cpp/dotnet/hash-set-stl-clr#load_factor), i [skrótu\_multiset::max_load_factor (STL/CLR)](/cpp/dotnet/hash-multiset-stl-clr#max_load_factor).</span><span class="sxs-lookup"><span data-stu-id="0917b-198">For more information, see [hash\_map::max_load_factor (STL/CLR)](/cpp/dotnet/hash-map-stl-clr#max_load_factor), [hash\_multimap::max_load_factor (STL/CLR)](/cpp/dotnet/hash-multimap-stl-clr#max_load_factor), [hash\_set::max_load_factor (STL/CLR)](/cpp/dotnet/hash-set-stl-clr#load_factor), and [hash\_multiset::max_load_factor (STL/CLR)](/cpp/dotnet/hash-multiset-stl-clr#max_load_factor).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="max_load_factor">
      <MemberSignature Language="C#" Value="public void max_load_factor (float _Newmax);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void max_load_factor(float32 _Newmax) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.IHash`2.max_load_factor(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub max_load_factor (_Newmax As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void max_load_factor(float _Newmax);" />
      <MemberSignature Language="F#" Value="abstract member max_load_factor : single -&gt; unit" Usage="iHash.max_load_factor _Newmax" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="_Newmax" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="_Newmax"><span data-ttu-id="0917b-199">Maksymalna liczba elementów na przedział z tabeli wyznaczania wartości skrótu.</span><span class="sxs-lookup"><span data-stu-id="0917b-199">The maximum number of elements per bucket in the hash table.</span></span></param>
        <summary><span data-ttu-id="0917b-200">Ustawia maksymalną liczbę elementów na przedział z tabeli wyznaczania wartości skrótu.</span><span class="sxs-lookup"><span data-stu-id="0917b-200">Sets the maximum number of elements per bucket in the hash table.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0917b-201">Aby uzyskać więcej informacji, zobacz [skrótu\_map::max_load_factor (STL/CLR)](/cpp/dotnet/hash-map-stl-clr#max_load_factor), [skrótu\_multimap::max_load_factor (STL/CLR)](/cpp/dotnet/hash-multimap-stl-clr#max_load_factor), [skrótu\_Ustaw:: max_load_factor — (STL/CLR)](/cpp/dotnet/hash-set-stl-clr#load_factor), i [skrótu\_multiset::max_load_factor (STL/CLR)](/cpp/dotnet/hash-multiset-stl-clr#max_load_factor).</span><span class="sxs-lookup"><span data-stu-id="0917b-201">For more information, see [hash\_map::max_load_factor (STL/CLR)](/cpp/dotnet/hash-map-stl-clr#max_load_factor), [hash\_multimap::max_load_factor (STL/CLR)](/cpp/dotnet/hash-multimap-stl-clr#max_load_factor), [hash\_set::max_load_factor (STL/CLR)](/cpp/dotnet/hash-set-stl-clr#load_factor), and [hash\_multiset::max_load_factor (STL/CLR)](/cpp/dotnet/hash-multiset-stl-clr#max_load_factor).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="rbegin">
      <MemberSignature Language="C#" Value="public void rbegin (ref Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator&lt;TValue&gt; );" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.void rbegin(class Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1&lt;!TValue&gt;&amp; ) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.IHash`2.rbegin(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator{`1}@)" />
      <MemberSignature Language="VB.NET" Value="Public Function rbegin (ByRef  As ReverseBidirectionalIterator(Of TValue)) As Void" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ^ rbegin(Microsoft::VisualC::StlClr::Generic::ReverseBidirectionalIterator&lt;TValue&gt; ^ % );" />
      <MemberSignature Language="F#" Value="abstract member rbegin :  -&gt; unit" Usage="iHash.rbegin " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="" Type="Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator&lt;TValue&gt;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name=""><span data-ttu-id="0917b-202">Iterator odwrotny wyznacza wartość ostatniego elementu w kontrolowanej sekwencji lub tuż za koniec pustą sekwencją.</span><span class="sxs-lookup"><span data-stu-id="0917b-202">A reverse iterator that designates the last element of the controlled sequence, or just beyond the beginning of an empty sequence.</span></span> <span data-ttu-id="0917b-203">Dzięki temu wyznacza <paramref name="beginning" /> odwrotnej kolejności.</span><span class="sxs-lookup"><span data-stu-id="0917b-203">Hence, it designates the <paramref name="beginning" /> of the reverse sequence.</span></span> <span data-ttu-id="0917b-204">Służy do uzyskiwania iterator, który wyznacza <paramref name="current" /> początek kontrolowanej sekwencji występuje w odwrotnej kolejności.</span><span class="sxs-lookup"><span data-stu-id="0917b-204">You use it to obtain an iterator that designates the <paramref name="current" /> beginning of the controlled sequence seen in reverse order.</span></span> <span data-ttu-id="0917b-205">Stan można zmienić, gdy zmieni się długość kontrolowanej sekwencji.</span><span class="sxs-lookup"><span data-stu-id="0917b-205">Its status can change if the length of the controlled sequence changes.</span></span></param>
        <summary><span data-ttu-id="0917b-206">Określa początek kontrolowanej sekwencji odwróconej.</span><span class="sxs-lookup"><span data-stu-id="0917b-206">Designates the beginning of the reversed controlled sequence.</span></span></summary>
        <returns><span data-ttu-id="0917b-207">Iterator.</span><span class="sxs-lookup"><span data-stu-id="0917b-207">An iterator.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  
 <span data-ttu-id="0917b-208">Aby uzyskać więcej informacji, zobacz [skrótu\_map::rbegin (STL/CLR)](/cpp/dotnet/hash-map-stl-clr#rbegin), [skrótu\_multimap::rbegin (STL/CLR)](/cpp/dotnet/hash-multimap-stl-clr#rbegin), [skrótu\_set::rbegin (STL/CLR) ](/cpp/dotnet/hash-set-stl-clr#rbegin), i [skrótu\_multiset::rbegin (STL/CLR)](/cpp/dotnet/hash-multiset-stl-clr#rbegin).</span><span class="sxs-lookup"><span data-stu-id="0917b-208">For more information, see [hash\_map::rbegin (STL/CLR)](/cpp/dotnet/hash-map-stl-clr#rbegin), [hash\_multimap::rbegin (STL/CLR)](/cpp/dotnet/hash-multimap-stl-clr#rbegin), [hash\_set::rbegin (STL/CLR)](/cpp/dotnet/hash-set-stl-clr#rbegin), and [hash\_multiset::rbegin (STL/CLR)](/cpp/dotnet/hash-multiset-stl-clr#rbegin).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="rehash">
      <MemberSignature Language="C#" Value="public void rehash (int _Buckets);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void rehash(int32 _Buckets) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.IHash`2.rehash(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub rehash (_Buckets As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void rehash(int _Buckets);" />
      <MemberSignature Language="F#" Value="abstract member rehash : int -&gt; unit" Usage="iHash.rehash _Buckets" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="_Buckets" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="_Buckets"><span data-ttu-id="0917b-209">Liczba przedziałów w tabeli wyznaczania wartości skrótu.</span><span class="sxs-lookup"><span data-stu-id="0917b-209">The number of buckets for the hash table.</span></span></param>
        <summary><span data-ttu-id="0917b-210">Przebudowuje tabelę mieszania.</span><span class="sxs-lookup"><span data-stu-id="0917b-210">Rebuilds the hash table.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0917b-211">Aby uzyskać więcej informacji, zobacz [skrótu\_map::rehash (STL/CLR)](/cpp/dotnet/hash-map-stl-clr#rehash), [skrótu\_multimap::rehash (STL/CLR)](/cpp/dotnet/hash-multimap-stl-clr#rehash), [skrótu\_set::rehash (STL/CLR) ](/cpp/dotnet/hash-set-stl-clr#rehash), i [skrótu\_multiset::rehash (STL/CLR)](/cpp/dotnet/hash-multiset-stl-clr#rehash).</span><span class="sxs-lookup"><span data-stu-id="0917b-211">For more information, see [hash\_map::rehash (STL/CLR)](/cpp/dotnet/hash-map-stl-clr#rehash), [hash\_multimap::rehash (STL/CLR)](/cpp/dotnet/hash-multimap-stl-clr#rehash), [hash\_set::rehash (STL/CLR)](/cpp/dotnet/hash-set-stl-clr#rehash), and [hash\_multiset::rehash (STL/CLR)](/cpp/dotnet/hash-multiset-stl-clr#rehash).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="rend">
      <MemberSignature Language="C#" Value="public void rend (ref Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator&lt;TValue&gt; );" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.void rend(class Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1&lt;!TValue&gt;&amp; ) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.IHash`2.rend(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator{`1}@)" />
      <MemberSignature Language="VB.NET" Value="Public Function rend (ByRef  As ReverseBidirectionalIterator(Of TValue)) As Void" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ^ rend(Microsoft::VisualC::StlClr::Generic::ReverseBidirectionalIterator&lt;TValue&gt; ^ % );" />
      <MemberSignature Language="F#" Value="abstract member rend :  -&gt; unit" Usage="iHash.rend " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="" Type="Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator&lt;TValue&gt;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name=""><span data-ttu-id="0917b-212">Iterator odwrotny, który wskazuje tuż za koniec kontrolowanej sekwencji.</span><span class="sxs-lookup"><span data-stu-id="0917b-212">A reverse iterator that points just beyond the beginning of the controlled sequence.</span></span> <span data-ttu-id="0917b-213">Dzięki temu wyznacza <paramref name="end" /> odwrotnej kolejności.</span><span class="sxs-lookup"><span data-stu-id="0917b-213">Hence, it designates the <paramref name="end" /> of the reverse sequence.</span></span> <span data-ttu-id="0917b-214">Służy do uzyskiwania iterator, który wyznacza <paramref name="current" /> koniec kontrolowanej sekwencji występuje w odwrotnej kolejności.</span><span class="sxs-lookup"><span data-stu-id="0917b-214">You use it to obtain an iterator that designates the <paramref name="current" /> end of the controlled sequence seen in reverse order.</span></span> <span data-ttu-id="0917b-215">Stan można zmienić, gdy zmieni się długość kontrolowanej sekwencji.</span><span class="sxs-lookup"><span data-stu-id="0917b-215">Its status can change if the length of the controlled sequence changes.</span></span></param>
        <summary><span data-ttu-id="0917b-216">Określa koniec kontrolowanej sekwencji odwróconej.</span><span class="sxs-lookup"><span data-stu-id="0917b-216">Designates the end of the reversed controlled sequence.</span></span></summary>
        <returns><span data-ttu-id="0917b-217">Iterator.</span><span class="sxs-lookup"><span data-stu-id="0917b-217">An iterator.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  
 <span data-ttu-id="0917b-218">Aby uzyskać więcej informacji, zobacz [skrótu\_map::rend (STL/CLR)](/cpp/dotnet/hash-map-stl-clr#rend), [skrótu\_multimap::rend (STL/CLR)](/cpp/dotnet/hash-multimap-stl-clr#rend), [skrótu\_set::rend (STL/CLR)](/cpp/dotnet/hash-set-stl-clr#rend), i [skrótu\_multiset::rend (STL/CLR)](/cpp/dotnet/hash-multiset-stl-clr#rend).</span><span class="sxs-lookup"><span data-stu-id="0917b-218">For more information, see [hash\_map::rend (STL/CLR)](/cpp/dotnet/hash-map-stl-clr#rend), [hash\_multimap::rend (STL/CLR)](/cpp/dotnet/hash-multimap-stl-clr#rend), [hash\_set::rend (STL/CLR)](/cpp/dotnet/hash-set-stl-clr#rend), and [hash\_multiset::rend (STL/CLR)](/cpp/dotnet/hash-multiset-stl-clr#rend).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="size">
      <MemberSignature Language="C#" Value="public int size ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 size() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.IHash`2.size" />
      <MemberSignature Language="VB.NET" Value="Public Function size () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int size();" />
      <MemberSignature Language="F#" Value="abstract member size : unit -&gt; int" Usage="iHash.size " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="0917b-219">Zlicza liczbę elementów w kontenerze.</span><span class="sxs-lookup"><span data-stu-id="0917b-219">Counts the number of elements in the container.</span></span></summary>
        <returns><span data-ttu-id="0917b-220">Długość kontrolowanej sekwencji.</span><span class="sxs-lookup"><span data-stu-id="0917b-220">The length of the controlled sequence.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0917b-221">Aby uzyskać więcej informacji, zobacz [skrótu\_map::size (STL/CLR)](/cpp/dotnet/hash-map-stl-clr#size), [skrótu\_multimap::size (STL/CLR)](/cpp/dotnet/hash-multimap-stl-clr#size), [skrótu\_set::size (STL/CLR)](/cpp/dotnet/hash-set-stl-clr#size), i [skrótu\_multiset::size (STL/CLR)](/cpp/dotnet/hash-multiset-stl-clr#size).</span><span class="sxs-lookup"><span data-stu-id="0917b-221">For more information, see [hash\_map::size (STL/CLR)](/cpp/dotnet/hash-map-stl-clr#size), [hash\_multimap::size (STL/CLR)](/cpp/dotnet/hash-multimap-stl-clr#size), [hash\_set::size (STL/CLR)](/cpp/dotnet/hash-set-stl-clr#size), and [hash\_multiset::size (STL/CLR)](/cpp/dotnet/hash-multiset-stl-clr#size).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="swap">
      <MemberSignature Language="C#" Value="public void swap (Microsoft.VisualC.StlClr.IHash&lt;TKey,TValue&gt; _Right);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void swap(class Microsoft.VisualC.StlClr.IHash`2&lt;!TKey, !TValue&gt; _Right) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.IHash`2.swap(Microsoft.VisualC.StlClr.IHash{`0,`1})" />
      <MemberSignature Language="VB.NET" Value="Public Sub swap (_Right As IHash(Of TKey, TValue))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void swap(Microsoft::VisualC::StlClr::IHash&lt;TKey, TValue&gt; ^ _Right);" />
      <MemberSignature Language="F#" Value="abstract member swap : Microsoft.VisualC.StlClr.IHash&lt;'Key, 'Value&gt; -&gt; unit" Usage="iHash.swap _Right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="_Right" Type="Microsoft.VisualC.StlClr.IHash&lt;TKey,TValue&gt;" />
      </Parameters>
      <Docs>
        <param name="_Right"><span data-ttu-id="0917b-222">Kontener za pomocą którego można zamienić zawartość.</span><span class="sxs-lookup"><span data-stu-id="0917b-222">The container with which to swap contents.</span></span></param>
        <summary><span data-ttu-id="0917b-223">Zamienia zawartości dwóch kontenerów.</span><span class="sxs-lookup"><span data-stu-id="0917b-223">Swaps the contents of two containers.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0917b-224">Aby uzyskać więcej informacji, zobacz [skrótu\_map::swap (STL/CLR)](/cpp/dotnet/hash-map-stl-clr#swap), [skrótu\_multimap::swap (STL/CLR)](/cpp/dotnet/hash-multimap-stl-clr#swap), [skrótu\_set::swap (STL/CLR)](/cpp/dotnet/hash-set-stl-clr#swap), i [skrótu\_multiset::swap (STL/CLR)](/cpp/dotnet/hash-multiset-stl-clr#swap).</span><span class="sxs-lookup"><span data-stu-id="0917b-224">For more information, see [hash\_map::swap (STL/CLR)](/cpp/dotnet/hash-map-stl-clr#swap), [hash\_multimap::swap (STL/CLR)](/cpp/dotnet/hash-multimap-stl-clr#swap), [hash\_set::swap (STL/CLR)](/cpp/dotnet/hash-set-stl-clr#swap), and [hash\_multiset::swap (STL/CLR)](/cpp/dotnet/hash-multiset-stl-clr#swap).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="upper_bound">
      <MemberSignature Language="C#" Value="public void upper_bound (ref Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator&lt;TValue&gt; , TKey _Keyval);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.void upper_bound(class Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1&lt;!TValue&gt;&amp; , !TKey _Keyval) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.IHash`2.upper_bound(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}@,`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function upper_bound (ByRef  As ContainerBidirectionalIterator(Of TValue), _Keyval As TKey) As Void" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ^ upper_bound(Microsoft::VisualC::StlClr::Generic::ContainerBidirectionalIterator&lt;TValue&gt; ^ % , TKey _Keyval);" />
      <MemberSignature Language="F#" Value="abstract member upper_bound :  * 'Key -&gt; unit" Usage="iHash.upper_bound (, _Keyval)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="" Type="Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator&lt;TValue&gt;" RefType="ref" />
        <Parameter Name="_Keyval" Type="TKey" />
      </Parameters>
      <Docs>
        <param name=""><span data-ttu-id="0917b-225">Iterator, który wyznacza pierwszego elementu poza ostatnim elementem w kontrolowanej sekwencji, która tworzy skrót do tego samego zasobnika jako <paramref name="_Keyval" /> i ma równoważną kolejność, tak aby <paramref name="_Keyval" />.</span><span class="sxs-lookup"><span data-stu-id="0917b-225">An iterator that designates the first element beyond the last element in the controlled sequence that hashes to the same bucket as <paramref name="_Keyval" /> and has equivalent ordering to <paramref name="_Keyval" />.</span></span> <span data-ttu-id="0917b-226">Jeśli taki element nie istnieje, zwraca <see cref="M:Microsoft.VisualC.StlClr.IHash`2.end(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}@)" />.</span><span class="sxs-lookup"><span data-stu-id="0917b-226">If no such element exists, it returns <see cref="M:Microsoft.VisualC.StlClr.IHash`2.end(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}@)" />.</span></span></param>
        <param name="_Keyval"><span data-ttu-id="0917b-227">Wartość klucza do wyszukania.</span><span class="sxs-lookup"><span data-stu-id="0917b-227">The key value to search for.</span></span></param>
        <summary><span data-ttu-id="0917b-228">Umożliwia znalezienie koniec zakresu elementów, które odpowiadają określonemu kluczowi.</span><span class="sxs-lookup"><span data-stu-id="0917b-228">Finds the end of the range of elements that match a specified key.</span></span></summary>
        <returns><span data-ttu-id="0917b-229">Iterator.</span><span class="sxs-lookup"><span data-stu-id="0917b-229">An iterator.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  
 <span data-ttu-id="0917b-230">Aby uzyskać więcej informacji, zobacz [skrótu\_map::upper_bound (STL/CLR)](/cpp/dotnet/hash-map-stl-clr#upper_bound), [skrótu\_multimap::upper_bound (STL/CLR)](/cpp/dotnet/hash-multimap-stl-clr#upper_bound), [skrótu\_set::upper_ powiązany (STL/CLR)](/cpp/dotnet/hash-set-stl-clr#upper_bound), i [skrótu\_multiset::upper_bound (STL/CLR)](/cpp/dotnet/hash-multiset-stl-clr#upper_bound).</span><span class="sxs-lookup"><span data-stu-id="0917b-230">For more information, see [hash\_map::upper_bound (STL/CLR)](/cpp/dotnet/hash-map-stl-clr#upper_bound), [hash\_multimap::upper_bound (STL/CLR)](/cpp/dotnet/hash-multimap-stl-clr#upper_bound), [hash\_set::upper_bound (STL/CLR)](/cpp/dotnet/hash-set-stl-clr#upper_bound), and [hash\_multiset::upper_bound (STL/CLR)](/cpp/dotnet/hash-multiset-stl-clr#upper_bound).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="value_comp">
      <MemberSignature Language="C#" Value="public Microsoft.VisualC.StlClr.BinaryDelegate&lt;TValue,TValue,bool&gt; value_comp ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.VisualC.StlClr.BinaryDelegate`3&lt;!TValue, !TValue, bool&gt; value_comp() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.IHash`2.value_comp" />
      <MemberSignature Language="VB.NET" Value="Public Function value_comp () As BinaryDelegate(Of TValue, TValue, Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::VisualC::StlClr::BinaryDelegate&lt;TValue, TValue, bool&gt; ^ value_comp();" />
      <MemberSignature Language="F#" Value="abstract member value_comp : unit -&gt; Microsoft.VisualC.StlClr.BinaryDelegate&lt;'Value, 'Value, bool&gt;" Usage="iHash.value_comp " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualC.StlClr.BinaryDelegate&lt;TValue,TValue,System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="0917b-231">Zwraca szeregowania delegat, który jest używany w celu uporządkowania kontrolowanej sekwencji.</span><span class="sxs-lookup"><span data-stu-id="0917b-231">Returns the ordering delegate that is used to order the controlled sequence.</span></span></summary>
        <returns><span data-ttu-id="0917b-232">Szeregowania delegat, który jest używany w celu uporządkowania kontrolowanej sekwencji.</span><span class="sxs-lookup"><span data-stu-id="0917b-232">The ordering delegate that is used to order the controlled sequence.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0917b-233">Aby uzyskać więcej informacji, zobacz [skrótu\_map::value_comp (STL/CLR)](/cpp/dotnet/hash-map-stl-clr#value_comp), [skrótu\_multimap::value_comp (STL/CLR)](/cpp/dotnet/hash-multimap-stl-clr#value_comp), [skrótu\_set::value_comp (STL/CLR) ](/cpp/dotnet/hash-set-stl-clr#value_comp), i [skrótu\_multiset::value_comp (STL/CLR)](/cpp/dotnet/hash-multiset-stl-clr#value_comp).</span><span class="sxs-lookup"><span data-stu-id="0917b-233">For more information, see [hash\_map::value_comp (STL/CLR)](/cpp/dotnet/hash-map-stl-clr#value_comp), [hash\_multimap::value_comp (STL/CLR)](/cpp/dotnet/hash-multimap-stl-clr#value_comp), [hash\_set::value_comp (STL/CLR)](/cpp/dotnet/hash-set-stl-clr#value_comp), and [hash\_multiset::value_comp (STL/CLR)](/cpp/dotnet/hash-multiset-stl-clr#value_comp).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>