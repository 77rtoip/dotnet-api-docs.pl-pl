<Type Name="IVector&lt;TValue&gt;" FullName="Microsoft.VisualC.StlClr.IVector&lt;TValue&gt;">
  <Metadata><Meta Name="ms.openlocfilehash" Value="a712328a1d5b543c2d73cac3ce749af6b265e4d7" /><Meta Name="ms.sourcegitcommit" Value="756d085f27705e86604f1bba5f2086ee23761acf" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="01/30/2019" /><Meta Name="ms.locfileid" Value="55344461" /></Metadata><TypeSignature Language="C#" Value="public interface IVector&lt;TValue&gt; : ICloneable, Microsoft.VisualC.StlClr.Generic.IRandomAccessContainer&lt;TValue&gt;, System.Collections.ICollection" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract beforefieldinit IVector`1&lt;TValue&gt; implements class Microsoft.VisualC.StlClr.Generic.IRandomAccessContainer`1&lt;!TValue&gt;, class System.Collections.ICollection, class System.Collections.IEnumerable, class System.ICloneable" />
  <TypeSignature Language="DocId" Value="T:Microsoft.VisualC.StlClr.IVector`1" />
  <TypeSignature Language="VB.NET" Value="Public Interface IVector(Of TValue)&#xA;Implements ICloneable, ICollection, IRandomAccessContainer(Of TValue)" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename TValue&gt;&#xA;public interface class IVector : ICloneable, Microsoft::VisualC::StlClr::Generic::IRandomAccessContainer&lt;TValue&gt;, System::Collections::ICollection" />
  <TypeSignature Language="F#" Value="type IVector&lt;'Value&gt; = interface&#xA;    interface IRandomAccessContainer&lt;'Value&gt;&#xA;    interface ICloneable&#xA;    interface ICollection&#xA;    interface IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TValue" />
  </TypeParameters>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.VisualC.StlClr.Generic.IRandomAccessContainer&lt;TValue&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.ICollection</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <typeparam name="TValue"><span data-ttu-id="a22cb-101">Typ elementu w kontrolowanej sekwencji.</span><span class="sxs-lookup"><span data-stu-id="a22cb-101">The type of an element in the controlled sequence.</span></span></typeparam>
    <summary><span data-ttu-id="a22cb-102">Definiuje interfejs dla STL/CLR <see href="https://docs.microsoft.com/cpp/dotnet/vector-stl-clr">wektor</see> obiektu.</span><span class="sxs-lookup"><span data-stu-id="a22cb-102">Defines the interface for an STL/CLR <see href="https://docs.microsoft.com/cpp/dotnet/vector-stl-clr">vector</see> object.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[unnamed_parm](~/includes/unnamed-parm-md.md)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName="assign">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a22cb-103">Zamienia wszystkie elementy w kontenerze przy użyciu określonych elementów.</span><span class="sxs-lookup"><span data-stu-id="a22cb-103">Replaces all elements in the container with the specified elements.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a22cb-104">Aby uzyskać więcej informacji, zobacz [vector::assign (STL/CLR)](/cpp/dotnet/vector-stl-clr#assign).</span><span class="sxs-lookup"><span data-stu-id="a22cb-104">For more information, see [vector::assign (STL/CLR)](/cpp/dotnet/vector-stl-clr#assign).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="assign">
      <MemberSignature Language="C#" Value="public void assign (System.Collections.IEnumerable _Right);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void assign(class System.Collections.IEnumerable _Right) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.IVector`1.assign(System.Collections.IEnumerable)" />
      <MemberSignature Language="VB.NET" Value="Public Sub assign (_Right As IEnumerable)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void assign(System::Collections::IEnumerable ^ _Right);" />
      <MemberSignature Language="F#" Value="abstract member assign : System.Collections.IEnumerable -&gt; unit" Usage="iVector.assign _Right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="_Right" Type="System.Collections.IEnumerable" />
      </Parameters>
      <Docs>
        <param name="_Right"><span data-ttu-id="a22cb-105">Wyliczenie, którego elementy mają zostać wstawione do kontenera.</span><span class="sxs-lookup"><span data-stu-id="a22cb-105">The enumeration whose elements are to be inserted into the container.</span></span></param>
        <summary><span data-ttu-id="a22cb-106">Zamienia wszystkie elementy w kontenerze elementów w wyliczeniu określony.</span><span class="sxs-lookup"><span data-stu-id="a22cb-106">Replaces all elements in the container with the elements in the specified enumeration.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a22cb-107">Aby uzyskać więcej informacji, zobacz [vector::assign (STL/CLR)](/cpp/dotnet/vector-stl-clr#assign).</span><span class="sxs-lookup"><span data-stu-id="a22cb-107">For more information, see [vector::assign (STL/CLR)](/cpp/dotnet/vector-stl-clr#assign).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="assign">
      <MemberSignature Language="C#" Value="public void assign (Microsoft.VisualC.StlClr.Generic.IInputIterator&lt;TValue&gt; _First, Microsoft.VisualC.StlClr.Generic.IInputIterator&lt;TValue&gt; _Last);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void assign(class Microsoft.VisualC.StlClr.Generic.IInputIterator`1&lt;!TValue&gt; _First, class Microsoft.VisualC.StlClr.Generic.IInputIterator`1&lt;!TValue&gt; _Last) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.IVector`1.assign(Microsoft.VisualC.StlClr.Generic.IInputIterator{`0},Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Sub assign (_First As IInputIterator(Of TValue), _Last As IInputIterator(Of TValue))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void assign(Microsoft::VisualC::StlClr::Generic::IInputIterator&lt;TValue&gt; ^ _First, Microsoft::VisualC::StlClr::Generic::IInputIterator&lt;TValue&gt; ^ _Last);" />
      <MemberSignature Language="F#" Value="abstract member assign : Microsoft.VisualC.StlClr.Generic.IInputIterator&lt;'Value&gt; * Microsoft.VisualC.StlClr.Generic.IInputIterator&lt;'Value&gt; -&gt; unit" Usage="iVector.assign (_First, _Last)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="_First" Type="Microsoft.VisualC.StlClr.Generic.IInputIterator&lt;TValue&gt;" />
        <Parameter Name="_Last" Type="Microsoft.VisualC.StlClr.Generic.IInputIterator&lt;TValue&gt;" />
      </Parameters>
      <Docs>
        <param name="_First"><span data-ttu-id="a22cb-108">Pozycja początku zakres elementów do wstawienia.</span><span class="sxs-lookup"><span data-stu-id="a22cb-108">The beginning position of the range of elements to insert.</span></span></param>
        <param name="_Last"><span data-ttu-id="a22cb-109">Pierwszej pozycji poza koniec zakresu elementów do wstawienia.</span><span class="sxs-lookup"><span data-stu-id="a22cb-109">The first position beyond the end of the range of elements to insert.</span></span></param>
        <summary><span data-ttu-id="a22cb-110">Zamienia wszystkie elementy w kontenerze elementów między danego Iteratory.</span><span class="sxs-lookup"><span data-stu-id="a22cb-110">Replaces all elements in the container with the elements between the given iterators.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a22cb-111">Aby uzyskać więcej informacji, zobacz [vector::assign (STL/CLR)](/cpp/dotnet/vector-stl-clr#assign).</span><span class="sxs-lookup"><span data-stu-id="a22cb-111">For more information, see [vector::assign (STL/CLR)](/cpp/dotnet/vector-stl-clr#assign).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="assign">
      <MemberSignature Language="C#" Value="public void assign (int _Count, TValue _Val);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void assign(int32 _Count, !TValue _Val) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.IVector`1.assign(System.Int32,`0)" />
      <MemberSignature Language="VB.NET" Value="Public Sub assign (_Count As Integer, _Val As TValue)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void assign(int _Count, TValue _Val);" />
      <MemberSignature Language="F#" Value="abstract member assign : int * 'Value -&gt; unit" Usage="iVector.assign (_Count, _Val)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="_Count" Type="System.Int32" />
        <Parameter Name="_Val" Type="TValue" />
      </Parameters>
      <Docs>
        <param name="_Count"><span data-ttu-id="a22cb-112">Liczba elementów do wstawienia do kontenera.</span><span class="sxs-lookup"><span data-stu-id="a22cb-112">The number of elements to insert into the container.</span></span></param>
        <param name="_Val"><span data-ttu-id="a22cb-113">Wartość elementu do wstawienia.</span><span class="sxs-lookup"><span data-stu-id="a22cb-113">The value of the element to insert.</span></span></param>
        <summary><span data-ttu-id="a22cb-114">Zamienia określoną liczbę elementów, które mają określone wartości wszystkich elementów w kontenerze.</span><span class="sxs-lookup"><span data-stu-id="a22cb-114">Replaces all elements in the container with the specified number of elements that have given values.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a22cb-115">Aby uzyskać więcej informacji, zobacz [vector::assign (STL/CLR)](/cpp/dotnet/vector-stl-clr#assign).</span><span class="sxs-lookup"><span data-stu-id="a22cb-115">For more information, see [vector::assign (STL/CLR)](/cpp/dotnet/vector-stl-clr#assign).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="at">
      <MemberSignature Language="C#" Value="public TValue at (int _Pos);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TValue at(int32 _Pos) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.IVector`1.at(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function at (_Pos As Integer) As TValue" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TValue % at(int _Pos);" />
      <MemberSignature Language="F#" Value="abstract member at : int -&gt; " Usage="iVector.at _Pos" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TValue@</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="_Pos" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="_Pos"><span data-ttu-id="a22cb-116">Pozycja elementu, aby uzyskać dostęp.</span><span class="sxs-lookup"><span data-stu-id="a22cb-116">The position of the element to access.</span></span></param>
        <summary><span data-ttu-id="a22cb-117">Uzyskuje dostęp do elementu na określonej pozycji w kontenerze.</span><span class="sxs-lookup"><span data-stu-id="a22cb-117">Accesses an element at a specified position in the container.</span></span></summary>
        <returns><span data-ttu-id="a22cb-118">Element kontrolowanej sekwencji w położeniu <paramref name="_Pos" />.</span><span class="sxs-lookup"><span data-stu-id="a22cb-118">The element of the controlled sequence at position <paramref name="_Pos" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a22cb-119">Aby uzyskać więcej informacji, zobacz [vector::at (STL/CLR)](/cpp/dotnet/vector-stl-clr#at).</span><span class="sxs-lookup"><span data-stu-id="a22cb-119">For more information, see [vector::at (STL/CLR)](/cpp/dotnet/vector-stl-clr#at).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="back">
      <MemberSignature Language="C#" Value="public TValue back ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TValue back() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.IVector`1.back" />
      <MemberSignature Language="VB.NET" Value="Public Function back () As TValue" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TValue % back();" />
      <MemberSignature Language="F#" Value="abstract member back : unit -&gt; " Usage="iVector.back " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TValue@</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a22cb-120">Uzyskuje dostęp do ostatniego elementu w kontenerze.</span><span class="sxs-lookup"><span data-stu-id="a22cb-120">Accesses the last element of the container.</span></span></summary>
        <returns><span data-ttu-id="a22cb-121">Ostatniego elementu w kontrolowanej sekwencji musi być niepusta.</span><span class="sxs-lookup"><span data-stu-id="a22cb-121">The last element of the controlled sequence, which must be non-empty.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a22cb-122">Aby uzyskać więcej informacji, zobacz [vector::back (STL/CLR)](/cpp/dotnet/vector-stl-clr#back).</span><span class="sxs-lookup"><span data-stu-id="a22cb-122">For more information, see [vector::back (STL/CLR)](/cpp/dotnet/vector-stl-clr#back).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="back_item">
      <MemberSignature Language="C#" Value="public TValue back_item { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !TValue back_item" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualC.StlClr.IVector`1.back_item" />
      <MemberSignature Language="VB.NET" Value="Public Property back_item As TValue" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TValue back_item { TValue get(); void set(TValue value); };" />
      <MemberSignature Language="F#" Value="member this.back_item : 'Value with get, set" Usage="Microsoft.VisualC.StlClr.IVector&lt;'Value&gt;.back_item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TValue</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a22cb-123">Uzyskuje dostęp do ostatniego elementu w kontenerze.</span><span class="sxs-lookup"><span data-stu-id="a22cb-123">Accesses the last element of the container.</span></span></summary>
        <value><span data-ttu-id="a22cb-124">Ostatniego elementu w kontrolowanej sekwencji musi być niepusta.</span><span class="sxs-lookup"><span data-stu-id="a22cb-124">The last element of the controlled sequence, which must be non-empty.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a22cb-125">Aby uzyskać więcej informacji, zobacz [vector::back_item (STL/CLR)](/cpp/dotnet/vector-stl-clr#back_item).</span><span class="sxs-lookup"><span data-stu-id="a22cb-125">For more information, see [vector::back_item (STL/CLR)](/cpp/dotnet/vector-stl-clr#back_item).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="begin">
      <MemberSignature Language="C#" Value="public void begin (ref Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator&lt;TValue&gt; );" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.void begin(class Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1&lt;!TValue&gt;&amp; ) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.IVector`1.begin(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}@)" />
      <MemberSignature Language="VB.NET" Value="Public Function begin (ByRef  As ContainerRandomAccessIterator(Of TValue)) As Void" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ^ begin(Microsoft::VisualC::StlClr::Generic::ContainerRandomAccessIterator&lt;TValue&gt; ^ % );" />
      <MemberSignature Language="F#" Value="abstract member begin :  -&gt; unit" Usage="iVector.begin " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="" Type="Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator&lt;TValue&gt;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name=""><span data-ttu-id="a22cb-126">Iterator dostępu swobodnego, który wyznacza pierwszego elementu w kontrolowanej sekwencji lub tuż za koniec pustą sekwencją.</span><span class="sxs-lookup"><span data-stu-id="a22cb-126">A random-access iterator that designates the first element of the controlled sequence, or just beyond the end of an empty sequence.</span></span> <span data-ttu-id="a22cb-127">Służy do uzyskiwania iterator, który wyznacza <paramref name="current" /> początek kontrolowanej sekwencji, ale jej stan można zmienić, jeśli zmieni się długość kontrolowanej sekwencji.</span><span class="sxs-lookup"><span data-stu-id="a22cb-127">You use it to obtain an iterator that designates the <paramref name="current" /> beginning of the controlled sequence, but its status can change if the length of the controlled sequence changes.</span></span></param>
        <summary><span data-ttu-id="a22cb-128">Określa początek kontrolowanej sekwencji.</span><span class="sxs-lookup"><span data-stu-id="a22cb-128">Designates the beginning of the controlled sequence.</span></span></summary>
        <returns><span data-ttu-id="a22cb-129">Iterator.</span><span class="sxs-lookup"><span data-stu-id="a22cb-129">An iterator.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  
 <span data-ttu-id="a22cb-130">Aby uzyskać więcej informacji, zobacz [vector::begin (STL/CLR)](/cpp/dotnet/vector-stl-clr#begin).</span><span class="sxs-lookup"><span data-stu-id="a22cb-130">For more information, see [vector::begin (STL/CLR)](/cpp/dotnet/vector-stl-clr#begin).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="capacity">
      <MemberSignature Language="C#" Value="public int capacity ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 capacity() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.IVector`1.capacity" />
      <MemberSignature Language="VB.NET" Value="Public Function capacity () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int capacity();" />
      <MemberSignature Language="F#" Value="abstract member capacity : unit -&gt; int" Usage="iVector.capacity " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a22cb-131">Raporty rozmiar Magazyn przydzielony do kontenera.</span><span class="sxs-lookup"><span data-stu-id="a22cb-131">Reports the size of allocated storage for the container.</span></span></summary>
        <returns><span data-ttu-id="a22cb-132">Magazyn, które jest aktualnie przydzielone do przechowywania kontrolowanej sekwencji przynajmniej tak duże jak wartość <see cref="M:Microsoft.VisualC.StlClr.IVector`1.size" />.</span><span class="sxs-lookup"><span data-stu-id="a22cb-132">The storage that is currently allocated to hold the controlled sequence, a value at least as large as <see cref="M:Microsoft.VisualC.StlClr.IVector`1.size" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a22cb-133">Aby uzyskać więcej informacji, zobacz [vector::capacity (STL/CLR)](/cpp/dotnet/vector-stl-clr#capacity).</span><span class="sxs-lookup"><span data-stu-id="a22cb-133">For more information, see [vector::capacity (STL/CLR)](/cpp/dotnet/vector-stl-clr#capacity).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="clear">
      <MemberSignature Language="C#" Value="public void clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.IVector`1.clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void clear();" />
      <MemberSignature Language="F#" Value="abstract member clear : unit -&gt; unit" Usage="iVector.clear " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a22cb-134">Usuwa wszystkie elementy z kontenera.</span><span class="sxs-lookup"><span data-stu-id="a22cb-134">Removes all elements from the container.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a22cb-135">Aby uzyskać więcej informacji, zobacz [vector::clear (STL/CLR)](/cpp/dotnet/vector-stl-clr#clear).</span><span class="sxs-lookup"><span data-stu-id="a22cb-135">For more information, see [vector::clear (STL/CLR)](/cpp/dotnet/vector-stl-clr#clear).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="empty">
      <MemberSignature Language="C#" Value="public bool empty ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool empty() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.IVector`1.empty" />
      <MemberSignature Language="VB.NET" Value="Public Function empty () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool empty();" />
      <MemberSignature Language="F#" Value="abstract member empty : unit -&gt; bool" Usage="iVector.empty " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a22cb-136">Sprawdza, czy kontener nie ma żadnych elementów.</span><span class="sxs-lookup"><span data-stu-id="a22cb-136">Tests whether the container has no elements.</span></span></summary>
        <returns><span data-ttu-id="a22cb-137"><see langword="true" /> Jeśli kontener nie ma żadnych elementów; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="a22cb-137"><see langword="true" /> if the container has no elements; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a22cb-138">Aby uzyskać więcej informacji, zobacz [vector::empty (STL/CLR)](/cpp/dotnet/vector-stl-clr#empty).</span><span class="sxs-lookup"><span data-stu-id="a22cb-138">For more information, see [vector::empty (STL/CLR)](/cpp/dotnet/vector-stl-clr#empty).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="end">
      <MemberSignature Language="C#" Value="public void end (ref Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator&lt;TValue&gt; );" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.void end(class Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1&lt;!TValue&gt;&amp; ) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.IVector`1.end(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}@)" />
      <MemberSignature Language="VB.NET" Value="Public Function end (ByRef  As ContainerRandomAccessIterator(Of TValue)) As Void" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ^ end(Microsoft::VisualC::StlClr::Generic::ContainerRandomAccessIterator&lt;TValue&gt; ^ % );" />
      <MemberSignature Language="F#" Value="abstract member end :  -&gt; unit" Usage="iVector.end " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="" Type="Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator&lt;TValue&gt;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name=""><span data-ttu-id="a22cb-139">Iterator dostępu swobodnego, który wskazuje tuż za koniec kontrolowanej sekwencji.</span><span class="sxs-lookup"><span data-stu-id="a22cb-139">A random-access iterator that points just beyond the end of the controlled sequence.</span></span> <span data-ttu-id="a22cb-140">Służy do uzyskiwania iterator, który wyznacza <paramref name="current" /> koniec kontrolowanej sekwencji, ale jej stan można zmienić, jeśli zmieni się długość kontrolowanej sekwencji.</span><span class="sxs-lookup"><span data-stu-id="a22cb-140">You use it to obtain an iterator that designates the <paramref name="current" /> end of the controlled sequence, but its status can change if the length of the controlled sequence changes.</span></span></param>
        <summary><span data-ttu-id="a22cb-141">Określa koniec kontrolowanej sekwencji.</span><span class="sxs-lookup"><span data-stu-id="a22cb-141">Designates the end of the controlled sequence.</span></span></summary>
        <returns><span data-ttu-id="a22cb-142">Iterator.</span><span class="sxs-lookup"><span data-stu-id="a22cb-142">An iterator.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  
 <span data-ttu-id="a22cb-143">Aby uzyskać więcej informacji, zobacz [vector::end (STL/CLR)](/cpp/dotnet/vector-stl-clr#end).</span><span class="sxs-lookup"><span data-stu-id="a22cb-143">For more information, see [vector::end (STL/CLR)](/cpp/dotnet/vector-stl-clr#end).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="erase">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a22cb-144">Usuwa elementy z określonych pozycji w kontenerze.</span><span class="sxs-lookup"><span data-stu-id="a22cb-144">Removes elements from specified positions in the container.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a22cb-145">Aby uzyskać więcej informacji, zobacz [vector::erase (STL/CLR)](/cpp/dotnet/vector-stl-clr#erase).</span><span class="sxs-lookup"><span data-stu-id="a22cb-145">For more information, see [vector::erase (STL/CLR)](/cpp/dotnet/vector-stl-clr#erase).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="erase">
      <MemberSignature Language="C#" Value="public void erase (ref Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator&lt;TValue&gt; , Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator&lt;TValue&gt; _Where);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.void erase(class Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1&lt;!TValue&gt;&amp; , class Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1&lt;!TValue&gt; _Where) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.IVector`1.erase(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}@,Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsByValue)" />
      <MemberSignature Language="VB.NET" Value="Public Function erase (ByRef  As ContainerRandomAccessIterator(Of TValue), _Where As ContainerRandomAccessIterator(Of TValue)) As Void" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ^ erase(Microsoft::VisualC::StlClr::Generic::ContainerRandomAccessIterator&lt;TValue&gt; ^ % , Microsoft::VisualC::StlClr::Generic::ContainerRandomAccessIterator&lt;TValue&gt; ^ _Where);" />
      <MemberSignature Language="F#" Value="abstract member erase :  * Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator&lt;'Value&gt; -&gt; unit" Usage="iVector.erase (, _Where)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="" Type="Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator&lt;TValue&gt;" RefType="ref" />
        <Parameter Name="_Where" Type="Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator&lt;TValue&gt;" />
      </Parameters>
      <Docs>
        <param name=""><span data-ttu-id="a22cb-146">Iterator opisujący pierwszy element, który pozostaje po przekroczeniu dowolne usunięte elementy, lub <see cref="M:Microsoft.VisualC.StlClr.IVector`1.end(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}@)" /> jeśli taki element nie istnieje.</span><span class="sxs-lookup"><span data-stu-id="a22cb-146">An iterator that designates the first element that remains beyond any removed elements, or <see cref="M:Microsoft.VisualC.StlClr.IVector`1.end(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}@)" /> if no such element exists.</span></span></param>
        <param name="_Where"><span data-ttu-id="a22cb-147">Położenie elementu do usunięcia.</span><span class="sxs-lookup"><span data-stu-id="a22cb-147">The position of the element to remove.</span></span></param>
        <summary><span data-ttu-id="a22cb-148">Usuwa pojedynczy element kontrolowanej sekwencji, który jest wskazywany przez  *\_gdzie*.</span><span class="sxs-lookup"><span data-stu-id="a22cb-148">Removes the single element of the controlled sequence that is pointed to by *\_Where*.</span></span></summary>
        <returns><span data-ttu-id="a22cb-149">Iterator.</span><span class="sxs-lookup"><span data-stu-id="a22cb-149">An iterator.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  
<span data-ttu-id="a22cb-150">Aby uzyskać więcej informacji, zobacz [vector::erase (STL/CLR)](/cpp/dotnet/vector-stl-clr#erase).</span><span class="sxs-lookup"><span data-stu-id="a22cb-150">For more information, see [vector::erase (STL/CLR)](/cpp/dotnet/vector-stl-clr#erase).</span></span>

]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="erase">
      <MemberSignature Language="C#" Value="public void erase (ref Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator&lt;TValue&gt; , Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator&lt;TValue&gt; _First_iter, Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator&lt;TValue&gt; _Last_iter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.void erase(class Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1&lt;!TValue&gt;&amp; , class Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1&lt;!TValue&gt; _First_iter, class Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1&lt;!TValue&gt; _Last_iter) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.IVector`1.erase(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}@,Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsByValue,Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsByValue)" />
      <MemberSignature Language="VB.NET" Value="Public Function erase (ByRef  As ContainerRandomAccessIterator(Of TValue), _First_iter As ContainerRandomAccessIterator(Of TValue), _Last_iter As ContainerRandomAccessIterator(Of TValue)) As Void" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ^ erase(Microsoft::VisualC::StlClr::Generic::ContainerRandomAccessIterator&lt;TValue&gt; ^ % , Microsoft::VisualC::StlClr::Generic::ContainerRandomAccessIterator&lt;TValue&gt; ^ _First_iter, Microsoft::VisualC::StlClr::Generic::ContainerRandomAccessIterator&lt;TValue&gt; ^ _Last_iter);" />
      <MemberSignature Language="F#" Value="abstract member erase :  * Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator&lt;'Value&gt; * Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator&lt;'Value&gt; -&gt; unit" Usage="iVector.erase (, _First_iter, _Last_iter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="" Type="Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator&lt;TValue&gt;" RefType="ref" />
        <Parameter Name="_First_iter" Type="Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator&lt;TValue&gt;" />
        <Parameter Name="_Last_iter" Type="Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator&lt;TValue&gt;" />
      </Parameters>
      <Docs>
        <param name=""><span data-ttu-id="a22cb-151">Iterator opisujący pierwszy element, który pozostaje po przekroczeniu dowolne usunięte elementy, lub <see cref="M:Microsoft.VisualC.StlClr.IVector`1.end(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}@)" /> jeśli taki element nie istnieje.</span><span class="sxs-lookup"><span data-stu-id="a22cb-151">An iterator that designates the first element that remains beyond any removed elements, or <see cref="M:Microsoft.VisualC.StlClr.IVector`1.end(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}@)" /> if no such element exists.</span></span></param>
        <param name="_First_iter"><span data-ttu-id="a22cb-152">Początek zakresu elementów, aby wymazać.</span><span class="sxs-lookup"><span data-stu-id="a22cb-152">The beginning of the range of elements to erase.</span></span></param>
        <param name="_Last_iter"><span data-ttu-id="a22cb-153">Pierwszej pozycji poza zakresem elementów, aby wymazać.</span><span class="sxs-lookup"><span data-stu-id="a22cb-153">The first position beyond the range of elements to erase.</span></span></param>
        <summary><span data-ttu-id="a22cb-154">Usuwa elementy kontrolowanej sekwencji w zakresie [<paramref name="_First_iter" />, <paramref name="_Last_iter" />].</span><span class="sxs-lookup"><span data-stu-id="a22cb-154">Removes the elements of the controlled sequence in the range [<paramref name="_First_iter" />, <paramref name="_Last_iter" />].</span></span></summary>
        <returns><span data-ttu-id="a22cb-155">Iterator.</span><span class="sxs-lookup"><span data-stu-id="a22cb-155">An iterator.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  
<span data-ttu-id="a22cb-156">Aby uzyskać więcej informacji, zobacz [vector::erase (STL/CLR)](/cpp/dotnet/vector-stl-clr#erase).</span><span class="sxs-lookup"><span data-stu-id="a22cb-156">For more information, see [vector::erase (STL/CLR)](/cpp/dotnet/vector-stl-clr#erase).</span></span>

]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="front">
      <MemberSignature Language="C#" Value="public TValue front ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TValue front() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.IVector`1.front" />
      <MemberSignature Language="VB.NET" Value="Public Function front () As TValue" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TValue % front();" />
      <MemberSignature Language="F#" Value="abstract member front : unit -&gt; " Usage="iVector.front " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TValue@</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a22cb-157">Uzyskuje dostęp do pierwszego elementu w kontenerze.</span><span class="sxs-lookup"><span data-stu-id="a22cb-157">Accesses the first element of the container.</span></span></summary>
        <returns><span data-ttu-id="a22cb-158">Pierwszy element w kontrolowanej sekwencji musi być niepusta.</span><span class="sxs-lookup"><span data-stu-id="a22cb-158">The first element of the controlled sequence, which must be non-empty.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a22cb-159">Aby uzyskać więcej informacji, zobacz [vector::front (STL/CLR)](/cpp/dotnet/vector-stl-clr#front).</span><span class="sxs-lookup"><span data-stu-id="a22cb-159">For more information, see [vector::front (STL/CLR)](/cpp/dotnet/vector-stl-clr#front).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="front_item">
      <MemberSignature Language="C#" Value="public TValue front_item { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !TValue front_item" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualC.StlClr.IVector`1.front_item" />
      <MemberSignature Language="VB.NET" Value="Public Property front_item As TValue" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TValue front_item { TValue get(); void set(TValue value); };" />
      <MemberSignature Language="F#" Value="member this.front_item : 'Value with get, set" Usage="Microsoft.VisualC.StlClr.IVector&lt;'Value&gt;.front_item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TValue</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a22cb-160">Uzyskuje dostęp do pierwszego elementu w kontenerze.</span><span class="sxs-lookup"><span data-stu-id="a22cb-160">Accesses the first element of the container.</span></span></summary>
        <value><span data-ttu-id="a22cb-161">Pierwszy element w kontrolowanej sekwencji musi być niepusta.</span><span class="sxs-lookup"><span data-stu-id="a22cb-161">The first element of the controlled sequence, which must be non-empty.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a22cb-162">Aby uzyskać więcej informacji, zobacz [vector::front_item (STL/CLR)](/cpp/dotnet/vector-stl-clr#front_item).</span><span class="sxs-lookup"><span data-stu-id="a22cb-162">For more information, see [vector::front_item (STL/CLR)](/cpp/dotnet/vector-stl-clr#front_item).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="get_generation">
      <MemberSignature Language="C#" Value="public uint get_generation ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.UInt32 modopt(System.Runtime.CompilerServices.IsLong) get_generation() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.IVector`1.get_generation" />
      <MemberSignature Language="VB.NET" Value="Public Function get_generation () As UInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::UInt32 get_generation();" />
      <MemberSignature Language="F#" Value="abstract member get_generation : unit -&gt; UInt32" Usage="iVector.get_generation " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a22cb-163">Pobiera bieżącej generacji zmiany w podstawowej kontenera.</span><span class="sxs-lookup"><span data-stu-id="a22cb-163">Gets the current change generation of the underlying container.</span></span></summary>
        <returns><span data-ttu-id="a22cb-164">Bieżącej generacji zmiany podstawowego kontenera.</span><span class="sxs-lookup"><span data-stu-id="a22cb-164">The current change generation of the underlying container.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="insert">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a22cb-165">Dodaje elementy do kontenera na określonej pozycji.</span><span class="sxs-lookup"><span data-stu-id="a22cb-165">Adds elements to the container at a specified position.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a22cb-166">Aby uzyskać więcej informacji, zobacz [vector::insert (STL/CLR)](/cpp/dotnet/vector-stl-clr#insert).</span><span class="sxs-lookup"><span data-stu-id="a22cb-166">For more information, see [vector::insert (STL/CLR)](/cpp/dotnet/vector-stl-clr#insert).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="insert">
      <MemberSignature Language="C#" Value="public void insert (Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator&lt;TValue&gt; _Where_iter, System.Collections.IEnumerable _Right);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void insert(class Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1&lt;!TValue&gt; _Where_iter, class System.Collections.IEnumerable _Right) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.IVector`1.insert(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsByValue,System.Collections.IEnumerable)" />
      <MemberSignature Language="VB.NET" Value="Public Sub insert (_Where_iter As ContainerRandomAccessIterator(Of TValue), _Right As IEnumerable)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void insert(Microsoft::VisualC::StlClr::Generic::ContainerRandomAccessIterator&lt;TValue&gt; ^ _Where_iter, System::Collections::IEnumerable ^ _Right);" />
      <MemberSignature Language="F#" Value="abstract member insert : Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator&lt;'Value&gt; * System.Collections.IEnumerable -&gt; unit" Usage="iVector.insert (_Where_iter, _Right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="_Where_iter" Type="Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator&lt;TValue&gt;" />
        <Parameter Name="_Right" Type="System.Collections.IEnumerable" />
      </Parameters>
      <Docs>
        <param name="_Where_iter"><span data-ttu-id="a22cb-167">Pozycja w kontenerze, przed którym ma zostać wstawiony.</span><span class="sxs-lookup"><span data-stu-id="a22cb-167">The position in the container before which to insert.</span></span></param>
        <param name="_Right"><span data-ttu-id="a22cb-168">Wyliczenie, które można wstawić do kontenera.</span><span class="sxs-lookup"><span data-stu-id="a22cb-168">The enumeration to insert into the container.</span></span></param>
        <summary><span data-ttu-id="a22cb-169">Wstawia sekwencję, która została wyznaczona przez moduł wyliczający do kontenera.</span><span class="sxs-lookup"><span data-stu-id="a22cb-169">Inserts the sequence that is designated by an enumerator into the container.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="insert">
      <MemberSignature Language="C#" Value="public void insert (ref Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator&lt;TValue&gt; , Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator&lt;TValue&gt; _Where, TValue _Val);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.void insert(class Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1&lt;!TValue&gt;&amp; , class Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1&lt;!TValue&gt; _Where, !TValue _Val) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.IVector`1.insert(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}@,Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsByValue,`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function insert (ByRef  As ContainerRandomAccessIterator(Of TValue), _Where As ContainerRandomAccessIterator(Of TValue), _Val As TValue) As Void" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ^ insert(Microsoft::VisualC::StlClr::Generic::ContainerRandomAccessIterator&lt;TValue&gt; ^ % , Microsoft::VisualC::StlClr::Generic::ContainerRandomAccessIterator&lt;TValue&gt; ^ _Where, TValue _Val);" />
      <MemberSignature Language="F#" Value="abstract member insert :  * Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator&lt;'Value&gt; * 'Value -&gt; unit" Usage="iVector.insert (, _Where, _Val)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="" Type="Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator&lt;TValue&gt;" RefType="ref" />
        <Parameter Name="_Where" Type="Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator&lt;TValue&gt;" />
        <Parameter Name="_Val" Type="TValue" />
      </Parameters>
      <Docs>
        <param name=""><span data-ttu-id="a22cb-170">Iterator, który wyznacza nowo wstawionego elementu.</span><span class="sxs-lookup"><span data-stu-id="a22cb-170">An iterator that designates the newly inserted element.</span></span></param>
        <param name="_Where"><span data-ttu-id="a22cb-171">Pozycja w kontenerze, przed którym ma zostać wstawiony.</span><span class="sxs-lookup"><span data-stu-id="a22cb-171">The position in the container before which to insert.</span></span></param>
        <param name="_Val"><span data-ttu-id="a22cb-172">Wartość elementu do wstawienia do kontenera.</span><span class="sxs-lookup"><span data-stu-id="a22cb-172">The value of the element to insert into the container.</span></span></param>
        <summary><span data-ttu-id="a22cb-173">Wstawia określoną wartość do kontenera.</span><span class="sxs-lookup"><span data-stu-id="a22cb-173">Inserts the specified value into the container.</span></span></summary>
        <returns><span data-ttu-id="a22cb-174">Iterator.</span><span class="sxs-lookup"><span data-stu-id="a22cb-174">An iterator.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="insert">
      <MemberSignature Language="C#" Value="public void insert (Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator&lt;TValue&gt; _Where, Microsoft.VisualC.StlClr.Generic.IInputIterator&lt;TValue&gt; _First, Microsoft.VisualC.StlClr.Generic.IInputIterator&lt;TValue&gt; _Last);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void insert(class Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1&lt;!TValue&gt; _Where, class Microsoft.VisualC.StlClr.Generic.IInputIterator`1&lt;!TValue&gt; _First, class Microsoft.VisualC.StlClr.Generic.IInputIterator`1&lt;!TValue&gt; _Last) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.IVector`1.insert(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsByValue,Microsoft.VisualC.StlClr.Generic.IInputIterator{`0},Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Sub insert (_Where As ContainerRandomAccessIterator(Of TValue), _First As IInputIterator(Of TValue), _Last As IInputIterator(Of TValue))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void insert(Microsoft::VisualC::StlClr::Generic::ContainerRandomAccessIterator&lt;TValue&gt; ^ _Where, Microsoft::VisualC::StlClr::Generic::IInputIterator&lt;TValue&gt; ^ _First, Microsoft::VisualC::StlClr::Generic::IInputIterator&lt;TValue&gt; ^ _Last);" />
      <MemberSignature Language="F#" Value="abstract member insert : Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator&lt;'Value&gt; * Microsoft.VisualC.StlClr.Generic.IInputIterator&lt;'Value&gt; * Microsoft.VisualC.StlClr.Generic.IInputIterator&lt;'Value&gt; -&gt; unit" Usage="iVector.insert (_Where, _First, _Last)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="_Where" Type="Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator&lt;TValue&gt;" />
        <Parameter Name="_First" Type="Microsoft.VisualC.StlClr.Generic.IInputIterator&lt;TValue&gt;" />
        <Parameter Name="_Last" Type="Microsoft.VisualC.StlClr.Generic.IInputIterator&lt;TValue&gt;" />
      </Parameters>
      <Docs>
        <param name="_Where"><span data-ttu-id="a22cb-175">Pozycja w kontenerze, przed którym ma zostać wstawiony.</span><span class="sxs-lookup"><span data-stu-id="a22cb-175">The position in the container before which to insert.</span></span></param>
        <param name="_First"><span data-ttu-id="a22cb-176">Pozycja początku zakresu do wstawienia do kontenera.</span><span class="sxs-lookup"><span data-stu-id="a22cb-176">The beginning position of the range to insert into the container.</span></span></param>
        <param name="_Last"><span data-ttu-id="a22cb-177">Pierwszej pozycji poza zakres do wstawienia do kontenera.</span><span class="sxs-lookup"><span data-stu-id="a22cb-177">The first position beyond the range to insert into the container.</span></span></param>
        <summary><span data-ttu-id="a22cb-178">Wstawia rozpoczyna się od litery sekwencji <paramref name="_First" /> i końcowe z poprzednim elementem <paramref name="_Last" /> do kontenera.</span><span class="sxs-lookup"><span data-stu-id="a22cb-178">Inserts the sequence beginning with <paramref name="_First" /> and ending with the element preceding <paramref name="_Last" /> into the container.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="insert">
      <MemberSignature Language="C#" Value="public void insert (Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator&lt;TValue&gt; _Where, int _Count, TValue _Val);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void insert(class Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1&lt;!TValue&gt; _Where, int32 _Count, !TValue _Val) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.IVector`1.insert(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsByValue,System.Int32,`0)" />
      <MemberSignature Language="VB.NET" Value="Public Sub insert (_Where As ContainerRandomAccessIterator(Of TValue), _Count As Integer, _Val As TValue)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void insert(Microsoft::VisualC::StlClr::Generic::ContainerRandomAccessIterator&lt;TValue&gt; ^ _Where, int _Count, TValue _Val);" />
      <MemberSignature Language="F#" Value="abstract member insert : Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator&lt;'Value&gt; * int * 'Value -&gt; unit" Usage="iVector.insert (_Where, _Count, _Val)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="_Where" Type="Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator&lt;TValue&gt;" />
        <Parameter Name="_Count" Type="System.Int32" />
        <Parameter Name="_Val" Type="TValue" />
      </Parameters>
      <Docs>
        <param name="_Where"><span data-ttu-id="a22cb-179">Pozycja w kontenerze, przed którym ma zostać wstawiony.</span><span class="sxs-lookup"><span data-stu-id="a22cb-179">The position in the container before which to insert.</span></span></param>
        <param name="_Count"><span data-ttu-id="a22cb-180">Liczba elementów do wstawienia do kontenera.</span><span class="sxs-lookup"><span data-stu-id="a22cb-180">The number of elements to insert into the container.</span></span></param>
        <param name="_Val"><span data-ttu-id="a22cb-181">Wartość elementu do wstawienia do kontenera.</span><span class="sxs-lookup"><span data-stu-id="a22cb-181">The value of the element to insert into the container.</span></span></param>
        <summary><span data-ttu-id="a22cb-182">Wstawia określoną wartość do kontenera.</span><span class="sxs-lookup"><span data-stu-id="a22cb-182">Inserts the specified value into the container.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  
<span data-ttu-id="a22cb-183">Aby uzyskać więcej informacji, zobacz [vector::insert (STL/CLR)](/cpp/dotnet/vector-stl-clr#insert).</span><span class="sxs-lookup"><span data-stu-id="a22cb-183">For more information, see [vector::insert (STL/CLR)](/cpp/dotnet/vector-stl-clr#insert).</span></span>

]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public TValue this[int _Pos] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !TValue Item(int32)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualC.StlClr.IVector`1.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public Property Item(_Pos As Integer) As TValue" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TValue default[int] { TValue get(int _Pos); void set(int _Pos, TValue value); };" />
      <MemberSignature Language="F#" Value="member this.Item(int) : 'Value with get, set" Usage="Microsoft.VisualC.StlClr.IVector&lt;'Value&gt;.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TValue</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="_Pos" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="_Pos"><span data-ttu-id="a22cb-184">Pozycja elementu, aby uzyskać dostęp.</span><span class="sxs-lookup"><span data-stu-id="a22cb-184">The position of the element to access.</span></span></param>
        <summary><span data-ttu-id="a22cb-185">Uzyskuje dostęp do elementu na określonej pozycji w kontenerze.</span><span class="sxs-lookup"><span data-stu-id="a22cb-185">Accesses an element at a specified position in the container.</span></span></summary>
        <value><span data-ttu-id="a22cb-186">Do elementu w położeniu <paramref name="_Pos" />.</span><span class="sxs-lookup"><span data-stu-id="a22cb-186">The element at position <paramref name="_Pos" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a22cb-187">Aby uzyskać więcej informacji, zobacz [vector::operator(STL/CLR)](/cpp/dotnet/vector-stl-clr#operator).</span><span class="sxs-lookup"><span data-stu-id="a22cb-187">For more information, see [vector::operator(STL/CLR)](/cpp/dotnet/vector-stl-clr#operator).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="pop_back">
      <MemberSignature Language="C#" Value="public void pop_back ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void pop_back() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.IVector`1.pop_back" />
      <MemberSignature Language="VB.NET" Value="Public Sub pop_back ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void pop_back();" />
      <MemberSignature Language="F#" Value="abstract member pop_back : unit -&gt; unit" Usage="iVector.pop_back " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a22cb-188">Usuwa ostatni element z kontenera.</span><span class="sxs-lookup"><span data-stu-id="a22cb-188">Removes the last element from the container.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a22cb-189">Aby uzyskać więcej informacji, zobacz [vector::pop_back (STL/CLR)](/cpp/dotnet/vector-stl-clr#pop_back).</span><span class="sxs-lookup"><span data-stu-id="a22cb-189">For more information, see [vector::pop_back (STL/CLR)](/cpp/dotnet/vector-stl-clr#pop_back).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="push_back">
      <MemberSignature Language="C#" Value="public void push_back (TValue _Val);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void push_back(!TValue _Val) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.IVector`1.push_back(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Sub push_back (_Val As TValue)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void push_back(TValue _Val);" />
      <MemberSignature Language="F#" Value="abstract member push_back : 'Value -&gt; unit" Usage="iVector.push_back _Val" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="_Val" Type="TValue" />
      </Parameters>
      <Docs>
        <param name="_Val"><span data-ttu-id="a22cb-190">Wartość elementu do wstawienia do kontenera.</span><span class="sxs-lookup"><span data-stu-id="a22cb-190">The value of the element to insert into the container.</span></span></param>
        <summary><span data-ttu-id="a22cb-191">Dodaje nowy element na końcu kontenera.</span><span class="sxs-lookup"><span data-stu-id="a22cb-191">Adds a new element to the end of the container.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a22cb-192">Aby uzyskać więcej informacji, zobacz [vector::push_back (STL/CLR)](/cpp/dotnet/vector-stl-clr#push_back).</span><span class="sxs-lookup"><span data-stu-id="a22cb-192">For more information, see [vector::push_back (STL/CLR)](/cpp/dotnet/vector-stl-clr#push_back).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="rbegin">
      <MemberSignature Language="C#" Value="public void rbegin (ref Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator&lt;TValue&gt; );" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.void rbegin(class Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1&lt;!TValue&gt;&amp; ) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.IVector`1.rbegin(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator{`0}@)" />
      <MemberSignature Language="VB.NET" Value="Public Function rbegin (ByRef  As ReverseRandomAccessIterator(Of TValue)) As Void" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ^ rbegin(Microsoft::VisualC::StlClr::Generic::ReverseRandomAccessIterator&lt;TValue&gt; ^ % );" />
      <MemberSignature Language="F#" Value="abstract member rbegin :  -&gt; unit" Usage="iVector.rbegin " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="" Type="Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator&lt;TValue&gt;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name=""><span data-ttu-id="a22cb-193">Iterator odwrotny wyznacza wartość ostatniego elementu w kontrolowanej sekwencji lub tuż za koniec pustą sekwencją.</span><span class="sxs-lookup"><span data-stu-id="a22cb-193">A reverse iterator that designates the last element of the controlled sequence, or just beyond the beginning of an empty sequence.</span></span> <span data-ttu-id="a22cb-194">Dzięki temu wyznacza <paramref name="beginning" /> odwrotnej kolejności.</span><span class="sxs-lookup"><span data-stu-id="a22cb-194">Hence, it designates the <paramref name="beginning" /> of the reverse sequence.</span></span> <span data-ttu-id="a22cb-195">Służy do uzyskiwania iterator, który wyznacza <paramref name="current" /> początek kontrolowanej sekwencji występuje w odwrotnej kolejności, ale jej stan można zmienić, jeśli zmieni się długość kontrolowanej sekwencji.</span><span class="sxs-lookup"><span data-stu-id="a22cb-195">You use it to obtain an iterator that designates the <paramref name="current" /> beginning of the controlled sequence seen in reverse order, but its status can change if the length of the controlled sequence changes.</span></span></param>
        <summary><span data-ttu-id="a22cb-196">Określa początek kontrolowanej sekwencji odwróconej.</span><span class="sxs-lookup"><span data-stu-id="a22cb-196">Designates the beginning of the reversed controlled sequence.</span></span></summary>
        <returns><span data-ttu-id="a22cb-197">Iterator.</span><span class="sxs-lookup"><span data-stu-id="a22cb-197">An iterator.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  
 <span data-ttu-id="a22cb-198">Aby uzyskać więcej informacji, zobacz [vector::rbegin (STL/CLR)](/cpp/dotnet/vector-stl-clr#rbegin).</span><span class="sxs-lookup"><span data-stu-id="a22cb-198">For more information, see [vector::rbegin (STL/CLR)](/cpp/dotnet/vector-stl-clr#rbegin).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="rend">
      <MemberSignature Language="C#" Value="public void rend (ref Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator&lt;TValue&gt; );" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.void rend(class Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1&lt;!TValue&gt;&amp; ) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.IVector`1.rend(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator{`0}@)" />
      <MemberSignature Language="VB.NET" Value="Public Function rend (ByRef  As ReverseRandomAccessIterator(Of TValue)) As Void" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ^ rend(Microsoft::VisualC::StlClr::Generic::ReverseRandomAccessIterator&lt;TValue&gt; ^ % );" />
      <MemberSignature Language="F#" Value="abstract member rend :  -&gt; unit" Usage="iVector.rend " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="" Type="Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator&lt;TValue&gt;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name=""><span data-ttu-id="a22cb-199">Iterator odwrotny, który wskazuje tuż za koniec kontrolowanej sekwencji.</span><span class="sxs-lookup"><span data-stu-id="a22cb-199">A reverse iterator that points just beyond the beginning of the controlled sequence.</span></span> <span data-ttu-id="a22cb-200">Dzięki temu wyznacza <paramref name="end" /> odwrotnej kolejności.</span><span class="sxs-lookup"><span data-stu-id="a22cb-200">Hence, it designates the <paramref name="end" /> of the reverse sequence.</span></span> <span data-ttu-id="a22cb-201">Służy do uzyskiwania iterator, który wyznacza <paramref name="current" /> koniec kontrolowanej sekwencji występuje w odwrotnej kolejności, ale jej stan można zmienić, jeśli zmieni się długość kontrolowanej sekwencji.</span><span class="sxs-lookup"><span data-stu-id="a22cb-201">You use it to obtain an iterator that designates the <paramref name="current" /> end of the controlled sequence seen in reverse order, but its status can change if the length of the controlled sequence changes.</span></span></param>
        <summary><span data-ttu-id="a22cb-202">Określa koniec kontrolowanej sekwencji odwróconej.</span><span class="sxs-lookup"><span data-stu-id="a22cb-202">Designates the end of the reversed controlled sequence.</span></span></summary>
        <returns><span data-ttu-id="a22cb-203">Iterator.</span><span class="sxs-lookup"><span data-stu-id="a22cb-203">An iterator.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  
 <span data-ttu-id="a22cb-204">Aby uzyskać więcej informacji, zobacz [vector::rend (STL/CLR)](/cpp/dotnet/vector-stl-clr#rend).</span><span class="sxs-lookup"><span data-stu-id="a22cb-204">For more information, see [vector::rend (STL/CLR)](/cpp/dotnet/vector-stl-clr#rend).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="reserve">
      <MemberSignature Language="C#" Value="public void reserve (int _Capacity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void reserve(int32 _Capacity) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.IVector`1.reserve(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub reserve (_Capacity As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void reserve(int _Capacity);" />
      <MemberSignature Language="F#" Value="abstract member reserve : int -&gt; unit" Usage="iVector.reserve _Capacity" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="_Capacity" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="_Capacity"><span data-ttu-id="a22cb-205">Nowe pojemności minimalnej kontenera.</span><span class="sxs-lookup"><span data-stu-id="a22cb-205">The new minimum capacity of the container.</span></span></param>
        <summary><span data-ttu-id="a22cb-206">Rezerwuje pamięć w celu zapewnienia wydajności minimalnej wzrostu dla kontenera.</span><span class="sxs-lookup"><span data-stu-id="a22cb-206">Reserves storage to ensure the minimum growth capacity for the container.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a22cb-207">Aby uzyskać więcej informacji, zobacz [vector::reserve (STL/CLR)](/cpp/dotnet/vector-stl-clr#reserve).</span><span class="sxs-lookup"><span data-stu-id="a22cb-207">For more information, see [vector::reserve (STL/CLR)](/cpp/dotnet/vector-stl-clr#reserve).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="resize">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a22cb-208">Zmienia liczbę elementów, które mogą pomieścić kontenera.</span><span class="sxs-lookup"><span data-stu-id="a22cb-208">Changes the number of elements that the container can hold.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a22cb-209">Aby uzyskać więcej informacji, zobacz [vector::resize (STL/CLR)](/cpp/dotnet/vector-stl-clr#resize).</span><span class="sxs-lookup"><span data-stu-id="a22cb-209">For more information, see [vector::resize (STL/CLR)](/cpp/dotnet/vector-stl-clr#resize).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="resize">
      <MemberSignature Language="C#" Value="public void resize (int _Newsize);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void resize(int32 _Newsize) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.IVector`1.resize(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub resize (_Newsize As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void resize(int _Newsize);" />
      <MemberSignature Language="F#" Value="abstract member resize : int -&gt; unit" Usage="iVector.resize _Newsize" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="_Newsize" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="_Newsize"><span data-ttu-id="a22cb-210">Nowy rozmiar kontrolowanej sekwencji.</span><span class="sxs-lookup"><span data-stu-id="a22cb-210">The new size of the controlled sequence.</span></span></param>
        <summary><span data-ttu-id="a22cb-211">Liczba elementów w kontenerze zmieni się z określonym rozmiarem.</span><span class="sxs-lookup"><span data-stu-id="a22cb-211">Changes the number of elements in the container to the specified size.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a22cb-212">Aby uzyskać więcej informacji, zobacz [vector::resize (STL/CLR)](/cpp/dotnet/vector-stl-clr#resize).</span><span class="sxs-lookup"><span data-stu-id="a22cb-212">For more information, see [vector::resize (STL/CLR)](/cpp/dotnet/vector-stl-clr#resize).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="resize">
      <MemberSignature Language="C#" Value="public void resize (int _Newsize, TValue _Val);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void resize(int32 _Newsize, !TValue _Val) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.IVector`1.resize(System.Int32,`0)" />
      <MemberSignature Language="VB.NET" Value="Public Sub resize (_Newsize As Integer, _Val As TValue)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void resize(int _Newsize, TValue _Val);" />
      <MemberSignature Language="F#" Value="abstract member resize : int * 'Value -&gt; unit" Usage="iVector.resize (_Newsize, _Val)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="_Newsize" Type="System.Int32" />
        <Parameter Name="_Val" Type="TValue" />
      </Parameters>
      <Docs>
        <param name="_Newsize"><span data-ttu-id="a22cb-213">Nowy rozmiar kontrolowanej sekwencji.</span><span class="sxs-lookup"><span data-stu-id="a22cb-213">The new size of the controlled sequence.</span></span></param>
        <param name="_Val"><span data-ttu-id="a22cb-214">Wartość elementów do wstawienia.</span><span class="sxs-lookup"><span data-stu-id="a22cb-214">The value of the elements to insert.</span></span></param>
        <summary><span data-ttu-id="a22cb-215">Liczba elementów w kontenerze zmieni się z określonym rozmiarem.</span><span class="sxs-lookup"><span data-stu-id="a22cb-215">Changes the number of elements in the container to the specified size.</span></span> <span data-ttu-id="a22cb-216">Jeśli nowy rozmiar jest większy niż stary rozmiar, metoda dołącza elementy, które mają wartość <paramref name="_Val" />.</span><span class="sxs-lookup"><span data-stu-id="a22cb-216">If the new size is larger than the old size, the method appends elements that have value <paramref name="_Val" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a22cb-217">Aby uzyskać więcej informacji, zobacz [vector::resize (STL/CLR)](/cpp/dotnet/vector-stl-clr#resize).</span><span class="sxs-lookup"><span data-stu-id="a22cb-217">For more information, see [vector::resize (STL/CLR)](/cpp/dotnet/vector-stl-clr#resize).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="size">
      <MemberSignature Language="C#" Value="public int size ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 size() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.IVector`1.size" />
      <MemberSignature Language="VB.NET" Value="Public Function size () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int size();" />
      <MemberSignature Language="F#" Value="abstract member size : unit -&gt; int" Usage="iVector.size " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a22cb-218">Zlicza liczbę elementów w kontenerze.</span><span class="sxs-lookup"><span data-stu-id="a22cb-218">Counts the number of elements in the container.</span></span></summary>
        <returns><span data-ttu-id="a22cb-219">Długość kontrolowanej sekwencji.</span><span class="sxs-lookup"><span data-stu-id="a22cb-219">The length of the controlled sequence.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a22cb-220">Aby uzyskać więcej informacji, zobacz [vector::size (STL/CLR)](/cpp/dotnet/vector-stl-clr#size).</span><span class="sxs-lookup"><span data-stu-id="a22cb-220">For more information, see [vector::size (STL/CLR)](/cpp/dotnet/vector-stl-clr#size).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="swap">
      <MemberSignature Language="C#" Value="public void swap (Microsoft.VisualC.StlClr.IVector&lt;TValue&gt; );" FrameworkAlternate="netframework-3.5;netframework-4.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void swap(class Microsoft.VisualC.StlClr.IVector`1&lt;!TValue&gt; ) cil managed" FrameworkAlternate="netframework-3.5;netframework-4.0" />
      <MemberSignature Language="VB.NET" Value="Public Sub swap ( As IVector(Of TValue))" FrameworkAlternate="netframework-3.5;netframework-4.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void swap(Microsoft::VisualC::StlClr::IVector&lt;TValue&gt; ^ );" FrameworkAlternate="netframework-3.5;netframework-4.0" />
      <MemberSignature Language="C#" Value="public void swap (Microsoft.VisualC.StlClr.IVector&lt;TValue&gt; A_0);" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void swap(class Microsoft.VisualC.StlClr.IVector`1&lt;!TValue&gt; A_0) cil managed" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.IVector`1.swap(Microsoft.VisualC.StlClr.IVector{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Sub swap (A_0 As IVector(Of TValue))" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void swap(Microsoft::VisualC::StlClr::IVector&lt;TValue&gt; ^ A_0);" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="F#" Value="abstract member swap : Microsoft.VisualC.StlClr.IVector&lt;'Value&gt; -&gt; unit" Usage="iVector.swap A_0" FrameworkAlternate="netframework-4.5;netframework-3.5;netframework-4.0;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="" Type="Microsoft.VisualC.StlClr.IVector&lt;TValue&gt;" Index="0" FrameworkAlternate="netframework-3.5;netframework-4.0" />
        <Parameter Name="A_0" Type="Microsoft.VisualC.StlClr.IVector&lt;TValue&gt;" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="A_0"><span data-ttu-id="a22cb-221">Kontener za pomocą którego można zamienić zawartość.</span><span class="sxs-lookup"><span data-stu-id="a22cb-221">The container with which to swap contents.</span></span></param>
        <param name=""><span data-ttu-id="a22cb-222">Kontener za pomocą którego można zamienić zawartość.</span><span class="sxs-lookup"><span data-stu-id="a22cb-222">The container with which to swap contents.</span></span></param>
        <summary><span data-ttu-id="a22cb-223">Zamienia zawartości dwóch kontenerów.</span><span class="sxs-lookup"><span data-stu-id="a22cb-223">Swaps the contents of two containers.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  
 <span data-ttu-id="a22cb-224">Aby uzyskać więcej informacji, zobacz [vector::swap (STL/CLR)](/cpp/dotnet/vector-stl-clr#swap).</span><span class="sxs-lookup"><span data-stu-id="a22cb-224">For more information, see [vector::swap (STL/CLR)](/cpp/dotnet/vector-stl-clr#swap).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>