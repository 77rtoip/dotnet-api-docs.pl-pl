<Type Name="ImageAttributes" FullName="System.Drawing.Imaging.ImageAttributes">
  <Metadata><Meta Name="ms.openlocfilehash" Value="6cae4b75f1fb82a2df917bd1765a32cfac0e874b" /><Meta Name="ms.sourcegitcommit" Value="220917117f9d774aaa482439aa7324e39dc1f5b6" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="02/25/2019" /><Meta Name="ms.locfileid" Value="56791592" /></Metadata><TypeSignature Language="C#" Value="public sealed class ImageAttributes : ICloneable, IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi sealed beforefieldinit ImageAttributes extends System.Object implements class System.ICloneable, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Drawing.Imaging.ImageAttributes" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ImageAttributes&#xA;Implements ICloneable, IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class ImageAttributes sealed : ICloneable, IDisposable" />
  <TypeSignature Language="F#" Value="type ImageAttributes = class&#xA;    interface ICloneable&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Drawing</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Drawing.Common</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.1</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Zawiera informacje dotyczące sposobu kolorów mapy bitowej i metaplik są zmieniane podczas renderowania.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Drawing.Imaging.ImageAttributes> Obiekt zachowuje kilka ustawień dopasowanie koloru, w tym macierze dopasowanie koloru, macierzy dostosowanie skali szarości, korekcja gamma wartości, tabele kolorów mapy i wartości progowe kolorów. Podczas renderowania, kolory mogą być poprawione, przyciemniony, rozjaśniony i usunięte. Aby zastosować takie operacje, zainicjować <xref:System.Drawing.Imaging.ImageAttributes> obiektu i przekaż ścieżkę, która <xref:System.Drawing.Imaging.ImageAttributes> obiektu (wraz ze ścieżki <xref:System.Drawing.Image>) do <xref:System.Drawing.Graphics.DrawImage%2A> metody.  
  
   
  
## Examples  
 Poniższy przykład pobiera obraz, który jest w jednym kolorze (0.2 0.0, 0,4, 1.0), a wartości podwójnej precyzji składnik czerwony dodaje 0.2 dla składników czerwonego, zielonego i niebieskiego  
  
 Poniższa ilustracja pokazuje oryginalny obraz po lewej stronie i przekształcone obraz po prawej stronie.  
  
 ![Kolory](~/add/media/colortrans1.png "kolorów")  
  
 Kod w poniższym przykładzie używa następujące kroki, aby wykonać ponowne kolorowanie:  
  
1.  Inicjowanie <xref:System.Drawing.Imaging.ColorMatrix> obiektu.  
  
2.  Tworzenie <xref:System.Drawing.Imaging.ImageAttributes> i przekazać <xref:System.Drawing.Imaging.ColorMatrix> obiekt <xref:System.Drawing.Imaging.ImageAttributes.SetColorMatrix%2A> metody <xref:System.Drawing.Imaging.ImageAttributes> obiektu.  
  
3.  Przekaż <xref:System.Drawing.Imaging.ImageAttributes> obiekt <xref:System.Drawing.Graphics.DrawImage%2A> metody <xref:System.Drawing.Graphics> obiektu.  
  
 [!code-csharp[System.Drawing.RecoloringImages#21](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.RecoloringImages/CS/Class1.cs#21)]
 [!code-vb[System.Drawing.RecoloringImages#21](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.RecoloringImages/VB/Class1.vb#21)]  
  
 ]]></format>
    </remarks>
    <related type="Article" href="https://msdn.microsoft.com/library/44df4556-a433-49c0-ac0f-9a12063a5860">Instrukcje: Stosowanie macierzy kolorów do przekształcenia pojedynczego koloru</related>
    <related type="Article" href="https://msdn.microsoft.com/library/f28c54fd-9c80-4f6f-b242-55f7ffcda84b">Ponowne kolorowanie obrazów</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ImageAttributes ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ImageAttributes();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Drawing.Imaging.ImageAttributes" /> klasy.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearBrushRemapTable">
      <MemberSignature Language="C#" Value="public void ClearBrushRemapTable ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ClearBrushRemapTable() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.ClearBrushRemapTable" />
      <MemberSignature Language="VB.NET" Value="Public Sub ClearBrushRemapTable ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ClearBrushRemapTable();" />
      <MemberSignature Language="F#" Value="member this.ClearBrushRemapTable : unit -&gt; unit" Usage="imageAttributes.ClearBrushRemapTable " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Czyści pędzla tabeli ponownego mapowania kolorów to <see cref="T:System.Drawing.Imaging.ImageAttributes" /> obiektu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Drawing.Imaging.ImageAttributes> Obiekt zachowuje kolorowych i szarych ustawienia na pięć kategorii dopasowania: domyślny, mapy bitowej, pędzla, pióra i tekst. Na przykład można określić jednej tabeli ponownego mapowania kolorów dla kategorii domyślne tabelę ponowne mapowanie innego koloru dla kategorii mapy bitowej i nadal tabelę ponowne mapowanie innego koloru dla kategorii pędzla.  
  
 Domyślne ustawienia dopasowanie koloru i dostosowanie skali szarości dotyczą wszystkie kategorie, które nie mają ustawień dopasowania we własnym. Na przykład jeśli nigdy nie określono żadnych ustawień dopasowania dla kategorii pędzla, domyślne ustawienia dotyczą kategorii pędzla.  
  
 Jak najszybciej po określeniu dopasowanie koloru lub ustawienie skali szarości dopasowania dla określonej kategorii, domyślne ustawienia dostosowania przestaną obowiązywać do tej kategorii. Na przykład, załóżmy, że należy określić tabelę ponowne mapowanie domyślnej, która konwertuje czerwony, zielony, a następnie określić wartość domyślną gamma 1.8. Jeśli wywołasz <xref:System.Drawing.Imaging.ImageAttributes.SetBrushRemapTable%2A> metodę, tabeli ponownego mapowania domyślne (kolor na czerwony, zielony) i wartość domyślna gamma (1.8) nie dotyczą Pędzle. Jeśli później wywołanie <xref:System.Drawing.Imaging.ImageAttributes.ClearBrushRemapTable%2A> metody kategorii pędzel nie zostaną przywrócone do tabeli ponownego mapowania domyślny; zamiast kategorii pędzla będzie miał nie tabeli ponownego mapowania. Podobnie kategoria pędzel nie przywróci domyślną wartość gamma; zamiast kategorii pędzla mają żadnej wartości gamma.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ClearColorKey">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Czyści klucz kolorów (zakres przezroczystości).</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ClearColorKey">
      <MemberSignature Language="C#" Value="public void ClearColorKey ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ClearColorKey() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.ClearColorKey" />
      <MemberSignature Language="VB.NET" Value="Public Sub ClearColorKey ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ClearColorKey();" />
      <MemberSignature Language="F#" Value="member this.ClearColorKey : unit -&gt; unit" Usage="imageAttributes.ClearColorKey " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Czyści klucz kolorów (zakres przezroczystości) dla kategorii domyślne.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Drawing.Imaging.ImageAttributes> Obiekt zachowuje kolorowych i szarych ustawienia na pięć kategorii dopasowania: domyślny, mapy bitowej, pędzla, pióra i tekst. Na przykład można określić jeden klucz kolorów dla kategorii domyślny klucz innego koloru dla kategorii mapy bitowej i nadal klucz innego koloru dla kategorii pióra.  
  
 Domyślne ustawienia dopasowanie koloru i dostosowanie skali szarości dotyczą wszystkie kategorie, które nie mają ustawień dopasowania we własnym. Na przykład jeśli nigdy nie określono żadnych ustawień dopasowania dla kategorii pióra, domyślne ustawienia dotyczą kategorii pióra.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearColorKey">
      <MemberSignature Language="C#" Value="public void ClearColorKey (System.Drawing.Imaging.ColorAdjustType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ClearColorKey(valuetype System.Drawing.Imaging.ColorAdjustType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.ClearColorKey(System.Drawing.Imaging.ColorAdjustType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ClearColorKey (type As ColorAdjustType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ClearColorKey(System::Drawing::Imaging::ColorAdjustType type);" />
      <MemberSignature Language="F#" Value="member this.ClearColorKey : System.Drawing.Imaging.ColorAdjustType -&gt; unit" Usage="imageAttributes.ClearColorKey type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Drawing.Imaging.ColorAdjustType" />
      </Parameters>
      <Docs>
        <param name="type">Element <see cref="T:System.Drawing.Imaging.ColorAdjustType" /> określający Kategoria, dla którego klucza kolorów jest wyczyszczone.</param>
        <summary>Czyści klucz kolorów (zakres przezroczystości) dla określonej kategorii.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Drawing.Imaging.ImageAttributes> Obiekt zachowuje kolorowych i szarych ustawienia na pięć kategorii dopasowania: domyślny, mapy bitowej, pędzla, pióra i tekst. Na przykład można określić jeden klucz kolorów dla kategorii domyślny klucz innego koloru dla kategorii mapy bitowej i nadal klucz innego koloru dla kategorii pióra.  
  
 Domyślne ustawienia dopasowanie koloru i dostosowanie skali szarości dotyczą wszystkie kategorie, które nie mają ustawień dopasowania we własnym. Na przykład jeśli nigdy nie określono żadnych ustawień dopasowania dla kategorii pióra, domyślne ustawienia dotyczą kategorii pióra.  
  
 Jak najszybciej po określeniu dopasowanie koloru lub ustawienie skali szarości dopasowania dla określonej kategorii, domyślne ustawienia dostosowania przestaną obowiązywać do tej kategorii. Załóżmy na przykład, określ domyślny klucz kolor, który sprawia, że dowolny kolor czerwony składnika z 200 do 255 przezroczyste i określić wartość domyślną gamma 1.8. Jeśli ustawić klucz kolor kategorii pióra przez wywołanie metody <xref:System.Drawing.Imaging.ImageAttributes.SetColorKey%2A> metodę, domyślny kolor klucz i wartość domyślna gamma nie będą stosowane do pióra. Jeśli wyczyścisz później klucz koloru pióra przez wywołanie metody <xref:System.Drawing.Imaging.ImageAttributes.ClearColorKey%2A> metody kategorii pióro nie zostaną przywrócone do domyślnego klucza kolor; zamiast kategorii pióra będzie mieć żadnego klucza kolorów. Podobnie kategoria pióro nie przywróci domyślną wartość gamma; zamiast kategorii pióra mają żadnej wartości gamma.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ClearColorMatrix">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Czyści macierzy dopasowanie koloru.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ClearColorMatrix">
      <MemberSignature Language="C#" Value="public void ClearColorMatrix ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ClearColorMatrix() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.ClearColorMatrix" />
      <MemberSignature Language="VB.NET" Value="Public Sub ClearColorMatrix ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ClearColorMatrix();" />
      <MemberSignature Language="F#" Value="member this.ClearColorMatrix : unit -&gt; unit" Usage="imageAttributes.ClearColorMatrix " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Czyści macierzy dopasowanie koloru dla kategorii domyślne.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Drawing.Imaging.ImageAttributes> Obiekt zachowuje kolorowych i szarych ustawienia na pięć kategorii dopasowania: domyślny, mapy bitowej, pędzla, pióra i tekst. Na przykład można określić macierzy dopasowanie koloru dla kategorii domyślne macierzy różnych dopasowanie koloru dla kategorii mapy bitowej i nadal macierzy różnych dopasowanie koloru pióra kategorii.  
  
 Domyślne ustawienia dopasowanie koloru i dostosowanie skali szarości dotyczą wszystkie kategorie, które nie mają ustawień dopasowania we własnym. Na przykład jeśli nigdy nie określono żadnych ustawień dopasowania dla kategorii pióra, następnie domyślne ustawienia dotyczą kategorii pióra.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearColorMatrix">
      <MemberSignature Language="C#" Value="public void ClearColorMatrix (System.Drawing.Imaging.ColorAdjustType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ClearColorMatrix(valuetype System.Drawing.Imaging.ColorAdjustType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.ClearColorMatrix(System.Drawing.Imaging.ColorAdjustType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ClearColorMatrix (type As ColorAdjustType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ClearColorMatrix(System::Drawing::Imaging::ColorAdjustType type);" />
      <MemberSignature Language="F#" Value="member this.ClearColorMatrix : System.Drawing.Imaging.ColorAdjustType -&gt; unit" Usage="imageAttributes.ClearColorMatrix type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Drawing.Imaging.ColorAdjustType" />
      </Parameters>
      <Docs>
        <param name="type">Element <see cref="T:System.Drawing.Imaging.ColorAdjustType" /> określający Kategoria, dla którego zostanie wyczyszczona macierzy dopasowanie koloru.</param>
        <summary>Czyści macierzy dopasowanie koloru dla określonej kategorii.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Drawing.Imaging.ImageAttributes> Obiekt zachowuje kolorowych i szarych ustawienia na pięć kategorii dopasowania: domyślny, mapy bitowej, pędzla, pióra i tekst. Na przykład można określić macierzy dopasowanie koloru dla kategorii domyślne macierzy różnych dopasowanie koloru dla kategorii mapy bitowej i nadal macierzy różnych dopasowanie koloru pióra kategorii.  
  
 Domyślne ustawienia dopasowanie koloru i dostosowanie skali szarości dotyczą wszystkie kategorie, które nie mają ustawień dopasowania we własnym. Na przykład jeśli nigdy nie określono żadnych ustawień dopasowania dla kategorii pióra, następnie domyślne ustawienia dotyczą kategorii pióra.  
  
 Jak najszybciej po określeniu dopasowanie koloru lub ustawienie skali szarości dopasowania dla określonej kategorii, domyślne ustawienia dostosowania przestaną obowiązywać do tej kategorii. Na przykład załóżmy, że należy określić macierzy dopasowanie koloru i wartości gamma Kategoria domyślna. Jeśli ustawisz macierzy dopasowanie koloru dla kategorii pióra przez wywołanie metody <xref:System.Drawing.Imaging.ImageAttributes.SetColorMatrix%2A> metody macierzy dopasowanie koloru domyślne nie zostanie zastosowany pióra. Jeśli później wyczyść macierzy dopasowanie koloru pióra przez wywołanie metody <xref:System.Drawing.Imaging.ImageAttributes.ClearColorMatrix%2A> metody kategorii pióro nie zostaną przywrócone do macierzy dostosowanie domyślnego; zamiast kategorii pióra będzie mieć żadnej macierzy dopasowania. Podobnie kategoria pióro nie przywróci domyślną wartość gamma; zamiast kategorii pióra mają żadnej wartości gamma.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ClearGamma">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Wyłącza korekcji gamma.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ClearGamma">
      <MemberSignature Language="C#" Value="public void ClearGamma ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ClearGamma() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.ClearGamma" />
      <MemberSignature Language="VB.NET" Value="Public Sub ClearGamma ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ClearGamma();" />
      <MemberSignature Language="F#" Value="member this.ClearGamma : unit -&gt; unit" Usage="imageAttributes.ClearGamma " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Wyłącza korekcji gamma domyślnej kategorii.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Drawing.Imaging.ImageAttributes> Obiekt zachowuje kolorowych i szarych ustawienia na pięć kategorii dopasowania: domyślny, mapy bitowej, pędzla, pióra i tekst. Na przykład można określić wartość gamma Kategoria domyślna wartość gamma różnych kategorii mapy bitowej i nadal wartość gamma różnych kategorii pióra.  
  
 Domyślne ustawienia dopasowanie koloru i dostosowanie skali szarości dotyczą wszystkie kategorie, które nie mają ustawień dopasowania we własnym. Na przykład jeśli nigdy nie określono żadnych ustawień dopasowania dla kategorii pióra, domyślne ustawienia dotyczą kategorii pióra.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearGamma">
      <MemberSignature Language="C#" Value="public void ClearGamma (System.Drawing.Imaging.ColorAdjustType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ClearGamma(valuetype System.Drawing.Imaging.ColorAdjustType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.ClearGamma(System.Drawing.Imaging.ColorAdjustType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ClearGamma (type As ColorAdjustType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ClearGamma(System::Drawing::Imaging::ColorAdjustType type);" />
      <MemberSignature Language="F#" Value="member this.ClearGamma : System.Drawing.Imaging.ColorAdjustType -&gt; unit" Usage="imageAttributes.ClearGamma type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Drawing.Imaging.ColorAdjustType" />
      </Parameters>
      <Docs>
        <param name="type">Element <see cref="T:System.Drawing.Imaging.ColorAdjustType" /> określający Kategoria, dla których gamma korekcji jest wyłączona.</param>
        <summary>Wyłącza korekcji gamma do określonej kategorii.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Drawing.Imaging.ImageAttributes> Obiekt zachowuje kolorowych i szarych ustawienia na pięć kategorii dopasowania: domyślny, mapy bitowej, pędzla, pióra i tekst. Na przykład można określić wartość gamma Kategoria domyślna wartość gamma różnych kategorii mapy bitowej i nadal wartość gamma różnych kategorii pióra.  
  
 Domyślne ustawienia dopasowanie koloru i dostosowanie skali szarości dotyczą wszystkie kategorie, które nie mają ustawień dopasowania we własnym. Na przykład jeśli nigdy nie określono żadnych ustawień dopasowania dla kategorii pióra, następnie domyślne ustawienia dotyczą kategorii pióra.  
  
 Jak najszybciej po określeniu dopasowanie koloru lub ustawienie skali szarości dopasowania dla określonej kategorii, domyślne ustawienia dostosowania przestaną obowiązywać do tej kategorii. Na przykład załóżmy, że należy określić wartość gamma i macierzy dopasowanie koloru dla kategorii domyślne. Jeśli wartość zostanie ustawiona na gamma dla kategorii pióra przez wywołanie metody <xref:System.Drawing.Imaging.ImageAttributes.SetGamma%2A> metody, wartością domyślną gamma nie dotyczy pióra. Jeśli później wyczyszczenie tej wartości gamma pióra przez wywołanie metody <xref:System.Drawing.Imaging.ImageAttributes.ClearGamma%2A> metody kategorii pióro nie zostaną przywrócone do wartości domyślnej, gamma; zamiast kategorii pióra będzie mieć żadnej wartości gamma. Podobnie kategoria pióro nie zostaną przywrócone do macierzy dopasowania Kolor domyślny; zamiast kategorii pióra będzie mieć żadnej macierzy dopasowanie koloru.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ClearNoOp">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Czyści <see langword="NoOp" /> ustawienie.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ClearNoOp">
      <MemberSignature Language="C#" Value="public void ClearNoOp ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ClearNoOp() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.ClearNoOp" />
      <MemberSignature Language="VB.NET" Value="Public Sub ClearNoOp ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ClearNoOp();" />
      <MemberSignature Language="F#" Value="member this.ClearNoOp : unit -&gt; unit" Usage="imageAttributes.ClearNoOp " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Czyści <see langword="NoOp" /> ustawienie domyślnej kategorii.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Drawing.Imaging.ImageAttributes> Obiekt zachowuje kolorowych i szarych ustawienia na pięć kategorii dopasowania: domyślny, mapy bitowej, pędzla, pióra i tekst. Na przykład można określić wartość gamma Kategoria domyślna wartość gamma różnych kategorii mapy bitowej i nadal wartość gamma różnych kategorii pióra.  
  
 Dopasowanie koloru dla kategorii domyślne można wyłączyć przez wywołanie metody <xref:System.Drawing.Imaging.ImageAttributes.SetNoOp%2A> metody. Później można przywrócić dopasowanie koloru dla kategorii domyślne przez wywołanie metody <xref:System.Drawing.Imaging.ImageAttributes.ClearNoOp%2A> metody. Dopasowanie koloru następnie powraca do jaki był w miejscu przed wywołaniem do <xref:System.Drawing.Imaging.ImageAttributes.SetNoOp%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearNoOp">
      <MemberSignature Language="C#" Value="public void ClearNoOp (System.Drawing.Imaging.ColorAdjustType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ClearNoOp(valuetype System.Drawing.Imaging.ColorAdjustType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.ClearNoOp(System.Drawing.Imaging.ColorAdjustType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ClearNoOp (type As ColorAdjustType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ClearNoOp(System::Drawing::Imaging::ColorAdjustType type);" />
      <MemberSignature Language="F#" Value="member this.ClearNoOp : System.Drawing.Imaging.ColorAdjustType -&gt; unit" Usage="imageAttributes.ClearNoOp type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Drawing.Imaging.ColorAdjustType" />
      </Parameters>
      <Docs>
        <param name="type">Element <see cref="T:System.Drawing.Imaging.ColorAdjustType" /> określający Kategoria, dla którego <see langword="NoOp" /> ustawienie zostanie wyczyszczona.</param>
        <summary>Czyści <see langword="NoOp" /> ustawienia dla określonej kategorii.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Drawing.Imaging.ImageAttributes> Obiekt zachowuje kolorowych i szarych ustawienia na pięć kategorii dopasowania: domyślny, mapy bitowej, pędzla, pióra i tekst. Na przykład można określić wartość gamma Kategoria domyślna wartość gamma różnych kategorii mapy bitowej i nadal wartość gamma różnych kategorii pióra.  
  
 Możesz wyłączyć dopasowanie koloru dla określonej kategorii, wywołując <xref:System.Drawing.Imaging.ImageAttributes.SetNoOp%2A> metody. Później można przywrócić dopasowanie koloru dla tej kategorii, wywołując <xref:System.Drawing.Imaging.ImageAttributes.ClearNoOp%2A> metody. Dopasowanie koloru następnie powraca do jaki był w miejscu przed wywołaniem do <xref:System.Drawing.Imaging.ImageAttributes.SetNoOp%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ClearOutputChannel">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Czyści ustawienia kanału CMYK danych wyjściowych (błękitny amarantowy żółty czarny).</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ClearOutputChannel">
      <MemberSignature Language="C#" Value="public void ClearOutputChannel ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ClearOutputChannel() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.ClearOutputChannel" />
      <MemberSignature Language="VB.NET" Value="Public Sub ClearOutputChannel ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ClearOutputChannel();" />
      <MemberSignature Language="F#" Value="member this.ClearOutputChannel : unit -&gt; unit" Usage="imageAttributes.ClearOutputChannel " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Czyści ustawienia kanału danych wyjściowych (błękitny amarantowy żółty czarny) CMYK dla kategorii domyślne.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Drawing.Imaging.ImageAttributes> Obiekt zachowuje kolorowych i szarych ustawienia na pięć kategorii dopasowania: domyślny, mapy bitowej, pędzla, pióra i tekst. Na przykład można określić kanału dla kategorii domyślne i kanału danych wyjściowych inne niż dla kategorii mapy bitowej.  
  
 Domyślne ustawienia dopasowanie koloru i dostosowanie skali szarości dotyczą wszystkie kategorie, które nie mają ustawień dopasowania we własnym. Na przykład jeśli nigdy nie określono żadnych ustawień dopasowania dla kategorii mapy bitowej, domyślne ustawienia dotyczą kategorii mapy bitowej.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearOutputChannel">
      <MemberSignature Language="C#" Value="public void ClearOutputChannel (System.Drawing.Imaging.ColorAdjustType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ClearOutputChannel(valuetype System.Drawing.Imaging.ColorAdjustType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.ClearOutputChannel(System.Drawing.Imaging.ColorAdjustType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ClearOutputChannel (type As ColorAdjustType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ClearOutputChannel(System::Drawing::Imaging::ColorAdjustType type);" />
      <MemberSignature Language="F#" Value="member this.ClearOutputChannel : System.Drawing.Imaging.ColorAdjustType -&gt; unit" Usage="imageAttributes.ClearOutputChannel type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Drawing.Imaging.ColorAdjustType" />
      </Parameters>
      <Docs>
        <param name="type">Element <see cref="T:System.Drawing.Imaging.ColorAdjustType" /> określający Kategoria, dla którego ustawienia kanału danych wyjściowych jest wyczyszczone.</param>
        <summary>Czyści ustawienia kanału danych wyjściowych (błękitny amarantowy żółty czarny) dla określonej kategorii.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Drawing.Imaging.ImageAttributes> Obiekt zachowuje kolorowych i szarych ustawienia na pięć kategorii dopasowania: domyślny, mapy bitowej, pędzla, pióra i tekst. Na przykład można określić kanału dla kategorii domyślne i kanału danych wyjściowych inne niż dla kategorii mapy bitowej.  
  
 Domyślne ustawienia dopasowanie koloru i dostosowanie skali szarości dotyczą wszystkie kategorie, które nie mają ustawień dopasowania we własnym. Na przykład jeśli nigdy nie określono żadnych ustawień dopasowania dla kategorii mapy bitowej, domyślne ustawienia dotyczą kategorii mapy bitowej.  
  
 Jak najszybciej po określeniu dopasowanie koloru lub ustawienie skali szarości dopasowania dla określonej kategorii, domyślne ustawienia dostosowania przestaną obowiązywać do tej kategorii. Na przykład załóżmy, że można określić kanału i macierzy dopasowania dla domyślnej kategorii. Jeśli ustawisz kanału danych wyjściowych dla kategorii mapy bitowej, wywołując <xref:System.Drawing.Imaging.ImageAttributes.SetOutputChannel%2A> metody, wartość domyślna kanału danych wyjściowych nie będą stosowane do mapy bitowej. Jeśli później usuniesz zaznaczenie mapy bitowej kanału danych wyjściowych przez wywołanie metody <xref:System.Drawing.Imaging.ImageAttributes.ClearOutputChannel%2A> metody kategorii mapa bitowa nie zostaną przywrócone do domyślnego kanału danych wyjściowych; zamiast kategorii mapy bitowej będzie miał nie ustawienia kanału danych wyjściowych. Podobnie kategoria mapa bitowa nie zostaną przywrócone do macierzy dopasowania Kolor domyślny; zamiast kategorii mapy bitowej będzie mieć żadnej macierzy dopasowanie koloru.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ClearOutputChannelColorProfile">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Usuwa ustawienie profilu kolorów kanału danych wyjściowych.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ClearOutputChannelColorProfile">
      <MemberSignature Language="C#" Value="public void ClearOutputChannelColorProfile ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ClearOutputChannelColorProfile() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.ClearOutputChannelColorProfile" />
      <MemberSignature Language="VB.NET" Value="Public Sub ClearOutputChannelColorProfile ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ClearOutputChannelColorProfile();" />
      <MemberSignature Language="F#" Value="member this.ClearOutputChannelColorProfile : unit -&gt; unit" Usage="imageAttributes.ClearOutputChannelColorProfile " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Czyści dane wyjściowe kanału koloru profilu ustawienie domyślnej kategorii.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Drawing.Imaging.ImageAttributes> Obiekt zachowuje kolorowych i szarych ustawienia na pięć kategorii dopasowania: domyślny, mapy bitowej, pędzla, pióra i tekst. Na przykład można określić profil kanału danych wyjściowych inne niż dla kategorii mapy bitowej, jak i profilu kanału danych wyjściowych dla kategorii domyślne.  
  
 Domyślne ustawienia dopasowanie koloru i dostosowanie skali szarości dotyczą wszystkie kategorie, które nie mają ustawień dopasowania we własnym. Na przykład jeśli nigdy nie określono żadnych ustawień dopasowania dla kategorii mapy bitowej, domyślne ustawienia dotyczą kategorii mapy bitowej.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearOutputChannelColorProfile">
      <MemberSignature Language="C#" Value="public void ClearOutputChannelColorProfile (System.Drawing.Imaging.ColorAdjustType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ClearOutputChannelColorProfile(valuetype System.Drawing.Imaging.ColorAdjustType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.ClearOutputChannelColorProfile(System.Drawing.Imaging.ColorAdjustType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ClearOutputChannelColorProfile (type As ColorAdjustType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ClearOutputChannelColorProfile(System::Drawing::Imaging::ColorAdjustType type);" />
      <MemberSignature Language="F#" Value="member this.ClearOutputChannelColorProfile : System.Drawing.Imaging.ColorAdjustType -&gt; unit" Usage="imageAttributes.ClearOutputChannelColorProfile type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Drawing.Imaging.ColorAdjustType" />
      </Parameters>
      <Docs>
        <param name="type">Element <see cref="T:System.Drawing.Imaging.ColorAdjustType" /> określający Kategoria, dla którego ustawienia profilu kanału danych wyjściowych jest wyczyszczone.</param>
        <summary>Czyści ustawienia danych wyjściowych kanału koloru profilu dla określonej kategorii.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Drawing.Imaging.ImageAttributes> Obiekt zachowuje kolorowych i szarych ustawienia na pięć kategorii dopasowania: domyślny, mapy bitowej, pędzla, pióra i tekst. Na przykład można określić profil kanału danych wyjściowych inne niż dla kategorii mapy bitowej, jak i profilu kanału danych wyjściowych dla kategorii domyślne.  
  
 Domyślne ustawienia dopasowanie koloru i dostosowanie skali szarości dotyczą wszystkie kategorie, które nie mają ustawień dopasowania we własnym. Na przykład jeśli nigdy nie określono żadnych ustawień dopasowania dla kategorii mapy bitowej, domyślne ustawienia dotyczą kategorii mapy bitowej.  
  
 Jak najszybciej po określeniu dopasowanie koloru lub ustawienie skali szarości dopasowania dla określonej kategorii, domyślne ustawienia dostosowania przestaną obowiązywać do tej kategorii. Na przykład załóżmy, że należy określić profil kanału danych wyjściowych i macierzy dopasowania dla domyślnej kategorii. Jeśli ustawisz profilu kanału danych wyjściowych dla kategorii mapy bitowej, wywołując <xref:System.Drawing.Imaging.ImageAttributes.SetOutputChannelColorProfile%2A> metody, wartość domyślna profilu kanału danych wyjściowych nie będą stosowane do mapy bitowej. Jeśli później usuniesz zaznaczenie mapy bitowej profil channel wyjściowych przez wywołanie metody <xref:System.Drawing.Imaging.ImageAttributes.ClearOutputChannelColorProfile%2A> metody kategorii mapa bitowa nie zostaną przywrócone do domyślnego profilu kanału danych wyjściowych; zamiast kategorii mapy bitowej będzie miał nie ustawienia profilu kanału danych wyjściowych. Podobnie kategoria mapa bitowa nie zostaną przywrócone do macierzy dopasowania Kolor domyślny; zamiast kategorii mapy bitowej będzie mieć żadnej macierzy dopasowanie koloru.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ClearRemapTable">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Czyści tabeli ponownego mapowania kolorów.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ClearRemapTable">
      <MemberSignature Language="C#" Value="public void ClearRemapTable ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ClearRemapTable() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.ClearRemapTable" />
      <MemberSignature Language="VB.NET" Value="Public Sub ClearRemapTable ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ClearRemapTable();" />
      <MemberSignature Language="F#" Value="member this.ClearRemapTable : unit -&gt; unit" Usage="imageAttributes.ClearRemapTable " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Czyści tabeli ponownego mapowania kolorów dla kategorii domyślne.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Drawing.Imaging.ImageAttributes> Obiekt zachowuje kolorowych i szarych ustawienia na pięć kategorii dopasowania: domyślny, mapy bitowej, pędzla, pióra i tekst. Na przykład można określić tabeli ponownego mapowania dla kategorii domyślne tabeli ponownego mapowania różnych kategorii mapy bitowej i nadal tabeli ponownego mapowania różnych kategorii pióra.  
  
 Domyślne ustawienia dopasowanie koloru i dostosowanie skali szarości dotyczą wszystkie kategorie, które nie mają ustawień dopasowania we własnym. Na przykład jeśli nigdy nie określono żadnych ustawień dopasowania dla kategorii pióra, domyślne ustawienia dotyczą kategorii pióra.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearRemapTable">
      <MemberSignature Language="C#" Value="public void ClearRemapTable (System.Drawing.Imaging.ColorAdjustType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ClearRemapTable(valuetype System.Drawing.Imaging.ColorAdjustType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.ClearRemapTable(System.Drawing.Imaging.ColorAdjustType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ClearRemapTable (type As ColorAdjustType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ClearRemapTable(System::Drawing::Imaging::ColorAdjustType type);" />
      <MemberSignature Language="F#" Value="member this.ClearRemapTable : System.Drawing.Imaging.ColorAdjustType -&gt; unit" Usage="imageAttributes.ClearRemapTable type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Drawing.Imaging.ColorAdjustType" />
      </Parameters>
      <Docs>
        <param name="type">Element <see cref="T:System.Drawing.Imaging.ColorAdjustType" /> określający Kategoria, dla którego zostanie wyczyszczona tabeli ponownego mapowania.</param>
        <summary>Czyści tabeli ponownego mapowania kolorów dla określonej kategorii.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Drawing.Imaging.ImageAttributes> Obiekt zachowuje kolorowych i szarych ustawienia na pięć kategorii dopasowania: domyślny, mapy bitowej, pędzla, pióra i tekst. Na przykład można określić tabeli ponownego mapowania dla kategorii domyślne tabeli ponownego mapowania różnych kategorii mapy bitowej i nadal tabeli ponownego mapowania różnych kategorii pióra.  
  
 Domyślne ustawienia dopasowanie koloru i dostosowanie skali szarości dotyczą wszystkie kategorie, które nie mają ustawień dopasowania we własnym. Na przykład jeśli nigdy nie określono żadnych ustawień dopasowania dla kategorii pióra, następnie domyślne ustawienia dotyczą kategorii pióra.  
  
 Jak najszybciej po określeniu dopasowanie koloru lub ustawienie skali szarości dopasowania dla określonej kategorii, domyślne ustawienia dostosowania przestaną obowiązywać do tej kategorii. Na przykład załóżmy, że można określić tabeli ponownego mapowania i wartości gamma domyślnej kategorii. Jeśli ustawisz tabeli ponownego mapowania dla kategorii pióra przez wywołanie metody <xref:System.Drawing.Imaging.ImageAttributes.SetRemapTable%2A> metody tabeli ponownego mapowania domyślne nie zostanie zastosowany pióra. Jeśli później wyczyścić tabeli ponownego mapowania pióra przez wywołanie metody <xref:System.Drawing.Imaging.ImageAttributes.ClearRemapTable%2A> metody kategorii pióro nie zostaną przywrócone do tabeli ponownego mapowania domyślny; zamiast kategorii pióra będzie miał nie tabeli ponownego mapowania. Podobnie kategoria pióro nie przywróci domyślną wartość gamma; zamiast kategorii pióra mają żadnej wartości gamma.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ClearThreshold">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Czyści wartość progową.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ClearThreshold">
      <MemberSignature Language="C#" Value="public void ClearThreshold ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ClearThreshold() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.ClearThreshold" />
      <MemberSignature Language="VB.NET" Value="Public Sub ClearThreshold ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ClearThreshold();" />
      <MemberSignature Language="F#" Value="member this.ClearThreshold : unit -&gt; unit" Usage="imageAttributes.ClearThreshold " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Czyści wartość progowa dla kategorii domyślne.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Próg wynosi wartość z zakresu od 0 do 1, która określa punkt odcięcia dla każdego składnika koloru. Na przykład załóżmy, że ustawiono wartość progową 0,7 i Załóżmy, że kolor są renderowanie którego czerwony, zielony i niebieski składniki są 230, 50 i 220, odpowiednio. Składnik czerwony (230) jest większa niż 0.7x255, dzięki czemu składnik czerwony zostaną zmienione na wartość 255 (pełnej intensywności). Składnik zielony (50), jest mniejsza niż 0.7x255, więc składnik zielony zostanie zmieniony na 0. Składnik niebieski (220) jest większa niż 0.7x255, dzięki czemu składnik niebieski zostaną zmienione na wartość 255.  
  
 <xref:System.Drawing.Imaging.ImageAttributes> Obiekt zachowuje kolorowych i szarych ustawienia na pięć kategorii dopasowania: domyślny, mapy bitowej, pędzla, pióra i tekst. Na przykład można określić próg dla kategorii domyślne różnych wartości progowej dla kategorii mapy bitowej i nadal różnych wartości progowej dla kategorii pióra.  
  
 Domyślne ustawienia dopasowanie koloru i dostosowanie skali szarości dotyczą wszystkie kategorie, które nie mają ustawień dopasowania we własnym. Na przykład jeśli nigdy nie określono żadnych ustawień dopasowania dla kategorii pióra, domyślne ustawienia dotyczą kategorii pióra.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearThreshold">
      <MemberSignature Language="C#" Value="public void ClearThreshold (System.Drawing.Imaging.ColorAdjustType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ClearThreshold(valuetype System.Drawing.Imaging.ColorAdjustType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.ClearThreshold(System.Drawing.Imaging.ColorAdjustType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ClearThreshold (type As ColorAdjustType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ClearThreshold(System::Drawing::Imaging::ColorAdjustType type);" />
      <MemberSignature Language="F#" Value="member this.ClearThreshold : System.Drawing.Imaging.ColorAdjustType -&gt; unit" Usage="imageAttributes.ClearThreshold type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Drawing.Imaging.ColorAdjustType" />
      </Parameters>
      <Docs>
        <param name="type">Element <see cref="T:System.Drawing.Imaging.ColorAdjustType" /> , który określa kategorię, dla którego zostanie wyczyszczona wartość progową.</param>
        <summary>Czyści wartość progowa dla określonej kategorii.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Próg wynosi wartość z zakresu od 0 do 1, która określa punkt odcięcia dla każdego składnika koloru. Na przykład załóżmy, że ustawiono wartość progową 0,7 i Załóżmy, że kolor są renderowanie którego czerwony, zielony i niebieski składniki są 230, 50 i 220, odpowiednio. Składnik czerwony (230) jest większa niż 0.7x55, dzięki czemu składnik czerwony zostaną zmienione na wartość 255 (pełnej intensywności). Składnik zielony (50), jest mniejsza niż 0.7x255, więc składnik zielony zostanie zmieniony na 0. Składnik niebieski (220) jest większa niż 0.7x255, dzięki czemu składnik niebieski zostaną zmienione na wartość 255.  
  
 <xref:System.Drawing.Imaging.ImageAttributes> Obiekt zachowuje kolorowych i szarych ustawienia na pięć kategorii dopasowania: domyślny, mapy bitowej, pędzla, pióra i tekst. Na przykład można określić próg dla kategorii domyślne różnych wartości progowej dla kategorii mapy bitowej i nadal różnych wartości progowej dla kategorii pióra.  
  
 Domyślne ustawienia dopasowanie koloru i dostosowanie skali szarości dotyczą wszystkie kategorie, które nie mają ustawień dopasowania we własnym. Na przykład jeśli nigdy nie określono żadnych ustawień dopasowania dla kategorii pióra, domyślne ustawienia dotyczą kategorii pióra.  
  
 Jak najszybciej po określeniu dopasowanie koloru lub ustawienie skali szarości dopasowania dla określonej kategorii, domyślne ustawienia dostosowania przestaną obowiązywać do tej kategorii. Na przykład załóżmy, że można określić próg i gamma wartości domyślnej kategorii. Jeśli ustawisz wartość progową dla kategorii pióra przez wywołanie metody <xref:System.Drawing.Imaging.ImageAttributes.SetThreshold%2A> metody domyślny próg nie zostanie zastosowany pióra. Jeśli wyczyścisz później próg pióra przez wywołanie metody <xref:System.Drawing.Imaging.ImageAttributes.ClearThreshold%2A> metody kategorii pióro nie zostaną przywrócone do domyślny próg; zamiast kategorii pióra będzie miał Brak wartości progowej. Podobnie kategoria pióro nie przywróci domyślną wartość gamma; zamiast kategorii pióra mają żadnej wartości gamma.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public object Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Function Clone () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ Clone();" />
      <MemberSignature Language="F#" Value="abstract member Clone : unit -&gt; obj&#xA;override this.Clone : unit -&gt; obj" Usage="imageAttributes.Clone " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ICloneable.Clone</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Tworzy dokładną kopię tego <see cref="T:System.Drawing.Imaging.ImageAttributes" /> obiektu.</summary>
        <returns><see cref="T:System.Drawing.Imaging.ImageAttributes" /> Obiekt tej klasy tworzy, rzutowany jako obiekt.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="imageAttributes.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zwalnia wszelkie zasoby używane przez to <see cref="T:System.Drawing.Imaging.ImageAttributes" /> obiektu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wywołaj <xref:System.Drawing.Imaging.ImageAttributes.Dispose%2A> po zakończeniu przy użyciu <xref:System.Drawing.Imaging.ImageAttributes>. <xref:System.Drawing.Imaging.ImageAttributes.Dispose%2A> Pozostawia metoda <xref:System.Drawing.Imaging.ImageAttributes> w stanie uniemożliwiającym jego używanie. Po wywołaniu <xref:System.Drawing.Imaging.ImageAttributes.Dispose%2A>, trzeba zwolnić wszystkie odwołania do <xref:System.Drawing.Imaging.ImageAttributes> , moduł zbierający elementy bezużyteczne mógł odzyskać pamięć, <xref:System.Drawing.Imaging.ImageAttributes> zajmowaną przez wystąpienie. Aby uzyskać więcej informacji, zobacz [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) i [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).  
  
> [!NOTE]
>  Zawsze wywołuj <xref:System.Drawing.Imaging.ImageAttributes.Dispose%2A> przed publikacją swoje ostatnie odwołanie do <xref:System.Drawing.Imaging.ImageAttributes>. W przeciwnym razie zasobów jest przy użyciu nie zostanie zwolniona, dopóki moduł odśmiecania pamięci wywołuje <xref:System.Drawing.Imaging.ImageAttributes> obiektu `Finalize` metody.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~ImageAttributes ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!ImageAttributes ()" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; unit" Usage="imageAttributes.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Umożliwia obiektu spróbuj zwolnić zasoby i wykonywać inne operacje oczyszczania, zanim go jest odzyskiwane przez wyrzucanie elementów bezużytecznych.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAdjustedPalette">
      <MemberSignature Language="C#" Value="public void GetAdjustedPalette (System.Drawing.Imaging.ColorPalette palette, System.Drawing.Imaging.ColorAdjustType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void GetAdjustedPalette(class System.Drawing.Imaging.ColorPalette palette, valuetype System.Drawing.Imaging.ColorAdjustType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.GetAdjustedPalette(System.Drawing.Imaging.ColorPalette,System.Drawing.Imaging.ColorAdjustType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GetAdjustedPalette (palette As ColorPalette, type As ColorAdjustType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GetAdjustedPalette(System::Drawing::Imaging::ColorPalette ^ palette, System::Drawing::Imaging::ColorAdjustType type);" />
      <MemberSignature Language="F#" Value="member this.GetAdjustedPalette : System.Drawing.Imaging.ColorPalette * System.Drawing.Imaging.ColorAdjustType -&gt; unit" Usage="imageAttributes.GetAdjustedPalette (palette, type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="palette" Type="System.Drawing.Imaging.ColorPalette" />
        <Parameter Name="type" Type="System.Drawing.Imaging.ColorAdjustType" />
      </Parameters>
      <Docs>
        <param name="palette">A <see cref="T:System.Drawing.Imaging.ColorPalette" /> na dane wejściowe zawierającego palety Aby dostosować i w danych wyjściowych zawiera skorygowane palety.</param>
        <param name="type">Element <see cref="T:System.Drawing.Imaging.ColorAdjustType" /> , który określa kategorię, w których dostosowanie ustawienia zostaną zastosowane do palety.</param>
        <summary>Dopasowuje kolorów palety zgodnie z ustawieniami dopasowania określonej kategorii.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Drawing.Imaging.ImageAttributes> Obiekt zachowuje kolorowych i szarych ustawienia na pięć kategorii dopasowania: domyślny, mapy bitowej, pędzla, pióra i tekst. Na przykład można określić tabeli ponownego mapowania kolorów dla kategorii domyślne tabelę ponowne mapowanie innego koloru dla kategorii mapy bitowej i nadal tabelę ponowne mapowanie innego koloru dla kategorii pióra.  
  
 Gdy wywołujesz <xref:System.Drawing.Imaging.ImageAttributes.GetAdjustedPalette%2A> metody, można określić kategorię dopasowania, która umożliwia dostosowanie kolorów palety. Na przykład w przypadku przekazania <xref:System.Drawing.Imaging.ColorAdjustType.Bitmap> do <xref:System.Drawing.Imaging.ImageAttributes.GetAdjustedPalette%2A> metody, dostosowanie ustawienia kategorii mapy bitowej są używane do dostosowywania kolorów palety.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetBrushRemapTable">
      <MemberSignature Language="C#" Value="public void SetBrushRemapTable (System.Drawing.Imaging.ColorMap[] map);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetBrushRemapTable(class System.Drawing.Imaging.ColorMap[] map) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.SetBrushRemapTable(System.Drawing.Imaging.ColorMap[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetBrushRemapTable (map As ColorMap())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetBrushRemapTable(cli::array &lt;System::Drawing::Imaging::ColorMap ^&gt; ^ map);" />
      <MemberSignature Language="F#" Value="member this.SetBrushRemapTable : System.Drawing.Imaging.ColorMap[] -&gt; unit" Usage="imageAttributes.SetBrushRemapTable map" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="map" Type="System.Drawing.Imaging.ColorMap[]" />
      </Parameters>
      <Docs>
        <param name="map">Tablica <see cref="T:System.Drawing.Imaging.ColorMap" /> obiektów.</param>
        <summary>Ustawia tabeli ponownego mapowania kolorów dla kategorii pędzla.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Tabeli ponownego mapowania kolorów jest tablicą <xref:System.Drawing.Imaging.ColorMap> struktury. Każdy <xref:System.Drawing.Imaging.ColorMap> struktura ma dwa <xref:System.Drawing.Color> obiektów: taki, który określa stary kolor i taki, który określa nowy odpowiedni kolor. Podczas renderowania, dowolny kolor, który pasuje do jednej tabeli ponownego mapowania kolorów stare jest zmieniany na odpowiedniej nowy kolor.  
  
 Wywoływanie <xref:System.Drawing.Imaging.ImageAttributes.SetBrushRemapTable%2A> metoda ma taki sam skutek jak przekazywanie <xref:System.Drawing.Imaging.ColorAdjustType.Brush> do <xref:System.Drawing.Imaging.ImageAttributes.SetRemapTable%2A> metody. W tabeli określony ponowne mapowanie dotyczy elementów w metapliki, który jest wypełniany wartościami pędzla.  
  
 Ta metoda jest przeznaczona do użycia tylko z metapliki.  
  
   
  
## Examples  
 Poniższy przykład kodu jest przeznaczony do użytku z formularzami Windows Forms i wymaga <xref:System.Windows.Forms.PaintEventArgs> `e`, czyli parametrem <xref:System.Windows.Forms.Control.Paint> programu obsługi zdarzeń. Kod wykonuje następujące czynności:  
  
1.  Tworzy element pojedynczego <xref:System.Drawing.Imaging.ColorMap> tablica, która zawiera stary kolor czerwony i zielony jako nowy kolor.  
  
2.  Przekazuje tej tablicy do nowo utworzonego <xref:System.Drawing.Imaging.ImageAttributes> obiektu.  
  
 [!code-cpp[System.Drawing.ClassicImaging.ImageAttributes#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicImaging.ImageAttributes/CPP/form1.cpp#1)]
 [!code-csharp[System.Drawing.ClassicImaging.ImageAttributes#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicImaging.ImageAttributes/CS/form1.cs#1)]
 [!code-vb[System.Drawing.ClassicImaging.ImageAttributes#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicImaging.ImageAttributes/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetColorKey">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Ustawia kolor klucz (zakres przezroczystości).</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetColorKey">
      <MemberSignature Language="C#" Value="public void SetColorKey (System.Drawing.Color colorLow, System.Drawing.Color colorHigh);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetColorKey(valuetype System.Drawing.Color colorLow, valuetype System.Drawing.Color colorHigh) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.SetColorKey(System.Drawing.Color,System.Drawing.Color)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetColorKey (colorLow As Color, colorHigh As Color)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetColorKey(System::Drawing::Color colorLow, System::Drawing::Color colorHigh);" />
      <MemberSignature Language="F#" Value="member this.SetColorKey : System.Drawing.Color * System.Drawing.Color -&gt; unit" Usage="imageAttributes.SetColorKey (colorLow, colorHigh)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="colorLow" Type="System.Drawing.Color" />
        <Parameter Name="colorHigh" Type="System.Drawing.Color" />
      </Parameters>
      <Docs>
        <param name="colorLow">Niska wartość klucza kolorów.</param>
        <param name="colorHigh">Wysoka wartość klucza kolorów.</param>
        <summary>Ustawia klucz kolorów dla kategorii domyślne.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda ustawia wartości wysokim i niskim klucza kolorów, aby zakres kolorów mogą być niewidoczne. Wszelkie kolor, który ma poszczególnych części trzy (czerwony, zielony, niebieski) między odpowiadającymi składnikami klucze wysoki i niski kolorów jest przezroczyste.  
  
 <xref:System.Drawing.Imaging.ImageAttributes> Obiekt zachowuje kolorowych i szarych ustawienia na pięć kategorii dopasowania: domyślny, mapy bitowej, pędzla, pióra i tekst. Na przykład można określić klucz kolorów dla kategorii domyślny klucz innego koloru dla kategorii mapy bitowej i nadal klucz innego koloru dla kategorii pióra.  
  
 Domyślne ustawienia dopasowanie koloru i dostosowanie skali szarości dotyczą wszystkie kategorie, które nie mają ustawień dopasowania we własnym. Na przykład jeśli nigdy nie określono żadnych ustawień dopasowania dla kategorii pióra, domyślne ustawienia dotyczą kategorii pióra.  
  
   
  
## Examples  
 Dla przykładu kodu zobacz <xref:System.Drawing.Imaging.ImageAttributes.SetColorKey%28System.Drawing.Color%2CSystem.Drawing.Color%2CSystem.Drawing.Imaging.ColorAdjustType%29> metody.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetColorKey">
      <MemberSignature Language="C#" Value="public void SetColorKey (System.Drawing.Color colorLow, System.Drawing.Color colorHigh, System.Drawing.Imaging.ColorAdjustType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetColorKey(valuetype System.Drawing.Color colorLow, valuetype System.Drawing.Color colorHigh, valuetype System.Drawing.Imaging.ColorAdjustType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.SetColorKey(System.Drawing.Color,System.Drawing.Color,System.Drawing.Imaging.ColorAdjustType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetColorKey (colorLow As Color, colorHigh As Color, type As ColorAdjustType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetColorKey(System::Drawing::Color colorLow, System::Drawing::Color colorHigh, System::Drawing::Imaging::ColorAdjustType type);" />
      <MemberSignature Language="F#" Value="member this.SetColorKey : System.Drawing.Color * System.Drawing.Color * System.Drawing.Imaging.ColorAdjustType -&gt; unit" Usage="imageAttributes.SetColorKey (colorLow, colorHigh, type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="colorLow" Type="System.Drawing.Color" />
        <Parameter Name="colorHigh" Type="System.Drawing.Color" />
        <Parameter Name="type" Type="System.Drawing.Imaging.ColorAdjustType" />
      </Parameters>
      <Docs>
        <param name="colorLow">Niska wartość klucza kolorów.</param>
        <param name="colorHigh">Wysoka wartość klucza kolorów.</param>
        <param name="type">Element <see cref="T:System.Drawing.Imaging.ColorAdjustType" /> określający Kategoria, dla którego ustawiono klucza kolorów.</param>
        <summary>Ustawia klucz kolorów (zakres przezroczystości) dla określonej kategorii.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda ustawia wartości wysokim i niskim klucza kolorów, aby zakres kolorów mogą być niewidoczne. Wszelkie kolor, który ma poszczególnych części trzy (czerwony, zielony, niebieski) między odpowiadającymi składnikami klucze wysoki i niski kolorów jest przezroczyste.  
  
 <xref:System.Drawing.Imaging.ImageAttributes> Obiekt zachowuje kolorowych i szarych ustawienia na pięć kategorii dopasowania: domyślny, mapy bitowej, pędzla, pióra i tekst. Na przykład można określić klucz kolorów dla kategorii domyślny klucz innego koloru dla kategorii mapy bitowej i nadal klucz innego koloru dla kategorii pióra.  
  
 Domyślne ustawienia dopasowanie koloru i dostosowanie skali szarości dotyczą wszystkie kategorie, które nie mają ustawień dopasowania we własnym. Na przykład jeśli nigdy nie określono żadnych ustawień dopasowania dla kategorii pióra, domyślne ustawienia dotyczą kategorii pióra.  
  
 Jak najszybciej po określeniu dopasowanie koloru lub ustawienie skali szarości dopasowania dla określonej kategorii, domyślne ustawienia dostosowania przestaną obowiązywać do tej kategorii. Na przykład załóżmy, że należy określić kolekcję ustawień dopasowania dla kategorii domyślne. Jeśli ustawisz klucza kolorów dla kategorii pióra przez przekazanie <xref:System.Drawing.Imaging.ColorAdjustType.Pen> do <xref:System.Drawing.Imaging.ImageAttributes.SetColorKey%2A> metody, Brak domyślnych ustawień korekty będą dotyczyć pióra.  
  
   
  
## Examples  
 Poniższy przykład kodu jest przeznaczony do użytku z formularzami Windows Forms i wymaga <xref:System.Windows.Forms.PaintEventArgs> `e`, czyli parametrem <xref:System.Windows.Forms.Control.Paint> programu obsługi zdarzeń. Kod wykonuje następujące czynności:  
  
1.  Otwiera <xref:System.Drawing.Image> wykorzystuje plik Circle.bmp i pobiera je do ekranu.  
  
2.  Tworzy <xref:System.Drawing.Imaging.ImageAttributes> obiektu i ustawia jego kolor klucza, wywołując <xref:System.Drawing.Imaging.ImageAttributes.SetColorKey%2A> metody.  
  
3.  Rysuje obraz na ekranie za pomocą klucza kolor <xref:System.Drawing.Imaging.ImageAttributes> obiektu.  
  
 [!code-cpp[System.Drawing.ClassicImaging.ImageAttributes#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicImaging.ImageAttributes/CPP/form1.cpp#2)]
 [!code-csharp[System.Drawing.ClassicImaging.ImageAttributes#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicImaging.ImageAttributes/CS/form1.cs#2)]
 [!code-vb[System.Drawing.ClassicImaging.ImageAttributes#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicImaging.ImageAttributes/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetColorMatrices">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Ustawia macierzy dopasowanie koloru i macierz dostosowanie skali szarości.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetColorMatrices">
      <MemberSignature Language="C#" Value="public void SetColorMatrices (System.Drawing.Imaging.ColorMatrix newColorMatrix, System.Drawing.Imaging.ColorMatrix grayMatrix);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetColorMatrices(class System.Drawing.Imaging.ColorMatrix newColorMatrix, class System.Drawing.Imaging.ColorMatrix grayMatrix) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.SetColorMatrices(System.Drawing.Imaging.ColorMatrix,System.Drawing.Imaging.ColorMatrix)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetColorMatrices (newColorMatrix As ColorMatrix, grayMatrix As ColorMatrix)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetColorMatrices(System::Drawing::Imaging::ColorMatrix ^ newColorMatrix, System::Drawing::Imaging::ColorMatrix ^ grayMatrix);" />
      <MemberSignature Language="F#" Value="member this.SetColorMatrices : System.Drawing.Imaging.ColorMatrix * System.Drawing.Imaging.ColorMatrix -&gt; unit" Usage="imageAttributes.SetColorMatrices (newColorMatrix, grayMatrix)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newColorMatrix" Type="System.Drawing.Imaging.ColorMatrix" />
        <Parameter Name="grayMatrix" Type="System.Drawing.Imaging.ColorMatrix" />
      </Parameters>
      <Docs>
        <param name="newColorMatrix">Macierz dopasowanie koloru.</param>
        <param name="grayMatrix">Macierz dostosowanie skali szarości.</param>
        <summary>Ustawia macierzy dopasowanie koloru i macierzy skali szarości dopasowania dla kategorii domyślne.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Drawing.Imaging.ImageAttributes> Obiekt zachowuje kolorowych i szarych ustawienia na pięć kategorii dopasowania: domyślny, mapy bitowej, pędzla, pióra i tekst. Na przykład można określić macierzy dopasowania dla kategorii domyślne, dostosowania różnych macierzach dla kategorii mapy bitowej i dostosowanie nadal różnych macierzach dla kategorii pióra.  
  
 Domyślne ustawienia dopasowanie koloru i dostosowanie skali szarości dotyczą wszystkie kategorie, które nie mają ustawień dopasowania we własnym. Na przykład jeśli nigdy nie określono żadnych ustawień dopasowania dla kategorii pióra, domyślne ustawienia dotyczą kategorii pióra.  
  
 Wywoływanie <xref:System.Drawing.Imaging.ImageAttributes.SetColorMatrices%28System.Drawing.Imaging.ColorMatrix%2CSystem.Drawing.Imaging.ColorMatrix%29?displayProperty=nameWithType> metodą jest równoważne z wywoływaniem <xref:System.Drawing.Imaging.ImageAttributes.SetColorMatrices%28System.Drawing.Imaging.ColorMatrix%2CSystem.Drawing.Imaging.ColorMatrix%2CSystem.Drawing.Imaging.ColorMatrixFlag%29?displayProperty=nameWithType> metody i przekazywanie <xref:System.Drawing.Imaging.ColorMatrixFlag.Default?displayProperty=nameWithType> dla `flags` parametru. <xref:System.Drawing.Imaging.ColorMatrixFlag.Default?displayProperty=nameWithType> Określa, że wszystkie kolory (w tym szarości) są dostosowywane przez dopasowanie koloru macierzy, nie macierzy dostosowanie skali szarości. W związku z tym macierzy dostosowanie skali szarości przekazany do tej metody nie ma znaczenia.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetColorMatrices">
      <MemberSignature Language="C#" Value="public void SetColorMatrices (System.Drawing.Imaging.ColorMatrix newColorMatrix, System.Drawing.Imaging.ColorMatrix grayMatrix, System.Drawing.Imaging.ColorMatrixFlag flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetColorMatrices(class System.Drawing.Imaging.ColorMatrix newColorMatrix, class System.Drawing.Imaging.ColorMatrix grayMatrix, valuetype System.Drawing.Imaging.ColorMatrixFlag flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.SetColorMatrices(System.Drawing.Imaging.ColorMatrix,System.Drawing.Imaging.ColorMatrix,System.Drawing.Imaging.ColorMatrixFlag)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetColorMatrices (newColorMatrix As ColorMatrix, grayMatrix As ColorMatrix, flags As ColorMatrixFlag)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetColorMatrices(System::Drawing::Imaging::ColorMatrix ^ newColorMatrix, System::Drawing::Imaging::ColorMatrix ^ grayMatrix, System::Drawing::Imaging::ColorMatrixFlag flags);" />
      <MemberSignature Language="F#" Value="member this.SetColorMatrices : System.Drawing.Imaging.ColorMatrix * System.Drawing.Imaging.ColorMatrix * System.Drawing.Imaging.ColorMatrixFlag -&gt; unit" Usage="imageAttributes.SetColorMatrices (newColorMatrix, grayMatrix, flags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newColorMatrix" Type="System.Drawing.Imaging.ColorMatrix" />
        <Parameter Name="grayMatrix" Type="System.Drawing.Imaging.ColorMatrix" />
        <Parameter Name="flags" Type="System.Drawing.Imaging.ColorMatrixFlag" />
      </Parameters>
      <Docs>
        <param name="newColorMatrix">Macierz dopasowanie koloru.</param>
        <param name="grayMatrix">Macierz dostosowanie skali szarości.</param>
        <param name="flags">Element <see cref="T:System.Drawing.Imaging.ColorMatrixFlag" /> , który określa typ obrazu i kolor, który będzie miało wpływ na macierzach dopasowanie koloru i dostosowanie skali szarości.</param>
        <summary>Ustawia macierzy dopasowanie koloru i macierzy skali szarości dopasowania dla kategorii domyślne.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Drawing.Imaging.ImageAttributes> Obiekt zachowuje kolorowych i szarych ustawienia na pięć kategorii dopasowania: domyślny, mapy bitowej, pędzla, pióra i tekst. Na przykład można określić macierzy dopasowania dla kategorii domyślne, dostosowania różnych macierzach dla kategorii mapy bitowej i dostosowanie nadal różnych macierzach dla kategorii pióra.  
  
 Domyślne ustawienia dopasowanie koloru i dostosowanie skali szarości dotyczą wszystkie kategorie, które nie mają ustawień dopasowania we własnym. Na przykład jeśli nigdy nie określono żadnych ustawień dopasowania dla kategorii pióra, domyślne ustawienia dotyczą kategorii pióra.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetColorMatrices">
      <MemberSignature Language="C#" Value="public void SetColorMatrices (System.Drawing.Imaging.ColorMatrix newColorMatrix, System.Drawing.Imaging.ColorMatrix grayMatrix, System.Drawing.Imaging.ColorMatrixFlag mode, System.Drawing.Imaging.ColorAdjustType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetColorMatrices(class System.Drawing.Imaging.ColorMatrix newColorMatrix, class System.Drawing.Imaging.ColorMatrix grayMatrix, valuetype System.Drawing.Imaging.ColorMatrixFlag mode, valuetype System.Drawing.Imaging.ColorAdjustType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.SetColorMatrices(System.Drawing.Imaging.ColorMatrix,System.Drawing.Imaging.ColorMatrix,System.Drawing.Imaging.ColorMatrixFlag,System.Drawing.Imaging.ColorAdjustType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetColorMatrices (newColorMatrix As ColorMatrix, grayMatrix As ColorMatrix, mode As ColorMatrixFlag, type As ColorAdjustType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetColorMatrices(System::Drawing::Imaging::ColorMatrix ^ newColorMatrix, System::Drawing::Imaging::ColorMatrix ^ grayMatrix, System::Drawing::Imaging::ColorMatrixFlag mode, System::Drawing::Imaging::ColorAdjustType type);" />
      <MemberSignature Language="F#" Value="member this.SetColorMatrices : System.Drawing.Imaging.ColorMatrix * System.Drawing.Imaging.ColorMatrix * System.Drawing.Imaging.ColorMatrixFlag * System.Drawing.Imaging.ColorAdjustType -&gt; unit" Usage="imageAttributes.SetColorMatrices (newColorMatrix, grayMatrix, mode, type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newColorMatrix" Type="System.Drawing.Imaging.ColorMatrix" />
        <Parameter Name="grayMatrix" Type="System.Drawing.Imaging.ColorMatrix" />
        <Parameter Name="mode" Type="System.Drawing.Imaging.ColorMatrixFlag" />
        <Parameter Name="type" Type="System.Drawing.Imaging.ColorAdjustType" />
      </Parameters>
      <Docs>
        <param name="newColorMatrix">Macierz dopasowanie koloru.</param>
        <param name="grayMatrix">Macierz dostosowanie skali szarości.</param>
        <param name="mode">Element <see cref="T:System.Drawing.Imaging.ColorMatrixFlag" /> , który określa typ obrazu i kolor, który będzie miało wpływ na macierzach dopasowanie koloru i dostosowanie skali szarości.</param>
        <param name="type">Element <see cref="T:System.Drawing.Imaging.ColorAdjustType" /> określający Kategoria, dla którego ustawiono macierzy dopasowanie koloru i dostosowanie skali szarości.</param>
        <summary>Ustawia macierzy dopasowanie koloru i macierzy skali szarości dopasowania dla określonej kategorii.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Drawing.Imaging.ImageAttributes> Obiekt zachowuje kolorowych i szarych ustawienia na pięć kategorii dopasowania: domyślny, mapy bitowej, pędzla, pióra i tekst. Na przykład można określić macierzy dopasowania dla kategorii domyślne, dostosowania różnych macierzach dla kategorii mapy bitowej i dostosowanie nadal różnych macierzach dla kategorii pióra.  
  
 Domyślne ustawienia dopasowanie koloru i dostosowanie skali szarości dotyczą wszystkie kategorie, które nie mają ustawień dopasowania we własnym. Na przykład jeśli nigdy nie określono żadnych ustawień dopasowania dla kategorii pióra, domyślne ustawienia dotyczą kategorii pióra.  
  
 Jak najszybciej po określeniu dopasowanie koloru lub ustawienie skali szarości dopasowania dla określonej kategorii, domyślne ustawienia dostosowania przestaną obowiązywać do tej kategorii. Na przykład załóżmy, że należy określić kolekcję ustawień dopasowania dla kategorii domyślne. Jeśli ustawisz macierzy dopasowanie koloru i dostosowanie skali szarości dla kategorii pióra przez przekazanie <xref:System.Drawing.Imaging.ColorAdjustType.Pen> do <xref:System.Drawing.Imaging.ImageAttributes.SetColorMatrices%2A> metody, Brak domyślnych ustawień korekty będą dotyczyć pióra.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetColorMatrix">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Ustawia macierzy dopasowanie koloru.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetColorMatrix">
      <MemberSignature Language="C#" Value="public void SetColorMatrix (System.Drawing.Imaging.ColorMatrix newColorMatrix);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetColorMatrix(class System.Drawing.Imaging.ColorMatrix newColorMatrix) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.SetColorMatrix(System.Drawing.Imaging.ColorMatrix)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetColorMatrix (newColorMatrix As ColorMatrix)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetColorMatrix(System::Drawing::Imaging::ColorMatrix ^ newColorMatrix);" />
      <MemberSignature Language="F#" Value="member this.SetColorMatrix : System.Drawing.Imaging.ColorMatrix -&gt; unit" Usage="imageAttributes.SetColorMatrix newColorMatrix" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newColorMatrix" Type="System.Drawing.Imaging.ColorMatrix" />
      </Parameters>
      <Docs>
        <param name="newColorMatrix">Macierz dopasowanie koloru.</param>
        <summary>Ustawia macierzy dopasowanie koloru dla kategorii domyślne.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Drawing.Imaging.ImageAttributes> Obiekt zachowuje kolorowych i szarych ustawienia na pięć kategorii dopasowania: domyślny, mapy bitowej, pędzla, pióra i tekst. Na przykład można określić macierzy dopasowanie koloru dla kategorii domyślne macierzy różnych dopasowanie koloru dla kategorii mapy bitowej i nadal macierzy różnych dopasowanie koloru pióra kategorii.  
  
 Domyślne ustawienia dopasowanie koloru i dostosowanie skali szarości dotyczą wszystkie kategorie, które nie mają ustawień dopasowania we własnym. Na przykład jeśli nigdy nie określono żadnych ustawień dopasowania dla kategorii pióra, domyślne ustawienia dotyczą kategorii pióra.  
  
 Wywoływanie <xref:System.Drawing.Imaging.ImageAttributes.SetColorMatrix%28System.Drawing.Imaging.ColorMatrix%29?displayProperty=nameWithType> metodą jest równoważne z wywoływaniem <xref:System.Drawing.Imaging.ImageAttributes.SetColorMatrix%28System.Drawing.Imaging.ColorMatrix%2CSystem.Drawing.Imaging.ColorMatrixFlag%29?displayProperty=nameWithType> metody i przekazywanie <xref:System.Drawing.Imaging.ColorMatrixFlag.Default?displayProperty=nameWithType> dla `flags` parametru. <xref:System.Drawing.Imaging.ColorMatrixFlag.Default?displayProperty=nameWithType> Określa, że wszystkie kolory (w tym szarości) są dostosowywane przez dopasowanie koloru macierzy  
  
   
  
## Examples  
 Poniższy przykład kodu jest przeznaczony do użytku z formularzami Windows Forms i wymaga <xref:System.Windows.Forms.PaintEventArgs> `e`, czyli parametrem <xref:System.Windows.Forms.Control.Paint> programu obsługi zdarzeń. Kod wykonuje następujące czynności:  
  
1.  Tworzy obraz prostokąt, który ma kolor wartości ustawionej na 128, produkcji prostokąt, który jest wypełniony jednolitym kolorem średni szary. Ten obraz prostokąta jest następnie rysowane na ekranie.  
  
2.  Tworzy <xref:System.Drawing.Imaging.ColorMatrix> i ustawia jego <xref:System.Drawing.Drawing2D.Matrix> lokalizacji 1,75, która kładzie nacisk składnik czerwony obrazu.  
  
3.  Tworzy <xref:System.Drawing.Imaging.ImageAttributes> obiektów i wywołuje <xref:System.Drawing.Imaging.ImageAttributes.SetColorMatrix%2A> metody.  
  
4.  Rysuje obraz (drugi prostokąt) na ekranie za pomocą <xref:System.Drawing.Imaging.ColorMatrix> po prostu ustaw <xref:System.Drawing.Imaging.ImageAttributes> obiektu.  
  
 Należy pamiętać, że drugi prostokąt ma kolor czerwony podkreślana.  
  
 [!code-cpp[System.Drawing.ClassicImaging.ImageAttributes#3](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicImaging.ImageAttributes/CPP/form1.cpp#3)]
 [!code-csharp[System.Drawing.ClassicImaging.ImageAttributes#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicImaging.ImageAttributes/CS/form1.cs#3)]
 [!code-vb[System.Drawing.ClassicImaging.ImageAttributes#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicImaging.ImageAttributes/VB/form1.vb#3)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/f28c54fd-9c80-4f6f-b242-55f7ffcda84b">Ponowne kolorowanie obrazów</related>
      </Docs>
    </Member>
    <Member MemberName="SetColorMatrix">
      <MemberSignature Language="C#" Value="public void SetColorMatrix (System.Drawing.Imaging.ColorMatrix newColorMatrix, System.Drawing.Imaging.ColorMatrixFlag flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetColorMatrix(class System.Drawing.Imaging.ColorMatrix newColorMatrix, valuetype System.Drawing.Imaging.ColorMatrixFlag flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.SetColorMatrix(System.Drawing.Imaging.ColorMatrix,System.Drawing.Imaging.ColorMatrixFlag)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetColorMatrix (newColorMatrix As ColorMatrix, flags As ColorMatrixFlag)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetColorMatrix(System::Drawing::Imaging::ColorMatrix ^ newColorMatrix, System::Drawing::Imaging::ColorMatrixFlag flags);" />
      <MemberSignature Language="F#" Value="member this.SetColorMatrix : System.Drawing.Imaging.ColorMatrix * System.Drawing.Imaging.ColorMatrixFlag -&gt; unit" Usage="imageAttributes.SetColorMatrix (newColorMatrix, flags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newColorMatrix" Type="System.Drawing.Imaging.ColorMatrix" />
        <Parameter Name="flags" Type="System.Drawing.Imaging.ColorMatrixFlag" />
      </Parameters>
      <Docs>
        <param name="newColorMatrix">Macierz dopasowanie koloru.</param>
        <param name="flags">Element <see cref="T:System.Drawing.Imaging.ColorMatrixFlag" /> , który określa typ obrazu i kolor, który będzie miało wpływ na macierz dopasowanie koloru.</param>
        <summary>Ustawia macierzy dopasowanie koloru dla kategorii domyślne.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Drawing.Imaging.ImageAttributes> Obiekt zachowuje kolorowych i szarych ustawienia na pięć kategorii dopasowania: domyślny, mapy bitowej, pędzla, pióra i tekst. Na przykład można określić macierzy dopasowanie koloru dla kategorii domyślne macierzy różnych dopasowanie koloru dla kategorii mapy bitowej i nadal macierzy różnych dopasowanie koloru pióra kategorii.  
  
 Domyślne ustawienia dopasowanie koloru i dostosowanie skali szarości dotyczą wszystkie kategorie, które nie mają ustawień dopasowania we własnym. Na przykład jeśli nigdy nie określono żadnych ustawień dopasowania dla kategorii pióra, domyślne ustawienia dotyczą kategorii pióra.  
  
   
  
## Examples  
 Dla przykładu kodu zobacz <xref:System.Drawing.Imaging.ImageAttributes.SetColorMatrix%28System.Drawing.Imaging.ColorMatrix%29> metody.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/f28c54fd-9c80-4f6f-b242-55f7ffcda84b">Ponowne kolorowanie obrazów</related>
      </Docs>
    </Member>
    <Member MemberName="SetColorMatrix">
      <MemberSignature Language="C#" Value="public void SetColorMatrix (System.Drawing.Imaging.ColorMatrix newColorMatrix, System.Drawing.Imaging.ColorMatrixFlag mode, System.Drawing.Imaging.ColorAdjustType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetColorMatrix(class System.Drawing.Imaging.ColorMatrix newColorMatrix, valuetype System.Drawing.Imaging.ColorMatrixFlag mode, valuetype System.Drawing.Imaging.ColorAdjustType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.SetColorMatrix(System.Drawing.Imaging.ColorMatrix,System.Drawing.Imaging.ColorMatrixFlag,System.Drawing.Imaging.ColorAdjustType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetColorMatrix (newColorMatrix As ColorMatrix, mode As ColorMatrixFlag, type As ColorAdjustType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetColorMatrix(System::Drawing::Imaging::ColorMatrix ^ newColorMatrix, System::Drawing::Imaging::ColorMatrixFlag mode, System::Drawing::Imaging::ColorAdjustType type);" />
      <MemberSignature Language="F#" Value="member this.SetColorMatrix : System.Drawing.Imaging.ColorMatrix * System.Drawing.Imaging.ColorMatrixFlag * System.Drawing.Imaging.ColorAdjustType -&gt; unit" Usage="imageAttributes.SetColorMatrix (newColorMatrix, mode, type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newColorMatrix" Type="System.Drawing.Imaging.ColorMatrix" />
        <Parameter Name="mode" Type="System.Drawing.Imaging.ColorMatrixFlag" />
        <Parameter Name="type" Type="System.Drawing.Imaging.ColorAdjustType" />
      </Parameters>
      <Docs>
        <param name="newColorMatrix">Macierz dopasowanie koloru.</param>
        <param name="mode">Element <see cref="T:System.Drawing.Imaging.ColorMatrixFlag" /> , który określa typ obrazu i kolor, który będzie miało wpływ na macierz dopasowanie koloru.</param>
        <param name="type">Element <see cref="T:System.Drawing.Imaging.ColorAdjustType" /> określający Kategoria, dla którego ustawiono macierzy dopasowanie koloru.</param>
        <summary>Ustawia macierzy dopasowanie koloru dla określonej kategorii.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Drawing.Imaging.ImageAttributes> Obiekt zachowuje kolorowych i szarych ustawienia na pięć kategorii dopasowania: domyślny, mapy bitowej, pędzla, pióra i tekst. Na przykład można określić macierzy dopasowanie koloru dla kategorii domyślne macierzy różnych dopasowanie koloru dla kategorii mapy bitowej i nadal macierzy różnych dopasowanie koloru pióra kategorii.  
  
 Domyślne ustawienia dopasowanie koloru i dostosowanie skali szarości dotyczą wszystkie kategorie, które nie mają ustawień dopasowania we własnym. Na przykład jeśli nigdy nie określono żadnych ustawień dopasowania dla kategorii pióra, domyślne ustawienia dotyczą kategorii pióra.  
  
 Jak najszybciej po określeniu dopasowanie koloru lub ustawienie skali szarości dopasowania dla określonej kategorii, domyślne ustawienia dostosowania przestaną obowiązywać do tej kategorii. Na przykład załóżmy, że należy określić kolekcję ustawień dopasowania dla kategorii domyślne. Jeśli ustawisz macierzy dopasowanie koloru dla kategorii pióra przez przekazanie <xref:System.Drawing.Imaging.ColorAdjustType.Pen> do <xref:System.Drawing.Imaging.ImageAttributes.SetColorMatrix%2A> metody, Brak domyślnych ustawień korekty będą dotyczyć pióra.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje sposób używania <xref:System.Drawing.Imaging.ImageAttributes.SetColorMatrix%2A> metody. Aby uruchomić ten przykład, Wklej kod do formularza Windows i wywołanie `RotateColors` z poziomu formularza <xref:System.Windows.Forms.Control.Paint> metody obsługi zdarzeń, przekazując `e` jako <xref:System.Windows.Forms.PaintEventArgs>.  
  
 [!code-csharp[System.Drawing.RotateColors#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.RotateColors/CS/Form1.cs#1)]
 [!code-vb[System.Drawing.RotateColors#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.RotateColors/VB/Form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetGamma">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Ustawia wartość gamma.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetGamma">
      <MemberSignature Language="C#" Value="public void SetGamma (float gamma);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetGamma(float32 gamma) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.SetGamma(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetGamma (gamma As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetGamma(float gamma);" />
      <MemberSignature Language="F#" Value="member this.SetGamma : single -&gt; unit" Usage="imageAttributes.SetGamma gamma" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="gamma" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="gamma">Wartość korekcji gamma.</param>
        <summary>Ustawia wartość gamma domyślnej kategorii.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Typowe wartości `gamma` parametru od 1.0 do wersji 2.2; jednak wartości od 0,1 do 5.0 mogą okazać się przydatne w pewnych okolicznościach.  
  
 <xref:System.Drawing.Imaging.ImageAttributes> Obiekt zachowuje kolorowych i szarych ustawienia na pięć kategorii dopasowania: domyślny, mapy bitowej, pędzla, pióra i tekst. Na przykład można określić wartość gamma Kategoria domyślna wartość gamma różnych kategorii mapy bitowej i nadal wartość gamma różnych kategorii pióra.  
  
 Domyślne ustawienia dopasowanie koloru i dostosowanie skali szarości dotyczą wszystkie kategorie, które nie mają ustawień dopasowania we własnym. Na przykład jeśli nigdy nie określono żadnych ustawień dopasowania dla kategorii pióra, domyślne ustawienia dotyczą kategorii pióra.  
  
 Gamma wartości spoza zakresu zwykle może być przydatna do starego monitory CRT lub monitory znajdujące się w warunkach oświetlenia nietypowe, takich jak środowiska przemysłowych lub wyświetla okno.  
  
   
  
## Examples  
 Poniższy przykład kodu jest przeznaczony do użytku z formularzami Windows Forms i wymaga <xref:System.Windows.Forms.PaintEventArgs> `e`, czyli parametrem <xref:System.Windows.Forms.Control.Paint> programu obsługi zdarzeń. Ponadto musisz zmienić ścieżkę pliku obrazu na ścieżkę i obraz prawidłowy w tym systemie. Kod wykonuje następujące czynności:  
  
1.  Otwiera <xref:System.Drawing.Image> wykorzystuje plik Camera.jpg i pobiera je na ekranie przy użyciu wartości domyślnej dla gamma.  
  
2.  Tworzy <xref:System.Drawing.Imaging.ImageAttributes> obiektu i ustawia jego gamma 2.2, wywołując <xref:System.Drawing.Imaging.ImageAttributes.SetGamma%2A> metody.  
  
3.  Rysuje obraz (drugi aparatu fotograficznego) na ekranie za pomocą gamma wartość po prostu <xref:System.Drawing.Imaging.ImageAttributes> obiektu.  
  
 [!code-cpp[System.Drawing.ClassicImaging.ImageAttributes#4](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicImaging.ImageAttributes/CPP/form1.cpp#4)]
 [!code-csharp[System.Drawing.ClassicImaging.ImageAttributes#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicImaging.ImageAttributes/CS/form1.cs#4)]
 [!code-vb[System.Drawing.ClassicImaging.ImageAttributes#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicImaging.ImageAttributes/VB/form1.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetGamma">
      <MemberSignature Language="C#" Value="public void SetGamma (float gamma, System.Drawing.Imaging.ColorAdjustType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetGamma(float32 gamma, valuetype System.Drawing.Imaging.ColorAdjustType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.SetGamma(System.Single,System.Drawing.Imaging.ColorAdjustType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetGamma (gamma As Single, type As ColorAdjustType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetGamma(float gamma, System::Drawing::Imaging::ColorAdjustType type);" />
      <MemberSignature Language="F#" Value="member this.SetGamma : single * System.Drawing.Imaging.ColorAdjustType -&gt; unit" Usage="imageAttributes.SetGamma (gamma, type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="gamma" Type="System.Single" />
        <Parameter Name="type" Type="System.Drawing.Imaging.ColorAdjustType" />
      </Parameters>
      <Docs>
        <param name="gamma">Wartość korekcji gamma.</param>
        <param name="type">Element <see cref="T:System.Drawing.Imaging.ColorAdjustType" /> wyliczenie, które określa kategorię, dla którego ustawiono wartość gamma.</param>
        <summary>Ustawia wartość gamma określonej kategorii.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Typowe wartości `gamma` parametru od 1.0 do wersji 2.2; jednak wartości od 0,1 do 5.0 mogą okazać się przydatne w pewnych okolicznościach.  
  
 <xref:System.Drawing.Imaging.ImageAttributes> Obiekt zachowuje kolorowych i szarych ustawienia na pięć kategorii dopasowania: domyślny, mapy bitowej, pędzla, pióra i tekst. Na przykład można określić wartość gamma Kategoria domyślna wartość gamma różnych kategorii mapy bitowej i nadal wartość gamma różnych kategorii pióra.  
  
 Domyślne ustawienia dopasowanie koloru i dostosowanie skali szarości dotyczą wszystkie kategorie, które nie mają ustawień dopasowania we własnym. Na przykład jeśli nigdy nie określono żadnych ustawień dopasowania dla kategorii pióra, domyślne ustawienia dotyczą kategorii pióra.  
  
 Jak najszybciej po określeniu dopasowanie koloru lub ustawienie skali szarości dopasowania dla określonej kategorii, domyślne ustawienia dostosowania przestaną obowiązywać do tej kategorii. Na przykład załóżmy, że należy określić kolekcję ustawień dopasowania dla kategorii domyślne. Jeśli wartość zostanie ustawiona na gamma dla kategorii pióra przez przekazanie <xref:System.Drawing.Imaging.ColorAdjustType.Pen> do <xref:System.Drawing.Imaging.ImageAttributes.SetGamma%2A> metody, Brak domyślnych ustawień korekty będą dotyczyć pióra.  
  
 Gamma wartości spoza zakresu zwykle może być przydatna do starego monitory CRT lub monitory znajdujące się w warunkach oświetlenia nietypowe, takich jak środowiska przemysłowych lub wyświetla okno.  
  
   
  
## Examples  
 Dla przykładu kodu zobacz <xref:System.Drawing.Imaging.ImageAttributes.SetGamma%28System.Single%29> metody.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetNoOp">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Wyłącza dopasowywanie kolorów.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetNoOp">
      <MemberSignature Language="C#" Value="public void SetNoOp ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetNoOp() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.SetNoOp" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetNoOp ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetNoOp();" />
      <MemberSignature Language="F#" Value="member this.SetNoOp : unit -&gt; unit" Usage="imageAttributes.SetNoOp " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Wyłącza dopasowywanie kolorów dla kategorii domyślne. Możesz wywołać <see cref="Overload:System.Drawing.Imaging.ImageAttributes.ClearNoOp" /> metodę, aby przywrócić ustawienia Dopasowywanie kolorów, które zostały spełnione przed wywołaniem do <see cref="Overload:System.Drawing.Imaging.ImageAttributes.SetNoOp" /> metody.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Drawing.Imaging.ImageAttributes> Obiekt zachowuje kolorowych i szarych ustawienia na pięć kategorii dopasowania: domyślny, mapy bitowej, pędzla, pióra i tekst. Na przykład można określić wartość gamma Kategoria domyślna wartość gamma różnych kategorii mapy bitowej i nadal wartość gamma różnych kategorii pióra.  
  
 Domyślne ustawienia dopasowanie koloru i dostosowanie skali szarości dotyczą wszystkie kategorie, które nie mają ustawień dopasowania we własnym. Na przykład jeśli nigdy nie określono żadnych ustawień dopasowania dla kategorii pióra, domyślne ustawienia dotyczą kategorii pióra.  
  
   
  
## Examples  
 Poniższy przykład kodu jest przeznaczony do użytku z formularzami Windows Forms i wymaga <xref:System.Windows.Forms.PaintEventArgs> `e`, czyli parametrem <xref:System.Windows.Forms.Control.Paint> programu obsługi zdarzeń. Kod wykonuje następujące czynności:  
  
1.  Otwiera <xref:System.Drawing.Image> używającą pliku Camera.jpg.  
  
2.  Ustawia wartość gamma <xref:System.Drawing.Imaging.ImageAttributes> obiektu 0,25.  
  
3.  Rysuje obraz do ekranu.  
  
4.  Wywołania <xref:System.Drawing.Imaging.ImageAttributes.SetNoOp%2A> metody.  
  
5.  Rysuje obraz (drugi aparatu fotograficznego) na ekranie; Jednak ponieważ <xref:System.Drawing.Imaging.ImageAttributes.SetNoOp%2A> wywołano metodę, rysowania gamma ustawień domyślnych z wartością 1.0 i obraz ekranu z ustawieniem domyślnym gamma.  
  
 Należy pamiętać, że obraz po lewej stronie jest bardzo rozmytego (gamma 0,25) i obraz po prawej stronie ma większy kontrast (gamma 1.0).  
  
 [!code-cpp[System.Drawing.ClassicImaging.ImageAttributes#5](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicImaging.ImageAttributes/CPP/form1.cpp#5)]
 [!code-csharp[System.Drawing.ClassicImaging.ImageAttributes#5](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicImaging.ImageAttributes/CS/form1.cs#5)]
 [!code-vb[System.Drawing.ClassicImaging.ImageAttributes#5](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicImaging.ImageAttributes/VB/form1.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetNoOp">
      <MemberSignature Language="C#" Value="public void SetNoOp (System.Drawing.Imaging.ColorAdjustType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetNoOp(valuetype System.Drawing.Imaging.ColorAdjustType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.SetNoOp(System.Drawing.Imaging.ColorAdjustType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetNoOp (type As ColorAdjustType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetNoOp(System::Drawing::Imaging::ColorAdjustType type);" />
      <MemberSignature Language="F#" Value="member this.SetNoOp : System.Drawing.Imaging.ColorAdjustType -&gt; unit" Usage="imageAttributes.SetNoOp type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Drawing.Imaging.ColorAdjustType" />
      </Parameters>
      <Docs>
        <param name="type">Element <see cref="T:System.Drawing.Imaging.ColorAdjustType" /> określający kategorii, które koloru korekcji jest wyłączona.</param>
        <summary>Wyłącza dopasowywanie kolorów dla określonej kategorii. Możesz wywołać <see cref="Overload:System.Drawing.Imaging.ImageAttributes.ClearNoOp" /> metodę, aby przywrócić ustawienia Dopasowywanie kolorów, które zostały spełnione przed wywołaniem do <see cref="Overload:System.Drawing.Imaging.ImageAttributes.SetNoOp" /> metody.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Drawing.Imaging.ImageAttributes> Obiekt zachowuje kolorowych i szarych ustawienia na pięć kategorii dopasowania: domyślny, mapy bitowej, pędzla, pióra i tekst. Na przykład można określić wartość gamma Kategoria domyślna wartość gamma różnych kategorii mapy bitowej i nadal wartość gamma różnych kategorii pióra.  
  
   
  
## Examples  
 Dla przykładu kodu zobacz <xref:System.Drawing.Imaging.ImageAttributes.SetNoOp> metody.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetOutputChannel">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Ustawia kanału danych wyjściowych CMYK (błękitny amarantowy żółty czarny).</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetOutputChannel">
      <MemberSignature Language="C#" Value="public void SetOutputChannel (System.Drawing.Imaging.ColorChannelFlag flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetOutputChannel(valuetype System.Drawing.Imaging.ColorChannelFlag flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.SetOutputChannel(System.Drawing.Imaging.ColorChannelFlag)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetOutputChannel (flags As ColorChannelFlag)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetOutputChannel(System::Drawing::Imaging::ColorChannelFlag flags);" />
      <MemberSignature Language="F#" Value="member this.SetOutputChannel : System.Drawing.Imaging.ColorChannelFlag -&gt; unit" Usage="imageAttributes.SetOutputChannel flags" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="flags" Type="System.Drawing.Imaging.ColorChannelFlag" />
      </Parameters>
      <Docs>
        <param name="flags">Element <see cref="T:System.Drawing.Imaging.ColorChannelFlag" /> określający kanału danych wyjściowych.</param>
        <summary>Ustawia kanału danych wyjściowych CMYK (błękitny amarantowy żółty czarny) dla kategorii domyślne.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Możesz użyć <xref:System.Drawing.Imaging.ImageAttributes.SetOutputChannel%2A> metodą Konwertuj obraz na przestrzeni kolorów CMYK i zbadać intensywność CMYK kanałów koloru. Załóżmy na przykład, możesz utworzyć <xref:System.Drawing.Imaging.ImageAttributes> obiektu i ustaw jej kanału danych wyjściowych mapę bitową <xref:System.Drawing.Imaging.ColorChannelFlag.ColorChannelC>. W przypadku przekazania ścieżki tego <xref:System.Drawing.Imaging.ImageAttributes> obiekt <xref:System.Drawing.Graphics.DrawImage%2A> metody, obliczana jest składnik cyjan każdego piksela, a każdego piksela na renderowanym obrazie jest odcień szarości wskazującą intensywność jej cyjan kanału. Podobnie umożliwiający renderowanie obrazów, które wskazują intensywność amarantowy, kanałów lub.  
  
 <xref:System.Drawing.Imaging.ImageAttributes> Obiekt zachowuje kolorowych i szarych ustawienia na pięć kategorii dopasowania: domyślny, mapy bitowej, pędzla, pióra i tekst. Na przykład można określić kanału dla kategorii domyślne i kanału danych wyjściowych inne niż dla kategorii mapy bitowej.  
  
 Domyślne ustawienia dopasowanie koloru i dostosowanie skali szarości dotyczą wszystkie kategorie, które nie mają ustawień dopasowania we własnym. Na przykład jeśli nigdy nie określono żadnych ustawień dopasowania dla kategorii mapy bitowej, domyślne ustawienia dotyczą kategorii mapy bitowej.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje sposób używania <xref:System.Drawing.Imaging.ImageAttributes.SetOutputChannel%2A> metody. Aby uruchomić ten przykład, wklej następujący kod do formularza Windows. Obsługa formularzy <xref:System.Windows.Forms.Control.Paint> zdarzenia i wywołania `ShowOutputChannels`, przekazując `e` jako <xref:System.Windows.Forms.PaintEventArgs>.  
  
 [!code-csharp[System.Drawing.Misc3#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Misc3/CS/Form1.cs#4)]
 [!code-vb[System.Drawing.Misc3#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Misc3/VB/Form1.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetOutputChannel">
      <MemberSignature Language="C#" Value="public void SetOutputChannel (System.Drawing.Imaging.ColorChannelFlag flags, System.Drawing.Imaging.ColorAdjustType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetOutputChannel(valuetype System.Drawing.Imaging.ColorChannelFlag flags, valuetype System.Drawing.Imaging.ColorAdjustType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.SetOutputChannel(System.Drawing.Imaging.ColorChannelFlag,System.Drawing.Imaging.ColorAdjustType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetOutputChannel (flags As ColorChannelFlag, type As ColorAdjustType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetOutputChannel(System::Drawing::Imaging::ColorChannelFlag flags, System::Drawing::Imaging::ColorAdjustType type);" />
      <MemberSignature Language="F#" Value="member this.SetOutputChannel : System.Drawing.Imaging.ColorChannelFlag * System.Drawing.Imaging.ColorAdjustType -&gt; unit" Usage="imageAttributes.SetOutputChannel (flags, type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="flags" Type="System.Drawing.Imaging.ColorChannelFlag" />
        <Parameter Name="type" Type="System.Drawing.Imaging.ColorAdjustType" />
      </Parameters>
      <Docs>
        <param name="flags">Element <see cref="T:System.Drawing.Imaging.ColorChannelFlag" /> określający kanału danych wyjściowych.</param>
        <param name="type">Element <see cref="T:System.Drawing.Imaging.ColorAdjustType" /> określający Kategoria, dla którego ustawiono kanału danych wyjściowych.</param>
        <summary>Ustawia kanału danych wyjściowych CMYK (błękitny amarantowy żółty czarny) dla określonej kategorii.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Możesz użyć <xref:System.Drawing.Imaging.ImageAttributes.SetOutputChannel%2A> metodą Konwertuj obraz na przestrzeni kolorów CMYK i zbadać intensywność CMYK kanałów koloru. Załóżmy na przykład, możesz utworzyć <xref:System.Drawing.Imaging.ImageAttributes> obiektu i ustaw jej kanału danych wyjściowych mapę bitową <xref:System.Drawing.Imaging.ColorChannelFlag.ColorChannelC>. W przypadku przekazania ścieżki tego <xref:System.Drawing.Imaging.ImageAttributes> obiekt <xref:System.Drawing.Graphics.DrawImage%2A> metody, obliczana jest składnik cyjan każdego piksela, a każdego piksela na renderowanym obrazie jest odcień szarości wskazującą intensywność jej cyjan kanału. Podobnie umożliwiający renderowanie obrazów, które wskazują intensywność amarantowy, kanałów lub.  
  
 <xref:System.Drawing.Imaging.ImageAttributes> Obiekt zachowuje kolorowych i szarych ustawienia na pięć kategorii dopasowania: domyślny, mapy bitowej, pędzla, pióra i tekst. Na przykład można określić kanału dla kategorii domyślne i kanału danych wyjściowych inne niż dla kategorii mapy bitowej.  
  
 Domyślne ustawienia dopasowanie koloru i dostosowanie skali szarości dotyczą wszystkie kategorie, które nie mają ustawień dopasowania we własnym. Na przykład jeśli nigdy nie określono żadnych ustawień dopasowania dla kategorii mapy bitowej, domyślne ustawienia dotyczą kategorii mapy bitowej.  
  
 Jak najszybciej po określeniu dopasowanie koloru lub ustawienie skali szarości dopasowania dla określonej kategorii, domyślne ustawienia dostosowania przestaną obowiązywać do tej kategorii. Na przykład załóżmy, że należy określić kolekcję ustawień dopasowania dla kategorii domyślne. Jeśli ustawisz kanału danych wyjściowych dla kategorii mapy bitowej, przekazując <xref:System.Drawing.Imaging.ColorAdjustType.Bitmap> do <xref:System.Drawing.Imaging.ImageAttributes.SetOutputChannel%2A> metody, Brak domyślnych ustawień korekty będą dotyczyć map bitowych.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje sposób używania <xref:System.Drawing.Imaging.ImageAttributes.SetOutputChannel%2A> metody. Aby uruchomić ten przykład, wklej następujący kod do formularza Windows. Obsługa formularzy <xref:System.Windows.Forms.Control.Paint> zdarzenia i wywołania `ShowOutputChannels`, przekazując `e` jako <xref:System.Windows.Forms.PaintEventArgs>.  
  
 [!code-csharp[System.Drawing.Misc3#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Misc3/CS/Form1.cs#4)]
 [!code-vb[System.Drawing.Misc3#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Misc3/VB/Form1.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetOutputChannelColorProfile">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Ustawia plik profilu kolorów kanału danych wyjściowych.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetOutputChannelColorProfile">
      <MemberSignature Language="C#" Value="public void SetOutputChannelColorProfile (string colorProfileFilename);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetOutputChannelColorProfile(string colorProfileFilename) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.SetOutputChannelColorProfile(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetOutputChannelColorProfile (colorProfileFilename As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetOutputChannelColorProfile(System::String ^ colorProfileFilename);" />
      <MemberSignature Language="F#" Value="member this.SetOutputChannelColorProfile : string -&gt; unit" Usage="imageAttributes.SetOutputChannelColorProfile colorProfileFilename" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="colorProfileFilename" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="colorProfileFilename">Nazwa ścieżki pliku profilu kolorów. Jeśli plik profilu kolorów znajduje się w katalogu %SystemRoot%\System32\Spool\Drivers\Color, ten parametr może być nazwą pliku. W przeciwnym razie ten parametr musi być w pełni kwalifikowana nazwa.</param>
        <summary>Ustawia plik wyjściowy kanału profilu kolorów dla kategorii domyślne.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Możesz użyć <xref:System.Drawing.Imaging.ImageAttributes.SetOutputChannel%2A> i <xref:System.Drawing.Imaging.ImageAttributes.SetOutputChannelColorProfile%2A> metody Konwertuj obraz na przestrzeni kolorów CMYK (błękitny amarantowy żółty czarny) i sprawdź intensywność CMYK kolor kanałów. Na przykład załóżmy, że możesz napisać kod, który wykonuje następujące czynności:  
  
1.  Utwórz <xref:System.Drawing.Image>.  
  
2.  Utwórz <xref:System.Drawing.Imaging.ImageAttributes> obiektu.  
  
3.  Przekaż <xref:System.Drawing.Imaging.ColorChannelFlag.ColorChannelC> do <xref:System.Drawing.Imaging.ImageAttributes.SetOutputChannel%2A> metody <xref:System.Drawing.Imaging.ImageAttributes> obiektu.  
  
4.  Przekaż nazwę ścieżki pliku profilu kolorów do <xref:System.Drawing.Imaging.ImageAttributes.SetOutputChannelColorProfile%2A> metody <xref:System.Drawing.Imaging.ImageAttributes> obiektu.  
  
5.  Przekaż ścieżki <xref:System.Drawing.Image> i <xref:System.Drawing.Imaging.ImageAttributes> obiekty do <xref:System.Drawing.Graphics.DrawImage%2A> metody.  
  
 [!INCLUDE[ndptecgdiplus](~/includes/ndptecgdiplus-md.md)] będzie używać pliku profilu kolorów do obliczania cyjan składnika każdego piksela na obrazie, a każdy piksel w renderowanym obrazie będzie odcień szarości wskazującą intensywność jej cyjan kanału.  
  
 <xref:System.Drawing.Imaging.ImageAttributes> Obiekt zachowuje kolorowych i szarych ustawienia na pięć kategorii dopasowania: domyślny, mapy bitowej, pędzla, pióra i tekst. Na przykład można określić plik wyjściowy kanału profilu kolorów dla kategorii domyślne i innym pliku wyjściowym. kanał profilu kolorów dla kategorii mapy bitowej.  
  
 Domyślne ustawienia dopasowanie koloru i dostosowanie skali szarości dotyczą wszystkie kategorie, które nie mają ustawień dopasowania we własnym. Na przykład jeśli nigdy nie określono żadnych ustawień dopasowania dla kategorii mapy bitowej, domyślne ustawienia dotyczą kategorii mapy bitowej.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetOutputChannelColorProfile">
      <MemberSignature Language="C#" Value="public void SetOutputChannelColorProfile (string colorProfileFilename, System.Drawing.Imaging.ColorAdjustType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetOutputChannelColorProfile(string colorProfileFilename, valuetype System.Drawing.Imaging.ColorAdjustType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.SetOutputChannelColorProfile(System.String,System.Drawing.Imaging.ColorAdjustType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetOutputChannelColorProfile (colorProfileFilename As String, type As ColorAdjustType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetOutputChannelColorProfile(System::String ^ colorProfileFilename, System::Drawing::Imaging::ColorAdjustType type);" />
      <MemberSignature Language="F#" Value="member this.SetOutputChannelColorProfile : string * System.Drawing.Imaging.ColorAdjustType -&gt; unit" Usage="imageAttributes.SetOutputChannelColorProfile (colorProfileFilename, type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="colorProfileFilename" Type="System.String" />
        <Parameter Name="type" Type="System.Drawing.Imaging.ColorAdjustType" />
      </Parameters>
      <Docs>
        <param name="colorProfileFilename">Nazwa ścieżki pliku profilu kolorów. Jeśli plik profilu kolorów znajduje się w katalogu %SystemRoot%\System32\Spool\Drivers\Color, ten parametr może być nazwą pliku. W przeciwnym razie ten parametr musi być w pełni kwalifikowana nazwa.</param>
        <param name="type">Element <see cref="T:System.Drawing.Imaging.ColorAdjustType" /> określający Kategoria, dla którego ustawiono pliku profilu kolorów kanału danych wyjściowych.</param>
        <summary>Ustawia plik wyjściowy kanału profilu kolorów dla określonej kategorii.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Możesz użyć <xref:System.Drawing.Imaging.ImageAttributes.SetOutputChannel%2A> i <xref:System.Drawing.Imaging.ImageAttributes.SetOutputChannelColorProfile%2A> metody Konwertuj obraz na przestrzeni kolorów CMYK (błękitny amarantowy żółty czarny) i sprawdź intensywność CMYK kolor kanałów. Na przykład załóżmy, że możesz napisać kod, który wykonuje następujące czynności:  
  
1.  Utwórz <xref:System.Drawing.Image>.  
  
2.  Utwórz <xref:System.Drawing.Imaging.ImageAttributes> obiektu.  
  
3.  Przekaż <xref:System.Drawing.Imaging.ColorChannelFlag.ColorChannelC> do <xref:System.Drawing.Imaging.ImageAttributes.SetOutputChannel%2A> metody <xref:System.Drawing.Imaging.ImageAttributes> obiektu.  
  
4.  Przekaż nazwę ścieżki pliku profilu kolorów do <xref:System.Drawing.Imaging.ImageAttributes.SetOutputChannelColorProfile%2A> metody <xref:System.Drawing.Imaging.ImageAttributes> obiektu.  
  
5.  Przekaż ścieżki <xref:System.Drawing.Image> i <xref:System.Drawing.Imaging.ImageAttributes> obiekty do <xref:System.Drawing.Graphics.DrawImage%2A> metody.  
  
 [!INCLUDE[ndptecgdiplus](~/includes/ndptecgdiplus-md.md)] będzie używać pliku profilu kolorów do obliczania cyjan składnika każdego piksela na obrazie, a każdy piksel w renderowanym obrazie będzie odcień szarości wskazującą intensywność jej cyjan kanału.  
  
 <xref:System.Drawing.Imaging.ImageAttributes> Obiekt zachowuje kolorowych i szarych ustawienia na pięć kategorii dopasowania: domyślny, mapy bitowej, pędzla, pióra i tekst. Na przykład można określić plik wyjściowy kanału profilu kolorów dla kategorii domyślne i innym pliku wyjściowym. kanał profilu kolorów dla kategorii mapy bitowej.  
  
 Domyślne ustawienia dopasowanie koloru i dostosowanie skali szarości dotyczą wszystkie kategorie, które nie mają ustawień dopasowania we własnym. Na przykład jeśli nigdy nie określono żadnych ustawień dopasowania dla kategorii mapy bitowej, domyślne ustawienia dotyczą kategorii mapy bitowej.  
  
 Jak najszybciej po określeniu dopasowanie koloru lub ustawienie skali szarości dopasowania dla określonej kategorii, domyślne ustawienia dostosowania przestaną obowiązywać do tej kategorii. Na przykład załóżmy, że należy określić kolekcję ustawień dopasowania dla kategorii domyślne. Jeśli zostanie ustawiona, przekazując plik wyjściowy kanału profilu kolorów dla kategorii mapy bitowej <xref:System.Drawing.Imaging.ColorAdjustType.Bitmap> do <xref:System.Drawing.Imaging.ImageAttributes.SetOutputChannelColorProfile%2A> metody, Brak domyślnych ustawień korekty będą dotyczyć map bitowych.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetRemapTable">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Ustawia tabeli ponownego mapowania kolorów.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetRemapTable">
      <MemberSignature Language="C#" Value="public void SetRemapTable (System.Drawing.Imaging.ColorMap[] map);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetRemapTable(class System.Drawing.Imaging.ColorMap[] map) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.SetRemapTable(System.Drawing.Imaging.ColorMap[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetRemapTable (map As ColorMap())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetRemapTable(cli::array &lt;System::Drawing::Imaging::ColorMap ^&gt; ^ map);" />
      <MemberSignature Language="F#" Value="member this.SetRemapTable : System.Drawing.Imaging.ColorMap[] -&gt; unit" Usage="imageAttributes.SetRemapTable map" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="map" Type="System.Drawing.Imaging.ColorMap[]" />
      </Parameters>
      <Docs>
        <param name="map">Tablica par kolor typu <see cref="T:System.Drawing.Imaging.ColorMap" />. Każda para kolor zawiera istniejącego koloru (pierwsza wartość) i kolorów, że zostaną zmapowane do (druga wartość).</param>
        <summary>Ustawia tabeli ponownego mapowania kolorów dla kategorii domyślne.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Tabeli ponownego mapowania kolorów jest tablicą <xref:System.Drawing.Imaging.ColorMap> struktury. Każdy <xref:System.Drawing.Imaging.ColorMap> struktura ma dwa <xref:System.Drawing.Color> obiektów: taki, który określa stary kolor i taki, który określa nowy odpowiedni kolor. Podczas renderowania, dowolny kolor, który pasuje do jednej tabeli ponownego mapowania kolorów stare jest zmieniany na odpowiedniej nowy kolor.  
  
 <xref:System.Drawing.Imaging.ImageAttributes> Obiekt zachowuje kolorowych i szarych ustawienia na pięć kategorii dopasowania: domyślny, mapy bitowej, pędzla, pióra i tekst. Na przykład można określić ponowne mapowanie kolorów dla domyślnej kategorii, tabeli ponownego mapowania kolorów dla kategorii mapy bitowej i nadal tabelę ponowne mapowanie innego koloru dla kategorii pióra.  
  
 Domyślne ustawienia dopasowanie koloru i dostosowanie skali szarości dotyczą wszystkie kategorie, które nie mają ustawień dopasowania we własnym. Na przykład jeśli nigdy nie określono żadnych ustawień dopasowania dla kategorii pióra, domyślne ustawienia dotyczą kategorii pióra.  
  
   
  
## Examples  
 Poniższy przykład kodu jest przeznaczony do użytku z formularzami Windows Forms i wymaga <xref:System.Windows.Forms.PaintEventArgs> `e`, czyli parametrem <xref:System.Windows.Forms.Control.Paint> programu obsługi zdarzeń. Kod wykonuje następujące czynności:  
  
1.  Tworzy obraz (czerwone kółko), zapisuje go jako Circle2.jpg, spowoduje otwarcie tego obrazu i pobiera je do ekranu.  
  
2.  Tworzy mapę kolorów, która mapuje koloru czerwonego do zielonego kolorów.  
  
3.  Rysuje obraz utworzony wcześniej do ekranu, ponownie, ale tym razem z użyciem mapowania kolorów.  
  
 [!code-cpp[System.Drawing.ClassicImaging.ImageAttributes#6](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicImaging.ImageAttributes/CPP/form1.cpp#6)]
 [!code-csharp[System.Drawing.ClassicImaging.ImageAttributes#6](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicImaging.ImageAttributes/CS/form1.cs#6)]
 [!code-vb[System.Drawing.ClassicImaging.ImageAttributes#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicImaging.ImageAttributes/VB/form1.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetRemapTable">
      <MemberSignature Language="C#" Value="public void SetRemapTable (System.Drawing.Imaging.ColorMap[] map, System.Drawing.Imaging.ColorAdjustType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetRemapTable(class System.Drawing.Imaging.ColorMap[] map, valuetype System.Drawing.Imaging.ColorAdjustType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.SetRemapTable(System.Drawing.Imaging.ColorMap[],System.Drawing.Imaging.ColorAdjustType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetRemapTable (map As ColorMap(), type As ColorAdjustType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetRemapTable(cli::array &lt;System::Drawing::Imaging::ColorMap ^&gt; ^ map, System::Drawing::Imaging::ColorAdjustType type);" />
      <MemberSignature Language="F#" Value="member this.SetRemapTable : System.Drawing.Imaging.ColorMap[] * System.Drawing.Imaging.ColorAdjustType -&gt; unit" Usage="imageAttributes.SetRemapTable (map, type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="map" Type="System.Drawing.Imaging.ColorMap[]" />
        <Parameter Name="type" Type="System.Drawing.Imaging.ColorAdjustType" />
      </Parameters>
      <Docs>
        <param name="map">Tablica par kolor typu <see cref="T:System.Drawing.Imaging.ColorMap" />. Każda para kolor zawiera istniejącego koloru (pierwsza wartość) i kolorów, że zostaną zmapowane do (druga wartość).</param>
        <param name="type">Element <see cref="T:System.Drawing.Imaging.ColorAdjustType" /> określający Kategoria, dla którego ustawiono tabeli ponownego mapowania kolorów.</param>
        <summary>Ustawia tabeli ponownego mapowania kolorów dla określonej kategorii.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Tabeli ponownego mapowania kolorów jest tablicą <xref:System.Drawing.Imaging.ColorMap> struktury. Każdy <xref:System.Drawing.Imaging.ColorMap> struktura ma dwa <xref:System.Drawing.Color> obiektów: taki, który określa stary kolor i taki, który określa nowy odpowiedni kolor. Podczas renderowania, dowolny kolor, który pasuje do jednej tabeli ponownego mapowania kolorów stare jest zmieniany na odpowiedniej nowy kolor.  
  
 <xref:System.Drawing.Imaging.ImageAttributes> Obiekt zachowuje kolorowych i szarych ustawienia na pięć kategorii dopasowania: domyślny, mapy bitowej, pędzla, pióra i tekst. Na przykład można określić ponowne mapowanie kolorów dla domyślnej kategorii, tabeli ponownego mapowania kolorów dla kategorii mapy bitowej i nadal tabelę ponowne mapowanie innego koloru dla kategorii pióra.  
  
 Domyślne ustawienia dopasowanie koloru i dostosowanie skali szarości dotyczą wszystkie kategorie, które nie mają ustawień dopasowania we własnym. Na przykład jeśli nigdy nie określono żadnych ustawień dopasowania dla kategorii pióra, domyślne ustawienia dotyczą kategorii pióra.  
  
 Jak najszybciej po określeniu dopasowanie koloru lub ustawienie skali szarości dopasowania dla określonej kategorii, domyślne ustawienia dostosowania przestaną obowiązywać do tej kategorii. Na przykład załóżmy, że należy określić kolekcję ustawień dopasowania dla kategorii domyślne. Jeśli ustawisz tabeli ponownego mapowania kolorów dla kategorii pióra przez przekazanie <xref:System.Drawing.Imaging.ColorAdjustType.Pen> do <xref:System.Drawing.Imaging.ImageAttributes.SetRemapTable%2A> metody, Brak domyślnych ustawień korekty będą dotyczyć pióra.  
  
   
  
## Examples  
 Dla przykładu kodu zobacz <xref:System.Drawing.Imaging.ImageAttributes.SetRemapTable%28System.Drawing.Imaging.ColorMap%5B%5D%29> metody.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetThreshold">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Ustawia wartość progową (zakres przezroczystości).</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetThreshold">
      <MemberSignature Language="C#" Value="public void SetThreshold (float threshold);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetThreshold(float32 threshold) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.SetThreshold(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetThreshold (threshold As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetThreshold(float threshold);" />
      <MemberSignature Language="F#" Value="member this.SetThreshold : single -&gt; unit" Usage="imageAttributes.SetThreshold threshold" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="threshold" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="threshold">Liczba rzeczywista, która określa wartość progową.</param>
        <summary>Ustawia próg na wartość (zakres przezroczystości) dla kategorii domyślne.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Próg wynosi wartość z zakresu od 0 do 1, która określa punkt odcięcia dla każdego składnika koloru. Na przykład załóżmy, że ustawiono wartość progową 0,7 i Załóżmy, że kolor są renderowanie którego czerwony, zielony i niebieski składniki są 230, 50 i 220, odpowiednio. Składnik czerwony (230) jest większa niż 0.7x255, dzięki czemu składnik czerwony zostaną zmienione na wartość 255 (pełnej intensywności). Składnik zielony (50), jest mniejsza niż 0.7x255, więc składnik zielony zostanie zmieniony na 0. Składnik niebieski (220) jest większa niż 0.7x255, dzięki czemu składnik niebieski zostaną zmienione na wartość 255.  
  
 <xref:System.Drawing.Imaging.ImageAttributes> Obiekt zachowuje kolorowych i szarych ustawienia na pięć kategorii dopasowania: domyślny, mapy bitowej, pędzla, pióra i tekst. Na przykład można określić próg dla kategorii domyślny próg dla kategorii mapy bitowej i nadal różnych wartości progowej dla kategorii pióra.  
  
 Domyślne ustawienia dopasowanie koloru i dostosowanie skali szarości dotyczą wszystkie kategorie, które nie mają ustawień dopasowania we własnym. Na przykład jeśli nigdy nie określono żadnych ustawień dopasowania dla kategorii pióra, domyślne ustawienia dotyczą kategorii pióra.  
  
   
  
## Examples  
 Poniższy przykład kodu jest przeznaczony do użytku z formularzami Windows Forms i wymaga <xref:System.Windows.Forms.PaintEventArgs> `e`, czyli parametrem <xref:System.Windows.Forms.Control.Paint> programu obsługi zdarzeń. Kod wykonuje następujące czynności:  
  
1.  Otwiera <xref:System.Drawing.Image> i pobiera je do ekranu.  
  
2.  Tworzy <xref:System.Drawing.Imaging.ImageAttributes> obiektu i ustawia przekroczyła wartość progową przy użyciu <xref:System.Drawing.Imaging.ImageAttributes.SetThreshold%2A> metody.  
  
3.  Rysuje obraz na ekranie przy użyciu progu <xref:System.Drawing.Imaging.ImageAttributes> obiektu.  
  
 [!code-cpp[System.Drawing.ClassicImaging.ImageAttributes#7](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicImaging.ImageAttributes/CPP/form1.cpp#7)]
 [!code-csharp[System.Drawing.ClassicImaging.ImageAttributes#7](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicImaging.ImageAttributes/CS/form1.cs#7)]
 [!code-vb[System.Drawing.ClassicImaging.ImageAttributes#7](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicImaging.ImageAttributes/VB/form1.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetThreshold">
      <MemberSignature Language="C#" Value="public void SetThreshold (float threshold, System.Drawing.Imaging.ColorAdjustType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetThreshold(float32 threshold, valuetype System.Drawing.Imaging.ColorAdjustType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.SetThreshold(System.Single,System.Drawing.Imaging.ColorAdjustType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetThreshold (threshold As Single, type As ColorAdjustType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetThreshold(float threshold, System::Drawing::Imaging::ColorAdjustType type);" />
      <MemberSignature Language="F#" Value="member this.SetThreshold : single * System.Drawing.Imaging.ColorAdjustType -&gt; unit" Usage="imageAttributes.SetThreshold (threshold, type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="threshold" Type="System.Single" />
        <Parameter Name="type" Type="System.Drawing.Imaging.ColorAdjustType" />
      </Parameters>
      <Docs>
        <param name="threshold">Wartość progowa, od 0,0 do 1,0, który służy jako punkt przerwania, aby kolorów sortowania, które zostanie zamapowane do maksymalnej lub minimalnej wartości.</param>
        <param name="type">Element <see cref="T:System.Drawing.Imaging.ColorAdjustType" /> określający Kategoria, dla którego ustawiono wartość progową kolorów.</param>
        <summary>Ustawia wartość progową (zakres przezroczystości) dla określonej kategorii.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Próg wynosi wartość z zakresu od 0 do 1, która określa punkt odcięcia dla każdego składnika koloru. Na przykład załóżmy, że ustawiono wartość progową 0,7 i Załóżmy, że kolor są renderowanie którego czerwony, zielony i niebieski składniki są 230, 50 i 220, odpowiednio. Składnik czerwony (230) jest większa niż 0.7x255, dzięki czemu składnik czerwony zostaną zmienione na wartość 255 (pełnej intensywności). Składnik zielony (50), jest mniejsza niż 0.7x255, więc składnik zielony zostanie zmieniony na 0. Składnik niebieski (220) jest większa niż 0.7x255, dzięki czemu składnik niebieski zostaną zmienione na wartość 255.  
  
 <xref:System.Drawing.Imaging.ImageAttributes> Obiekt zachowuje kolorowych i szarych ustawienia na pięć kategorii dopasowania: domyślny, mapy bitowej, pędzla, pióra i tekst. Na przykład można określić próg dla kategorii domyślny próg dla kategorii mapy bitowej i nadal różnych wartości progowej dla kategorii pióra.  
  
 Domyślne ustawienia dopasowanie koloru i dostosowanie skali szarości dotyczą wszystkie kategorie, które nie mają ustawień dopasowania we własnym. Na przykład jeśli nigdy nie określono żadnych ustawień dopasowania dla kategorii pióra, domyślne ustawienia dotyczą kategorii pióra.  
  
 Jak najszybciej po określeniu dopasowanie koloru lub ustawienie skali szarości dopasowania dla określonej kategorii, domyślne ustawienia dostosowania przestaną obowiązywać do tej kategorii. Na przykład załóżmy, że należy określić kolekcję ustawień dopasowania dla kategorii domyślne. Jeśli ustawisz wartość progową dla kategorii pióra przez przekazanie <xref:System.Drawing.Imaging.ColorAdjustType.Pen> do <xref:System.Drawing.Imaging.ImageAttributes.SetThreshold%2A> metody, Brak domyślnych ustawień korekty będą dotyczyć pióra.  
  
   
  
## Examples  
 Dla przykładu kodu zobacz <xref:System.Drawing.Imaging.ImageAttributes.SetThreshold%28System.Single%29> metody.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetWrapMode">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Ustawia tryb zawijania.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetWrapMode">
      <MemberSignature Language="C#" Value="public void SetWrapMode (System.Drawing.Drawing2D.WrapMode mode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetWrapMode(valuetype System.Drawing.Drawing2D.WrapMode mode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.SetWrapMode(System.Drawing.Drawing2D.WrapMode)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetWrapMode (mode As WrapMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetWrapMode(System::Drawing::Drawing2D::WrapMode mode);" />
      <MemberSignature Language="F#" Value="member this.SetWrapMode : System.Drawing.Drawing2D.WrapMode -&gt; unit" Usage="imageAttributes.SetWrapMode mode" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mode" Type="System.Drawing.Drawing2D.WrapMode" />
      </Parameters>
      <Docs>
        <param name="mode">Element <see cref="T:System.Drawing.Drawing2D.WrapMode" /> , który określa sposób powtarzających się kopii obrazu są używane do kafelka obszar.</param>
        <summary>Ustawia tryb zawijania, który służy do określania sposobu Kafelek tekstury w kształcie lub na granicach kształtu. Tekstura jest rozmieszczany na kształt, aby wypełnić, jeśli tekstura jest mniejszy niż kształt, który jest jego wypełnianie.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wywoływanie <xref:System.Drawing.Imaging.ImageAttributes.SetWrapMode%28System.Drawing.Drawing2D.WrapMode%29> metodą jest równoważne z wywoływaniem <xref:System.Drawing.Imaging.ImageAttributes.SetWrapMode%28System.Drawing.Drawing2D.WrapMode%2CSystem.Drawing.Color%29> i przekazanie <xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType> dla `color` parametru. <xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType> Określa kolor pikseli poza renderowanym obrazie. Kolor ten jest widoczny, jeśli ustawiono parametr trybu <xref:System.Drawing.Drawing2D.WrapMode.Clamp> i prostokąta źródłowego przekazane do <xref:System.Drawing.Graphics.DrawImage%2A> metody jest większy niż sam obraz.  
  
   
  
## Examples  
 Poniższy przykład kodu jest przeznaczony do użytku z formularzami Windows Forms i wymaga <xref:System.Windows.Forms.PaintEventArgs> `e`, czyli parametrem <xref:System.Windows.Forms.Control.Paint> programu obsługi zdarzeń. Kod wykonuje następujące czynności:  
  
1.  Otwiera <xref:System.Drawing.Image> z Circle3.jpg pliku (małe, wypełnione czerwone kółko) i pobiera je do ekranu.  
  
2.  Tworzy <xref:System.Drawing.Imaging.ImageAttributes> i ustawia <xref:System.Drawing.Drawing2D.WrapMode> wyliczeniu, aby <xref:System.Drawing.Drawing2D.WrapMode.Tile>.  
  
3.  Tworzy <xref:System.Drawing.TextureBrush> przy użyciu obrazu z pliku Circle3.jpg.  
  
4.  Rysuje prostokąt do ekranu, który zostanie wypełniony kolorem małe, wypełnione czerwonego kółka.  
  
 [!code-cpp[System.Drawing.ClassicImaging.ImageAttributes#8](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicImaging.ImageAttributes/CPP/form1.cpp#8)]
 [!code-csharp[System.Drawing.ClassicImaging.ImageAttributes#8](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicImaging.ImageAttributes/CS/form1.cs#8)]
 [!code-vb[System.Drawing.ClassicImaging.ImageAttributes#8](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicImaging.ImageAttributes/VB/form1.vb#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetWrapMode">
      <MemberSignature Language="C#" Value="public void SetWrapMode (System.Drawing.Drawing2D.WrapMode mode, System.Drawing.Color color);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetWrapMode(valuetype System.Drawing.Drawing2D.WrapMode mode, valuetype System.Drawing.Color color) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.SetWrapMode(System.Drawing.Drawing2D.WrapMode,System.Drawing.Color)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetWrapMode(System::Drawing::Drawing2D::WrapMode mode, System::Drawing::Color color);" />
      <MemberSignature Language="F#" Value="member this.SetWrapMode : System.Drawing.Drawing2D.WrapMode * System.Drawing.Color -&gt; unit" Usage="imageAttributes.SetWrapMode (mode, color)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mode" Type="System.Drawing.Drawing2D.WrapMode" />
        <Parameter Name="color" Type="System.Drawing.Color" />
      </Parameters>
      <Docs>
        <param name="mode">Element <see cref="T:System.Drawing.Drawing2D.WrapMode" /> , który określa sposób powtarzających się kopii obrazu są używane do kafelka obszar.</param>
        <param name="color"><see cref="T:System.Drawing.Imaging.ImageAttributes" /> Obiekt, który określa kolor pikseli poza renderowanym obrazie. Kolor ten jest widoczny, jeśli ustawiono parametr trybu <see cref="F:System.Drawing.Drawing2D.WrapMode.Clamp" /> i prostokąta źródłowego przekazane do <see cref="Overload:System.Drawing.Graphics.DrawImage" /> jest większy niż sam obraz.</param>
        <summary>Ustawia tryb zawijania i kolor używany do określania, jak Kafelek tekstury w kształcie lub na granicach kształtu. Tekstura jest rozmieszczany na kształt, aby wypełnić, jeśli tekstura jest mniejszy niż kształt, który jest jego wypełnianie.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Dla przykładu kodu zobacz <xref:System.Drawing.Imaging.ImageAttributes.SetWrapMode%28System.Drawing.Drawing2D.WrapMode%29> metody.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetWrapMode">
      <MemberSignature Language="C#" Value="public void SetWrapMode (System.Drawing.Drawing2D.WrapMode mode, System.Drawing.Color color, bool clamp);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetWrapMode(valuetype System.Drawing.Drawing2D.WrapMode mode, valuetype System.Drawing.Color color, bool clamp) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.SetWrapMode(System.Drawing.Drawing2D.WrapMode,System.Drawing.Color,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetWrapMode(System::Drawing::Drawing2D::WrapMode mode, System::Drawing::Color color, bool clamp);" />
      <MemberSignature Language="F#" Value="member this.SetWrapMode : System.Drawing.Drawing2D.WrapMode * System.Drawing.Color * bool -&gt; unit" Usage="imageAttributes.SetWrapMode (mode, color, clamp)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mode" Type="System.Drawing.Drawing2D.WrapMode" />
        <Parameter Name="color" Type="System.Drawing.Color" />
        <Parameter Name="clamp" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="mode">Element <see cref="T:System.Drawing.Drawing2D.WrapMode" /> , który określa sposób powtarzających się kopii obrazu są używane do kafelka obszar.</param>
        <param name="color">Obiekt color, który określa kolor pikseli poza wyrenderowany obraz. Kolor ten jest widoczny, jeśli ustawiono parametr trybu <see cref="F:System.Drawing.Drawing2D.WrapMode.Clamp" /> i prostokąta źródłowego przekazane do <see cref="Overload:System.Drawing.Graphics.DrawImage" /> jest większy niż sam obraz.</param>
        <param name="clamp">Ten parametr nie ma znaczenia. Ustaw ją na <see langword="false" />.</param>
        <summary>Ustawia tryb zawijania i kolor używany do określania, jak Kafelek tekstury w kształcie lub na granicach kształtu. Tekstura jest rozmieszczany na kształt, aby wypełnić, jeśli tekstura jest mniejszy niż kształt, który jest jego wypełnianie.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Dla przykładu kodu zobacz <xref:System.Drawing.Imaging.ImageAttributes.SetWrapMode%28System.Drawing.Drawing2D.WrapMode%29> metody.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>