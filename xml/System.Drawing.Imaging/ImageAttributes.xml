<Type Name="ImageAttributes" FullName="System.Drawing.Imaging.ImageAttributes">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="b9b2e1c4e566c6435f9d002b5a5315e86a75aef4" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30452763" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class ImageAttributes : ICloneable, IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi sealed beforefieldinit ImageAttributes extends System.Object implements class System.ICloneable, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Drawing.Imaging.ImageAttributes" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ImageAttributes&#xA;Implements ICloneable, IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class ImageAttributes sealed : ICloneable, IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Drawing</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Zawiera informacje dotyczące sposobu kolorów mapy bitowej a metaplików dochodzi do zmiany zawartości podczas renderowania.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Drawing.Imaging.ImageAttributes> Obiekt zachowuje kilka ustawienia dopasowania Kolor, w tym macierzy kolorów dostosowania, macierze dostosowanie skali szarości, wartości korekcja gamma, tabele kolorów mapy i wartości progowe kolorów. Podczas renderowania, kolory można można poprawić, przyciemniony rozjaśniony i usunięte. Aby zastosować takie operacje, zainicjować <xref:System.Drawing.Imaging.ImageAttributes> obiektu i przekazać ścieżkę tego <xref:System.Drawing.Imaging.ImageAttributes> obiektu (wraz ze ścieżką <xref:System.Drawing.Image>) do <xref:System.Drawing.Graphics.DrawImage%2A> metody.  
  
   
  
## Examples  
 Poniższy przykład przyjmuje obrazu, który jest jeden kolor (0,2, 0.0, 0,4, 1.0) i symulacyjnych składnika czerwony dodaje 0,2 czerwony, zielonemu i niebieskiemu składników  
  
 Na poniższej ilustracji przedstawiono oryginalnego obrazu po lewej stronie i przekształcony obraz po prawej stronie.  
  
 ![Kolory](~/add/media/colortrans1.png "kolorów")  
  
 Kod w poniższym przykładzie przeprowadzić ponowne kolorowanie korzysta z następujące czynności:  
  
1.  Inicjowanie <xref:System.Drawing.Imaging.ColorMatrix> obiektu.  
  
2.  Utwórz <xref:System.Drawing.Imaging.ImageAttributes> obiektu i przekazać <xref:System.Drawing.Imaging.ColorMatrix> do obiektu <xref:System.Drawing.Imaging.ImageAttributes.SetColorMatrix%2A> metody <xref:System.Drawing.Imaging.ImageAttributes> obiektu.  
  
3.  Przekaż <xref:System.Drawing.Imaging.ImageAttributes> do obiektu <xref:System.Drawing.Graphics.DrawImage%2A> metody <xref:System.Drawing.Graphics> obiektu.  
  
 [!code-csharp[System.Drawing.RecoloringImages#21](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.RecoloringImages/CS/Class1.cs#21)]
 [!code-vb[System.Drawing.RecoloringImages#21](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.RecoloringImages/VB/Class1.vb#21)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ImageAttributes ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ImageAttributes();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Drawing.Imaging.ImageAttributes" /> klasy.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearBrushRemapTable">
      <MemberSignature Language="C#" Value="public void ClearBrushRemapTable ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ClearBrushRemapTable() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.ClearBrushRemapTable" />
      <MemberSignature Language="VB.NET" Value="Public Sub ClearBrushRemapTable ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ClearBrushRemapTable();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Czyści pędzla tabeli ponownego mapowania kolorów to <see cref="T:System.Drawing.Imaging.ImageAttributes" /> obiektu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Drawing.Imaging.ImageAttributes> Obiekt zachowuje ustawienia koloru i skali szarości na pięć kategorii dopasowania: domyślny, mapy bitowej pędzla, Pióro i tekst. Na przykład można określić jednej tabeli ponownego mapowania kolorów dla kategorii domyślnej tabeli ponowne mapowanie koloru różnych kategorii mapy bitowej i nadal tabeli ponowne mapowanie koloru różnych kategorii pędzla.  
  
 Ustawienia domyślne dopasowania Kolor i dostosowanie skali szarości dotyczą wszystkich kategorii, które nie mają ustawień dopasowania we własnym. Na przykład jeśli nigdy nie określono żadnych ustawień dopasowania dla kategorii pędzla, domyślne ustawienia dotyczą kategorii pędzla.  
  
 Natychmiast po określeniu dopasowywanie kolorów lub ustawienie skali szarości dopasowania dla określonej kategorii, domyślne ustawienia dostosowania nie dotyczą tej kategorii. Załóżmy na przykład, określ tabeli ponownego mapowania domyślny, który jest konwertowany na zielony red i określić domyślną wartość gamma 1.8. Jeśli należy wywołać <xref:System.Drawing.Imaging.ImageAttributes.SetBrushRemapTable%2A> — metoda, tabeli ponownego mapowania domyślne (kolor czerwony zielony) i wartość domyślną gamma (1.8) nie będą dotyczyły Pędzle. Jeśli później wywołać <xref:System.Drawing.Imaging.ImageAttributes.ClearBrushRemapTable%2A> metody, nie przywróci kategorii pędzla do tabeli ponownego mapowania domyślne; zamiast kategorii pędzel nie odniesie Brak tabeli ponownego mapowania. Podobnie kategorii pędzel nie przywróci domyślną wartość gamma; zamiast kategorii pędzel nie odniesie żadnej wartości gamma.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ClearColorKey">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Czyści klucz kolorów (przezroczystość zakres).</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ClearColorKey">
      <MemberSignature Language="C#" Value="public void ClearColorKey ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ClearColorKey() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.ClearColorKey" />
      <MemberSignature Language="VB.NET" Value="Public Sub ClearColorKey ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ClearColorKey();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Czyści klucz kolorów (przezroczystość zakres) dla domyślnej kategorii.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Drawing.Imaging.ImageAttributes> Obiekt zachowuje ustawienia koloru i skali szarości na pięć kategorii dopasowania: domyślny, mapy bitowej pędzla, Pióro i tekst. Na przykład można określić jeden klucz kolorów dla domyślnej kategorii, klucz kolorów dla kategorii mapy bitowej i nadal klucz kolorów dla kategorii pióra.  
  
 Ustawienia domyślne dopasowania Kolor i dostosowanie skali szarości dotyczą wszystkich kategorii, które nie mają ustawień dopasowania we własnym. Na przykład jeśli nigdy nie określono żadnych ustawień dopasowania dla kategorii pióra, domyślne ustawienia dotyczą kategorii pióra.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearColorKey">
      <MemberSignature Language="C#" Value="public void ClearColorKey (System.Drawing.Imaging.ColorAdjustType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ClearColorKey(valuetype System.Drawing.Imaging.ColorAdjustType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.ClearColorKey(System.Drawing.Imaging.ColorAdjustType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ClearColorKey (type As ColorAdjustType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ClearColorKey(System::Drawing::Imaging::ColorAdjustType type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Drawing.Imaging.ColorAdjustType" />
      </Parameters>
      <Docs>
        <param name="type">Element <see cref="T:System.Drawing.Imaging.ColorAdjustType" /> , który określa kategorii, dla którego klucz kolorów jest wyczyszczone.</param>
        <summary>Czyści klucz kolorów (przezroczystość zakres) dla określonej kategorii.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Drawing.Imaging.ImageAttributes> Obiekt zachowuje ustawienia koloru i skali szarości na pięć kategorii dopasowania: domyślny, mapy bitowej pędzla, Pióro i tekst. Na przykład można określić jeden klucz kolorów dla domyślnej kategorii, klucz kolorów dla kategorii mapy bitowej i nadal klucz kolorów dla kategorii pióra.  
  
 Ustawienia domyślne dopasowania Kolor i dostosowanie skali szarości dotyczą wszystkich kategorii, które nie mają ustawień dopasowania we własnym. Na przykład jeśli nigdy nie określono żadnych ustawień dopasowania dla kategorii pióra, domyślne ustawienia dotyczą kategorii pióra.  
  
 Natychmiast po określeniu dopasowywanie kolorów lub ustawienie skali szarości dopasowania dla określonej kategorii, domyślne ustawienia dostosowania nie dotyczą tej kategorii. Załóżmy na przykład określić domyślny klucz kolor sprawia, że wszystkie kolor czerwony składnika od 200 do 255 przezroczysty i określić domyślną wartość gamma 1.8. Jeśli klucz kolor pióra kategorii ustawiony przez wywołanie <xref:System.Drawing.Imaging.ImageAttributes.SetColorKey%2A> metody, domyślny kolor klucz i wartość domyślną, gamma nie będą dotyczyły pióra. Jeśli wyczyścisz później klucza kolor pióra przez wywołanie metody <xref:System.Drawing.Imaging.ImageAttributes.ClearColorKey%2A> metody kategorii pióro nie zostaną przywrócone do domyślny klucz kolor; zamiast kategorii pióro nie odniesie bez klucza kolorów. Podobnie kategorii pióro nie przywróci domyślną wartość gamma; zamiast kategorii pióro nie odniesie żadnej wartości gamma.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ClearColorMatrix">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Czyści macierzy kolorów dopasowania.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ClearColorMatrix">
      <MemberSignature Language="C#" Value="public void ClearColorMatrix ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ClearColorMatrix() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.ClearColorMatrix" />
      <MemberSignature Language="VB.NET" Value="Public Sub ClearColorMatrix ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ClearColorMatrix();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Czyści macierzy dopasowania Kolor dla domyślnej kategorii.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Drawing.Imaging.ImageAttributes> Obiekt zachowuje ustawienia koloru i skali szarości na pięć kategorii dopasowania: domyślny, mapy bitowej pędzla, Pióro i tekst. Na przykład można określić macierzy dopasowania Kolor dla domyślnej kategorii, macierzy różnych dopasowywanie kolorów mapy bitowej kategorii i nadal macierzy różnych dopasowania Kolor pióra kategorii.  
  
 Ustawienia domyślne dopasowania Kolor i dostosowanie skali szarości dotyczą wszystkich kategorii, które nie mają ustawień dopasowania we własnym. Na przykład jeśli nigdy nie określono żadnych ustawień dopasowania dla kategorii pióra, następnie domyślne ustawienia dotyczą kategorii pióra.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearColorMatrix">
      <MemberSignature Language="C#" Value="public void ClearColorMatrix (System.Drawing.Imaging.ColorAdjustType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ClearColorMatrix(valuetype System.Drawing.Imaging.ColorAdjustType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.ClearColorMatrix(System.Drawing.Imaging.ColorAdjustType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ClearColorMatrix (type As ColorAdjustType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ClearColorMatrix(System::Drawing::Imaging::ColorAdjustType type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Drawing.Imaging.ColorAdjustType" />
      </Parameters>
      <Docs>
        <param name="type">Element <see cref="T:System.Drawing.Imaging.ColorAdjustType" /> , który określa kategorii, dla którego macierz dopasowania Kolor jest wyczyszczone.</param>
        <summary>Czyści macierzy kolorów dopasowania dla określonej kategorii.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Drawing.Imaging.ImageAttributes> Obiekt zachowuje ustawienia koloru i skali szarości na pięć kategorii dopasowania: domyślny, mapy bitowej pędzla, Pióro i tekst. Na przykład można określić macierzy dopasowania Kolor dla domyślnej kategorii, macierzy różnych dopasowywanie kolorów mapy bitowej kategorii i nadal macierzy różnych dopasowania Kolor pióra kategorii.  
  
 Ustawienia domyślne dopasowania Kolor i dostosowanie skali szarości dotyczą wszystkich kategorii, które nie mają ustawień dopasowania we własnym. Na przykład jeśli nigdy nie określono żadnych ustawień dopasowania dla kategorii pióra, następnie domyślne ustawienia dotyczą kategorii pióra.  
  
 Natychmiast po określeniu dopasowywanie kolorów lub ustawienie skali szarości dopasowania dla określonej kategorii, domyślne ustawienia dostosowania nie dotyczą tej kategorii. Załóżmy na przykład określić macierzy kolorów dostosowania i gamma wartości domyślnej kategorii. Jeśli ustawisz macierzy kolorów dopasowania dla kategorii pióra przez wywołanie metody <xref:System.Drawing.Imaging.ImageAttributes.SetColorMatrix%2A> metody macierzy dopasowania Kolor domyślny nie będą dotyczyły pióra. Jeśli później wyczyścić macierzy dopasowania Kolor pióra przez wywołanie metody <xref:System.Drawing.Imaging.ImageAttributes.ClearColorMatrix%2A> metody kategorii pióra nie zostaną przywrócone do macierzy dostosowywania domyślnego; zamiast kategorii pióro nie odniesie żadnej macierzy dopasowania. Podobnie kategorii pióro nie przywróci domyślną wartość gamma; zamiast kategorii pióro nie odniesie żadnej wartości gamma.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ClearGamma">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Wyłącza korekcja gamma.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ClearGamma">
      <MemberSignature Language="C#" Value="public void ClearGamma ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ClearGamma() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.ClearGamma" />
      <MemberSignature Language="VB.NET" Value="Public Sub ClearGamma ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ClearGamma();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Wyłącza korekcji gamma domyślnej kategorii.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Drawing.Imaging.ImageAttributes> Obiekt zachowuje ustawienia koloru i skali szarości na pięć kategorii dopasowania: domyślny, mapy bitowej pędzla, Pióro i tekst. Na przykład można określić wartość gamma domyślnej kategorii, wartość gamma różnych kategorii mapy bitowej i nadal wartość gamma różnych kategorii pióra.  
  
 Ustawienia domyślne dopasowania Kolor i dostosowanie skali szarości dotyczą wszystkich kategorii, które nie mają ustawień dopasowania we własnym. Na przykład jeśli nigdy nie określono żadnych ustawień dopasowania dla kategorii pióra, domyślne ustawienia dotyczą kategorii pióra.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearGamma">
      <MemberSignature Language="C#" Value="public void ClearGamma (System.Drawing.Imaging.ColorAdjustType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ClearGamma(valuetype System.Drawing.Imaging.ColorAdjustType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.ClearGamma(System.Drawing.Imaging.ColorAdjustType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ClearGamma (type As ColorAdjustType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ClearGamma(System::Drawing::Imaging::ColorAdjustType type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Drawing.Imaging.ColorAdjustType" />
      </Parameters>
      <Docs>
        <param name="type">Element <see cref="T:System.Drawing.Imaging.ColorAdjustType" /> , który określa kategorii, dla których gamma korekty jest wyłączona.</param>
        <summary>Wyłącza korekcja gamma dla określonej kategorii.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Drawing.Imaging.ImageAttributes> Obiekt zachowuje ustawienia koloru i skali szarości na pięć kategorii dopasowania: domyślny, mapy bitowej pędzla, Pióro i tekst. Na przykład można określić wartość gamma domyślnej kategorii, wartość gamma różnych kategorii mapy bitowej i nadal wartość gamma różnych kategorii pióra.  
  
 Ustawienia domyślne dopasowania Kolor i dostosowanie skali szarości dotyczą wszystkich kategorii, które nie mają ustawień dopasowania we własnym. Na przykład jeśli nigdy nie określono żadnych ustawień dopasowania dla kategorii pióra, następnie domyślne ustawienia dotyczą kategorii pióra.  
  
 Natychmiast po określeniu dopasowywanie kolorów lub ustawienie skali szarości dopasowania dla określonej kategorii, domyślne ustawienia dostosowania nie dotyczą tej kategorii. Na przykład załóżmy, że należy określić wartość gamma i macierzy dopasowania Kolor dla domyślnej kategorii. Jeśli ustawisz wartość gamma dla kategorii pióra przez wywołanie metody <xref:System.Drawing.Imaging.ImageAttributes.SetGamma%2A> metody, wartością domyślną gamma nie będą dotyczyły pióra. Jeśli wyczyścisz później wartość gamma pióra przez wywołanie metody <xref:System.Drawing.Imaging.ImageAttributes.ClearGamma%2A> metody kategorii pióro nie zostaną przywrócone na wartość domyślną gamma; zamiast kategorii pióro nie odniesie żadnej wartości gamma. Podobnie kategoria pióro nie powróci do macierzy dopasowania Kolor domyślny; zamiast kategorii pióro nie odniesie żadnej macierzy kolorów dopasowania.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ClearNoOp">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Czyści <see langword="NoOp" /> ustawienie.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ClearNoOp">
      <MemberSignature Language="C#" Value="public void ClearNoOp ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ClearNoOp() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.ClearNoOp" />
      <MemberSignature Language="VB.NET" Value="Public Sub ClearNoOp ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ClearNoOp();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Czyści <see langword="NoOp" /> ustawienie dla domyślnej kategorii.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Drawing.Imaging.ImageAttributes> Obiekt zachowuje ustawienia koloru i skali szarości na pięć kategorii dopasowania: domyślny, mapy bitowej pędzla, Pióro i tekst. Na przykład można określić wartość gamma domyślnej kategorii, wartość gamma różnych kategorii mapy bitowej i nadal wartość gamma różnych kategorii pióra.  
  
 Dopasowywanie kolorów dla domyślnej kategorii można wyłączyć przez wywołanie metody <xref:System.Drawing.Imaging.ImageAttributes.SetNoOp%2A> metody. Później, można przywrócić dopasowania Kolor dla domyślnej kategorii przez wywołanie metody <xref:System.Drawing.Imaging.ImageAttributes.ClearNoOp%2A> metody. Następnie dopasowanie koloru zwraca co był zainstalowany przed wywołaniem do <xref:System.Drawing.Imaging.ImageAttributes.SetNoOp%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearNoOp">
      <MemberSignature Language="C#" Value="public void ClearNoOp (System.Drawing.Imaging.ColorAdjustType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ClearNoOp(valuetype System.Drawing.Imaging.ColorAdjustType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.ClearNoOp(System.Drawing.Imaging.ColorAdjustType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ClearNoOp (type As ColorAdjustType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ClearNoOp(System::Drawing::Imaging::ColorAdjustType type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Drawing.Imaging.ColorAdjustType" />
      </Parameters>
      <Docs>
        <param name="type">Element <see cref="T:System.Drawing.Imaging.ColorAdjustType" /> określający kategorii, dla którego <see langword="NoOp" /> ustawienie jest wyczyszczone.</param>
        <summary>Czyści <see langword="NoOp" /> ustawienie dla określonej kategorii.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Drawing.Imaging.ImageAttributes> Obiekt zachowuje ustawienia koloru i skali szarości na pięć kategorii dopasowania: domyślny, mapy bitowej pędzla, Pióro i tekst. Na przykład można określić wartość gamma domyślnej kategorii, wartość gamma różnych kategorii mapy bitowej i nadal wartość gamma różnych kategorii pióra.  
  
 Dostosowywanie kolorów dla określonej kategorii można wyłączyć przez wywołanie metody <xref:System.Drawing.Imaging.ImageAttributes.SetNoOp%2A> metody. Później, można przywrócić dopasowania Kolor dla tej kategorii, wywołując <xref:System.Drawing.Imaging.ImageAttributes.ClearNoOp%2A> metody. Następnie dopasowanie koloru zwraca co był zainstalowany przed wywołaniem do <xref:System.Drawing.Imaging.ImageAttributes.SetNoOp%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ClearOutputChannel">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Czyści ustawienia kanału CMYK danych wyjściowych (błękitny amarantowy żółty czarny).</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ClearOutputChannel">
      <MemberSignature Language="C#" Value="public void ClearOutputChannel ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ClearOutputChannel() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.ClearOutputChannel" />
      <MemberSignature Language="VB.NET" Value="Public Sub ClearOutputChannel ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ClearOutputChannel();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Czyści ustawienia kanału danych wyjściowych (błękitny amarantowy żółty czarny) CMYK dla domyślnej kategorii.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Drawing.Imaging.ImageAttributes> Obiekt zachowuje ustawienia koloru i skali szarości na pięć kategorii dopasowania: domyślny, mapy bitowej pędzla, Pióro i tekst. Na przykład można określić kanału dla domyślnej kategorii i kanał wyjściowy różnych kategorii mapy bitowej.  
  
 Ustawienia domyślne dopasowania Kolor i dostosowanie skali szarości dotyczą wszystkich kategorii, które nie mają ustawień dopasowania we własnym. Na przykład jeśli nigdy nie określono żadnych ustawień dopasowania dla kategorii mapy bitowej, domyślne ustawienia dotyczą kategorii mapy bitowej.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearOutputChannel">
      <MemberSignature Language="C#" Value="public void ClearOutputChannel (System.Drawing.Imaging.ColorAdjustType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ClearOutputChannel(valuetype System.Drawing.Imaging.ColorAdjustType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.ClearOutputChannel(System.Drawing.Imaging.ColorAdjustType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ClearOutputChannel (type As ColorAdjustType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ClearOutputChannel(System::Drawing::Imaging::ColorAdjustType type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Drawing.Imaging.ColorAdjustType" />
      </Parameters>
      <Docs>
        <param name="type">Element <see cref="T:System.Drawing.Imaging.ColorAdjustType" /> , który określa kategorii, dla którego ustawienia kanału danych wyjściowych jest wyczyszczone.</param>
        <summary>Czyści ustawienia kanału danych wyjściowych (błękitny amarantowy żółty czarny) dla określonej kategorii.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Drawing.Imaging.ImageAttributes> Obiekt zachowuje ustawienia koloru i skali szarości na pięć kategorii dopasowania: domyślny, mapy bitowej pędzla, Pióro i tekst. Na przykład można określić kanału dla domyślnej kategorii i kanał wyjściowy różnych kategorii mapy bitowej.  
  
 Ustawienia domyślne dopasowania Kolor i dostosowanie skali szarości dotyczą wszystkich kategorii, które nie mają ustawień dopasowania we własnym. Na przykład jeśli nigdy nie określono żadnych ustawień dopasowania dla kategorii mapy bitowej, domyślne ustawienia dotyczą kategorii mapy bitowej.  
  
 Natychmiast po określeniu dopasowywanie kolorów lub ustawienie skali szarości dopasowania dla określonej kategorii, domyślne ustawienia dostosowania nie dotyczą tej kategorii. Na przykład załóżmy, że należy określić kanału i macierzy dopasowania dla domyślnej kategorii. Jeśli kanał wyjściowy dla kategorii mapy bitowej jest ustawiony przez wywołanie <xref:System.Drawing.Imaging.ImageAttributes.SetOutputChannel%2A> metody, domyślne kanał wyjściowy nie zostanie zastosowany map bitowych. Jeśli wyczyścisz później mapy bitowej kanał wyjściowy, wywołując <xref:System.Drawing.Imaging.ImageAttributes.ClearOutputChannel%2A> metody kategorii mapy bitowej nie zostaną przywrócone do domyślnego kanał wyjściowy; zamiast kategorii mapy bitowej nie odniesie ustawienia kanału nie danych wyjściowych. Podobnie kategorii mapy bitowej nie zostaną przywrócone domyślne macierzy dopasowania Kolor; zamiast kategorii mapy bitowej nie odniesie żadnej macierzy kolorów dopasowania.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ClearOutputChannelColorProfile">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Czyści ustawienie profilu kolor danych wyjściowych.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ClearOutputChannelColorProfile">
      <MemberSignature Language="C#" Value="public void ClearOutputChannelColorProfile ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ClearOutputChannelColorProfile() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.ClearOutputChannelColorProfile" />
      <MemberSignature Language="VB.NET" Value="Public Sub ClearOutputChannelColorProfile ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ClearOutputChannelColorProfile();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Usuwa dane wyjściowe kanału koloru profilu ustawienie domyślnej kategorii.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Drawing.Imaging.ImageAttributes> Obiekt zachowuje ustawienia koloru i skali szarości na pięć kategorii dopasowania: domyślny, mapy bitowej pędzla, Pióro i tekst. Na przykład można określić profil kanału inny wynik dla kategorii mapy bitowej, jak i profilu kanału danych wyjściowych dla domyślnej kategorii.  
  
 Ustawienia domyślne dopasowania Kolor i dostosowanie skali szarości dotyczą wszystkich kategorii, które nie mają ustawień dopasowania we własnym. Na przykład jeśli nigdy nie określono żadnych ustawień dopasowania dla kategorii mapy bitowej, domyślne ustawienia dotyczą kategorii mapy bitowej.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearOutputChannelColorProfile">
      <MemberSignature Language="C#" Value="public void ClearOutputChannelColorProfile (System.Drawing.Imaging.ColorAdjustType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ClearOutputChannelColorProfile(valuetype System.Drawing.Imaging.ColorAdjustType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.ClearOutputChannelColorProfile(System.Drawing.Imaging.ColorAdjustType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ClearOutputChannelColorProfile (type As ColorAdjustType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ClearOutputChannelColorProfile(System::Drawing::Imaging::ColorAdjustType type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Drawing.Imaging.ColorAdjustType" />
      </Parameters>
      <Docs>
        <param name="type">Element <see cref="T:System.Drawing.Imaging.ColorAdjustType" /> , który określa kategorii, dla którego ustawienia profilu kanału danych wyjściowych jest wyczyszczone.</param>
        <summary>Czyści ustawienia danych wyjściowych kanału koloru profilu dla określonej kategorii.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Drawing.Imaging.ImageAttributes> Obiekt zachowuje ustawienia koloru i skali szarości na pięć kategorii dopasowania: domyślny, mapy bitowej pędzla, Pióro i tekst. Na przykład można określić profil kanału inny wynik dla kategorii mapy bitowej, jak i profilu kanału danych wyjściowych dla domyślnej kategorii.  
  
 Ustawienia domyślne dopasowania Kolor i dostosowanie skali szarości dotyczą wszystkich kategorii, które nie mają ustawień dopasowania we własnym. Na przykład jeśli nigdy nie określono żadnych ustawień dopasowania dla kategorii mapy bitowej, domyślne ustawienia dotyczą kategorii mapy bitowej.  
  
 Natychmiast po określeniu dopasowywanie kolorów lub ustawienie skali szarości dopasowania dla określonej kategorii, domyślne ustawienia dostosowania nie dotyczą tej kategorii. Na przykład załóżmy, że należy określić profil kanału danych wyjściowych i macierzy dopasowania dla domyślnej kategorii. Jeśli profil kanału danych wyjściowych dla kategorii mapy bitowej jest ustawiony przez wywołanie <xref:System.Drawing.Imaging.ImageAttributes.SetOutputChannelColorProfile%2A> metody, domyślne profilu kanału danych wyjściowych nie będą dotyczyły map bitowych. Jeśli wyczyścisz później mapy bitowej Profil kanału wyjściowych przez wywołanie metody <xref:System.Drawing.Imaging.ImageAttributes.ClearOutputChannelColorProfile%2A> metody kategorii mapy bitowej nie zostaną przywrócone do domyślnego profilu kanału danych wyjściowych; zamiast mapę bitową kategorii nie odniesie ustawienia profilu kanału nie danych wyjściowych. Podobnie kategorii mapy bitowej nie zostaną przywrócone domyślne macierzy dopasowania Kolor; zamiast kategorii mapy bitowej nie odniesie żadnej macierzy kolorów dopasowania.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ClearRemapTable">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Czyści tabeli ponownego mapowania kolorów.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ClearRemapTable">
      <MemberSignature Language="C#" Value="public void ClearRemapTable ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ClearRemapTable() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.ClearRemapTable" />
      <MemberSignature Language="VB.NET" Value="Public Sub ClearRemapTable ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ClearRemapTable();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Czyści tabeli ponownego mapowania kolorów dla kategorii domyślnej.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Drawing.Imaging.ImageAttributes> Obiekt zachowuje ustawienia koloru i skali szarości na pięć kategorii dopasowania: domyślny, mapy bitowej pędzla, Pióro i tekst. Na przykład można określić tabeli ponownego mapowania dla domyślnej kategorii tabeli ponownego mapowania różnych kategorii mapy bitowej i nadal tabeli ponownego mapowania różnych kategorii pióra.  
  
 Ustawienia domyślne dopasowania Kolor i dostosowanie skali szarości dotyczą wszystkich kategorii, które nie mają ustawień dopasowania we własnym. Na przykład jeśli nigdy nie określono żadnych ustawień dopasowania dla kategorii pióra, domyślne ustawienia dotyczą kategorii pióra.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearRemapTable">
      <MemberSignature Language="C#" Value="public void ClearRemapTable (System.Drawing.Imaging.ColorAdjustType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ClearRemapTable(valuetype System.Drawing.Imaging.ColorAdjustType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.ClearRemapTable(System.Drawing.Imaging.ColorAdjustType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ClearRemapTable (type As ColorAdjustType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ClearRemapTable(System::Drawing::Imaging::ColorAdjustType type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Drawing.Imaging.ColorAdjustType" />
      </Parameters>
      <Docs>
        <param name="type">Element <see cref="T:System.Drawing.Imaging.ColorAdjustType" /> , który określa kategorii, dla którego jest wyczyszczone tabeli ponownego mapowania.</param>
        <summary>Czyści tabeli ponownego mapowania kolorów dla określonej kategorii.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Drawing.Imaging.ImageAttributes> Obiekt zachowuje ustawienia koloru i skali szarości na pięć kategorii dopasowania: domyślny, mapy bitowej pędzla, Pióro i tekst. Na przykład można określić tabeli ponownego mapowania dla domyślnej kategorii tabeli ponownego mapowania różnych kategorii mapy bitowej i nadal tabeli ponownego mapowania różnych kategorii pióra.  
  
 Ustawienia domyślne dopasowania Kolor i dostosowanie skali szarości dotyczą wszystkich kategorii, które nie mają ustawień dopasowania we własnym. Na przykład jeśli nigdy nie określono żadnych ustawień dopasowania dla kategorii pióra, następnie domyślne ustawienia dotyczą kategorii pióra.  
  
 Natychmiast po określeniu dopasowywanie kolorów lub ustawienie skali szarości dopasowania dla określonej kategorii, domyślne ustawienia dostosowania nie dotyczą tej kategorii. Na przykład załóżmy, że należy określić tabeli ponownego mapowania i gamma wartości domyślnej kategorii. Jeśli ustawisz tabeli ponownego mapowania dla kategorii pióra przez wywołanie metody <xref:System.Drawing.Imaging.ImageAttributes.SetRemapTable%2A> metody tabeli ponownego mapowania domyślne nie zostanie zastosowany pióra. Jeśli później wyczyścić tabeli ponownego mapowania pióra przez wywołanie metody <xref:System.Drawing.Imaging.ImageAttributes.ClearRemapTable%2A> metody kategorii pióro nie zostaną przywrócone do tabeli ponownego mapowania domyślne; zamiast kategorii pióro nie odniesie Brak tabeli ponownego mapowania. Podobnie kategorii pióro nie przywróci domyślną wartość gamma; zamiast kategorii pióro nie odniesie żadnej wartości gamma.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ClearThreshold">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Czyści wartość progową.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ClearThreshold">
      <MemberSignature Language="C#" Value="public void ClearThreshold ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ClearThreshold() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.ClearThreshold" />
      <MemberSignature Language="VB.NET" Value="Public Sub ClearThreshold ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ClearThreshold();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Czyści wartość progowa dla domyślnej kategorii.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Próg wynosi wartość z zakresu od 0 do 1, który określa punkt odcięcia dla każdego składnika kolorów. Załóżmy na przykład, próg wynosi 0,7 i Załóżmy, że są renderowania kolor czerwony którego, zielonemu i niebieskiemu składniki są 230, 50 i 220, odpowiednio. Składnika czerwony (230) jest większa niż 0.7x255, więc składnika czerwony zostanie zmieniony na 255 (pełna intensywność). Składnika zielony (50) jest mniejsza niż 0.7x255, więc składnika zielony zostanie zmieniony na 0. Składnika niebieski (220) jest większa niż 0.7x255, więc składnika niebieski zostanie zmieniona do 255.  
  
 <xref:System.Drawing.Imaging.ImageAttributes> Obiekt zachowuje ustawienia koloru i skali szarości na pięć kategorii dopasowania: domyślny, mapy bitowej pędzla, Pióro i tekst. Na przykład można określić wartości progowej dla domyślnej kategorii, próg różnych kategorii mapy bitowej i nadal próg różnych kategorii pióra.  
  
 Ustawienia domyślne dopasowania Kolor i dostosowanie skali szarości dotyczą wszystkich kategorii, które nie mają ustawień dopasowania we własnym. Na przykład jeśli nigdy nie określono żadnych ustawień dopasowania dla kategorii pióra, domyślne ustawienia dotyczą kategorii pióra.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearThreshold">
      <MemberSignature Language="C#" Value="public void ClearThreshold (System.Drawing.Imaging.ColorAdjustType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ClearThreshold(valuetype System.Drawing.Imaging.ColorAdjustType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.ClearThreshold(System.Drawing.Imaging.ColorAdjustType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ClearThreshold (type As ColorAdjustType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ClearThreshold(System::Drawing::Imaging::ColorAdjustType type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Drawing.Imaging.ColorAdjustType" />
      </Parameters>
      <Docs>
        <param name="type">Element <see cref="T:System.Drawing.Imaging.ColorAdjustType" /> , który określa kategorii, dla którego jest wyczyszczone wartość progową.</param>
        <summary>Czyści wartość progowa dla określonej kategorii.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Próg wynosi wartość z zakresu od 0 do 1, który określa punkt odcięcia dla każdego składnika kolorów. Załóżmy na przykład, próg wynosi 0,7 i Załóżmy, że są renderowania kolor czerwony którego, zielonemu i niebieskiemu składniki są 230, 50 i 220, odpowiednio. Składnika czerwony (230) jest większa niż 0.7x55, więc składnika czerwony zostanie zmieniony na 255 (pełna intensywność). Składnika zielony (50) jest mniejsza niż 0.7x255, więc składnika zielony zostanie zmieniony na 0. Składnika niebieski (220) jest większa niż 0.7x255, więc składnika niebieski zostanie zmieniona do 255.  
  
 <xref:System.Drawing.Imaging.ImageAttributes> Obiekt zachowuje ustawienia koloru i skali szarości na pięć kategorii dopasowania: domyślny, mapy bitowej pędzla, Pióro i tekst. Na przykład można określić wartości progowej dla domyślnej kategorii, próg różnych kategorii mapy bitowej i nadal próg różnych kategorii pióra.  
  
 Ustawienia domyślne dopasowania Kolor i dostosowanie skali szarości dotyczą wszystkich kategorii, które nie mają ustawień dopasowania we własnym. Na przykład jeśli nigdy nie określono żadnych ustawień dopasowania dla kategorii pióra, domyślne ustawienia dotyczą kategorii pióra.  
  
 Natychmiast po określeniu dopasowywanie kolorów lub ustawienie skali szarości dopasowania dla określonej kategorii, domyślne ustawienia dostosowania nie dotyczą tej kategorii. Na przykład załóżmy, że należy określić próg i gamma wartości domyślnej kategorii. Należy ustawić wartość progową dla kategorii pióra przez wywołanie metody <xref:System.Drawing.Imaging.ImageAttributes.SetThreshold%2A> metody domyślny próg nie będą dotyczyły pióra. Jeśli wyczyścisz później próg pióra przez wywołanie metody <xref:System.Drawing.Imaging.ImageAttributes.ClearThreshold%2A> metody kategorii pióro nie zostaną przywrócone do domyślny próg; zamiast kategorii pióro nie odniesie Brak wartości progowej. Podobnie kategorii pióro nie przywróci domyślną wartość gamma; zamiast kategorii pióro nie odniesie żadnej wartości gamma.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public object Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Function Clone () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ Clone();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ICloneable.Clone</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Tworzy dokładną kopię to <see cref="T:System.Drawing.Imaging.ImageAttributes" /> obiektu.</summary>
        <returns>
          <see cref="T:System.Drawing.Imaging.ImageAttributes" /> Obiektu tworzy tej klasy, rzutowany jako obiekt.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zwalnia wszelkie zasoby używane przez to <see cref="T:System.Drawing.Imaging.ImageAttributes" /> obiektu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wywołanie <xref:System.Drawing.Imaging.ImageAttributes.Dispose%2A> po zakończeniu przy użyciu <xref:System.Drawing.Imaging.ImageAttributes>. <xref:System.Drawing.Imaging.ImageAttributes.Dispose%2A> Pozostawia metody <xref:System.Drawing.Imaging.ImageAttributes> w stanie uniemożliwiającym jego używanie. Po wywołaniu <xref:System.Drawing.Imaging.ImageAttributes.Dispose%2A>, konieczne jest zwolnienie wszystkich odwołań do <xref:System.Drawing.Imaging.ImageAttributes> , moduł zbierający elementy bezużyteczne mógł odzyskać pamięć który <xref:System.Drawing.Imaging.ImageAttributes> klasy. Aby uzyskać więcej informacji, zobacz [czyszczenie zasobów niezarządzanych](~/docs/standard/garbage-collection/unmanaged.md) i [implementacja metody Dispose](~/docs/standard/garbage-collection/implementing-dispose.md).  
  
> [!NOTE]
>  Wywoływanie zawsze <xref:System.Drawing.Imaging.ImageAttributes.Dispose%2A> przed zwolnieniem ostatniego odwołania do <xref:System.Drawing.Imaging.ImageAttributes>. W przeciwnym razie używa zasobów nie zostanie zwolniona do wywołania modułu zbierającego elementy bezużyteczne <xref:System.Drawing.Imaging.ImageAttributes> obiektu `Finalize` metody.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~ImageAttributes ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!ImageAttributes ()" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Umożliwia obiektu, próby zwolnienia zasobów i wykonywać inne operacje oczyszczania, przed jego jest odzyskana przez wyrzucanie elementów bezużytecznych.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAdjustedPalette">
      <MemberSignature Language="C#" Value="public void GetAdjustedPalette (System.Drawing.Imaging.ColorPalette palette, System.Drawing.Imaging.ColorAdjustType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void GetAdjustedPalette(class System.Drawing.Imaging.ColorPalette palette, valuetype System.Drawing.Imaging.ColorAdjustType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.GetAdjustedPalette(System.Drawing.Imaging.ColorPalette,System.Drawing.Imaging.ColorAdjustType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GetAdjustedPalette (palette As ColorPalette, type As ColorAdjustType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GetAdjustedPalette(System::Drawing::Imaging::ColorPalette ^ palette, System::Drawing::Imaging::ColorAdjustType type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="palette" Type="System.Drawing.Imaging.ColorPalette" />
        <Parameter Name="type" Type="System.Drawing.Imaging.ColorAdjustType" />
      </Parameters>
      <Docs>
        <param name="palette">A <see cref="T:System.Drawing.Imaging.ColorPalette" /> na wejściu zawiera palety do skorygowania i w danych wyjściowych zawiera skorygowaną palety.</param>
        <param name="type">Element <see cref="T:System.Drawing.Imaging.ColorAdjustType" /> , który określa kategorię, którego ustawienia dostosowania zostaną zastosowane do palety.</param>
        <summary>Dopasowuje kolorów w palecie zgodnie z ustawieniami dopasowania określonej kategorii.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Drawing.Imaging.ImageAttributes> Obiekt zachowuje ustawienia koloru i skali szarości na pięć kategorii dopasowania: domyślny, mapy bitowej pędzla, Pióro i tekst. Na przykład można określić tabeli ponownego mapowania kolorów dla domyślnej kategorii tabeli ponowne mapowanie koloru różnych kategorii mapy bitowej i nadal tabeli ponowne mapowanie koloru różnych kategorii pióra.  
  
 Podczas wywoływania <xref:System.Drawing.Imaging.ImageAttributes.GetAdjustedPalette%2A> metody, można określić kategorię dostosowania, która służy do korygowania kolorów palety. Na przykład w przypadku przekazania <xref:System.Drawing.Imaging.ColorAdjustType.Bitmap> do <xref:System.Drawing.Imaging.ImageAttributes.GetAdjustedPalette%2A> metoda, dostosowanie ustawień kategorii mapy bitowej są używane do Dostosuj kolory palety.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetBrushRemapTable">
      <MemberSignature Language="C#" Value="public void SetBrushRemapTable (System.Drawing.Imaging.ColorMap[] map);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetBrushRemapTable(class System.Drawing.Imaging.ColorMap[] map) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.SetBrushRemapTable(System.Drawing.Imaging.ColorMap[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetBrushRemapTable (map As ColorMap())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetBrushRemapTable(cli::array &lt;System::Drawing::Imaging::ColorMap ^&gt; ^ map);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="map" Type="System.Drawing.Imaging.ColorMap[]" />
      </Parameters>
      <Docs>
        <param name="map">Tablica <see cref="T:System.Drawing.Imaging.ColorMap" /> obiektów.</param>
        <summary>Ustawia tabeli ponownego mapowania kolorów dla kategorii pędzla.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Tabeli ponownego mapowania kolorów jest tablicą <xref:System.Drawing.Imaging.ColorMap> struktury. Każdy <xref:System.Drawing.Imaging.ColorMap> struktury ma dwa <xref:System.Drawing.Color> obiektów:, który określa kolor stary i, który określa odpowiednie nowy kolor. Podczas renderowania, wszelkie kolor, który pasuje do jednej tabeli ponownego mapowania kolorów starego jest zmieniany na odpowiednich nowy kolor.  
  
 Wywoływanie <xref:System.Drawing.Imaging.ImageAttributes.SetBrushRemapTable%2A> metoda ma ten sam efekt co przekazywanie <xref:System.Drawing.Imaging.ColorAdjustType.Brush> do <xref:System.Drawing.Imaging.ImageAttributes.SetRemapTable%2A> metody. W tabeli ponownego mapowania określonego dotyczy elementów w metapliki, które są wypełniane pędzla.  
  
 Ta metoda jest przeznaczona do użycia tylko z metapliki.  
  
   
  
## Examples  
 Poniższy przykładowy kod jest przeznaczony do użytku z formularzy systemu Windows i wymaga <xref:System.Windows.Forms.PaintEventArgs> `e`, który jest parametrem <xref:System.Windows.Forms.Control.Paint> obsługi zdarzeń. Kod wykonuje następujące czynności:  
  
1.  Tworzy element jednym <xref:System.Drawing.Imaging.ColorMap> tablica, która zawiera stary kolor czerwony i kolor zielony jako nowy kolor.  
  
2.  Przekazuje tej tablicy do nowo utworzonej <xref:System.Drawing.Imaging.ImageAttributes> obiektu.  
  
 [!code-cpp[System.Drawing.ClassicImaging.ImageAttributes#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicImaging.ImageAttributes/CPP/form1.cpp#1)]
 [!code-csharp[System.Drawing.ClassicImaging.ImageAttributes#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicImaging.ImageAttributes/CS/form1.cs#1)]
 [!code-vb[System.Drawing.ClassicImaging.ImageAttributes#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicImaging.ImageAttributes/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetColorKey">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Ustawia kolor klucz (przezroczystość zakres).</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetColorKey">
      <MemberSignature Language="C#" Value="public void SetColorKey (System.Drawing.Color colorLow, System.Drawing.Color colorHigh);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetColorKey(valuetype System.Drawing.Color colorLow, valuetype System.Drawing.Color colorHigh) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.SetColorKey(System.Drawing.Color,System.Drawing.Color)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetColorKey (colorLow As Color, colorHigh As Color)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetColorKey(System::Drawing::Color colorLow, System::Drawing::Color colorHigh);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="colorLow" Type="System.Drawing.Color" />
        <Parameter Name="colorHigh" Type="System.Drawing.Color" />
      </Parameters>
      <Docs>
        <param name="colorLow">Niska wartość klucza kolorów.</param>
        <param name="colorHigh">Wysoka wartość klucza kolorów.</param>
        <summary>Ustawia kolor klucz dla domyślnej kategorii.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda ustawia wartości wysoki i niski klucza kolorów, dzięki czemu zakresu kolorów mogą być niewidoczne. Wszelkie kolor, który ma poszczególnych części trzy (czerwony, zielony, niebieski) między odpowiadającymi składnikami klucze wysoki i niski kolorów jest niewidoczne.  
  
 <xref:System.Drawing.Imaging.ImageAttributes> Obiekt zachowuje ustawienia koloru i skali szarości na pięć kategorii dopasowania: domyślny, mapy bitowej pędzla, Pióro i tekst. Na przykład można określić klucz kolorów dla domyślnej kategorii, klucz kolorów dla kategorii mapy bitowej i nadal klucz kolorów dla kategorii pióra.  
  
 Ustawienia domyślne dopasowania Kolor i dostosowanie skali szarości dotyczą wszystkich kategorii, które nie mają ustawień dopasowania we własnym. Na przykład jeśli nigdy nie określono żadnych ustawień dopasowania dla kategorii pióra, domyślne ustawienia dotyczą kategorii pióra.  
  
   
  
## Examples  
 Na przykład kod, zobacz <xref:System.Drawing.Imaging.ImageAttributes.SetColorKey%28System.Drawing.Color%2CSystem.Drawing.Color%2CSystem.Drawing.Imaging.ColorAdjustType%29> metody.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetColorKey">
      <MemberSignature Language="C#" Value="public void SetColorKey (System.Drawing.Color colorLow, System.Drawing.Color colorHigh, System.Drawing.Imaging.ColorAdjustType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetColorKey(valuetype System.Drawing.Color colorLow, valuetype System.Drawing.Color colorHigh, valuetype System.Drawing.Imaging.ColorAdjustType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.SetColorKey(System.Drawing.Color,System.Drawing.Color,System.Drawing.Imaging.ColorAdjustType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetColorKey (colorLow As Color, colorHigh As Color, type As ColorAdjustType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetColorKey(System::Drawing::Color colorLow, System::Drawing::Color colorHigh, System::Drawing::Imaging::ColorAdjustType type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="colorLow" Type="System.Drawing.Color" />
        <Parameter Name="colorHigh" Type="System.Drawing.Color" />
        <Parameter Name="type" Type="System.Drawing.Imaging.ColorAdjustType" />
      </Parameters>
      <Docs>
        <param name="colorLow">Niska wartość klucza kolorów.</param>
        <param name="colorHigh">Wysoka wartość klucza kolorów.</param>
        <param name="type">Element <see cref="T:System.Drawing.Imaging.ColorAdjustType" /> , który określa kategorii, dla którego ustawiono klucza kolorów.</param>
        <summary>Ustawia kolor klucz (przezroczystość zakres) dla określonej kategorii.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda ustawia wartości wysoki i niski klucza kolorów, dzięki czemu zakresu kolorów mogą być niewidoczne. Wszelkie kolor, który ma poszczególnych części trzy (czerwony, zielony, niebieski) między odpowiadającymi składnikami klucze wysoki i niski kolorów jest niewidoczne.  
  
 <xref:System.Drawing.Imaging.ImageAttributes> Obiekt zachowuje ustawienia koloru i skali szarości na pięć kategorii dopasowania: domyślny, mapy bitowej pędzla, Pióro i tekst. Na przykład można określić klucz kolorów dla domyślnej kategorii, klucz kolorów dla kategorii mapy bitowej i nadal klucz kolorów dla kategorii pióra.  
  
 Ustawienia domyślne dopasowania Kolor i dostosowanie skali szarości dotyczą wszystkich kategorii, które nie mają ustawień dopasowania we własnym. Na przykład jeśli nigdy nie określono żadnych ustawień dopasowania dla kategorii pióra, domyślne ustawienia dotyczą kategorii pióra.  
  
 Natychmiast po określeniu dopasowywanie kolorów lub ustawienie skali szarości dopasowania dla określonej kategorii, domyślne ustawienia dostosowania nie dotyczą tej kategorii. Na przykład załóżmy, że należy określić kolekcję ustawień dopasowania dla domyślnej kategorii. Jeśli ustawisz klucza kolorów dla kategorii pióra przez przekazanie <xref:System.Drawing.Imaging.ColorAdjustType.Pen> do <xref:System.Drawing.Imaging.ImageAttributes.SetColorKey%2A> metody, Brak dopasowania domyślne ustawienia będą dotyczyć pióra.  
  
   
  
## Examples  
 Poniższy przykładowy kod jest przeznaczony do użytku z formularzy systemu Windows i wymaga <xref:System.Windows.Forms.PaintEventArgs> `e`, który jest parametrem <xref:System.Windows.Forms.Control.Paint> obsługi zdarzeń. Kod wykonuje następujące czynności:  
  
1.  Otwiera <xref:System.Drawing.Image> wykorzystuje plik Circle.bmp i go rysuje do ekranu.  
  
2.  Tworzy <xref:System.Drawing.Imaging.ImageAttributes> obiektu i ustawia jego klucza przez wywołanie metody <xref:System.Drawing.Imaging.ImageAttributes.SetColorKey%2A> metody.  
  
3.  Rysuje obraz ekranu przy użyciu klucza kolor <xref:System.Drawing.Imaging.ImageAttributes> obiektu.  
  
 [!code-cpp[System.Drawing.ClassicImaging.ImageAttributes#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicImaging.ImageAttributes/CPP/form1.cpp#2)]
 [!code-csharp[System.Drawing.ClassicImaging.ImageAttributes#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicImaging.ImageAttributes/CS/form1.cs#2)]
 [!code-vb[System.Drawing.ClassicImaging.ImageAttributes#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicImaging.ImageAttributes/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetColorMatrices">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Ustawia macierzy kolorów dostosowania i macierzy dostosowanie skali szarości.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetColorMatrices">
      <MemberSignature Language="C#" Value="public void SetColorMatrices (System.Drawing.Imaging.ColorMatrix newColorMatrix, System.Drawing.Imaging.ColorMatrix grayMatrix);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetColorMatrices(class System.Drawing.Imaging.ColorMatrix newColorMatrix, class System.Drawing.Imaging.ColorMatrix grayMatrix) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.SetColorMatrices(System.Drawing.Imaging.ColorMatrix,System.Drawing.Imaging.ColorMatrix)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetColorMatrices (newColorMatrix As ColorMatrix, grayMatrix As ColorMatrix)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetColorMatrices(System::Drawing::Imaging::ColorMatrix ^ newColorMatrix, System::Drawing::Imaging::ColorMatrix ^ grayMatrix);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newColorMatrix" Type="System.Drawing.Imaging.ColorMatrix" />
        <Parameter Name="grayMatrix" Type="System.Drawing.Imaging.ColorMatrix" />
      </Parameters>
      <Docs>
        <param name="newColorMatrix">Macierzy kolorów dopasowania.</param>
        <param name="grayMatrix">Macierz dostosowanie skali szarości.</param>
        <summary>Ustawia macierzy kolorów dostosowania i dostosowanie skali szarości macierzy dla domyślnej kategorii.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Drawing.Imaging.ImageAttributes> Obiekt zachowuje ustawienia koloru i skali szarości na pięć kategorii dopasowania: domyślny, mapy bitowej pędzla, Pióro i tekst. Na przykład można określić macierzy dopasowania do domyślnej kategorii, macierze korekty różnych kategorii mapy bitowej i macierze korekty nadal różnych kategorii pióra.  
  
 Ustawienia domyślne dopasowania Kolor i dostosowanie skali szarości dotyczą wszystkich kategorii, które nie mają ustawień dopasowania we własnym. Na przykład jeśli nigdy nie określono żadnych ustawień dopasowania dla kategorii pióra, domyślne ustawienia dotyczą kategorii pióra.  
  
 Wywoływanie <xref:System.Drawing.Imaging.ImageAttributes.SetColorMatrices%28System.Drawing.Imaging.ColorMatrix%2CSystem.Drawing.Imaging.ColorMatrix%29?displayProperty=nameWithType> jest odpowiednikiem wywołania metody <xref:System.Drawing.Imaging.ImageAttributes.SetColorMatrices%28System.Drawing.Imaging.ColorMatrix%2CSystem.Drawing.Imaging.ColorMatrix%2CSystem.Drawing.Imaging.ColorMatrixFlag%29?displayProperty=nameWithType> — metoda i przekazywanie <xref:System.Drawing.Imaging.ColorMatrixFlag.Default?displayProperty=nameWithType> dla `flags` parametru. <xref:System.Drawing.Imaging.ColorMatrixFlag.Default?displayProperty=nameWithType> Określa, że wszystkie kolory (w tym szarości) są ustawiane przez macierzy dopasowanie koloru, nie macierzy dostosowanie skali szarości. W związku z tym macierzy dostosowanie skali szarości przekazany do tej metody nie ma znaczenia.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetColorMatrices">
      <MemberSignature Language="C#" Value="public void SetColorMatrices (System.Drawing.Imaging.ColorMatrix newColorMatrix, System.Drawing.Imaging.ColorMatrix grayMatrix, System.Drawing.Imaging.ColorMatrixFlag flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetColorMatrices(class System.Drawing.Imaging.ColorMatrix newColorMatrix, class System.Drawing.Imaging.ColorMatrix grayMatrix, valuetype System.Drawing.Imaging.ColorMatrixFlag flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.SetColorMatrices(System.Drawing.Imaging.ColorMatrix,System.Drawing.Imaging.ColorMatrix,System.Drawing.Imaging.ColorMatrixFlag)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetColorMatrices (newColorMatrix As ColorMatrix, grayMatrix As ColorMatrix, flags As ColorMatrixFlag)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetColorMatrices(System::Drawing::Imaging::ColorMatrix ^ newColorMatrix, System::Drawing::Imaging::ColorMatrix ^ grayMatrix, System::Drawing::Imaging::ColorMatrixFlag flags);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newColorMatrix" Type="System.Drawing.Imaging.ColorMatrix" />
        <Parameter Name="grayMatrix" Type="System.Drawing.Imaging.ColorMatrix" />
        <Parameter Name="flags" Type="System.Drawing.Imaging.ColorMatrixFlag" />
      </Parameters>
      <Docs>
        <param name="newColorMatrix">Macierzy kolorów dopasowania.</param>
        <param name="grayMatrix">Macierz dostosowanie skali szarości.</param>
        <param name="flags">Element <see cref="T:System.Drawing.Imaging.ColorMatrixFlag" /> , który określa typ obrazu i kolor, który dotyczy macierzy kolorów dostosowania i dostosowanie skali szarości.</param>
        <summary>Ustawia macierzy kolorów dostosowania i dostosowanie skali szarości macierzy dla domyślnej kategorii.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Drawing.Imaging.ImageAttributes> Obiekt zachowuje ustawienia koloru i skali szarości na pięć kategorii dopasowania: domyślny, mapy bitowej pędzla, Pióro i tekst. Na przykład można określić macierzy dopasowania do domyślnej kategorii, macierze korekty różnych kategorii mapy bitowej i macierze korekty nadal różnych kategorii pióra.  
  
 Ustawienia domyślne dopasowania Kolor i dostosowanie skali szarości dotyczą wszystkich kategorii, które nie mają ustawień dopasowania we własnym. Na przykład jeśli nigdy nie określono żadnych ustawień dopasowania dla kategorii pióra, domyślne ustawienia dotyczą kategorii pióra.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetColorMatrices">
      <MemberSignature Language="C#" Value="public void SetColorMatrices (System.Drawing.Imaging.ColorMatrix newColorMatrix, System.Drawing.Imaging.ColorMatrix grayMatrix, System.Drawing.Imaging.ColorMatrixFlag mode, System.Drawing.Imaging.ColorAdjustType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetColorMatrices(class System.Drawing.Imaging.ColorMatrix newColorMatrix, class System.Drawing.Imaging.ColorMatrix grayMatrix, valuetype System.Drawing.Imaging.ColorMatrixFlag mode, valuetype System.Drawing.Imaging.ColorAdjustType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.SetColorMatrices(System.Drawing.Imaging.ColorMatrix,System.Drawing.Imaging.ColorMatrix,System.Drawing.Imaging.ColorMatrixFlag,System.Drawing.Imaging.ColorAdjustType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetColorMatrices (newColorMatrix As ColorMatrix, grayMatrix As ColorMatrix, mode As ColorMatrixFlag, type As ColorAdjustType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetColorMatrices(System::Drawing::Imaging::ColorMatrix ^ newColorMatrix, System::Drawing::Imaging::ColorMatrix ^ grayMatrix, System::Drawing::Imaging::ColorMatrixFlag mode, System::Drawing::Imaging::ColorAdjustType type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newColorMatrix" Type="System.Drawing.Imaging.ColorMatrix" />
        <Parameter Name="grayMatrix" Type="System.Drawing.Imaging.ColorMatrix" />
        <Parameter Name="mode" Type="System.Drawing.Imaging.ColorMatrixFlag" />
        <Parameter Name="type" Type="System.Drawing.Imaging.ColorAdjustType" />
      </Parameters>
      <Docs>
        <param name="newColorMatrix">Macierzy kolorów dopasowania.</param>
        <param name="grayMatrix">Macierz dostosowanie skali szarości.</param>
        <param name="mode">Element <see cref="T:System.Drawing.Imaging.ColorMatrixFlag" /> , który określa typ obrazu i kolor, który dotyczy macierzy kolorów dostosowania i dostosowanie skali szarości.</param>
        <param name="type">Element <see cref="T:System.Drawing.Imaging.ColorAdjustType" /> , który określa kategorii, dla którego ustawiono macierzy kolorów dostosowania i dostosowanie skali szarości.</param>
        <summary>Ustawia macierzy kolorów dostosowania i dostosowanie skali szarości macierzy dla określonej kategorii.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Drawing.Imaging.ImageAttributes> Obiekt zachowuje ustawienia koloru i skali szarości na pięć kategorii dopasowania: domyślny, mapy bitowej pędzla, Pióro i tekst. Na przykład można określić macierzy dopasowania do domyślnej kategorii, macierze korekty różnych kategorii mapy bitowej i macierze korekty nadal różnych kategorii pióra.  
  
 Ustawienia domyślne dopasowania Kolor i dostosowanie skali szarości dotyczą wszystkich kategorii, które nie mają ustawień dopasowania we własnym. Na przykład jeśli nigdy nie określono żadnych ustawień dopasowania dla kategorii pióra, domyślne ustawienia dotyczą kategorii pióra.  
  
 Natychmiast po określeniu dopasowywanie kolorów lub ustawienie skali szarości dopasowania dla określonej kategorii, domyślne ustawienia dostosowania nie dotyczą tej kategorii. Na przykład załóżmy, że należy określić kolekcję ustawień dopasowania dla domyślnej kategorii. Jeśli ustawisz macierzy kolorów dostosowania i dostosowanie skali szarości do kategorii pióra przez przekazanie <xref:System.Drawing.Imaging.ColorAdjustType.Pen> do <xref:System.Drawing.Imaging.ImageAttributes.SetColorMatrices%2A> metody, Brak dopasowania domyślne ustawienia będą dotyczyć pióra.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetColorMatrix">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Ustawia macierzy kolorów dopasowania.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetColorMatrix">
      <MemberSignature Language="C#" Value="public void SetColorMatrix (System.Drawing.Imaging.ColorMatrix newColorMatrix);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetColorMatrix(class System.Drawing.Imaging.ColorMatrix newColorMatrix) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.SetColorMatrix(System.Drawing.Imaging.ColorMatrix)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetColorMatrix (newColorMatrix As ColorMatrix)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetColorMatrix(System::Drawing::Imaging::ColorMatrix ^ newColorMatrix);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newColorMatrix" Type="System.Drawing.Imaging.ColorMatrix" />
      </Parameters>
      <Docs>
        <param name="newColorMatrix">Macierzy kolorów dopasowania.</param>
        <summary>Ustawia macierzy dopasowania Kolor dla domyślnej kategorii.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Drawing.Imaging.ImageAttributes> Obiekt zachowuje ustawienia koloru i skali szarości na pięć kategorii dopasowania: domyślny, mapy bitowej pędzla, Pióro i tekst. Na przykład można określić macierzy dopasowania Kolor dla domyślnej kategorii, macierzy różnych dopasowywanie kolorów mapy bitowej kategorii i nadal macierzy różnych dopasowania Kolor pióra kategorii.  
  
 Ustawienia domyślne dopasowania Kolor i dostosowanie skali szarości dotyczą wszystkich kategorii, które nie mają ustawień dopasowania we własnym. Na przykład jeśli nigdy nie określono żadnych ustawień dopasowania dla kategorii pióra, domyślne ustawienia dotyczą kategorii pióra.  
  
 Wywoływanie <xref:System.Drawing.Imaging.ImageAttributes.SetColorMatrix%28System.Drawing.Imaging.ColorMatrix%29?displayProperty=nameWithType> jest odpowiednikiem wywołania metody <xref:System.Drawing.Imaging.ImageAttributes.SetColorMatrix%28System.Drawing.Imaging.ColorMatrix%2CSystem.Drawing.Imaging.ColorMatrixFlag%29?displayProperty=nameWithType> — metoda i przekazywanie <xref:System.Drawing.Imaging.ColorMatrixFlag.Default?displayProperty=nameWithType> dla `flags` parametru. <xref:System.Drawing.Imaging.ColorMatrixFlag.Default?displayProperty=nameWithType> Określa, że wszystkie kolory (w tym szarości) są ustawiane przez macierzy kolorów korekty  
  
   
  
## Examples  
 Poniższy przykładowy kod jest przeznaczony do użytku z formularzy systemu Windows i wymaga <xref:System.Windows.Forms.PaintEventArgs> `e`, który jest parametrem <xref:System.Windows.Forms.Control.Paint> obsługi zdarzeń. Kod wykonuje następujące czynności:  
  
1.  Tworzy obraz prostokąt koloru wartości ustawionej na 128 produkujących prostokąt jest wypełniony jednolitym kolorem średniej szarości. Ten obraz prostokąt jest następnie rysowane na ekranie.  
  
2.  Tworzy <xref:System.Drawing.Imaging.ColorMatrix> i ustawia jej <xref:System.Drawing.Drawing2D.Matrix> lokalizacji 1,75, który kładzie nacisk składnika czerwony obrazu.  
  
3.  Tworzy <xref:System.Drawing.Imaging.ImageAttributes> obiektu i wywołania <xref:System.Drawing.Imaging.ImageAttributes.SetColorMatrix%2A> metody.  
  
4.  Rysuje obraz (drugi prostokąt) do ekranu przy użyciu <xref:System.Drawing.Imaging.ColorMatrix> właśnie ustawione w <xref:System.Drawing.Imaging.ImageAttributes> obiektu.  
  
 Pamiętaj, że druga prostokąt ma wyróżniony kolor czerwony.  
  
 [!code-cpp[System.Drawing.ClassicImaging.ImageAttributes#3](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicImaging.ImageAttributes/CPP/form1.cpp#3)]
 [!code-csharp[System.Drawing.ClassicImaging.ImageAttributes#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicImaging.ImageAttributes/CS/form1.cs#3)]
 [!code-vb[System.Drawing.ClassicImaging.ImageAttributes#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicImaging.ImageAttributes/VB/form1.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetColorMatrix">
      <MemberSignature Language="C#" Value="public void SetColorMatrix (System.Drawing.Imaging.ColorMatrix newColorMatrix, System.Drawing.Imaging.ColorMatrixFlag flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetColorMatrix(class System.Drawing.Imaging.ColorMatrix newColorMatrix, valuetype System.Drawing.Imaging.ColorMatrixFlag flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.SetColorMatrix(System.Drawing.Imaging.ColorMatrix,System.Drawing.Imaging.ColorMatrixFlag)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetColorMatrix (newColorMatrix As ColorMatrix, flags As ColorMatrixFlag)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetColorMatrix(System::Drawing::Imaging::ColorMatrix ^ newColorMatrix, System::Drawing::Imaging::ColorMatrixFlag flags);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newColorMatrix" Type="System.Drawing.Imaging.ColorMatrix" />
        <Parameter Name="flags" Type="System.Drawing.Imaging.ColorMatrixFlag" />
      </Parameters>
      <Docs>
        <param name="newColorMatrix">Macierzy kolorów dopasowania.</param>
        <param name="flags">Element <see cref="T:System.Drawing.Imaging.ColorMatrixFlag" /> , który określa typ obrazu i kolor, który dotyczy macierzy kolorów dopasowania.</param>
        <summary>Ustawia macierzy dopasowania Kolor dla domyślnej kategorii.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Drawing.Imaging.ImageAttributes> Obiekt zachowuje ustawienia koloru i skali szarości na pięć kategorii dopasowania: domyślny, mapy bitowej pędzla, Pióro i tekst. Na przykład można określić macierzy dopasowania Kolor dla domyślnej kategorii, macierzy różnych dopasowywanie kolorów mapy bitowej kategorii i nadal macierzy różnych dopasowania Kolor pióra kategorii.  
  
 Ustawienia domyślne dopasowania Kolor i dostosowanie skali szarości dotyczą wszystkich kategorii, które nie mają ustawień dopasowania we własnym. Na przykład jeśli nigdy nie określono żadnych ustawień dopasowania dla kategorii pióra, domyślne ustawienia dotyczą kategorii pióra.  
  
   
  
## Examples  
 Na przykład kod, zobacz <xref:System.Drawing.Imaging.ImageAttributes.SetColorMatrix%28System.Drawing.Imaging.ColorMatrix%29> metody.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetColorMatrix">
      <MemberSignature Language="C#" Value="public void SetColorMatrix (System.Drawing.Imaging.ColorMatrix newColorMatrix, System.Drawing.Imaging.ColorMatrixFlag mode, System.Drawing.Imaging.ColorAdjustType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetColorMatrix(class System.Drawing.Imaging.ColorMatrix newColorMatrix, valuetype System.Drawing.Imaging.ColorMatrixFlag mode, valuetype System.Drawing.Imaging.ColorAdjustType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.SetColorMatrix(System.Drawing.Imaging.ColorMatrix,System.Drawing.Imaging.ColorMatrixFlag,System.Drawing.Imaging.ColorAdjustType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetColorMatrix (newColorMatrix As ColorMatrix, mode As ColorMatrixFlag, type As ColorAdjustType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetColorMatrix(System::Drawing::Imaging::ColorMatrix ^ newColorMatrix, System::Drawing::Imaging::ColorMatrixFlag mode, System::Drawing::Imaging::ColorAdjustType type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newColorMatrix" Type="System.Drawing.Imaging.ColorMatrix" />
        <Parameter Name="mode" Type="System.Drawing.Imaging.ColorMatrixFlag" />
        <Parameter Name="type" Type="System.Drawing.Imaging.ColorAdjustType" />
      </Parameters>
      <Docs>
        <param name="newColorMatrix">Macierzy kolorów dopasowania.</param>
        <param name="mode">Element <see cref="T:System.Drawing.Imaging.ColorMatrixFlag" /> , który określa typ obrazu i kolor, który dotyczy macierzy kolorów dopasowania.</param>
        <param name="type">Element <see cref="T:System.Drawing.Imaging.ColorAdjustType" /> , który określa kategorii, dla którego ustawiono macierzy kolorów dopasowania.</param>
        <summary>Ustawia macierzy kolorów dopasowania dla określonej kategorii.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Drawing.Imaging.ImageAttributes> Obiekt zachowuje ustawienia koloru i skali szarości na pięć kategorii dopasowania: domyślny, mapy bitowej pędzla, Pióro i tekst. Na przykład można określić macierzy dopasowania Kolor dla domyślnej kategorii, macierzy różnych dopasowywanie kolorów mapy bitowej kategorii i nadal macierzy różnych dopasowania Kolor pióra kategorii.  
  
 Ustawienia domyślne dopasowania Kolor i dostosowanie skali szarości dotyczą wszystkich kategorii, które nie mają ustawień dopasowania we własnym. Na przykład jeśli nigdy nie określono żadnych ustawień dopasowania dla kategorii pióra, domyślne ustawienia dotyczą kategorii pióra.  
  
 Natychmiast po określeniu dopasowywanie kolorów lub ustawienie skali szarości dopasowania dla określonej kategorii, domyślne ustawienia dostosowania nie dotyczą tej kategorii. Na przykład załóżmy, że należy określić kolekcję ustawień dopasowania dla domyślnej kategorii. Jeśli ustawisz macierzy kolorów dopasowania dla kategorii pióra przez przekazanie <xref:System.Drawing.Imaging.ColorAdjustType.Pen> do <xref:System.Drawing.Imaging.ImageAttributes.SetColorMatrix%2A> metody, Brak dopasowania domyślne ustawienia będą dotyczyć pióra.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje sposób użycia <xref:System.Drawing.Imaging.ImageAttributes.SetColorMatrix%2A> metody. Aby uruchomić ten przykład, Wklej kod do formularza systemu Windows i wywołanie `RotateColors` z formularza <xref:System.Windows.Forms.Control.Paint> jest metoda obsługi zdarzeń `e` jako <xref:System.Windows.Forms.PaintEventArgs>.  
  
 [!code-csharp[System.Drawing.RotateColors#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.RotateColors/CS/Form1.cs#1)]
 [!code-vb[System.Drawing.RotateColors#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.RotateColors/VB/Form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetGamma">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Ustawia wartość gamma.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetGamma">
      <MemberSignature Language="C#" Value="public void SetGamma (float gamma);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetGamma(float32 gamma) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.SetGamma(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetGamma (gamma As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetGamma(float gamma);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="gamma" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="gamma">Wartość korekcji gamma.</param>
        <summary>Ustawia wartość gamma domyślnej kategorii.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Typowe wartości `gamma` parametru są od 1.0 do 2.2; jednak wartości od 0,1 do 5.0 mogą okazać się przydatne w pewnych okolicznościach.  
  
 <xref:System.Drawing.Imaging.ImageAttributes> Obiekt zachowuje ustawienia koloru i skali szarości na pięć kategorii dopasowania: domyślny, mapy bitowej pędzla, Pióro i tekst. Na przykład można określić wartość gamma domyślnej kategorii, wartość gamma różnych kategorii mapy bitowej i nadal wartość gamma różnych kategorii pióra.  
  
 Ustawienia domyślne dopasowania Kolor i dostosowanie skali szarości dotyczą wszystkich kategorii, które nie mają ustawień dopasowania we własnym. Na przykład jeśli nigdy nie określono żadnych ustawień dopasowania dla kategorii pióra, domyślne ustawienia dotyczą kategorii pióra.  
  
 Wartości gamma poza zakresem zwykle mogą być przydatne, stare monitory CRT lub monitory, które są w warunkach nietypowe oświetlenia, takich jak środowisk przemysłowych lub wyświetla okna.  
  
   
  
## Examples  
 Poniższy przykładowy kod jest przeznaczony do użytku z formularzy systemu Windows i wymaga <xref:System.Windows.Forms.PaintEventArgs> `e`, który jest parametrem <xref:System.Windows.Forms.Control.Paint> obsługi zdarzeń. Ponadto musisz zmienić ścieżkę pliku obrazu na nazwę ścieżki i obrazu prawidłowy w tym systemie. Kod wykonuje następujące czynności:  
  
1.  Otwiera <xref:System.Drawing.Image> wykorzystuje plik Camera.jpg i go rysuje do ekranu przy użyciu wartości domyślnej dla gamma.  
  
2.  Tworzy <xref:System.Drawing.Imaging.ImageAttributes> obiektów i ustawia jej gamma 2.2 przez wywołanie metody <xref:System.Drawing.Imaging.ImageAttributes.SetGamma%2A> metody.  
  
3.  Rysuje obraz (drugi aparatu) do ekranu przy użyciu wartości gamma, ustaw wartość <xref:System.Drawing.Imaging.ImageAttributes> obiektu.  
  
 [!code-cpp[System.Drawing.ClassicImaging.ImageAttributes#4](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicImaging.ImageAttributes/CPP/form1.cpp#4)]
 [!code-csharp[System.Drawing.ClassicImaging.ImageAttributes#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicImaging.ImageAttributes/CS/form1.cs#4)]
 [!code-vb[System.Drawing.ClassicImaging.ImageAttributes#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicImaging.ImageAttributes/VB/form1.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetGamma">
      <MemberSignature Language="C#" Value="public void SetGamma (float gamma, System.Drawing.Imaging.ColorAdjustType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetGamma(float32 gamma, valuetype System.Drawing.Imaging.ColorAdjustType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.SetGamma(System.Single,System.Drawing.Imaging.ColorAdjustType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetGamma (gamma As Single, type As ColorAdjustType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetGamma(float gamma, System::Drawing::Imaging::ColorAdjustType type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="gamma" Type="System.Single" />
        <Parameter Name="type" Type="System.Drawing.Imaging.ColorAdjustType" />
      </Parameters>
      <Docs>
        <param name="gamma">Wartość korekcji gamma.</param>
        <param name="type">Element <see cref="T:System.Drawing.Imaging.ColorAdjustType" /> wyliczenia, który określa kategorię, dla którego ustawiono wartość gamma.</param>
        <summary>Ustawia wartość gamma dla określonej kategorii.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Typowe wartości `gamma` parametru są od 1.0 do 2.2; jednak wartości od 0,1 do 5.0 mogą okazać się przydatne w pewnych okolicznościach.  
  
 <xref:System.Drawing.Imaging.ImageAttributes> Obiekt zachowuje ustawienia koloru i skali szarości na pięć kategorii dopasowania: domyślny, mapy bitowej pędzla, Pióro i tekst. Na przykład można określić wartość gamma domyślnej kategorii, wartość gamma różnych kategorii mapy bitowej i nadal wartość gamma różnych kategorii pióra.  
  
 Ustawienia domyślne dopasowania Kolor i dostosowanie skali szarości dotyczą wszystkich kategorii, które nie mają ustawień dopasowania we własnym. Na przykład jeśli nigdy nie określono żadnych ustawień dopasowania dla kategorii pióra, domyślne ustawienia dotyczą kategorii pióra.  
  
 Natychmiast po określeniu dopasowywanie kolorów lub ustawienie skali szarości dopasowania dla określonej kategorii, domyślne ustawienia dostosowania nie dotyczą tej kategorii. Na przykład załóżmy, że należy określić kolekcję ustawień dopasowania dla domyślnej kategorii. Jeśli ustawisz wartość gamma dla kategorii pióra przez przekazanie <xref:System.Drawing.Imaging.ColorAdjustType.Pen> do <xref:System.Drawing.Imaging.ImageAttributes.SetGamma%2A> metody, Brak dopasowania domyślne ustawienia będą dotyczyć pióra.  
  
 Wartości gamma poza zakresem zwykle mogą być przydatne, stare monitory CRT lub monitory, które są w warunkach nietypowe oświetlenia, takich jak środowisk przemysłowych lub wyświetla okna.  
  
   
  
## Examples  
 Na przykład kod, zobacz <xref:System.Drawing.Imaging.ImageAttributes.SetGamma%28System.Single%29> metody.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetNoOp">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Powoduje wyłączenie dopasowywania kolorów.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetNoOp">
      <MemberSignature Language="C#" Value="public void SetNoOp ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetNoOp() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.SetNoOp" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetNoOp ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetNoOp();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Powoduje wyłączenie dopasowywania kolorów dla domyślnej kategorii. Możesz wywołać <see cref="Overload:System.Drawing.Imaging.ImageAttributes.ClearNoOp" /> metodę, aby przywrócić ustawienia Dopasowywanie kolorów, które obowiązywały przed wywołaniem do <see cref="Overload:System.Drawing.Imaging.ImageAttributes.SetNoOp" /> metody.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Drawing.Imaging.ImageAttributes> Obiekt zachowuje ustawienia koloru i skali szarości na pięć kategorii dopasowania: domyślny, mapy bitowej pędzla, Pióro i tekst. Na przykład można określić wartość gamma domyślnej kategorii, wartość gamma różnych kategorii mapy bitowej i nadal wartość gamma różnych kategorii pióra.  
  
 Ustawienia domyślne dopasowania Kolor i dostosowanie skali szarości dotyczą wszystkich kategorii, które nie mają ustawień dopasowania we własnym. Na przykład jeśli nigdy nie określono żadnych ustawień dopasowania dla kategorii pióra, domyślne ustawienia dotyczą kategorii pióra.  
  
   
  
## Examples  
 Poniższy przykładowy kod jest przeznaczony do użytku z formularzy systemu Windows i wymaga <xref:System.Windows.Forms.PaintEventArgs> `e`, który jest parametrem <xref:System.Windows.Forms.Control.Paint> obsługi zdarzeń. Kod wykonuje następujące czynności:  
  
1.  Otwiera <xref:System.Drawing.Image> używającą pliku Camera.jpg.  
  
2.  Ustawia wartość gamma <xref:System.Drawing.Imaging.ImageAttributes> obiektu 0,25.  
  
3.  Rysuje obraz ekranu.  
  
4.  Wywołania <xref:System.Drawing.Imaging.ImageAttributes.SetNoOp%2A> metody.  
  
5.  Rysuje obraz (drugi aparatu) do ekranu; Jednak ponieważ <xref:System.Drawing.Imaging.ImageAttributes.SetNoOp%2A> wywołano metodę, gamma ustawień domyślnych do wartości 1.0 i obrazu jest rysowana na ekranie z domyślnym ustawieniem gamma.  
  
 Należy pamiętać, że obraz po lewej stronie jest bardzo rozmytego (gamma 0,25) i obraz po prawej stronie ma więcej kontrastu (gamma 1.0).  
  
 [!code-cpp[System.Drawing.ClassicImaging.ImageAttributes#5](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicImaging.ImageAttributes/CPP/form1.cpp#5)]
 [!code-csharp[System.Drawing.ClassicImaging.ImageAttributes#5](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicImaging.ImageAttributes/CS/form1.cs#5)]
 [!code-vb[System.Drawing.ClassicImaging.ImageAttributes#5](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicImaging.ImageAttributes/VB/form1.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetNoOp">
      <MemberSignature Language="C#" Value="public void SetNoOp (System.Drawing.Imaging.ColorAdjustType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetNoOp(valuetype System.Drawing.Imaging.ColorAdjustType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.SetNoOp(System.Drawing.Imaging.ColorAdjustType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetNoOp (type As ColorAdjustType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetNoOp(System::Drawing::Imaging::ColorAdjustType type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Drawing.Imaging.ColorAdjustType" />
      </Parameters>
      <Docs>
        <param name="type">Element <see cref="T:System.Drawing.Imaging.ColorAdjustType" /> , który określa kategorię dla kolor korekty jest wyłączona.</param>
        <summary>Powoduje wyłączenie dopasowywania kolorów dla określonej kategorii. Możesz wywołać <see cref="Overload:System.Drawing.Imaging.ImageAttributes.ClearNoOp" /> metodę, aby przywrócić ustawienia Dopasowywanie kolorów, które obowiązywały przed wywołaniem do <see cref="Overload:System.Drawing.Imaging.ImageAttributes.SetNoOp" /> metody.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Drawing.Imaging.ImageAttributes> Obiekt zachowuje ustawienia koloru i skali szarości na pięć kategorii dopasowania: domyślny, mapy bitowej pędzla, Pióro i tekst. Na przykład można określić wartość gamma domyślnej kategorii, wartość gamma różnych kategorii mapy bitowej i nadal wartość gamma różnych kategorii pióra.  
  
   
  
## Examples  
 Na przykład kod, zobacz <xref:System.Drawing.Imaging.ImageAttributes.SetNoOp> metody.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetOutputChannel">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Ustawia kanał wyjściowy CMYK (błękitny amarantowy żółty czarny).</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetOutputChannel">
      <MemberSignature Language="C#" Value="public void SetOutputChannel (System.Drawing.Imaging.ColorChannelFlag flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetOutputChannel(valuetype System.Drawing.Imaging.ColorChannelFlag flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.SetOutputChannel(System.Drawing.Imaging.ColorChannelFlag)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetOutputChannel (flags As ColorChannelFlag)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetOutputChannel(System::Drawing::Imaging::ColorChannelFlag flags);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="flags" Type="System.Drawing.Imaging.ColorChannelFlag" />
      </Parameters>
      <Docs>
        <param name="flags">Element <see cref="T:System.Drawing.Imaging.ColorChannelFlag" /> kanał wyjściowy, który określa.</param>
        <summary>Ustawia kanał wyjściowy CMYK (błękitny amarantowy żółty czarny) dla domyślnej kategorii.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Można użyć <xref:System.Drawing.Imaging.ImageAttributes.SetOutputChannel%2A> metodę Konwertuj obraz na przestrzeń kolorów CMYK i sprawdź, czy intensywność CMYK kanałów koloru. Załóżmy na przykład, możesz utworzyć <xref:System.Drawing.Imaging.ImageAttributes> obiektu i ustawić jej kanał wyjściowy mapy bitowej <xref:System.Drawing.Imaging.ColorChannelFlag.ColorChannelC>. W przypadku przekazania ścieżka tego <xref:System.Drawing.Imaging.ImageAttributes> do obiektu <xref:System.Drawing.Graphics.DrawImage%2A> metody błękitnego składnika każdego piksela jest obliczana i każdego piksela renderowanym obrazie jest odcień szarości, które wskazuje intensywność kanału błękitnego. Podobnie umożliwiający renderowanie obrazów, które wskazują intensywność kanały magenta lub.  
  
 <xref:System.Drawing.Imaging.ImageAttributes> Obiekt zachowuje ustawienia koloru i skali szarości na pięć kategorii dopasowania: domyślny, mapy bitowej pędzla, Pióro i tekst. Na przykład można określić kanału dla domyślnej kategorii i kanał wyjściowy różnych kategorii mapy bitowej.  
  
 Ustawienia domyślne dopasowania Kolor i dostosowanie skali szarości dotyczą wszystkich kategorii, które nie mają ustawień dopasowania we własnym. Na przykład jeśli nigdy nie określono żadnych ustawień dopasowania dla kategorii mapy bitowej, domyślne ustawienia dotyczą kategorii mapy bitowej.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje sposób użycia <xref:System.Drawing.Imaging.ImageAttributes.SetOutputChannel%2A> metody. Do uruchomienia tego przykładu, wklej następujący kod do formularza systemu Windows. Obsługa formularzy <xref:System.Windows.Forms.Control.Paint> zdarzeń i wywołanie `ShowOutputChannels`, przechodzącą `e` jako <xref:System.Windows.Forms.PaintEventArgs>.  
  
 [!code-csharp[System.Drawing.Misc3#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Misc3/CS/Form1.cs#4)]
 [!code-vb[System.Drawing.Misc3#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Misc3/VB/Form1.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetOutputChannel">
      <MemberSignature Language="C#" Value="public void SetOutputChannel (System.Drawing.Imaging.ColorChannelFlag flags, System.Drawing.Imaging.ColorAdjustType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetOutputChannel(valuetype System.Drawing.Imaging.ColorChannelFlag flags, valuetype System.Drawing.Imaging.ColorAdjustType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.SetOutputChannel(System.Drawing.Imaging.ColorChannelFlag,System.Drawing.Imaging.ColorAdjustType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetOutputChannel (flags As ColorChannelFlag, type As ColorAdjustType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetOutputChannel(System::Drawing::Imaging::ColorChannelFlag flags, System::Drawing::Imaging::ColorAdjustType type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="flags" Type="System.Drawing.Imaging.ColorChannelFlag" />
        <Parameter Name="type" Type="System.Drawing.Imaging.ColorAdjustType" />
      </Parameters>
      <Docs>
        <param name="flags">Element <see cref="T:System.Drawing.Imaging.ColorChannelFlag" /> kanał wyjściowy, który określa.</param>
        <param name="type">Element <see cref="T:System.Drawing.Imaging.ColorAdjustType" /> kategorii, dla którego ustawiono kanał wyjściowy, który określa.</param>
        <summary>Ustawia kanał wyjściowy CMYK (błękitny amarantowy żółty czarny) dla określonej kategorii.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Można użyć <xref:System.Drawing.Imaging.ImageAttributes.SetOutputChannel%2A> metodę Konwertuj obraz na przestrzeń kolorów CMYK i sprawdź, czy intensywność CMYK kanałów koloru. Załóżmy na przykład, możesz utworzyć <xref:System.Drawing.Imaging.ImageAttributes> obiektu i ustawić jej kanał wyjściowy mapy bitowej <xref:System.Drawing.Imaging.ColorChannelFlag.ColorChannelC>. W przypadku przekazania ścieżka tego <xref:System.Drawing.Imaging.ImageAttributes> do obiektu <xref:System.Drawing.Graphics.DrawImage%2A> metody błękitnego składnika każdego piksela jest obliczana i każdego piksela renderowanym obrazie jest odcień szarości, które wskazuje intensywność kanału błękitnego. Podobnie umożliwiający renderowanie obrazów, które wskazują intensywność kanały magenta lub.  
  
 <xref:System.Drawing.Imaging.ImageAttributes> Obiekt zachowuje ustawienia koloru i skali szarości na pięć kategorii dopasowania: domyślny, mapy bitowej pędzla, Pióro i tekst. Na przykład można określić kanału dla domyślnej kategorii i kanał wyjściowy różnych kategorii mapy bitowej.  
  
 Ustawienia domyślne dopasowania Kolor i dostosowanie skali szarości dotyczą wszystkich kategorii, które nie mają ustawień dopasowania we własnym. Na przykład jeśli nigdy nie określono żadnych ustawień dopasowania dla kategorii mapy bitowej, domyślne ustawienia dotyczą kategorii mapy bitowej.  
  
 Natychmiast po określeniu dopasowywanie kolorów lub ustawienie skali szarości dopasowania dla określonej kategorii, domyślne ustawienia dostosowania nie dotyczą tej kategorii. Na przykład załóżmy, że należy określić kolekcję ustawień dopasowania dla domyślnej kategorii. Jeśli ustawisz kanał wyjściowy dla kategorii mapy bitowej przez przekazanie <xref:System.Drawing.Imaging.ColorAdjustType.Bitmap> do <xref:System.Drawing.Imaging.ImageAttributes.SetOutputChannel%2A> metody, Brak dopasowania domyślne ustawienia będą dotyczyć map bitowych.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje sposób użycia <xref:System.Drawing.Imaging.ImageAttributes.SetOutputChannel%2A> metody. Do uruchomienia tego przykładu, wklej następujący kod do formularza systemu Windows. Obsługa formularzy <xref:System.Windows.Forms.Control.Paint> zdarzeń i wywołanie `ShowOutputChannels`, przechodzącą `e` jako <xref:System.Windows.Forms.PaintEventArgs>.  
  
 [!code-csharp[System.Drawing.Misc3#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Misc3/CS/Form1.cs#4)]
 [!code-vb[System.Drawing.Misc3#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Misc3/VB/Form1.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetOutputChannelColorProfile">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Ustawia plik wyjściowy kanału profil kolorów.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetOutputChannelColorProfile">
      <MemberSignature Language="C#" Value="public void SetOutputChannelColorProfile (string colorProfileFilename);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetOutputChannelColorProfile(string colorProfileFilename) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.SetOutputChannelColorProfile(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetOutputChannelColorProfile (colorProfileFilename As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetOutputChannelColorProfile(System::String ^ colorProfileFilename);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="colorProfileFilename" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="colorProfileFilename">Nazwa ścieżki pliku profilu kolorów. Jeśli plik profilu kolorów znajduje się w katalogu %SystemRoot%\System32\Spool\Drivers\Color, ten parametr może być nazwą pliku. W przeciwnym razie wartość tego parametru musi być w pełni kwalifikowana nazwa.</param>
        <summary>Ustawia plik wyjściowy kanału profil kolorów dla domyślnej kategorii.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Można użyć <xref:System.Drawing.Imaging.ImageAttributes.SetOutputChannel%2A> i <xref:System.Drawing.Imaging.ImageAttributes.SetOutputChannelColorProfile%2A> metody Konwertuj obraz na przestrzeń kolorów CMYK (błękitny amarantowy żółty czarny) i sprawdź, czy intensywność CMYK kolor kanałów. Na przykład załóżmy, że pisania kodu, który wykonuje następujące czynności:  
  
1.  Utwórz <xref:System.Drawing.Image>.  
  
2.  Utwórz <xref:System.Drawing.Imaging.ImageAttributes> obiektu.  
  
3.  Przekaż <xref:System.Drawing.Imaging.ColorChannelFlag.ColorChannelC> do <xref:System.Drawing.Imaging.ImageAttributes.SetOutputChannel%2A> metody <xref:System.Drawing.Imaging.ImageAttributes> obiektu.  
  
4.  Nazwa ścieżki pliku profilu kolorów do przekazania <xref:System.Drawing.Imaging.ImageAttributes.SetOutputChannelColorProfile%2A> metody <xref:System.Drawing.Imaging.ImageAttributes> obiektu.  
  
5.  Przekaż ścieżek <xref:System.Drawing.Image> i <xref:System.Drawing.Imaging.ImageAttributes> obiekty do <xref:System.Drawing.Graphics.DrawImage%2A> metody.  
  
 [!INCLUDE[ndptecgdiplus](~/includes/ndptecgdiplus-md.md)] zostanie użyty plik profilu kolorów do obliczenia błękitnego składnika każdego piksela obrazu i każdego piksela renderowanym obrazie będzie odcień szarości wskazującą zwiększeniem jej błękitnego kanału.  
  
 <xref:System.Drawing.Imaging.ImageAttributes> Obiekt zachowuje ustawienia koloru i skali szarości na pięć kategorii dopasowania: domyślny, mapy bitowej pędzla, Pióro i tekst. Na przykład można określić plik wyjściowy kanału profil kolorów dla domyślnej kategorii i innym pliku wyjściowym. kanał profil kolorów dla kategorii mapy bitowej.  
  
 Ustawienia domyślne dopasowania Kolor i dostosowanie skali szarości dotyczą wszystkich kategorii, które nie mają ustawień dopasowania we własnym. Na przykład jeśli nigdy nie określono żadnych ustawień dopasowania dla kategorii mapy bitowej, domyślne ustawienia dotyczą kategorii mapy bitowej.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetOutputChannelColorProfile">
      <MemberSignature Language="C#" Value="public void SetOutputChannelColorProfile (string colorProfileFilename, System.Drawing.Imaging.ColorAdjustType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetOutputChannelColorProfile(string colorProfileFilename, valuetype System.Drawing.Imaging.ColorAdjustType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.SetOutputChannelColorProfile(System.String,System.Drawing.Imaging.ColorAdjustType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetOutputChannelColorProfile (colorProfileFilename As String, type As ColorAdjustType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetOutputChannelColorProfile(System::String ^ colorProfileFilename, System::Drawing::Imaging::ColorAdjustType type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="colorProfileFilename" Type="System.String" />
        <Parameter Name="type" Type="System.Drawing.Imaging.ColorAdjustType" />
      </Parameters>
      <Docs>
        <param name="colorProfileFilename">Nazwa ścieżki pliku profilu kolorów. Jeśli plik profilu kolorów znajduje się w katalogu %SystemRoot%\System32\Spool\Drivers\Color, ten parametr może być nazwą pliku. W przeciwnym razie wartość tego parametru musi być w pełni kwalifikowana nazwa.</param>
        <param name="type">Element <see cref="T:System.Drawing.Imaging.ColorAdjustType" /> kategorii, dla którego ustawiono plik profilu kolorów kanał wyjściowy, który określa.</param>
        <summary>Ustawia plik wyjściowy kanału profil kolorów dla określonej kategorii.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Można użyć <xref:System.Drawing.Imaging.ImageAttributes.SetOutputChannel%2A> i <xref:System.Drawing.Imaging.ImageAttributes.SetOutputChannelColorProfile%2A> metody Konwertuj obraz na przestrzeń kolorów CMYK (błękitny amarantowy żółty czarny) i sprawdź, czy intensywność CMYK kolor kanałów. Na przykład załóżmy, że pisania kodu, który wykonuje następujące czynności:  
  
1.  Utwórz <xref:System.Drawing.Image>.  
  
2.  Utwórz <xref:System.Drawing.Imaging.ImageAttributes> obiektu.  
  
3.  Przekaż <xref:System.Drawing.Imaging.ColorChannelFlag.ColorChannelC> do <xref:System.Drawing.Imaging.ImageAttributes.SetOutputChannel%2A> metody <xref:System.Drawing.Imaging.ImageAttributes> obiektu.  
  
4.  Nazwa ścieżki pliku profilu kolorów do przekazania <xref:System.Drawing.Imaging.ImageAttributes.SetOutputChannelColorProfile%2A> metody <xref:System.Drawing.Imaging.ImageAttributes> obiektu.  
  
5.  Przekaż ścieżek <xref:System.Drawing.Image> i <xref:System.Drawing.Imaging.ImageAttributes> obiekty do <xref:System.Drawing.Graphics.DrawImage%2A> metody.  
  
 [!INCLUDE[ndptecgdiplus](~/includes/ndptecgdiplus-md.md)] zostanie użyty plik profilu kolorów do obliczenia błękitnego składnika każdego piksela obrazu i każdego piksela renderowanym obrazie będzie odcień szarości wskazującą zwiększeniem jej błękitnego kanału.  
  
 <xref:System.Drawing.Imaging.ImageAttributes> Obiekt zachowuje ustawienia koloru i skali szarości na pięć kategorii dopasowania: domyślny, mapy bitowej pędzla, Pióro i tekst. Na przykład można określić plik wyjściowy kanału profil kolorów dla domyślnej kategorii i innym pliku wyjściowym. kanał profil kolorów dla kategorii mapy bitowej.  
  
 Ustawienia domyślne dopasowania Kolor i dostosowanie skali szarości dotyczą wszystkich kategorii, które nie mają ustawień dopasowania we własnym. Na przykład jeśli nigdy nie określono żadnych ustawień dopasowania dla kategorii mapy bitowej, domyślne ustawienia dotyczą kategorii mapy bitowej.  
  
 Natychmiast po określeniu dopasowywanie kolorów lub ustawienie skali szarości dopasowania dla określonej kategorii, domyślne ustawienia dostosowania nie dotyczą tej kategorii. Na przykład załóżmy, że należy określić kolekcję ustawień dopasowania dla domyślnej kategorii. Jeśli zostanie ustawiona przez przekazanie pliku wyjściowego kanału profil kolorów dla kategorii mapy bitowej <xref:System.Drawing.Imaging.ColorAdjustType.Bitmap> do <xref:System.Drawing.Imaging.ImageAttributes.SetOutputChannelColorProfile%2A> metody, Brak dopasowania domyślne ustawienia będą dotyczyć map bitowych.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetRemapTable">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Ustawia tabeli ponownego mapowania kolorów.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetRemapTable">
      <MemberSignature Language="C#" Value="public void SetRemapTable (System.Drawing.Imaging.ColorMap[] map);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetRemapTable(class System.Drawing.Imaging.ColorMap[] map) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.SetRemapTable(System.Drawing.Imaging.ColorMap[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetRemapTable (map As ColorMap())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetRemapTable(cli::array &lt;System::Drawing::Imaging::ColorMap ^&gt; ^ map);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="map" Type="System.Drawing.Imaging.ColorMap[]" />
      </Parameters>
      <Docs>
        <param name="map">Tablica par kolor typu <see cref="T:System.Drawing.Imaging.ColorMap" />. Każda para kolor zawiera istniejącego koloru (pierwsza wartość) i kolor, że będzie on być zamapowany na (drugiej wartości).</param>
        <summary>Ustawia tabeli ponownego mapowania kolorów dla kategorii domyślnej.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Tabeli ponownego mapowania kolorów jest tablicą <xref:System.Drawing.Imaging.ColorMap> struktury. Każdy <xref:System.Drawing.Imaging.ColorMap> struktury ma dwa <xref:System.Drawing.Color> obiektów:, który określa kolor stary i, który określa odpowiednie nowy kolor. Podczas renderowania, wszelkie kolor, który pasuje do jednej tabeli ponownego mapowania kolorów starego jest zmieniany na odpowiednich nowy kolor.  
  
 <xref:System.Drawing.Imaging.ImageAttributes> Obiekt zachowuje ustawienia koloru i skali szarości na pięć kategorii dopasowania: domyślny, mapy bitowej pędzla, Pióro i tekst. Na przykład można określić ponownego mapowania kolorów dla domyślnej kategorii, tabeli ponownego mapowania kolorów mapy bitowej kategorii i nadal tabeli ponowne mapowanie koloru różnych kategorii pióra.  
  
 Ustawienia domyślne dopasowania Kolor i dostosowanie skali szarości dotyczą wszystkich kategorii, które nie mają ustawień dopasowania we własnym. Na przykład jeśli nigdy nie określono żadnych ustawień dopasowania dla kategorii pióra, domyślne ustawienia dotyczą kategorii pióra.  
  
   
  
## Examples  
 Poniższy przykładowy kod jest przeznaczony do użytku z formularzy systemu Windows i wymaga <xref:System.Windows.Forms.PaintEventArgs> `e`, który jest parametrem <xref:System.Windows.Forms.Control.Paint> obsługi zdarzeń. Kod wykonuje następujące czynności:  
  
1.  Tworzy obraz (czerwone kółko), zapisuje go jako Circle2.jpg otwiera obrazu i go rysuje do ekranu.  
  
2.  Tworzy mapę kolor mapowanego kolor czerwony kolor zielony.  
  
3.  Rysuje obraz utworzony wcześniej do ekranu ponownie, ale tym razem przy użyciu kolorów mapy.  
  
 [!code-cpp[System.Drawing.ClassicImaging.ImageAttributes#6](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicImaging.ImageAttributes/CPP/form1.cpp#6)]
 [!code-csharp[System.Drawing.ClassicImaging.ImageAttributes#6](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicImaging.ImageAttributes/CS/form1.cs#6)]
 [!code-vb[System.Drawing.ClassicImaging.ImageAttributes#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicImaging.ImageAttributes/VB/form1.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetRemapTable">
      <MemberSignature Language="C#" Value="public void SetRemapTable (System.Drawing.Imaging.ColorMap[] map, System.Drawing.Imaging.ColorAdjustType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetRemapTable(class System.Drawing.Imaging.ColorMap[] map, valuetype System.Drawing.Imaging.ColorAdjustType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.SetRemapTable(System.Drawing.Imaging.ColorMap[],System.Drawing.Imaging.ColorAdjustType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetRemapTable (map As ColorMap(), type As ColorAdjustType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetRemapTable(cli::array &lt;System::Drawing::Imaging::ColorMap ^&gt; ^ map, System::Drawing::Imaging::ColorAdjustType type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="map" Type="System.Drawing.Imaging.ColorMap[]" />
        <Parameter Name="type" Type="System.Drawing.Imaging.ColorAdjustType" />
      </Parameters>
      <Docs>
        <param name="map">Tablica par kolor typu <see cref="T:System.Drawing.Imaging.ColorMap" />. Każda para kolor zawiera istniejącego koloru (pierwsza wartość) i kolor, że będzie on być zamapowany na (drugiej wartości).</param>
        <param name="type">Element <see cref="T:System.Drawing.Imaging.ColorAdjustType" /> , który określa kategorii, dla którego ustawiono tabeli ponownego mapowania kolorów.</param>
        <summary>Ustawia tabeli ponownego mapowania kolorów dla określonej kategorii.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Tabeli ponownego mapowania kolorów jest tablicą <xref:System.Drawing.Imaging.ColorMap> struktury. Każdy <xref:System.Drawing.Imaging.ColorMap> struktury ma dwa <xref:System.Drawing.Color> obiektów:, który określa kolor stary i, który określa odpowiednie nowy kolor. Podczas renderowania, wszelkie kolor, który pasuje do jednej tabeli ponownego mapowania kolorów starego jest zmieniany na odpowiednich nowy kolor.  
  
 <xref:System.Drawing.Imaging.ImageAttributes> Obiekt zachowuje ustawienia koloru i skali szarości na pięć kategorii dopasowania: domyślny, mapy bitowej pędzla, Pióro i tekst. Na przykład można określić ponownego mapowania kolorów dla domyślnej kategorii, tabeli ponownego mapowania kolorów mapy bitowej kategorii i nadal tabeli ponowne mapowanie koloru różnych kategorii pióra.  
  
 Ustawienia domyślne dopasowania Kolor i dostosowanie skali szarości dotyczą wszystkich kategorii, które nie mają ustawień dopasowania we własnym. Na przykład jeśli nigdy nie określono żadnych ustawień dopasowania dla kategorii pióra, domyślne ustawienia dotyczą kategorii pióra.  
  
 Natychmiast po określeniu dopasowywanie kolorów lub ustawienie skali szarości dopasowania dla określonej kategorii, domyślne ustawienia dostosowania nie dotyczą tej kategorii. Na przykład załóżmy, że należy określić kolekcję ustawień dopasowania dla domyślnej kategorii. Jeśli ustawisz tabeli ponownego mapowania kolorów dla kategorii pióra przez przekazanie <xref:System.Drawing.Imaging.ColorAdjustType.Pen> do <xref:System.Drawing.Imaging.ImageAttributes.SetRemapTable%2A> metody, Brak dopasowania domyślne ustawienia będą dotyczyć pióra.  
  
   
  
## Examples  
 Na przykład kod, zobacz <xref:System.Drawing.Imaging.ImageAttributes.SetRemapTable%28System.Drawing.Imaging.ColorMap%5B%5D%29> metody.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetThreshold">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Ustawia wartość progową (przezroczystość zakres).</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetThreshold">
      <MemberSignature Language="C#" Value="public void SetThreshold (float threshold);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetThreshold(float32 threshold) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.SetThreshold(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetThreshold (threshold As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetThreshold(float threshold);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="threshold" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="threshold">Liczba rzeczywista, która określa wartość progu.</param>
        <summary>Ustawia wartość progową (przezroczystość zakres) dla domyślnej kategorii.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Próg wynosi wartość z zakresu od 0 do 1, który określa punkt odcięcia dla każdego składnika kolorów. Załóżmy na przykład, próg wynosi 0,7 i Załóżmy, że są renderowania kolor czerwony którego, zielonemu i niebieskiemu składniki są 230, 50 i 220, odpowiednio. Składnika czerwony (230) jest większa niż 0.7x255, więc składnika czerwony zostanie zmieniony na 255 (pełna intensywność). Składnika zielony (50) jest mniejsza niż 0.7x255, więc składnika zielony zostanie zmieniony na 0. Składnika niebieski (220) jest większa niż 0.7x255, więc składnika niebieski zostanie zmieniona do 255.  
  
 <xref:System.Drawing.Imaging.ImageAttributes> Obiekt zachowuje ustawienia koloru i skali szarości na pięć kategorii dopasowania: domyślny, mapy bitowej pędzla, Pióro i tekst. Na przykład można określić wartości progowej dla domyślnej kategorii, próg dla kategorii mapy bitowej i nadal próg różnych kategorii pióra.  
  
 Ustawienia domyślne dopasowania Kolor i dostosowanie skali szarości dotyczą wszystkich kategorii, które nie mają ustawień dopasowania we własnym. Na przykład jeśli nigdy nie określono żadnych ustawień dopasowania dla kategorii pióra, domyślne ustawienia dotyczą kategorii pióra.  
  
   
  
## Examples  
 Poniższy przykładowy kod jest przeznaczony do użytku z formularzy systemu Windows i wymaga <xref:System.Windows.Forms.PaintEventArgs> `e`, który jest parametrem <xref:System.Windows.Forms.Control.Paint> obsługi zdarzeń. Kod wykonuje następujące czynności:  
  
1.  Otwiera <xref:System.Drawing.Image> i go rysuje do ekranu.  
  
2.  Tworzy <xref:System.Drawing.Imaging.ImageAttributes> obiektu i ustawia progu za pomocą <xref:System.Drawing.Imaging.ImageAttributes.SetThreshold%2A> metody.  
  
3.  Rysuje obraz do ekranu przy użyciu progu <xref:System.Drawing.Imaging.ImageAttributes> obiektu.  
  
 [!code-cpp[System.Drawing.ClassicImaging.ImageAttributes#7](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicImaging.ImageAttributes/CPP/form1.cpp#7)]
 [!code-csharp[System.Drawing.ClassicImaging.ImageAttributes#7](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicImaging.ImageAttributes/CS/form1.cs#7)]
 [!code-vb[System.Drawing.ClassicImaging.ImageAttributes#7](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicImaging.ImageAttributes/VB/form1.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetThreshold">
      <MemberSignature Language="C#" Value="public void SetThreshold (float threshold, System.Drawing.Imaging.ColorAdjustType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetThreshold(float32 threshold, valuetype System.Drawing.Imaging.ColorAdjustType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.SetThreshold(System.Single,System.Drawing.Imaging.ColorAdjustType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetThreshold (threshold As Single, type As ColorAdjustType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetThreshold(float threshold, System::Drawing::Imaging::ColorAdjustType type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="threshold" Type="System.Single" />
        <Parameter Name="type" Type="System.Drawing.Imaging.ColorAdjustType" />
      </Parameters>
      <Docs>
        <param name="threshold">Wartość progu od 0,0 do 1,0, który służy jako punkt przerwania do sortowania kolorów, które będą zamapowane do maksymalnej lub minimalnej wartości.</param>
        <param name="type">Element <see cref="T:System.Drawing.Imaging.ColorAdjustType" /> kategorii, dla którego ustawiono wartość progową kolor, który określa.</param>
        <summary>Ustawia wartość progową (przezroczystość zakres) dla określonej kategorii.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Próg wynosi wartość z zakresu od 0 do 1, który określa punkt odcięcia dla każdego składnika kolorów. Załóżmy na przykład, próg wynosi 0,7 i Załóżmy, że są renderowania kolor czerwony którego, zielonemu i niebieskiemu składniki są 230, 50 i 220, odpowiednio. Składnika czerwony (230) jest większa niż 0.7x255, więc składnika czerwony zostanie zmieniony na 255 (pełna intensywność). Składnika zielony (50) jest mniejsza niż 0.7x255, więc składnika zielony zostanie zmieniony na 0. Składnika niebieski (220) jest większa niż 0.7x255, więc składnika niebieski zostanie zmieniona do 255.  
  
 <xref:System.Drawing.Imaging.ImageAttributes> Obiekt zachowuje ustawienia koloru i skali szarości na pięć kategorii dopasowania: domyślny, mapy bitowej pędzla, Pióro i tekst. Na przykład można określić wartości progowej dla domyślnej kategorii, próg dla kategorii mapy bitowej i nadal próg różnych kategorii pióra.  
  
 Ustawienia domyślne dopasowania Kolor i dostosowanie skali szarości dotyczą wszystkich kategorii, które nie mają ustawień dopasowania we własnym. Na przykład jeśli nigdy nie określono żadnych ustawień dopasowania dla kategorii pióra, domyślne ustawienia dotyczą kategorii pióra.  
  
 Natychmiast po określeniu dopasowywanie kolorów lub ustawienie skali szarości dopasowania dla określonej kategorii, domyślne ustawienia dostosowania nie dotyczą tej kategorii. Na przykład załóżmy, że należy określić kolekcję ustawień dopasowania dla domyślnej kategorii. Należy ustawić wartość progową dla kategorii pióra przez przekazanie <xref:System.Drawing.Imaging.ColorAdjustType.Pen> do <xref:System.Drawing.Imaging.ImageAttributes.SetThreshold%2A> metody, Brak dopasowania domyślne ustawienia będą dotyczyć pióra.  
  
   
  
## Examples  
 Na przykład kod, zobacz <xref:System.Drawing.Imaging.ImageAttributes.SetThreshold%28System.Single%29> metody.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetWrapMode">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Ustawia tryb zawijania.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetWrapMode">
      <MemberSignature Language="C#" Value="public void SetWrapMode (System.Drawing.Drawing2D.WrapMode mode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetWrapMode(valuetype System.Drawing.Drawing2D.WrapMode mode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.SetWrapMode(System.Drawing.Drawing2D.WrapMode)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetWrapMode (mode As WrapMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetWrapMode(System::Drawing::Drawing2D::WrapMode mode);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mode" Type="System.Drawing.Drawing2D.WrapMode" />
      </Parameters>
      <Docs>
        <param name="mode">Element <see cref="T:System.Drawing.Drawing2D.WrapMode" /> powtarzające kopie obrazu, który określa służą do kafelka obszaru.</param>
        <summary>Ustawia tryb zawijania, który służy do określania sposobu kafelka tekstury między kształtu lub na granicach kształtu. Tekstury jest rozmieszczany na kształt, aby wypełnić, gdy tekstury jest mniejszy niż kształt, który go wypełnia.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wywoływanie <xref:System.Drawing.Imaging.ImageAttributes.SetWrapMode%28System.Drawing.Drawing2D.WrapMode%29> jest odpowiednikiem wywołania metody <xref:System.Drawing.Imaging.ImageAttributes.SetWrapMode%28System.Drawing.Drawing2D.WrapMode%2CSystem.Drawing.Color%29> i przekazywanie <xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType> dla `color` parametru. <xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType> Określa kolor pikseli poza renderowanym obrazie. Kolor ten jest widoczny, jeśli ustawiono parametr trybu <xref:System.Drawing.Drawing2D.WrapMode.Clamp> i prostokąt źródła przekazany do <xref:System.Drawing.Graphics.DrawImage%2A> metody jest większy niż samego obrazu.  
  
   
  
## Examples  
 Poniższy przykładowy kod jest przeznaczony do użytku z formularzy systemu Windows i wymaga <xref:System.Windows.Forms.PaintEventArgs> `e`, który jest parametrem <xref:System.Windows.Forms.Control.Paint> obsługi zdarzeń. Kod wykonuje następujące czynności:  
  
1.  Otwiera <xref:System.Drawing.Image> z Circle3.jpg pliku (małe, wypełnione czerwone kółko) i go rysuje do ekranu.  
  
2.  Tworzy <xref:System.Drawing.Imaging.ImageAttributes> obiektu i zestawy <xref:System.Drawing.Drawing2D.WrapMode> wyliczeniu, aby <xref:System.Drawing.Drawing2D.WrapMode.Tile>.  
  
3.  Tworzy <xref:System.Drawing.TextureBrush> przy użyciu obrazu z pliku Circle3.jpg.  
  
4.  Rysuje prostokąt do ekranu, który jest wypełniony okręgi małe, wypełnione czerwony.  
  
 [!code-cpp[System.Drawing.ClassicImaging.ImageAttributes#8](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicImaging.ImageAttributes/CPP/form1.cpp#8)]
 [!code-csharp[System.Drawing.ClassicImaging.ImageAttributes#8](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicImaging.ImageAttributes/CS/form1.cs#8)]
 [!code-vb[System.Drawing.ClassicImaging.ImageAttributes#8](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicImaging.ImageAttributes/VB/form1.vb#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetWrapMode">
      <MemberSignature Language="C#" Value="public void SetWrapMode (System.Drawing.Drawing2D.WrapMode mode, System.Drawing.Color color);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetWrapMode(valuetype System.Drawing.Drawing2D.WrapMode mode, valuetype System.Drawing.Color color) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.SetWrapMode(System.Drawing.Drawing2D.WrapMode,System.Drawing.Color)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetWrapMode(System::Drawing::Drawing2D::WrapMode mode, System::Drawing::Color color);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mode" Type="System.Drawing.Drawing2D.WrapMode" />
        <Parameter Name="color" Type="System.Drawing.Color" />
      </Parameters>
      <Docs>
        <param name="mode">Element <see cref="T:System.Drawing.Drawing2D.WrapMode" /> powtarzające kopie obrazu, który określa służą do kafelka obszaru.</param>
        <param name="color">
          <see cref="T:System.Drawing.Imaging.ImageAttributes" /> Obiekt, który określa kolor pikseli poza renderowanym obrazie. Kolor ten jest widoczny, jeśli ustawiono parametr trybu <see cref="F:System.Drawing.Drawing2D.WrapMode.Clamp" /> i prostokąt źródła przekazany do <see cref="Overload:System.Drawing.Graphics.DrawImage" /> jest większy niż samego obrazu.</param>
        <summary>Ustawia tryb zawijania i kolor używany do określania, jak Kafelek tekstury między kształtu lub na granicach kształtu. Tekstury jest rozmieszczany na kształt, aby wypełnić, gdy tekstury jest mniejszy niż kształt, który go wypełnia.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Na przykład kod, zobacz <xref:System.Drawing.Imaging.ImageAttributes.SetWrapMode%28System.Drawing.Drawing2D.WrapMode%29> metody.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetWrapMode">
      <MemberSignature Language="C#" Value="public void SetWrapMode (System.Drawing.Drawing2D.WrapMode mode, System.Drawing.Color color, bool clamp);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetWrapMode(valuetype System.Drawing.Drawing2D.WrapMode mode, valuetype System.Drawing.Color color, bool clamp) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.SetWrapMode(System.Drawing.Drawing2D.WrapMode,System.Drawing.Color,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetWrapMode(System::Drawing::Drawing2D::WrapMode mode, System::Drawing::Color color, bool clamp);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mode" Type="System.Drawing.Drawing2D.WrapMode" />
        <Parameter Name="color" Type="System.Drawing.Color" />
        <Parameter Name="clamp" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="mode">Element <see cref="T:System.Drawing.Drawing2D.WrapMode" /> powtarzające kopie obrazu, który określa służą do kafelka obszaru.</param>
        <param name="color">Obiekt kolor, który określa kolor pikseli poza renderowanym obrazie. Kolor ten jest widoczny, jeśli ustawiono parametr trybu <see cref="F:System.Drawing.Drawing2D.WrapMode.Clamp" /> i prostokąt źródła przekazany do <see cref="Overload:System.Drawing.Graphics.DrawImage" /> jest większy niż samego obrazu.</param>
        <param name="clamp">Ten parametr nie ma znaczenia. Ustaw ją na <see langword="false" />.</param>
        <summary>Ustawia tryb zawijania i kolor używany do określania, jak Kafelek tekstury między kształtu lub na granicach kształtu. Tekstury jest rozmieszczany na kształt, aby wypełnić, gdy tekstury jest mniejszy niż kształt, który go wypełnia.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Na przykład kod, zobacz <xref:System.Drawing.Imaging.ImageAttributes.SetWrapMode%28System.Drawing.Drawing2D.WrapMode%29> metody.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>