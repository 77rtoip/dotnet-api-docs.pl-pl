<Type Name="ImageAttributes" FullName="System.Drawing.Imaging.ImageAttributes">
  <Metadata><Meta Name="ms.openlocfilehash" Value="be9fac90619d93b9a5a216a8a94fa146ab0300a9" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69361333" /></Metadata><TypeSignature Language="C#" Value="public sealed class ImageAttributes : ICloneable, IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi sealed beforefieldinit ImageAttributes extends System.Object implements class System.ICloneable, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Drawing.Imaging.ImageAttributes" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ImageAttributes&#xA;Implements ICloneable, IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class ImageAttributes sealed : ICloneable, IDisposable" />
  <TypeSignature Language="F#" Value="type ImageAttributes = class&#xA;    interface ICloneable&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Drawing</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Drawing.Common</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.1</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Zawiera informacje o sposobie manipulowania kolorami bitmap i metaplików podczas renderowania.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Drawing.Imaging.ImageAttributes> Obiekt utrzymuje kilka ustawień dopasowania koloru, w tym macierze dopasowania koloru, macierze dopasowania w skali odcieni szarości, wartości korekcji gamma, tabele mapy kolorów i wartości progowe koloru. Podczas renderowania kolory można skorygować, przyciemnić, rozjaśnić i usunąć. Aby zastosować takie manipulacje, zainicjuj <xref:System.Drawing.Imaging.ImageAttributes> obiekt i przekaż ścieżkę do tego <xref:System.Drawing.Imaging.ImageAttributes> obiektu (wraz <xref:System.Drawing.Image>z ścieżką) do <xref:System.Drawing.Graphics.DrawImage%2A> metody.  
  
   
  
## Examples  
 Poniższy przykład pobiera obraz, który jest pojedynczym kolorem (0,2, 0,0, 0,4, 1,0) i podwaja składnik czerwony dodaje 0,2 do składników czerwony, zielony i niebieski  
  
 Na poniższej ilustracji przedstawiono oryginalny obraz po lewej stronie i przekształcony obraz po prawej stronie.  
  
 ![Kolory] (~/add/media/colortrans1.png "Kolory")  
  
 Kod w poniższym przykładzie używa następujących kroków, aby wykonać Ponowne kolorowanie:  
  
1.  <xref:System.Drawing.Imaging.ColorMatrix> Inicjowanie obiektu.  
  
2.  Utwórz obiekt i <xref:System.Drawing.Imaging.ColorMatrix> przekaż obiekt <xref:System.Drawing.Imaging.ImageAttributes.SetColorMatrix%2A> dometodyobiektu.<xref:System.Drawing.Imaging.ImageAttributes> <xref:System.Drawing.Imaging.ImageAttributes>  
  
3.  <xref:System.Drawing.Imaging.ImageAttributes> Przekaż obiekt<xref:System.Drawing.Graphics.DrawImage%2A> do metody<xref:System.Drawing.Graphics> obiektu.  
  
 [!code-csharp[System.Drawing.RecoloringImages#21](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.RecoloringImages/CS/Class1.cs#21)]
 [!code-vb[System.Drawing.RecoloringImages#21](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.RecoloringImages/VB/Class1.vb#21)]  
  
 ]]></format>
    </remarks>
    <related type="Article" href="https://msdn.microsoft.com/library/44df4556-a433-49c0-ac0f-9a12063a5860">Instrukcje: Stosowanie macierzy kolorów do transformacji pojedynczego koloru</related>
    <related type="Article" href="https://msdn.microsoft.com/library/f28c54fd-9c80-4f6f-b242-55f7ffcda84b">Ponowne kolorowanie obrazów</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ImageAttributes ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ImageAttributes();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Drawing.Imaging.ImageAttributes" /> klasy.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearBrushRemapTable">
      <MemberSignature Language="C#" Value="public void ClearBrushRemapTable ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ClearBrushRemapTable() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.ClearBrushRemapTable" />
      <MemberSignature Language="VB.NET" Value="Public Sub ClearBrushRemapTable ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ClearBrushRemapTable();" />
      <MemberSignature Language="F#" Value="member this.ClearBrushRemapTable : unit -&gt; unit" Usage="imageAttributes.ClearBrushRemapTable " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Czyści tabelę <see cref="T:System.Drawing.Imaging.ImageAttributes" /> kolorów pędzla.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Drawing.Imaging.ImageAttributes> Obiekt zachowuje ustawienia koloru i skali szarości dla pięciu kategorii korekty: domyślnego, bitmapowego, pędzla, pióra i tekstu. Na przykład można określić jedną tabelę z mapowaniem kolorów dla kategorii domyślnej, inną tabelę z ponownym mapowaniem kolorów dla kategorii Mapa bitowa i nadal inną tabelę z ponownym mapowaniem kolorów dla kategorii pędzla.  
  
 Domyślne ustawienia dostosowania koloru i skali odcieni szarości mają zastosowanie do wszystkich kategorii, które nie mają własnych ustawień korekty. Na przykład, jeśli nigdy nie określisz żadnych ustawień dopasowania dla kategorii pędzla, ustawienia domyślne stosują się do kategorii pędzla.  
  
 Po określeniu ustawienia dostosowania koloru lub skali odcieni szarości dla określonej kategorii domyślne ustawienia dostosowania nie będą już stosowane do tej kategorii. Załóżmy na przykład, że określisz domyślną tabelę ponownego mapowania, która konwertuje kolor czerwony na zielony, i określisz domyślną wartość gamma 1,8. Jeśli wywołasz <xref:System.Drawing.Imaging.ImageAttributes.SetBrushRemapTable%2A> metodę, domyślna tabela ponownego mapowania (czerwony do zielony) i domyślna wartość gamma (1,8) nie zostaną zastosowane do pędzli. Jeśli później wywołasz <xref:System.Drawing.Imaging.ImageAttributes.ClearBrushRemapTable%2A> metodę, Kategoria pędzla nie zostanie przywrócona do domyślnej tabeli ponownego mapowania. zamiast tego Kategoria pędzla nie będzie miała tabeli ponownego mapowania. Analogicznie Kategoria pędzla nie spowoduje przywrócenia domyślnej wartości gamma; Zamiast tego Kategoria pędzla nie będzie miała wartości gamma.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ClearColorKey">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Czyści klucz koloru (zakres przezroczystości).</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ClearColorKey">
      <MemberSignature Language="C#" Value="public void ClearColorKey ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ClearColorKey() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.ClearColorKey" />
      <MemberSignature Language="VB.NET" Value="Public Sub ClearColorKey ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ClearColorKey();" />
      <MemberSignature Language="F#" Value="member this.ClearColorKey : unit -&gt; unit" Usage="imageAttributes.ClearColorKey " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Czyści klucz koloru (zakres przezroczystości) dla kategorii domyślnej.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Drawing.Imaging.ImageAttributes> Obiekt zachowuje ustawienia koloru i skali szarości dla pięciu kategorii korekty: domyślnego, bitmapowego, pędzla, pióra i tekstu. Na przykład można określić jeden klucz koloru dla kategorii domyślnej, inny klucz koloru dla kategorii Mapa bitowa, a także inny klucz koloru dla kategorii pióra.  
  
 Domyślne ustawienia dostosowania koloru i skali odcieni szarości mają zastosowanie do wszystkich kategorii, które nie mają własnych ustawień korekty. Na przykład, jeśli nigdy nie określisz żadnych ustawień dopasowania dla kategorii pióra, ustawienia domyślne stosują się do kategorii pióro.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearColorKey">
      <MemberSignature Language="C#" Value="public void ClearColorKey (System.Drawing.Imaging.ColorAdjustType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ClearColorKey(valuetype System.Drawing.Imaging.ColorAdjustType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.ClearColorKey(System.Drawing.Imaging.ColorAdjustType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ClearColorKey (type As ColorAdjustType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ClearColorKey(System::Drawing::Imaging::ColorAdjustType type);" />
      <MemberSignature Language="F#" Value="member this.ClearColorKey : System.Drawing.Imaging.ColorAdjustType -&gt; unit" Usage="imageAttributes.ClearColorKey type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Drawing.Imaging.ColorAdjustType" />
      </Parameters>
      <Docs>
        <param name="type">Element określający <see cref="T:System.Drawing.Imaging.ColorAdjustType" /> kategorię, dla której jest czyszczony klucz koloru.</param>
        <summary>Czyści klucz koloru (zakres przezroczystości) dla określonej kategorii.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Drawing.Imaging.ImageAttributes> Obiekt zachowuje ustawienia koloru i skali szarości dla pięciu kategorii korekty: domyślnego, bitmapowego, pędzla, pióra i tekstu. Na przykład można określić jeden klucz koloru dla kategorii domyślnej, inny klucz koloru dla kategorii Mapa bitowa, a także inny klucz koloru dla kategorii pióra.  
  
 Domyślne ustawienia dostosowania koloru i skali odcieni szarości mają zastosowanie do wszystkich kategorii, które nie mają własnych ustawień korekty. Na przykład, jeśli nigdy nie określisz żadnych ustawień dopasowania dla kategorii pióra, ustawienia domyślne stosują się do kategorii pióro.  
  
 Po określeniu ustawienia dostosowania koloru lub skali odcieni szarości dla określonej kategorii domyślne ustawienia dostosowania nie będą już stosowane do tej kategorii. Załóżmy na przykład, że określisz domyślny klucz koloru, który sprawia, że dowolny kolor z czerwonym składnikiem od 200 do 255 jest przezroczysty i określisz domyślną wartość gamma równą 1,8. Jeśli ustawisz klucz koloru kategorii pióra przez wywołanie <xref:System.Drawing.Imaging.ImageAttributes.SetColorKey%2A> metody, domyślny klucz koloru i domyślna wartość gamma nie będą miały zastosowania do piór. Jeśli później wyczyścisz klawisz koloru pióra przez wywołanie <xref:System.Drawing.Imaging.ImageAttributes.ClearColorKey%2A> metody, Kategoria pióra nie zostanie przywrócona do domyślnego klucza koloru, a kategoria pióra nie będzie miała żadnego klucza koloru. Podobnie Kategoria pióra nie będzie przywracać domyślnej wartości gamma; Zamiast tego Kategoria pióra nie będzie miała wartości gamma.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ClearColorMatrix">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Czyści tablicę dopasowania kolorów.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ClearColorMatrix">
      <MemberSignature Language="C#" Value="public void ClearColorMatrix ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ClearColorMatrix() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.ClearColorMatrix" />
      <MemberSignature Language="VB.NET" Value="Public Sub ClearColorMatrix ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ClearColorMatrix();" />
      <MemberSignature Language="F#" Value="member this.ClearColorMatrix : unit -&gt; unit" Usage="imageAttributes.ClearColorMatrix " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Czyści macierz dopasowania kolorów dla kategorii domyślnej.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Drawing.Imaging.ImageAttributes> Obiekt zachowuje ustawienia koloru i skali szarości dla pięciu kategorii korekty: domyślnego, bitmapowego, pędzla, pióra i tekstu. Na przykład można określić matrycę dopasowania koloru dla kategorii domyślnej, inną tablicę dopasowania kolorów dla kategorii Mapa bitowa i nadal inną tablicę dopasowania kolorów dla kategorii pióro.  
  
 Domyślne ustawienia dostosowania koloru i skali odcieni szarości mają zastosowanie do wszystkich kategorii, które nie mają własnych ustawień korekty. Na przykład, jeśli nigdy nie określisz żadnych ustawień dopasowania dla kategorii pióra, ustawienia domyślne stosują się do kategorii pióro.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearColorMatrix">
      <MemberSignature Language="C#" Value="public void ClearColorMatrix (System.Drawing.Imaging.ColorAdjustType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ClearColorMatrix(valuetype System.Drawing.Imaging.ColorAdjustType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.ClearColorMatrix(System.Drawing.Imaging.ColorAdjustType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ClearColorMatrix (type As ColorAdjustType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ClearColorMatrix(System::Drawing::Imaging::ColorAdjustType type);" />
      <MemberSignature Language="F#" Value="member this.ClearColorMatrix : System.Drawing.Imaging.ColorAdjustType -&gt; unit" Usage="imageAttributes.ClearColorMatrix type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Drawing.Imaging.ColorAdjustType" />
      </Parameters>
      <Docs>
        <param name="type">Element określający <see cref="T:System.Drawing.Imaging.ColorAdjustType" /> kategorię, dla której jest wyczyszczona macierz korekta koloru.</param>
        <summary>Czyści macierz dopasowania kolorów dla określonej kategorii.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Drawing.Imaging.ImageAttributes> Obiekt zachowuje ustawienia koloru i skali szarości dla pięciu kategorii korekty: domyślnego, bitmapowego, pędzla, pióra i tekstu. Na przykład można określić matrycę dopasowania koloru dla kategorii domyślnej, inną tablicę dopasowania kolorów dla kategorii Mapa bitowa i nadal inną tablicę dopasowania kolorów dla kategorii pióro.  
  
 Domyślne ustawienia dostosowania koloru i skali odcieni szarości mają zastosowanie do wszystkich kategorii, które nie mają własnych ustawień korekty. Na przykład, jeśli nigdy nie określisz żadnych ustawień dopasowania dla kategorii pióra, ustawienia domyślne stosują się do kategorii pióro.  
  
 Po określeniu ustawienia dostosowania koloru lub skali odcieni szarości dla określonej kategorii domyślne ustawienia dostosowania nie będą już stosowane do tej kategorii. Załóżmy na przykład, że określisz macierz dopasowania kolorów i wartość gamma dla kategorii domyślnej. W przypadku ustawienia macierzy dopasowania koloru dla kategorii pióra przez wywołanie <xref:System.Drawing.Imaging.ImageAttributes.SetColorMatrix%2A> metody domyślna macierz dopasowania koloru nie będzie stosowana do piór. Jeśli później wyczyścisz matrycę dopasowania koloru pióra przez wywołanie <xref:System.Drawing.Imaging.ImageAttributes.ClearColorMatrix%2A> metody, Kategoria pióra nie powróci do domyślnej macierzy korekt. zamiast tego Kategoria pióra nie będzie miała macierzy korekt. Podobnie Kategoria pióra nie będzie przywracać domyślnej wartości gamma; Zamiast tego Kategoria pióra nie będzie miała wartości gamma.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ClearGamma">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Wyłącza korekcję gamma.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ClearGamma">
      <MemberSignature Language="C#" Value="public void ClearGamma ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ClearGamma() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.ClearGamma" />
      <MemberSignature Language="VB.NET" Value="Public Sub ClearGamma ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ClearGamma();" />
      <MemberSignature Language="F#" Value="member this.ClearGamma : unit -&gt; unit" Usage="imageAttributes.ClearGamma " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Wyłącza korekcję gamma dla kategorii domyślnej.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Drawing.Imaging.ImageAttributes> Obiekt zachowuje ustawienia koloru i skali szarości dla pięciu kategorii korekty: domyślnego, bitmapowego, pędzla, pióra i tekstu. Na przykład można określić wartość gamma dla kategorii domyślnej, inną wartość gamma dla kategorii Mapa bitowa i nadal inną wartość gamma dla kategorii pióro.  
  
 Domyślne ustawienia dostosowania koloru i skali odcieni szarości mają zastosowanie do wszystkich kategorii, które nie mają własnych ustawień korekty. Na przykład, jeśli nigdy nie określisz żadnych ustawień dopasowania dla kategorii pióra, ustawienia domyślne stosują się do kategorii pióro.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearGamma">
      <MemberSignature Language="C#" Value="public void ClearGamma (System.Drawing.Imaging.ColorAdjustType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ClearGamma(valuetype System.Drawing.Imaging.ColorAdjustType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.ClearGamma(System.Drawing.Imaging.ColorAdjustType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ClearGamma (type As ColorAdjustType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ClearGamma(System::Drawing::Imaging::ColorAdjustType type);" />
      <MemberSignature Language="F#" Value="member this.ClearGamma : System.Drawing.Imaging.ColorAdjustType -&gt; unit" Usage="imageAttributes.ClearGamma type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Drawing.Imaging.ColorAdjustType" />
      </Parameters>
      <Docs>
        <param name="type">Element określający <see cref="T:System.Drawing.Imaging.ColorAdjustType" /> kategorię, dla której jest wyłączona korekcja gamma.</param>
        <summary>Wyłącza korekcję gamma dla określonej kategorii.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Drawing.Imaging.ImageAttributes> Obiekt zachowuje ustawienia koloru i skali szarości dla pięciu kategorii korekty: domyślnego, bitmapowego, pędzla, pióra i tekstu. Na przykład można określić wartość gamma dla kategorii domyślnej, inną wartość gamma dla kategorii Mapa bitowa i nadal inną wartość gamma dla kategorii pióro.  
  
 Domyślne ustawienia dostosowania koloru i skali odcieni szarości mają zastosowanie do wszystkich kategorii, które nie mają własnych ustawień korekty. Na przykład, jeśli nigdy nie określisz żadnych ustawień dopasowania dla kategorii pióra, ustawienia domyślne stosują się do kategorii pióro.  
  
 Po określeniu ustawienia dostosowania koloru lub skali odcieni szarości dla określonej kategorii domyślne ustawienia dostosowania nie będą już stosowane do tej kategorii. Załóżmy na przykład, że określisz wartość gamma i macierz dopasowania koloru dla kategorii domyślnej. Jeśli ustawisz wartość gamma dla kategorii pióra przez wywołanie <xref:System.Drawing.Imaging.ImageAttributes.SetGamma%2A> metody, domyślna wartość gamma nie będzie dotyczyła piór. Jeśli później wyczyścisz wartość gamma pióra przez wywołanie <xref:System.Drawing.Imaging.ImageAttributes.ClearGamma%2A> metody, Kategoria pióra nie zostanie przywrócona do domyślnej wartości gamma, a kategoria pióra nie będzie miała wartości gamma. Podobnie Kategoria pióra nie będzie przywracać domyślnej macierzy dopasowania kolorów; Zamiast tego Kategoria pióra nie będzie miała macierzy dopasowania koloru.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ClearNoOp">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><see langword="NoOp" /> Czyści ustawienie.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ClearNoOp">
      <MemberSignature Language="C#" Value="public void ClearNoOp ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ClearNoOp() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.ClearNoOp" />
      <MemberSignature Language="VB.NET" Value="Public Sub ClearNoOp ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ClearNoOp();" />
      <MemberSignature Language="F#" Value="member this.ClearNoOp : unit -&gt; unit" Usage="imageAttributes.ClearNoOp " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see langword="NoOp" /> Czyści ustawienie kategorii domyślnej.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Drawing.Imaging.ImageAttributes> Obiekt zachowuje ustawienia koloru i skali szarości dla pięciu kategorii korekty: domyślnego, bitmapowego, pędzla, pióra i tekstu. Na przykład można określić wartość gamma dla kategorii domyślnej, inną wartość gamma dla kategorii Mapa bitowa i nadal inną wartość gamma dla kategorii pióro.  
  
 Można wyłączyć korektę koloru dla kategorii domyślnej, wywołując <xref:System.Drawing.Imaging.ImageAttributes.SetNoOp%2A> metodę. Później można przywrócić dopasowanie koloru dla kategorii domyślnej przez wywołanie <xref:System.Drawing.Imaging.ImageAttributes.ClearNoOp%2A> metody. Następnie dopasowanie koloru wraca do tego, co zostało wykonane przed wywołaniem <xref:System.Drawing.Imaging.ImageAttributes.SetNoOp%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearNoOp">
      <MemberSignature Language="C#" Value="public void ClearNoOp (System.Drawing.Imaging.ColorAdjustType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ClearNoOp(valuetype System.Drawing.Imaging.ColorAdjustType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.ClearNoOp(System.Drawing.Imaging.ColorAdjustType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ClearNoOp (type As ColorAdjustType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ClearNoOp(System::Drawing::Imaging::ColorAdjustType type);" />
      <MemberSignature Language="F#" Value="member this.ClearNoOp : System.Drawing.Imaging.ColorAdjustType -&gt; unit" Usage="imageAttributes.ClearNoOp type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Drawing.Imaging.ColorAdjustType" />
      </Parameters>
      <Docs>
        <param name="type">Element <see cref="T:System.Drawing.Imaging.ColorAdjustType" /> określający kategorię, dla <see langword="NoOp" /> której ustawienie jest wyczyszczone.</param>
        <summary><see langword="NoOp" /> Czyści ustawienia dla określonej kategorii.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Drawing.Imaging.ImageAttributes> Obiekt zachowuje ustawienia koloru i skali szarości dla pięciu kategorii korekty: domyślnego, bitmapowego, pędzla, pióra i tekstu. Na przykład można określić wartość gamma dla kategorii domyślnej, inną wartość gamma dla kategorii Mapa bitowa i nadal inną wartość gamma dla kategorii pióro.  
  
 Można wyłączyć korektę koloru dla określonej kategorii, wywołując <xref:System.Drawing.Imaging.ImageAttributes.SetNoOp%2A> metodę. Później można przywrócić dopasowanie koloru dla tej kategorii, wywołując <xref:System.Drawing.Imaging.ImageAttributes.ClearNoOp%2A> metodę. Następnie dopasowanie koloru wraca do tego, co zostało wykonane przed wywołaniem <xref:System.Drawing.Imaging.ImageAttributes.SetNoOp%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ClearOutputChannel">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Czyści ustawienie kanału wyjściowego CMYK (błękitny-amarantowy-żółty-czarny).</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ClearOutputChannel">
      <MemberSignature Language="C#" Value="public void ClearOutputChannel ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ClearOutputChannel() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.ClearOutputChannel" />
      <MemberSignature Language="VB.NET" Value="Public Sub ClearOutputChannel ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ClearOutputChannel();" />
      <MemberSignature Language="F#" Value="member this.ClearOutputChannel : unit -&gt; unit" Usage="imageAttributes.ClearOutputChannel " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Czyści ustawienie kanału wyjściowego CMYK (błękitny-amarantowy-Yellow-Black) dla kategorii domyślnej.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Drawing.Imaging.ImageAttributes> Obiekt zachowuje ustawienia koloru i skali szarości dla pięciu kategorii korekty: domyślnego, bitmapowego, pędzla, pióra i tekstu. Na przykład można określić kanał wyjściowy dla kategorii domyślnej i inny kanał wyjściowy dla kategorii Mapa bitowa.  
  
 Domyślne ustawienia dostosowania koloru i skali odcieni szarości mają zastosowanie do wszystkich kategorii, które nie mają własnych ustawień korekty. Jeśli na przykład nigdy nie określisz żadnych ustawień dopasowania dla kategorii Mapa bitowa, ustawienia domyślne są stosowane do kategorii Mapa bitowa.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearOutputChannel">
      <MemberSignature Language="C#" Value="public void ClearOutputChannel (System.Drawing.Imaging.ColorAdjustType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ClearOutputChannel(valuetype System.Drawing.Imaging.ColorAdjustType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.ClearOutputChannel(System.Drawing.Imaging.ColorAdjustType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ClearOutputChannel (type As ColorAdjustType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ClearOutputChannel(System::Drawing::Imaging::ColorAdjustType type);" />
      <MemberSignature Language="F#" Value="member this.ClearOutputChannel : System.Drawing.Imaging.ColorAdjustType -&gt; unit" Usage="imageAttributes.ClearOutputChannel type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Drawing.Imaging.ColorAdjustType" />
      </Parameters>
      <Docs>
        <param name="type">Element określający <see cref="T:System.Drawing.Imaging.ColorAdjustType" /> kategorię, dla której ustawienie kanału wyjściowego jest wyczyszczone.</param>
        <summary>Czyści ustawienie kanału wyjściowego (błękitny-amarantowy-Yellow-Black) dla określonej kategorii.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Drawing.Imaging.ImageAttributes> Obiekt zachowuje ustawienia koloru i skali szarości dla pięciu kategorii korekty: domyślnego, bitmapowego, pędzla, pióra i tekstu. Na przykład można określić kanał wyjściowy dla kategorii domyślnej i inny kanał wyjściowy dla kategorii Mapa bitowa.  
  
 Domyślne ustawienia dostosowania koloru i skali odcieni szarości mają zastosowanie do wszystkich kategorii, które nie mają własnych ustawień korekty. Jeśli na przykład nigdy nie określisz żadnych ustawień dopasowania dla kategorii Mapa bitowa, ustawienia domyślne są stosowane do kategorii Mapa bitowa.  
  
 Po określeniu ustawienia dostosowania koloru lub skali odcieni szarości dla określonej kategorii domyślne ustawienia dostosowania nie będą już stosowane do tej kategorii. Załóżmy na przykład, że określisz kanał wyjściowy i macierz dopasowania dla kategorii domyślnej. W przypadku ustawienia kanału wyjściowego dla kategorii Mapa bitowa przez wywołanie <xref:System.Drawing.Imaging.ImageAttributes.SetOutputChannel%2A> metody domyślny kanał wyjściowy nie będzie stosowany do map bitowych. Jeśli później wyczyścisz kanał wyjściowy mapy bitowej przez wywołanie <xref:System.Drawing.Imaging.ImageAttributes.ClearOutputChannel%2A> metody, Kategoria Mapa bitowa nie zostanie przywrócona do domyślnego kanału wyjściowego, a w kategorii Mapa bitowa nie będzie żadnych ustawień kanału wyjściowego. Podobnie Kategoria Mapa bitowa nie będzie przywracać domyślnej macierzy dopasowania kolorów; Zamiast tego Kategoria mapy bitowej nie będzie miała macierzy dopasowania koloru.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ClearOutputChannelColorProfile">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Czyści ustawienie profilu koloru kanału wyjściowego.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ClearOutputChannelColorProfile">
      <MemberSignature Language="C#" Value="public void ClearOutputChannelColorProfile ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ClearOutputChannelColorProfile() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.ClearOutputChannelColorProfile" />
      <MemberSignature Language="VB.NET" Value="Public Sub ClearOutputChannelColorProfile ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ClearOutputChannelColorProfile();" />
      <MemberSignature Language="F#" Value="member this.ClearOutputChannelColorProfile : unit -&gt; unit" Usage="imageAttributes.ClearOutputChannelColorProfile " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Czyści ustawienie profilu koloru kanału wyjściowego dla kategorii domyślnej.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Drawing.Imaging.ImageAttributes> Obiekt zachowuje ustawienia koloru i skali szarości dla pięciu kategorii korekty: domyślnego, bitmapowego, pędzla, pióra i tekstu. Na przykład można określić profil kanału wyjściowego dla kategorii domyślnej i inny profil kanału wyjściowego dla kategorii Mapa bitowa.  
  
 Domyślne ustawienia dostosowania koloru i skali odcieni szarości mają zastosowanie do wszystkich kategorii, które nie mają własnych ustawień korekty. Jeśli na przykład nigdy nie określisz żadnych ustawień dopasowania dla kategorii Mapa bitowa, ustawienia domyślne są stosowane do kategorii Mapa bitowa.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearOutputChannelColorProfile">
      <MemberSignature Language="C#" Value="public void ClearOutputChannelColorProfile (System.Drawing.Imaging.ColorAdjustType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ClearOutputChannelColorProfile(valuetype System.Drawing.Imaging.ColorAdjustType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.ClearOutputChannelColorProfile(System.Drawing.Imaging.ColorAdjustType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ClearOutputChannelColorProfile (type As ColorAdjustType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ClearOutputChannelColorProfile(System::Drawing::Imaging::ColorAdjustType type);" />
      <MemberSignature Language="F#" Value="member this.ClearOutputChannelColorProfile : System.Drawing.Imaging.ColorAdjustType -&gt; unit" Usage="imageAttributes.ClearOutputChannelColorProfile type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Drawing.Imaging.ColorAdjustType" />
      </Parameters>
      <Docs>
        <param name="type">Element określający <see cref="T:System.Drawing.Imaging.ColorAdjustType" /> kategorię, dla której ustawienie profilu kanału wyjściowego jest wyczyszczone.</param>
        <summary>Czyści ustawienie profilu koloru kanału wyjściowego dla określonej kategorii.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Drawing.Imaging.ImageAttributes> Obiekt zachowuje ustawienia koloru i skali szarości dla pięciu kategorii korekty: domyślnego, bitmapowego, pędzla, pióra i tekstu. Na przykład można określić profil kanału wyjściowego dla kategorii domyślnej i inny profil kanału wyjściowego dla kategorii Mapa bitowa.  
  
 Domyślne ustawienia dostosowania koloru i skali odcieni szarości mają zastosowanie do wszystkich kategorii, które nie mają własnych ustawień korekty. Jeśli na przykład nigdy nie określisz żadnych ustawień dopasowania dla kategorii Mapa bitowa, ustawienia domyślne są stosowane do kategorii Mapa bitowa.  
  
 Po określeniu ustawienia dostosowania koloru lub skali odcieni szarości dla określonej kategorii domyślne ustawienia dostosowania nie będą już stosowane do tej kategorii. Załóżmy na przykład, że określisz profil kanału wyjściowego i macierz dopasowania dla kategorii domyślnej. Jeśli ustawisz profil kanału wyjściowego dla kategorii Mapa bitowa przez wywołanie <xref:System.Drawing.Imaging.ImageAttributes.SetOutputChannelColorProfile%2A> metody, domyślny profil kanału wyjściowego nie zostanie zastosowany do map bitowych. Jeśli później wyczyścisz profil kanału wyjściowego mapy bitowej przez wywołanie <xref:System.Drawing.Imaging.ImageAttributes.ClearOutputChannelColorProfile%2A> metody, Kategoria Mapa bitowa nie zostanie przywrócona do domyślnego profilu kanału wyjściowego, a w kategorii Mapa bitowa nie będzie żadnych ustawień profilu kanału wyjściowego. Podobnie Kategoria Mapa bitowa nie będzie przywracać domyślnej macierzy dopasowania kolorów; Zamiast tego Kategoria mapy bitowej nie będzie miała macierzy dopasowania koloru.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ClearRemapTable">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Czyści tabelę z mapowaniem kolorów.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ClearRemapTable">
      <MemberSignature Language="C#" Value="public void ClearRemapTable ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ClearRemapTable() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.ClearRemapTable" />
      <MemberSignature Language="VB.NET" Value="Public Sub ClearRemapTable ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ClearRemapTable();" />
      <MemberSignature Language="F#" Value="member this.ClearRemapTable : unit -&gt; unit" Usage="imageAttributes.ClearRemapTable " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Czyści tabelę z mapowaniem kolorów dla kategorii domyślnej.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Drawing.Imaging.ImageAttributes> Obiekt zachowuje ustawienia koloru i skali szarości dla pięciu kategorii korekty: domyślnego, bitmapowego, pędzla, pióra i tekstu. Na przykład można określić tabelę z ponownymi mapowaniami dla kategorii domyślnej, inną tabelę ponownego mapowania dla kategorii Mapa bitowa i nadal inną tabelę ponownego mapowania dla kategorii pióro.  
  
 Domyślne ustawienia dostosowania koloru i skali odcieni szarości mają zastosowanie do wszystkich kategorii, które nie mają własnych ustawień korekty. Na przykład, jeśli nigdy nie określisz żadnych ustawień dopasowania dla kategorii pióra, ustawienia domyślne stosują się do kategorii pióro.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearRemapTable">
      <MemberSignature Language="C#" Value="public void ClearRemapTable (System.Drawing.Imaging.ColorAdjustType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ClearRemapTable(valuetype System.Drawing.Imaging.ColorAdjustType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.ClearRemapTable(System.Drawing.Imaging.ColorAdjustType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ClearRemapTable (type As ColorAdjustType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ClearRemapTable(System::Drawing::Imaging::ColorAdjustType type);" />
      <MemberSignature Language="F#" Value="member this.ClearRemapTable : System.Drawing.Imaging.ColorAdjustType -&gt; unit" Usage="imageAttributes.ClearRemapTable type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Drawing.Imaging.ColorAdjustType" />
      </Parameters>
      <Docs>
        <param name="type">Element określający <see cref="T:System.Drawing.Imaging.ColorAdjustType" /> kategorię, dla której zostanie wyczyszczona tabela z przemapowaniem.</param>
        <summary>Czyści tabelę z mapowaniem kolorów dla określonej kategorii.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Drawing.Imaging.ImageAttributes> Obiekt zachowuje ustawienia koloru i skali szarości dla pięciu kategorii korekty: domyślnego, bitmapowego, pędzla, pióra i tekstu. Na przykład można określić tabelę z ponownymi mapowaniami dla kategorii domyślnej, inną tabelę ponownego mapowania dla kategorii Mapa bitowa i nadal inną tabelę ponownego mapowania dla kategorii pióro.  
  
 Domyślne ustawienia dostosowania koloru i skali odcieni szarości mają zastosowanie do wszystkich kategorii, które nie mają własnych ustawień korekty. Na przykład, jeśli nigdy nie określisz żadnych ustawień dopasowania dla kategorii pióra, ustawienia domyślne stosują się do kategorii pióro.  
  
 Po określeniu ustawienia dostosowania koloru lub skali odcieni szarości dla określonej kategorii domyślne ustawienia dostosowania nie będą już stosowane do tej kategorii. Załóżmy na przykład, że określono tabelę z ponownym mapowaniem i wartość gamma dla kategorii domyślnej. Jeśli ustawisz tabelę mapowania dla kategorii pióra przez wywołanie <xref:System.Drawing.Imaging.ImageAttributes.SetRemapTable%2A> metody, domyślna tabela ponownego mapowania nie zostanie zastosowana dla piór. Jeśli później wyczyścisz tabelę ponownego mapowania pióra przez <xref:System.Drawing.Imaging.ImageAttributes.ClearRemapTable%2A> wywołanie metody, Kategoria pióra nie zostanie przywrócona do domyślnej tabeli ponownego mapowania. zamiast tego Kategoria pióra nie będzie miała tabeli ponownego mapowania. Podobnie Kategoria pióra nie będzie przywracać domyślnej wartości gamma; Zamiast tego Kategoria pióra nie będzie miała wartości gamma.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ClearThreshold">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Czyści wartość progową.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ClearThreshold">
      <MemberSignature Language="C#" Value="public void ClearThreshold ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ClearThreshold() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.ClearThreshold" />
      <MemberSignature Language="VB.NET" Value="Public Sub ClearThreshold ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ClearThreshold();" />
      <MemberSignature Language="F#" Value="member this.ClearThreshold : unit -&gt; unit" Usage="imageAttributes.ClearThreshold " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Czyści wartość progową kategorii domyślnej.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Próg jest wartością z przedziału od 0 do 1, która określa punkt odcięcia dla każdego składnika koloru. Załóżmy na przykład, że próg jest ustawiony na 0,7 i Załóżmy, że renderuje kolor, którego składniki czerwony, zielony i niebieski są odpowiednio 230, 50 i 220. Składnik czerwony (230) jest większy niż 0.7 x255, więc składnik czerwony zostanie zmieniony na 255 (pełne natężenie). Zielony składnik (50) jest mniejszy niż 0.7 x255, więc zielony składnik zostanie zmieniony na 0. Niebieski składnik (220) jest większy niż 0.7 x255, więc niebieski składnik zostanie zmieniony na 255.  
  
 <xref:System.Drawing.Imaging.ImageAttributes> Obiekt zachowuje ustawienia koloru i skali szarości dla pięciu kategorii korekty: domyślnego, bitmapowego, pędzla, pióra i tekstu. Na przykład można określić próg dla kategorii domyślnej, inny próg dla kategorii Mapa bitowa i nadal inny próg dla kategorii pióro.  
  
 Domyślne ustawienia dostosowania koloru i skali odcieni szarości mają zastosowanie do wszystkich kategorii, które nie mają własnych ustawień korekty. Na przykład, jeśli nigdy nie określisz żadnych ustawień dopasowania dla kategorii pióra, ustawienia domyślne stosują się do kategorii pióro.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearThreshold">
      <MemberSignature Language="C#" Value="public void ClearThreshold (System.Drawing.Imaging.ColorAdjustType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ClearThreshold(valuetype System.Drawing.Imaging.ColorAdjustType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.ClearThreshold(System.Drawing.Imaging.ColorAdjustType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ClearThreshold (type As ColorAdjustType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ClearThreshold(System::Drawing::Imaging::ColorAdjustType type);" />
      <MemberSignature Language="F#" Value="member this.ClearThreshold : System.Drawing.Imaging.ColorAdjustType -&gt; unit" Usage="imageAttributes.ClearThreshold type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Drawing.Imaging.ColorAdjustType" />
      </Parameters>
      <Docs>
        <param name="type">Element określający <see cref="T:System.Drawing.Imaging.ColorAdjustType" /> kategorię, dla której jest wyczyszczony próg.</param>
        <summary>Czyści wartość progową dla określonej kategorii.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Próg jest wartością z przedziału od 0 do 1, która określa punkt odcięcia dla każdego składnika koloru. Załóżmy na przykład, że próg jest ustawiony na 0,7 i Załóżmy, że renderuje kolor, którego składniki czerwony, zielony i niebieski są odpowiednio 230, 50 i 220. Składnik czerwony (230) jest większy niż 0.7 x55, więc składnik czerwony zostanie zmieniony na 255 (pełne natężenie). Zielony składnik (50) jest mniejszy niż 0.7 x255, więc zielony składnik zostanie zmieniony na 0. Niebieski składnik (220) jest większy niż 0.7 x255, więc niebieski składnik zostanie zmieniony na 255.  
  
 <xref:System.Drawing.Imaging.ImageAttributes> Obiekt zachowuje ustawienia koloru i skali szarości dla pięciu kategorii korekty: domyślnego, bitmapowego, pędzla, pióra i tekstu. Na przykład można określić próg dla kategorii domyślnej, inny próg dla kategorii Mapa bitowa i nadal inny próg dla kategorii pióro.  
  
 Domyślne ustawienia dostosowania koloru i skali odcieni szarości mają zastosowanie do wszystkich kategorii, które nie mają własnych ustawień korekty. Na przykład, jeśli nigdy nie określisz żadnych ustawień dopasowania dla kategorii pióra, ustawienia domyślne stosują się do kategorii pióro.  
  
 Po określeniu ustawienia dostosowania koloru lub skali odcieni szarości dla określonej kategorii domyślne ustawienia dostosowania nie będą już stosowane do tej kategorii. Załóżmy na przykład, że określisz próg i wartość gamma dla kategorii domyślnej. Jeśli ustawisz próg dla kategorii pióra przez wywołanie <xref:System.Drawing.Imaging.ImageAttributes.SetThreshold%2A> metody, domyślny próg nie zostanie zastosowany do piór. Jeśli później wyczyścisz próg pióra przez wywołanie <xref:System.Drawing.Imaging.ImageAttributes.ClearThreshold%2A> metody, Kategoria pióra nie zostanie przywrócona do progu domyślnego; zamiast tego Kategoria pióra nie będzie miała wartości progowej. Podobnie Kategoria pióra nie będzie przywracać domyślnej wartości gamma; Zamiast tego Kategoria pióra nie będzie miała wartości gamma.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public object Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Function Clone () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ Clone();" />
      <MemberSignature Language="F#" Value="abstract member Clone : unit -&gt; obj&#xA;override this.Clone : unit -&gt; obj" Usage="imageAttributes.Clone " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ICloneable.Clone</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Tworzy dokładną kopię tego <see cref="T:System.Drawing.Imaging.ImageAttributes" /> obiektu.</summary>
        <returns>Obiekt <see cref="T:System.Drawing.Imaging.ImageAttributes" /> tworzony przez tę klasę, Rzutowanie jako obiekt.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="imageAttributes.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zwalnia wszystkie zasoby używane przez ten <see cref="T:System.Drawing.Imaging.ImageAttributes" /> obiekt.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wywołaj <xref:System.Drawing.Imaging.ImageAttributes.Dispose%2A> po zakończeniu korzystania z <xref:System.Drawing.Imaging.ImageAttributes>. <xref:System.Drawing.Imaging.ImageAttributes.Dispose%2A> Metoda<xref:System.Drawing.Imaging.ImageAttributes> pozostawia w stanie niezdatnym do użytku. Po wywołaniu <xref:System.Drawing.Imaging.ImageAttributes.Dispose%2A>należy wydać wszystkie odwołania <xref:System.Drawing.Imaging.ImageAttributes> do, aby moduł wyrzucania elementów bezużytecznych mógł odwoływać pamięć <xref:System.Drawing.Imaging.ImageAttributes> , którą zajmował. Aby uzyskać więcej informacji, zobacz [Oczyszczanie zasobów niezarządzanych](~/docs/standard/garbage-collection/unmanaged.md) i implementowanie [metody Dispose](~/docs/standard/garbage-collection/implementing-dispose.md).  
  
> [!NOTE]
>  Zawsze wywołuj <xref:System.Drawing.Imaging.ImageAttributes.Dispose%2A> przed wydaniem ostatniego odwołania <xref:System.Drawing.Imaging.ImageAttributes>do. W przeciwnym razie używane zasoby nie zostaną zwolnione do momentu wywołania <xref:System.Drawing.Imaging.ImageAttributes> `Finalize` metody obiektu przez moduł zbierający elementy bezużyteczne.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~ImageAttributes ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!ImageAttributes ()" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; unit" Usage="imageAttributes.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Umożliwia obiektowi podjęcie próby zwolnienia zasobów i wykonywanie innych operacji czyszczenia przed odinstalowaniem ich przez wyrzucanie elementów bezużytecznych.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAdjustedPalette">
      <MemberSignature Language="C#" Value="public void GetAdjustedPalette (System.Drawing.Imaging.ColorPalette palette, System.Drawing.Imaging.ColorAdjustType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void GetAdjustedPalette(class System.Drawing.Imaging.ColorPalette palette, valuetype System.Drawing.Imaging.ColorAdjustType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.GetAdjustedPalette(System.Drawing.Imaging.ColorPalette,System.Drawing.Imaging.ColorAdjustType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GetAdjustedPalette (palette As ColorPalette, type As ColorAdjustType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GetAdjustedPalette(System::Drawing::Imaging::ColorPalette ^ palette, System::Drawing::Imaging::ColorAdjustType type);" />
      <MemberSignature Language="F#" Value="member this.GetAdjustedPalette : System.Drawing.Imaging.ColorPalette * System.Drawing.Imaging.ColorAdjustType -&gt; unit" Usage="imageAttributes.GetAdjustedPalette (palette, type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="palette" Type="System.Drawing.Imaging.ColorPalette" />
        <Parameter Name="type" Type="System.Drawing.Imaging.ColorAdjustType" />
      </Parameters>
      <Docs>
        <param name="palette">W danych wejściowych znajduje się paleta, któramazostaćdopasowana,awartośćwyjściowazawieradostosowanąpaletę.<see cref="T:System.Drawing.Imaging.ColorPalette" /></param>
        <param name="type">Element określający <see cref="T:System.Drawing.Imaging.ColorAdjustType" /> kategorię, której ustawienia dostosowania zostaną zastosowane do palety.</param>
        <summary>Dostosowuje kolory w palecie zgodnie z ustawieniami dopasowania określonej kategorii.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Drawing.Imaging.ImageAttributes> Obiekt zachowuje ustawienia koloru i skali szarości dla pięciu kategorii korekty: domyślnego, bitmapowego, pędzla, pióra i tekstu. Na przykład możesz określić tabelę z mapowaniem kolorów dla kategorii domyślnej, inną tabelę z ponownymi mapowaniami kolorów dla kategorii Mapa bitowa, a nadal inną tabelę z ponownym mapowaniem kolorów dla kategorii pióra.  
  
 Po wywołaniu <xref:System.Drawing.Imaging.ImageAttributes.GetAdjustedPalette%2A> metody, możesz określić kategorię dopasowania, która jest używana do dostosowywania kolorów palety. Na przykład w przypadku przekazania <xref:System.Drawing.Imaging.ColorAdjustType.Bitmap> <xref:System.Drawing.Imaging.ImageAttributes.GetAdjustedPalette%2A> do metody ustawienia dopasowania kategorii Mapa bitowa są używane do dostosowywania kolorów palety.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetBrushRemapTable">
      <MemberSignature Language="C#" Value="public void SetBrushRemapTable (System.Drawing.Imaging.ColorMap[] map);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetBrushRemapTable(class System.Drawing.Imaging.ColorMap[] map) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.SetBrushRemapTable(System.Drawing.Imaging.ColorMap[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetBrushRemapTable (map As ColorMap())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetBrushRemapTable(cli::array &lt;System::Drawing::Imaging::ColorMap ^&gt; ^ map);" />
      <MemberSignature Language="F#" Value="member this.SetBrushRemapTable : System.Drawing.Imaging.ColorMap[] -&gt; unit" Usage="imageAttributes.SetBrushRemapTable map" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="map" Type="System.Drawing.Imaging.ColorMap[]" />
      </Parameters>
      <Docs>
        <param name="map">Tablica <see cref="T:System.Drawing.Imaging.ColorMap" /> obiektów.</param>
        <summary>Ustawia tabelę z mapowaniem kolorów dla kategorii pędzla.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Tabela z <xref:System.Drawing.Imaging.ColorMap> mapowaniem kolorów jest tablicą struktur. Każda <xref:System.Drawing.Imaging.ColorMap> struktura ma dwa <xref:System.Drawing.Color> obiekty: jeden, który określa stary kolor i jeden, który określa odpowiedni nowy kolor. Podczas renderowania wszystkie kolory zgodne z jednym ze starych kolorów w tabeli ponownego mapowania są zmieniane na odpowiadające im nowe kolory.  
  
 Wywołanie metody ma taki sam skutek jak przekazywanie <xref:System.Drawing.Imaging.ColorAdjustType.Brush> do <xref:System.Drawing.Imaging.ImageAttributes.SetRemapTable%2A> metody. <xref:System.Drawing.Imaging.ImageAttributes.SetBrushRemapTable%2A> Określona tabela mapowania ma zastosowanie do elementów w plikach, które są wypełnione pędzlem.  
  
 Ta metoda jest przeznaczona do użycia tylko z plikami.  
  
   
  
## Examples  
 Poniższy przykład kodu jest przeznaczony do użytku z Windows Forms i wymaga <xref:System.Windows.Forms.PaintEventArgs> `e`, który <xref:System.Windows.Forms.Control.Paint> jest parametrem programu obsługi zdarzeń. Kod wykonuje następujące czynności:  
  
1.  Tworzy jednoelementową <xref:System.Drawing.Imaging.ColorMap> tablicę, która utrzymuje kolor czerwony jako stary i zielony jako nowy kolor.  
  
2.  Przekazuje tę tablicę do nowo utworzonego <xref:System.Drawing.Imaging.ImageAttributes> obiektu.  
  
 [!code-cpp[System.Drawing.ClassicImaging.ImageAttributes#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicImaging.ImageAttributes/CPP/form1.cpp#1)]
 [!code-csharp[System.Drawing.ClassicImaging.ImageAttributes#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicImaging.ImageAttributes/CS/form1.cs#1)]
 [!code-vb[System.Drawing.ClassicImaging.ImageAttributes#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicImaging.ImageAttributes/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetColorKey">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Ustawia klucz koloru (zakres przezroczystości).</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetColorKey">
      <MemberSignature Language="C#" Value="public void SetColorKey (System.Drawing.Color colorLow, System.Drawing.Color colorHigh);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetColorKey(valuetype System.Drawing.Color colorLow, valuetype System.Drawing.Color colorHigh) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.SetColorKey(System.Drawing.Color,System.Drawing.Color)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetColorKey (colorLow As Color, colorHigh As Color)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetColorKey(System::Drawing::Color colorLow, System::Drawing::Color colorHigh);" />
      <MemberSignature Language="F#" Value="member this.SetColorKey : System.Drawing.Color * System.Drawing.Color -&gt; unit" Usage="imageAttributes.SetColorKey (colorLow, colorHigh)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="colorLow" Type="System.Drawing.Color" />
        <Parameter Name="colorHigh" Type="System.Drawing.Color" />
      </Parameters>
      <Docs>
        <param name="colorLow">Niska wartość klucza Color.</param>
        <param name="colorHigh">Wartość High Color-Key.</param>
        <summary>Ustawia klucz koloru dla kategorii domyślnej.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda ustawia wysokie i niskie wartości klucza koloru, aby można było ustawić zakres kolorów jako przezroczysty. Każdy kolor, który ma wszystkie trzy składniki (czerwony, zielony, niebieski) między odpowiednimi składnikami kluczy kolorów High i Low jest przezroczysty.  
  
 <xref:System.Drawing.Imaging.ImageAttributes> Obiekt zachowuje ustawienia koloru i skali szarości dla pięciu kategorii korekty: domyślnego, bitmapowego, pędzla, pióra i tekstu. Na przykład możesz określić klucz koloru dla kategorii domyślnej, inny klucz koloru dla kategorii Mapa bitowa i nadal inny klucz koloru dla kategorii pióro.  
  
 Domyślne ustawienia dostosowania koloru i skali odcieni szarości mają zastosowanie do wszystkich kategorii, które nie mają własnych ustawień korekty. Na przykład, jeśli nigdy nie określisz żadnych ustawień dopasowania dla kategorii pióra, ustawienia domyślne stosują się do kategorii pióro.  
  
   
  
## Examples  
 Aby zapoznać się z przykładem kodu <xref:System.Drawing.Imaging.ImageAttributes.SetColorKey%28System.Drawing.Color%2CSystem.Drawing.Color%2CSystem.Drawing.Imaging.ColorAdjustType%29> , zobacz metodę.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetColorKey">
      <MemberSignature Language="C#" Value="public void SetColorKey (System.Drawing.Color colorLow, System.Drawing.Color colorHigh, System.Drawing.Imaging.ColorAdjustType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetColorKey(valuetype System.Drawing.Color colorLow, valuetype System.Drawing.Color colorHigh, valuetype System.Drawing.Imaging.ColorAdjustType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.SetColorKey(System.Drawing.Color,System.Drawing.Color,System.Drawing.Imaging.ColorAdjustType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetColorKey (colorLow As Color, colorHigh As Color, type As ColorAdjustType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetColorKey(System::Drawing::Color colorLow, System::Drawing::Color colorHigh, System::Drawing::Imaging::ColorAdjustType type);" />
      <MemberSignature Language="F#" Value="member this.SetColorKey : System.Drawing.Color * System.Drawing.Color * System.Drawing.Imaging.ColorAdjustType -&gt; unit" Usage="imageAttributes.SetColorKey (colorLow, colorHigh, type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="colorLow" Type="System.Drawing.Color" />
        <Parameter Name="colorHigh" Type="System.Drawing.Color" />
        <Parameter Name="type" Type="System.Drawing.Imaging.ColorAdjustType" />
      </Parameters>
      <Docs>
        <param name="colorLow">Niska wartość klucza Color.</param>
        <param name="colorHigh">Wartość High Color-Key.</param>
        <param name="type">Element określający <see cref="T:System.Drawing.Imaging.ColorAdjustType" /> kategorię, dla której jest ustawiony klucz koloru.</param>
        <summary>Ustawia klucz koloru (zakres przezroczystości) dla określonej kategorii.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda ustawia wysokie i niskie wartości klucza koloru, aby można było ustawić zakres kolorów jako przezroczysty. Każdy kolor, który ma wszystkie trzy składniki (czerwony, zielony, niebieski) między odpowiednimi składnikami kluczy kolorów High i Low jest przezroczysty.  
  
 <xref:System.Drawing.Imaging.ImageAttributes> Obiekt zachowuje ustawienia koloru i skali szarości dla pięciu kategorii korekty: domyślnego, bitmapowego, pędzla, pióra i tekstu. Na przykład możesz określić klucz koloru dla kategorii domyślnej, inny klucz koloru dla kategorii Mapa bitowa i nadal inny klucz koloru dla kategorii pióro.  
  
 Domyślne ustawienia dostosowania koloru i skali odcieni szarości mają zastosowanie do wszystkich kategorii, które nie mają własnych ustawień korekty. Na przykład, jeśli nigdy nie określisz żadnych ustawień dopasowania dla kategorii pióra, ustawienia domyślne stosują się do kategorii pióro.  
  
 Po określeniu ustawienia dostosowania koloru lub skali odcieni szarości dla określonej kategorii domyślne ustawienia dostosowania nie będą już stosowane do tej kategorii. Załóżmy na przykład, że określisz kolekcję ustawień korekty dla kategorii domyślnej. Jeśli ustawisz klucz koloru dla kategorii pióra przez przekazanie <xref:System.Drawing.Imaging.ColorAdjustType.Pen> <xref:System.Drawing.Imaging.ImageAttributes.SetColorKey%2A> do metody, żadne domyślne ustawienia dostosowania nie będą stosowane do piór.  
  
   
  
## Examples  
 Poniższy przykład kodu jest przeznaczony do użytku z Windows Forms i wymaga <xref:System.Windows.Forms.PaintEventArgs> `e`, który <xref:System.Windows.Forms.Control.Paint> jest parametrem programu obsługi zdarzeń. Kod wykonuje następujące czynności:  
  
1.  Otwiera plik <xref:System.Drawing.Image> , który używa pliku Circle. bmp i rysuje go na ekranie.  
  
2.  Tworzy obiekt i ustawia jego klucz koloru przez <xref:System.Drawing.Imaging.ImageAttributes.SetColorKey%2A> wywołanie metody. <xref:System.Drawing.Imaging.ImageAttributes>  
  
3.  Rysuje obraz na ekranie przy użyciu klucza <xref:System.Drawing.Imaging.ImageAttributes> koloru obiektu.  
  
 [!code-cpp[System.Drawing.ClassicImaging.ImageAttributes#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicImaging.ImageAttributes/CPP/form1.cpp#2)]
 [!code-csharp[System.Drawing.ClassicImaging.ImageAttributes#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicImaging.ImageAttributes/CS/form1.cs#2)]
 [!code-vb[System.Drawing.ClassicImaging.ImageAttributes#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicImaging.ImageAttributes/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetColorMatrices">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Ustawia tablicę dopasowania kolorów i macierz dopasowania w skali szarości.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetColorMatrices">
      <MemberSignature Language="C#" Value="public void SetColorMatrices (System.Drawing.Imaging.ColorMatrix newColorMatrix, System.Drawing.Imaging.ColorMatrix grayMatrix);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetColorMatrices(class System.Drawing.Imaging.ColorMatrix newColorMatrix, class System.Drawing.Imaging.ColorMatrix grayMatrix) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.SetColorMatrices(System.Drawing.Imaging.ColorMatrix,System.Drawing.Imaging.ColorMatrix)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetColorMatrices (newColorMatrix As ColorMatrix, grayMatrix As ColorMatrix)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetColorMatrices(System::Drawing::Imaging::ColorMatrix ^ newColorMatrix, System::Drawing::Imaging::ColorMatrix ^ grayMatrix);" />
      <MemberSignature Language="F#" Value="member this.SetColorMatrices : System.Drawing.Imaging.ColorMatrix * System.Drawing.Imaging.ColorMatrix -&gt; unit" Usage="imageAttributes.SetColorMatrices (newColorMatrix, grayMatrix)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newColorMatrix" Type="System.Drawing.Imaging.ColorMatrix" />
        <Parameter Name="grayMatrix" Type="System.Drawing.Imaging.ColorMatrix" />
      </Parameters>
      <Docs>
        <param name="newColorMatrix">Macierz dopasowania koloru.</param>
        <param name="grayMatrix">Macierz korekt w skali szarości.</param>
        <summary>Ustawia macierz dopasowania koloru i macierz dopasowania w skali szarości dla kategorii domyślnej.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Drawing.Imaging.ImageAttributes> Obiekt zachowuje ustawienia koloru i skali szarości dla pięciu kategorii korekty: domyślnego, bitmapowego, pędzla, pióra i tekstu. Na przykład można określić macierze dostosowawcze dla kategorii domyślnej, różne macierze dostosowawcze dla kategorii Mapa bitowa oraz inne macierze dostosowawcze dla kategorii pióro.  
  
 Domyślne ustawienia dostosowania koloru i skali odcieni szarości mają zastosowanie do wszystkich kategorii, które nie mają własnych ustawień korekty. Na przykład, jeśli nigdy nie określisz żadnych ustawień dopasowania dla kategorii pióra, ustawienia domyślne stosują się do kategorii pióro.  
  
 Wywołanie metody jest równoznaczne z <xref:System.Drawing.Imaging.ImageAttributes.SetColorMatrices%28System.Drawing.Imaging.ColorMatrix%2CSystem.Drawing.Imaging.ColorMatrix%2CSystem.Drawing.Imaging.ColorMatrixFlag%29?displayProperty=nameWithType> wywołaniem `flags` metody i przekazaniem <xref:System.Drawing.Imaging.ColorMatrixFlag.Default?displayProperty=nameWithType> parametru. <xref:System.Drawing.Imaging.ImageAttributes.SetColorMatrices%28System.Drawing.Imaging.ColorMatrix%2CSystem.Drawing.Imaging.ColorMatrix%29?displayProperty=nameWithType> <xref:System.Drawing.Imaging.ColorMatrixFlag.Default?displayProperty=nameWithType>Określa, że wszystkie kolory (w tym szare) są dostosowywane przez macierz dopasowania koloru, a nie do macierzy dopasowania w skali szarości. W związku z tym macierz dopasowywania w skali odcieni szarości przeniesiona do tej metody nie ma żadnego wpływu.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetColorMatrices">
      <MemberSignature Language="C#" Value="public void SetColorMatrices (System.Drawing.Imaging.ColorMatrix newColorMatrix, System.Drawing.Imaging.ColorMatrix grayMatrix, System.Drawing.Imaging.ColorMatrixFlag flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetColorMatrices(class System.Drawing.Imaging.ColorMatrix newColorMatrix, class System.Drawing.Imaging.ColorMatrix grayMatrix, valuetype System.Drawing.Imaging.ColorMatrixFlag flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.SetColorMatrices(System.Drawing.Imaging.ColorMatrix,System.Drawing.Imaging.ColorMatrix,System.Drawing.Imaging.ColorMatrixFlag)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetColorMatrices (newColorMatrix As ColorMatrix, grayMatrix As ColorMatrix, flags As ColorMatrixFlag)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetColorMatrices(System::Drawing::Imaging::ColorMatrix ^ newColorMatrix, System::Drawing::Imaging::ColorMatrix ^ grayMatrix, System::Drawing::Imaging::ColorMatrixFlag flags);" />
      <MemberSignature Language="F#" Value="member this.SetColorMatrices : System.Drawing.Imaging.ColorMatrix * System.Drawing.Imaging.ColorMatrix * System.Drawing.Imaging.ColorMatrixFlag -&gt; unit" Usage="imageAttributes.SetColorMatrices (newColorMatrix, grayMatrix, flags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newColorMatrix" Type="System.Drawing.Imaging.ColorMatrix" />
        <Parameter Name="grayMatrix" Type="System.Drawing.Imaging.ColorMatrix" />
        <Parameter Name="flags" Type="System.Drawing.Imaging.ColorMatrixFlag" />
      </Parameters>
      <Docs>
        <param name="newColorMatrix">Macierz dopasowania koloru.</param>
        <param name="grayMatrix">Macierz korekt w skali szarości.</param>
        <param name="flags">Element <see cref="T:System.Drawing.Imaging.ColorMatrixFlag" /> , który określa typ obrazu i koloru, na które mają wpływ macierze dopasowania koloru i skali odcieni szarości.</param>
        <summary>Ustawia macierz dopasowania koloru i macierz dopasowania w skali szarości dla kategorii domyślnej.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Drawing.Imaging.ImageAttributes> Obiekt zachowuje ustawienia koloru i skali szarości dla pięciu kategorii korekty: domyślnego, bitmapowego, pędzla, pióra i tekstu. Na przykład można określić macierze dostosowawcze dla kategorii domyślnej, różne macierze dostosowawcze dla kategorii Mapa bitowa oraz inne macierze dostosowawcze dla kategorii pióro.  
  
 Domyślne ustawienia dostosowania koloru i skali odcieni szarości mają zastosowanie do wszystkich kategorii, które nie mają własnych ustawień korekty. Na przykład, jeśli nigdy nie określisz żadnych ustawień dopasowania dla kategorii pióra, ustawienia domyślne stosują się do kategorii pióro.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetColorMatrices">
      <MemberSignature Language="C#" Value="public void SetColorMatrices (System.Drawing.Imaging.ColorMatrix newColorMatrix, System.Drawing.Imaging.ColorMatrix grayMatrix, System.Drawing.Imaging.ColorMatrixFlag mode, System.Drawing.Imaging.ColorAdjustType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetColorMatrices(class System.Drawing.Imaging.ColorMatrix newColorMatrix, class System.Drawing.Imaging.ColorMatrix grayMatrix, valuetype System.Drawing.Imaging.ColorMatrixFlag mode, valuetype System.Drawing.Imaging.ColorAdjustType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.SetColorMatrices(System.Drawing.Imaging.ColorMatrix,System.Drawing.Imaging.ColorMatrix,System.Drawing.Imaging.ColorMatrixFlag,System.Drawing.Imaging.ColorAdjustType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetColorMatrices (newColorMatrix As ColorMatrix, grayMatrix As ColorMatrix, mode As ColorMatrixFlag, type As ColorAdjustType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetColorMatrices(System::Drawing::Imaging::ColorMatrix ^ newColorMatrix, System::Drawing::Imaging::ColorMatrix ^ grayMatrix, System::Drawing::Imaging::ColorMatrixFlag mode, System::Drawing::Imaging::ColorAdjustType type);" />
      <MemberSignature Language="F#" Value="member this.SetColorMatrices : System.Drawing.Imaging.ColorMatrix * System.Drawing.Imaging.ColorMatrix * System.Drawing.Imaging.ColorMatrixFlag * System.Drawing.Imaging.ColorAdjustType -&gt; unit" Usage="imageAttributes.SetColorMatrices (newColorMatrix, grayMatrix, mode, type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newColorMatrix" Type="System.Drawing.Imaging.ColorMatrix" />
        <Parameter Name="grayMatrix" Type="System.Drawing.Imaging.ColorMatrix" />
        <Parameter Name="mode" Type="System.Drawing.Imaging.ColorMatrixFlag" />
        <Parameter Name="type" Type="System.Drawing.Imaging.ColorAdjustType" />
      </Parameters>
      <Docs>
        <param name="newColorMatrix">Macierz dopasowania koloru.</param>
        <param name="grayMatrix">Macierz korekt w skali szarości.</param>
        <param name="mode">Element <see cref="T:System.Drawing.Imaging.ColorMatrixFlag" /> , który określa typ obrazu i koloru, na które mają wpływ macierze dopasowania koloru i skali odcieni szarości.</param>
        <param name="type">Element określający <see cref="T:System.Drawing.Imaging.ColorAdjustType" /> kategorię, dla której są ustawione macierze dopasowania koloru i skali odcieni szarości.</param>
        <summary>Ustawia macierz dopasowania koloru i macierz dopasowania w skali szarości dla określonej kategorii.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Drawing.Imaging.ImageAttributes> Obiekt zachowuje ustawienia koloru i skali szarości dla pięciu kategorii korekty: domyślnego, bitmapowego, pędzla, pióra i tekstu. Na przykład można określić macierze dostosowawcze dla kategorii domyślnej, różne macierze dostosowawcze dla kategorii Mapa bitowa oraz inne macierze dostosowawcze dla kategorii pióro.  
  
 Domyślne ustawienia dostosowania koloru i skali odcieni szarości mają zastosowanie do wszystkich kategorii, które nie mają własnych ustawień korekty. Na przykład, jeśli nigdy nie określisz żadnych ustawień dopasowania dla kategorii pióra, ustawienia domyślne stosują się do kategorii pióro.  
  
 Po określeniu ustawienia dostosowania koloru lub skali odcieni szarości dla określonej kategorii domyślne ustawienia dostosowania nie będą już stosowane do tej kategorii. Załóżmy na przykład, że określisz kolekcję ustawień korekty dla kategorii domyślnej. W przypadku wybrania macierzy dopasowania koloru i skali odcieni szarości dla kategorii pióra przez przekazanie <xref:System.Drawing.Imaging.ColorAdjustType.Pen> <xref:System.Drawing.Imaging.ImageAttributes.SetColorMatrices%2A> do metody żadne domyślne ustawienia dostosowania nie będą stosowane do piór.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetColorMatrix">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Ustawia tablicę dopasowania kolorów.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetColorMatrix">
      <MemberSignature Language="C#" Value="public void SetColorMatrix (System.Drawing.Imaging.ColorMatrix newColorMatrix);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetColorMatrix(class System.Drawing.Imaging.ColorMatrix newColorMatrix) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.SetColorMatrix(System.Drawing.Imaging.ColorMatrix)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetColorMatrix (newColorMatrix As ColorMatrix)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetColorMatrix(System::Drawing::Imaging::ColorMatrix ^ newColorMatrix);" />
      <MemberSignature Language="F#" Value="member this.SetColorMatrix : System.Drawing.Imaging.ColorMatrix -&gt; unit" Usage="imageAttributes.SetColorMatrix newColorMatrix" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newColorMatrix" Type="System.Drawing.Imaging.ColorMatrix" />
      </Parameters>
      <Docs>
        <param name="newColorMatrix">Macierz dopasowania koloru.</param>
        <summary>Ustawia macierz dopasowania koloru dla kategorii domyślnej.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Drawing.Imaging.ImageAttributes> Obiekt zachowuje ustawienia koloru i skali szarości dla pięciu kategorii korekty: domyślnego, bitmapowego, pędzla, pióra i tekstu. Na przykład można określić matrycę dopasowania koloru dla kategorii domyślnej, inną tablicę dopasowania kolorów dla kategorii Mapa bitowa i nadal inną tablicę dopasowania kolorów dla kategorii pióro.  
  
 Domyślne ustawienia dostosowania koloru i skali odcieni szarości mają zastosowanie do wszystkich kategorii, które nie mają własnych ustawień korekty. Na przykład, jeśli nigdy nie określisz żadnych ustawień dopasowania dla kategorii pióra, ustawienia domyślne stosują się do kategorii pióro.  
  
 Wywołanie metody jest równoznaczne z <xref:System.Drawing.Imaging.ImageAttributes.SetColorMatrix%28System.Drawing.Imaging.ColorMatrix%2CSystem.Drawing.Imaging.ColorMatrixFlag%29?displayProperty=nameWithType> wywołaniem `flags` metody i przekazaniem <xref:System.Drawing.Imaging.ColorMatrixFlag.Default?displayProperty=nameWithType> parametru. <xref:System.Drawing.Imaging.ImageAttributes.SetColorMatrix%28System.Drawing.Imaging.ColorMatrix%29?displayProperty=nameWithType> <xref:System.Drawing.Imaging.ColorMatrixFlag.Default?displayProperty=nameWithType>Określa, że wszystkie kolory (w tym szare) są dostosowywane przez macierz dopasowania koloru  
  
   
  
## Examples  
 Poniższy przykład kodu jest przeznaczony do użytku z Windows Forms i wymaga <xref:System.Windows.Forms.PaintEventArgs> `e`, który <xref:System.Windows.Forms.Control.Paint> jest parametrem programu obsługi zdarzeń. Kod wykonuje następujące czynności:  
  
1.  Tworzy obraz prostokąta, który ma wszystkie wartości koloru ustawione na 128, wytwarzając prostokąt wypełniony kolorem Solid-szare. Kod następnie rysuje ten obraz prostokąta na ekranie.  
  
2.  Tworzy i ustawia jego <xref:System.Drawing.Drawing2D.Matrix> lokalizację na 1,75, co wyróżnia czerwony składnik obrazu. <xref:System.Drawing.Imaging.ColorMatrix>  
  
3.  Tworzy obiekt i wywołuje <xref:System.Drawing.Imaging.ImageAttributes.SetColorMatrix%2A>metodę. <xref:System.Drawing.Imaging.ImageAttributes>  
  
4.  Rysuje obraz (drugi prostokąt) na ekranie przy użyciu <xref:System.Drawing.Imaging.ColorMatrix> zestawu ustawionego <xref:System.Drawing.Imaging.ImageAttributes> w obiekcie.  
  
 Należy zauważyć, że drugi prostokąt ma kolor czerwony wyróżniony.  
  
 [!code-cpp[System.Drawing.ClassicImaging.ImageAttributes#3](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicImaging.ImageAttributes/CPP/form1.cpp#3)]
 [!code-csharp[System.Drawing.ClassicImaging.ImageAttributes#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicImaging.ImageAttributes/CS/form1.cs#3)]
 [!code-vb[System.Drawing.ClassicImaging.ImageAttributes#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicImaging.ImageAttributes/VB/form1.vb#3)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/f28c54fd-9c80-4f6f-b242-55f7ffcda84b">Ponowne kolorowanie obrazów</related>
      </Docs>
    </Member>
    <Member MemberName="SetColorMatrix">
      <MemberSignature Language="C#" Value="public void SetColorMatrix (System.Drawing.Imaging.ColorMatrix newColorMatrix, System.Drawing.Imaging.ColorMatrixFlag flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetColorMatrix(class System.Drawing.Imaging.ColorMatrix newColorMatrix, valuetype System.Drawing.Imaging.ColorMatrixFlag flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.SetColorMatrix(System.Drawing.Imaging.ColorMatrix,System.Drawing.Imaging.ColorMatrixFlag)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetColorMatrix (newColorMatrix As ColorMatrix, flags As ColorMatrixFlag)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetColorMatrix(System::Drawing::Imaging::ColorMatrix ^ newColorMatrix, System::Drawing::Imaging::ColorMatrixFlag flags);" />
      <MemberSignature Language="F#" Value="member this.SetColorMatrix : System.Drawing.Imaging.ColorMatrix * System.Drawing.Imaging.ColorMatrixFlag -&gt; unit" Usage="imageAttributes.SetColorMatrix (newColorMatrix, flags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newColorMatrix" Type="System.Drawing.Imaging.ColorMatrix" />
        <Parameter Name="flags" Type="System.Drawing.Imaging.ColorMatrixFlag" />
      </Parameters>
      <Docs>
        <param name="newColorMatrix">Macierz dopasowania koloru.</param>
        <param name="flags">Element <see cref="T:System.Drawing.Imaging.ColorMatrixFlag" /> , który określa typ obrazu i koloru, na który ma wpływ macierz dopasowania koloru.</param>
        <summary>Ustawia macierz dopasowania koloru dla kategorii domyślnej.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Drawing.Imaging.ImageAttributes> Obiekt zachowuje ustawienia koloru i skali szarości dla pięciu kategorii korekty: domyślnego, bitmapowego, pędzla, pióra i tekstu. Na przykład można określić matrycę dopasowania koloru dla kategorii domyślnej, inną tablicę dopasowania kolorów dla kategorii Mapa bitowa i nadal inną tablicę dopasowania kolorów dla kategorii pióro.  
  
 Domyślne ustawienia dostosowania koloru i skali odcieni szarości mają zastosowanie do wszystkich kategorii, które nie mają własnych ustawień korekty. Na przykład, jeśli nigdy nie określisz żadnych ustawień dopasowania dla kategorii pióra, ustawienia domyślne stosują się do kategorii pióro.  
  
   
  
## Examples  
 Aby zapoznać się z przykładem kodu <xref:System.Drawing.Imaging.ImageAttributes.SetColorMatrix%28System.Drawing.Imaging.ColorMatrix%29> , zobacz metodę.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/f28c54fd-9c80-4f6f-b242-55f7ffcda84b">Ponowne kolorowanie obrazów</related>
      </Docs>
    </Member>
    <Member MemberName="SetColorMatrix">
      <MemberSignature Language="C#" Value="public void SetColorMatrix (System.Drawing.Imaging.ColorMatrix newColorMatrix, System.Drawing.Imaging.ColorMatrixFlag mode, System.Drawing.Imaging.ColorAdjustType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetColorMatrix(class System.Drawing.Imaging.ColorMatrix newColorMatrix, valuetype System.Drawing.Imaging.ColorMatrixFlag mode, valuetype System.Drawing.Imaging.ColorAdjustType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.SetColorMatrix(System.Drawing.Imaging.ColorMatrix,System.Drawing.Imaging.ColorMatrixFlag,System.Drawing.Imaging.ColorAdjustType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetColorMatrix (newColorMatrix As ColorMatrix, mode As ColorMatrixFlag, type As ColorAdjustType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetColorMatrix(System::Drawing::Imaging::ColorMatrix ^ newColorMatrix, System::Drawing::Imaging::ColorMatrixFlag mode, System::Drawing::Imaging::ColorAdjustType type);" />
      <MemberSignature Language="F#" Value="member this.SetColorMatrix : System.Drawing.Imaging.ColorMatrix * System.Drawing.Imaging.ColorMatrixFlag * System.Drawing.Imaging.ColorAdjustType -&gt; unit" Usage="imageAttributes.SetColorMatrix (newColorMatrix, mode, type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newColorMatrix" Type="System.Drawing.Imaging.ColorMatrix" />
        <Parameter Name="mode" Type="System.Drawing.Imaging.ColorMatrixFlag" />
        <Parameter Name="type" Type="System.Drawing.Imaging.ColorAdjustType" />
      </Parameters>
      <Docs>
        <param name="newColorMatrix">Macierz dopasowania koloru.</param>
        <param name="mode">Element <see cref="T:System.Drawing.Imaging.ColorMatrixFlag" /> , który określa typ obrazu i koloru, na który ma wpływ macierz dopasowania koloru.</param>
        <param name="type">Element określający <see cref="T:System.Drawing.Imaging.ColorAdjustType" /> kategorię, dla której jest ustawiona macierz dopasowania koloru.</param>
        <summary>Ustawia macierz dopasowania koloru dla określonej kategorii.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Drawing.Imaging.ImageAttributes> Obiekt zachowuje ustawienia koloru i skali szarości dla pięciu kategorii korekty: domyślnego, bitmapowego, pędzla, pióra i tekstu. Na przykład można określić matrycę dopasowania koloru dla kategorii domyślnej, inną tablicę dopasowania kolorów dla kategorii Mapa bitowa i nadal inną tablicę dopasowania kolorów dla kategorii pióro.  
  
 Domyślne ustawienia dostosowania koloru i skali odcieni szarości mają zastosowanie do wszystkich kategorii, które nie mają własnych ustawień korekty. Na przykład, jeśli nigdy nie określisz żadnych ustawień dopasowania dla kategorii pióra, ustawienia domyślne stosują się do kategorii pióro.  
  
 Po określeniu ustawienia dostosowania koloru lub skali odcieni szarości dla określonej kategorii domyślne ustawienia dostosowania nie będą już stosowane do tej kategorii. Załóżmy na przykład, że określisz kolekcję ustawień korekty dla kategorii domyślnej. W przypadku ustawienia macierzy dopasowania kolorów dla kategorii pióra przez przekazanie <xref:System.Drawing.Imaging.ColorAdjustType.Pen> <xref:System.Drawing.Imaging.ImageAttributes.SetColorMatrix%2A> do metody żadne domyślne ustawienia dostosowania nie będą stosowane do piór.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje sposób używania <xref:System.Drawing.Imaging.ImageAttributes.SetColorMatrix%2A> metody. Aby uruchomić ten przykład, wklej kod do formularza systemu Windows i Wywołaj `RotateColors` z metody obsługi <xref:System.Windows.Forms.Control.Paint> zdarzeń formularza, przekazując `e` jako <xref:System.Windows.Forms.PaintEventArgs>.  
  
 [!code-csharp[System.Drawing.RotateColors#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.RotateColors/CS/Form1.cs#1)]
 [!code-vb[System.Drawing.RotateColors#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.RotateColors/VB/Form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetGamma">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Ustawia wartość gamma.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetGamma">
      <MemberSignature Language="C#" Value="public void SetGamma (float gamma);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetGamma(float32 gamma) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.SetGamma(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetGamma (gamma As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetGamma(float gamma);" />
      <MemberSignature Language="F#" Value="member this.SetGamma : single -&gt; unit" Usage="imageAttributes.SetGamma gamma" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="gamma" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="gamma">Wartość korekcji gamma.</param>
        <summary>Ustawia wartość gamma dla kategorii domyślnej.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Typowe wartości `gamma` parametru to od 1,0 do 2,2, jednak wartości z 0,1 do 5,0 mogą okazać się przydatne w pewnych okolicznościach.  
  
 <xref:System.Drawing.Imaging.ImageAttributes> Obiekt zachowuje ustawienia koloru i skali szarości dla pięciu kategorii korekty: domyślnego, bitmapowego, pędzla, pióra i tekstu. Na przykład można określić wartość gamma dla kategorii domyślnej, inną wartość gamma dla kategorii Mapa bitowa i nadal inną wartość gamma dla kategorii pióro.  
  
 Domyślne ustawienia dostosowania koloru i skali odcieni szarości mają zastosowanie do wszystkich kategorii, które nie mają własnych ustawień korekty. Na przykład, jeśli nigdy nie określisz żadnych ustawień dopasowania dla kategorii pióra, ustawienia domyślne stosują się do kategorii pióro.  
  
 Wartości gamma poza zwykłym zakresem mogą być przydatne w przypadku starych monitorów CRT lub monitorów, które są nietypowymi warunkami oświetlenia, takimi jak środowiska przemysłowe lub okna.  
  
   
  
## Examples  
 Poniższy przykład kodu jest przeznaczony do użytku z Windows Forms i wymaga <xref:System.Windows.Forms.PaintEventArgs> `e`, który <xref:System.Windows.Forms.Control.Paint> jest parametrem programu obsługi zdarzeń. Ponadto należy zmienić ścieżkę pliku obrazu na ścieżkę i nazwę obrazu, które są prawidłowe w systemie. Kod wykonuje następujące czynności:  
  
1.  Otwiera plik <xref:System.Drawing.Image> , który używa pliku Camera. jpg i rysuje go na ekranie przy użyciu wartości domyślnej gamma.  
  
2.  Tworzy obiekt i ustawia jego wartość gamma na 2,2, <xref:System.Drawing.Imaging.ImageAttributes.SetGamma%2A> wywołując metodę. <xref:System.Drawing.Imaging.ImageAttributes>  
  
3.  Rysuje obraz (drugi aparat) na ekranie przy użyciu wartości gamma ustawionej po prostu w <xref:System.Drawing.Imaging.ImageAttributes> obiekcie.  
  
 [!code-cpp[System.Drawing.ClassicImaging.ImageAttributes#4](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicImaging.ImageAttributes/CPP/form1.cpp#4)]
 [!code-csharp[System.Drawing.ClassicImaging.ImageAttributes#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicImaging.ImageAttributes/CS/form1.cs#4)]
 [!code-vb[System.Drawing.ClassicImaging.ImageAttributes#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicImaging.ImageAttributes/VB/form1.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetGamma">
      <MemberSignature Language="C#" Value="public void SetGamma (float gamma, System.Drawing.Imaging.ColorAdjustType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetGamma(float32 gamma, valuetype System.Drawing.Imaging.ColorAdjustType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.SetGamma(System.Single,System.Drawing.Imaging.ColorAdjustType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetGamma (gamma As Single, type As ColorAdjustType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetGamma(float gamma, System::Drawing::Imaging::ColorAdjustType type);" />
      <MemberSignature Language="F#" Value="member this.SetGamma : single * System.Drawing.Imaging.ColorAdjustType -&gt; unit" Usage="imageAttributes.SetGamma (gamma, type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="gamma" Type="System.Single" />
        <Parameter Name="type" Type="System.Drawing.Imaging.ColorAdjustType" />
      </Parameters>
      <Docs>
        <param name="gamma">Wartość korekcji gamma.</param>
        <param name="type">Element <see cref="T:System.Drawing.Imaging.ColorAdjustType" /> wyliczenia, który określa kategorię, dla której ustawiono wartość gamma.</param>
        <summary>Ustawia wartość gamma dla określonej kategorii.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Typowe wartości `gamma` parametru to od 1,0 do 2,2, jednak wartości z 0,1 do 5,0 mogą okazać się przydatne w pewnych okolicznościach.  
  
 <xref:System.Drawing.Imaging.ImageAttributes> Obiekt zachowuje ustawienia koloru i skali szarości dla pięciu kategorii korekty: domyślnego, bitmapowego, pędzla, pióra i tekstu. Na przykład można określić wartość gamma dla kategorii domyślnej, inną wartość gamma dla kategorii Mapa bitowa i nadal inną wartość gamma dla kategorii pióro.  
  
 Domyślne ustawienia dostosowania koloru i skali odcieni szarości mają zastosowanie do wszystkich kategorii, które nie mają własnych ustawień korekty. Na przykład, jeśli nigdy nie określisz żadnych ustawień dopasowania dla kategorii pióra, ustawienia domyślne stosują się do kategorii pióro.  
  
 Po określeniu ustawienia dostosowania koloru lub skali odcieni szarości dla określonej kategorii domyślne ustawienia dostosowania nie będą już stosowane do tej kategorii. Załóżmy na przykład, że określisz kolekcję ustawień korekty dla kategorii domyślnej. Jeśli ustawisz wartość gamma dla kategorii pióro, przekazując <xref:System.Drawing.Imaging.ColorAdjustType.Pen> <xref:System.Drawing.Imaging.ImageAttributes.SetGamma%2A> do metody, żadne domyślne ustawienia dostosowania nie będą stosowane do piór.  
  
 Wartości gamma poza zwykłym zakresem mogą być przydatne w przypadku starych monitorów CRT lub monitorów, które są nietypowymi warunkami oświetlenia, takimi jak środowiska przemysłowe lub okna.  
  
   
  
## Examples  
 Aby zapoznać się z przykładem kodu <xref:System.Drawing.Imaging.ImageAttributes.SetGamma%28System.Single%29> , zobacz metodę.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetNoOp">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Wyłącza korektę koloru.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetNoOp">
      <MemberSignature Language="C#" Value="public void SetNoOp ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetNoOp() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.SetNoOp" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetNoOp ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetNoOp();" />
      <MemberSignature Language="F#" Value="member this.SetNoOp : unit -&gt; unit" Usage="imageAttributes.SetNoOp " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Wyłącza korektę koloru dla kategorii domyślnej. Można wywołać <see cref="Overload:System.Drawing.Imaging.ImageAttributes.ClearNoOp" /> metodę, aby przywrócić ustawienia dostosowania koloru, które były stosowane przed wywołaniem <see cref="Overload:System.Drawing.Imaging.ImageAttributes.SetNoOp" /> metody.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Drawing.Imaging.ImageAttributes> Obiekt zachowuje ustawienia koloru i skali szarości dla pięciu kategorii korekty: domyślnego, bitmapowego, pędzla, pióra i tekstu. Na przykład można określić wartość gamma dla kategorii domyślnej, inną wartość gamma dla kategorii Mapa bitowa i nadal inną wartość gamma dla kategorii pióro.  
  
 Domyślne ustawienia dostosowania koloru i skali odcieni szarości mają zastosowanie do wszystkich kategorii, które nie mają własnych ustawień korekty. Na przykład, jeśli nigdy nie określisz żadnych ustawień dopasowania dla kategorii pióra, ustawienia domyślne stosują się do kategorii pióro.  
  
   
  
## Examples  
 Poniższy przykład kodu jest przeznaczony do użytku z Windows Forms i wymaga <xref:System.Windows.Forms.PaintEventArgs> `e`, który <xref:System.Windows.Forms.Control.Paint> jest parametrem programu obsługi zdarzeń. Kod wykonuje następujące czynności:  
  
1.  Otwiera plik <xref:System.Drawing.Image> , który używa pliku Camera. jpg.  
  
2.  Ustawia wartość <xref:System.Drawing.Imaging.ImageAttributes> gamma obiektu na 0,25.  
  
3.  Rysuje obraz na ekranie.  
  
4.  <xref:System.Drawing.Imaging.ImageAttributes.SetNoOp%2A> Wywołuje metodę.  
  
5.  Rysuje obraz (drugi aparat) do ekranu; Jednak ponieważ <xref:System.Drawing.Imaging.ImageAttributes.SetNoOp%2A> Metoda została wywołana, ustawienie gamma ustawia domyślnie wartość 1,0, a obraz jest rysowany na ekranie przy użyciu domyślnego ustawienia gamma.  
  
 Zauważ, że obraz po lewej stronie jest bardzo odpłukany (gamma 0,25), a obraz po prawej stronie ma większy kontrast (gamma of 1,0).  
  
 [!code-cpp[System.Drawing.ClassicImaging.ImageAttributes#5](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicImaging.ImageAttributes/CPP/form1.cpp#5)]
 [!code-csharp[System.Drawing.ClassicImaging.ImageAttributes#5](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicImaging.ImageAttributes/CS/form1.cs#5)]
 [!code-vb[System.Drawing.ClassicImaging.ImageAttributes#5](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicImaging.ImageAttributes/VB/form1.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetNoOp">
      <MemberSignature Language="C#" Value="public void SetNoOp (System.Drawing.Imaging.ColorAdjustType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetNoOp(valuetype System.Drawing.Imaging.ColorAdjustType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.SetNoOp(System.Drawing.Imaging.ColorAdjustType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetNoOp (type As ColorAdjustType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetNoOp(System::Drawing::Imaging::ColorAdjustType type);" />
      <MemberSignature Language="F#" Value="member this.SetNoOp : System.Drawing.Imaging.ColorAdjustType -&gt; unit" Usage="imageAttributes.SetNoOp type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Drawing.Imaging.ColorAdjustType" />
      </Parameters>
      <Docs>
        <param name="type">Element określający <see cref="T:System.Drawing.Imaging.ColorAdjustType" /> kategorię, dla której jest wyłączone Korekcja koloru.</param>
        <summary>Wyłącza korektę koloru dla określonej kategorii. Można wywołać <see cref="Overload:System.Drawing.Imaging.ImageAttributes.ClearNoOp" /> metodę, aby przywrócić ustawienia dostosowania koloru, które były stosowane przed wywołaniem <see cref="Overload:System.Drawing.Imaging.ImageAttributes.SetNoOp" /> metody.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Drawing.Imaging.ImageAttributes> Obiekt zachowuje ustawienia koloru i skali szarości dla pięciu kategorii korekty: domyślnego, bitmapowego, pędzla, pióra i tekstu. Na przykład można określić wartość gamma dla kategorii domyślnej, inną wartość gamma dla kategorii Mapa bitowa i nadal inną wartość gamma dla kategorii pióro.  
  
   
  
## Examples  
 Aby zapoznać się z przykładem kodu <xref:System.Drawing.Imaging.ImageAttributes.SetNoOp> , zobacz metodę.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetOutputChannel">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Ustawia kanał wyjściowy CMYK (błękitny-amarantowy-żółty-czarny).</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetOutputChannel">
      <MemberSignature Language="C#" Value="public void SetOutputChannel (System.Drawing.Imaging.ColorChannelFlag flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetOutputChannel(valuetype System.Drawing.Imaging.ColorChannelFlag flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.SetOutputChannel(System.Drawing.Imaging.ColorChannelFlag)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetOutputChannel (flags As ColorChannelFlag)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetOutputChannel(System::Drawing::Imaging::ColorChannelFlag flags);" />
      <MemberSignature Language="F#" Value="member this.SetOutputChannel : System.Drawing.Imaging.ColorChannelFlag -&gt; unit" Usage="imageAttributes.SetOutputChannel flags" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="flags" Type="System.Drawing.Imaging.ColorChannelFlag" />
      </Parameters>
      <Docs>
        <param name="flags">Element <see cref="T:System.Drawing.Imaging.ColorChannelFlag" /> określający kanał wyjściowy.</param>
        <summary>Ustawia kanał wyjściowy CMYK (błękitny-amarantowy-żółty-czarny) dla kategorii domyślnej.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Możesz użyć <xref:System.Drawing.Imaging.ImageAttributes.SetOutputChannel%2A> metody do przekonwertowania obrazu na przestrzeń kolorów CMYK i przeanalizowania intensywności jednego z kanałów kolorów CMYK. Załóżmy na przykład, że tworzysz <xref:System.Drawing.Imaging.ImageAttributes> obiekt i ustawisz jego kanał wyjściowy mapy bitowej na. <xref:System.Drawing.Imaging.ColorChannelFlag.ColorChannelC> Jeśli ścieżka <xref:System.Drawing.Imaging.ImageAttributes> <xref:System.Drawing.Graphics.DrawImage%2A> do obiektu zostanie przekazana do metody, składnik błękitny każdego piksela jest obliczany, a każdy piksel w renderowanym obrazie jest odcieniem szarego, który wskazuje intensywność kanału błękitnego. Podobnie można renderować obrazy wskazujące intensywność kanałów karmazynowego, żółtego i czarnego.  
  
 <xref:System.Drawing.Imaging.ImageAttributes> Obiekt zachowuje ustawienia koloru i skali szarości dla pięciu kategorii korekty: domyślnego, bitmapowego, pędzla, pióra i tekstu. Na przykład można określić kanał wyjściowy dla kategorii domyślnej i inny kanał wyjściowy dla kategorii Mapa bitowa.  
  
 Domyślne ustawienia dostosowania koloru i skali odcieni szarości mają zastosowanie do wszystkich kategorii, które nie mają własnych ustawień korekty. Jeśli na przykład nigdy nie określisz żadnych ustawień dopasowania dla kategorii Mapa bitowa, ustawienia domyślne są stosowane do kategorii Mapa bitowa.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje sposób używania <xref:System.Drawing.Imaging.ImageAttributes.SetOutputChannel%2A> metody. Aby uruchomić ten przykład, wklej następujący kod do formularza systemu Windows. Obsługuj <xref:System.Windows.Forms.Control.Paint> zdarzenie i wywołanie `ShowOutputChannels`formularza, przekazując `e` jako <xref:System.Windows.Forms.PaintEventArgs>.  
  
 [!code-csharp[System.Drawing.Misc3#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Misc3/CS/Form1.cs#4)]
 [!code-vb[System.Drawing.Misc3#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Misc3/VB/Form1.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetOutputChannel">
      <MemberSignature Language="C#" Value="public void SetOutputChannel (System.Drawing.Imaging.ColorChannelFlag flags, System.Drawing.Imaging.ColorAdjustType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetOutputChannel(valuetype System.Drawing.Imaging.ColorChannelFlag flags, valuetype System.Drawing.Imaging.ColorAdjustType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.SetOutputChannel(System.Drawing.Imaging.ColorChannelFlag,System.Drawing.Imaging.ColorAdjustType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetOutputChannel (flags As ColorChannelFlag, type As ColorAdjustType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetOutputChannel(System::Drawing::Imaging::ColorChannelFlag flags, System::Drawing::Imaging::ColorAdjustType type);" />
      <MemberSignature Language="F#" Value="member this.SetOutputChannel : System.Drawing.Imaging.ColorChannelFlag * System.Drawing.Imaging.ColorAdjustType -&gt; unit" Usage="imageAttributes.SetOutputChannel (flags, type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="flags" Type="System.Drawing.Imaging.ColorChannelFlag" />
        <Parameter Name="type" Type="System.Drawing.Imaging.ColorAdjustType" />
      </Parameters>
      <Docs>
        <param name="flags">Element <see cref="T:System.Drawing.Imaging.ColorChannelFlag" /> określający kanał wyjściowy.</param>
        <param name="type">Element określający <see cref="T:System.Drawing.Imaging.ColorAdjustType" /> kategorię, dla której ustawiono kanał wyjściowy.</param>
        <summary>Ustawia kanał wyjściowy CMYK (błękitny-amarantowy-żółty-czarny) dla określonej kategorii.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Możesz użyć <xref:System.Drawing.Imaging.ImageAttributes.SetOutputChannel%2A> metody do przekonwertowania obrazu na przestrzeń kolorów CMYK i przeanalizowania intensywności jednego z kanałów kolorów CMYK. Załóżmy na przykład, że tworzysz <xref:System.Drawing.Imaging.ImageAttributes> obiekt i ustawisz jego kanał wyjściowy mapy bitowej na. <xref:System.Drawing.Imaging.ColorChannelFlag.ColorChannelC> Jeśli ścieżka <xref:System.Drawing.Imaging.ImageAttributes> <xref:System.Drawing.Graphics.DrawImage%2A> do obiektu zostanie przekazana do metody, składnik błękitny każdego piksela jest obliczany, a każdy piksel w renderowanym obrazie jest odcieniem szarego, który wskazuje intensywność kanału błękitnego. Podobnie można renderować obrazy wskazujące intensywność kanałów karmazynowego, żółtego i czarnego.  
  
 <xref:System.Drawing.Imaging.ImageAttributes> Obiekt zachowuje ustawienia koloru i skali szarości dla pięciu kategorii korekty: domyślnego, bitmapowego, pędzla, pióra i tekstu. Na przykład można określić kanał wyjściowy dla kategorii domyślnej i inny kanał wyjściowy dla kategorii Mapa bitowa.  
  
 Domyślne ustawienia dostosowania koloru i skali odcieni szarości mają zastosowanie do wszystkich kategorii, które nie mają własnych ustawień korekty. Jeśli na przykład nigdy nie określisz żadnych ustawień dopasowania dla kategorii Mapa bitowa, ustawienia domyślne są stosowane do kategorii Mapa bitowa.  
  
 Po określeniu ustawienia dostosowania koloru lub skali odcieni szarości dla określonej kategorii domyślne ustawienia dostosowania nie będą już stosowane do tej kategorii. Załóżmy na przykład, że określisz kolekcję ustawień korekty dla kategorii domyślnej. W przypadku ustawienia kanału wyjściowego dla kategorii mapy bitowej przez przekazaniem <xref:System.Drawing.Imaging.ColorAdjustType.Bitmap> <xref:System.Drawing.Imaging.ImageAttributes.SetOutputChannel%2A> do metody żadne domyślne ustawienia dostosowania nie będą stosowane do map bitowych.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje sposób używania <xref:System.Drawing.Imaging.ImageAttributes.SetOutputChannel%2A> metody. Aby uruchomić ten przykład, wklej następujący kod do formularza systemu Windows. Obsługuj <xref:System.Windows.Forms.Control.Paint> zdarzenie i wywołanie `ShowOutputChannels`formularza, przekazując `e` jako <xref:System.Windows.Forms.PaintEventArgs>.  
  
 [!code-csharp[System.Drawing.Misc3#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Misc3/CS/Form1.cs#4)]
 [!code-vb[System.Drawing.Misc3#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Misc3/VB/Form1.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetOutputChannelColorProfile">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Ustawia wyjściowy plik kanału koloru.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetOutputChannelColorProfile">
      <MemberSignature Language="C#" Value="public void SetOutputChannelColorProfile (string colorProfileFilename);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetOutputChannelColorProfile(string colorProfileFilename) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.SetOutputChannelColorProfile(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetOutputChannelColorProfile (colorProfileFilename As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetOutputChannelColorProfile(System::String ^ colorProfileFilename);" />
      <MemberSignature Language="F#" Value="member this.SetOutputChannelColorProfile : string -&gt; unit" Usage="imageAttributes.SetOutputChannelColorProfile colorProfileFilename" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="colorProfileFilename" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="colorProfileFilename">Nazwa ścieżki pliku profilu koloru. Jeśli plik profilu kolorów znajduje się w katalogu%SystemRoot%\System32\Spool\Drivers\Color, ten parametr może być nazwą pliku. W przeciwnym razie ten parametr musi być w pełni kwalifikowaną nazwą ścieżki.</param>
        <summary>Ustawia plik profilu kolorów kanału wyjściowego dla kategorii domyślnej.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Możesz użyć <xref:System.Drawing.Imaging.ImageAttributes.SetOutputChannel%2A> metod i <xref:System.Drawing.Imaging.ImageAttributes.SetOutputChannelColorProfile%2A> do przekonwertowania obrazu na przestrzeń kolorów CMYK (błękitny-amarantowy-Yellow-Black) i przejrzeć intensywność jednego z kanałów kolorów CMYK. Załóżmy na przykład, że napiszesz kod, który wykonuje następujące czynności:  
  
1.  Utwórz element <xref:System.Drawing.Image>.  
  
2.  <xref:System.Drawing.Imaging.ImageAttributes> Utwórz obiekt.  
  
3.  Przekaż <xref:System.Drawing.Imaging.ColorChannelFlag.ColorChannelC> do<xref:System.Drawing.Imaging.ImageAttributes.SetOutputChannel%2A> metody obiektu<xref:System.Drawing.Imaging.ImageAttributes> .  
  
4.  Przekaż nazwę ścieżki pliku profilu koloru do <xref:System.Drawing.Imaging.ImageAttributes.SetOutputChannelColorProfile%2A> metody <xref:System.Drawing.Imaging.ImageAttributes> obiektu.  
  
5.  Przekaż ścieżki <xref:System.Drawing.Image> obiektów i <xref:System.Drawing.Imaging.ImageAttributes> do <xref:System.Drawing.Graphics.DrawImage%2A> metody.  
  
 [!INCLUDE[ndptecgdiplus](~/includes/ndptecgdiplus-md.md)]program użyje pliku profilu kolorów do obliczenia składnika błękitnego każdego piksela w obrazie, a każdy piksel w renderowanym obrazie będzie odcieniem szarego, który wskazuje intensywność kanału błękitnego.  
  
 <xref:System.Drawing.Imaging.ImageAttributes> Obiekt zachowuje ustawienia koloru i skali szarości dla pięciu kategorii korekty: domyślnego, bitmapowego, pędzla, pióra i tekstu. Na przykład można określić plik wyjściowy kanału kolorów dla kategorii domyślnej i inny plik wyjściowy kanału kolorowego dla kategorii Mapa bitowa.  
  
 Domyślne ustawienia dostosowania koloru i skali odcieni szarości mają zastosowanie do wszystkich kategorii, które nie mają własnych ustawień korekty. Jeśli na przykład nigdy nie określisz żadnych ustawień dopasowania dla kategorii Mapa bitowa, ustawienia domyślne są stosowane do kategorii Mapa bitowa.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetOutputChannelColorProfile">
      <MemberSignature Language="C#" Value="public void SetOutputChannelColorProfile (string colorProfileFilename, System.Drawing.Imaging.ColorAdjustType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetOutputChannelColorProfile(string colorProfileFilename, valuetype System.Drawing.Imaging.ColorAdjustType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.SetOutputChannelColorProfile(System.String,System.Drawing.Imaging.ColorAdjustType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetOutputChannelColorProfile (colorProfileFilename As String, type As ColorAdjustType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetOutputChannelColorProfile(System::String ^ colorProfileFilename, System::Drawing::Imaging::ColorAdjustType type);" />
      <MemberSignature Language="F#" Value="member this.SetOutputChannelColorProfile : string * System.Drawing.Imaging.ColorAdjustType -&gt; unit" Usage="imageAttributes.SetOutputChannelColorProfile (colorProfileFilename, type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="colorProfileFilename" Type="System.String" />
        <Parameter Name="type" Type="System.Drawing.Imaging.ColorAdjustType" />
      </Parameters>
      <Docs>
        <param name="colorProfileFilename">Nazwa ścieżki pliku profilu koloru. Jeśli plik profilu kolorów znajduje się w katalogu%SystemRoot%\System32\Spool\Drivers\Color, ten parametr może być nazwą pliku. W przeciwnym razie ten parametr musi być w pełni kwalifikowaną nazwą ścieżki.</param>
        <param name="type">Element określający <see cref="T:System.Drawing.Imaging.ColorAdjustType" /> kategorię, dla której jest ustawiony plik profilu koloru kanału wyjściowego.</param>
        <summary>Ustawia plik profilu kolorów kanału wyjściowego dla określonej kategorii.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Możesz użyć <xref:System.Drawing.Imaging.ImageAttributes.SetOutputChannel%2A> metod i <xref:System.Drawing.Imaging.ImageAttributes.SetOutputChannelColorProfile%2A> do przekonwertowania obrazu na przestrzeń kolorów CMYK (błękitny-amarantowy-Yellow-Black) i przejrzeć intensywność jednego z kanałów kolorów CMYK. Załóżmy na przykład, że napiszesz kod, który wykonuje następujące czynności:  
  
1.  Utwórz element <xref:System.Drawing.Image>.  
  
2.  <xref:System.Drawing.Imaging.ImageAttributes> Utwórz obiekt.  
  
3.  Przekaż <xref:System.Drawing.Imaging.ColorChannelFlag.ColorChannelC> do<xref:System.Drawing.Imaging.ImageAttributes.SetOutputChannel%2A> metody obiektu<xref:System.Drawing.Imaging.ImageAttributes> .  
  
4.  Przekaż nazwę ścieżki pliku profilu koloru do <xref:System.Drawing.Imaging.ImageAttributes.SetOutputChannelColorProfile%2A> metody <xref:System.Drawing.Imaging.ImageAttributes> obiektu.  
  
5.  Przekaż ścieżki <xref:System.Drawing.Image> obiektów i <xref:System.Drawing.Imaging.ImageAttributes> do <xref:System.Drawing.Graphics.DrawImage%2A> metody.  
  
 [!INCLUDE[ndptecgdiplus](~/includes/ndptecgdiplus-md.md)]program użyje pliku profilu kolorów do obliczenia składnika błękitnego każdego piksela w obrazie, a każdy piksel w renderowanym obrazie będzie odcieniem szarego, który wskazuje intensywność kanału błękitnego.  
  
 <xref:System.Drawing.Imaging.ImageAttributes> Obiekt zachowuje ustawienia koloru i skali szarości dla pięciu kategorii korekty: domyślnego, bitmapowego, pędzla, pióra i tekstu. Na przykład można określić plik wyjściowy kanału kolorów dla kategorii domyślnej i inny plik wyjściowy kanału kolorowego dla kategorii Mapa bitowa.  
  
 Domyślne ustawienia dostosowania koloru i skali odcieni szarości mają zastosowanie do wszystkich kategorii, które nie mają własnych ustawień korekty. Jeśli na przykład nigdy nie określisz żadnych ustawień dopasowania dla kategorii Mapa bitowa, ustawienia domyślne są stosowane do kategorii Mapa bitowa.  
  
 Po określeniu ustawienia dostosowania koloru lub skali odcieni szarości dla określonej kategorii domyślne ustawienia dostosowania nie będą już stosowane do tej kategorii. Załóżmy na przykład, że określisz kolekcję ustawień korekty dla kategorii domyślnej. Jeśli ustawisz plik profilu koloru kanału wyjściowego dla kategorii Mapa bitowa przez przekazanie <xref:System.Drawing.Imaging.ColorAdjustType.Bitmap> <xref:System.Drawing.Imaging.ImageAttributes.SetOutputChannelColorProfile%2A> do metody, żadne domyślne ustawienia dostosowania nie będą stosowane do map bitowych.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetRemapTable">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Ustawia tabelę mapowania kolorów.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetRemapTable">
      <MemberSignature Language="C#" Value="public void SetRemapTable (System.Drawing.Imaging.ColorMap[] map);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetRemapTable(class System.Drawing.Imaging.ColorMap[] map) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.SetRemapTable(System.Drawing.Imaging.ColorMap[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetRemapTable (map As ColorMap())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetRemapTable(cli::array &lt;System::Drawing::Imaging::ColorMap ^&gt; ^ map);" />
      <MemberSignature Language="F#" Value="member this.SetRemapTable : System.Drawing.Imaging.ColorMap[] -&gt; unit" Usage="imageAttributes.SetRemapTable map" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="map" Type="System.Drawing.Imaging.ColorMap[]" />
      </Parameters>
      <Docs>
        <param name="map">Tablica par kolorów typu <see cref="T:System.Drawing.Imaging.ColorMap" />. Każda para kolorów zawiera istniejący kolor (pierwsza wartość) i kolor, do którego zostanie zamapowany (druga wartość).</param>
        <summary>Ustawia tabelę z mapowaniem kolorów dla kategorii domyślnej.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Tabela z <xref:System.Drawing.Imaging.ColorMap> mapowaniem kolorów jest tablicą struktur. Każda <xref:System.Drawing.Imaging.ColorMap> struktura ma dwa <xref:System.Drawing.Color> obiekty: jeden, który określa stary kolor i jeden, który określa odpowiedni nowy kolor. Podczas renderowania wszystkie kolory zgodne z jednym ze starych kolorów w tabeli ponownego mapowania są zmieniane na odpowiadające im nowe kolory.  
  
 <xref:System.Drawing.Imaging.ImageAttributes> Obiekt zachowuje ustawienia koloru i skali szarości dla pięciu kategorii korekty: domyślnego, bitmapowego, pędzla, pióra i tekstu. Można na przykład określić ponowne mapowanie koloru dla kategorii domyślnej, tabelę z ponownym mapowaniem kolorów dla kategorii Mapa bitowa i nadal inną tabelę z ponownym mapowaniem kolorów dla kategorii pióro.  
  
 Domyślne ustawienia dostosowania koloru i skali odcieni szarości mają zastosowanie do wszystkich kategorii, które nie mają własnych ustawień korekty. Na przykład, jeśli nigdy nie określisz żadnych ustawień dopasowania dla kategorii pióra, ustawienia domyślne stosują się do kategorii pióro.  
  
   
  
## Examples  
 Poniższy przykład kodu jest przeznaczony do użytku z Windows Forms i wymaga <xref:System.Windows.Forms.PaintEventArgs> `e`, który <xref:System.Windows.Forms.Control.Paint> jest parametrem programu obsługi zdarzeń. Kod wykonuje następujące czynności:  
  
1.  Tworzy obraz (czerwony okrąg), zapisuje go jako Circle2. jpg, otwiera ten obraz i rysuje na ekranie.  
  
2.  Tworzy mapę kolorów, która mapuje kolor czerwony na kolor zielony.  
  
3.  Rysuje obraz utworzony wcześniej na ekranie, ale tym razem z użyciem mapy kolorów.  
  
 [!code-cpp[System.Drawing.ClassicImaging.ImageAttributes#6](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicImaging.ImageAttributes/CPP/form1.cpp#6)]
 [!code-csharp[System.Drawing.ClassicImaging.ImageAttributes#6](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicImaging.ImageAttributes/CS/form1.cs#6)]
 [!code-vb[System.Drawing.ClassicImaging.ImageAttributes#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicImaging.ImageAttributes/VB/form1.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetRemapTable">
      <MemberSignature Language="C#" Value="public void SetRemapTable (System.Drawing.Imaging.ColorMap[] map, System.Drawing.Imaging.ColorAdjustType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetRemapTable(class System.Drawing.Imaging.ColorMap[] map, valuetype System.Drawing.Imaging.ColorAdjustType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.SetRemapTable(System.Drawing.Imaging.ColorMap[],System.Drawing.Imaging.ColorAdjustType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetRemapTable (map As ColorMap(), type As ColorAdjustType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetRemapTable(cli::array &lt;System::Drawing::Imaging::ColorMap ^&gt; ^ map, System::Drawing::Imaging::ColorAdjustType type);" />
      <MemberSignature Language="F#" Value="member this.SetRemapTable : System.Drawing.Imaging.ColorMap[] * System.Drawing.Imaging.ColorAdjustType -&gt; unit" Usage="imageAttributes.SetRemapTable (map, type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="map" Type="System.Drawing.Imaging.ColorMap[]" />
        <Parameter Name="type" Type="System.Drawing.Imaging.ColorAdjustType" />
      </Parameters>
      <Docs>
        <param name="map">Tablica par kolorów typu <see cref="T:System.Drawing.Imaging.ColorMap" />. Każda para kolorów zawiera istniejący kolor (pierwsza wartość) i kolor, do którego zostanie zamapowany (druga wartość).</param>
        <param name="type">Element <see cref="T:System.Drawing.Imaging.ColorAdjustType" /> określający kategorię, dla której jest ustawiona tabela z mapowaniem kolorów.</param>
        <summary>Ustawia tabelę mapowania kolorów dla określonej kategorii.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Tabela z <xref:System.Drawing.Imaging.ColorMap> mapowaniem kolorów jest tablicą struktur. Każda <xref:System.Drawing.Imaging.ColorMap> struktura ma dwa <xref:System.Drawing.Color> obiekty: jeden, który określa stary kolor i jeden, który określa odpowiedni nowy kolor. Podczas renderowania wszystkie kolory zgodne z jednym ze starych kolorów w tabeli ponownego mapowania są zmieniane na odpowiadające im nowe kolory.  
  
 <xref:System.Drawing.Imaging.ImageAttributes> Obiekt zachowuje ustawienia koloru i skali szarości dla pięciu kategorii korekty: domyślnego, bitmapowego, pędzla, pióra i tekstu. Można na przykład określić ponowne mapowanie koloru dla kategorii domyślnej, tabelę z ponownym mapowaniem kolorów dla kategorii Mapa bitowa i nadal inną tabelę z ponownym mapowaniem kolorów dla kategorii pióro.  
  
 Domyślne ustawienia dostosowania koloru i skali odcieni szarości mają zastosowanie do wszystkich kategorii, które nie mają własnych ustawień korekty. Na przykład, jeśli nigdy nie określisz żadnych ustawień dopasowania dla kategorii pióra, ustawienia domyślne stosują się do kategorii pióro.  
  
 Po określeniu ustawienia dostosowania koloru lub skali odcieni szarości dla określonej kategorii domyślne ustawienia dostosowania nie będą już stosowane do tej kategorii. Załóżmy na przykład, że określisz kolekcję ustawień korekty dla kategorii domyślnej. Jeśli ustawisz tabelę z mapowaniem kolorów dla kategorii pióra przez przekazanie <xref:System.Drawing.Imaging.ColorAdjustType.Pen> <xref:System.Drawing.Imaging.ImageAttributes.SetRemapTable%2A> do metody, żadne domyślne ustawienia dostosowania nie będą stosowane do piór.  
  
   
  
## Examples  
 Aby zapoznać się z przykładem kodu <xref:System.Drawing.Imaging.ImageAttributes.SetRemapTable%28System.Drawing.Imaging.ColorMap%5B%5D%29> , zobacz metodę.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetThreshold">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Ustawia próg (zakres przezroczystości).</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetThreshold">
      <MemberSignature Language="C#" Value="public void SetThreshold (float threshold);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetThreshold(float32 threshold) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.SetThreshold(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetThreshold (threshold As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetThreshold(float threshold);" />
      <MemberSignature Language="F#" Value="member this.SetThreshold : single -&gt; unit" Usage="imageAttributes.SetThreshold threshold" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="threshold" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="threshold">Liczba rzeczywista, która określa wartość progową.</param>
        <summary>Ustawia próg (zakres przezroczystości) dla kategorii domyślnej.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Próg jest wartością z przedziału od 0 do 1, która określa punkt odcięcia dla każdego składnika koloru. Załóżmy na przykład, że próg jest ustawiony na 0,7 i Załóżmy, że renderuje kolor, którego składniki czerwony, zielony i niebieski są odpowiednio 230, 50 i 220. Składnik czerwony (230) jest większy niż 0.7 x255, więc składnik czerwony zostanie zmieniony na 255 (pełne natężenie). Zielony składnik (50) jest mniejszy niż 0.7 x255, więc zielony składnik zostanie zmieniony na 0. Niebieski składnik (220) jest większy niż 0.7 x255, więc niebieski składnik zostanie zmieniony na 255.  
  
 <xref:System.Drawing.Imaging.ImageAttributes> Obiekt zachowuje ustawienia koloru i skali szarości dla pięciu kategorii korekty: domyślnego, bitmapowego, pędzla, pióra i tekstu. Na przykład możesz określić próg dla kategorii domyślnej, próg dla kategorii Mapa bitowa i nadal inny próg dla kategorii pióro.  
  
 Domyślne ustawienia dostosowania koloru i skali odcieni szarości mają zastosowanie do wszystkich kategorii, które nie mają własnych ustawień korekty. Na przykład, jeśli nigdy nie określisz żadnych ustawień dopasowania dla kategorii pióra, ustawienia domyślne stosują się do kategorii pióro.  
  
   
  
## Examples  
 Poniższy przykład kodu jest przeznaczony do użytku z Windows Forms i wymaga <xref:System.Windows.Forms.PaintEventArgs> `e`, który <xref:System.Windows.Forms.Control.Paint> jest parametrem programu obsługi zdarzeń. Kod wykonuje następujące czynności:  
  
1.  <xref:System.Drawing.Image> Otwiera i rysuje na ekranie.  
  
2.  Tworzy obiekt i ustawia jego próg przy <xref:System.Drawing.Imaging.ImageAttributes.SetThreshold%2A> użyciu metody. <xref:System.Drawing.Imaging.ImageAttributes>  
  
3.  Rysuje obraz na ekranie przy użyciu wartości progowej <xref:System.Drawing.Imaging.ImageAttributes> obiektu.  
  
 [!code-cpp[System.Drawing.ClassicImaging.ImageAttributes#7](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicImaging.ImageAttributes/CPP/form1.cpp#7)]
 [!code-csharp[System.Drawing.ClassicImaging.ImageAttributes#7](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicImaging.ImageAttributes/CS/form1.cs#7)]
 [!code-vb[System.Drawing.ClassicImaging.ImageAttributes#7](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicImaging.ImageAttributes/VB/form1.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetThreshold">
      <MemberSignature Language="C#" Value="public void SetThreshold (float threshold, System.Drawing.Imaging.ColorAdjustType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetThreshold(float32 threshold, valuetype System.Drawing.Imaging.ColorAdjustType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.SetThreshold(System.Single,System.Drawing.Imaging.ColorAdjustType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetThreshold (threshold As Single, type As ColorAdjustType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetThreshold(float threshold, System::Drawing::Imaging::ColorAdjustType type);" />
      <MemberSignature Language="F#" Value="member this.SetThreshold : single * System.Drawing.Imaging.ColorAdjustType -&gt; unit" Usage="imageAttributes.SetThreshold (threshold, type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="threshold" Type="System.Single" />
        <Parameter Name="type" Type="System.Drawing.Imaging.ColorAdjustType" />
      </Parameters>
      <Docs>
        <param name="threshold">Wartość progowa od 0,0 do 1,0, która jest używana jako punkt przerwania do sortowania kolorów, które będą mapowane na wartość maksymalną lub minimalną.</param>
        <param name="type">Element określający <see cref="T:System.Drawing.Imaging.ColorAdjustType" /> kategorię, dla której ustawiono próg koloru.</param>
        <summary>Ustawia próg (zakres przezroczystości) dla określonej kategorii.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Próg jest wartością z przedziału od 0 do 1, która określa punkt odcięcia dla każdego składnika koloru. Załóżmy na przykład, że próg jest ustawiony na 0,7 i Załóżmy, że renderuje kolor, którego składniki czerwony, zielony i niebieski są odpowiednio 230, 50 i 220. Składnik czerwony (230) jest większy niż 0.7 x255, więc składnik czerwony zostanie zmieniony na 255 (pełne natężenie). Zielony składnik (50) jest mniejszy niż 0.7 x255, więc zielony składnik zostanie zmieniony na 0. Niebieski składnik (220) jest większy niż 0.7 x255, więc niebieski składnik zostanie zmieniony na 255.  
  
 <xref:System.Drawing.Imaging.ImageAttributes> Obiekt zachowuje ustawienia koloru i skali szarości dla pięciu kategorii korekty: domyślnego, bitmapowego, pędzla, pióra i tekstu. Na przykład możesz określić próg dla kategorii domyślnej, próg dla kategorii Mapa bitowa i nadal inny próg dla kategorii pióro.  
  
 Domyślne ustawienia dostosowania koloru i skali odcieni szarości mają zastosowanie do wszystkich kategorii, które nie mają własnych ustawień korekty. Na przykład, jeśli nigdy nie określisz żadnych ustawień dopasowania dla kategorii pióra, ustawienia domyślne stosują się do kategorii pióro.  
  
 Po określeniu ustawienia dostosowania koloru lub skali odcieni szarości dla określonej kategorii domyślne ustawienia dostosowania nie będą już stosowane do tej kategorii. Załóżmy na przykład, że określisz kolekcję ustawień korekty dla kategorii domyślnej. Jeśli ustawisz próg dla kategorii pióra przez przekazanie <xref:System.Drawing.Imaging.ColorAdjustType.Pen> <xref:System.Drawing.Imaging.ImageAttributes.SetThreshold%2A> do metody, żadne domyślne ustawienia dostosowania nie będą stosowane do piór.  
  
   
  
## Examples  
 Aby zapoznać się z przykładem kodu <xref:System.Drawing.Imaging.ImageAttributes.SetThreshold%28System.Single%29> , zobacz metodę.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetWrapMode">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Ustawia tryb zawijania.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetWrapMode">
      <MemberSignature Language="C#" Value="public void SetWrapMode (System.Drawing.Drawing2D.WrapMode mode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetWrapMode(valuetype System.Drawing.Drawing2D.WrapMode mode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.SetWrapMode(System.Drawing.Drawing2D.WrapMode)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetWrapMode (mode As WrapMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetWrapMode(System::Drawing::Drawing2D::WrapMode mode);" />
      <MemberSignature Language="F#" Value="member this.SetWrapMode : System.Drawing.Drawing2D.WrapMode -&gt; unit" Usage="imageAttributes.SetWrapMode mode" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mode" Type="System.Drawing.Drawing2D.WrapMode" />
      </Parameters>
      <Docs>
        <param name="mode">Element określający <see cref="T:System.Drawing.Drawing2D.WrapMode" /> , jak powtarzające się kopie obrazu są używane do kafelków obszaru.</param>
        <summary>Ustawia tryb zawijania używany do decydowania o sposobie kafelka tekstury w obrębie kształtu lub w granicach kształtu. Tekstura jest rozmieszczana w obrębie kształtu, aby wypełnić go, gdy tekstura jest mniejsza niż wypełniany kształt.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wywołanie metody jest równoznaczne z wywołaniem <xref:System.Drawing.Imaging.ImageAttributes.SetWrapMode%28System.Drawing.Drawing2D.WrapMode%2CSystem.Drawing.Color%29> i <xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType> przekazaniem `color` parametru. <xref:System.Drawing.Imaging.ImageAttributes.SetWrapMode%28System.Drawing.Drawing2D.WrapMode%29> <xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType>Określa kolor pikseli poza renderowanym obrazem. Ten kolor jest widoczny, jeśli parametr mode ma wartość <xref:System.Drawing.Drawing2D.WrapMode.Clamp> , a prostokąt źródłowy przeszedł <xref:System.Drawing.Graphics.DrawImage%2A> do metody jest większy niż sam obraz.  
  
   
  
## Examples  
 Poniższy przykład kodu jest przeznaczony do użytku z Windows Forms i wymaga <xref:System.Windows.Forms.PaintEventArgs> `e`, który <xref:System.Windows.Forms.Control.Paint> jest parametrem programu obsługi zdarzeń. Kod wykonuje następujące czynności:  
  
1.  Otwiera plik <xref:System.Drawing.Image> z Circle3. jpg (małe, czerwone koło) i rysuje go na ekranie.  
  
2.  Tworzy obiekt i <xref:System.Drawing.Drawing2D.WrapMode> ustawia Wyliczenie na <xref:System.Drawing.Drawing2D.WrapMode.Tile>. <xref:System.Drawing.Imaging.ImageAttributes>  
  
3.  Tworzy obraz <xref:System.Drawing.TextureBrush> przy użyciu obrazu z pliku Circle3. jpg.  
  
4.  Rysuje prostokąt na ekranie wypełnionym małymi, czerwonymi kółkami.  
  
 [!code-cpp[System.Drawing.ClassicImaging.ImageAttributes#8](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicImaging.ImageAttributes/CPP/form1.cpp#8)]
 [!code-csharp[System.Drawing.ClassicImaging.ImageAttributes#8](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicImaging.ImageAttributes/CS/form1.cs#8)]
 [!code-vb[System.Drawing.ClassicImaging.ImageAttributes#8](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicImaging.ImageAttributes/VB/form1.vb#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetWrapMode">
      <MemberSignature Language="C#" Value="public void SetWrapMode (System.Drawing.Drawing2D.WrapMode mode, System.Drawing.Color color);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetWrapMode(valuetype System.Drawing.Drawing2D.WrapMode mode, valuetype System.Drawing.Color color) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.SetWrapMode(System.Drawing.Drawing2D.WrapMode,System.Drawing.Color)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetWrapMode(System::Drawing::Drawing2D::WrapMode mode, System::Drawing::Color color);" />
      <MemberSignature Language="F#" Value="member this.SetWrapMode : System.Drawing.Drawing2D.WrapMode * System.Drawing.Color -&gt; unit" Usage="imageAttributes.SetWrapMode (mode, color)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mode" Type="System.Drawing.Drawing2D.WrapMode" />
        <Parameter Name="color" Type="System.Drawing.Color" />
      </Parameters>
      <Docs>
        <param name="mode">Element określający <see cref="T:System.Drawing.Drawing2D.WrapMode" /> , jak powtarzające się kopie obrazu są używane do kafelków obszaru.</param>
        <param name="color"><see cref="T:System.Drawing.Imaging.ImageAttributes" /> Obiekt, który określa kolor pikseli poza renderowanym obrazem. Ten kolor jest widoczny, jeśli parametr mode ma wartość <see cref="F:System.Drawing.Drawing2D.WrapMode.Clamp" /> , a prostokąt źródłowy przeszedł na <see cref="Overload:System.Drawing.Graphics.DrawImage" /> wartość większą niż obraz.</param>
        <summary>Ustawia tryb zawijania i kolor używany do decydowania o sposobie kafelka tekstury w obrębie kształtu lub w granicach kształtu. Tekstura jest rozmieszczana w obrębie kształtu, aby wypełnić go, gdy tekstura jest mniejsza niż wypełniany kształt.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Aby zapoznać się z przykładem kodu <xref:System.Drawing.Imaging.ImageAttributes.SetWrapMode%28System.Drawing.Drawing2D.WrapMode%29> , zobacz metodę.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetWrapMode">
      <MemberSignature Language="C#" Value="public void SetWrapMode (System.Drawing.Drawing2D.WrapMode mode, System.Drawing.Color color, bool clamp);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetWrapMode(valuetype System.Drawing.Drawing2D.WrapMode mode, valuetype System.Drawing.Color color, bool clamp) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.SetWrapMode(System.Drawing.Drawing2D.WrapMode,System.Drawing.Color,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetWrapMode(System::Drawing::Drawing2D::WrapMode mode, System::Drawing::Color color, bool clamp);" />
      <MemberSignature Language="F#" Value="member this.SetWrapMode : System.Drawing.Drawing2D.WrapMode * System.Drawing.Color * bool -&gt; unit" Usage="imageAttributes.SetWrapMode (mode, color, clamp)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mode" Type="System.Drawing.Drawing2D.WrapMode" />
        <Parameter Name="color" Type="System.Drawing.Color" />
        <Parameter Name="clamp" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="mode">Element określający <see cref="T:System.Drawing.Drawing2D.WrapMode" /> , jak powtarzające się kopie obrazu są używane do kafelków obszaru.</param>
        <param name="color">Obiekt koloru, który określa kolor pikseli poza renderowanym obrazem. Ten kolor jest widoczny, jeśli parametr mode ma wartość <see cref="F:System.Drawing.Drawing2D.WrapMode.Clamp" /> , a prostokąt źródłowy przeszedł na <see cref="Overload:System.Drawing.Graphics.DrawImage" /> wartość większą niż obraz.</param>
        <param name="clamp">Ten parametr nie ma wpływu. Ustaw ją na <see langword="false" />wartość.</param>
        <summary>Ustawia tryb zawijania i kolor używany do decydowania o sposobie kafelka tekstury w obrębie kształtu lub w granicach kształtu. Tekstura jest rozmieszczana w obrębie kształtu, aby wypełnić go, gdy tekstura jest mniejsza niż wypełniany kształt.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Aby zapoznać się z przykładem kodu <xref:System.Drawing.Imaging.ImageAttributes.SetWrapMode%28System.Drawing.Drawing2D.WrapMode%29> , zobacz metodę.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
