<Type Name="SemanticResultValue" FullName="System.Speech.Recognition.SemanticResultValue">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="797a339d2959f7a21f676aab7fd40fbe56982ddf" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30579541" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class SemanticResultValue" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SemanticResultValue extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Speech.Recognition.SemanticResultValue" />
  <TypeSignature Language="VB.NET" Value="Public Class SemanticResultValue" />
  <TypeSignature Language="C++ CLI" Value="public ref class SemanticResultValue" />
  <AssemblyInfo>
    <AssemblyName>System.Speech</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Diagnostics.DebuggerDisplay("{_tag.DebugSummary}")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="50e99-101">Reprezentuje wartość semantyki i opcjonalnie kojarzy wartość ze składnikiem gramatyki rozpoznawania mowy.</span>
      <span class="sxs-lookup">
        <span data-stu-id="50e99-101">Represents a semantic value and optionally associates the value with a component of a speech recognition grammar.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="50e99-102">Użycie <xref:System.Speech.Recognition.SemanticResultValue> i <xref:System.Speech.Recognition.SemanticResultKey> obiektów w połączeniu z <xref:System.Speech.Recognition.GrammarBuilder> i <xref:System.Speech.Recognition.Choices>, jest najprostszym sposobem projekt semantycznego struktury <xref:System.Speech.Recognition.Grammar>.</span><span class="sxs-lookup"><span data-stu-id="50e99-102">Use of <xref:System.Speech.Recognition.SemanticResultValue> and <xref:System.Speech.Recognition.SemanticResultKey> objects, in conjunction with <xref:System.Speech.Recognition.GrammarBuilder> and <xref:System.Speech.Recognition.Choices>, is the easiest way to design a semantic structure for a <xref:System.Speech.Recognition.Grammar>.</span></span> <span data-ttu-id="50e99-103">Informacje semantyczne o hasło jest dostępny, uzyskując wystąpienia <xref:System.Speech.Recognition.SemanticValue>, za pomocą <xref:System.Speech.Recognition.RecognizedPhrase.Semantics%2A> właściwość <xref:System.Speech.Recognition.RecognizedPhrase>.</span><span class="sxs-lookup"><span data-stu-id="50e99-103">Semantic information for a phrase is accessed by obtaining an instance of <xref:System.Speech.Recognition.SemanticValue>, through the <xref:System.Speech.Recognition.RecognizedPhrase.Semantics%2A> property on <xref:System.Speech.Recognition.RecognizedPhrase>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="50e99-104">Wartości zarządza <xref:System.Speech.Recognition.SemanticResultValue> obiekty są definiowane przez <xref:System.Object> wystąpienia przekazane do ich konstruktorów.</span><span class="sxs-lookup"><span data-stu-id="50e99-104">Values managed by <xref:System.Speech.Recognition.SemanticResultValue> objects are defined by <xref:System.Object> instances passed to their constructors.</span></span> <span data-ttu-id="50e99-105">Typ bazowy <xref:System.Object> musi być `bool`, `int`, `float`, lub `string`.</span><span class="sxs-lookup"><span data-stu-id="50e99-105">The underlying type of this <xref:System.Object> must be `bool`, `int`, `float`, or `string`.</span></span> <span data-ttu-id="50e99-106">Innego typu uniemożliwi konstrukcja <xref:System.Speech.Recognition.Grammar> wystąpienia z <xref:System.Speech.Recognition.SemanticResultValue>.</span><span class="sxs-lookup"><span data-stu-id="50e99-106">Any other type will prevent construction of a <xref:System.Speech.Recognition.Grammar> instance with the <xref:System.Speech.Recognition.SemanticResultValue>.</span></span>  
  
 <span data-ttu-id="50e99-107">Typowy sposób użycia protokołu <xref:System.Speech.Recognition.SemanticResultValue> wystąpienia kojarzy wystąpienie z rozpoznawalnych składnik <xref:System.Speech.Recognition.Grammar>, takie jak hasło, reguły lub <xref:System.Speech.Recognition.Choices> obiektu.</span><span class="sxs-lookup"><span data-stu-id="50e99-107">The typical use of a <xref:System.Speech.Recognition.SemanticResultValue> instance associates the instance with a recognizable component of a <xref:System.Speech.Recognition.Grammar>, such as a phrase, a rule, or a <xref:System.Speech.Recognition.Choices> object.</span></span> <span data-ttu-id="50e99-108">Jeśli składnik skojarzony jest używany w ramach operacji rozpoznawania <xref:System.Speech.Recognition.SemanticResultValue> służy do definiowania wartość w semantykę zwracane wyrażenie.</span><span class="sxs-lookup"><span data-stu-id="50e99-108">If the associated component is used as part of a recognition operation, the <xref:System.Speech.Recognition.SemanticResultValue> is used to define a value in the semantics of the returned phrase.</span></span>  
  
 <span data-ttu-id="50e99-109">Istnieją dwie podstawowe metody kojarzenia <xref:System.Speech.Recognition.SemanticResultValue> wystąpienia z elementem gramatyki, w zależności od Konstruktor używany do tworzenia <xref:System.Speech.Recognition.SemanticResultValue>.</span><span class="sxs-lookup"><span data-stu-id="50e99-109">There are two basic methods for associating a <xref:System.Speech.Recognition.SemanticResultValue> instance with a grammar element, depending on the constructor used to create the <xref:System.Speech.Recognition.SemanticResultValue>.</span></span>  
  
-   <span data-ttu-id="50e99-110">Jeśli tylko wartość (określoną przez wystąpienie <xref:System.Object>) jest używany do tworzenia <xref:System.Speech.Recognition.SemanticResultValue> obiektu <xref:System.Speech.Recognition.SemanticResultValue> jest skojarzony ze składnikiem gramatyki ją, oprócz <xref:System.Speech.Recognition.GrammarBuilder> obiektu.</span><span class="sxs-lookup"><span data-stu-id="50e99-110">If only the value (specified by an instance of <xref:System.Object>) is used to construct a <xref:System.Speech.Recognition.SemanticResultValue> object, the <xref:System.Speech.Recognition.SemanticResultValue> is associated with the grammar component that preceded it, in addition to a <xref:System.Speech.Recognition.GrammarBuilder> object.</span></span>  
  
     <span data-ttu-id="50e99-111">Na przykład w fragmencie kodu poniżej, jeśli <xref:System.Speech.Recognition.Grammar> utworzone za pomocą tej <xref:System.Speech.Recognition.GrammarBuilder> wystąpienia rozpoznaje słowo "tło", wartość `true` jest ustawiany w semantyki rozpoznaną frazę.</span><span class="sxs-lookup"><span data-stu-id="50e99-111">For instance, in the code fragment below, if a <xref:System.Speech.Recognition.Grammar> constructed using this <xref:System.Speech.Recognition.GrammarBuilder> instance recognizes the word "background", a value of `true` is set in the recognized phrase semantics.</span></span>  
  
    ```csharp  
    GrammarBuilder backgroundGB=new GrammarBuilder("background");  
    backgroundGB.Append(new SemanticResultValue(true));  
    ```  
  
     <span data-ttu-id="50e99-112">Aby uzyskać więcej informacji, zobacz opis <xref:System.Speech.Recognition.SemanticResultValue.%23ctor%28System.Object%29>.</span><span class="sxs-lookup"><span data-stu-id="50e99-112">For more information, see the description of <xref:System.Speech.Recognition.SemanticResultValue.%23ctor%28System.Object%29>.</span></span>  
  
-   <span data-ttu-id="50e99-113">Jeśli wyrażenie wartości ciągu lub określonych <xref:System.Speech.Recognition.GrammarBuilder> wystąpienie jest używany <xref:System.Object> , który określa <xref:System.Speech.Recognition.SemanticResultValue> wartości, że wartość jest automatycznie kojarzony z frazy wartość ciągu lub <xref:System.Speech.Recognition.GrammarBuilder> wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="50e99-113">If a string value phrase or specific <xref:System.Speech.Recognition.GrammarBuilder> instance is used, together with a <xref:System.Object> that specifies a <xref:System.Speech.Recognition.SemanticResultValue> value, that value is automatically associated with the string value phrase or the <xref:System.Speech.Recognition.GrammarBuilder> instance.</span></span>  <span data-ttu-id="50e99-114">Jeśli wyrażenie lub <xref:System.Speech.Recognition.GrammarBuilder> obiekt jest używany w procesie rozpoznawania, wartość zostanie przypisana do semantykę rozpoznaną frazę.</span><span class="sxs-lookup"><span data-stu-id="50e99-114">If the phrase or <xref:System.Speech.Recognition.GrammarBuilder> object is used in the process of recognition, the value will be assigned to the semantics of the recognized phrase.</span></span>  
  
     <span data-ttu-id="50e99-115">Poniższy przykład ilustruje to i pełni taką samą jak w poprzednim przykładzie, który używany jawnego wywołania <xref:System.Speech.Recognition.GrammarBuilder.Append%2A> i <xref:System.Speech.Recognition.SemanticResultValue.%23ctor%28System.Object%29>.</span><span class="sxs-lookup"><span data-stu-id="50e99-115">The following example illustrates this, and is functionally equivalent to the preceding example, which used explicit calls to <xref:System.Speech.Recognition.GrammarBuilder.Append%2A> and <xref:System.Speech.Recognition.SemanticResultValue.%23ctor%28System.Object%29>.</span></span> <span data-ttu-id="50e99-116">Jeśli logika rozpoznawania korzysta z programu word "tło", wartość `true` zostanie dodany do rozpoznanym semantyki.</span><span class="sxs-lookup"><span data-stu-id="50e99-116">If the recognition logic uses the word "background", the value `true` will be added to the recognized semantics.</span></span>  
  
    ```csharp  
    fgOrbgChoice.Add((GrammarBuilder)new SemanticResultValue("background", true));  
    ```  
  
     <span data-ttu-id="50e99-117">Aby uzyskać więcej informacji, zobacz opis <xref:System.Speech.Recognition.SemanticResultValue.%23ctor%28System.Speech.Recognition.GrammarBuilder%2CSystem.Object%29> i <xref:System.Speech.Recognition.SemanticResultValue.%23ctor%28System.String%2CSystem.Object%29>.</span><span class="sxs-lookup"><span data-stu-id="50e99-117">For more information, see the description of <xref:System.Speech.Recognition.SemanticResultValue.%23ctor%28System.Speech.Recognition.GrammarBuilder%2CSystem.Object%29> and <xref:System.Speech.Recognition.SemanticResultValue.%23ctor%28System.String%2CSystem.Object%29>.</span></span>  
  
 <span data-ttu-id="50e99-118">Do użycia przez <xref:System.Speech.Recognition.Grammar> rozpoznawanie, wszystkie <xref:System.Speech.Recognition.SemanticResultValue> wystąpień musi być skojarzony z jednym z <xref:System.Speech.Recognition.SemanticValue> obiektów używanych przez to <xref:System.Speech.Recognition.Grammar>.</span><span class="sxs-lookup"><span data-stu-id="50e99-118">To be used by a <xref:System.Speech.Recognition.Grammar> in recognition, all <xref:System.Speech.Recognition.SemanticResultValue> instances must be associated with one of the <xref:System.Speech.Recognition.SemanticValue> objects used by that <xref:System.Speech.Recognition.Grammar>.</span></span> <span data-ttu-id="50e99-119">Odbywa się przez skojarzenie semantyczne klucza z <xref:System.Speech.Recognition.SemanticResultValue>.</span><span class="sxs-lookup"><span data-stu-id="50e99-119">This is done by associating a semantic key with the <xref:System.Speech.Recognition.SemanticResultValue>.</span></span>  
  
 <span data-ttu-id="50e99-120">Klucze semantycznego może zostać jawnie dołączony do <xref:System.Speech.Recognition.SemanticResultValue>za pomocą <xref:System.Speech.Recognition.SemanticResultKey> obiektu.</span><span class="sxs-lookup"><span data-stu-id="50e99-120">Semantic keys can be explicitly attached to a <xref:System.Speech.Recognition.SemanticResultValue>, using a <xref:System.Speech.Recognition.SemanticResultKey> object.</span></span>  <span data-ttu-id="50e99-121"><xref:System.Speech.Recognition.SemanticResultValue> nie zostało dołączone do klucza wystąpienia są dołączone do klucza głównego domyślnych <xref:System.Speech.Recognition.SemanticValue>.</span><span class="sxs-lookup"><span data-stu-id="50e99-121"><xref:System.Speech.Recognition.SemanticResultValue> instances not explicitly attached to a key are attached to the root key of the default <xref:System.Speech.Recognition.SemanticValue>.</span></span>  
  
 <span data-ttu-id="50e99-122">Po <xref:System.Speech.Recognition.SemanticResultValue> został użyty do ustawienia <xref:System.Speech.Recognition.SemanticValue.Value%2A>, czy zostaje ono oznakowane domyślny klucz główny lub dowolnego określonego <xref:System.Speech.Recognition.SemanticResultKey>, nie można modyfikować tej wartości lub wystąpi wyjątek podczas operacji rozpoznawania.</span><span class="sxs-lookup"><span data-stu-id="50e99-122">After a <xref:System.Speech.Recognition.SemanticResultValue> has been used to set the <xref:System.Speech.Recognition.SemanticValue.Value%2A>, whether it is tagged with the default root key or by any particular <xref:System.Speech.Recognition.SemanticResultKey>, that value must not be modified or an exception will occur during recognition operations.</span></span>  
  
 <span data-ttu-id="50e99-123">Poniższy przykład spowoduje wyjątek, ponieważ zestawy, a następnie modyfikuje głównego <xref:System.Speech.Recognition.SemanticValue.Value%2A> z <xref:System.Speech.Recognition.Grammar>.</span><span class="sxs-lookup"><span data-stu-id="50e99-123">The following example will cause an exception because it sets and then modifies the root <xref:System.Speech.Recognition.SemanticValue.Value%2A> of a <xref:System.Speech.Recognition.Grammar>.</span></span>  
  
```csharp  
GrammarBuilder gb=new GrammarBuilder();  
gb.Append(new SemanticResultValue("One"));  
gb.Append(new SemanticResultValue("Two"));  
```  
  
 <span data-ttu-id="50e99-124">Z drugiej strony kod w poniższym przykładzie jest dozwolone.</span><span class="sxs-lookup"><span data-stu-id="50e99-124">On the other hand, the code in the following example is permitted.</span></span> <span data-ttu-id="50e99-125">Mimo że definiuje on wiele wystąpień <xref:System.Speech.Recognition.SemanticResultValue>, są uwzględniane w <xref:System.Speech.Recognition.Choices> obiektu, a tylko jedna będzie kiedykolwiek można użyć do ustawienia wartości klucza `bgOrfgText`.</span><span class="sxs-lookup"><span data-stu-id="50e99-125">Although it defines multiple instances of <xref:System.Speech.Recognition.SemanticResultValue>, they are included in a <xref:System.Speech.Recognition.Choices> object, and only one will ever be used to set the value of the key `bgOrfgText`.</span></span>  
  
```csharp  
Choices fgOrbgChoice = new Choices();  
fgOrbgChoice.Add((GrammarBuilder)new SemanticResultValue("background"));  
fgOrbgChoice.Add((GrammarBuilder)new SemanticResultValue("foreground"));  
SemanticResultKey fgOrbgChoiceKey = new SemanticResultKey("BgOrFgText", fgOrbgChoice);  
```  
  
 <span data-ttu-id="50e99-126">Aby uzyskać więcej informacji o korzystaniu z <xref:System.Speech.Recognition.SemanticResultValue> i <xref:System.Speech.Recognition.SemanticResultKey> obiekty, zobacz [SemanticResultValue zrozumienia i obiekty SemanticResultKey](http://msdn.microsoft.com/library/0fea1236-5261-4608-89b3-9ce9ffc22a1c) i [przy użyciu SemanticResultKey do wyodrębniania SemanticResultValue](http://msdn.microsoft.com/library/198e29b8-845f-4cec-a25e-f55c0eaf46aa) w [przewodnik programowania w języku mowy systemu .NET Framework 4.0](http://msdn.microsoft.com/library/610116c7-3817-40ff-857b-5d41e8511043).</span><span class="sxs-lookup"><span data-stu-id="50e99-126">For more information about using <xref:System.Speech.Recognition.SemanticResultValue> and <xref:System.Speech.Recognition.SemanticResultKey> objects, see [Understanding SemanticResultValue and SemanticResultKey Objects](http://msdn.microsoft.com/library/0fea1236-5261-4608-89b3-9ce9ffc22a1c) and [Using a SemanticResultKey to Extract a SemanticResultValue](http://msdn.microsoft.com/library/198e29b8-845f-4cec-a25e-f55c0eaf46aa) in the [System Speech Programming Guide for .NET Framework 4.0](http://msdn.microsoft.com/library/610116c7-3817-40ff-857b-5d41e8511043).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="50e99-127">Poniższy przykład zwraca <xref:System.Speech.Recognition.Grammar> która rozpoznaje polecenie "Alter-Set/Zmień narzędzia/tła...</span><span class="sxs-lookup"><span data-stu-id="50e99-127">The following example returns a <xref:System.Speech.Recognition.Grammar> that recognizes the command "Set/Change/Alter Foreground/Background …</span></span> <span data-ttu-id="50e99-128">[lista kolor] ".</span><span class="sxs-lookup"><span data-stu-id="50e99-128">[color list]".</span></span>  <span data-ttu-id="50e99-129"><xref:System.Speech.Recognition.SemanticResultValue> i <xref:System.Speech.Recognition.SemanticResultKey> wystąpień (łącznie z <xref:System.Speech.Recognition.Choices> i <xref:System.Speech.Recognition.GrammarBuilder> obiektów) są używane do definiowania semantyki, który może być analizowana na rozpoznawania.</span><span class="sxs-lookup"><span data-stu-id="50e99-129"><xref:System.Speech.Recognition.SemanticResultValue> and <xref:System.Speech.Recognition.SemanticResultKey> instances (in conjunction with <xref:System.Speech.Recognition.Choices> and <xref:System.Speech.Recognition.GrammarBuilder> objects) are used to define semantics that can be parsed on recognition.</span></span>  <span data-ttu-id="50e99-130">Przeanalizowana semantyki określi zażądano kolor i określa, czy na pierwszym planie lub w tle ma zostać zmodyfikowana.</span><span class="sxs-lookup"><span data-stu-id="50e99-130">The parsed semantics will determine which color was requested and whether the foreground or background is to be modified.</span></span>  
  
```  
  
private Grammar FgBgColorGrammar()   
{  
  Grammar grammar = null;  
  
  // Allow the command to begin with set, alter, change.  
  Choices introChoices = new Choices();  
  foreach (string introString in new string[] { "Change", "Set", "Alter" })   
  {  
    GrammarBuilder introGB = new GrammarBuilder(introString);  
    introChoices.Add(new SemanticResultValue(introGB, String.Format("Command: {0}", introString)));  
  }    
  
  GrammarBuilder cmdIntro = new GrammarBuilder(introChoices);  
  
  // Define the arguments for the command to select foreground or background   
  // and to change their color as semantic values.  
  Choices fgOrbgChoice = new Choices();  
  GrammarBuilder backgroundGB=new GrammarBuilder("background");  
  backgroundGB.Append(new SemanticResultValue(true));  
  fgOrbgChoice.Add(backgroundGB);  
  fgOrbgChoice.Add((GrammarBuilder)new SemanticResultValue("foreground", false));  
  SemanticResultKey fgOrbgChoiceKey = new SemanticResultKey("BgOrFgBool", fgOrbgChoice);  
  Choices colorChoice = new Choices();  
  foreach (string colorName in System.Enum.GetNames(typeof(KnownColor)))   
  {  
  
    // Use implicit conversion of SemanticResultValue to GrammarBuilder.      
    colorChoice.Add(  
        (GrammarBuilder) (new SemanticResultValue(colorName, (Color.FromName(colorName)).Name)));  
  }  
  
  // Create a GrammarBuilder for CmdArgs to be appended to CmdIntro using  
  // semantic keys.  
  GrammarBuilder cmdArgs = new GrammarBuilder();  
  cmdArgs.Append(new SemanticResultKey("BgOrFgBool", fgOrbgChoice));  
  cmdArgs.AppendWildcard();  
  cmdArgs.Append(new SemanticResultKey("colorStringList", colorChoice));  
  
  GrammarBuilder cmds =   
      GrammarBuilder.Add(  
                       cmdIntro,  
                       new GrammarBuilder(new SemanticResultKey("Cmd Args", cmdArgs)));  
  grammar = new Grammar(cmds);  
  grammar.Name = "Tree [Set,change,alter] [foreground,background] * color";  
  return grammar;  
}  
```  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="50e99-131">Inicjuje nowe wystąpienie klasy <see cref="T:System.Speech.Recognition.SemanticResultValue" /> klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="50e99-131">Initializes a new instance of the <see cref="T:System.Speech.Recognition.SemanticResultValue" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="50e99-132">`SemanticResultValue` Konstruktorów obsługuje określania <xref:System.Object> wystąpienia z odpowiedniego typu danych `bool`, `int`, `float`, lub `string`.</span><span class="sxs-lookup"><span data-stu-id="50e99-132">The `SemanticResultValue` constructors support specifying an <xref:System.Object> instance with an underlying data type of `bool`, `int`, `float`, or `string`.</span></span>  
  
 <span data-ttu-id="50e99-133">Można utworzyć konstruktora `SemanticResultValue` wystąpienie w jednej z dwóch sytuacji:</span><span class="sxs-lookup"><span data-stu-id="50e99-133">A constructor can create a `SemanticResultValue` instance in either of two circumstances:</span></span>  
  
-   <span data-ttu-id="50e99-134">`SemanticResultValue` Wystąpienie musi być jawnie skojarzony z elementem gramatyki, korzystając z <xref:System.Speech.Recognition.GrammarBuilder> do skonstruowania <xref:System.Speech.Recognition.Grammar>.</span><span class="sxs-lookup"><span data-stu-id="50e99-134">The `SemanticResultValue` instance must be explicitly associated with a grammar element when using a <xref:System.Speech.Recognition.GrammarBuilder> to construct a <xref:System.Speech.Recognition.Grammar>.</span></span>  
  
-   <span data-ttu-id="50e99-135">`SemanticResultValue` Jest już skojarzona z wartość wyrażenia ciągu lub <xref:System.Speech.Recognition.GrammarBuilder> obiektu.</span><span class="sxs-lookup"><span data-stu-id="50e99-135">The `SemanticResultValue` is already associated with a string value phrase or a <xref:System.Speech.Recognition.GrammarBuilder> object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SemanticResultValue (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.SemanticResultValue.#ctor(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SemanticResultValue(System::Object ^ value);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="50e99-136">Wartość zarządza <see cref="T:System.Speech.Recognition.SemanticResultValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="50e99-136">The value managed by <see cref="T:System.Speech.Recognition.SemanticResultValue" />.</span>
          </span>
          <span data-ttu-id="50e99-137">Musi być typu <see langword="bool" />, <see langword="int" />, <see langword="float" />, lub <see langword="string" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="50e99-137">Must be of type <see langword="bool" />, <see langword="int" />, <see langword="float" />, or <see langword="string" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="50e99-138">Inicjuje nowe wystąpienie klasy <see cref="T:System.Speech.Recognition.SemanticResultValue" /> , określa wartość semantyki.</span>
          <span class="sxs-lookup">
            <span data-stu-id="50e99-138">Initializes a new instance of the <see cref="T:System.Speech.Recognition.SemanticResultValue" /> class and specifies a semantic value.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="50e99-139">A `SemanticResultValue` zwróconych przez ten konstruktor nie jest skojarzony z żadnym elementem określonym gramatyki.</span><span class="sxs-lookup"><span data-stu-id="50e99-139">A `SemanticResultValue` returned by this constructor is not associated with any particular grammar element.</span></span> <span data-ttu-id="50e99-140">Skojarzenie musi jawnie przy użyciu wystąpienia `SemanticResultValue` w połączeniu z <xref:System.Speech.Recognition.GrammarBuilder>.</span><span class="sxs-lookup"><span data-stu-id="50e99-140">The association must be made explicit by using the instance of `SemanticResultValue` in conjunction with <xref:System.Speech.Recognition.GrammarBuilder>.</span></span>  
  
 <span data-ttu-id="50e99-141">Na przykład w fragmencie kodu poniżej, jeśli <xref:System.Speech.Recognition.Grammar> utworzone za pomocą tej <xref:System.Speech.Recognition.GrammarBuilder> wystąpienia rozpoznaje słowo "tło", wartość `true` jest ustawiany w semantyki rozpoznaną frazę.</span><span class="sxs-lookup"><span data-stu-id="50e99-141">For instance, in the code fragment below, if a <xref:System.Speech.Recognition.Grammar> constructed using this <xref:System.Speech.Recognition.GrammarBuilder> instance recognizes the word "background", a value of `true` is set in the recognized phrase semantics.</span></span>  
  
```csharp  
GrammarBuilder backgroundGB=new GrammarBuilder("background");  
backgroundGB.Append(new SemanticResultValue(true));  
```  
  
   
  
## Examples  
 <span data-ttu-id="50e99-142">Poniższy przykład zwraca <xref:System.Speech.Recognition.Grammar> która rozpoznaje polecenie "Alter-Set/Zmień narzędzia/tła...</span><span class="sxs-lookup"><span data-stu-id="50e99-142">The following example returns a <xref:System.Speech.Recognition.Grammar> that recognizes the command "Set/Change/Alter Foreground/Background …</span></span> <span data-ttu-id="50e99-143">[lista kolor] ".</span><span class="sxs-lookup"><span data-stu-id="50e99-143">[color list]".</span></span> <span data-ttu-id="50e99-144"><xref:System.Speech.Recognition.SemanticResultValue> i <xref:System.Speech.Recognition.SemanticResultKey> wystąpień (łącznie z <xref:System.Speech.Recognition.Choices> i <xref:System.Speech.Recognition.GrammarBuilder> obiektów) są używane do definiowania semantyki, który może być analizowana na rozpoznawania.</span><span class="sxs-lookup"><span data-stu-id="50e99-144"><xref:System.Speech.Recognition.SemanticResultValue> and <xref:System.Speech.Recognition.SemanticResultKey> instances (in conjunction with <xref:System.Speech.Recognition.Choices> and <xref:System.Speech.Recognition.GrammarBuilder> objects) are used to define semantics that can be parsed on recognition.</span></span>  <span data-ttu-id="50e99-145">Przeanalizowana semantyki określi zażądano kolor i określa, czy na pierwszym planie lub w tle ma zostać zmodyfikowana.</span><span class="sxs-lookup"><span data-stu-id="50e99-145">The parsed semantics will determine which color was requested and whether the foreground or background is to be modified.</span></span>  
  
```csharp  
  
private Grammar FgBgColorGrammar()   
{  
  Grammar grammar = null;  
  
  // Allow the command to begin with set, alter, change.  
  Choices introChoices = new Choices();  
  foreach (string introString in new string[] { "Change", "Set", "Alter" })   
  {  
    GrammarBuilder introGB = new GrammarBuilder(introString);  
    introChoices.Add(  
                  new SemanticResultValue(introGB,  
                  String.Format("Command: {0}", introString)));  
  }           
  
  GrammarBuilder cmdIntro = new GrammarBuilder(introChoices);  
  
  // Define the arguments for the command to select foreground or background   
  // and to change their color as semantic values.  
  Choices fgOrbgChoice = new Choices();  
  GrammarBuilder backgroundGB=new GrammarBuilder("background");  
  backgroundGB.Append(new SemanticResultValue(true));  
  fgOrbgChoice.Add(backgroundGB);  
  fgOrbgChoice.Add((GrammarBuilder)new SemanticResultValue("foreground", false));  
  SemanticResultKey fgOrbgChoiceKey = new SemanticResultKey("BgOrFgBool", fgOrbgChoice);  
  Choices colorChoice = new Choices();  
  foreach (string colorName in System.Enum.GetNames(typeof(KnownColor)))   
  {  
  
    // Use implicit conversion of SemanticResultValue to GrammarBuilder.      
    colorChoice.Add(  
                 (GrammarBuilder) (new SemanticResultValue(colorName, (Color.FromName(colorName)).Name)));  
  }  
  
  // Create a GrammarBuilder for CmdArgs to be appended to CmdIntro using  
  // semantic keys.  
  GrammarBuilder cmdArgs = new GrammarBuilder();  
  cmdArgs.Append(new SemanticResultKey("BgOrFgBool", fgOrbgChoice));  
  cmdArgs.AppendWildcard();  
  cmdArgs.Append(new SemanticResultKey("colorStringList", colorChoice));  
  
  GrammarBuilder cmds =   
      GrammarBuilder.Add(  
        cmdIntro,   
        new GrammarBuilder(new SemanticResultKey("Cmd Args", cmdArgs)));  
  grammar = new Grammar(cmds);  
  grammar.Name = "Tree [Set,change,alter] [foreground,background] * color";  
  return grammar;  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SemanticResultValue (System.Speech.Recognition.GrammarBuilder builder, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Speech.Recognition.GrammarBuilder builder, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.SemanticResultValue.#ctor(System.Speech.Recognition.GrammarBuilder,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (builder As GrammarBuilder, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SemanticResultValue(System::Speech::Recognition::GrammarBuilder ^ builder, System::Object ^ value);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="builder" Type="System.Speech.Recognition.GrammarBuilder" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="builder">
          <span data-ttu-id="50e99-146">Składnik gramatyki ma być używany podczas rozpoznawania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="50e99-146">A grammar component to be used in recognition.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="50e99-147">Wartość zarządza <see cref="T:System.Speech.Recognition.SemanticResultValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="50e99-147">The value managed by <see cref="T:System.Speech.Recognition.SemanticResultValue" />.</span>
          </span>
          <span data-ttu-id="50e99-148">Musi być typu <see langword="bool" />, <see langword="int" />, <see langword="float" />, lub <see langword="string" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="50e99-148">Must be of type <see langword="bool" />, <see langword="int" />, <see langword="float" />, or <see langword="string" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="50e99-149">Inicjuje nowe wystąpienie klasy <see cref="T:System.Speech.Recognition.SemanticResultValue" /> klasy i kojarzy wartość semantyki z <see cref="T:System.Speech.Recognition.GrammarBuilder" /> obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="50e99-149">Initializes a new instance of the <see cref="T:System.Speech.Recognition.SemanticResultValue" /> class and associates a semantic value with a <see cref="T:System.Speech.Recognition.GrammarBuilder" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="50e99-150">Jeśli określony element gramatyki przez <xref:System.Speech.Recognition.GrammarBuilder> jest używany w logice rozpoznawania `value` zostaną ustawione w semantykę rozpoznanym danych wyjściowych.</span><span class="sxs-lookup"><span data-stu-id="50e99-150">If the grammar element specified by <xref:System.Speech.Recognition.GrammarBuilder> is used in the recognition logic, `value` will be set in the semantics of the recognized output.</span></span>  
  
 <span data-ttu-id="50e99-151">W fragmencie kodu poniżej, jeśli logiki rozpoznawania skonstruowany przy <xref:System.Speech.Recognition.GrammarBuilder> wystąpienia (`myGb`) używa <xref:System.Speech.Recognition.Choices> obiektu (`myChoice`) do identyfikowania danych wejściowych, wartość `true` jest dodawany do rozpoznanym semantyki.</span><span class="sxs-lookup"><span data-stu-id="50e99-151">In the code fragment below, if the recognition logic constructed with the <xref:System.Speech.Recognition.GrammarBuilder> instance (`myGb`) uses the <xref:System.Speech.Recognition.Choices> object (`myChoice`) to identify input, the value `true` is added to the recognized semantics.</span></span>  
  
```csharp  
myGb.Append(new SemanticResultValue(myChoice, true);  
```  
  
 <span data-ttu-id="50e99-152">Jako <xref:System.Speech.Recognition.GrammarBuilder> obsługuje niejawna konwersja dla <xref:System.Speech.Recognition.Choices>, `SemanticResultValue`, i <xref:System.Speech.Recognition.SemanticResultKey>, ten konstruktor służy również do tych obiektów.</span><span class="sxs-lookup"><span data-stu-id="50e99-152">As <xref:System.Speech.Recognition.GrammarBuilder> supports implicit conversion for <xref:System.Speech.Recognition.Choices>,  `SemanticResultValue`, and <xref:System.Speech.Recognition.SemanticResultKey>, this constructor can use those objects as well.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="50e99-153">Poniższy przykład zwraca <xref:System.Speech.Recognition.Grammar> która rozpoznaje polecenie "Alter-Set/Zmień narzędzia/tła...</span><span class="sxs-lookup"><span data-stu-id="50e99-153">The following example returns a <xref:System.Speech.Recognition.Grammar> that recognizes the command "Set/Change/Alter Foreground/Background …</span></span> <span data-ttu-id="50e99-154">[lista kolor] ".</span><span class="sxs-lookup"><span data-stu-id="50e99-154">[color list]".</span></span> <span data-ttu-id="50e99-155"><xref:System.Speech.Recognition.SemanticResultValue> i <xref:System.Speech.Recognition.SemanticResultKey> wystąpień (łącznie z <xref:System.Speech.Recognition.Choices> i <xref:System.Speech.Recognition.GrammarBuilder> obiektów) są używane do definiowania semantyki, który może być analizowana na rozpoznawania.</span><span class="sxs-lookup"><span data-stu-id="50e99-155"><xref:System.Speech.Recognition.SemanticResultValue> and <xref:System.Speech.Recognition.SemanticResultKey> instances (in conjunction with <xref:System.Speech.Recognition.Choices> and <xref:System.Speech.Recognition.GrammarBuilder> objects) are used to define semantics that can be parsed on recognition.</span></span>  <span data-ttu-id="50e99-156">Przeanalizowana semantyki określi zażądano kolor i określa, czy na pierwszym planie lub w tle ma zostać zmodyfikowana.</span><span class="sxs-lookup"><span data-stu-id="50e99-156">The parsed semantics will determine which color was requested and whether the foreground or background is to be modified.</span></span>  
  
```csharp  
  
private Grammar FgBgColorGrammar()   
{  
  Grammar grammar = null;  
  
  // Allow the command to begin with set, alter, change.  
  Choices introChoices = new Choices();  
  foreach (string introString in new string[] { "Change", "Set", "Alter" })   
  {  
    GrammarBuilder introGB = new GrammarBuilder(introString);  
    introChoices.Add(  
                  new SemanticResultValue(introGB,  
                  String.Format("Command: {0}", introString)));  
  }           
  GrammarBuilder cmdIntro = new GrammarBuilder(introChoices);  
  
  // Define the arguments for the command to select foreground or background   
  // and to change their color as semantic values.  
  Choices fgOrbgChoice = new Choices();  
  GrammarBuilder backgroundGB=new GrammarBuilder("background");  
  backgroundGB.Append(new SemanticResultValue(true));  
  fgOrbgChoice.Add(backgroundGB);  
  fgOrbgChoice.Add((GrammarBuilder)new SemanticResultValue("foreground", false));  
  SemanticResultKey fgOrbgChoiceKey = new SemanticResultKey("BgOrFgBool", fgOrbgChoice);  
  Choices colorChoice = new Choices();  
  foreach (string colorName in System.Enum.GetNames(typeof(KnownColor)))   
  {  
  
    // Use implicit conversion of SemanticResultValue to GrammarBuilder.      
    colorChoice.Add(  
              (GrammarBuilder) (new SemanticResultValue(colorName, (Color.FromName(colorName)).Name)));  
    }  
  
  // Create a GrammarBuilder for CmdArgs to be appended to CmdIntro using  
  // semantic keys.  
  GrammarBuilder cmdArgs = new GrammarBuilder();  
  cmdArgs.Append(new SemanticResultKey("BgOrFgBool", fgOrbgChoice));  
  cmdArgs.AppendWildcard();  
  cmdArgs.Append(new SemanticResultKey("colorStringList", colorChoice));  
  
  GrammarBuilder cmds =   
      GrammarBuilder.Add(  
                      cmdIntro,  
                      new GrammarBuilder(new SemanticResultKey("Cmd Args", cmdArgs)));  
  grammar = new Grammar(cmds);  
  grammar.Name = "Tree [Set,change,alter] [foreground,background] * color";  
  return grammar;  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SemanticResultValue (string phrase, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string phrase, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.SemanticResultValue.#ctor(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (phrase As String, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SemanticResultValue(System::String ^ phrase, System::Object ^ value);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="phrase" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="phrase">
          <span data-ttu-id="50e99-157">Wyrażenie ma być używany podczas rozpoznawania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="50e99-157">A phrase to be used in recognition.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="50e99-158">Wartość zarządza <see cref="T:System.Speech.Recognition.SemanticResultValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="50e99-158">The value managed by <see cref="T:System.Speech.Recognition.SemanticResultValue" />.</span>
          </span>
          <span data-ttu-id="50e99-159">Musi być typu <see langword="bool" />, <see langword="int" />, <see langword="float" />, lub <see langword="string" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="50e99-159">Must be of type <see langword="bool" />, <see langword="int" />, <see langword="float" />, or <see langword="string" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="50e99-160">Inicjuje nowe wystąpienie klasy <see cref="T:System.Speech.Recognition.SemanticResultValue" /> klasy i kojarzy wartość semantyki z <see cref="T:System.String" /> obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="50e99-160">Initializes a new instance of the <see cref="T:System.Speech.Recognition.SemanticResultValue" /> class and associates a semantic value with a <see cref="T:System.String" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="50e99-161">Jeśli ciąg określony przez `phrase` jest używany w logice rozpoznawania `value` zostaną ustawione w semantykę rozpoznanym danych wyjściowych.</span><span class="sxs-lookup"><span data-stu-id="50e99-161">If the string specified by `phrase` is used in the recognition logic, `value` will be set in the semantics of the recognized output.</span></span>  
  
 <span data-ttu-id="50e99-162">W poniższy fragment kodu, jeśli logiki rozpoznawania skonstruowany przy <xref:System.Speech.Recognition.GrammarBuilder> wystąpienia (`myGb`) ciąg "Moje hipoteczne" do identyfikowania danych wejściowych, wartość `true` zostanie dodany do rozpoznanym semantyki.</span><span class="sxs-lookup"><span data-stu-id="50e99-162">In the following code fragment, if the recognition logic constructed with the <xref:System.Speech.Recognition.GrammarBuilder> instance (`myGb`) uses the string "my mortgage" to identify input, the value `true` will be added to the recognized semantics.</span></span>  
  
```csharp  
myGb.Append(new SemanticResultValue("my mortgage", true);  
```  
  
   
  
## Examples  
 <span data-ttu-id="50e99-163">Poniższy przykład zwraca <xref:System.Speech.Recognition.Grammar> która rozpoznaje polecenie "Alter-Set/Zmień narzędzia/tła...</span><span class="sxs-lookup"><span data-stu-id="50e99-163">The following example returns a <xref:System.Speech.Recognition.Grammar> that recognizes the command "Set/Change/Alter Foreground/Background …</span></span> <span data-ttu-id="50e99-164">[lista kolor] ".</span><span class="sxs-lookup"><span data-stu-id="50e99-164">[color list]".</span></span> <span data-ttu-id="50e99-165"><xref:System.Speech.Recognition.SemanticResultValue> i <xref:System.Speech.Recognition.SemanticResultKey> wystąpień (łącznie z <xref:System.Speech.Recognition.Choices> i <xref:System.Speech.Recognition.GrammarBuilder> obiektów) są używane do definiowania semantyki, który może być analizowana na rozpoznawania.</span><span class="sxs-lookup"><span data-stu-id="50e99-165"><xref:System.Speech.Recognition.SemanticResultValue> and <xref:System.Speech.Recognition.SemanticResultKey> instances (in conjunction with <xref:System.Speech.Recognition.Choices> and <xref:System.Speech.Recognition.GrammarBuilder> objects) are used to define semantics that can be parsed on recognition.</span></span>  <span data-ttu-id="50e99-166">Przeanalizowana semantyki określi zażądano kolor i określa, czy na pierwszym planie lub w tle ma zostać zmodyfikowana.</span><span class="sxs-lookup"><span data-stu-id="50e99-166">The parsed semantics will determine which color was requested and whether the foreground or background is to be modified.</span></span>  
  
```  
private Grammar FgBgColorGrammar()   
{  
  Grammar grammar = null;  
  
  // Allow command to begin with set, alter, change.  
  Choices introChoices = new Choices();  
  foreach (string introString in new string[] { "Change", "Set", "Alter" })   
  {  
    GrammarBuilder introGB = new GrammarBuilder(introString);  
    introChoices.Add(  
                  new SemanticResultValue(introGB,  
                  String.Format("Command: {0}", introString)));  
  }  
  
  GrammarBuilder cmdIntro = new GrammarBuilder(introChoices);  
  
  // Define the arguments for the command to select foreground or background   
  // and to change their color as semantic values.  
  Choices fgOrbgChoice = new Choices();  
  GrammarBuilder backgroundGB=new GrammarBuilder("background");  
  backgroundGB.Append(new SemanticResultValue(true));  
  fgOrbgChoice.Add(backgroundGB);  
  fgOrbgChoice.Add((GrammarBuilder)new SemanticResultValue("foreground", false));  
  SemanticResultKey fgOrbgChoiceKey = new SemanticResultKey("BgOrFgBool", fgOrbgChoice);  
  Choices colorChoice = new Choices();  
  foreach (string colorName in System.Enum.GetNames(typeof(KnownColor)))   
  {  
  
    // Use implicit conversion of SemanticResultValue to GrammarBuilder.      
    colorChoice.Add(  
          (GrammarBuilder) (new SemanticResultValue(colorName, (Color.FromName(colorName)).Name)));  
  }  
  
  // Create a GrammarBuilder for CmdArgs to be appended to CmdIntro using  
  // semantic keys.  
  GrammarBuilder cmdArgs = new GrammarBuilder();  
  cmdArgs.Append(new SemanticResultKey("BgOrFgBool", fgOrbgChoice));  
  cmdArgs.AppendWildcard();  
  cmdArgs.Append(new SemanticResultKey("colorStringList", colorChoice));  
  
  GrammarBuilder cmds =   
      GrammarBuilder.Add(cmdIntro,  
                         new GrammarBuilder(new SemanticResultKey("Cmd Args", cmdArgs)));  
  grammar = new Grammar(cmds);  
  grammar.Name = "Tree [Set,change,alter] [foreground,background] * color";  
  return grammar;  
}  
  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToGrammarBuilder">
      <MemberSignature Language="C#" Value="public System.Speech.Recognition.GrammarBuilder ToGrammarBuilder ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Speech.Recognition.GrammarBuilder ToGrammarBuilder() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.SemanticResultValue.ToGrammarBuilder" />
      <MemberSignature Language="VB.NET" Value="Public Function ToGrammarBuilder () As GrammarBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Speech::Recognition::GrammarBuilder ^ ToGrammarBuilder();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Speech.Recognition.GrammarBuilder</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="50e99-167">Zwraca wystąpienie klasy <see cref="T:System.Speech.Recognition.GrammarBuilder" /> utworzone na podstawie bieżącego <see cref="T:System.Speech.Recognition.SemanticResultValue" /> wystąpienia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="50e99-167">Returns an instance of <see cref="T:System.Speech.Recognition.GrammarBuilder" /> constructed from the current <see cref="T:System.Speech.Recognition.SemanticResultValue" /> instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="50e99-168">Zwraca wystąpienie klasy <see cref="T:System.Speech.Recognition.GrammarBuilder" /> utworzone na podstawie bieżącego <see cref="T:System.Speech.Recognition.SemanticResultValue" /> wystąpienia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="50e99-168">Returns an instance of <see cref="T:System.Speech.Recognition.GrammarBuilder" /> constructed from the current <see cref="T:System.Speech.Recognition.SemanticResultValue" /> instance.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="50e99-169">Korzystanie z <xref:System.Speech.Recognition.SemanticResultValue.ToGrammarBuilder%2A> odpowiada za pomocą <xref:System.Speech.Recognition.GrammarBuilder> konstruktora przyjmującego <xref:System.Speech.Recognition.SemanticResultValue> jako argument (<xref:System.Speech.Recognition.GrammarBuilder.%23ctor%28System.Speech.Recognition.SemanticResultValue%29>).</span><span class="sxs-lookup"><span data-stu-id="50e99-169">The use of <xref:System.Speech.Recognition.SemanticResultValue.ToGrammarBuilder%2A> is equivalent to using the <xref:System.Speech.Recognition.GrammarBuilder> constructor that takes a <xref:System.Speech.Recognition.SemanticResultValue> as an argument (<xref:System.Speech.Recognition.GrammarBuilder.%23ctor%28System.Speech.Recognition.SemanticResultValue%29>).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="50e99-170">Poniższy przykład tworzy <xref:System.Speech.Recognition.Grammar> obiektów, które obsługują polecenia, aby zmienić kolor tła.</span><span class="sxs-lookup"><span data-stu-id="50e99-170">The following example creates <xref:System.Speech.Recognition.Grammar> objects that support commands to change the background color.</span></span>  
  
 <span data-ttu-id="50e99-171">A <xref:System.Speech.Recognition.Choices> obiektu (`colorChoice`) zawierający listę opcji kolorów tła jest wypełniana przy użyciu <xref:System.Speech.Recognition.Choices.Add%28System.Speech.Recognition.GrammarBuilder%5B%5D%29> metody z <xref:System.Speech.Recognition.GrammarBuilder> wystąpień uzyskanych z <xref:System.Speech.Recognition.SemanticResultKey.ToGrammarBuilder> metoda `SemanticResultValue` obiekty utworzone z ciągów kolorów.</span><span class="sxs-lookup"><span data-stu-id="50e99-171">A <xref:System.Speech.Recognition.Choices> object (`colorChoice`) containing the list of options for background colors is filled using the <xref:System.Speech.Recognition.Choices.Add%28System.Speech.Recognition.GrammarBuilder%5B%5D%29> method with <xref:System.Speech.Recognition.GrammarBuilder> instances that are obtained from the <xref:System.Speech.Recognition.SemanticResultKey.ToGrammarBuilder> method on the `SemanticResultValue` objects created from color strings.</span></span>  
  
 <span data-ttu-id="50e99-172">A <xref:System.Speech.Recognition.GrammarBuilder> następnie są uzyskiwane przez wywołanie metody <xref:System.Speech.Recognition.SemanticResultKey.ToGrammarBuilder> na <xref:System.Speech.Recognition.SemanticResultKey> wystąpienia, która będzie służyć do klucza semantycznego dostępnych wyborów w programie `colorChoice` wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="50e99-172">A <xref:System.Speech.Recognition.GrammarBuilder> is then obtained by calling <xref:System.Speech.Recognition.SemanticResultKey.ToGrammarBuilder> on a <xref:System.Speech.Recognition.SemanticResultKey> instance, which will be used to key the semantic choices in the `colorChoice` instance.</span></span>  
  
```csharp  
  
private Grammar CreateGrammarBuilderRGBSemantics()   
{  
  
  // Create a set of choices, each a lookup from a color name to RBG.  
  // Choices constructors do not take a SemanticResultValue parameter, so  
  // cast SemanticResultValue to GrammarBuilder.  
  Choices colorChoice = new Choices();  
  foreach (string colorName in System.Enum.GetNames(typeof(KnownColor)))   
  {  
  
    // Use implicit conversion of SemanticResultValue to GrammarBuilder.      
    SemanticResultValue colorValue =   
        new SemanticResultValue(colorName, Color.FromName(colorName).ToArgb());  
    colorChoice.Add(colorValue.ToGrammarBuilder());  
  }  
  
  SemanticResultKey choiceKey = new SemanticResultKey("rgb", colorChoice);  
  GrammarBuilder choiceBuilder = choiceKey.ToGrammarBuilder();  
  
  // Create two intermediate grammars with an introductory phrase and the  
  // color choice.  
  GrammarBuilder makeBackgroundBuilder = "Make background";  
  makeBackgroundBuilder.Append(choiceBuilder);  
  
  GrammarBuilder configureBackgroundBuilder = new GrammarBuilder("Configure background as");  
  configureBackgroundBuilder.Append((new SemanticResultKey("rgb", colorChoice)).ToGrammarBuilder());  
  
  // Create the final grammar, which recognizes either intermediate grammar.  
  Grammar grammar = new Grammar(new Choices(new GrammarBuilder[] { makeBackgroundBuilder, configureBackgroundBuilder }));  
  grammar.Name = "Set Background Color";  
  
  return grammar;  
}  
  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>