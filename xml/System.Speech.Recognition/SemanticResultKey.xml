<Type Name="SemanticResultKey" FullName="System.Speech.Recognition.SemanticResultKey">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="cfb6e3c20ee70cd7a40e0bcf953cbaa576342d34" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37610814" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class SemanticResultKey" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SemanticResultKey extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Speech.Recognition.SemanticResultKey" />
  <TypeSignature Language="VB.NET" Value="Public Class SemanticResultKey" />
  <TypeSignature Language="C++ CLI" Value="public ref class SemanticResultKey" />
  <TypeSignature Language="F#" Value="type SemanticResultKey = class" />
  <AssemblyInfo>
    <AssemblyName>System.Speech</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Diagnostics.DebuggerDisplay("{_semanticKey.DebugSummary}")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="ef74e-101">Kojarzy ciąg klucza przy użyciu <see cref="T:System.Speech.Recognition.SemanticResultValue" /> wartości, aby zdefiniować <see cref="T:System.Speech.Recognition.SemanticValue" /> obiektów.</span>
      <span class="sxs-lookup">
        <span data-stu-id="ef74e-101">Associates a key string with <see cref="T:System.Speech.Recognition.SemanticResultValue" /> values to define <see cref="T:System.Speech.Recognition.SemanticValue" /> objects.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ef74e-102">Jest podstawową jednostką semantyki wyrażeń w System.Speech <xref:System.Speech.Recognition.SemanticValue>, czyli pary klucz/wartość.</span><span class="sxs-lookup"><span data-stu-id="ef74e-102">The basic unit of semantic expression in System.Speech is the <xref:System.Speech.Recognition.SemanticValue>, which is a key/value pair.</span></span>  
  
 <span data-ttu-id="ef74e-103">Za pomocą <xref:System.Speech.Recognition.SemanticResultKey> obiektów, możesz oznaczyć <xref:System.Speech.Recognition.SemanticResultValue> wystąpień znajdujących się w <xref:System.Speech.Recognition.GrammarBuilder> obiektów i ciągi, tak aby wartości, można łatwo uzyskać dostęp z <xref:System.Speech.Recognition.SemanticValue> wystąpień na rozpoznawania.</span><span class="sxs-lookup"><span data-stu-id="ef74e-103">Using <xref:System.Speech.Recognition.SemanticResultKey> objects, you tag <xref:System.Speech.Recognition.SemanticResultValue> instances contained in <xref:System.Speech.Recognition.GrammarBuilder> objects and strings so that the values may readily be accessed from <xref:System.Speech.Recognition.SemanticValue> instances on recognition.</span></span>  
  
 <span data-ttu-id="ef74e-104">Możesz użyć <xref:System.Speech.Recognition.SemanticResultValue> i <xref:System.Speech.Recognition.SemanticResultKey> obiektów w połączeniu z <xref:System.Speech.Recognition.GrammarBuilder> i <xref:System.Speech.Recognition.Choices> obiektów, aby zdefiniować semantyczny struktury gramatyki rozpoznawania mowy.</span><span class="sxs-lookup"><span data-stu-id="ef74e-104">You can use <xref:System.Speech.Recognition.SemanticResultValue> and <xref:System.Speech.Recognition.SemanticResultKey> objects, in conjunction with <xref:System.Speech.Recognition.GrammarBuilder> and <xref:System.Speech.Recognition.Choices> objects, to define the semantic structure for a speech recognition grammar.</span></span> <span data-ttu-id="ef74e-105">Aby uzyskać dostęp do informacji semantycznych w wyniku rozpoznawania, Uzyskaj wystąpienia <xref:System.Speech.Recognition.SemanticValue> za pośrednictwem <xref:System.Speech.Recognition.RecognizedPhrase.Semantics%2A> właściwość <xref:System.Speech.Recognition.RecognizedPhrase>.</span><span class="sxs-lookup"><span data-stu-id="ef74e-105">To access the semantic information in a recognition result, obtain an instance of <xref:System.Speech.Recognition.SemanticValue> through the <xref:System.Speech.Recognition.RecognizedPhrase.Semantics%2A> property on <xref:System.Speech.Recognition.RecognizedPhrase>.</span></span>  
  
 <span data-ttu-id="ef74e-106">Aby uzyskać więcej informacji o korzystaniu z <xref:System.Speech.Recognition.SemanticResultValue> i <xref:System.Speech.Recognition.SemanticResultKey> obiekty, zobacz [SemanticResultValue zrozumienie i obiekty SemanticResultKey](http://msdn.microsoft.com/library/0fea1236-5261-4608-89b3-9ce9ffc22a1c) i [przy użyciu SemanticResultKey do wyodrębniania SemanticResultValue](http://msdn.microsoft.com/library/198e29b8-845f-4cec-a25e-f55c0eaf46aa) w [przewodnik programowania w mowy systemu .NET Framework 4.0](http://msdn.microsoft.com/library/610116c7-3817-40ff-857b-5d41e8511043).</span><span class="sxs-lookup"><span data-stu-id="ef74e-106">For more information about using <xref:System.Speech.Recognition.SemanticResultValue> and <xref:System.Speech.Recognition.SemanticResultKey> objects, see [Understanding SemanticResultValue and SemanticResultKey Objects](http://msdn.microsoft.com/library/0fea1236-5261-4608-89b3-9ce9ffc22a1c) and [Using a SemanticResultKey to Extract a SemanticResultValue](http://msdn.microsoft.com/library/198e29b8-845f-4cec-a25e-f55c0eaf46aa) in the [System Speech Programming Guide for .NET Framework 4.0](http://msdn.microsoft.com/library/610116c7-3817-40ff-857b-5d41e8511043).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ef74e-107">Poniższy przykład tworzy <xref:System.Speech.Recognition.Grammar> rozpoznawanie wprowadzenie hasła w postaci "moje hasło to...", gdzie dopasowaniu rzeczywistych danych wejściowych z symbolem wieloznacznym.</span><span class="sxs-lookup"><span data-stu-id="ef74e-107">The following example creates a <xref:System.Speech.Recognition.Grammar> to recognize password input of the form "My password is …", where the actual input is matched with a wildcard.</span></span>  
  
 <span data-ttu-id="ef74e-108">Symbol wieloznaczny zostanie oznaczony za pomocą semantyki klucza i <xref:System.Speech.Recognition.Grammar.SpeechRecognized> obsługi sprawdza obecność tego tagu, aby zweryfikować, że wystąpiło wprowadzania hasła.</span><span class="sxs-lookup"><span data-stu-id="ef74e-108">The wildcard is tagged with a semantic key, and the <xref:System.Speech.Recognition.Grammar.SpeechRecognized> handler checks for the presence of this tag to verify that a password input has occurred.</span></span>  
  
```csharp  
private void pwdGrammar()   
{  
  GrammarBuilder pwdBuilder = new GrammarBuilder("My Password is");  
  GrammarBuilder wildcardBuilder = new GrammarBuilder();  
  wildcardBuilder.AppendWildcard();  
  SemanticResultKey wildcardKey= new SemanticResultKey("Password", wildcardBuilder);  
  pwdBuilder+=wildcardKey;  
  Grammar grammar = new Grammar(pwdBuilder);  
  grammar.Name = "Password input";  
  
  grammar.SpeechRecognized += delegate(object sender, SpeechRecognizedEventArgs eventArgs)   
  {  
    SemanticValue semantics = eventArgs.Result.Semantics;  
    RecognitionResult result=eventArgs.Result;  
  
    if (!semantics.ContainsKey("Password"))   
    {  
      SpeechUI.SendTextFeedback(eventArgs.Result, "No Password Provided", false);  
    }  
    else   
    {  
      RecognizedAudio pwdAudio = result.GetAudioForWordRange(result.Words[3], result.Words[result.Words.Count - 1]);  
      MemoryStream pwdMemoryStream = new MemoryStream();  
      pwdAudio.WriteToAudioStream(pwdMemoryStream);  
      if (!IsValidPwd(pwdMemoryStream))   
      {  
        string badPwd = System.IO.Path.GetTempPath() + "BadPwd" + (new Random()).Next().ToString() + ".wav";  
        FileStream waveStream = new FileStream(badPwd, FileMode.Create);  
        pwdAudio.WriteToWaveStream(waveStream);  
        waveStream.Flush();  
        waveStream.Close();  
        SpeechUI.SendTextFeedback(eventArgs.Result, "Invalid Password", false);  
  
      }  
    }  
  };  
  grammar.Enabled = true;  
  _recognizer.LoadGrammar(grammar);  
  UpdateGrammarTree(_grammarTreeView, _recognizer);  
  
}  
```  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Speech.Recognition.SemanticValue" />
    <altmember cref="T:System.Speech.Recognition.SemanticResultValue" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="ef74e-109">Tworzy wystąpienie klasy <see cref="T:System.Speech.Recognition.SemanticResultKey" /> i kojarzy klucz ze składnikami gramatyki.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef74e-109">Constructs an instance of <see cref="T:System.Speech.Recognition.SemanticResultKey" /> and associates the key with grammar components.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ef74e-110">Konstruktory dla <xref:System.Speech.Recognition.SemanticResultKey> określić tagu tekstu (klucz semantycznego) i zestaw składników gramatyki do dodania do gramatyki rozpoznawania mowy.</span><span class="sxs-lookup"><span data-stu-id="ef74e-110">The constructors for <xref:System.Speech.Recognition.SemanticResultKey> specify a text tag (the semantic key) and a set of grammar components to add to a speech recognition grammar.</span></span>  
  
 <span data-ttu-id="ef74e-111">Gramatyka składników może być określona jako tablicę <xref:System.Speech.Recognition.GrammarBuilder> obiektów, lub jako tablicę <xref:System.String> wystąpień.</span><span class="sxs-lookup"><span data-stu-id="ef74e-111">The grammar components can be specified either as an array of <xref:System.Speech.Recognition.GrammarBuilder> objects, or as an array of <xref:System.String> instances.</span></span>  
  
 <span data-ttu-id="ef74e-112">Składniki gramatyki są używane w rozpoznawania, można przejść do zwracanego <xref:System.Speech.Recognition.SemanticValue> przy użyciu znacznika tekstu do konstruktora <xref:System.Speech.Recognition.SemanticResultKey> jako klucz semantycznego.</span><span class="sxs-lookup"><span data-stu-id="ef74e-112">If the grammar components are used in recognition, you can access the returned <xref:System.Speech.Recognition.SemanticValue> using the text tag provided to the constructor of <xref:System.Speech.Recognition.SemanticResultKey> as a semantic key.</span></span> <span data-ttu-id="ef74e-113"><xref:System.Speech.Recognition.SemanticValue.Value%2A> Właściwość <xref:System.Speech.Recognition.SemanticValue> wystąpienie będzie określana przez składniki gramatyki, używane w definicji <xref:System.Speech.Recognition.SemanticResultKey>.</span><span class="sxs-lookup"><span data-stu-id="ef74e-113">The <xref:System.Speech.Recognition.SemanticValue.Value%2A> property of the <xref:System.Speech.Recognition.SemanticValue> instance will be determined by the grammar components used in the definition of <xref:System.Speech.Recognition.SemanticResultKey>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SemanticResultKey (string semanticResultKey, params System.Speech.Recognition.GrammarBuilder[] builders);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string semanticResultKey, class System.Speech.Recognition.GrammarBuilder[] builders) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.SemanticResultKey.#ctor(System.String,System.Speech.Recognition.GrammarBuilder[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (semanticResultKey As String, ParamArray builders As GrammarBuilder())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SemanticResultKey(System::String ^ semanticResultKey, ... cli::array &lt;System::Speech::Recognition::GrammarBuilder ^&gt; ^ builders);" />
      <MemberSignature Language="F#" Value="new System.Speech.Recognition.SemanticResultKey : string * System.Speech.Recognition.GrammarBuilder[] -&gt; System.Speech.Recognition.SemanticResultKey" Usage="new System.Speech.Recognition.SemanticResultKey (semanticResultKey, builders)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="semanticResultKey" Type="System.String" />
        <Parameter Name="builders" Type="System.Speech.Recognition.GrammarBuilder[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="semanticResultKey">
          <span data-ttu-id="ef74e-114">Tag, który ma być używany jako semantycznego klucz dostępu do <see cref="T:System.Speech.Recognition.SemanticValue" /> wystąpienia skojarzonego z <see cref="T:System.Speech.Recognition.GrammarBuilder" /> obiekty określone przez <c>Konstruktorzy</c> argumentu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef74e-114">The tag to be used as a semantic key to access the <see cref="T:System.Speech.Recognition.SemanticValue" /> instance associated with the <see cref="T:System.Speech.Recognition.GrammarBuilder" /> objects specified by the <c>builders</c> argument.</span>
          </span>
        </param>
        <param name="builders">
          <span data-ttu-id="ef74e-115">Tablica gramatyki składniki, które zostaną skojarzone z <see cref="T:System.Speech.Recognition.SemanticValue" /> obiektu dostępne przy użyciu tagu zdefiniowane w <c>semanticResultKey</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef74e-115">An array of grammar components that will be associated with a <see cref="T:System.Speech.Recognition.SemanticValue" /> object accessible with the tag defined in <c>semanticResultKey</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ef74e-116">Przypisuje semantycznego klucza do jednej lub kilku <see cref="T:System.Speech.Recognition.GrammarBuilder" /> obiekty używane do tworzenia gramatyki rozpoznawania mowy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef74e-116">Assigns a semantic key to one or more <see cref="T:System.Speech.Recognition.GrammarBuilder" /> objects used to create a speech recognition grammar.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ef74e-117">Ze względu na niejawne konwersje `builders` obsługuje argument <xref:System.Speech.Recognition.SemanticResultValue>, <xref:System.Speech.Recognition.SemanticResultKey>, <xref:System.Speech.Recognition.Choices>, i <xref:System.String> także obiekty.</span><span class="sxs-lookup"><span data-stu-id="ef74e-117">Because of implicit conversions, the `builders` argument supports <xref:System.Speech.Recognition.SemanticResultValue>, <xref:System.Speech.Recognition.SemanticResultKey>, <xref:System.Speech.Recognition.Choices>, and <xref:System.String> objects as well.</span></span> <span data-ttu-id="ef74e-118">Aby uzyskać więcej informacji dotyczących niejawnych konwersji, zobacz <xref:System.Speech.Recognition.GrammarBuilder.op_Implicit%2A>.</span><span class="sxs-lookup"><span data-stu-id="ef74e-118">For more information on implicit conversions, see <xref:System.Speech.Recognition.GrammarBuilder.op_Implicit%2A>.</span></span>  
  
 <span data-ttu-id="ef74e-119">Podczas wykonywania operacji rozpoznawania <xref:System.Speech.Recognition.GrammarBuilder> obiekty dostarczane w `builders` argument są traktowane jako sekwencyjny.</span><span class="sxs-lookup"><span data-stu-id="ef74e-119">When performing a recognition operation, the <xref:System.Speech.Recognition.GrammarBuilder> objects provided in the `builders` argument are treated as sequential.</span></span> <span data-ttu-id="ef74e-120">Na przykład jeśli następujące <xref:System.Speech.Recognition.SemanticResultValue> służy do konstruowania <xref:System.Speech.Recognition.Grammar>, dane wejściowe do aparatu rozpoznawania musi zawierać słowa "szybki lis brown" w sekwencji ma być rozpoznawane.</span><span class="sxs-lookup"><span data-stu-id="ef74e-120">For example, if the following <xref:System.Speech.Recognition.SemanticResultValue> is used to construct a <xref:System.Speech.Recognition.Grammar>, input to the recognition engine must contain the words "the quick brown fox" in sequence to be recognized.</span></span>  
  
```csharp  
SemanticResultKey stringTest=new SemanticResultKey(  
    "stringTest", new GrammarBuilder[] {  
    new GrammarBuilder("the"),  
    new GrammarBuilder("quick"),  
    new GrammarBuilder("brown"),  
    new GrammarBuilder("fox")});  
```  
  
 <span data-ttu-id="ef74e-121">`semanticResultKey` Argument zawiera znacznik korzenia dostęp do <xref:System.Speech.Recognition.SemanticValue> które mogą być zwrócone.</span><span class="sxs-lookup"><span data-stu-id="ef74e-121">The `semanticResultKey` argument contains the tag used to access the <xref:System.Speech.Recognition.SemanticValue> which might be returned.</span></span>  
  
 <span data-ttu-id="ef74e-122"><xref:System.Speech.Recognition.SemanticValue.Value%2A> z <xref:System.Speech.Recognition.SemanticValue> jest określana przez <xref:System.Speech.Recognition.GrammarBuilder> wystąpienia zapewniane przez `builders` parametru.</span><span class="sxs-lookup"><span data-stu-id="ef74e-122">The <xref:System.Speech.Recognition.SemanticValue.Value%2A> of the <xref:System.Speech.Recognition.SemanticValue> is determined by the <xref:System.Speech.Recognition.GrammarBuilder> instances provided by the `builders` parameter.</span></span>  
  
 <span data-ttu-id="ef74e-123">Jeśli <xref:System.Speech.Recognition.GrammarBuilder> obiekty zawierają nie definiowania wystąpień <xref:System.Speech.Recognition.SemanticResultValue>, wartość <xref:System.Speech.Recognition.SemanticValue> jest `null`.</span><span class="sxs-lookup"><span data-stu-id="ef74e-123">If the <xref:System.Speech.Recognition.GrammarBuilder> objects contain no defining instances of <xref:System.Speech.Recognition.SemanticResultValue>, the value of the <xref:System.Speech.Recognition.SemanticValue> is `null`.</span></span>  
  
 <span data-ttu-id="ef74e-124">Jeśli <xref:System.Speech.Recognition.GrammarBuilder> obiekty dostarczane w `builders` nieoznakowany Podaj parametr (nie jest skojarzona z <xref:System.Speech.Recognition.SemanticResultKey> obiektu) <xref:System.Speech.Recognition.SemanticResultValue> wystąpienie, które jest używane przez logiki rozpoznawania danego wystąpienia <xref:System.Speech.Recognition.SemanticResultValue> określi <xref:System.Speech.Recognition.SemanticValue.Value%2A>właściwość <xref:System.Speech.Recognition.SemanticValue> , jest generowany.</span><span class="sxs-lookup"><span data-stu-id="ef74e-124">If the <xref:System.Speech.Recognition.GrammarBuilder> objects provided in the `builders` parameter provide an untagged (not associated with a <xref:System.Speech.Recognition.SemanticResultKey> object) <xref:System.Speech.Recognition.SemanticResultValue> instance that is used by the recognition logic, that instance of <xref:System.Speech.Recognition.SemanticResultValue> will define the <xref:System.Speech.Recognition.SemanticValue.Value%2A> property of the <xref:System.Speech.Recognition.SemanticValue> that is produced.</span></span>  
  
 <span data-ttu-id="ef74e-125">Powinien istnieć tylko jeden i tylko jeden nieoznakowany <xref:System.Speech.Recognition.SemanticResultValue> wystąpienia w <xref:System.Speech.Recognition.GrammarBuilder> obiekty określone przez `builders` parametru.</span><span class="sxs-lookup"><span data-stu-id="ef74e-125">There should be one, and only one, untagged <xref:System.Speech.Recognition.SemanticResultValue> instance in the <xref:System.Speech.Recognition.GrammarBuilder> objects specified by the `builders` parameter.</span></span> <span data-ttu-id="ef74e-126">Jeśli wiele wystąpień nieoznakowany <xref:System.Speech.Recognition.SemanticResultValue> są skojarzone z <xref:System.Speech.Recognition.SemanticResultKey>, każdy podejmie próbę zestaw wartości <xref:System.Speech.Recognition.SemanticValue> utworzone w wyniku rozpoznawania.</span><span class="sxs-lookup"><span data-stu-id="ef74e-126">If multiple instances of untagged <xref:System.Speech.Recognition.SemanticResultValue> are associated with the <xref:System.Speech.Recognition.SemanticResultKey>, each will attempt to the set the value of the <xref:System.Speech.Recognition.SemanticValue> produced in the recognition result.</span></span> <span data-ttu-id="ef74e-127">Jest to niedozwolone, a aparat rozpoznawania wygeneruje wyjątek, gdy próbuje ona użyć <xref:System.Speech.Recognition.Grammar> utworzone za pomocą takich <xref:System.Speech.Recognition.SemanticResultKey> wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="ef74e-127">This is not permitted, and the recognizer will generate an exception when it attempts to use a <xref:System.Speech.Recognition.Grammar> created using such a <xref:System.Speech.Recognition.SemanticResultKey> instance.</span></span>  
  
 <span data-ttu-id="ef74e-128">Wystąpienia elementu <xref:System.Speech.Recognition.SemanticResultValue> zawarte w <xref:System.Speech.Recognition.GrammarBuilder> obiekty określone przez `builders` parametru i już skojarzony z innym <xref:System.Speech.Recognition.SemanticResultKey> nie mają wpływu na bieżące <xref:System.Speech.Recognition.SemanticResultKey> wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="ef74e-128">Instances of <xref:System.Speech.Recognition.SemanticResultValue> contained in the <xref:System.Speech.Recognition.GrammarBuilder> objects specified by the `builders` parameter and already associated with another <xref:System.Speech.Recognition.SemanticResultKey> have no effect on the current <xref:System.Speech.Recognition.SemanticResultKey> instance.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ef74e-129">Poniższy przykład tworzy <xref:System.Speech.Recognition.Grammar> rozpoznawanie wprowadzenie hasła w postaci "moje hasło to...", gdzie dopasowaniu rzeczywistych danych wejściowych z symbolem wieloznacznym.</span><span class="sxs-lookup"><span data-stu-id="ef74e-129">The following example creates a <xref:System.Speech.Recognition.Grammar> to recognize password input of the form "My password is …", where the actual input is matched with a wildcard.</span></span>  
  
 <span data-ttu-id="ef74e-130">Symbol wieloznaczny jest oznaczone przez <xref:System.Speech.Recognition.SpeechRecognizer> którego wartość klucza jest "Password".</span><span class="sxs-lookup"><span data-stu-id="ef74e-130">The wildcard is tagged by a <xref:System.Speech.Recognition.SpeechRecognizer> whose key value is "Password".</span></span> <span data-ttu-id="ef74e-131"><xref:System.Speech.Recognition.Grammar.SpeechRecognized> Obsługi sprawdza obecność tego tagu uzyskuje wejścia audio, hasła i weryfikuje hasło.</span><span class="sxs-lookup"><span data-stu-id="ef74e-131">The <xref:System.Speech.Recognition.Grammar.SpeechRecognized> handler checks for the presence of this tag, obtains the audio input of the password, and verifies the password.</span></span>  
  
```csharp  
private void pwdGrammar()   
{  
  GrammarBuilder pwdBuilder = new GrammarBuilder("My Password is");  
  GrammarBuilder wildcardBuilder = new GrammarBuilder();  
  wildcardBuilder.AppendWildcard();  
  SemanticResultKey wildcardKey= new SemanticResultKey("Password", wildcardBuilder);  
  pwdBuilder+=wildcardKey;  
  Grammar grammar = new Grammar(pwdBuilder);  
  grammar.Name = "Password input";  
  
  grammar.SpeechRecognized +=   
    delegate(object sender, SpeechRecognizedEventArgs eventArgs)   
    {  
      SemanticValue semantics = eventArgs.Result.Semantics;  
      RecognitionResult result=eventArgs.Result;  
  
      if (!semantics.ContainsKey("Password"))   
      {  
        SpeechUI.SendTextFeedback(eventArgs.Result, "No Password Provided", false);  
      }  
      else   
      {  
        RecognizedAudio pwdAudio = result.GetAudioForWordRange(  
                  result.Words[3],  
                  result.Words[result.Words.Count - 1]);  
                  MemoryStream pwdMemoryStream = new MemoryStream();  
                  pwdAudio.WriteToAudioStream(pwdMemoryStream);  
        if (!IsValidPwd(pwdMemoryStream))   
        {  
          string badPwd = System.IO.Path.GetTempPath() + "BadPwd" + (new Random()).Next().ToString() + ".wav";  
          FileStream waveStream = new FileStream(badPwd, FileMode.Create);    
          pwdAudio.WriteToWaveStream(waveStream);  
          waveStream.Flush();  
          waveStream.Close();  
          SpeechUI.SendTextFeedback(eventArgs.Result, "Invalid Password", false);      
        }  
      }  
    };  
  
  grammar.Enabled = true;  
  _recognizer.LoadGrammar(grammar);  
  UpdateGrammarTree(_grammarTreeView, _recognizer);  
  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SemanticResultKey (string semanticResultKey, params string[] phrases);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string semanticResultKey, string[] phrases) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.SemanticResultKey.#ctor(System.String,System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (semanticResultKey As String, ParamArray phrases As String())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SemanticResultKey(System::String ^ semanticResultKey, ... cli::array &lt;System::String ^&gt; ^ phrases);" />
      <MemberSignature Language="F#" Value="new System.Speech.Recognition.SemanticResultKey : string * string[] -&gt; System.Speech.Recognition.SemanticResultKey" Usage="new System.Speech.Recognition.SemanticResultKey (semanticResultKey, phrases)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="semanticResultKey" Type="System.String" />
        <Parameter Name="phrases" Type="System.String[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="semanticResultKey">
          <span data-ttu-id="ef74e-132">Tag, aby można używać dostępu <see cref="T:System.Speech.Recognition.SemanticValue" /> wystąpienia skojarzonego z <see cref="T:System.String" /> obiekty określone przez <c>fraz</c> argumentu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef74e-132">The tag to be used access the <see cref="T:System.Speech.Recognition.SemanticValue" /> instance associated with the <see cref="T:System.String" /> objects specified by the <c>phrases</c> argument.</span>
          </span>
        </param>
        <param name="phrases">
          <span data-ttu-id="ef74e-133">Co najmniej jeden <see cref="T:System.String" /> obiektów, których tekstowe połączonych zostaną skojarzone z <see cref="T:System.Speech.Recognition.SemanticValue" /> obiektu dostępne przy użyciu tagu zdefiniowane w <c>semanticResultKey</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef74e-133">One or more <see cref="T:System.String" /> objects, whose concatenated text will be associated with a <see cref="T:System.Speech.Recognition.SemanticValue" /> object accessible with the tag defined in <c>semanticResultKey</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ef74e-134">Przypisuje semantycznego klucza do jednej lub kilku <see cref="T:System.String" /> wystąpień użyty do utworzenia gramatyki rozpoznawania mowy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef74e-134">Assigns a semantic key to one or more <see cref="T:System.String" /> instances used to create a speech recognition grammar.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ef74e-135">Podczas wykonywania operacji rozpoznawania <xref:System.String> obiektów używanych w `phrases` parametru są traktowane jako sekwencyjny.</span><span class="sxs-lookup"><span data-stu-id="ef74e-135">When performing a recognition operation, the <xref:System.String> objects used in the `phrases` parameter are treated as sequential.</span></span> <span data-ttu-id="ef74e-136">Na przykład jeśli następujące <xref:System.Speech.Recognition.SemanticResultValue> służy do konstruowania <xref:System.Speech.Recognition.Grammar>, dane wejściowe do aparatu rozpoznawania musi zawierać słowa "szybki lis brown" w sekwencji ma być rozpoznawane.</span><span class="sxs-lookup"><span data-stu-id="ef74e-136">For example, if the following <xref:System.Speech.Recognition.SemanticResultValue> is used to construct a <xref:System.Speech.Recognition.Grammar>, input to the recognition engine must contain the words "the quick brown fox" in sequence to be recognized.</span></span>  
  
```csharp  
SemanticResultKey stringTest=new SemanticResultKey("stringTest",   
                                new string[] {  
                                               "the",  
                                               "quick",  
                                               "brown",  
                                               "fox"});  
```  
  
 <span data-ttu-id="ef74e-137">`semanticResultKey` Argument określa klucz używany do dostępu <xref:System.Speech.Recognition.SemanticValue> które mogą być zwrócone.</span><span class="sxs-lookup"><span data-stu-id="ef74e-137">The `semanticResultKey` argument determines the key used to access the <xref:System.Speech.Recognition.SemanticValue> which might be returned.</span></span>  
  
 <span data-ttu-id="ef74e-138">Można utworzyć <xref:System.Speech.Recognition.Grammar> przy użyciu <xref:System.Speech.Recognition.GrammarBuilder> obiekt, który zawiera semantyczną klucz tablicę obiektów string, <xref:System.Speech.Recognition.SemanticValue.Value%2A> z <xref:System.Speech.Recognition.SemanticValue> tworzony przez operację rozpoznawania będzie ciąg używany w rozpoznawania.</span><span class="sxs-lookup"><span data-stu-id="ef74e-138">If you construct a <xref:System.Speech.Recognition.Grammar> using a <xref:System.Speech.Recognition.GrammarBuilder> object that contains a semantic key with an array of string objects,  the <xref:System.Speech.Recognition.SemanticValue.Value%2A> of the <xref:System.Speech.Recognition.SemanticValue> produced by a recognition operation  will be the string used in recognition.</span></span> <span data-ttu-id="ef74e-139">W poprzednim przykładzie, oznacza to, że <xref:System.Speech.Recognition.SemanticValue.Value%2A> będzie "szybki rudy lis".</span><span class="sxs-lookup"><span data-stu-id="ef74e-139">In the preceding example, this means that <xref:System.Speech.Recognition.SemanticValue.Value%2A> would be "the quick brown fox".</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ef74e-140">Poniższy przykład tworzy <xref:System.Speech.Recognition.Grammar> z <xref:System.Speech.Recognition.GrammarBuilder> obiektu, który używa <xref:System.Speech.Recognition.SemanticResultKey>, który jest zdefiniowany przez tablicę <xref:System.String> obiektów.</span><span class="sxs-lookup"><span data-stu-id="ef74e-140">The following example creates a <xref:System.Speech.Recognition.Grammar> from a <xref:System.Speech.Recognition.GrammarBuilder> object that uses a <xref:System.Speech.Recognition.SemanticResultKey>, which is defined by an array of <xref:System.String> objects.</span></span>  
  
 <span data-ttu-id="ef74e-141">Aparat rozpoznawania przy użyciu <xref:System.Speech.Recognition.Grammar> utworzona zostanie rozpoznaje frazę "color: red zielony niebieski zero".</span><span class="sxs-lookup"><span data-stu-id="ef74e-141">A recognition engine using the <xref:System.Speech.Recognition.Grammar> created will recognize the phrase "color red green blue zero".</span></span> <span data-ttu-id="ef74e-142">Semantyka <xref:System.Speech.Recognition.RecognizedPhrase> zwrócony przez rozpoznawanie będzie zawierać <xref:System.Speech.Recognition.SemanticValue> z <xref:System.Speech.Recognition.SemanticValue.Value%2A> z "red zielony niebieski".</span><span class="sxs-lookup"><span data-stu-id="ef74e-142">The semantics of the <xref:System.Speech.Recognition.RecognizedPhrase> returned by recognition will contain a <xref:System.Speech.Recognition.SemanticValue> with a <xref:System.Speech.Recognition.SemanticValue.Value%2A> of "red green blue".</span></span> <span data-ttu-id="ef74e-143">Możesz uzyskać dostęp <xref:System.Speech.Recognition.SemanticValue> za pomocą znacznika "code".</span><span class="sxs-lookup"><span data-stu-id="ef74e-143">You can access the <xref:System.Speech.Recognition.SemanticValue> using the "code" tag.</span></span>  
  
 <span data-ttu-id="ef74e-144">Z powodu `SemanticResultValue("zero", 5)` dołączany do <xref:System.Speech.Recognition.GrammarBuilder>, głównym <xref:System.Speech.Recognition.SemanticValue> obiektu <xref:System.Speech.Recognition.RecognizedPhrase> będzie miała wartość 5.</span><span class="sxs-lookup"><span data-stu-id="ef74e-144">Because of the `SemanticResultValue("zero", 5)` appended to the <xref:System.Speech.Recognition.GrammarBuilder>, the root <xref:System.Speech.Recognition.SemanticValue> object in the <xref:System.Speech.Recognition.RecognizedPhrase> will have a value of 5.</span></span>  
  
```csharp  
private void keyTest()   
{  
  // Say "color red green blue zero"  
  GrammarBuilder gb = new GrammarBuilder("color") +  
                        new SemanticResultKey("code",   
                          (new string[] {"red", "green", "blue"})) +  
                        new SemanticResultValue("zero", 5);  
  Grammar g = new Grammar(gb);  
  g.Name = "keyTest";  
  _recognizer.LoadGrammar(g);  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToGrammarBuilder">
      <MemberSignature Language="C#" Value="public System.Speech.Recognition.GrammarBuilder ToGrammarBuilder ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Speech.Recognition.GrammarBuilder ToGrammarBuilder() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.SemanticResultKey.ToGrammarBuilder" />
      <MemberSignature Language="VB.NET" Value="Public Function ToGrammarBuilder () As GrammarBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Speech::Recognition::GrammarBuilder ^ ToGrammarBuilder();" />
      <MemberSignature Language="F#" Value="member this.ToGrammarBuilder : unit -&gt; System.Speech.Recognition.GrammarBuilder" Usage="semanticResultKey.ToGrammarBuilder " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Speech.Recognition.GrammarBuilder</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="ef74e-145">Zwraca wystąpienie <see cref="T:System.Speech.Recognition.GrammarBuilder" /> skonstruowany na podstawie bieżącego <see cref="T:System.Speech.Recognition.SemanticResultKey" /> wystąpienia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef74e-145">Returns an instance of <see cref="T:System.Speech.Recognition.GrammarBuilder" /> constructed from the current <see cref="T:System.Speech.Recognition.SemanticResultKey" /> instance.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ef74e-146">Korzystanie z <xref:System.Speech.Recognition.SemanticResultValue.ToGrammarBuilder%2A> jest równoważne użyciu <xref:System.Speech.Recognition.GrammarBuilder> Konstruktor pobierający <xref:System.Speech.Recognition.SemanticResultKey> jako argument (<xref:System.Speech.Recognition.GrammarBuilder.%23ctor%28System.Speech.Recognition.SemanticResultKey%29>).</span><span class="sxs-lookup"><span data-stu-id="ef74e-146">The use of <xref:System.Speech.Recognition.SemanticResultValue.ToGrammarBuilder%2A> is equivalent to using the <xref:System.Speech.Recognition.GrammarBuilder> constructor which takes <xref:System.Speech.Recognition.SemanticResultKey> as an argument (<xref:System.Speech.Recognition.GrammarBuilder.%23ctor%28System.Speech.Recognition.SemanticResultKey%29>).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ef74e-147">Poniższy przykład tworzy <xref:System.Speech.Recognition.Grammar> obiekt, który obsługuje polecenia, aby zmienić kolor tła.</span><span class="sxs-lookup"><span data-stu-id="ef74e-147">The following example creates a <xref:System.Speech.Recognition.Grammar> object that supports commands to change the background color.</span></span>  
  
 <span data-ttu-id="ef74e-148">A <xref:System.Speech.Recognition.Choices> obiektu (`colorChoice`) zawierający listę opcji kolory tła jest wypełniony przy użyciu <xref:System.Speech.Recognition.Choices.Add%28System.Speech.Recognition.GrammarBuilder%5B%5D%29> metody z <xref:System.Speech.Recognition.GrammarBuilder> wystąpień.</span><span class="sxs-lookup"><span data-stu-id="ef74e-148">A <xref:System.Speech.Recognition.Choices> object (`colorChoice`) containing the list of options for background colors is filled using the <xref:System.Speech.Recognition.Choices.Add%28System.Speech.Recognition.GrammarBuilder%5B%5D%29> method with <xref:System.Speech.Recognition.GrammarBuilder> instances.</span></span> <span data-ttu-id="ef74e-149"><xref:System.Speech.Recognition.GrammarBuilder> Wystąpienia są pobierane za pośrednictwem <xref:System.Speech.Recognition.SemanticResultKey.ToGrammarBuilder> metody <xref:System.Speech.Recognition.SemanticResultValue> obiekty utworzone na podstawie koloru ciągów.</span><span class="sxs-lookup"><span data-stu-id="ef74e-149">The <xref:System.Speech.Recognition.GrammarBuilder> instances are obtained through the <xref:System.Speech.Recognition.SemanticResultKey.ToGrammarBuilder> method on the <xref:System.Speech.Recognition.SemanticResultValue> objects created from color strings.</span></span>  
  
 <span data-ttu-id="ef74e-150">A <xref:System.Speech.Recognition.GrammarBuilder> następnie można uzyskać przez wywołanie <xref:System.Speech.Recognition.SemanticResultKey.ToGrammarBuilder> na <xref:System.Speech.Recognition.SemanticResultKey> wystąpienia, które będzie używane na klucz semantycznego opcje dostępne w `colorChoice`.</span><span class="sxs-lookup"><span data-stu-id="ef74e-150">A <xref:System.Speech.Recognition.GrammarBuilder> is then obtained by calling <xref:System.Speech.Recognition.SemanticResultKey.ToGrammarBuilder> on a <xref:System.Speech.Recognition.SemanticResultKey> instance, which will be used to key the semantic choices in `colorChoice`.</span></span>  
  
```csharp  
  
private Grammar CreateGrammarBuilderRGBSemantics()   
{  
  
  // Create a set of choices, each a lookup from a color name to RGB.  
  // Choices constructors do not take SemanticResultValue parameters, so cast   
  // the SemanticResultValue to GrammarBuilder.  
  Choices colorChoice = new Choices();  
  foreach (string colorName in System.Enum.GetNames(typeof(KnownColor)))   
  {  
    SemanticResultValue colorValue=new SemanticResultValue(colorName, Color.FromName(colorName).ToArgb());  
  
    // Use implicit conversion of SemanticResultValue to GrammarBuilder.  
    colorChoice.Add(colorValue.ToGrammarBuilder());      
  }  
  SemanticResultKey choiceKey = new SemanticResultKey("rgb", colorChoice);  
  GrammarBuilder choiceBuilder = choiceKey.ToGrammarBuilder();  
  
  // Create two intermediate grammars with introductory phrase and the color choice.  
  GrammarBuilder makeBackgroundBuilder = "Make background";  
  makeBackgroundBuilder.Append(choiceBuilder);  
  
  GrammarBuilder configureBackgroundBuilder = new GrammarBuilder("Configure background as");  
  configureBackgroundBuilder.Append((new SemanticResultKey("rgb", colorChoice)).ToGrammarBuilder());  
  
  // Create the Grammar object, which recognizes either intermediate grammar.  
  Grammar grammar = new Grammar(new Choices(new GrammarBuilder[] {makeBackgroundBuilder, configureBackgroundBuilder}));  
  grammar.Name = "Make Background /Configure background as";  
  
  return grammar;  
}  
  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>