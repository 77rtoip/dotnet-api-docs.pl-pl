<Type Name="SemanticResultKey" FullName="System.Speech.Recognition.SemanticResultKey">
  <Metadata><Meta Name="ms.openlocfilehash" Value="9d41242796c25031134a175d7e82a84cb6e4c818" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69231068" /></Metadata><TypeSignature Language="C#" Value="public class SemanticResultKey" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SemanticResultKey extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Speech.Recognition.SemanticResultKey" />
  <TypeSignature Language="VB.NET" Value="Public Class SemanticResultKey" />
  <TypeSignature Language="C++ CLI" Value="public ref class SemanticResultKey" />
  <TypeSignature Language="F#" Value="type SemanticResultKey = class" />
  <AssemblyInfo>
    <AssemblyName>System.Speech</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Diagnostics.DebuggerDisplay("{_semanticKey.DebugSummary}")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="58db3-101">Kojarzy ciąg klucza z <see cref="T:System.Speech.Recognition.SemanticResultValue" /> wartościami do definiowania <see cref="T:System.Speech.Recognition.SemanticValue" /> obiektów.</span><span class="sxs-lookup"><span data-stu-id="58db3-101">Associates a key string with <see cref="T:System.Speech.Recognition.SemanticResultValue" /> values to define <see cref="T:System.Speech.Recognition.SemanticValue" /> objects.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="58db3-102">Podstawowa jednostka wyrażenia semantycznego w System. Speech to <xref:System.Speech.Recognition.SemanticValue>element, który jest parą klucz/wartość.</span><span class="sxs-lookup"><span data-stu-id="58db3-102">The basic unit of semantic expression in System.Speech is the <xref:System.Speech.Recognition.SemanticValue>, which is a key/value pair.</span></span>  
  
 <span data-ttu-id="58db3-103">Korzystając <xref:System.Speech.Recognition.SemanticResultKey> z obiektów, należy <xref:System.Speech.Recognition.SemanticResultValue> oznakować wystąpienia <xref:System.Speech.Recognition.GrammarBuilder> zawarte w obiektach i ciągach, dzięki czemu wartości mogą <xref:System.Speech.Recognition.SemanticValue> być łatwo dostępne z wystąpień podczas rozpoznawania.</span><span class="sxs-lookup"><span data-stu-id="58db3-103">Using <xref:System.Speech.Recognition.SemanticResultKey> objects, you tag <xref:System.Speech.Recognition.SemanticResultValue> instances contained in <xref:System.Speech.Recognition.GrammarBuilder> objects and strings so that the values may readily be accessed from <xref:System.Speech.Recognition.SemanticValue> instances on recognition.</span></span>  
  
 <span data-ttu-id="58db3-104">W połączeniu z <xref:System.Speech.Recognition.SemanticResultValue> <xref:System.Speech.Recognition.SemanticResultKey> obiektami<xref:System.Speech.Recognition.GrammarBuilder> i<xref:System.Speech.Recognition.Choices> można używać obiektów, aby definiować strukturę semantyczną dla gramatyki rozpoznawania mowy.</span><span class="sxs-lookup"><span data-stu-id="58db3-104">You can use <xref:System.Speech.Recognition.SemanticResultValue> and <xref:System.Speech.Recognition.SemanticResultKey> objects, in conjunction with <xref:System.Speech.Recognition.GrammarBuilder> and <xref:System.Speech.Recognition.Choices> objects, to define the semantic structure for a speech recognition grammar.</span></span> <span data-ttu-id="58db3-105">Aby uzyskać dostęp do informacji semantycznych w wyniku rozpoznawania, należy uzyskać wystąpienie <xref:System.Speech.Recognition.SemanticValue> <xref:System.Speech.Recognition.RecognizedPhrase.Semantics%2A> przez właściwość na <xref:System.Speech.Recognition.RecognizedPhrase>.</span><span class="sxs-lookup"><span data-stu-id="58db3-105">To access the semantic information in a recognition result, obtain an instance of <xref:System.Speech.Recognition.SemanticValue> through the <xref:System.Speech.Recognition.RecognizedPhrase.Semantics%2A> property on <xref:System.Speech.Recognition.RecognizedPhrase>.</span></span>  
  
  
## Examples  
 <span data-ttu-id="58db3-106">Poniższy przykład tworzy <xref:System.Speech.Recognition.Grammar> , aby rozpoznawać dane wejściowe hasła formularza "moje hasło to...", gdzie rzeczywiste dane wejściowe są dopasowane do symbolu wieloznacznego.</span><span class="sxs-lookup"><span data-stu-id="58db3-106">The following example creates a <xref:System.Speech.Recognition.Grammar> to recognize password input of the form "My password is …", where the actual input is matched with a wildcard.</span></span>  
  
 <span data-ttu-id="58db3-107">Symbol wieloznaczny jest oznakowany kluczem semantycznym, <xref:System.Speech.Recognition.Grammar.SpeechRecognized> a procedura obsługi sprawdza obecność tego tagu w celu sprawdzenia, czy nastąpiło wprowadzenie hasła.</span><span class="sxs-lookup"><span data-stu-id="58db3-107">The wildcard is tagged with a semantic key, and the <xref:System.Speech.Recognition.Grammar.SpeechRecognized> handler checks for the presence of this tag to verify that a password input has occurred.</span></span>  
  
```csharp  
private void pwdGrammar()   
{  
  GrammarBuilder pwdBuilder = new GrammarBuilder("My Password is");  
  GrammarBuilder wildcardBuilder = new GrammarBuilder();  
  wildcardBuilder.AppendWildcard();  
  SemanticResultKey wildcardKey= new SemanticResultKey("Password", wildcardBuilder);  
  pwdBuilder+=wildcardKey;  
  Grammar grammar = new Grammar(pwdBuilder);  
  grammar.Name = "Password input";  
  
  grammar.SpeechRecognized += delegate(object sender, SpeechRecognizedEventArgs eventArgs)   
  {  
    SemanticValue semantics = eventArgs.Result.Semantics;  
    RecognitionResult result=eventArgs.Result;  
  
    if (!semantics.ContainsKey("Password"))   
    {  
      SpeechUI.SendTextFeedback(eventArgs.Result, "No Password Provided", false);  
    }  
    else   
    {  
      RecognizedAudio pwdAudio = result.GetAudioForWordRange(result.Words[3], result.Words[result.Words.Count - 1]);  
      MemoryStream pwdMemoryStream = new MemoryStream();  
      pwdAudio.WriteToAudioStream(pwdMemoryStream);  
      if (!IsValidPwd(pwdMemoryStream))   
      {  
        string badPwd = System.IO.Path.GetTempPath() + "BadPwd" + (new Random()).Next().ToString() + ".wav";  
        FileStream waveStream = new FileStream(badPwd, FileMode.Create);  
        pwdAudio.WriteToWaveStream(waveStream);  
        waveStream.Flush();  
        waveStream.Close();  
        SpeechUI.SendTextFeedback(eventArgs.Result, "Invalid Password", false);  
  
      }  
    }  
  };  
  grammar.Enabled = true;  
  _recognizer.LoadGrammar(grammar);  
  UpdateGrammarTree(_grammarTreeView, _recognizer);  
  
}  
```  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Speech.Recognition.SemanticValue" />
    <altmember cref="T:System.Speech.Recognition.SemanticResultValue" />
    <related type="Article" href="https://docs.microsoft.com/previous-versions/office/developer/speech-technologies/hh361587(v%3doffice.14)"><span data-ttu-id="58db3-108">Używanie SemanticResultKey do wyodrębnienia SemanticResultValue</span><span class="sxs-lookup"><span data-stu-id="58db3-108">Using a SemanticResultKey to Extract a SemanticResultValue</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="58db3-109">Konstruuje wystąpienie <see cref="T:System.Speech.Recognition.SemanticResultKey" /> i kojarzy klucz z składnikami gramatyki.</span><span class="sxs-lookup"><span data-stu-id="58db3-109">Constructs an instance of <see cref="T:System.Speech.Recognition.SemanticResultKey" /> and associates the key with grammar components.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="58db3-110">Konstruktory dla <xref:System.Speech.Recognition.SemanticResultKey> Określ tag tekstowy (klucz semantyczny) i zestaw składników gramatyki, które mają zostać dodane do gramatyki rozpoznawania mowy.</span><span class="sxs-lookup"><span data-stu-id="58db3-110">The constructors for <xref:System.Speech.Recognition.SemanticResultKey> specify a text tag (the semantic key) and a set of grammar components to add to a speech recognition grammar.</span></span>  
  
 <span data-ttu-id="58db3-111">Składniki gramatyki można określić jako tablicę <xref:System.Speech.Recognition.GrammarBuilder> obiektów lub <xref:System.String> tablicę wystąpień.</span><span class="sxs-lookup"><span data-stu-id="58db3-111">The grammar components can be specified either as an array of <xref:System.Speech.Recognition.GrammarBuilder> objects, or as an array of <xref:System.String> instances.</span></span>  
  
 <span data-ttu-id="58db3-112">Jeśli składniki gramatyki są używane podczas rozpoznawania, można uzyskać dostęp do zwracanego <xref:System.Speech.Recognition.SemanticValue> przy użyciu znacznika tekstu dostarczonego do <xref:System.Speech.Recognition.SemanticResultKey> konstruktora jako klucz semantyczny.</span><span class="sxs-lookup"><span data-stu-id="58db3-112">If the grammar components are used in recognition, you can access the returned <xref:System.Speech.Recognition.SemanticValue> using the text tag provided to the constructor of <xref:System.Speech.Recognition.SemanticResultKey> as a semantic key.</span></span> <span data-ttu-id="58db3-113">Właściwość wystąpienia zostanie określona przez składniki gramatyki <xref:System.Speech.Recognition.SemanticResultKey>używane w definicji. <xref:System.Speech.Recognition.SemanticValue> <xref:System.Speech.Recognition.SemanticValue.Value%2A></span><span class="sxs-lookup"><span data-stu-id="58db3-113">The <xref:System.Speech.Recognition.SemanticValue.Value%2A> property of the <xref:System.Speech.Recognition.SemanticValue> instance will be determined by the grammar components used in the definition of <xref:System.Speech.Recognition.SemanticResultKey>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SemanticResultKey (string semanticResultKey, params System.Speech.Recognition.GrammarBuilder[] builders);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string semanticResultKey, class System.Speech.Recognition.GrammarBuilder[] builders) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.SemanticResultKey.#ctor(System.String,System.Speech.Recognition.GrammarBuilder[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (semanticResultKey As String, ParamArray builders As GrammarBuilder())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SemanticResultKey(System::String ^ semanticResultKey, ... cli::array &lt;System::Speech::Recognition::GrammarBuilder ^&gt; ^ builders);" />
      <MemberSignature Language="F#" Value="new System.Speech.Recognition.SemanticResultKey : string * System.Speech.Recognition.GrammarBuilder[] -&gt; System.Speech.Recognition.SemanticResultKey" Usage="new System.Speech.Recognition.SemanticResultKey (semanticResultKey, builders)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="semanticResultKey" Type="System.String" />
        <Parameter Name="builders" Type="System.Speech.Recognition.GrammarBuilder[]">
          <Attributes>
            <Attribute FrameworkAlternate="netframework-3.0">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="semanticResultKey"><span data-ttu-id="58db3-114">Tag, który ma być używany jako klucz semantyczny w celu <see cref="T:System.Speech.Recognition.SemanticValue" /> uzyskania dostępu do wystąpienia <see cref="T:System.Speech.Recognition.GrammarBuilder" /> skojarzonego z obiektami określonymi <paramref name="builders" /> przez argument.</span><span class="sxs-lookup"><span data-stu-id="58db3-114">The tag to be used as a semantic key to access the <see cref="T:System.Speech.Recognition.SemanticValue" /> instance associated with the <see cref="T:System.Speech.Recognition.GrammarBuilder" /> objects specified by the <paramref name="builders" /> argument.</span></span></param>
        <param name="builders"><span data-ttu-id="58db3-115">Tablica składników gramatyki, która zostanie skojarzona z <see cref="T:System.Speech.Recognition.SemanticValue" /> obiektem dostępnym ze znacznikiem zdefiniowanym w <paramref name="semanticResultKey" />elemencie.</span><span class="sxs-lookup"><span data-stu-id="58db3-115">An array of grammar components that will be associated with a <see cref="T:System.Speech.Recognition.SemanticValue" /> object accessible with the tag defined in <paramref name="semanticResultKey" />.</span></span></param>
        <summary><span data-ttu-id="58db3-116">Przypisuje klucz semantyczny do co najmniej <see cref="T:System.Speech.Recognition.GrammarBuilder" /> jednego obiektu używanego do tworzenia gramatyki rozpoznawania mowy.</span><span class="sxs-lookup"><span data-stu-id="58db3-116">Assigns a semantic key to one or more <see cref="T:System.Speech.Recognition.GrammarBuilder" /> objects used to create a speech recognition grammar.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="58db3-117">Z powodu niejawnych konwersji `builders` argument obsługuje <xref:System.Speech.Recognition.SemanticResultValue>również <xref:System.Speech.Recognition.SemanticResultKey>obiekty <xref:System.Speech.Recognition.Choices>,, <xref:System.String> i.</span><span class="sxs-lookup"><span data-stu-id="58db3-117">Because of implicit conversions, the `builders` argument supports <xref:System.Speech.Recognition.SemanticResultValue>, <xref:System.Speech.Recognition.SemanticResultKey>, <xref:System.Speech.Recognition.Choices>, and <xref:System.String> objects as well.</span></span> <span data-ttu-id="58db3-118">Aby uzyskać więcej informacji na temat konwersji niejawnych, zobacz <xref:System.Speech.Recognition.GrammarBuilder.op_Implicit%2A>.</span><span class="sxs-lookup"><span data-stu-id="58db3-118">For more information on implicit conversions, see <xref:System.Speech.Recognition.GrammarBuilder.op_Implicit%2A>.</span></span>  
  
 <span data-ttu-id="58db3-119">Podczas wykonywania operacji <xref:System.Speech.Recognition.GrammarBuilder> rozpoznawania obiekty podane `builders` w argumencie są traktowane jako sekwencyjne.</span><span class="sxs-lookup"><span data-stu-id="58db3-119">When performing a recognition operation, the <xref:System.Speech.Recognition.GrammarBuilder> objects provided in the `builders` argument are treated as sequential.</span></span> <span data-ttu-id="58db3-120">Na przykład jeśli poniższe <xref:System.Speech.Recognition.SemanticResultValue> dane są używane do <xref:System.Speech.Recognition.Grammar>konstruowania, wejście do aparatu rozpoznawania musi zawierać słowa "Quick Fox" w kolejności, w jakiej zostanie rozpoznany.</span><span class="sxs-lookup"><span data-stu-id="58db3-120">For example, if the following <xref:System.Speech.Recognition.SemanticResultValue> is used to construct a <xref:System.Speech.Recognition.Grammar>, input to the recognition engine must contain the words "the quick brown fox" in sequence to be recognized.</span></span>  
  
```csharp  
SemanticResultKey stringTest=new SemanticResultKey(  
    "stringTest", new GrammarBuilder[] {  
    new GrammarBuilder("the"),  
    new GrammarBuilder("quick"),  
    new GrammarBuilder("brown"),  
    new GrammarBuilder("fox")});  
```  
  
 <span data-ttu-id="58db3-121">Argument zawiera tag używany do uzyskiwania dostępu do, <xref:System.Speech.Recognition.SemanticValue> który może zostać zwrócony. `semanticResultKey`</span><span class="sxs-lookup"><span data-stu-id="58db3-121">The `semanticResultKey` argument contains the tag used to access the <xref:System.Speech.Recognition.SemanticValue> which might be returned.</span></span>  
  
 <span data-ttu-id="58db3-122">Wartość jest określana przez <xref:System.Speech.Recognition.GrammarBuilder> wystąpienia dostarczone przez `builders` parametr. <xref:System.Speech.Recognition.SemanticValue> <xref:System.Speech.Recognition.SemanticValue.Value%2A></span><span class="sxs-lookup"><span data-stu-id="58db3-122">The <xref:System.Speech.Recognition.SemanticValue.Value%2A> of the <xref:System.Speech.Recognition.SemanticValue> is determined by the <xref:System.Speech.Recognition.GrammarBuilder> instances provided by the `builders` parameter.</span></span>  
  
 <span data-ttu-id="58db3-123">Jeśli obiekty nie zawierają definiowania <xref:System.Speech.Recognition.SemanticResultValue>wystąpień <xref:System.Speech.Recognition.SemanticValue> , wartość jest `null`. <xref:System.Speech.Recognition.GrammarBuilder></span><span class="sxs-lookup"><span data-stu-id="58db3-123">If the <xref:System.Speech.Recognition.GrammarBuilder> objects contain no defining instances of <xref:System.Speech.Recognition.SemanticResultValue>, the value of the <xref:System.Speech.Recognition.SemanticValue> is `null`.</span></span>  
  
 <span data-ttu-id="58db3-124">`builders` <xref:System.Speech.Recognition.SemanticResultKey> <xref:System.Speech.Recognition.SemanticResultValue> Jeśli obiekty dostarczone w parametrze zapewniają nieoznakowane (nieskojarzone z wystąpieniem obiektu), <xref:System.Speech.Recognition.SemanticResultValue> które jest używane przez logikę rozpoznawania, to wystąpienie zostanie zdefiniowane <xref:System.Speech.Recognition.GrammarBuilder> <xref:System.Speech.Recognition.SemanticValue.Value%2A>Właściwość ,którajestgenerowana.<xref:System.Speech.Recognition.SemanticValue></span><span class="sxs-lookup"><span data-stu-id="58db3-124">If the <xref:System.Speech.Recognition.GrammarBuilder> objects provided in the `builders` parameter provide an untagged (not associated with a <xref:System.Speech.Recognition.SemanticResultKey> object) <xref:System.Speech.Recognition.SemanticResultValue> instance that is used by the recognition logic, that instance of <xref:System.Speech.Recognition.SemanticResultValue> will define the <xref:System.Speech.Recognition.SemanticValue.Value%2A> property of the <xref:System.Speech.Recognition.SemanticValue> that is produced.</span></span>  
  
 <span data-ttu-id="58db3-125">Powinien istnieć jeden i tylko jeden nieoznakowany <xref:System.Speech.Recognition.SemanticResultValue> wystąpienie <xref:System.Speech.Recognition.GrammarBuilder> w obiektach określonych przez `builders` parametr.</span><span class="sxs-lookup"><span data-stu-id="58db3-125">There should be one, and only one, untagged <xref:System.Speech.Recognition.SemanticResultValue> instance in the <xref:System.Speech.Recognition.GrammarBuilder> objects specified by the `builders` parameter.</span></span> <span data-ttu-id="58db3-126">Jeśli wiele wystąpień nieoznakowanych <xref:System.Speech.Recognition.SemanticResultValue> jest skojarzonych <xref:System.Speech.Recognition.SemanticResultKey>z, każda z nich podejmie próbę <xref:System.Speech.Recognition.SemanticValue> ustawienia wartości wygenerowanej w wyniku rozpoznawania.</span><span class="sxs-lookup"><span data-stu-id="58db3-126">If multiple instances of untagged <xref:System.Speech.Recognition.SemanticResultValue> are associated with the <xref:System.Speech.Recognition.SemanticResultKey>, each will attempt to the set the value of the <xref:System.Speech.Recognition.SemanticValue> produced in the recognition result.</span></span> <span data-ttu-id="58db3-127">Nie jest to dozwolone, a aparat rozpoznawania generuje wyjątek, gdy zostanie podjęta próba użycia <xref:System.Speech.Recognition.Grammar> utworzonego przy użyciu <xref:System.Speech.Recognition.SemanticResultKey> takiego wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="58db3-127">This is not permitted, and the recognizer will generate an exception when it attempts to use a <xref:System.Speech.Recognition.Grammar> created using such a <xref:System.Speech.Recognition.SemanticResultKey> instance.</span></span>  
  
 <span data-ttu-id="58db3-128"><xref:System.Speech.Recognition.SemanticResultKey> <xref:System.Speech.Recognition.SemanticResultKey> Wystąpienia zawarte w obiektach określonych przez `builders` parametr i już skojarzone z innym nie mają wpływu na bieżące wystąpienie. <xref:System.Speech.Recognition.GrammarBuilder> <xref:System.Speech.Recognition.SemanticResultValue></span><span class="sxs-lookup"><span data-stu-id="58db3-128">Instances of <xref:System.Speech.Recognition.SemanticResultValue> contained in the <xref:System.Speech.Recognition.GrammarBuilder> objects specified by the `builders` parameter and already associated with another <xref:System.Speech.Recognition.SemanticResultKey> have no effect on the current <xref:System.Speech.Recognition.SemanticResultKey> instance.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="58db3-129">Poniższy przykład tworzy <xref:System.Speech.Recognition.Grammar> , aby rozpoznawać dane wejściowe hasła formularza "moje hasło to...", gdzie rzeczywiste dane wejściowe są dopasowane do symbolu wieloznacznego.</span><span class="sxs-lookup"><span data-stu-id="58db3-129">The following example creates a <xref:System.Speech.Recognition.Grammar> to recognize password input of the form "My password is …", where the actual input is matched with a wildcard.</span></span>  
  
 <span data-ttu-id="58db3-130">Symbol wieloznaczny jest oznakowany przez <xref:System.Speech.Recognition.SpeechRecognizer> , którego wartość klucza jest "Password".</span><span class="sxs-lookup"><span data-stu-id="58db3-130">The wildcard is tagged by a <xref:System.Speech.Recognition.SpeechRecognizer> whose key value is "Password".</span></span> <span data-ttu-id="58db3-131"><xref:System.Speech.Recognition.Grammar.SpeechRecognized> Program obsługi sprawdza obecność tego tagu, uzyskuje dane wejściowe audio i weryfikuje hasło.</span><span class="sxs-lookup"><span data-stu-id="58db3-131">The <xref:System.Speech.Recognition.Grammar.SpeechRecognized> handler checks for the presence of this tag, obtains the audio input of the password, and verifies the password.</span></span>  
  
```csharp  
private void pwdGrammar()   
{  
  GrammarBuilder pwdBuilder = new GrammarBuilder("My Password is");  
  GrammarBuilder wildcardBuilder = new GrammarBuilder();  
  wildcardBuilder.AppendWildcard();  
  SemanticResultKey wildcardKey= new SemanticResultKey("Password", wildcardBuilder);  
  pwdBuilder+=wildcardKey;  
  Grammar grammar = new Grammar(pwdBuilder);  
  grammar.Name = "Password input";  
  
  grammar.SpeechRecognized +=   
    delegate(object sender, SpeechRecognizedEventArgs eventArgs)   
    {  
      SemanticValue semantics = eventArgs.Result.Semantics;  
      RecognitionResult result=eventArgs.Result;  
  
      if (!semantics.ContainsKey("Password"))   
      {  
        SpeechUI.SendTextFeedback(eventArgs.Result, "No Password Provided", false);  
      }  
      else   
      {  
        RecognizedAudio pwdAudio = result.GetAudioForWordRange(  
                  result.Words[3],  
                  result.Words[result.Words.Count - 1]);  
                  MemoryStream pwdMemoryStream = new MemoryStream();  
                  pwdAudio.WriteToAudioStream(pwdMemoryStream);  
        if (!IsValidPwd(pwdMemoryStream))   
        {  
          string badPwd = System.IO.Path.GetTempPath() + "BadPwd" + (new Random()).Next().ToString() + ".wav";  
          FileStream waveStream = new FileStream(badPwd, FileMode.Create);    
          pwdAudio.WriteToWaveStream(waveStream);  
          waveStream.Flush();  
          waveStream.Close();  
          SpeechUI.SendTextFeedback(eventArgs.Result, "Invalid Password", false);      
        }  
      }  
    };  
  
  grammar.Enabled = true;  
  _recognizer.LoadGrammar(grammar);  
  UpdateGrammarTree(_grammarTreeView, _recognizer);  
  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SemanticResultKey (string semanticResultKey, params string[] phrases);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string semanticResultKey, string[] phrases) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.SemanticResultKey.#ctor(System.String,System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (semanticResultKey As String, ParamArray phrases As String())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SemanticResultKey(System::String ^ semanticResultKey, ... cli::array &lt;System::String ^&gt; ^ phrases);" />
      <MemberSignature Language="F#" Value="new System.Speech.Recognition.SemanticResultKey : string * string[] -&gt; System.Speech.Recognition.SemanticResultKey" Usage="new System.Speech.Recognition.SemanticResultKey (semanticResultKey, phrases)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="semanticResultKey" Type="System.String" />
        <Parameter Name="phrases" Type="System.String[]">
          <Attributes>
            <Attribute FrameworkAlternate="netframework-3.0">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="semanticResultKey"><span data-ttu-id="58db3-132">Tag, który ma być używany, <see cref="T:System.Speech.Recognition.SemanticValue" /> uzyskuje dostęp do <see cref="T:System.String" /> wystąpienia skojarzonego z obiektami <paramref name="phrases" /> określonymi przez argument.</span><span class="sxs-lookup"><span data-stu-id="58db3-132">The tag to be used access the <see cref="T:System.Speech.Recognition.SemanticValue" /> instance associated with the <see cref="T:System.String" /> objects specified by the <paramref name="phrases" /> argument.</span></span></param>
        <param name="phrases"><span data-ttu-id="58db3-133">Jeden lub więcej <see cref="T:System.String" /> obiektów, których połączony tekst zostanie skojarzony <see cref="T:System.Speech.Recognition.SemanticValue" /> z obiektem dostępnym ze znacznikiem zdefiniowanym w <paramref name="semanticResultKey" />elemencie.</span><span class="sxs-lookup"><span data-stu-id="58db3-133">One or more <see cref="T:System.String" /> objects, whose concatenated text will be associated with a <see cref="T:System.Speech.Recognition.SemanticValue" /> object accessible with the tag defined in <paramref name="semanticResultKey" />.</span></span></param>
        <summary><span data-ttu-id="58db3-134">Przypisuje klucz semantyczny do jednego lub <see cref="T:System.String" /> większej liczby wystąpień używanych do tworzenia gramatyki rozpoznawania mowy.</span><span class="sxs-lookup"><span data-stu-id="58db3-134">Assigns a semantic key to one or more <see cref="T:System.String" /> instances used to create a speech recognition grammar.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="58db3-135">Podczas wykonywania operacji <xref:System.String> rozpoznawania obiekty użyte `phrases` w parametrze są traktowane jako sekwencyjne.</span><span class="sxs-lookup"><span data-stu-id="58db3-135">When performing a recognition operation, the <xref:System.String> objects used in the `phrases` parameter are treated as sequential.</span></span> <span data-ttu-id="58db3-136">Na przykład jeśli poniższe <xref:System.Speech.Recognition.SemanticResultValue> dane są używane do <xref:System.Speech.Recognition.Grammar>konstruowania, wejście do aparatu rozpoznawania musi zawierać słowa "Quick Fox" w kolejności, w jakiej zostanie rozpoznany.</span><span class="sxs-lookup"><span data-stu-id="58db3-136">For example, if the following <xref:System.Speech.Recognition.SemanticResultValue> is used to construct a <xref:System.Speech.Recognition.Grammar>, input to the recognition engine must contain the words "the quick brown fox" in sequence to be recognized.</span></span>  
  
```csharp  
SemanticResultKey stringTest=new SemanticResultKey("stringTest",   
                                new string[] {  
                                               "the",  
                                               "quick",  
                                               "brown",  
                                               "fox"});  
```  
  
 <span data-ttu-id="58db3-137">Argument określa klucz używany do uzyskiwania dostępu do, <xref:System.Speech.Recognition.SemanticValue> który może zostać zwrócony. `semanticResultKey`</span><span class="sxs-lookup"><span data-stu-id="58db3-137">The `semanticResultKey` argument determines the key used to access the <xref:System.Speech.Recognition.SemanticValue> which might be returned.</span></span>  
  
 <span data-ttu-id="58db3-138">W przypadku konstruowania <xref:System.Speech.Recognition.Grammar> <xref:System.Speech.Recognition.GrammarBuilder> obiektu, który zawiera klucz semantyczny z tablicą <xref:System.Speech.Recognition.SemanticValue> obiektów String, <xref:System.Speech.Recognition.SemanticValue.Value%2A> wygenerowane przez operację rozpoznawania będzie ciągiem używanym do rozpoznawania.</span><span class="sxs-lookup"><span data-stu-id="58db3-138">If you construct a <xref:System.Speech.Recognition.Grammar> using a <xref:System.Speech.Recognition.GrammarBuilder> object that contains a semantic key with an array of string objects,  the <xref:System.Speech.Recognition.SemanticValue.Value%2A> of the <xref:System.Speech.Recognition.SemanticValue> produced by a recognition operation  will be the string used in recognition.</span></span> <span data-ttu-id="58db3-139">W poprzednim przykładzie oznacza to, że <xref:System.Speech.Recognition.SemanticValue.Value%2A> jest to "Quick Brown Fox".</span><span class="sxs-lookup"><span data-stu-id="58db3-139">In the preceding example, this means that <xref:System.Speech.Recognition.SemanticValue.Value%2A> would be "the quick brown fox".</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="58db3-140">Poniższy <xref:System.Speech.Recognition.Grammar> przykład tworzy <xref:System.Speech.Recognition.GrammarBuilder> obiekt z obiektu, który używa elementu <xref:System.Speech.Recognition.SemanticResultKey> <xref:System.String> , który jest zdefiniowany przez tablicę obiektów.</span><span class="sxs-lookup"><span data-stu-id="58db3-140">The following example creates a <xref:System.Speech.Recognition.Grammar> from a <xref:System.Speech.Recognition.GrammarBuilder> object that uses a <xref:System.Speech.Recognition.SemanticResultKey>, which is defined by an array of <xref:System.String> objects.</span></span>  
  
 <span data-ttu-id="58db3-141">Aparat rozpoznawania korzystający z <xref:System.Speech.Recognition.Grammar> utworzonego rozwiązania rozpozna frazę "Color Red Green Blue zero".</span><span class="sxs-lookup"><span data-stu-id="58db3-141">A recognition engine using the <xref:System.Speech.Recognition.Grammar> created will recognize the phrase "color red green blue zero".</span></span> <span data-ttu-id="58db3-142">Semantyka <xref:System.Speech.Recognition.RecognizedPhrase> zwrócona przez rozpoznanie będzie zawierać element <xref:System.Speech.Recognition.SemanticValue> z <xref:System.Speech.Recognition.SemanticValue.Value%2A> czerwonym zielonym niebieską.</span><span class="sxs-lookup"><span data-stu-id="58db3-142">The semantics of the <xref:System.Speech.Recognition.RecognizedPhrase> returned by recognition will contain a <xref:System.Speech.Recognition.SemanticValue> with a <xref:System.Speech.Recognition.SemanticValue.Value%2A> of "red green blue".</span></span> <span data-ttu-id="58db3-143">Możesz uzyskać dostęp <xref:System.Speech.Recognition.SemanticValue> do za pomocą tagu "Code".</span><span class="sxs-lookup"><span data-stu-id="58db3-143">You can access the <xref:System.Speech.Recognition.SemanticValue> using the "code" tag.</span></span>  
  
 <span data-ttu-id="58db3-144">Ze `SemanticResultValue("zero", 5)` <xref:System.Speech.Recognition.SemanticValue> <xref:System.Speech.Recognition.RecognizedPhrase> względu na to, że obiekt główny w elemencie będzie miał wartość 5. <xref:System.Speech.Recognition.GrammarBuilder></span><span class="sxs-lookup"><span data-stu-id="58db3-144">Because of the `SemanticResultValue("zero", 5)` appended to the <xref:System.Speech.Recognition.GrammarBuilder>, the root <xref:System.Speech.Recognition.SemanticValue> object in the <xref:System.Speech.Recognition.RecognizedPhrase> will have a value of 5.</span></span>  
  
```csharp  
private void keyTest()   
{  
  // Say "color red green blue zero"  
  GrammarBuilder gb = new GrammarBuilder("color") +  
                        new SemanticResultKey("code",   
                          (new string[] {"red", "green", "blue"})) +  
                        new SemanticResultValue("zero", 5);  
  Grammar g = new Grammar(gb);  
  g.Name = "keyTest";  
  _recognizer.LoadGrammar(g);  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToGrammarBuilder">
      <MemberSignature Language="C#" Value="public System.Speech.Recognition.GrammarBuilder ToGrammarBuilder ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Speech.Recognition.GrammarBuilder ToGrammarBuilder() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.SemanticResultKey.ToGrammarBuilder" />
      <MemberSignature Language="VB.NET" Value="Public Function ToGrammarBuilder () As GrammarBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Speech::Recognition::GrammarBuilder ^ ToGrammarBuilder();" />
      <MemberSignature Language="F#" Value="member this.ToGrammarBuilder : unit -&gt; System.Speech.Recognition.GrammarBuilder" Usage="semanticResultKey.ToGrammarBuilder " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Speech.Recognition.GrammarBuilder</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="58db3-145">Zwraca wystąpienie <see cref="T:System.Speech.Recognition.GrammarBuilder" /> skonstruowane z bieżącego <see cref="T:System.Speech.Recognition.SemanticResultKey" /> wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="58db3-145">Returns an instance of <see cref="T:System.Speech.Recognition.GrammarBuilder" /> constructed from the current <see cref="T:System.Speech.Recognition.SemanticResultKey" /> instance.</span></span></summary>
        <returns><span data-ttu-id="58db3-146">Wystąpienie <see cref="T:System.Speech.Recognition.GrammarBuilder" /> skonstruowane z bieżącego <see langword="SemanticResultKey" /> wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="58db3-146">An instance of <see cref="T:System.Speech.Recognition.GrammarBuilder" /> constructed from the current <see langword="SemanticResultKey" /> instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="58db3-147">Użycie <xref:System.Speech.Recognition.SemanticResultValue.ToGrammarBuilder%2A> jest równoważne <xref:System.Speech.Recognition.GrammarBuilder> użyciu konstruktora, który przyjmuje <xref:System.Speech.Recognition.SemanticResultKey> jako argument (<xref:System.Speech.Recognition.GrammarBuilder.%23ctor%28System.Speech.Recognition.SemanticResultKey%29>).</span><span class="sxs-lookup"><span data-stu-id="58db3-147">The use of <xref:System.Speech.Recognition.SemanticResultValue.ToGrammarBuilder%2A> is equivalent to using the <xref:System.Speech.Recognition.GrammarBuilder> constructor which takes <xref:System.Speech.Recognition.SemanticResultKey> as an argument (<xref:System.Speech.Recognition.GrammarBuilder.%23ctor%28System.Speech.Recognition.SemanticResultKey%29>).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="58db3-148">Poniższy przykład tworzy <xref:System.Speech.Recognition.Grammar> obiekt, który obsługuje polecenia, aby zmienić kolor tła.</span><span class="sxs-lookup"><span data-stu-id="58db3-148">The following example creates a <xref:System.Speech.Recognition.Grammar> object that supports commands to change the background color.</span></span>  
  
 <span data-ttu-id="58db3-149">Obiekt (`colorChoice`) zawierający listę opcji <xref:System.Speech.Recognition.Choices.Add%28System.Speech.Recognition.GrammarBuilder%5B%5D%29> kolorów tła jest wypełniany przy użyciu metody z <xref:System.Speech.Recognition.GrammarBuilder> wystąpieniami. <xref:System.Speech.Recognition.Choices></span><span class="sxs-lookup"><span data-stu-id="58db3-149">A <xref:System.Speech.Recognition.Choices> object (`colorChoice`) containing the list of options for background colors is filled using the <xref:System.Speech.Recognition.Choices.Add%28System.Speech.Recognition.GrammarBuilder%5B%5D%29> method with <xref:System.Speech.Recognition.GrammarBuilder> instances.</span></span> <span data-ttu-id="58db3-150">Wystąpienia są uzyskiwane <xref:System.Speech.Recognition.SemanticResultKey.ToGrammarBuilder> za pośrednictwem metody dla <xref:System.Speech.Recognition.SemanticResultValue> obiektów utworzonych na podstawie ciągów kolorów. <xref:System.Speech.Recognition.GrammarBuilder></span><span class="sxs-lookup"><span data-stu-id="58db3-150">The <xref:System.Speech.Recognition.GrammarBuilder> instances are obtained through the <xref:System.Speech.Recognition.SemanticResultKey.ToGrammarBuilder> method on the <xref:System.Speech.Recognition.SemanticResultValue> objects created from color strings.</span></span>  
  
 <span data-ttu-id="58db3-151">A <xref:System.Speech.Recognition.GrammarBuilder> następnie jest uzyskiwany przez <xref:System.Speech.Recognition.SemanticResultKey.ToGrammarBuilder> wywołanie na <xref:System.Speech.Recognition.SemanticResultKey> wystąpieniu, które zostanie użyte do wybrania semantycznych opcji w `colorChoice`.</span><span class="sxs-lookup"><span data-stu-id="58db3-151">A <xref:System.Speech.Recognition.GrammarBuilder> is then obtained by calling <xref:System.Speech.Recognition.SemanticResultKey.ToGrammarBuilder> on a <xref:System.Speech.Recognition.SemanticResultKey> instance, which will be used to key the semantic choices in `colorChoice`.</span></span>  
  
```csharp  
  
private Grammar CreateGrammarBuilderRGBSemantics()   
{  
  
  // Create a set of choices, each a lookup from a color name to RGB.  
  // Choices constructors do not take SemanticResultValue parameters, so cast   
  // the SemanticResultValue to GrammarBuilder.  
  Choices colorChoice = new Choices();  
  foreach (string colorName in System.Enum.GetNames(typeof(KnownColor)))   
  {  
    SemanticResultValue colorValue=new SemanticResultValue(colorName, Color.FromName(colorName).ToArgb());  
  
    // Use implicit conversion of SemanticResultValue to GrammarBuilder.  
    colorChoice.Add(colorValue.ToGrammarBuilder());      
  }  
  SemanticResultKey choiceKey = new SemanticResultKey("rgb", colorChoice);  
  GrammarBuilder choiceBuilder = choiceKey.ToGrammarBuilder();  
  
  // Create two intermediate grammars with introductory phrase and the color choice.  
  GrammarBuilder makeBackgroundBuilder = "Make background";  
  makeBackgroundBuilder.Append(choiceBuilder);  
  
  GrammarBuilder configureBackgroundBuilder = new GrammarBuilder("Configure background as");  
  configureBackgroundBuilder.Append((new SemanticResultKey("rgb", colorChoice)).ToGrammarBuilder());  
  
  // Create the Grammar object, which recognizes either intermediate grammar.  
  Grammar grammar = new Grammar(new Choices(new GrammarBuilder[] {makeBackgroundBuilder, configureBackgroundBuilder}));  
  grammar.Name = "Make Background /Configure background as";  
  
  return grammar;  
}  
  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
