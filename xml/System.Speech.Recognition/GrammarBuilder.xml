<Type Name="GrammarBuilder" FullName="System.Speech.Recognition.GrammarBuilder">
  <Metadata><Meta Name="ms.openlocfilehash" Value="445ae1620c692c34154268c06fe2f355387357ff" /><Meta Name="ms.sourcegitcommit" Value="9e06b87bcfa4347dbbaaa4b3cc36b43b93b5badb" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="11/20/2018" /><Meta Name="ms.locfileid" Value="52231801" /></Metadata><TypeSignature Language="C#" Value="public class GrammarBuilder" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit GrammarBuilder extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Speech.Recognition.GrammarBuilder" />
  <TypeSignature Language="VB.NET" Value="Public Class GrammarBuilder" />
  <TypeSignature Language="C++ CLI" Value="public ref class GrammarBuilder" />
  <TypeSignature Language="F#" Value="type GrammarBuilder = class" />
  <AssemblyInfo>
    <AssemblyName>System.Speech</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Diagnostics.DebuggerDisplay("{DebugSummary}")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="3681d-101">Udostępnia mechanizm do programowego tworzenia ograniczenia dla gramatyki rozpoznawania mowy.</span><span class="sxs-lookup"><span data-stu-id="3681d-101">Provides a mechanism for programmatically building the constraints for a speech recognition grammar.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3681d-102">Gramatyki rozpoznawania mowy często są tworzone w formacie XML zdefiniowane przez [mowy rozpoznawania gramatyki specyfikacji (SRGS) w wersji 1.0](https://go.microsoft.com/fwlink/?LinkId=201761).</span><span class="sxs-lookup"><span data-stu-id="3681d-102">Speech recognition grammars are commonly authored in the XML format defined by the [Speech Recognition Grammar Specification (SRGS) Version 1.0](https://go.microsoft.com/fwlink/?LinkId=201761).</span></span> <span data-ttu-id="3681d-103">Jeśli znasz SRGS, ale chcesz wygenerować gramatyki programowo, można użyć <xref:System.Speech.Recognition.SrgsGrammar> przestrzeni nazw, w której członkowie są odpowiednie elementy i atrybuty zdefiniowane przez SRGS.</span><span class="sxs-lookup"><span data-stu-id="3681d-103">If you are familiar with SRGS but want to generate the grammars programmatically, you can use the <xref:System.Speech.Recognition.SrgsGrammar> namespace, whose members correspond closely to the elements and attributes defined by SRGS.</span></span> <span data-ttu-id="3681d-104">Jeśli nie jesteś zaznajomiony z SRGS lub ma programowego, uproszczone podejście do tworzenia gramatyki, za pomocą których można efektywnie wykonać wielu typowych scenariuszy; Możesz użyć <xref:System.Speech.Recognition.GrammarBuilder> i <xref:System.Speech.Recognition.Choices> klasy.</span><span class="sxs-lookup"><span data-stu-id="3681d-104">If you are unfamiliar with SRGS, or you want a lightweight, programmatic approach to authoring grammars with which you can efficiently accomplish many common scenarios; you can use the <xref:System.Speech.Recognition.GrammarBuilder> and <xref:System.Speech.Recognition.Choices> classes.</span></span>  
  
 <span data-ttu-id="3681d-105">Użyj <xref:System.Speech.Recognition.GrammarBuilder> obiektów do tworzenia drzewa hierarchicznego składa się z <xref:System.Speech.Recognition.Choices> obiektów, które zawierają fraz grupową preambuły i wyrażeń po amble w każdym węźle, a zasilany z semantyki wartościami w przekazaniu znaczenia z powrotem do aplikacja.</span><span class="sxs-lookup"><span data-stu-id="3681d-105">Use <xref:System.Speech.Recognition.GrammarBuilder> objects to build a hierarchical tree composed of <xref:System.Speech.Recognition.Choices> objects that contain alternate phrases, interspersed with preamble and post-amble phrases at each node, and seeded with semantic values that convey  meaning back to the application.</span></span>  
  
 <span data-ttu-id="3681d-106">Aby użyć <xref:System.Speech.Recognition.GrammarBuilder> utworzyć <xref:System.Speech.Recognition.Grammar> obiektu, wykonaj następujące kroki.</span><span class="sxs-lookup"><span data-stu-id="3681d-106">To use a <xref:System.Speech.Recognition.GrammarBuilder> to create a <xref:System.Speech.Recognition.Grammar> object, use the following steps.</span></span>  
  
1.  <span data-ttu-id="3681d-107">Tworzy obiekt <xref:System.Speech.Recognition.GrammarBuilder>.</span><span class="sxs-lookup"><span data-stu-id="3681d-107">Create a <xref:System.Speech.Recognition.GrammarBuilder> object.</span></span>  
  
2.  <span data-ttu-id="3681d-108">Dołącz ograniczenia do <xref:System.Speech.Recognition.GrammarBuilder>, takich jak <xref:System.String> obiektów <xref:System.Speech.Recognition.Choices>, <xref:System.Speech.Recognition.SemanticResultKey>, <xref:System.Speech.Recognition.SemanticResultValue>, <xref:System.Speech.Recognition.DictationGrammar>i inne <xref:System.Speech.Recognition.GrammarBuilder> obiektów, które należy zdefiniować ograniczenia dla gramatyki.</span><span class="sxs-lookup"><span data-stu-id="3681d-108">Append constraints to the <xref:System.Speech.Recognition.GrammarBuilder>, such as <xref:System.String> objects, <xref:System.Speech.Recognition.Choices>, <xref:System.Speech.Recognition.SemanticResultKey>, <xref:System.Speech.Recognition.SemanticResultValue>, <xref:System.Speech.Recognition.DictationGrammar>, and other <xref:System.Speech.Recognition.GrammarBuilder> objects that define the constraints for the grammar.</span></span>  
  
3.  <span data-ttu-id="3681d-109">Użyj jednej z <xref:System.Speech.Recognition.Grammar.%23ctor%2A> konstruktorów do tworzenia <xref:System.Speech.Recognition.Grammar> obiekt z ukończoną <xref:System.Speech.Recognition.GrammarBuilder> gramatyki.</span><span class="sxs-lookup"><span data-stu-id="3681d-109">Use one of the <xref:System.Speech.Recognition.Grammar.%23ctor%2A> constructors to create a <xref:System.Speech.Recognition.Grammar> object from the completed <xref:System.Speech.Recognition.GrammarBuilder> grammar.</span></span>  
  
 <span data-ttu-id="3681d-110">Tworzenie za pomocą <xref:System.Speech.Recognition.GrammarBuilder> najlepiej nadaje się do gramatyki, które mają jedną regułę zawierających listy lub może być listę list.</span><span class="sxs-lookup"><span data-stu-id="3681d-110">Authoring with <xref:System.Speech.Recognition.GrammarBuilder> is best suited to grammars that have a single rule containing lists, or perhaps lists of lists.</span></span> <span data-ttu-id="3681d-111">Aby programowo utworzyć gramatyki, które mają wiele reguł lub wymagają odwołuje się wewnętrzna zasada, należy użyć klas <xref:System.Speech.Recognition.SrgsGrammar> przestrzeni nazw.</span><span class="sxs-lookup"><span data-stu-id="3681d-111">To programmatically build grammars that have multiple rules, or that need to make internal rule references, use the classes of the <xref:System.Speech.Recognition.SrgsGrammar> namespace.</span></span>  
  
 <span data-ttu-id="3681d-112">Wystąpienia elementu <xref:System.Speech.Recognition.GrammarBuilder> dostępne są także niejawne konwersje z niektórych innych klas lub łącząc <xref:System.Speech.Recognition.GrammarBuilder> z drugi obiekt, który zawiera ograniczeń dla gramatyki...</span><span class="sxs-lookup"><span data-stu-id="3681d-112">Instances of <xref:System.Speech.Recognition.GrammarBuilder> can also be obtained by implicit conversions from certain other classes or by combining a  <xref:System.Speech.Recognition.GrammarBuilder> with a second object that contains constraints for a grammar..</span></span> <span data-ttu-id="3681d-113">Aby uzyskać więcej informacji, zobacz <xref:System.Speech.Recognition.GrammarBuilder.op_Implicit%2A> i <xref:System.Speech.Recognition.GrammarBuilder.op_Addition%2A> operatorów i <xref:System.Speech.Recognition.GrammarBuilder.Add%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="3681d-113">For more information, see the <xref:System.Speech.Recognition.GrammarBuilder.op_Implicit%2A> and <xref:System.Speech.Recognition.GrammarBuilder.op_Addition%2A> operators and the <xref:System.Speech.Recognition.GrammarBuilder.Add%2A> methods.</span></span>  
  
 <span data-ttu-id="3681d-114">Aby dodać reguły do istniejącego <xref:System.Speech.Recognition.GrammarBuilder>, użyj <xref:System.Speech.Recognition.GrammarBuilder.Add%2A>, <xref:System.Speech.Recognition.GrammarBuilder.Append%2A>, <xref:System.Speech.Recognition.GrammarBuilder.AppendDictation%2A>, <xref:System.Speech.Recognition.GrammarBuilder.AppendRuleReference%2A>, i <xref:System.Speech.Recognition.GrammarBuilder.AppendWildcard%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="3681d-114">To add rules to an existing <xref:System.Speech.Recognition.GrammarBuilder>, use the <xref:System.Speech.Recognition.GrammarBuilder.Add%2A>, <xref:System.Speech.Recognition.GrammarBuilder.Append%2A>, <xref:System.Speech.Recognition.GrammarBuilder.AppendDictation%2A>, <xref:System.Speech.Recognition.GrammarBuilder.AppendRuleReference%2A>, and <xref:System.Speech.Recognition.GrammarBuilder.AppendWildcard%2A> methods.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="3681d-115">Aparat rozpoznawania mowy może zgłosić wyjątek, korzystając z gramatyki rozpoznawania mowy, który zawiera zduplikowane elementy semantyki z taką samą nazwę klucza lub wielu elementów semantycznych, które wielokrotnie może modyfikować wartości tego samego elementu semantycznego.</span><span class="sxs-lookup"><span data-stu-id="3681d-115">The speech recognizer can throw an exception when using a speech recognition grammar that contains duplicate semantic elements with the same key name or multiple semantic elements that could repeatedly modify the value of the same semantic element.</span></span> 
  
 <span data-ttu-id="3681d-116">Aby pomóc w debugowaniu, <xref:System.Speech.Recognition.GrammarBuilder.DebugShowPhrases%2A> właściwość zwraca bieżący stan <xref:System.Speech.Recognition.GrammarBuilder> jako ciąg.</span><span class="sxs-lookup"><span data-stu-id="3681d-116">To help with debugging, the <xref:System.Speech.Recognition.GrammarBuilder.DebugShowPhrases%2A> property returns the current status of the <xref:System.Speech.Recognition.GrammarBuilder> as a string.</span></span>  
  
 <span data-ttu-id="3681d-117">Aby uzyskać więcej informacji na temat tworzenia i używania gramatyki rozpoznawania mowy, zobacz [rozpoznawania mowy](https://docs.microsoft.com/previous-versions/office/developer/speech-technologies/hh361633(v=office.14)) i [tworzenia gramatyki GrammarBuilder](https://msdn.microsoft.com/library/7e2cc577-cb05-4318-9da3-7c8675d3d9ae).</span><span class="sxs-lookup"><span data-stu-id="3681d-117">For more information about building and using speech recognition grammars, see [Speech Recognition](https://docs.microsoft.com/previous-versions/office/developer/speech-technologies/hh361633(v=office.14)) and [Creating GrammarBuilder Grammars](https://msdn.microsoft.com/library/7e2cc577-cb05-4318-9da3-7c8675d3d9ae).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3681d-118">W poniższym przykładzie użyto <xref:System.Speech.Recognition.GrammarBuilder> i <xref:System.Speech.Recognition.Choices> obiekty do konstruowania gramatyki, który jest w stanie rozpoznać jednego z dwóch wyrażeń, "tło *colorChoice*" lub "Ustawianie tła *colorChoice*".</span><span class="sxs-lookup"><span data-stu-id="3681d-118">The following example uses  <xref:System.Speech.Recognition.GrammarBuilder> and <xref:System.Speech.Recognition.Choices> objects to construct a grammar that can recognize either of the two phrases, "Make background *colorChoice*" or "Set background to *colorChoice*".</span></span>  
  
 <span data-ttu-id="3681d-119">W przykładzie użyto <xref:System.Speech.Recognition.Choices> obiekt, aby utworzyć listę dopuszczalnymi wartościami *colorChoice* z tablicy <xref:System.String> obiektów.</span><span class="sxs-lookup"><span data-stu-id="3681d-119">The example uses a <xref:System.Speech.Recognition.Choices> object  to create a list of acceptable values for *colorChoice* from an array of <xref:System.String> objects.</span></span> <span data-ttu-id="3681d-120">A <xref:System.Speech.Recognition.Choices> obiektu jest odpowiednikiem `one-of` elementu w specyfikacji SRGS i zawiera zbiór fraz, które mogą być rozpoznawane podczas używany.</span><span class="sxs-lookup"><span data-stu-id="3681d-120">A <xref:System.Speech.Recognition.Choices> object is analogous to the `one-of` element in the SRGS specification, and contains a set of alternate phrases, any of which can be recognized when spoken.</span></span> <span data-ttu-id="3681d-121">W przykładzie użyto również <xref:System.Speech.Recognition.Choices> obiektu do grupy tablicę dwa <xref:System.Speech.Recognition.GrammarBuilder> obiektów w parę alternatywnych fraz, które gramatyki wynikowy może rozpoznać.</span><span class="sxs-lookup"><span data-stu-id="3681d-121">The example also uses a <xref:System.Speech.Recognition.Choices> object to group an array of two <xref:System.Speech.Recognition.GrammarBuilder> objects into a pair of alternative phrases that the resultant grammar can recognize.</span></span> <span data-ttu-id="3681d-122">Alternatywne słów i fraz są składnikiem większość gramatyki i <xref:System.Speech.Recognition.Choices> obiektu oferuje tę funkcję dla gramatyki skonstruowany przy użyciu <xref:System.Speech.Recognition.GrammarBuilder>.</span><span class="sxs-lookup"><span data-stu-id="3681d-122">Alternate words or phrases are a component of most grammars, and the <xref:System.Speech.Recognition.Choices> object provides this functionality for grammars constructed with <xref:System.Speech.Recognition.GrammarBuilder>.</span></span>  
  
 <span data-ttu-id="3681d-123">W przykładzie jest tworzony na koniec <xref:System.Speech.Recognition.Grammar> obiektu z <xref:System.Speech.Recognition.GrammarBuilder> skonstruowany na podstawie <xref:System.Speech.Recognition.Choices> obiektu.</span><span class="sxs-lookup"><span data-stu-id="3681d-123">The example finally creates a <xref:System.Speech.Recognition.Grammar> object from a <xref:System.Speech.Recognition.GrammarBuilder> constructed from a <xref:System.Speech.Recognition.Choices> object.</span></span>  
  
```csharp  
  
private Grammar CreateColorGrammar()  
{  
  
  // Create a set of color choices.  
  Choices colorChoice = new Choices(new string[] {"red", "green", "blue"});  
  GrammarBuilder colorElement = new GrammarBuilder(colorChoice);  
  
  // Create grammar builders for the two versions of the phrase.  
  GrammarBuilder makePhrase = new GrammarBuilder("Make background");  
  makePhrase.Append(colorElement);  
  GrammarBuilder setPhrase = new GrammarBuilder("Set background to");  
  setPhrase.Append(colorElement);  
  
  // Create a Choices for the two alternative phrases, convert the Choices  
  // to a GrammarBuilder, and construct the grammar from the result.  
  Choices bothChoices = new Choices(new GrammarBuilder[] {makePhrase, setPhrase});  
  Grammar grammar = new Grammar((GrammarBuilder)bothChoices);  
  grammar.Name = "backgroundColor";  
  return grammar;  
}  
  
```  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Speech.Recognition.Choices" />
    <altmember cref="T:System.Speech.Recognition.Grammar" />
    <altmember cref="T:System.Speech.Recognition.SemanticResultKey" />
    <altmember cref="T:System.Speech.Recognition.SemanticResultValue" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="3681d-124">Inicjuje nowe wystąpienie klasy <see cref="T:System.Speech.Recognition.GrammarBuilder" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="3681d-124">Initializes a new instance of the <see cref="T:System.Speech.Recognition.GrammarBuilder" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3681d-125">Wystąpienia tej klasy można uzyskać również niejawne konwersje z innych klas lub łącząc <xref:System.Speech.Recognition.GrammarBuilder> obiektu z drugi obiekt do z nową <xref:System.Speech.Recognition.GrammarBuilder>.</span><span class="sxs-lookup"><span data-stu-id="3681d-125">Instances of this class can also be obtained by implicit conversions from other classes or by combining a <xref:System.Speech.Recognition.GrammarBuilder> object with a second object to from a new <xref:System.Speech.Recognition.GrammarBuilder>.</span></span> <span data-ttu-id="3681d-126">Aby uzyskać więcej informacji, zobacz <xref:System.Speech.Recognition.GrammarBuilder.op_Implicit%2A> i <xref:System.Speech.Recognition.GrammarBuilder.op_Addition%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="3681d-126">For more information, see the <xref:System.Speech.Recognition.GrammarBuilder.op_Implicit%2A> and <xref:System.Speech.Recognition.GrammarBuilder.op_Addition%2A> methods.</span></span>  
  
 <span data-ttu-id="3681d-127">Można dodać ograniczeń do istniejącego <xref:System.Speech.Recognition.GrammarBuilder>, użyj <xref:System.Speech.Recognition.GrammarBuilder.Add%2A>, <xref:System.Speech.Recognition.GrammarBuilder.Append%2A>, <xref:System.Speech.Recognition.GrammarBuilder.AppendDictation%2A>, <xref:System.Speech.Recognition.GrammarBuilder.AppendRuleReference%2A>, i <xref:System.Speech.Recognition.GrammarBuilder.AppendWildcard%2A> metod i <xref:System.Speech.Recognition.GrammarBuilder.op_Addition%2A> operatora.</span><span class="sxs-lookup"><span data-stu-id="3681d-127">To add constraints to an existing <xref:System.Speech.Recognition.GrammarBuilder>, use the <xref:System.Speech.Recognition.GrammarBuilder.Add%2A>, <xref:System.Speech.Recognition.GrammarBuilder.Append%2A>, <xref:System.Speech.Recognition.GrammarBuilder.AppendDictation%2A>, <xref:System.Speech.Recognition.GrammarBuilder.AppendRuleReference%2A>, and <xref:System.Speech.Recognition.GrammarBuilder.AppendWildcard%2A> methods, and the <xref:System.Speech.Recognition.GrammarBuilder.op_Addition%2A> operator.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="3681d-128">Aparat rozpoznawania mowy może zgłosić wyjątek, korzystając z gramatyki rozpoznawania mowy, który zawiera zduplikowane elementy semantyki z taką samą nazwę klucza lub wielu elementów semantycznych, które wielokrotnie może modyfikować wartości tego samego elementu semantycznego.</span><span class="sxs-lookup"><span data-stu-id="3681d-128">The speech recognizer can throw an exception when using a speech recognition grammar that contains duplicate semantic elements with the same key name or multiple semantic elements that could repeatedly modify the value of the same semantic element.</span></span>
  
 <span data-ttu-id="3681d-129">Aby uzyskać więcej informacji na temat tworzenia i używania gramatyki rozpoznawania mowy, zobacz [rozpoznawania mowy](https://docs.microsoft.com/previous-versions/office/developer/speech-technologies/hh361633(v=office.14)) i [tworzenia gramatyki GrammarBuilder](https://msdn.microsoft.com/library/7e2cc577-cb05-4318-9da3-7c8675d3d9ae).</span><span class="sxs-lookup"><span data-stu-id="3681d-129">For more information about building and using speech recognition grammars, see [Speech Recognition](https://docs.microsoft.com/previous-versions/office/developer/speech-technologies/hh361633(v=office.14)) and [Creating GrammarBuilder Grammars](https://msdn.microsoft.com/library/7e2cc577-cb05-4318-9da3-7c8675d3d9ae).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Speech.Recognition.Choices" />
        <altmember cref="T:System.Speech.Recognition.Grammar" />
        <altmember cref="T:System.Speech.Recognition.SemanticResultKey" />
        <altmember cref="T:System.Speech.Recognition.SemanticResultValue" />
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public GrammarBuilder ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; GrammarBuilder();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="3681d-130">Inicjuje nowe puste wystąpienie elementu <see cref="T:System.Speech.Recognition.GrammarBuilder" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="3681d-130">Initializes a new, empty instance of the <see cref="T:System.Speech.Recognition.GrammarBuilder" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3681d-131">Aby dodać reguły do istniejącego <xref:System.Speech.Recognition.GrammarBuilder> obiektu, należy użyć <xref:System.Speech.Recognition.GrammarBuilder.Add%2A>, <xref:System.Speech.Recognition.GrammarBuilder.Append%2A>, <xref:System.Speech.Recognition.GrammarBuilder.AppendDictation%2A>, <xref:System.Speech.Recognition.GrammarBuilder.AppendRuleReference%2A>, i <xref:System.Speech.Recognition.GrammarBuilder.AppendWildcard%2A> metod i <xref:System.Speech.Recognition.GrammarBuilder.op_Addition%2A> operatora.</span><span class="sxs-lookup"><span data-stu-id="3681d-131">To add rules to an existing <xref:System.Speech.Recognition.GrammarBuilder> object, use the <xref:System.Speech.Recognition.GrammarBuilder.Add%2A>, <xref:System.Speech.Recognition.GrammarBuilder.Append%2A>, <xref:System.Speech.Recognition.GrammarBuilder.AppendDictation%2A>, <xref:System.Speech.Recognition.GrammarBuilder.AppendRuleReference%2A>, and <xref:System.Speech.Recognition.GrammarBuilder.AppendWildcard%2A> methods, and the <xref:System.Speech.Recognition.GrammarBuilder.op_Addition%2A> operator.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="3681d-132">Aparat rozpoznawania mowy może zgłosić wyjątek, korzystając z gramatyki rozpoznawania mowy, który zawiera zduplikowane elementy semantyki z taką samą nazwę klucza lub wielu elementów semantycznych, które wielokrotnie może modyfikować wartości tego samego elementu semantycznego.</span><span class="sxs-lookup"><span data-stu-id="3681d-132">The speech recognizer can throw an exception when using a speech recognition grammar that contains duplicate semantic elements with the same key name or multiple semantic elements that could repeatedly modify the value of the same semantic element.</span></span>
  
   
  
## Examples  
 <span data-ttu-id="3681d-133">W poniższym przykładzie użyto <xref:System.Speech.Recognition.GrammarBuilder> i <xref:System.Speech.Recognition.Choices> obiekty do konstruowania gramatyki, który jest w stanie rozpoznać jednego z dwóch wyrażeń, "tło *colorChoice*" lub "Ustawianie tła *colorChoice*".</span><span class="sxs-lookup"><span data-stu-id="3681d-133">The following example uses  <xref:System.Speech.Recognition.GrammarBuilder> and <xref:System.Speech.Recognition.Choices> objects to construct a grammar that can recognize either of the two phrases, "Make background *colorChoice*" or "Set background to *colorChoice*".</span></span>  
  
 <span data-ttu-id="3681d-134">W przykładzie użyto <xref:System.Speech.Recognition.Choices> obiekt, aby utworzyć listę dopuszczalnymi wartościami *colorChoice* z tablicy <xref:System.String> obiektów.</span><span class="sxs-lookup"><span data-stu-id="3681d-134">The example uses a <xref:System.Speech.Recognition.Choices> object  to create a list of acceptable values for *colorChoice* from an array of <xref:System.String> objects.</span></span> <span data-ttu-id="3681d-135">A <xref:System.Speech.Recognition.Choices> obiektu jest odpowiednikiem `one-of` elementu w specyfikacji SRGS i zawiera zbiór fraz, jednym z nich mogą być rozpoznawane podczas używany.</span><span class="sxs-lookup"><span data-stu-id="3681d-135">A <xref:System.Speech.Recognition.Choices> object is analogous to the `one-of` element in the SRGS specification, and contains a set of alternate phrases, any one of which can be recognized when spoken.</span></span> <span data-ttu-id="3681d-136">W przykładzie użyto również <xref:System.Speech.Recognition.Choices> obiektu do grupy tablicę dwa <xref:System.Speech.Recognition.GrammarBuilder> obiektów w parę alternatywnych fraz, które gramatyki wynikowy może rozpoznać.</span><span class="sxs-lookup"><span data-stu-id="3681d-136">The example also uses a <xref:System.Speech.Recognition.Choices> object to group an array of two <xref:System.Speech.Recognition.GrammarBuilder> objects into a pair of alternative phrases that the resultant grammar can recognize.</span></span> <span data-ttu-id="3681d-137">Alternatywne słów i fraz są składnikiem większość gramatyki i <xref:System.Speech.Recognition.Choices> obiektu oferuje tę funkcję dla gramatyki skonstruowany przy użyciu <xref:System.Speech.Recognition.GrammarBuilder>.</span><span class="sxs-lookup"><span data-stu-id="3681d-137">Alternate words or phrases are a component of most grammars, and the <xref:System.Speech.Recognition.Choices> object provides this functionality for grammars constructed with <xref:System.Speech.Recognition.GrammarBuilder>.</span></span>  
  
 <span data-ttu-id="3681d-138">W przykładzie jest tworzony na koniec <xref:System.Speech.Recognition.Grammar> obiektu z <xref:System.Speech.Recognition.GrammarBuilder> skonstruowany na podstawie <xref:System.Speech.Recognition.Choices> obiektu.</span><span class="sxs-lookup"><span data-stu-id="3681d-138">The example finally creates a <xref:System.Speech.Recognition.Grammar> object from a <xref:System.Speech.Recognition.GrammarBuilder> constructed from a <xref:System.Speech.Recognition.Choices> object.</span></span>  
  
```csharp  
  
private Grammar CreateColorGrammar()  
{  
  
  // Create a set of color choices.  
  Choices colorChoice = new Choices(new string[] {"red", "green", "blue"});  
  GrammarBuilder colorElement = new GrammarBuilder(colorChoice);  
  
  // Create grammar builders for the two versions of the phrase.  
  GrammarBuilder makePhrase = new GrammarBuilder("Make background");  
  makePhrase.Append(colorElement);  
  GrammarBuilder setPhrase = new GrammarBuilder("Set background to");  
  setPhrase.Append(colorElement);  
  
  // Create a Choices for the two alternative phrases, convert the Choices  
  // to a GrammarBuilder, and construct the Grammar object from the result.  
  GrammarBuilder bothPhrases = new GrammarBuilder();  
  Choices bothChoices = new Choices(new GrammarBuilder[] {makePhrase, setPhrase});  
  bothPhrases.Append(bothChoices);  
  Grammar grammar = new Grammar(bothPhrases);  
  grammar.Name = "backgroundColor";  
  return grammar;  
}  
  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Speech.Recognition.Choices" />
        <altmember cref="T:System.Speech.Recognition.Grammar" />
        <altmember cref="T:System.Speech.Recognition.SemanticResultKey" />
        <altmember cref="T:System.Speech.Recognition.SemanticResultValue" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public GrammarBuilder (System.Speech.Recognition.Choices alternateChoices);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Speech.Recognition.Choices alternateChoices) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.#ctor(System.Speech.Recognition.Choices)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (alternateChoices As Choices)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; GrammarBuilder(System::Speech::Recognition::Choices ^ alternateChoices);" />
      <MemberSignature Language="F#" Value="new System.Speech.Recognition.GrammarBuilder : System.Speech.Recognition.Choices -&gt; System.Speech.Recognition.GrammarBuilder" Usage="new System.Speech.Recognition.GrammarBuilder alternateChoices" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="alternateChoices" Type="System.Speech.Recognition.Choices" />
      </Parameters>
      <Docs>
        <param name="alternateChoices"><span data-ttu-id="3681d-139">Zestaw alternatyw.</span><span class="sxs-lookup"><span data-stu-id="3681d-139">The set of alternatives.</span></span></param>
        <summary><span data-ttu-id="3681d-140">Inicjuje nowe wystąpienie klasy <see cref="T:System.Speech.Recognition.GrammarBuilder" /> klasy z zestawu możliwości wyboru.</span><span class="sxs-lookup"><span data-stu-id="3681d-140">Initializes a new instance of the <see cref="T:System.Speech.Recognition.GrammarBuilder" /> class from a set of alternatives.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3681d-141">Aby uzyskać więcej informacji o tworzeniu gramatyki rozpoznawania mowy, zawierający rozwiązań alternatywnych, zobacz [przy użyciu opcji, aby utworzyć gramatyki GrammarBuilder](https://msdn.microsoft.com/library/5b18db18-a5f6-46a3-aa77-6d3141544efd).</span><span class="sxs-lookup"><span data-stu-id="3681d-141">For more information about building a speech recognition grammar that contains alternatives, see [Using Choices to Create a GrammarBuilder Grammar](https://msdn.microsoft.com/library/5b18db18-a5f6-46a3-aa77-6d3141544efd).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3681d-142">W poniższym przykładzie użyto <xref:System.Speech.Recognition.GrammarBuilder> i <xref:System.Speech.Recognition.Choices> obiekty do konstruowania gramatyki, który jest w stanie rozpoznać jednego z dwóch wyrażeń, "tło *colorChoice*" lub "Ustawianie tła *colorChoice*".</span><span class="sxs-lookup"><span data-stu-id="3681d-142">The following example uses  <xref:System.Speech.Recognition.GrammarBuilder> and <xref:System.Speech.Recognition.Choices> objects to construct a grammar that can recognize either of the two phrases, "Make background *colorChoice*" or "Set background to *colorChoice*".</span></span>  
  
 <span data-ttu-id="3681d-143">W przykładzie użyto <xref:System.Speech.Recognition.Choices> obiekt, aby utworzyć listę dopuszczalnymi wartościami *colorChoice* z tablicy <xref:System.String> obiektów.</span><span class="sxs-lookup"><span data-stu-id="3681d-143">The example uses a <xref:System.Speech.Recognition.Choices> object  to create a list of acceptable values for *colorChoice* from an array of <xref:System.String> objects.</span></span> <span data-ttu-id="3681d-144">A <xref:System.Speech.Recognition.Choices> obiektu jest odpowiednikiem `one-of` elementu w specyfikacji SRGS i zawiera zbiór fraz, które mogą być rozpoznawane podczas używany.</span><span class="sxs-lookup"><span data-stu-id="3681d-144">A <xref:System.Speech.Recognition.Choices> object is analogous to the `one-of` element in the SRGS specification, and contains a set of alternate phrases, any of which can be recognized when spoken.</span></span> <span data-ttu-id="3681d-145">W przykładzie użyto również <xref:System.Speech.Recognition.Choices> obiektu do grupy tablicę dwa <xref:System.Speech.Recognition.GrammarBuilder> obiektów w parę alternatywnych fraz, które gramatyki wynikowy może rozpoznać.</span><span class="sxs-lookup"><span data-stu-id="3681d-145">The example also uses a <xref:System.Speech.Recognition.Choices> object to group an array of two <xref:System.Speech.Recognition.GrammarBuilder> objects into a pair of alternative phrases that the resultant grammar can recognize.</span></span> <span data-ttu-id="3681d-146">Alternatywne słów i fraz są składnikiem większość gramatyki i <xref:System.Speech.Recognition.Choices> obiektu oferuje tę funkcję dla gramatyki skonstruowany przy użyciu <xref:System.Speech.Recognition.GrammarBuilder>.</span><span class="sxs-lookup"><span data-stu-id="3681d-146">Alternate words or phrases are a component of most grammars, and the <xref:System.Speech.Recognition.Choices> object provides this functionality for grammars constructed with <xref:System.Speech.Recognition.GrammarBuilder>.</span></span>  
  
 <span data-ttu-id="3681d-147">W przykładzie jest tworzony na koniec <xref:System.Speech.Recognition.Grammar> obiektu z <xref:System.Speech.Recognition.GrammarBuilder> skonstruowany na podstawie <xref:System.Speech.Recognition.Choices> obiektu.</span><span class="sxs-lookup"><span data-stu-id="3681d-147">The example finally creates a <xref:System.Speech.Recognition.Grammar> object from a <xref:System.Speech.Recognition.GrammarBuilder> constructed from a <xref:System.Speech.Recognition.Choices> object.</span></span>  
  
```csharp  
  
private Grammar CreateColorGrammar()  
{  
  
  // Create a set of color choices.  
  Choices colorChoice = new Choices(new string[] {"red", "green", "blue"});  
  GrammarBuilder colorElement = new GrammarBuilder(colorChoice);  
  
  // Create grammar builders for the two versions of the phrase.  
  GrammarBuilder makePhrase = new GrammarBuilder("Make background");  
  makePhrase.Append(colorElement);  
  GrammarBuilder setPhrase = new GrammarBuilder("Set background to");  
  setPhrase.Append(colorElement);  
  
  // Create a Choices for the two alternative phrases, convert the Choices  
  // to a GrammarBuilder, and construct the grammar from the result.  
  Choices bothChoices = new Choices(new GrammarBuilder[] {makePhrase, setPhrase});  
  Grammar grammar = new Grammar((GrammarBuilder)bothChoices);  
  grammar.Name = "backgroundColor";  
  return grammar;  
}  
  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Speech.Recognition.Choices" />
        <altmember cref="T:System.Speech.Recognition.Grammar" />
        <altmember cref="T:System.Speech.Recognition.SemanticResultKey" />
        <altmember cref="T:System.Speech.Recognition.SemanticResultValue" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public GrammarBuilder (System.Speech.Recognition.SemanticResultKey key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Speech.Recognition.SemanticResultKey key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.#ctor(System.Speech.Recognition.SemanticResultKey)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (key As SemanticResultKey)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; GrammarBuilder(System::Speech::Recognition::SemanticResultKey ^ key);" />
      <MemberSignature Language="F#" Value="new System.Speech.Recognition.GrammarBuilder : System.Speech.Recognition.SemanticResultKey -&gt; System.Speech.Recognition.GrammarBuilder" Usage="new System.Speech.Recognition.GrammarBuilder key" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="key" Type="System.Speech.Recognition.SemanticResultKey" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="3681d-148">Klucz semantycznego.</span><span class="sxs-lookup"><span data-stu-id="3681d-148">The semantic key.</span></span></param>
        <summary><span data-ttu-id="3681d-149">Inicjuje nowe wystąpienie klasy <see cref="T:System.Speech.Recognition.GrammarBuilder" /> klasy z kluczem semantycznego.</span><span class="sxs-lookup"><span data-stu-id="3681d-149">Initializes a new instance of the <see cref="T:System.Speech.Recognition.GrammarBuilder" /> class from a semantic key.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3681d-150">Po utworzeniu <xref:System.Speech.Recognition.GrammarBuilder> wystąpienia z <xref:System.Speech.Recognition.SemanticResultValue> obiektu, Dodaj informacji semantycznych do gramatyki, które mogą być zwrócone w wyniku rozpoznawania.</span><span class="sxs-lookup"><span data-stu-id="3681d-150">When you create a <xref:System.Speech.Recognition.GrammarBuilder> instance from a <xref:System.Speech.Recognition.SemanticResultValue> object, you add semantic information to the grammar that can be returned in the recognition result.</span></span> <span data-ttu-id="3681d-151">Dostęp informacji semantycznych do rozpoznawania wyników przy użyciu <xref:System.Speech.Recognition.RecognizedPhrase.Semantics%2A> właściwość <xref:System.Speech.Recognition.RecognizedPhrase>, który jest dostępny w obsłudze dla `SpeechRecognized` zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="3681d-151">You can access the semantic information in the recognition result using the <xref:System.Speech.Recognition.RecognizedPhrase.Semantics%2A> property of <xref:System.Speech.Recognition.RecognizedPhrase>, which is available in the handler for the `SpeechRecognized` event.</span></span> <span data-ttu-id="3681d-152">Jeśli <xref:System.Speech.Recognition.GrammarBuilder> definiuje <xref:System.Speech.Recognition.SemanticResultKey>, to może służyć do pobierania informacji semantycznych w wyniku rozpoznawania, który jest skojarzony z kluczem.</span><span class="sxs-lookup"><span data-stu-id="3681d-152">If the <xref:System.Speech.Recognition.GrammarBuilder> defines a <xref:System.Speech.Recognition.SemanticResultKey>, this can be used to retrieve the semantic information in a recognition result that is associated with the key.</span></span> <span data-ttu-id="3681d-153">Zobacz przykład <xref:System.Speech.Recognition.GrammarBuilder.Append%28System.Speech.Recognition.SemanticResultKey%29>oraz <xref:System.Speech.Recognition.SemanticResultValue> i <xref:System.Speech.Recognition.SemanticResultKey>.</span><span class="sxs-lookup"><span data-stu-id="3681d-153">See the example for <xref:System.Speech.Recognition.GrammarBuilder.Append%28System.Speech.Recognition.SemanticResultKey%29>, and also see <xref:System.Speech.Recognition.SemanticResultValue> and <xref:System.Speech.Recognition.SemanticResultKey>.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="3681d-154">Podczas konstruowania <xref:System.Speech.Recognition.GrammarBuilder> obiektów, które zawierają <xref:System.Speech.Recognition.SemanticResultValue> lub <xref:System.Speech.Recognition.SemanticResultKey> wystąpienia, upewnij się, można uniknąć tworzenia zduplikowane elementy semantyki z taką samą nazwę klucza lub wielu elementów semantycznych, które wielokrotnie można zmodyfikować <xref:System.Speech.Recognition.SemanticValue.Value%2A> Właściwość <xref:System.Speech.Recognition.SemanticValue> obiektu.</span><span class="sxs-lookup"><span data-stu-id="3681d-154">When you construct <xref:System.Speech.Recognition.GrammarBuilder> objects that contain <xref:System.Speech.Recognition.SemanticResultValue> or <xref:System.Speech.Recognition.SemanticResultKey> instances, make sure you avoid creating duplicate semantic elements with the same key name or multiple semantic elements that could repeatedly modify the <xref:System.Speech.Recognition.SemanticValue.Value%2A> property of a <xref:System.Speech.Recognition.SemanticValue> object.</span></span> <span data-ttu-id="3681d-155">Aparat rozpoznawania mowy może zgłosić wyjątek, jeśli wykryje nieważną tych okolicznościach.</span><span class="sxs-lookup"><span data-stu-id="3681d-155">The speech recognizer can throw an exception if it encounters these circumstances.</span></span> 
  
   
  
## Examples  
 <span data-ttu-id="3681d-156">Poniższy przykład tworzy gramatyki rozpoznawania mowy, który może rozpoznawać dwóch wyrażeń, "tło *colorChoice*" i "Ustawianie tła *colorChoice*", gdzie  *colorChoice* wybrano zestaw kolorów.</span><span class="sxs-lookup"><span data-stu-id="3681d-156">The following example creates a speech recognition grammar that can recognize the two phrases, "Make background *colorChoice*" and "Set background to *colorChoice*", where *colorChoice* is selected from a set of colors.</span></span> <span data-ttu-id="3681d-157">Gramatyka umożliwia użytkownikowi współpracuje z żadnym z kilku nazw kolorów i zwraca semantycznego informacji o nazwie rozpoznawanym kolorów do aplikacji.</span><span class="sxs-lookup"><span data-stu-id="3681d-157">The grammar lets a user speak any of several color names, and returns semantic information about the recognized color name to the application.</span></span>  
  
 <span data-ttu-id="3681d-158">W przykładzie użyto jednego <xref:System.Speech.Recognition.SemanticResultKey> za pomocą którego można pobrać <xref:System.Speech.Recognition.SemanticValue> , która jest skojarzona z kolorem używany przez użytkownika.</span><span class="sxs-lookup"><span data-stu-id="3681d-158">The example uses a single <xref:System.Speech.Recognition.SemanticResultKey> with which you can retrieve the <xref:System.Speech.Recognition.SemanticValue> that is associated with the color spoken by the user.</span></span> <span data-ttu-id="3681d-159">Na przykład, jeśli dane wejściowe zawierają frazę "Zestaw tła na czerwony," wynik rozpoznawania zawiera semantyczną wartość "#ff0000", który można pobrać przy użyciu programu obsługi dla `SpeechRecognized` zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="3681d-159">For example, if the input contains the phrase, "Set background to red", the recognition result contains the semantic value of "#FF0000", which you can retrieve using a handler for the `SpeechRecognized` event.</span></span>  
  
 <span data-ttu-id="3681d-160">W przykładzie użyto <xref:System.String>, <xref:System.Speech.Recognition.Choices>, <xref:System.Speech.Recognition.SemanticResultKey>, <xref:System.Speech.Recognition.SemanticResultValue>, i <xref:System.Speech.Recognition.GrammarBuilder> obiekty do kompilacji zawarte w ciągu ostatnich ograniczenia <xref:System.Speech.Recognition.GrammarBuilder> obiektu `bothPhrases`.</span><span class="sxs-lookup"><span data-stu-id="3681d-160">The example uses <xref:System.String>, <xref:System.Speech.Recognition.Choices>, <xref:System.Speech.Recognition.SemanticResultKey>, <xref:System.Speech.Recognition.SemanticResultValue>, and <xref:System.Speech.Recognition.GrammarBuilder> objects to build the constraints that are all contained in the last <xref:System.Speech.Recognition.GrammarBuilder> object, `bothPhrases`.</span></span> <span data-ttu-id="3681d-161">Na koniec przykład tworzy <xref:System.Speech.Recognition.Grammar> obiekt z ukończoną <xref:System.Speech.Recognition.GrammarBuilder>.</span><span class="sxs-lookup"><span data-stu-id="3681d-161">Finally, the example constructs a <xref:System.Speech.Recognition.Grammar> object from the completed <xref:System.Speech.Recognition.GrammarBuilder>.</span></span>  
  
```csharp  
  
private Grammar CreateColorGrammar()  
{  
  
  // Create a set of color choices.  
  // Include semantic information about each of the colors.  
  Choices colorChoice = new Choices();  
  
  GrammarBuilder colorBuilder = new GrammarBuilder("red");  
  SemanticResultValue colorValue =  
    new SemanticResultValue(colorBuilder, "#FF0000");  
  colorChoice.Add(new GrammarBuilder(colorValue));  
  
  colorBuilder = new GrammarBuilder("green");  
  colorValue = new SemanticResultValue(colorBuilder, "#00FF00");  
  colorChoice.Add(new GrammarBuilder(colorValue));  
  
  colorBuilder = new GrammarBuilder("blue");  
  colorValue = new SemanticResultValue(colorBuilder, "#0000FF");  
  colorChoice.Add(new GrammarBuilder(colorValue));  
  
  GrammarBuilder colorElement = new GrammarBuilder(colorChoice);  
  
  // Create grammar builders for the two versions of the phrase.  
  GrammarBuilder makePhrase = new GrammarBuilder("Make background");  
  makePhrase.Append(colorElement);  
  GrammarBuilder setPhrase = new GrammarBuilder("Set background to");  
  setPhrase.Append(colorElement);  
  
  // Create a Choices object for the two alternative phrases.  
  Choices bothChoices = new Choices(new GrammarBuilder[] {makePhrase, setPhrase});  
  GrammarBuilder bothPhrases = new GrammarBuilder(bothChoices);  
  
  // Create the semantic key for referencing the color information.  
  SemanticResultKey colorKey =  
    new SemanticResultKey("ColorCode", bothPhrases);  
  bothPhrases = new GrammarBuilder(colorKey);  
  
  // Construct the Grammar object from the GrammarBuilder.  
  Grammar grammar = new Grammar(bothPhrases);  
  grammar.Name = "backgroundColor";  
  return grammar;  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Speech.Recognition.Choices" />
        <altmember cref="T:System.Speech.Recognition.Grammar" />
        <altmember cref="T:System.Speech.Recognition.SemanticResultKey" />
        <altmember cref="T:System.Speech.Recognition.SemanticResultValue" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public GrammarBuilder (System.Speech.Recognition.SemanticResultValue value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Speech.Recognition.SemanticResultValue value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.#ctor(System.Speech.Recognition.SemanticResultValue)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (value As SemanticResultValue)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; GrammarBuilder(System::Speech::Recognition::SemanticResultValue ^ value);" />
      <MemberSignature Language="F#" Value="new System.Speech.Recognition.GrammarBuilder : System.Speech.Recognition.SemanticResultValue -&gt; System.Speech.Recognition.GrammarBuilder" Usage="new System.Speech.Recognition.GrammarBuilder value" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="value" Type="System.Speech.Recognition.SemanticResultValue" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="3681d-162">Semantyczne para wartości lub nazwa/wartość.</span><span class="sxs-lookup"><span data-stu-id="3681d-162">The semantic value or name/value pair.</span></span></param>
        <summary><span data-ttu-id="3681d-163">Inicjuje nowe wystąpienie klasy <see cref="T:System.Speech.Recognition.GrammarBuilder" /> klasy z wartością semantycznego.</span><span class="sxs-lookup"><span data-stu-id="3681d-163">Initializes a new instance of the <see cref="T:System.Speech.Recognition.GrammarBuilder" /> class from a semantic value.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3681d-164">Po utworzeniu <xref:System.Speech.Recognition.GrammarBuilder> wystąpienia z <xref:System.Speech.Recognition.SemanticResultValue> obiektu, Dodaj informacji semantycznych do gramatyki, które mogą być zwrócone w wyniku rozpoznawania.</span><span class="sxs-lookup"><span data-stu-id="3681d-164">When you create a <xref:System.Speech.Recognition.GrammarBuilder> instance from a <xref:System.Speech.Recognition.SemanticResultValue> object, you add semantic information to the grammar that can be returned in the recognition result.</span></span> <span data-ttu-id="3681d-165">Dostęp informacji semantycznych do rozpoznawania wyników przy użyciu <xref:System.Speech.Recognition.RecognizedPhrase.Semantics%2A> właściwość <xref:System.Speech.Recognition.RecognizedPhrase>, który jest dostępny w obsłudze dla `SpeechRecognized` zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="3681d-165">You can access the semantic information in the recognition result using the <xref:System.Speech.Recognition.RecognizedPhrase.Semantics%2A> property of <xref:System.Speech.Recognition.RecognizedPhrase>, which is available in the handler for the `SpeechRecognized` event.</span></span> <span data-ttu-id="3681d-166">Jeśli <xref:System.Speech.Recognition.GrammarBuilder> definiuje <xref:System.Speech.Recognition.SemanticResultKey>, to może służyć do pobierania informacji semantycznych w wyniku rozpoznawania, który jest skojarzony z kluczem.</span><span class="sxs-lookup"><span data-stu-id="3681d-166">If the <xref:System.Speech.Recognition.GrammarBuilder> defines a <xref:System.Speech.Recognition.SemanticResultKey>, this can be used to retrieve the semantic information in a recognition result that is associated with the key.</span></span> <span data-ttu-id="3681d-167">Zobacz przykład <xref:System.Speech.Recognition.GrammarBuilder.Append%28System.Speech.Recognition.SemanticResultKey%29>oraz <xref:System.Speech.Recognition.SemanticResultValue> i <xref:System.Speech.Recognition.SemanticResultKey>.</span><span class="sxs-lookup"><span data-stu-id="3681d-167">See the example for <xref:System.Speech.Recognition.GrammarBuilder.Append%28System.Speech.Recognition.SemanticResultKey%29>, and also see <xref:System.Speech.Recognition.SemanticResultValue> and <xref:System.Speech.Recognition.SemanticResultKey>.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="3681d-168">Podczas konstruowania <xref:System.Speech.Recognition.GrammarBuilder> obiektów, które zawierają <xref:System.Speech.Recognition.SemanticResultValue> lub <xref:System.Speech.Recognition.SemanticResultKey> wystąpienia, upewnij się, można uniknąć tworzenia zduplikowane elementy semantyki z taką samą nazwę klucza lub wielu elementów semantycznych, które wielokrotnie można zmodyfikować <xref:System.Speech.Recognition.SemanticValue.Value%2A> Właściwość <xref:System.Speech.Recognition.SemanticValue> obiektu.</span><span class="sxs-lookup"><span data-stu-id="3681d-168">When you construct <xref:System.Speech.Recognition.GrammarBuilder> objects that contain <xref:System.Speech.Recognition.SemanticResultValue> or <xref:System.Speech.Recognition.SemanticResultKey> instances, make sure you avoid creating duplicate semantic elements with the same key name or multiple semantic elements that could repeatedly modify the <xref:System.Speech.Recognition.SemanticValue.Value%2A> property of a <xref:System.Speech.Recognition.SemanticValue> object.</span></span> <span data-ttu-id="3681d-169">Aparat rozpoznawania mowy może zgłosić wyjątek, jeśli wykryje nieważną tych okolicznościach.</span><span class="sxs-lookup"><span data-stu-id="3681d-169">The speech recognizer can throw an exception if it encounters these circumstances.</span></span> 
  
   
  
## Examples  
 <span data-ttu-id="3681d-170">Poniższy przykład tworzy gramatyki rozpoznawania mowy, który może rozpoznawać dwóch wyrażeń, "tło *colorChoice*" i "Ustawianie tła *colorChoice*", gdzie  *colorChoice* wybrano zestaw kolorów.</span><span class="sxs-lookup"><span data-stu-id="3681d-170">The following example creates a speech recognition grammar that can recognize the two phrases, "Make background *colorChoice*" and "Set background to *colorChoice*", where *colorChoice* is selected from a set of colors.</span></span> <span data-ttu-id="3681d-171">Gramatyka umożliwia użytkownikowi współpracuje z żadnym z kilku nazw kolorów i zwraca semantycznego informacji o nazwie rozpoznawanym kolorów do aplikacji.</span><span class="sxs-lookup"><span data-stu-id="3681d-171">The grammar lets a user speak any of several color names, and returns semantic information about the recognized color name to the application.</span></span>  
  
 <span data-ttu-id="3681d-172">W przykładzie użyto jednego <xref:System.Speech.Recognition.SemanticResultKey> za pomocą którego można pobrać <xref:System.Speech.Recognition.SemanticValue> , która jest skojarzona z kolorem używany przez użytkownika.</span><span class="sxs-lookup"><span data-stu-id="3681d-172">The example uses a single <xref:System.Speech.Recognition.SemanticResultKey> with which you can retrieve the <xref:System.Speech.Recognition.SemanticValue> that is associated with the color spoken by the user.</span></span> <span data-ttu-id="3681d-173">Na przykład, jeśli dane wejściowe zawierają frazę "Zestaw tła na czerwony," wynik rozpoznawania zawiera semantyczną wartość "#ff0000", który można pobrać przy użyciu programu obsługi dla `SpeechRecognized` zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="3681d-173">For example, if the input contains the phrase, "Set background to red", the recognition result contains the semantic value of "#FF0000", which you can retrieve using a handler for the `SpeechRecognized` event.</span></span>  
  
 <span data-ttu-id="3681d-174">W przykładzie użyto <xref:System.String>, <xref:System.Speech.Recognition.Choices>, <xref:System.Speech.Recognition.SemanticResultKey>, <xref:System.Speech.Recognition.SemanticResultValue>, i <xref:System.Speech.Recognition.GrammarBuilder> obiekty do kompilacji zawarte w ciągu ostatnich ograniczenia <xref:System.Speech.Recognition.GrammarBuilder> obiektu `bothPhrases`.</span><span class="sxs-lookup"><span data-stu-id="3681d-174">The example uses <xref:System.String>, <xref:System.Speech.Recognition.Choices>, <xref:System.Speech.Recognition.SemanticResultKey>, <xref:System.Speech.Recognition.SemanticResultValue>, and <xref:System.Speech.Recognition.GrammarBuilder> objects to build the constraints that are all contained in the last <xref:System.Speech.Recognition.GrammarBuilder> object, `bothPhrases`.</span></span> <span data-ttu-id="3681d-175">Na koniec przykład tworzy <xref:System.Speech.Recognition.Grammar> obiekt z ukończoną <xref:System.Speech.Recognition.GrammarBuilder>.</span><span class="sxs-lookup"><span data-stu-id="3681d-175">Finally, the example constructs a <xref:System.Speech.Recognition.Grammar> object from the completed <xref:System.Speech.Recognition.GrammarBuilder>.</span></span>  
  
```csharp  
  
private Grammar CreateColorGrammar()  
{  
  
  // Create a set of color choices.  
  // Include semantic information about each of the colors.  
  Choices colorChoice = new Choices();  
  
  GrammarBuilder colorBuilder = new GrammarBuilder("red");  
  SemanticResultValue colorValue =  
    new SemanticResultValue(colorBuilder, "#FF0000");  
  colorChoice.Add(new GrammarBuilder(colorValue));  
  
  colorBuilder = new GrammarBuilder("green");  
  colorValue = new SemanticResultValue(colorBuilder, "#00FF00");  
  colorChoice.Add(new GrammarBuilder(colorValue));  
  
  colorBuilder = new GrammarBuilder("blue");  
  colorValue = new SemanticResultValue(colorBuilder, "#0000FF");  
  colorChoice.Add(new GrammarBuilder(colorValue));  
  
  GrammarBuilder colorElement = new GrammarBuilder(colorChoice);  
  
  // Create grammar builders for the two versions of the phrase.  
  GrammarBuilder makePhrase = new GrammarBuilder("Make background");  
  makePhrase.Append(colorElement);  
  GrammarBuilder setPhrase = new GrammarBuilder("Set background to");  
  setPhrase.Append(colorElement);  
  
  // Create a Choices for the two alternative phrases.  
  Choices bothChoices = new Choices(new GrammarBuilder[] {makePhrase, setPhrase});  
  GrammarBuilder bothPhrases = new GrammarBuilder(bothChoices);  
  
  // Create the semantic key for referencing the color information.  
  SemanticResultKey colorKey =  
    new SemanticResultKey("ColorCode", bothPhrases);  
  bothPhrases = new GrammarBuilder(colorKey);  
  
  // Construct the grammar from the grammar builder.  
  Grammar grammar = new Grammar(bothPhrases);  
  grammar.Name = "backgroundColor";  
  return grammar;  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Speech.Recognition.Choices" />
        <altmember cref="T:System.Speech.Recognition.Grammar" />
        <altmember cref="T:System.Speech.Recognition.SemanticResultKey" />
        <altmember cref="T:System.Speech.Recognition.SemanticResultValue" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public GrammarBuilder (string phrase);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string phrase) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (phrase As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; GrammarBuilder(System::String ^ phrase);" />
      <MemberSignature Language="F#" Value="new System.Speech.Recognition.GrammarBuilder : string -&gt; System.Speech.Recognition.GrammarBuilder" Usage="new System.Speech.Recognition.GrammarBuilder phrase" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="phrase" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="phrase"><span data-ttu-id="3681d-176">Sekwencji wyrazów.</span><span class="sxs-lookup"><span data-stu-id="3681d-176">The sequence of words.</span></span></param>
        <summary><span data-ttu-id="3681d-177">Inicjuje nowe wystąpienie klasy <see cref="T:System.Speech.Recognition.GrammarBuilder" /> klasy z sekwencji wyrazów.</span><span class="sxs-lookup"><span data-stu-id="3681d-177">Initializes a new instance of the <see cref="T:System.Speech.Recognition.GrammarBuilder" /> class from a sequence of words.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3681d-178">Wyrażenie reprezentuje dokładnej frazy prowadzone rozpoznającego gramatyki rozpoznawania mowy.</span><span class="sxs-lookup"><span data-stu-id="3681d-178">The phrase represents an exact spoken phrase that the speech recognition grammar can recognize.</span></span> <span data-ttu-id="3681d-179">Aby uzyskać więcej informacji o tworzeniu gramatyki rozpoznawania mowy, zawiera ciągi, zobacz [przy użyciu parametrów do utworzenia gramatyki GrammarBuilder](https://msdn.microsoft.com/library/0d87b445-a342-4369-9b3f-91d07fd7e114).</span><span class="sxs-lookup"><span data-stu-id="3681d-179">For more information about building a speech recognition grammar that contains strings, see [Using Strings to Create a GrammarBuilder Grammar](https://msdn.microsoft.com/library/0d87b445-a342-4369-9b3f-91d07fd7e114).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3681d-180">W poniższym przykładzie użyto <xref:System.Speech.Recognition.GrammarBuilder> i <xref:System.Speech.Recognition.Choices> obiekty do konstruowania gramatyki, który jest w stanie rozpoznać jednego z dwóch wyrażeń, "tło *colorChoice*" lub "Ustawianie tła *colorChoice*".</span><span class="sxs-lookup"><span data-stu-id="3681d-180">The following example uses  <xref:System.Speech.Recognition.GrammarBuilder> and <xref:System.Speech.Recognition.Choices> objects to construct a grammar that can recognize either of the two phrases, "Make background *colorChoice*" or "Set background to *colorChoice*".</span></span>  
  
 <span data-ttu-id="3681d-181">Po utworzeniu listy dopuszczalnymi wartościami *colorChoice* przy użyciu <xref:System.Speech.Recognition.Choices> obiektu przykład inicjuje dwa <xref:System.Speech.Recognition.GrammarBuilder> obiektów `makePhrase` i `setPhrase`, przy użyciu parametrów jako argumentu.</span><span class="sxs-lookup"><span data-stu-id="3681d-181">After creating a list of acceptable values for *colorChoice* using a <xref:System.Speech.Recognition.Choices> object, the example initializes two <xref:System.Speech.Recognition.GrammarBuilder> objects, `makePhrase` and `setPhrase`, using a string as an argument.</span></span>  
  
 <span data-ttu-id="3681d-182">W przykładzie jest tworzony na koniec <xref:System.Speech.Recognition.Grammar> obiektu z <xref:System.Speech.Recognition.Choices> obiekt rzutowany <xref:System.Speech.Recognition.GrammarBuilder> obiektu.</span><span class="sxs-lookup"><span data-stu-id="3681d-182">The example finally creates a <xref:System.Speech.Recognition.Grammar> object from a <xref:System.Speech.Recognition.Choices> object cast to a <xref:System.Speech.Recognition.GrammarBuilder> object.</span></span>  
  
```csharp  
  
private Grammar CreateColorGrammar()  
{  
  
  // Create a set of color choices.  
  Choices colorChoice = new Choices(new string[] {"red", "green", "blue"});  
  GrammarBuilder colorElement = new GrammarBuilder(colorChoice);  
  
  // Create grammar builders for the two versions of the phrase.  
  GrammarBuilder makePhrase = new GrammarBuilder("Make background");  
  makePhrase.Append(colorElement);  
  GrammarBuilder setPhrase = new GrammarBuilder("Set background to");  
  setPhrase.Append(colorElement);  
  
  // Create a Choices for the two alternative phrases, convert the Choices  
  // to a GrammarBuilder, and construct the Grammar object from the result.  
  Choices bothChoices = new Choices(new GrammarBuilder[] {makePhrase, setPhrase});  
  Grammar grammar = new Grammar((GrammarBuilder)bothChoices);  
  grammar.Name = "backgroundColor";  
  return grammar;  
}  
  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Speech.Recognition.Choices" />
        <altmember cref="T:System.Speech.Recognition.Grammar" />
        <altmember cref="T:System.Speech.Recognition.SemanticResultKey" />
        <altmember cref="T:System.Speech.Recognition.SemanticResultValue" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public GrammarBuilder (string phrase, System.Speech.Recognition.SubsetMatchingMode subsetMatchingCriteria);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string phrase, valuetype System.Speech.Recognition.SubsetMatchingMode subsetMatchingCriteria) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.#ctor(System.String,System.Speech.Recognition.SubsetMatchingMode)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (phrase As String, subsetMatchingCriteria As SubsetMatchingMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; GrammarBuilder(System::String ^ phrase, System::Speech::Recognition::SubsetMatchingMode subsetMatchingCriteria);" />
      <MemberSignature Language="F#" Value="new System.Speech.Recognition.GrammarBuilder : string * System.Speech.Recognition.SubsetMatchingMode -&gt; System.Speech.Recognition.GrammarBuilder" Usage="new System.Speech.Recognition.GrammarBuilder (phrase, subsetMatchingCriteria)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="phrase" Type="System.String" />
        <Parameter Name="subsetMatchingCriteria" Type="System.Speech.Recognition.SubsetMatchingMode" />
      </Parameters>
      <Docs>
        <param name="phrase"><span data-ttu-id="3681d-183">Sekwencji wyrazów.</span><span class="sxs-lookup"><span data-stu-id="3681d-183">The sequence of words.</span></span></param>
        <param name="subsetMatchingCriteria"><span data-ttu-id="3681d-184">Tryb pasującego gramatyki rozpoznawania mowy jest używany do rozpoznawania frazę.</span><span class="sxs-lookup"><span data-stu-id="3681d-184">The matching mode the speech recognition grammar uses to recognize the phrase.</span></span></param>
        <summary><span data-ttu-id="3681d-185">Inicjuje nowe wystąpienie klasy <see cref="T:System.Speech.Recognition.GrammarBuilder" /> klasy dla podzbioru sekwencji wyrazów.</span><span class="sxs-lookup"><span data-stu-id="3681d-185">Initializes a new instance of the <see cref="T:System.Speech.Recognition.GrammarBuilder" /> class for a subset of a sequence of words.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3681d-186">`phrase` Parametr reprezentuje frazę, która może rozpoznawać gramatyki rozpoznawania mowy.</span><span class="sxs-lookup"><span data-stu-id="3681d-186">The `phrase` parameter represents the phrase that the speech recognition grammar can recognize.</span></span> <span data-ttu-id="3681d-187">`subsetMatchingMode` Parametr określa podzestaw frazę, która może być wymawiane do osiągnięcia pomyślne rozpoznawanie cała fraza.</span><span class="sxs-lookup"><span data-stu-id="3681d-187">The `subsetMatchingMode` parameter specifies a subset of the phrase that can be spoken to achieve successful recognition of the entire phrase.</span></span> <span data-ttu-id="3681d-188">Możesz użyć tego, aby utworzyć gramatyki z listą wpisów, które mają długie nazwy bez wymagania od użytkowników mówić całą nazwę, aby pasować do elementu.</span><span class="sxs-lookup"><span data-stu-id="3681d-188">You can use this to create a grammar with a list of entries that have long names, without requiring users to speak an entire name to match an item.</span></span>  
  
 <span data-ttu-id="3681d-189">Aby uzyskać więcej informacji na temat trybów pasującego zobacz <xref:System.Speech.Recognition.SubsetMatchingMode>.</span><span class="sxs-lookup"><span data-stu-id="3681d-189">For more information about the matching modes, see <xref:System.Speech.Recognition.SubsetMatchingMode>.</span></span> <span data-ttu-id="3681d-190">Aby uzyskać więcej informacji o tworzeniu gramatyki rozpoznawania mowy, zawiera ciągi, zobacz [przy użyciu parametrów do utworzenia gramatyki GrammarBuilder](https://msdn.microsoft.com/library/0d87b445-a342-4369-9b3f-91d07fd7e114).</span><span class="sxs-lookup"><span data-stu-id="3681d-190">For more information about building a speech recognition grammar that contains strings, see [Using Strings to Create a GrammarBuilder Grammar](https://msdn.microsoft.com/library/0d87b445-a342-4369-9b3f-91d07fd7e114).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3681d-191">Poniższy przykład tworzy gramatyki rozpoznawania mowy, dla każdego <xref:System.Speech.Recognition.SubsetMatchingMode> wartość i gramatyki dotyczące wybierania pomiędzy pasującego gramatyki trybu.</span><span class="sxs-lookup"><span data-stu-id="3681d-191">The following example creates a speech recognition grammar for each <xref:System.Speech.Recognition.SubsetMatchingMode> value and a grammar for choosing between the matching mode grammars.</span></span> <span data-ttu-id="3681d-192">Jeśli wartość `phrase` jest "jeden dwa trzy cztery pięć sześć siedem", gramatyki Podsekwencję rozpoznaje dane wejściowe, a następnie "dwóch trzy cztery", ale nie dane wejściowe "co trzy pięć".</span><span class="sxs-lookup"><span data-stu-id="3681d-192">If the value of `phrase` is "one two three four five six seven", then the Subsequence grammar recognizes the input "two three four", but not the input "one three five".</span></span> <span data-ttu-id="3681d-193">Jednak gramatyki uporządkowane podzbioru rozpoznaje oba te dane wejściowe.</span><span class="sxs-lookup"><span data-stu-id="3681d-193">However, the Ordered Subset grammar recognizes both of these inputs.</span></span>  
  
```csharp  
  
private static IEnumerable<Grammar>  
  CreateMatchingModeGrammars(string phrase)  
{  
  List<Grammar> grammars = new List<Grammar>(5);  
  
  Choices modeChoice = new Choices();  
  Type enumType = typeof(SubsetMatchingMode);  
  foreach (SubsetMatchingMode mode in Enum.GetValues(enumType))  
  {  
    string modeName = Enum.GetName(enumType, mode);  
    modeName = BreakAtCaps(modeName);  
  
    GrammarBuilder builder = new GrammarBuilder(phrase, mode);  
    Grammar modeGrammar = new Grammar(builder);  
    modeGrammar.Name = modeName;  
    modeGrammar.Enabled = false;  
    grammars.Add(modeGrammar);  
  
    modeChoice.Add(modeName);  
  }  
  
  Grammar choiceGrammar = new Grammar(modeChoice);  
  choiceGrammar.Name = "choice";  
  grammars.Add(choiceGrammar);  
  
  return grammars;  
}  
  
// Insert spaces preceding each uppercase letter in a string.   
private static string BreakAtCaps(string item)  
{  
  if (item == null || item.Length == 0)  
  {  
    return item;  
  }  
  
  StringBuilder sb = new StringBuilder(item[0].ToString());  
  for (int i = 1; i < item.Length; i++)  
  {  
    char c = item[i];  
    if (char.IsUpper(c))  
    {  
      sb.Append(" ");  
    }  
    sb.Append(c);  
  }  
  
  return sb.ToString();  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Speech.Recognition.SubsetMatchingMode" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public GrammarBuilder (System.Speech.Recognition.GrammarBuilder builder, int minRepeat, int maxRepeat);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Speech.Recognition.GrammarBuilder builder, int32 minRepeat, int32 maxRepeat) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.#ctor(System.Speech.Recognition.GrammarBuilder,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (builder As GrammarBuilder, minRepeat As Integer, maxRepeat As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; GrammarBuilder(System::Speech::Recognition::GrammarBuilder ^ builder, int minRepeat, int maxRepeat);" />
      <MemberSignature Language="F#" Value="new System.Speech.Recognition.GrammarBuilder : System.Speech.Recognition.GrammarBuilder * int * int -&gt; System.Speech.Recognition.GrammarBuilder" Usage="new System.Speech.Recognition.GrammarBuilder (builder, minRepeat, maxRepeat)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="builder" Type="System.Speech.Recognition.GrammarBuilder" />
        <Parameter Name="minRepeat" Type="System.Int32" />
        <Parameter Name="maxRepeat" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="builder"><span data-ttu-id="3681d-194">Powtórzony element.</span><span class="sxs-lookup"><span data-stu-id="3681d-194">The repeated element.</span></span></param>
        <param name="minRepeat"><span data-ttu-id="3681d-195">Minimalna liczba przypadków, w których dane wejściowe, dopasowując elementy zdefiniowane przez <paramref name="builder" /> musi wystąpić stanowić dopasowania.</span><span class="sxs-lookup"><span data-stu-id="3681d-195">The minimum number of times that input matching the element defined by <paramref name="builder" /> must occur to constitute a match.</span></span></param>
        <param name="maxRepeat"><span data-ttu-id="3681d-196">Maksymalną liczbę prób danych wejściowych, dopasowując elementy zdefiniowane przez <paramref name="builder" /> może wystąpić stanowić dopasowania.</span><span class="sxs-lookup"><span data-stu-id="3681d-196">The maximum number of times that input matching the element defined by <paramref name="builder" /> can occur to constitute a match.</span></span></param>
        <summary><span data-ttu-id="3681d-197">Inicjuje nowe wystąpienie klasy <see cref="T:System.Speech.Recognition.GrammarBuilder" /> klasy z elementu powtarzanego.</span><span class="sxs-lookup"><span data-stu-id="3681d-197">Initializes a new instance of the <see cref="T:System.Speech.Recognition.GrammarBuilder" /> class from a repeated element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3681d-198">Jeśli wartość `minRepeat` jest 0, a następnie nowe <xref:System.Speech.Recognition.GrammarBuilder> reprezentuje element opcjonalny.</span><span class="sxs-lookup"><span data-stu-id="3681d-198">If the value of `minRepeat` is 0, then the new <xref:System.Speech.Recognition.GrammarBuilder> represents an optional element.</span></span>  
  
 <span data-ttu-id="3681d-199">Wartość `minRepeat` musi być większa lub równa 0 i mniejsza niż wartość `maxRepeat`.</span><span class="sxs-lookup"><span data-stu-id="3681d-199">The value of `minRepeat` must be greater than or equal to 0 and less than or equal to the value of `maxRepeat`.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="3681d-200">Po określeniu powtórzeń dla <xref:System.Speech.Recognition.GrammarBuilder> obiektów, które zawierają <xref:System.Speech.Recognition.SemanticResultValue> lub <xref:System.Speech.Recognition.SemanticResultKey> wystąpienia, upewnij się, można uniknąć tworzenia zduplikowane elementy semantyki z taką samą nazwę klucza lub wielu elementów semantycznych, które wielokrotnie można zmodyfikować <xref:System.Speech.Recognition.SemanticValue.Value%2A> właściwość <xref:System.Speech.Recognition.SemanticValue> obiektu.</span><span class="sxs-lookup"><span data-stu-id="3681d-200">When you specify repeats for <xref:System.Speech.Recognition.GrammarBuilder> objects that contain <xref:System.Speech.Recognition.SemanticResultValue> or <xref:System.Speech.Recognition.SemanticResultKey> instances, make sure you avoid creating duplicate semantic elements with the same key name or multiple semantic elements that could repeatedly modify the <xref:System.Speech.Recognition.SemanticValue.Value%2A> property of a <xref:System.Speech.Recognition.SemanticValue> object.</span></span> <span data-ttu-id="3681d-201">Aparat rozpoznawania mowy może zgłosić wyjątek, jeśli wykryje nieważną tych okolicznościach.</span><span class="sxs-lookup"><span data-stu-id="3681d-201">The speech recognizer can throw an exception if it encounters these circumstances.</span></span> 
  
   
  
## Examples  
 <span data-ttu-id="3681d-202">Poniższy przykład tworzy gramatyki rozpoznawania mowy do ustalania kolejności pizza.</span><span class="sxs-lookup"><span data-stu-id="3681d-202">The following example creates a speech recognition grammar for ordering a pizza.</span></span> <span data-ttu-id="3681d-203">Rozpoczyna się za pomocą opcjonalnych, otwierając frazy, następuje toppings jednej do czterech i zamyka się wyrazem "głosi".</span><span class="sxs-lookup"><span data-stu-id="3681d-203">It starts with an optional, opening phrase, followed by one to four toppings, and closes with the word "pizza".</span></span>  
  
```csharp  
  
private static Grammar CreatePizzaGrammar()  
{  
  
  // Create a Choices object from a string array of alternative toppings.  
  Choices toppings = new Choices(new string[] {  
    "cheese", "mushroom", "tomato", "onion",  
    "anchovy", "chicken", "pepperoni"});  
  
  // Create a GrammarBuilder and append the Choices object.  
  GrammarBuilder andToppings = new GrammarBuilder("and", 0, 1);  
  andToppings.Append(toppings);  
  
  // Construct the phrase.  
  GrammarBuilder gb = new GrammarBuilder("I would like a", 0, 1);  
  gb.Append(toppings);  
  gb.Append(new GrammarBuilder(andToppings, 0, 3));  
  gb.Append("pizza");  
  
  // Create the Grammar from the GrammarBuilder.  
  Grammar grammar = new Grammar(gb);  
  grammar.Name = "Pizza Order";  
  
  return grammar;  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Speech.Recognition.Choices" />
        <altmember cref="T:System.Speech.Recognition.Grammar" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public GrammarBuilder (string phrase, int minRepeat, int maxRepeat);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string phrase, int32 minRepeat, int32 maxRepeat) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.#ctor(System.String,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (phrase As String, minRepeat As Integer, maxRepeat As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; GrammarBuilder(System::String ^ phrase, int minRepeat, int maxRepeat);" />
      <MemberSignature Language="F#" Value="new System.Speech.Recognition.GrammarBuilder : string * int * int -&gt; System.Speech.Recognition.GrammarBuilder" Usage="new System.Speech.Recognition.GrammarBuilder (phrase, minRepeat, maxRepeat)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="phrase" Type="System.String" />
        <Parameter Name="minRepeat" Type="System.Int32" />
        <Parameter Name="maxRepeat" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="phrase"><span data-ttu-id="3681d-204">Powtórzony sekwencji wyrazów.</span><span class="sxs-lookup"><span data-stu-id="3681d-204">The repeated sequence of words.</span></span></param>
        <param name="minRepeat"><span data-ttu-id="3681d-205">Minimalna liczba przypadków, które wprowadź frazę do dopasowania musi nastąpić stanowić dopasowania.</span><span class="sxs-lookup"><span data-stu-id="3681d-205">The minimum number of times that input matching the phrase must occur to constitute a match.</span></span></param>
        <param name="maxRepeat"><span data-ttu-id="3681d-206">Maksymalną liczbę prób wprowadź frazę do dopasowania, może wystąpić stanowić dopasowania.</span><span class="sxs-lookup"><span data-stu-id="3681d-206">The maximum number of times that input matching the phrase can occur to constitute a match.</span></span></param>
        <summary><span data-ttu-id="3681d-207">Inicjuje nowe wystąpienie klasy <see cref="T:System.Speech.Recognition.GrammarBuilder" /> klasy z sekwencji wyrazów w <see cref="T:System.String" /> i określa, ile razy <see cref="T:System.String" /> można powtarzać.</span><span class="sxs-lookup"><span data-stu-id="3681d-207">Initializes a new instance of the <see cref="T:System.Speech.Recognition.GrammarBuilder" /> class from the sequence of words in a <see cref="T:System.String" /> and specifies how many times the <see cref="T:System.String" /> can be repeated.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3681d-208">Jeśli wartość `minRepeat` jest 0, a następnie nowe <xref:System.Speech.Recognition.GrammarBuilder> reprezentuje element opcjonalny.</span><span class="sxs-lookup"><span data-stu-id="3681d-208">If the value of `minRepeat` is 0, then the new <xref:System.Speech.Recognition.GrammarBuilder> represents an optional element.</span></span>  
  
 <span data-ttu-id="3681d-209">Wartość `minRepeat` musi być większa lub równa 0 i mniejsza niż wartość `maxRepeat`.</span><span class="sxs-lookup"><span data-stu-id="3681d-209">The value of `minRepeat` must be greater than or equal to 0 and less than or equal to the value of `maxRepeat`.</span></span> <span data-ttu-id="3681d-210">Aby uzyskać więcej informacji o tworzeniu gramatyki rozpoznawania mowy, zawiera ciągi, zobacz [przy użyciu parametrów do utworzenia gramatyki GrammarBuilder](https://msdn.microsoft.com/library/0d87b445-a342-4369-9b3f-91d07fd7e114).</span><span class="sxs-lookup"><span data-stu-id="3681d-210">For more information about building a speech recognition grammar that contains strings, see [Using Strings to Create a GrammarBuilder Grammar](https://msdn.microsoft.com/library/0d87b445-a342-4369-9b3f-91d07fd7e114).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3681d-211">Poniższy przykład tworzy gramatyki rozpoznawania mowy do ustalania kolejności pizza.</span><span class="sxs-lookup"><span data-stu-id="3681d-211">The following example creates a speech recognition grammar for ordering a pizza.</span></span> <span data-ttu-id="3681d-212">Rozpoczyna się za pomocą opcjonalnych, otwierając frazy, następuje toppings jednej do czterech i zamyka się wyrazem "głosi".</span><span class="sxs-lookup"><span data-stu-id="3681d-212">It starts with an optional, opening phrase, followed by one to four toppings, and closes with the word "pizza".</span></span>  
  
```csharp  
  
private static Grammar CreatePizzaGrammar()  
{  
  
  // Create a Choices object with alternatives for toppings.  
  Choices toppings = new Choices(new string[] {  
    "cheese", "mushroom", "tomato", "onion",  
    "anchovy", "chicken", "pepperoni"});  
  
  // Create a GrammarBuilder and append the Choices object.  
  GrammarBuilder andToppings = new GrammarBuilder("and", 0, 1);  
  andToppings.Append(toppings);  
  
  // Construct the phrase.  
  GrammarBuilder gb = new GrammarBuilder("I would like a", 0, 1);  
  gb.Append(toppings);  
  gb.Append(new GrammarBuilder(andToppings, 0, 3));  
  gb.Append("pizza");  
  
  // Create the Grammar from the GrammarBuilder.  
  Grammar grammar = new Grammar(gb);  
  grammar.Name = "Pizza Order";  
  
  return grammar;  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Speech.Recognition.Choices" />
        <altmember cref="T:System.Speech.Recognition.Grammar" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Add">
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="3681d-213">Tworzy nową <see cref="T:System.Speech.Recognition.GrammarBuilder" /> zawierającego sekwencję dwóch elementów gramatyki.</span><span class="sxs-lookup"><span data-stu-id="3681d-213">Creates a new <see cref="T:System.Speech.Recognition.GrammarBuilder" /> that contains a sequence of two grammar elements.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3681d-214">Statyczne <xref:System.Speech.Recognition.GrammarBuilder.Add%2A> metody Podaj inny mechanizm, za pomocą którego można łączyć różnych typów, aby utworzyć różnorodność i elastyczność gramatyki utworzonych za pomocą <xref:System.Speech.Recognition.GrammarBuilder>.</span><span class="sxs-lookup"><span data-stu-id="3681d-214">The static <xref:System.Speech.Recognition.GrammarBuilder.Add%2A> methods provide another mechanism by which you can combine various types to create diversity and flexibility in grammars built with <xref:System.Speech.Recognition.GrammarBuilder>.</span></span> <span data-ttu-id="3681d-215">Te metody odnoszą się do statycznego <xref:System.Speech.Recognition.GrammarBuilder.op_Addition%2A> metody, które również są zdefiniowane na <xref:System.Speech.Recognition.GrammarBuilder> klasy.</span><span class="sxs-lookup"><span data-stu-id="3681d-215">These methods correspond to the static <xref:System.Speech.Recognition.GrammarBuilder.op_Addition%2A> methods, which are also defined on the <xref:System.Speech.Recognition.GrammarBuilder> class.</span></span> <span data-ttu-id="3681d-216">Kolejność parametrów określa kolejność elementów w nowym <xref:System.Speech.Recognition.GrammarBuilder>.</span><span class="sxs-lookup"><span data-stu-id="3681d-216">The order of the parameters determines the order of the elements in the new <xref:System.Speech.Recognition.GrammarBuilder>.</span></span>  
  
 <span data-ttu-id="3681d-217">A <xref:System.Speech.Recognition.GrammarBuilder> można także uzyskać od <xref:System.Speech.Recognition.Choices>, <xref:System.Speech.Recognition.SemanticResultKey>, <xref:System.Speech.Recognition.SemanticResultValue>, i [ciąg](https://go.microsoft.com/fwlink/?LinkId=159733) obiektów.</span><span class="sxs-lookup"><span data-stu-id="3681d-217">A <xref:System.Speech.Recognition.GrammarBuilder> can also be obtained from <xref:System.Speech.Recognition.Choices>, <xref:System.Speech.Recognition.SemanticResultKey>, <xref:System.Speech.Recognition.SemanticResultValue>, and [String](https://go.microsoft.com/fwlink/?LinkId=159733) objects.</span></span> <span data-ttu-id="3681d-218">Aby uzyskać więcej informacji, zobacz <xref:System.Speech.Recognition.GrammarBuilder.op_Implicit%2A> i <xref:System.Speech.Recognition.GrammarBuilder.op_Addition%2A> operatorów.</span><span class="sxs-lookup"><span data-stu-id="3681d-218">For more information, see the <xref:System.Speech.Recognition.GrammarBuilder.op_Implicit%2A> and <xref:System.Speech.Recognition.GrammarBuilder.op_Addition%2A> operators.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="3681d-219">Aparat rozpoznawania mowy może zgłosić wyjątek, korzystając z gramatyki rozpoznawania mowy, który zawiera zduplikowane elementy semantyki z taką samą nazwę klucza lub wielu elementów semantycznych, które wielokrotnie może modyfikować wartości tego samego elementu semantycznego.</span><span class="sxs-lookup"><span data-stu-id="3681d-219">The speech recognizer can throw an exception when using a speech recognition grammar that contains duplicate semantic elements with the same key name or multiple semantic elements that could repeatedly modify the value of the same semantic element.</span></span> 
  
 <span data-ttu-id="3681d-220">Aby uzyskać więcej informacji na temat tworzenia i używania gramatyki rozpoznawania mowy, zobacz [rozpoznawania mowy](https://docs.microsoft.com/previous-versions/office/developer/speech-technologies/hh361633(v=office.14)) i [tworzenia gramatyki GrammarBuilder](https://msdn.microsoft.com/library/7e2cc577-cb05-4318-9da3-7c8675d3d9ae).</span><span class="sxs-lookup"><span data-stu-id="3681d-220">For more information about building and using speech recognition grammars, see [Speech Recognition](https://docs.microsoft.com/previous-versions/office/developer/speech-technologies/hh361633(v=office.14)) and [Creating GrammarBuilder Grammars](https://msdn.microsoft.com/library/7e2cc577-cb05-4318-9da3-7c8675d3d9ae).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public static System.Speech.Recognition.GrammarBuilder Add (System.Speech.Recognition.Choices choices, System.Speech.Recognition.GrammarBuilder builder);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Speech.Recognition.GrammarBuilder Add(class System.Speech.Recognition.Choices choices, class System.Speech.Recognition.GrammarBuilder builder) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.Add(System.Speech.Recognition.Choices,System.Speech.Recognition.GrammarBuilder)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Speech::Recognition::GrammarBuilder ^ Add(System::Speech::Recognition::Choices ^ choices, System::Speech::Recognition::GrammarBuilder ^ builder);" />
      <MemberSignature Language="F#" Value="static member Add : System.Speech.Recognition.Choices * System.Speech.Recognition.GrammarBuilder -&gt; System.Speech.Recognition.GrammarBuilder" Usage="System.Speech.Recognition.GrammarBuilder.Add (choices, builder)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Speech.Recognition.GrammarBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="choices" Type="System.Speech.Recognition.Choices" />
        <Parameter Name="builder" Type="System.Speech.Recognition.GrammarBuilder" />
      </Parameters>
      <Docs>
        <param name="choices"><span data-ttu-id="3681d-221">Pierwszy gramatyki elementu, który reprezentuje zestaw alternatyw.</span><span class="sxs-lookup"><span data-stu-id="3681d-221">The first grammar element, which represents a set of alternatives.</span></span></param>
        <param name="builder"><span data-ttu-id="3681d-222">Drugi element gramatyki.</span><span class="sxs-lookup"><span data-stu-id="3681d-222">The second grammar element.</span></span></param>
        <summary><span data-ttu-id="3681d-223">Tworzy nową <see cref="T:System.Speech.Recognition.GrammarBuilder" /> zawierający <see cref="T:System.Speech.Recognition.Choices" /> obiektu, a następnie <see cref="T:System.Speech.Recognition.GrammarBuilder" /> obiektu.</span><span class="sxs-lookup"><span data-stu-id="3681d-223">Creates a new <see cref="T:System.Speech.Recognition.GrammarBuilder" /> that contains a <see cref="T:System.Speech.Recognition.Choices" /> object followed by a <see cref="T:System.Speech.Recognition.GrammarBuilder" /> object.</span></span></summary>
        <returns><span data-ttu-id="3681d-224">A <see cref="T:System.Speech.Recognition.GrammarBuilder" /> dla sekwencji <paramref name="choices" /> następuje <paramref name="builder" /> elementu.</span><span class="sxs-lookup"><span data-stu-id="3681d-224">A <see cref="T:System.Speech.Recognition.GrammarBuilder" /> for the sequence of the <paramref name="choices" /> element followed by the <paramref name="builder" /> element.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3681d-225"><xref:System.Speech.Recognition.GrammarBuilder> obsługuje niejawne konwersje z elementu następujące klasy:</span><span class="sxs-lookup"><span data-stu-id="3681d-225"><xref:System.Speech.Recognition.GrammarBuilder> supports implicit conversions from the following classes:</span></span>  
  
-   <xref:System.Speech.Recognition.Choices>  
  
-   <xref:System.Speech.Recognition.SemanticResultKey>  
  
-   <xref:System.Speech.Recognition.SemanticResultValue>  
  
-   <xref:System.String>  
  
 <span data-ttu-id="3681d-226">Ta metoda przyjmuje obiektów wymienione powyżej `builder` parametru.</span><span class="sxs-lookup"><span data-stu-id="3681d-226">This method accepts the objects listed above for the `builder` parameter.</span></span>  
  
 <span data-ttu-id="3681d-227">Aby uzyskać więcej informacji, zobacz <xref:System.Speech.Recognition.GrammarBuilder.op_Implicit%2A> i <xref:System.Speech.Recognition.GrammarBuilder.op_Addition%2A> operatorów.</span><span class="sxs-lookup"><span data-stu-id="3681d-227">For more information, see the <xref:System.Speech.Recognition.GrammarBuilder.op_Implicit%2A> and <xref:System.Speech.Recognition.GrammarBuilder.op_Addition%2A> operators.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="3681d-228">Łącząc <xref:System.Speech.Recognition.Choices> i <xref:System.Speech.Recognition.GrammarBuilder> obiektów, które zawierają <xref:System.Speech.Recognition.SemanticResultValue> lub <xref:System.Speech.Recognition.SemanticResultKey> wystąpienia, upewnij się, można uniknąć tworzenia zduplikowane elementy semantyki z taką samą nazwę klucza lub wielu elementów semantycznych, które wielokrotnie można zmodyfikować <xref:System.Speech.Recognition.SemanticValue.Value%2A> właściwość <xref:System.Speech.Recognition.SemanticValue> obiektu.</span><span class="sxs-lookup"><span data-stu-id="3681d-228">When you combine <xref:System.Speech.Recognition.Choices> and <xref:System.Speech.Recognition.GrammarBuilder> objects that contain <xref:System.Speech.Recognition.SemanticResultValue> or <xref:System.Speech.Recognition.SemanticResultKey> instances, make sure you avoid creating duplicate semantic elements with the same key name or multiple semantic elements that could repeatedly modify the <xref:System.Speech.Recognition.SemanticValue.Value%2A> property of a <xref:System.Speech.Recognition.SemanticValue> object.</span></span> <span data-ttu-id="3681d-229">Aparat rozpoznawania mowy może zgłosić wyjątek, jeśli wykryje nieważną tych okolicznościach.</span><span class="sxs-lookup"><span data-stu-id="3681d-229">The speech recognizer can throw an exception if it encounters these circumstances.</span></span> <span data-ttu-id="3681d-230">Aby uzyskać więcej informacji o tworzeniu gramatyki rozpoznawania mowy, który zawiera informacje semantyczne, zobacz [Dodaj semantyki do gramatyki GrammarBuilder](https://msdn.microsoft.com/library/hh361581.aspx).</span><span class="sxs-lookup"><span data-stu-id="3681d-230">For more information about building a speech recognition grammar that contains semantic information, see [Add Semantics to a GrammarBuilder Grammar](https://msdn.microsoft.com/library/hh361581.aspx).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.Append(System.Speech.Recognition.Choices)" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.op_Implicit(System.Speech.Recognition.Choices)~System.Speech.Recognition.GrammarBuilder" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.op_Addition(System.Speech.Recognition.Choices,System.Speech.Recognition.GrammarBuilder)" />
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public static System.Speech.Recognition.GrammarBuilder Add (System.Speech.Recognition.GrammarBuilder builder, System.Speech.Recognition.Choices choices);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Speech.Recognition.GrammarBuilder Add(class System.Speech.Recognition.GrammarBuilder builder, class System.Speech.Recognition.Choices choices) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.Add(System.Speech.Recognition.GrammarBuilder,System.Speech.Recognition.Choices)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Speech::Recognition::GrammarBuilder ^ Add(System::Speech::Recognition::GrammarBuilder ^ builder, System::Speech::Recognition::Choices ^ choices);" />
      <MemberSignature Language="F#" Value="static member Add : System.Speech.Recognition.GrammarBuilder * System.Speech.Recognition.Choices -&gt; System.Speech.Recognition.GrammarBuilder" Usage="System.Speech.Recognition.GrammarBuilder.Add (builder, choices)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Speech.Recognition.GrammarBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="builder" Type="System.Speech.Recognition.GrammarBuilder" />
        <Parameter Name="choices" Type="System.Speech.Recognition.Choices" />
      </Parameters>
      <Docs>
        <param name="builder"><span data-ttu-id="3681d-231">Pierwszy element gramatyki.</span><span class="sxs-lookup"><span data-stu-id="3681d-231">The first grammar element.</span></span></param>
        <param name="choices"><span data-ttu-id="3681d-232">Drugi gramatyki elementu, który reprezentuje zestaw alternatyw.</span><span class="sxs-lookup"><span data-stu-id="3681d-232">The second grammar element, which represents a set of alternatives.</span></span></param>
        <summary><span data-ttu-id="3681d-233">Tworzy nową <see cref="T:System.Speech.Recognition.GrammarBuilder" /> zawierający <see cref="T:System.Speech.Recognition.GrammarBuilder" /> obiektu, a następnie <see cref="T:System.Speech.Recognition.Choices" /> obiektu.</span><span class="sxs-lookup"><span data-stu-id="3681d-233">Creates a new <see cref="T:System.Speech.Recognition.GrammarBuilder" /> that contains a <see cref="T:System.Speech.Recognition.GrammarBuilder" /> object followed by a <see cref="T:System.Speech.Recognition.Choices" /> object.</span></span></summary>
        <returns><span data-ttu-id="3681d-234">A <see cref="T:System.Speech.Recognition.GrammarBuilder" /> dla sekwencji <paramref name="builder" /> następuje <paramref name="choices" /> elementu.</span><span class="sxs-lookup"><span data-stu-id="3681d-234">A <see cref="T:System.Speech.Recognition.GrammarBuilder" /> for the sequence of the <paramref name="builder" /> element followed by the <paramref name="choices" /> element.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3681d-235"><xref:System.Speech.Recognition.GrammarBuilder> obsługuje niejawne konwersje z elementu następujące klasy:</span><span class="sxs-lookup"><span data-stu-id="3681d-235"><xref:System.Speech.Recognition.GrammarBuilder> supports implicit conversions from the following classes:</span></span>  
  
-   <xref:System.Speech.Recognition.Choices>  
  
-   <xref:System.Speech.Recognition.SemanticResultKey>  
  
-   <xref:System.Speech.Recognition.SemanticResultValue>  
  
-   <xref:System.String>  
  
 <span data-ttu-id="3681d-236">Ta metoda przyjmuje obiektów wymienione powyżej `builder` parametru.</span><span class="sxs-lookup"><span data-stu-id="3681d-236">This method accepts the objects listed above for the `builder` parameter.</span></span>  
  
 <span data-ttu-id="3681d-237">Aby uzyskać więcej informacji, zobacz <xref:System.Speech.Recognition.GrammarBuilder.op_Implicit%2A> i <xref:System.Speech.Recognition.GrammarBuilder.op_Addition%2A> operatorów.</span><span class="sxs-lookup"><span data-stu-id="3681d-237">For more information, see the <xref:System.Speech.Recognition.GrammarBuilder.op_Implicit%2A> and <xref:System.Speech.Recognition.GrammarBuilder.op_Addition%2A> operators.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="3681d-238">Łącząc <xref:System.Speech.Recognition.Choices> i <xref:System.Speech.Recognition.GrammarBuilder> obiektów, które zawierają <xref:System.Speech.Recognition.SemanticResultValue> lub <xref:System.Speech.Recognition.SemanticResultKey> wystąpień z innymi elementami gramatyki, upewnij się, można uniknąć tworzenia zduplikowane elementy semantyki z taką samą nazwę klucza lub wielu elementów semantycznych wielokrotnie można zmodyfikować <xref:System.Speech.Recognition.SemanticValue.Value%2A> właściwość <xref:System.Speech.Recognition.SemanticValue> obiektu.</span><span class="sxs-lookup"><span data-stu-id="3681d-238">When you combine <xref:System.Speech.Recognition.Choices> and <xref:System.Speech.Recognition.GrammarBuilder> objects that contain <xref:System.Speech.Recognition.SemanticResultValue> or <xref:System.Speech.Recognition.SemanticResultKey> instances with other grammar elements, make sure you avoid creating duplicate semantic elements with the same key name or multiple semantic elements that could repeatedly modify the <xref:System.Speech.Recognition.SemanticValue.Value%2A> property of a <xref:System.Speech.Recognition.SemanticValue> object.</span></span> <span data-ttu-id="3681d-239">Aparat rozpoznawania mowy może zgłosić wyjątek, jeśli wykryje nieważną tych okolicznościach.</span><span class="sxs-lookup"><span data-stu-id="3681d-239">The speech recognizer can throw an exception if it encounters these circumstances.</span></span> 
  
   
  
## Examples  
 <span data-ttu-id="3681d-240">Poniższy przykład tworzy gramatyki rozpoznawania mowy, który może rozpoznawać dwóch wyrażeń, "tło *kolor*" i "Ustawianie tła *kolor*", gdzie *kolor* Wybrano zestaw kolorów.</span><span class="sxs-lookup"><span data-stu-id="3681d-240">The following example creates a speech recognition grammar that can recognize the two phrases, "Make background *color*" and "Set background to *color*", where *color* is selected from a set of colors.</span></span> <span data-ttu-id="3681d-241">Różne typy są używane do utworzenia końcowej gramatykę, takich jak [ciąg](https://go.microsoft.com/fwlink/?LinkId=159733), <xref:System.Speech.Recognition.Choices>, i <xref:System.Speech.Recognition.GrammarBuilder> obiektów.</span><span class="sxs-lookup"><span data-stu-id="3681d-241">Various types are used to build the final grammar, such as [String](https://go.microsoft.com/fwlink/?LinkId=159733), <xref:System.Speech.Recognition.Choices>, and <xref:System.Speech.Recognition.GrammarBuilder> objects.</span></span> <span data-ttu-id="3681d-242">Operatory rzutowania jawnego w wywołaniach do <xref:System.Speech.Recognition.GrammarBuilder.Add%2A> metody są opcjonalne.</span><span class="sxs-lookup"><span data-stu-id="3681d-242">The explicit cast operators in the calls to the <xref:System.Speech.Recognition.GrammarBuilder.Add%2A> methods are optional.</span></span>  
  
```csharp  
  
private Grammar CreateColorGrammar()  
{  
  
  // Create a set of color choices.  
  Choices colorChoice = new Choices(new string[] {"red", "green", "blue"});  
  
  // Create grammar builders for the two versions of the phrase.  
  GrammarBuilder makePhrase =  
    GrammarBuilder.Add((GrammarBuilder)"Make background", colorChoice);  
  GrammarBuilder setPhrase =  
    GrammarBuilder.Add("Set background to", (GrammarBuilder)colorChoice);  
  
  // Create a Choices for the two alternative phrases, convert the Choices  
  // to a GrammarBuilder, and construct the grammar from the result.  
  Choices bothChoices = new Choices(new GrammarBuilder[] {makePhrase, setPhrase});  
  GrammarBuilder bothPhrases = new GrammarBuilder(bothChoices);  
  
  Grammar grammar = new Grammar(bothPhrases);  
  grammar.Name = "backgroundColor";  
  return grammar;  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.Append(System.Speech.Recognition.Choices)" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.op_Implicit(System.Speech.Recognition.Choices)~System.Speech.Recognition.GrammarBuilder" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.op_Addition(System.Speech.Recognition.Choices,System.Speech.Recognition.GrammarBuilder)" />
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public static System.Speech.Recognition.GrammarBuilder Add (System.Speech.Recognition.GrammarBuilder builder1, System.Speech.Recognition.GrammarBuilder builder2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Speech.Recognition.GrammarBuilder Add(class System.Speech.Recognition.GrammarBuilder builder1, class System.Speech.Recognition.GrammarBuilder builder2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.Add(System.Speech.Recognition.GrammarBuilder,System.Speech.Recognition.GrammarBuilder)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Add (builder1 As GrammarBuilder, builder2 As GrammarBuilder) As GrammarBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Speech::Recognition::GrammarBuilder ^ Add(System::Speech::Recognition::GrammarBuilder ^ builder1, System::Speech::Recognition::GrammarBuilder ^ builder2);" />
      <MemberSignature Language="F#" Value="static member Add : System.Speech.Recognition.GrammarBuilder * System.Speech.Recognition.GrammarBuilder -&gt; System.Speech.Recognition.GrammarBuilder" Usage="System.Speech.Recognition.GrammarBuilder.Add (builder1, builder2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Speech.Recognition.GrammarBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="builder1" Type="System.Speech.Recognition.GrammarBuilder" />
        <Parameter Name="builder2" Type="System.Speech.Recognition.GrammarBuilder" />
      </Parameters>
      <Docs>
        <param name="builder1"><span data-ttu-id="3681d-243">Pierwszy element gramatyki.</span><span class="sxs-lookup"><span data-stu-id="3681d-243">The first grammar element.</span></span></param>
        <param name="builder2"><span data-ttu-id="3681d-244">Drugi element gramatyki.</span><span class="sxs-lookup"><span data-stu-id="3681d-244">The second grammar element.</span></span></param>
        <summary><span data-ttu-id="3681d-245">Tworzy nową <see cref="T:System.Speech.Recognition.GrammarBuilder" /> zawierającego sekwencję dwóch <see cref="T:System.Speech.Recognition.GrammarBuilder" /> obiektów.</span><span class="sxs-lookup"><span data-stu-id="3681d-245">Creates a new <see cref="T:System.Speech.Recognition.GrammarBuilder" /> that contains a sequence of two <see cref="T:System.Speech.Recognition.GrammarBuilder" /> objects.</span></span></summary>
        <returns><span data-ttu-id="3681d-246">A <see cref="T:System.Speech.Recognition.GrammarBuilder" /> dla sekwencji <paramref name="builder1" /> następuje <paramref name="builder2" /> elementu.</span><span class="sxs-lookup"><span data-stu-id="3681d-246">A <see cref="T:System.Speech.Recognition.GrammarBuilder" /> for the sequence of the <paramref name="builder1" /> element followed by the <paramref name="builder2" /> element.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3681d-247"><xref:System.Speech.Recognition.GrammarBuilder> obsługuje niejawne konwersje z elementu następujące klasy:</span><span class="sxs-lookup"><span data-stu-id="3681d-247"><xref:System.Speech.Recognition.GrammarBuilder> supports implicit conversions from the following classes:</span></span>  
  
-   <xref:System.Speech.Recognition.Choices>  
  
-   <xref:System.Speech.Recognition.SemanticResultKey>  
  
-   <xref:System.Speech.Recognition.SemanticResultValue>  
  
-   <xref:System.String>  
  
 <span data-ttu-id="3681d-248">Ta metoda przyjmuje obiektów wymienione powyżej `builder1` lub `builder2` parametru.</span><span class="sxs-lookup"><span data-stu-id="3681d-248">This method accepts the objects listed above for the `builder1` or `builder2` parameter.</span></span>  
  
 <span data-ttu-id="3681d-249">Aby uzyskać więcej informacji, zobacz <xref:System.Speech.Recognition.GrammarBuilder.op_Implicit%2A> i <xref:System.Speech.Recognition.GrammarBuilder.op_Addition%2A> operatorów.</span><span class="sxs-lookup"><span data-stu-id="3681d-249">For more information, see the <xref:System.Speech.Recognition.GrammarBuilder.op_Implicit%2A> and <xref:System.Speech.Recognition.GrammarBuilder.op_Addition%2A> operators.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="3681d-250">Łącząc <xref:System.Speech.Recognition.Choices> i <xref:System.Speech.Recognition.GrammarBuilder> obiektów, które zawierają <xref:System.Speech.Recognition.SemanticResultValue> lub <xref:System.Speech.Recognition.SemanticResultKey> wystąpień z innymi elementami gramatyki, upewnij się, można uniknąć tworzenia zduplikowane elementy semantyki z taką samą nazwę klucza lub wielu elementów semantycznych wielokrotnie można zmodyfikować <xref:System.Speech.Recognition.SemanticValue.Value%2A> właściwość <xref:System.Speech.Recognition.SemanticValue> obiektu.</span><span class="sxs-lookup"><span data-stu-id="3681d-250">When you combine <xref:System.Speech.Recognition.Choices> and <xref:System.Speech.Recognition.GrammarBuilder> objects that contain <xref:System.Speech.Recognition.SemanticResultValue> or <xref:System.Speech.Recognition.SemanticResultKey> instances with other grammar elements, make sure you avoid creating duplicate semantic elements with the same key name or multiple semantic elements that could repeatedly modify the <xref:System.Speech.Recognition.SemanticValue.Value%2A> property of a <xref:System.Speech.Recognition.SemanticValue> object.</span></span> <span data-ttu-id="3681d-251">Aparat rozpoznawania mowy może zgłosić wyjątek, jeśli wykryje nieważną tych okolicznościach.</span><span class="sxs-lookup"><span data-stu-id="3681d-251">The speech recognizer can throw an exception if it encounters these circumstances.</span></span> 
  
   
  
## Examples  
 <span data-ttu-id="3681d-252">Poniższy przykład tworzy gramatyki rozpoznawania mowy, który może rozpoznawać dwóch wyrażeń, "tło *kolor*" i "Ustawianie tła *kolor*", gdzie *kolor* Wybrano zestaw kolorów.</span><span class="sxs-lookup"><span data-stu-id="3681d-252">The following example creates a speech recognition grammar that can recognize the two phrases, "Make background *color*" and "Set background to *color*", where *color* is selected from a set of colors.</span></span> <span data-ttu-id="3681d-253">Różne typy są używane do utworzenia końcowej gramatykę, takich jak [ciąg](https://go.microsoft.com/fwlink/?LinkId=159733), <xref:System.Speech.Recognition.Choices>, i <xref:System.Speech.Recognition.GrammarBuilder> obiektów.</span><span class="sxs-lookup"><span data-stu-id="3681d-253">Various types are used to build the final grammar, such as [String](https://go.microsoft.com/fwlink/?LinkId=159733), <xref:System.Speech.Recognition.Choices>, and <xref:System.Speech.Recognition.GrammarBuilder> objects.</span></span> <span data-ttu-id="3681d-254">Operatory rzutowania jawnego w wywołaniach do <xref:System.Speech.Recognition.GrammarBuilder.Add%2A> metody są opcjonalne.</span><span class="sxs-lookup"><span data-stu-id="3681d-254">The explicit cast operators in the calls to the <xref:System.Speech.Recognition.GrammarBuilder.Add%2A> methods are optional.</span></span>  
  
```csharp  
  
private Grammar CreateColorGrammar()  
{  
  
  // Create a set of color choices.  
  Choices colorChoice = new Choices(new string[] {"red", "green", "blue"});  
  
  // Create grammar builders for the two versions of the phrase.  
  GrammarBuilder makePhrase =  
    GrammarBuilder.Add((GrammarBuilder)"Make background", colorChoice);  
  GrammarBuilder setPhrase =  
    GrammarBuilder.Add("Set background to", (GrammarBuilder)colorChoice);  
  
  // Create a Choices for the two alternative phrases, convert the Choices  
  // to a GrammarBuilder, and construct the grammar from the result.  
  Choices bothChoices = new Choices(new GrammarBuilder[] {makePhrase, setPhrase});  
  GrammarBuilder bothPhrases = new GrammarBuilder(bothChoices);  
  
  Grammar grammar = new Grammar(bothPhrases);  
  grammar.Name = "backgroundColor";  
  return grammar;  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.Append(System.Speech.Recognition.Choices)" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.op_Implicit(System.Speech.Recognition.Choices)~System.Speech.Recognition.GrammarBuilder" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.op_Addition(System.Speech.Recognition.Choices,System.Speech.Recognition.GrammarBuilder)" />
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public static System.Speech.Recognition.GrammarBuilder Add (System.Speech.Recognition.GrammarBuilder builder, string phrase);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Speech.Recognition.GrammarBuilder Add(class System.Speech.Recognition.GrammarBuilder builder, string phrase) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.Add(System.Speech.Recognition.GrammarBuilder,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Add (builder As GrammarBuilder, phrase As String) As GrammarBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Speech::Recognition::GrammarBuilder ^ Add(System::Speech::Recognition::GrammarBuilder ^ builder, System::String ^ phrase);" />
      <MemberSignature Language="F#" Value="static member Add : System.Speech.Recognition.GrammarBuilder * string -&gt; System.Speech.Recognition.GrammarBuilder" Usage="System.Speech.Recognition.GrammarBuilder.Add (builder, phrase)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Speech.Recognition.GrammarBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="builder" Type="System.Speech.Recognition.GrammarBuilder" />
        <Parameter Name="phrase" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="builder"><span data-ttu-id="3681d-255">Pierwszy element gramatyki.</span><span class="sxs-lookup"><span data-stu-id="3681d-255">The first grammar element.</span></span></param>
        <param name="phrase"><span data-ttu-id="3681d-256">Drugi gramatyki element, który reprezentuje sekwencję wyrazów.</span><span class="sxs-lookup"><span data-stu-id="3681d-256">The second grammar element, which represents a sequence of words.</span></span></param>
        <summary><span data-ttu-id="3681d-257">Tworzy nową <see cref="T:System.Speech.Recognition.GrammarBuilder" /> zawierający <see cref="T:System.Speech.Recognition.GrammarBuilder" /> obiektu następuje frazę.</span><span class="sxs-lookup"><span data-stu-id="3681d-257">Creates a new <see cref="T:System.Speech.Recognition.GrammarBuilder" /> that contains a <see cref="T:System.Speech.Recognition.GrammarBuilder" /> object followed by a phrase.</span></span></summary>
        <returns><span data-ttu-id="3681d-258">A <see cref="T:System.Speech.Recognition.GrammarBuilder" /> dla sekwencji <paramref name="builder" /> następuje <paramref name="phrase" /> elementu.</span><span class="sxs-lookup"><span data-stu-id="3681d-258">A <see cref="T:System.Speech.Recognition.GrammarBuilder" /> for the sequence of the <paramref name="builder" /> element followed by the <paramref name="phrase" /> element.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3681d-259"><xref:System.Speech.Recognition.GrammarBuilder> obsługuje niejawne konwersje z elementu następujące klasy:</span><span class="sxs-lookup"><span data-stu-id="3681d-259"><xref:System.Speech.Recognition.GrammarBuilder> supports implicit conversions from the following classes:</span></span>  
  
-   <xref:System.Speech.Recognition.Choices>  
  
-   <xref:System.Speech.Recognition.SemanticResultKey>  
  
-   <xref:System.Speech.Recognition.SemanticResultValue>  
  
-   <xref:System.String>  
  
 <span data-ttu-id="3681d-260">Ta metoda przyjmuje obiektów wymienione powyżej `builder` parametru.</span><span class="sxs-lookup"><span data-stu-id="3681d-260">This method accepts the objects listed above for the `builder` parameter.</span></span>  
  
 <span data-ttu-id="3681d-261">Aby uzyskać więcej informacji, zobacz <xref:System.Speech.Recognition.GrammarBuilder.op_Implicit%2A> i <xref:System.Speech.Recognition.GrammarBuilder.op_Addition%2A> operatorów.</span><span class="sxs-lookup"><span data-stu-id="3681d-261">For more information, see the <xref:System.Speech.Recognition.GrammarBuilder.op_Implicit%2A> and <xref:System.Speech.Recognition.GrammarBuilder.op_Addition%2A> operators.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3681d-262">Poniższy przykład tworzy gramatyki rozpoznawania mowy, który może rozpoznawać dwóch wyrażeń, "tło *kolor*" i "Ustawianie tła *kolor*", gdzie *kolor* Wybrano zestaw kolorów.</span><span class="sxs-lookup"><span data-stu-id="3681d-262">The following example creates a speech recognition grammar that can recognize the two phrases, "Make background *color*" and "Set background to *color*", where *color* is selected from a set of colors.</span></span> <span data-ttu-id="3681d-263">Różne typy są używane do utworzenia końcowej gramatykę, takich jak [ciąg](https://go.microsoft.com/fwlink/?LinkId=159733), <xref:System.Speech.Recognition.Choices>, i <xref:System.Speech.Recognition.GrammarBuilder> obiektów.</span><span class="sxs-lookup"><span data-stu-id="3681d-263">Various types are used to build the final grammar, such as [String](https://go.microsoft.com/fwlink/?LinkId=159733), <xref:System.Speech.Recognition.Choices>, and <xref:System.Speech.Recognition.GrammarBuilder> objects.</span></span> <span data-ttu-id="3681d-264">Operatory rzutowania jawnego w wywołaniach do <xref:System.Speech.Recognition.GrammarBuilder.Add%2A> metody są opcjonalne.</span><span class="sxs-lookup"><span data-stu-id="3681d-264">The explicit cast operators in the calls to the <xref:System.Speech.Recognition.GrammarBuilder.Add%2A> methods are optional.</span></span>  
  
```csharp  
  
private Grammar CreateColorGrammar()  
{  
  
  // Create a set of color choices.  
  Choices colorChoice = new Choices(new string[] {"red", "green", "blue"});  
  
  // Create grammar builders for the two versions of the phrase.  
  GrammarBuilder makePhrase =  
    GrammarBuilder.Add((GrammarBuilder)"Make background", colorChoice);  
  GrammarBuilder setPhrase =  
    GrammarBuilder.Add("Set background to", (GrammarBuilder)colorChoice);  
  
  // Create a Choices for the two alternative phrases, convert the Choices  
  // to a GrammarBuilder, and construct the grammar from the result.  
  Choices bothChoices = new Choices(new GrammarBuilder[] {makePhrase, setPhrase});  
  GrammarBuilder bothPhrases = new GrammarBuilder(bothChoices);  
  
  Grammar grammar = new Grammar(bothPhrases);  
  grammar.Name = "backgroundColor";  
  return grammar;  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.Append(System.Speech.Recognition.Choices)" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.op_Implicit(System.Speech.Recognition.Choices)~System.Speech.Recognition.GrammarBuilder" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.op_Addition(System.Speech.Recognition.Choices,System.Speech.Recognition.GrammarBuilder)" />
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public static System.Speech.Recognition.GrammarBuilder Add (string phrase, System.Speech.Recognition.GrammarBuilder builder);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Speech.Recognition.GrammarBuilder Add(string phrase, class System.Speech.Recognition.GrammarBuilder builder) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.Add(System.String,System.Speech.Recognition.GrammarBuilder)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Add (phrase As String, builder As GrammarBuilder) As GrammarBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Speech::Recognition::GrammarBuilder ^ Add(System::String ^ phrase, System::Speech::Recognition::GrammarBuilder ^ builder);" />
      <MemberSignature Language="F#" Value="static member Add : string * System.Speech.Recognition.GrammarBuilder -&gt; System.Speech.Recognition.GrammarBuilder" Usage="System.Speech.Recognition.GrammarBuilder.Add (phrase, builder)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Speech.Recognition.GrammarBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="phrase" Type="System.String" />
        <Parameter Name="builder" Type="System.Speech.Recognition.GrammarBuilder" />
      </Parameters>
      <Docs>
        <param name="phrase"><span data-ttu-id="3681d-265">Pierwszy gramatyki element, który reprezentuje sekwencji wyrazów.</span><span class="sxs-lookup"><span data-stu-id="3681d-265">The first grammar element, which represents a sequence of words.</span></span></param>
        <param name="builder"><span data-ttu-id="3681d-266">Drugi element gramatyki.</span><span class="sxs-lookup"><span data-stu-id="3681d-266">The second grammar element.</span></span></param>
        <summary><span data-ttu-id="3681d-267">Tworzy nową <see cref="T:System.Speech.Recognition.GrammarBuilder" /> zawierający frazę następuje <see cref="T:System.Speech.Recognition.GrammarBuilder" /> obiektu.</span><span class="sxs-lookup"><span data-stu-id="3681d-267">Creates a new <see cref="T:System.Speech.Recognition.GrammarBuilder" /> that contains a phrase followed by a <see cref="T:System.Speech.Recognition.GrammarBuilder" /> object.</span></span></summary>
        <returns><span data-ttu-id="3681d-268">A <see cref="T:System.Speech.Recognition.GrammarBuilder" /> dla sekwencji <paramref name="phrase" /> następuje <paramref name="builder" /> elementu.</span><span class="sxs-lookup"><span data-stu-id="3681d-268">A <see cref="T:System.Speech.Recognition.GrammarBuilder" /> for the sequence of the <paramref name="phrase" /> element followed by the <paramref name="builder" /> element.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3681d-269"><xref:System.Speech.Recognition.GrammarBuilder> obsługuje niejawne konwersje z elementu następujące klasy:</span><span class="sxs-lookup"><span data-stu-id="3681d-269"><xref:System.Speech.Recognition.GrammarBuilder> supports implicit conversions from the following classes:</span></span>  
  
-   <xref:System.Speech.Recognition.Choices>  
  
-   <xref:System.Speech.Recognition.SemanticResultKey>  
  
-   <xref:System.Speech.Recognition.SemanticResultValue>  
  
-   <xref:System.String>  
  
 <span data-ttu-id="3681d-270">Ta metoda przyjmuje obiektów wymienione powyżej `builder` parametru.</span><span class="sxs-lookup"><span data-stu-id="3681d-270">This method accepts the objects listed above for the `builder` parameter.</span></span>  
  
 <span data-ttu-id="3681d-271">Aby uzyskać więcej informacji, zobacz <xref:System.Speech.Recognition.GrammarBuilder.op_Implicit%2A> i <xref:System.Speech.Recognition.GrammarBuilder.op_Addition%2A> operatorów.</span><span class="sxs-lookup"><span data-stu-id="3681d-271">For more information, see the <xref:System.Speech.Recognition.GrammarBuilder.op_Implicit%2A> and <xref:System.Speech.Recognition.GrammarBuilder.op_Addition%2A> operators.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3681d-272">Poniższy przykład tworzy gramatyki rozpoznawania mowy, który może rozpoznawać dwóch wyrażeń, "tło *kolor*" i "Ustawianie tła *kolor*", gdzie *kolor* Wybrano zestaw kolorów.</span><span class="sxs-lookup"><span data-stu-id="3681d-272">The following example creates a speech recognition grammar that can recognize the two phrases, "Make background *color*" and "Set background to *color*", where *color* is selected from a set of colors.</span></span> <span data-ttu-id="3681d-273">Różne typy są używane do utworzenia końcowej gramatykę, takich jak [ciąg](https://go.microsoft.com/fwlink/?LinkId=159733), <xref:System.Speech.Recognition.Choices>, i <xref:System.Speech.Recognition.GrammarBuilder> obiektów.</span><span class="sxs-lookup"><span data-stu-id="3681d-273">Various types are used to build the final grammar, such as [String](https://go.microsoft.com/fwlink/?LinkId=159733), <xref:System.Speech.Recognition.Choices>, and <xref:System.Speech.Recognition.GrammarBuilder> objects.</span></span> <span data-ttu-id="3681d-274">Operatory rzutowania jawnego w wywołaniach do <xref:System.Speech.Recognition.GrammarBuilder.Add%2A> metody są opcjonalne.</span><span class="sxs-lookup"><span data-stu-id="3681d-274">The explicit cast operators in the calls to the <xref:System.Speech.Recognition.GrammarBuilder.Add%2A> methods are optional.</span></span>  
  
```csharp  
  
private Grammar CreateColorGrammar()  
{  
  
  // Create a set of color choices.  
  Choices colorChoice = new Choices(new string[] {"red", "green", "blue"});  
  
  // Create grammar builders for the two versions of the phrase.  
  GrammarBuilder makePhrase =  
    GrammarBuilder.Add((GrammarBuilder)"Make background", colorChoice);  
  GrammarBuilder setPhrase =  
    GrammarBuilder.Add("Set background to", (GrammarBuilder)colorChoice);  
  
  // Create a Choices for the two alternative phrases, convert the Choices  
  // to a GrammarBuilder, and construct the grammar from the result.  
  Choices bothChoices = new Choices(new GrammarBuilder[] {makePhrase, setPhrase});  
  GrammarBuilder bothPhrases = new GrammarBuilder(bothChoices);  
  
  Grammar grammar = new Grammar(bothPhrases);  
  grammar.Name = "backgroundColor";  
  return grammar;  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.Append(System.Speech.Recognition.Choices)" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.op_Implicit(System.Speech.Recognition.Choices)~System.Speech.Recognition.GrammarBuilder" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.op_Addition(System.Speech.Recognition.Choices,System.Speech.Recognition.GrammarBuilder)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Append">
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="3681d-275">Dołącza elementu gramatyki do bieżącej sekwencji elementy gramatyki.</span><span class="sxs-lookup"><span data-stu-id="3681d-275">Appends a grammar element to the current sequence of grammar elements.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3681d-276">Użyj tych metod można dołączyć elementy gramatyki do istniejącego <xref:System.Speech.Recognition.GrammarBuilder>.</span><span class="sxs-lookup"><span data-stu-id="3681d-276">Use these methods to append grammar elements to an existing <xref:System.Speech.Recognition.GrammarBuilder>.</span></span> <span data-ttu-id="3681d-277">Jak utworzyć elementy gramatyki, możesz je dołączyć do istniejącego Konstruktor stopniowo tworzenie ograniczeń dla gramatyki rozpoznawania mowy.</span><span class="sxs-lookup"><span data-stu-id="3681d-277">As you create grammar elements, you can append them to the existing builder to progressively develop the constraints for a speech recognition grammar.</span></span> <span data-ttu-id="3681d-278">Każdy element jest dodawany do końca bieżącego sekwencję elementów.</span><span class="sxs-lookup"><span data-stu-id="3681d-278">Each element is added to the end of the current sequence of elements.</span></span>  
  
 <span data-ttu-id="3681d-279">Ta metoda ma przeciążenia dołączanie <xref:System.Speech.Recognition.GrammarBuilder>, <xref:System.String>, <xref:System.Speech.Recognition.Choices>, <xref:System.Speech.Recognition.SemanticResultKey>, i <xref:System.Speech.Recognition.SemanticResultValue> obiektów.</span><span class="sxs-lookup"><span data-stu-id="3681d-279">This method has overloads for appending <xref:System.Speech.Recognition.GrammarBuilder>, <xref:System.String>, <xref:System.Speech.Recognition.Choices>, <xref:System.Speech.Recognition.SemanticResultKey>, and <xref:System.Speech.Recognition.SemanticResultValue> objects.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="3681d-280">Aparat rozpoznawania mowy może zgłosić wyjątek, korzystając z gramatyki rozpoznawania mowy, który zawiera zduplikowane elementy semantyki z taką samą nazwę klucza lub wielu elementów semantycznych, które wielokrotnie może modyfikować wartości tego samego elementu semantycznego.</span><span class="sxs-lookup"><span data-stu-id="3681d-280">The speech recognizer can throw an exception when using a speech recognition grammar that contains duplicate semantic elements with the same key name or multiple semantic elements that could repeatedly modify the value of the same semantic element.</span></span> 
  
 <span data-ttu-id="3681d-281">Aby uzyskać więcej informacji na temat tworzenia i używania gramatyki rozpoznawania mowy, zobacz [rozpoznawania mowy](https://docs.microsoft.com/previous-versions/office/developer/speech-technologies/hh361633(v=office.14)) i [tworzenia gramatyki GrammarBuilder](https://msdn.microsoft.com/library/7e2cc577-cb05-4318-9da3-7c8675d3d9ae).</span><span class="sxs-lookup"><span data-stu-id="3681d-281">For more information about building and using speech recognition grammars, see [Speech Recognition](https://docs.microsoft.com/previous-versions/office/developer/speech-technologies/hh361633(v=office.14)) and [Creating GrammarBuilder Grammars](https://msdn.microsoft.com/library/7e2cc577-cb05-4318-9da3-7c8675d3d9ae).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Append">
      <MemberSignature Language="C#" Value="public void Append (System.Speech.Recognition.Choices alternateChoices);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Append(class System.Speech.Recognition.Choices alternateChoices) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.Append(System.Speech.Recognition.Choices)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Append (alternateChoices As Choices)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Append(System::Speech::Recognition::Choices ^ alternateChoices);" />
      <MemberSignature Language="F#" Value="member this.Append : System.Speech.Recognition.Choices -&gt; unit" Usage="grammarBuilder.Append alternateChoices" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="alternateChoices" Type="System.Speech.Recognition.Choices" />
      </Parameters>
      <Docs>
        <param name="alternateChoices"><span data-ttu-id="3681d-282">Zestaw rozwiązań alternatywnych, aby dołączyć.</span><span class="sxs-lookup"><span data-stu-id="3681d-282">The set of alternatives to append.</span></span></param>
        <summary><span data-ttu-id="3681d-283">Dołącza zbiór alternatywy dla bieżącej sekwencji elementy gramatyki.</span><span class="sxs-lookup"><span data-stu-id="3681d-283">Appends a set of alternatives to the current sequence of grammar elements.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3681d-284">`alternateChoices` zostanie dodany na końcu bieżącego sekwencję elementów.</span><span class="sxs-lookup"><span data-stu-id="3681d-284">`alternateChoices` is added to the end of the current sequence of elements.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="3681d-285">Gdy dołączasz <xref:System.Speech.Recognition.Choices> obiektów, które zawierają <xref:System.Speech.Recognition.SemanticResultValue> lub <xref:System.Speech.Recognition.SemanticResultKey> wystąpień do <xref:System.Speech.Recognition.GrammarBuilder> obiektu, upewnij się, można uniknąć tworzenia zduplikowane elementy semantyki z taką samą nazwę klucza lub wielu elementów semantycznych, które można wielokrotnie modyfikowanie <xref:System.Speech.Recognition.SemanticValue.Value%2A> właściwość <xref:System.Speech.Recognition.SemanticValue> obiektu.</span><span class="sxs-lookup"><span data-stu-id="3681d-285">When you append <xref:System.Speech.Recognition.Choices> objects that contain <xref:System.Speech.Recognition.SemanticResultValue> or <xref:System.Speech.Recognition.SemanticResultKey> instances to a <xref:System.Speech.Recognition.GrammarBuilder> object, make sure you avoid creating duplicate semantic elements with the same key name or multiple semantic elements that could repeatedly modify the <xref:System.Speech.Recognition.SemanticValue.Value%2A> property of a <xref:System.Speech.Recognition.SemanticValue> object.</span></span> <span data-ttu-id="3681d-286">Aparat rozpoznawania mowy może zgłosić wyjątek, jeśli wykryje nieważną tych okolicznościach.</span><span class="sxs-lookup"><span data-stu-id="3681d-286">The speech recognizer can throw an exception if it encounters these circumstances.</span></span>
  
   
  
## Examples  
 <span data-ttu-id="3681d-287">Poniższy przykład tworzy gramatyki rozpoznawania mowy, zwrotów, takie jak "James wywołania w miejscu pracy" i "Anna wywołania na jej telefonu komórkowego", gdy wyraz "phone" jest opcjonalna.</span><span class="sxs-lookup"><span data-stu-id="3681d-287">The following example creates a speech recognition grammar for phrases such as "Call James at work" and "Call Anne on her cell phone", where the word "phone" is optional.</span></span> <span data-ttu-id="3681d-288">W przykładzie wyróżniono użytkowania <xref:System.Speech.Recognition.GrammarBuilder.Append%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="3681d-288">The example highlights the use of the <xref:System.Speech.Recognition.GrammarBuilder.Append%2A> method.</span></span>  
  
```csharp  
  
public static Grammar CreatePhonePhrase()  
{  
  // Create alternatives for person names, locations, devices, and pronouns.  
  Choices personChoice = new Choices(new string[] {"Anne", "James", "Mary", "Sam"});  
  Choices locationChoice = new Choices(new string[] {"home", "work"});  
  Choices deviceChoice = new Choices(new string[] {"home", "work", "cell"});  
  Choices pronounChoice = new Choices(new string[] {"his", "her"});  
  
  // Create a phrase for the receiving device, which optionally contains the word "phone".  
  GrammarBuilder devicePhrase = new GrammarBuilder(pronounChoice);  
  devicePhrase.Append(deviceChoice);  
  devicePhrase.Append("phone", 0, 1);  
  
  // Create alternatives for phrases specifying a device or a location.  
  GrammarBuilder atLocation = new GrammarBuilder("at");  
  atLocation.Append(locationChoice);  
  
  GrammarBuilder onDevice = new GrammarBuilder("on");  
  onDevice.Append(devicePhrase);  
  
  Choices howChoice = new Choices(new GrammarBuilder[] {atLocation, onDevice});  
  
  // Build the final phrase.  
  GrammarBuilder callWho = new GrammarBuilder("Call");  
  callWho.Append(personChoice);  
  callWho.Append(howChoice);  
  
  // Create the Grammar object.  
  Grammar callGrammar = new Grammar(callWho);  
  callGrammar.Name = "Call Grammar";  
  
  return callGrammar;  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Append">
      <MemberSignature Language="C#" Value="public void Append (System.Speech.Recognition.GrammarBuilder builder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Append(class System.Speech.Recognition.GrammarBuilder builder) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.Append(System.Speech.Recognition.GrammarBuilder)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Append (builder As GrammarBuilder)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Append(System::Speech::Recognition::GrammarBuilder ^ builder);" />
      <MemberSignature Language="F#" Value="member this.Append : System.Speech.Recognition.GrammarBuilder -&gt; unit" Usage="grammarBuilder.Append builder" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="builder" Type="System.Speech.Recognition.GrammarBuilder" />
      </Parameters>
      <Docs>
        <param name="builder"><span data-ttu-id="3681d-289">Element gramatyki do dołączenia.</span><span class="sxs-lookup"><span data-stu-id="3681d-289">The grammar element to append.</span></span></param>
        <summary><span data-ttu-id="3681d-290">Dołącza elementu gramatyki do bieżącej sekwencji elementy gramatyki.</span><span class="sxs-lookup"><span data-stu-id="3681d-290">Appends a grammar element to the current sequence of grammar elements.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3681d-291">`builder` zostanie dodany na końcu aktualna sekwencja elementy gramatyki.</span><span class="sxs-lookup"><span data-stu-id="3681d-291">`builder` is added to the end of the current sequence of grammar elements.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3681d-292">Gdy dołączasz <xref:System.Speech.Recognition.GrammarBuilder> obiektów, które zawierają <xref:System.Speech.Recognition.SemanticResultValue> lub <xref:System.Speech.Recognition.SemanticResultKey> wystąpień do <xref:System.Speech.Recognition.GrammarBuilder> obiektu, upewnij się, można uniknąć tworzenia zduplikowane elementy semantyki z taką samą nazwę klucza lub wielu elementów semantycznych, które można wielokrotnie modyfikowanie <xref:System.Speech.Recognition.SemanticValue.Value%2A> właściwość <xref:System.Speech.Recognition.SemanticValue> obiektu.</span><span class="sxs-lookup"><span data-stu-id="3681d-292">When you append <xref:System.Speech.Recognition.GrammarBuilder> objects that contain <xref:System.Speech.Recognition.SemanticResultValue> or <xref:System.Speech.Recognition.SemanticResultKey> instances to a <xref:System.Speech.Recognition.GrammarBuilder> object, make sure you avoid creating duplicate semantic elements with the same key name or multiple semantic elements that could repeatedly modify the <xref:System.Speech.Recognition.SemanticValue.Value%2A> property of a <xref:System.Speech.Recognition.SemanticValue> object.</span></span> <span data-ttu-id="3681d-293">Aparat rozpoznawania mowy może zgłosić wyjątek, jeśli wykryje nieważną tych okolicznościach.</span><span class="sxs-lookup"><span data-stu-id="3681d-293">The speech recognizer can throw an exception if it encounters these circumstances.</span></span> 
  
   
  
## Examples  
 <span data-ttu-id="3681d-294">Poniższy przykład tworzy gramatyki rozpoznawania mowy, zwrotów, takie jak "James wywołania w miejscu pracy" i "Anna wywołania na jej telefonu komórkowego", gdy wyraz "phone" jest opcjonalna.</span><span class="sxs-lookup"><span data-stu-id="3681d-294">The following example creates a speech recognition grammar for phrases such as "Call James at work" and "Call Anne on her cell phone", where the word "phone" is optional.</span></span> <span data-ttu-id="3681d-295"><xref:System.Speech.Recognition.GrammarBuilder> i <xref:System.Speech.Recognition.Choices> obiekty są używane do konstruowania gramatyki.</span><span class="sxs-lookup"><span data-stu-id="3681d-295"><xref:System.Speech.Recognition.GrammarBuilder> and <xref:System.Speech.Recognition.Choices> objects are used to construct the grammar.</span></span> <span data-ttu-id="3681d-296">W przykładzie wyróżniono użytkowania <xref:System.Speech.Recognition.GrammarBuilder.Append%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="3681d-296">The example highlights the use of the <xref:System.Speech.Recognition.GrammarBuilder.Append%2A> method.</span></span>  
  
```csharp  
  
public static Grammar CreatePhonePhrase()  
{  
  // Create alternatives for person names, locations, devices, and pronouns.  
  Choices personChoice = new Choices(new string[] {"Anne", "James", "Mary", "Sam"});  
  Choices locationChoice = new Choices(new string[] {"home", "work"});  
  Choices deviceChoice = new Choices(new string[] {"home", "work", "cell"});  
  Choices pronounChoice = new Choices(new string[] {"his", "her"});  
  
  // Create a phrase for the receiving device, which optionally contains the word "phone".  
  GrammarBuilder devicePhrase = new GrammarBuilder(pronounChoice);  
  devicePhrase.Append(deviceChoice);  
  devicePhrase.Append("phone", 0, 1);  
  
  // Create alternatives for phrases specifying a device or a location.  
  GrammarBuilder atLocation = new GrammarBuilder("at");  
  atLocation.Append(locationChoice);  
  
  GrammarBuilder onDevice = new GrammarBuilder("on");  
  onDevice.Append(devicePhrase);  
  
  Choices howChoice = new Choices(new GrammarBuilder[] {atLocation, onDevice});  
  
  // Build the final phrase.  
  GrammarBuilder callWho = new GrammarBuilder("Call");  
  callWho.Append(personChoice);  
  callWho.Append(howChoice);  
  
  // Create the Grammar object.  
  Grammar callGrammar = new Grammar(callWho);  
  callGrammar.Name = "Call Grammar";  
  
  return callGrammar;  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.AppendDictation" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.AppendRuleReference(System.String)" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.AppendWildcard" />
      </Docs>
    </Member>
    <Member MemberName="Append">
      <MemberSignature Language="C#" Value="public void Append (System.Speech.Recognition.SemanticResultKey key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Append(class System.Speech.Recognition.SemanticResultKey key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.Append(System.Speech.Recognition.SemanticResultKey)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Append (key As SemanticResultKey)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Append(System::Speech::Recognition::SemanticResultKey ^ key);" />
      <MemberSignature Language="F#" Value="member this.Append : System.Speech.Recognition.SemanticResultKey -&gt; unit" Usage="grammarBuilder.Append key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Speech.Recognition.SemanticResultKey" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="3681d-297">Semantyczne klucz do dołączenia.</span><span class="sxs-lookup"><span data-stu-id="3681d-297">The semantic key to append.</span></span></param>
        <summary><span data-ttu-id="3681d-298">Dołącza semantycznego klucza do bieżącej sekwencji elementy gramatyki.</span><span class="sxs-lookup"><span data-stu-id="3681d-298">Appends a semantic key to the current sequence of grammar elements.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3681d-299">`key` zostanie dodany na końcu bieżącego sekwencję elementów.</span><span class="sxs-lookup"><span data-stu-id="3681d-299">`key` is added to the end of the current sequence of elements.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="3681d-300">Gdy dołączasz <xref:System.Speech.Recognition.SemanticResultValue> lub <xref:System.Speech.Recognition.SemanticResultKey> wystąpień do <xref:System.Speech.Recognition.GrammarBuilder> obiektu, upewnij się, można uniknąć tworzenia zduplikowane elementy semantyki z taką samą nazwę klucza lub wielu elementów semantycznych, które wielokrotnie można zmodyfikować <xref:System.Speech.Recognition.SemanticValue.Value%2A> właściwość <xref:System.Speech.Recognition.SemanticValue> obiektu.</span><span class="sxs-lookup"><span data-stu-id="3681d-300">When you append  <xref:System.Speech.Recognition.SemanticResultValue> or <xref:System.Speech.Recognition.SemanticResultKey> instances to a <xref:System.Speech.Recognition.GrammarBuilder> object, make sure you avoid creating duplicate semantic elements with the same key name or multiple semantic elements that could repeatedly modify the <xref:System.Speech.Recognition.SemanticValue.Value%2A> property of a <xref:System.Speech.Recognition.SemanticValue> object.</span></span> <span data-ttu-id="3681d-301">Aparat rozpoznawania mowy może zgłosić wyjątek, jeśli wykryje nieważną tych okolicznościach.</span><span class="sxs-lookup"><span data-stu-id="3681d-301">The speech recognizer can throw an exception if it encounters these circumstances.</span></span>
  
   
  
## Examples  
 <span data-ttu-id="3681d-302">Poniższy przykład jest częścią aplikacji konsoli dotyczące wybierania początkowe i docelowe miast w locie.</span><span class="sxs-lookup"><span data-stu-id="3681d-302">The following example is part of a console application for choosing origin and destination cities for a flight.</span></span> <span data-ttu-id="3681d-303">Aplikacja rozpoznaje fraz, takie jak "Chcę się z Miami do Chicago".</span><span class="sxs-lookup"><span data-stu-id="3681d-303">The application recognizes phrases such as "I want to fly from Miami to Chicago."</span></span> <span data-ttu-id="3681d-304">Obsługa <xref:System.Speech.Recognition.SpeechRecognitionEngine.SpeechRecognized> zdarzeń używa <xref:System.Speech.Recognition.SemanticResultKey> można wyodrębnić kod lotniska, określone w <xref:System.Speech.Recognition.SemanticResultValue> dla miast początkowego i docelowego.</span><span class="sxs-lookup"><span data-stu-id="3681d-304">The handler for the <xref:System.Speech.Recognition.SpeechRecognitionEngine.SpeechRecognized> event uses the <xref:System.Speech.Recognition.SemanticResultKey> to extract the airport code specified in the <xref:System.Speech.Recognition.SemanticResultValue> for the origin and destination cities.</span></span>  
  
```csharp  
using System;  
using System.Speech.Recognition;  
  
namespace SampleRecognition  
{  
  class Program  
  {  
    static void Main(string[] args)  
  
    // Initialize an in-process speech recognition engine.  
    {  
      using (SpeechRecognitionEngine recognizer =  
         new SpeechRecognitionEngine())  
      {  
  
        // Create a Choices object and add  cities and airport codes  
        // using SemanticResultValue objects.  
        Choices cities = new Choices();  
        cities.Add(new SemanticResultValue("Chicago", "ORD"));  
        cities.Add(new SemanticResultValue("Boston", "BOS"));  
        cities.Add(new SemanticResultValue("Miami", "MIA"));  
        cities.Add(new SemanticResultValue("Dallas", "DFW"));  
  
        // Build the phrase and add SemanticResultKeys.  
        GrammarBuilder chooseCities = new GrammarBuilder();  
        chooseCities.Append("I want to fly from");  
        chooseCities.Append(new SemanticResultKey("origin", cities));  
        chooseCities.Append("to");  
        chooseCities.Append(new SemanticResultKey("destination", cities));  
  
        // Build a Grammar object from the GrammarBuilder.  
        Grammar bookFlight = new Grammar(chooseCities);  
        bookFlight.Name = "Book Flight";  
  
        // Add a handler for the LoadGrammarCompleted event.  
        recognizer.LoadGrammarCompleted +=   
          new EventHandler<LoadGrammarCompletedEventArgs>(recognizer_LoadGrammarCompleted);  
  
        // Add a handler for the SpeechRecognized event.  
        recognizer.SpeechRecognized +=   
          new EventHandler<SpeechRecognizedEventArgs>(recognizer_SpeechRecognized);  
  
        // Configure the input to the recognizer.  
        recognizer.SetInputToDefaultAudioDevice();  
  
        // Load the grammar object and start recognition.  
        recognizer.LoadGrammarAsync(bookFlight);  
        recognizer.RecognizeAsync();  
  
        // Keep the console window open.  
        Console.ReadLine();  
      }  
    }  
  
    // Handle the LoadGrammarCompleted event.  
    static void recognizer_LoadGrammarCompleted(object sender, LoadGrammarCompletedEventArgs e)  
    {  
      Console.WriteLine("Grammar loaded: " + e.Grammar.Name);  
      Console.WriteLine();  
    }  
  
    // Handle the SpeechRecognized event.  
    static void recognizer_SpeechRecognized(object sender, SpeechRecognizedEventArgs e)  
    {  
      Console.WriteLine("Speech recognized:  " + e.Result.Text);  
      Console.WriteLine();  
      Console.WriteLine("Semantic results:");  
      Console.WriteLine("  The flight origin is " + e.Result.Semantics["origin"].Value);  
      Console.WriteLine("  The flight destination is " + e.Result.Semantics["destination"].Value);  
    }  
  }  
}  
  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.AppendDictation" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.AppendRuleReference(System.String)" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.AppendWildcard" />
      </Docs>
    </Member>
    <Member MemberName="Append">
      <MemberSignature Language="C#" Value="public void Append (System.Speech.Recognition.SemanticResultValue value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Append(class System.Speech.Recognition.SemanticResultValue value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.Append(System.Speech.Recognition.SemanticResultValue)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Append (value As SemanticResultValue)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Append(System::Speech::Recognition::SemanticResultValue ^ value);" />
      <MemberSignature Language="F#" Value="member this.Append : System.Speech.Recognition.SemanticResultValue -&gt; unit" Usage="grammarBuilder.Append value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Speech.Recognition.SemanticResultValue" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="3681d-305">Semantyczne wartość do dołączenia.</span><span class="sxs-lookup"><span data-stu-id="3681d-305">The semantic value to append.</span></span></param>
        <summary><span data-ttu-id="3681d-306">Dołącza wartość semantycznego aktualna sekwencja elementy gramatyki.</span><span class="sxs-lookup"><span data-stu-id="3681d-306">Appends a semantic value to the current sequence of grammar elements.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3681d-307">`value` zostanie dodany na końcu bieżącego sekwencję elementów.</span><span class="sxs-lookup"><span data-stu-id="3681d-307">`value` is added to the end of the current sequence of elements.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="3681d-308">Gdy dołączasz <xref:System.Speech.Recognition.SemanticResultValue> lub <xref:System.Speech.Recognition.SemanticResultKey> wystąpień do <xref:System.Speech.Recognition.GrammarBuilder> obiektu, upewnij się, można uniknąć tworzenia zduplikowane elementy semantyki z taką samą nazwę klucza lub wielu elementów semantycznych, które wielokrotnie można zmodyfikować <xref:System.Speech.Recognition.SemanticValue.Value%2A> właściwość <xref:System.Speech.Recognition.SemanticValue> obiektu.</span><span class="sxs-lookup"><span data-stu-id="3681d-308">When you append  <xref:System.Speech.Recognition.SemanticResultValue> or <xref:System.Speech.Recognition.SemanticResultKey> instances to a <xref:System.Speech.Recognition.GrammarBuilder> object, make sure you avoid creating duplicate semantic elements with the same key name or multiple semantic elements that could repeatedly modify the <xref:System.Speech.Recognition.SemanticValue.Value%2A> property of a <xref:System.Speech.Recognition.SemanticValue> object.</span></span> <span data-ttu-id="3681d-309">Aparat rozpoznawania mowy może zgłosić wyjątek, jeśli wykryje nieważną tych okolicznościach.</span><span class="sxs-lookup"><span data-stu-id="3681d-309">The speech recognizer can throw an exception if it encounters these circumstances.</span></span>
  
   
  
## Examples  
 <span data-ttu-id="3681d-310">Poniższy przykład jest częścią aplikacji konsoli dotyczące wybierania początkowe i docelowe miast w locie.</span><span class="sxs-lookup"><span data-stu-id="3681d-310">The following example is part of a console application for choosing origin and destination cities for a flight.</span></span> <span data-ttu-id="3681d-311">Aplikacja rozpoznaje fraz, takie jak "Chcę się z Miami do Chicago".</span><span class="sxs-lookup"><span data-stu-id="3681d-311">The application recognizes phrases such as "I want to fly from Miami to Chicago."</span></span> <span data-ttu-id="3681d-312">Obsługa <xref:System.Speech.Recognition.SpeechRecognitionEngine.SpeechRecognized> zdarzeń używa <xref:System.Speech.Recognition.SemanticResultKey> można wyodrębnić kod lotniska, określone w <xref:System.Speech.Recognition.SemanticResultValue> dla miast początkowego i docelowego.</span><span class="sxs-lookup"><span data-stu-id="3681d-312">The handler for the <xref:System.Speech.Recognition.SpeechRecognitionEngine.SpeechRecognized> event uses the <xref:System.Speech.Recognition.SemanticResultKey> to extract the airport code specified in the <xref:System.Speech.Recognition.SemanticResultValue> for the origin and destination cities.</span></span>  
  
```csharp  
  
using System;  
using System.Speech.Recognition;  
  
namespace SampleRecognition  
{  
  class Program  
  {  
    static void Main(string[] args)  
  
    // Initialize an in-process speech recognition engine.  
    {  
      using (SpeechRecognitionEngine recognizer =  
         new SpeechRecognitionEngine())  
      {  
  
        // Create GrammarBuilder objects and append SemanticResultValue objects   
        // that contain cities and airport codes.  
  
        GrammarBuilder chicago = new GrammarBuilder();  
        chicago.Append(new SemanticResultValue("Chicago", "ORD"));  
  
        GrammarBuilder boston = new GrammarBuilder();  
        boston.Append(new SemanticResultValue("Boston", "BOS"));  
  
        GrammarBuilder miami = new GrammarBuilder();  
        miami.Append(new SemanticResultValue("Miami", "MIA"));  
  
        GrammarBuilder dallas = new GrammarBuilder();  
        dallas.Append(new SemanticResultValue("Dallas", "DFW"));  
  
        // Create a Choices object and add the cities using implicit conversion from   
        // SemanticResultValue to GrammarBuilder.  
        Choices cities = new Choices();  
        cities.Add(new Choices(new GrammarBuilder[] { chicago, boston, miami, dallas }));  
  
        // Build the phrase and add SemanticResultKeys.  
        GrammarBuilder chooseCities = new GrammarBuilder();  
        chooseCities.Append("I want to fly from");  
        chooseCities.Append(new SemanticResultKey("origin", cities));  
        chooseCities.Append("to");  
        chooseCities.Append(new SemanticResultKey("destination", cities));  
  
        // Build a Grammar object from the GrammarBuilder.  
        Grammar bookFlight = new Grammar(chooseCities);  
        bookFlight.Name = "Book Flight";  
  
        // Add a handler for the LoadGrammarCompleted event.  
        recognizer.LoadGrammarCompleted +=   
          new EventHandler<LoadGrammarCompletedEventArgs>(recognizer_LoadGrammarCompleted);  
  
        // Add a handler for the SpeechRecognized event.  
        recognizer.SpeechRecognized +=   
          new EventHandler<SpeechRecognizedEventArgs>(recognizer_SpeechRecognized);  
  
        // Configure the input to the recognizer.  
        recognizer.SetInputToDefaultAudioDevice();  
  
        // Load the grammar object and start recognition.  
        recognizer.LoadGrammarAsync(bookFlight);  
        recognizer.RecognizeAsync();  
  
        // Keep the console window open.  
        Console.ReadLine();  
      }  
    }  
    // Handle the LoadGrammarCompleted event.  
    static void recognizer_LoadGrammarCompleted(object sender, LoadGrammarCompletedEventArgs e)  
    {  
      Console.WriteLine("Grammar loaded: " + e.Grammar.Name);  
      Console.WriteLine();  
    }  
  
    // Handle the SpeechRecognized event.  
    static void recognizer_SpeechRecognized(object sender, SpeechRecognizedEventArgs e)  
    {  
      Console.WriteLine("Speech recognized:  " + e.Result.Text);  
      Console.WriteLine();  
      Console.WriteLine("Semantic results:");  
      Console.WriteLine("  The flight origin is " + e.Result.Semantics["origin"].Value);  
      Console.WriteLine("  The flight destination is " + e.Result.Semantics["destination"].Value);  
    }  
  }  
}  
  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.AppendDictation" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.AppendRuleReference(System.String)" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.AppendWildcard" />
      </Docs>
    </Member>
    <Member MemberName="Append">
      <MemberSignature Language="C#" Value="public void Append (string phrase);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Append(string phrase) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.Append(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Append (phrase As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Append(System::String ^ phrase);" />
      <MemberSignature Language="F#" Value="member this.Append : string -&gt; unit" Usage="grammarBuilder.Append phrase" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="phrase" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="phrase"><span data-ttu-id="3681d-313">Sekwencja słowa do dołączenia.</span><span class="sxs-lookup"><span data-stu-id="3681d-313">The sequence of words to append.</span></span></param>
        <summary><span data-ttu-id="3681d-314">Dołącza frazę do bieżącej sekwencji elementy gramatyki.</span><span class="sxs-lookup"><span data-stu-id="3681d-314">Appends a phrase to the current sequence of grammar elements.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3681d-315">`phrase` zostanie dodany na końcu bieżącego sekwencję elementów.</span><span class="sxs-lookup"><span data-stu-id="3681d-315">`phrase` is added to the end of the current sequence of elements.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.AppendDictation" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.AppendRuleReference(System.String)" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.AppendWildcard" />
      </Docs>
    </Member>
    <Member MemberName="Append">
      <MemberSignature Language="C#" Value="public void Append (string phrase, System.Speech.Recognition.SubsetMatchingMode subsetMatchingCriteria);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Append(string phrase, valuetype System.Speech.Recognition.SubsetMatchingMode subsetMatchingCriteria) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.Append(System.String,System.Speech.Recognition.SubsetMatchingMode)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Append (phrase As String, subsetMatchingCriteria As SubsetMatchingMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Append(System::String ^ phrase, System::Speech::Recognition::SubsetMatchingMode subsetMatchingCriteria);" />
      <MemberSignature Language="F#" Value="member this.Append : string * System.Speech.Recognition.SubsetMatchingMode -&gt; unit" Usage="grammarBuilder.Append (phrase, subsetMatchingCriteria)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="phrase" Type="System.String" />
        <Parameter Name="subsetMatchingCriteria" Type="System.Speech.Recognition.SubsetMatchingMode" />
      </Parameters>
      <Docs>
        <param name="phrase"><span data-ttu-id="3681d-316">Sekwencja słowa do dołączenia.</span><span class="sxs-lookup"><span data-stu-id="3681d-316">The sequence of words to append.</span></span></param>
        <param name="subsetMatchingCriteria"><span data-ttu-id="3681d-317">Tryb pasującego gramatyki używany do rozpoznawania frazę.</span><span class="sxs-lookup"><span data-stu-id="3681d-317">The matching mode the grammar uses to recognize the phrase.</span></span></param>
        <summary><span data-ttu-id="3681d-318">Dołącza element dla podzbioru frazę do bieżącej sekwencji elementy gramatyki.</span><span class="sxs-lookup"><span data-stu-id="3681d-318">Appends an element for a subset of a phrase to the current sequence of grammar elements.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3681d-319">Element podzbioru zostanie dodany na końcu bieżącego sekwencję elementów.</span><span class="sxs-lookup"><span data-stu-id="3681d-319">The subset element is added to the end of the current sequence of elements.</span></span> <span data-ttu-id="3681d-320">Aby uzyskać więcej informacji o tworzeniu gramatyki rozpoznawania mowy, przy użyciu parametrów, zobacz [przy użyciu parametrów do utworzenia gramatyki GrammarBuilder](https://msdn.microsoft.com/library/0d87b445-a342-4369-9b3f-91d07fd7e114).</span><span class="sxs-lookup"><span data-stu-id="3681d-320">For more information about building a speech recognition grammar using strings, see [Using Strings to Create a GrammarBuilder Grammar](https://msdn.microsoft.com/library/0d87b445-a342-4369-9b3f-91d07fd7e114).</span></span>  
  
 <span data-ttu-id="3681d-321">Aby uzyskać szczegółowe informacje dotyczące użycia podzbioru dopasowania trybów, zobacz <xref:System.Speech.Recognition.SubsetMatchingMode?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="3681d-321">For detailed information on the use of subset matching modes, see <xref:System.Speech.Recognition.SubsetMatchingMode?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3681d-322">Poniższy przykład tworzy gramatyki rozpoznawania mowy, dla każdego <xref:System.Speech.Recognition.SubsetMatchingMode> wartość.</span><span class="sxs-lookup"><span data-stu-id="3681d-322">The following example creates a speech recognition grammar for each <xref:System.Speech.Recognition.SubsetMatchingMode> value.</span></span> <span data-ttu-id="3681d-323">Na przykład wygenerowanego gramatyki `OrderedSubset` rozpoznaje fraz, "trzy cztery pięć" i "jeden trzy pięć" i gramatyki `Subsequence` rozpoznaje frazę "trzy cztery pięć", ale nie frazę "jeden trzy pięć".</span><span class="sxs-lookup"><span data-stu-id="3681d-323">For example, the generated grammar `OrderedSubset` recognizes the phrases, "three four five" and "one three five", and the grammar `Subsequence` recognizes the phrase "three four five", but not the phrase, "one three five".</span></span>  
  
```csharp  
  
private Grammar[] CreateSubsetMatchTest()  
{  
  List<Grammar> grammars = new List<Grammar>(4);  
  
  string phrase = "one two three four five six";  
  foreach (SubsetMatchingMode mode in  
    Enum.GetValues(typeof(SubsetMatchingMode)))  
  {  
    GrammarBuilder gb = new GrammarBuilder();  
    gb.Append(phrase, mode);  
  
    Grammar grammar = new Grammar(gb);  
    grammar.Name = mode.ToString();  
    grammars.Add(grammar);  
  }  
  
  return grammars.ToArray();  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.AppendDictation" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.AppendRuleReference(System.String)" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.AppendWildcard" />
      </Docs>
    </Member>
    <Member MemberName="Append">
      <MemberSignature Language="C#" Value="public void Append (System.Speech.Recognition.GrammarBuilder builder, int minRepeat, int maxRepeat);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Append(class System.Speech.Recognition.GrammarBuilder builder, int32 minRepeat, int32 maxRepeat) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.Append(System.Speech.Recognition.GrammarBuilder,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Append (builder As GrammarBuilder, minRepeat As Integer, maxRepeat As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Append(System::Speech::Recognition::GrammarBuilder ^ builder, int minRepeat, int maxRepeat);" />
      <MemberSignature Language="F#" Value="member this.Append : System.Speech.Recognition.GrammarBuilder * int * int -&gt; unit" Usage="grammarBuilder.Append (builder, minRepeat, maxRepeat)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="builder" Type="System.Speech.Recognition.GrammarBuilder" />
        <Parameter Name="minRepeat" Type="System.Int32" />
        <Parameter Name="maxRepeat" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="builder"><span data-ttu-id="3681d-324">Element powtarzanych gramatyki do dołączenia.</span><span class="sxs-lookup"><span data-stu-id="3681d-324">The repeated grammar element to append.</span></span></param>
        <param name="minRepeat"><span data-ttu-id="3681d-325">Minimalna liczba przypadków, w których dane wejściowe, dopasowując elementy zdefiniowane przez <paramref name="builder" /> musi wystąpić stanowić dopasowania.</span><span class="sxs-lookup"><span data-stu-id="3681d-325">The minimum number of times that input matching the element defined by <paramref name="builder" /> must occur to constitute a match.</span></span></param>
        <param name="maxRepeat"><span data-ttu-id="3681d-326">Maksymalną liczbę prób danych wejściowych, dopasowując elementy zdefiniowane przez <paramref name="builder" /> może wystąpić stanowić dopasowania.</span><span class="sxs-lookup"><span data-stu-id="3681d-326">The maximum number of times that input matching the element defined by <paramref name="builder" /> can occur to constitute a match.</span></span></param>
        <summary><span data-ttu-id="3681d-327">Dołącza element powtarzanych gramatyki do bieżącej sekwencji elementy gramatyki.</span><span class="sxs-lookup"><span data-stu-id="3681d-327">Appends a repeated grammar element to the current sequence of grammar elements.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3681d-328">Wartość `minRepeat` musi być większa lub równa 0 i mniejsza niż wartość `maxRepeat`.</span><span class="sxs-lookup"><span data-stu-id="3681d-328">The value of `minRepeat` must be greater than or equal to 0 and less than or equal to the value of `maxRepeat`.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="3681d-329">Gdy dołączasz <xref:System.Speech.Recognition.GrammarBuilder> obiektów, które zawierają <xref:System.Speech.Recognition.SemanticResultValue> lub <xref:System.Speech.Recognition.SemanticResultKey> wystąpień do <xref:System.Speech.Recognition.GrammarBuilder> obiektu, upewnij się, można uniknąć tworzenia zduplikowane elementy semantyki z taką samą nazwę klucza lub wielu elementów semantycznych, które można wielokrotnie modyfikowanie <xref:System.Speech.Recognition.SemanticValue.Value%2A> właściwość <xref:System.Speech.Recognition.SemanticValue> obiektu.</span><span class="sxs-lookup"><span data-stu-id="3681d-329">When you append <xref:System.Speech.Recognition.GrammarBuilder> objects that contain <xref:System.Speech.Recognition.SemanticResultValue> or <xref:System.Speech.Recognition.SemanticResultKey> instances to a <xref:System.Speech.Recognition.GrammarBuilder> object, make sure you avoid creating duplicate semantic elements with the same key name or multiple semantic elements that could repeatedly modify the <xref:System.Speech.Recognition.SemanticValue.Value%2A> property of a <xref:System.Speech.Recognition.SemanticValue> object.</span></span> <span data-ttu-id="3681d-330">Aparat rozpoznawania mowy może zgłosić wyjątek, jeśli wykryje nieważną tych okolicznościach.</span><span class="sxs-lookup"><span data-stu-id="3681d-330">The speech recognizer can throw an exception if it encounters these circumstances.</span></span>
  
   
  
## Examples  
 <span data-ttu-id="3681d-331">Poniższy przykład tworzy gramatyki rozpoznawania mowy, zwrotów, takie jak "James wywołania w miejscu pracy" i "Anna wywołania na jej telefonu komórkowego", gdy wyraz "phone" jest opcjonalna.</span><span class="sxs-lookup"><span data-stu-id="3681d-331">The following example creates a speech recognition grammar for phrases such as "Call James at work" and "Call Anne on her cell phone", where the word "phone" is optional.</span></span> <span data-ttu-id="3681d-332"><xref:System.Speech.Recognition.GrammarBuilder> i <xref:System.Speech.Recognition.Choices> obiekty są używane do konstruowania gramatyki.</span><span class="sxs-lookup"><span data-stu-id="3681d-332"><xref:System.Speech.Recognition.GrammarBuilder> and <xref:System.Speech.Recognition.Choices> objects are used to construct the grammar.</span></span> <span data-ttu-id="3681d-333">W przykładzie wyróżniono użytkowania <xref:System.Speech.Recognition.GrammarBuilder.Append%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="3681d-333">The example highlights the use of the <xref:System.Speech.Recognition.GrammarBuilder.Append%2A> method.</span></span>  
  
```csharp  
  
public static Grammar CreatePhonePhrase()  
{  
  // Create alternatives for person names, locations, devices, and pronouns.  
  Choices personChoice = new Choices(new string[] {"Anne", "James", "Mary", "Sam"});  
  Choices locationChoice = new Choices(new string[] {"home", "work"});  
  Choices deviceChoice = new Choices(new string[] {"home", "work", "cell"});  
  Choices pronounChoice = new Choices(new string[] {"his", "her"});  
  
  // Create a phrase for the receiving device, which optionally contains the word "phone".  
  GrammarBuilder devicePhrase = new GrammarBuilder(pronounChoice);  
  devicePhrase.Append(deviceChoice);  
  devicePhrase.Append("phone", 0, 1);  
  
  // Create alternatives for phrases specifying a device or a location.  
  GrammarBuilder atLocation = new GrammarBuilder("at");  
  atLocation.Append(locationChoice);  
  
  GrammarBuilder onDevice = new GrammarBuilder("on");  
  onDevice.Append(devicePhrase);  
  
  Choices howChoice = new Choices(new GrammarBuilder[] {atLocation, onDevice});  
  
  // Build the final phrase.  
  GrammarBuilder callWho = new GrammarBuilder("Call");  
  callWho.Append(personChoice);  
  callWho.Append(howChoice);  
  
  // Create the Grammar object.  
  Grammar callGrammar = new Grammar(callWho);  
  callGrammar.Name = "Call Grammar";  
  
  return callGrammar;  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.AppendDictation" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.AppendRuleReference(System.String)" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.AppendWildcard" />
      </Docs>
    </Member>
    <Member MemberName="Append">
      <MemberSignature Language="C#" Value="public void Append (string phrase, int minRepeat, int maxRepeat);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Append(string phrase, int32 minRepeat, int32 maxRepeat) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.Append(System.String,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Append (phrase As String, minRepeat As Integer, maxRepeat As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Append(System::String ^ phrase, int minRepeat, int maxRepeat);" />
      <MemberSignature Language="F#" Value="member this.Append : string * int * int -&gt; unit" Usage="grammarBuilder.Append (phrase, minRepeat, maxRepeat)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="phrase" Type="System.String" />
        <Parameter Name="minRepeat" Type="System.Int32" />
        <Parameter Name="maxRepeat" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="phrase"><span data-ttu-id="3681d-334">Sekwencja powtarzanych słowa do dołączenia.</span><span class="sxs-lookup"><span data-stu-id="3681d-334">The repeated sequence of words to append.</span></span></param>
        <param name="minRepeat"><span data-ttu-id="3681d-335">Minimalna liczba przypadków, które wejściowe dopasowania <paramref name="phrase" /> musi wystąpić stanowić dopasowania.</span><span class="sxs-lookup"><span data-stu-id="3681d-335">The minimum number of times that input matching <paramref name="phrase" /> must occur to constitute a match.</span></span></param>
        <param name="maxRepeat"><span data-ttu-id="3681d-336">Maksymalną liczbę prób danych wejściowych dopasowania <paramref name="phrase" /> może wystąpić stanowić dopasowania.</span><span class="sxs-lookup"><span data-stu-id="3681d-336">The maximum number of times that input matching <paramref name="phrase" /> can occur to constitute a match.</span></span></param>
        <summary><span data-ttu-id="3681d-337">Dołącza powtarzanych frazę do bieżącej sekwencji elementy gramatyki.</span><span class="sxs-lookup"><span data-stu-id="3681d-337">Appends a repeated phrase to the current sequence of grammar elements.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3681d-338">Wartość `minRepeat` musi być większa lub równa 0 i mniejsza niż wartość `maxRepeat`.</span><span class="sxs-lookup"><span data-stu-id="3681d-338">The value of `minRepeat` must be greater than or equal to 0 and less than or equal to the value of `maxRepeat`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3681d-339">Poniższy przykład tworzy gramatyki rozpoznawania mowy, zwrotów, takie jak "James wywołania w miejscu pracy" i "Anna wywołania na jej telefonu komórkowego", gdy wyraz "phone" jest opcjonalna.</span><span class="sxs-lookup"><span data-stu-id="3681d-339">The following example creates a speech recognition grammar for phrases such as "Call James at work" and "Call Anne on her cell phone", where the word "phone" is optional.</span></span> <span data-ttu-id="3681d-340"><xref:System.Speech.Recognition.GrammarBuilder> i <xref:System.Speech.Recognition.Choices> obiekty są używane do konstruowania gramatyki.</span><span class="sxs-lookup"><span data-stu-id="3681d-340"><xref:System.Speech.Recognition.GrammarBuilder> and <xref:System.Speech.Recognition.Choices> objects are used to construct the grammar.</span></span> <span data-ttu-id="3681d-341">W przykładzie wyróżniono użytkowania <xref:System.Speech.Recognition.GrammarBuilder.Append%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="3681d-341">The example highlights the use of the <xref:System.Speech.Recognition.GrammarBuilder.Append%2A> method.</span></span>  
  
```csharp  
  
public static Grammar CreatePhonePhrase()  
{  
  // Create alternatives for person names, locations, devices, and pronouns.  
  Choices personChoice = new Choices(new string[] {"Anne", "James", "Mary", "Sam"});  
  Choices locationChoice = new Choices(new string[] {"home", "work"});  
  Choices deviceChoice = new Choices(new string[] {"home", "work", "cell"});  
  Choices pronounChoice = new Choices(new string[] {"his", "her"});  
  
  // Create a phrase for the receiving device, which optionally contains the word "phone".  
  GrammarBuilder devicePhrase = new GrammarBuilder(pronounChoice);  
  devicePhrase.Append(deviceChoice);  
  devicePhrase.Append("phone", 0, 1);  
  
  // Create alternatives for phrases specifying a device or a location.  
  GrammarBuilder atLocation = new GrammarBuilder("at");  
  atLocation.Append(locationChoice);  
  
  GrammarBuilder onDevice = new GrammarBuilder("on");  
  onDevice.Append(devicePhrase);  
  
  Choices howChoice = new Choices(new GrammarBuilder[] {atLocation, onDevice});  
  
  // Build the final phrase.  
  GrammarBuilder callWho = new GrammarBuilder("Call");  
  callWho.Append(personChoice);  
  callWho.Append(howChoice);  
  
  // Create the Grammar object.  
  Grammar callGrammar = new Grammar(callWho);  
  callGrammar.Name = "Call Grammar";  
  
  return callGrammar;  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.AppendDictation" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.AppendRuleReference(System.String)" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.AppendWildcard" />
      </Docs>
    </Member>
    <MemberGroup MemberName="AppendDictation">
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="3681d-342">Dołącza gramatyki dyktowanie aktualna sekwencja elementy gramatyki.</span><span class="sxs-lookup"><span data-stu-id="3681d-342">Appends a dictation grammar to the current sequence of grammar elements.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3681d-343"><xref:System.Speech.Recognition.GrammarBuilder.AppendDictation%2A> Metody umożliwiają dołączanie gramatyki dyktowanie jako zasadę, aby <xref:System.Speech.Recognition.GrammarBuilder>.</span><span class="sxs-lookup"><span data-stu-id="3681d-343">The <xref:System.Speech.Recognition.GrammarBuilder.AppendDictation%2A> methods allow you to append a dictation grammar as a rule to a <xref:System.Speech.Recognition.GrammarBuilder>.</span></span>  
  
 <span data-ttu-id="3681d-344">Aby uzyskać więcej informacji dotyczących gramatyki dyktowania, zobacz <xref:System.Speech.Recognition.DictationGrammar>.</span><span class="sxs-lookup"><span data-stu-id="3681d-344">For more information on dictation grammars, see <xref:System.Speech.Recognition.DictationGrammar>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="AppendDictation">
      <MemberSignature Language="C#" Value="public void AppendDictation ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AppendDictation() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.AppendDictation" />
      <MemberSignature Language="VB.NET" Value="Public Sub AppendDictation ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AppendDictation();" />
      <MemberSignature Language="F#" Value="member this.AppendDictation : unit -&gt; unit" Usage="grammarBuilder.AppendDictation " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="3681d-345">Dołącza gramatyki dyktowanie domyślne do bieżącej sekwencji elementy gramatyki.</span><span class="sxs-lookup"><span data-stu-id="3681d-345">Appends the default dictation grammar to the current sequence of grammar elements.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3681d-346">Aby uzyskać więcej informacji dotyczących gramatyki dyktowania, zobacz <xref:System.Speech.Recognition.DictationGrammar>.</span><span class="sxs-lookup"><span data-stu-id="3681d-346">For more information on dictation grammars, see <xref:System.Speech.Recognition.DictationGrammar>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3681d-347">Poniższy przykład tworzy uwzględniająca dyktowanie gramatyki rozpoznawania mowy.</span><span class="sxs-lookup"><span data-stu-id="3681d-347">The following example creates a speech recognition grammar that incorporates dictation.</span></span>  
  
```csharp  
  
GrammarBuilder builder = new GrammarBuilder();  
builder.Append("begin");  
builder.AppendDictation();  
builder.Append("end");  
Grammar grammarWithDictation = new Grammar(builder);  
grammarWithDictation.Name = "Grammar with Dictation";  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Speech.Recognition.DictationGrammar" />
      </Docs>
    </Member>
    <Member MemberName="AppendDictation">
      <MemberSignature Language="C#" Value="public void AppendDictation (string category);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AppendDictation(string category) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.AppendDictation(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AppendDictation (category As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AppendDictation(System::String ^ category);" />
      <MemberSignature Language="F#" Value="member this.AppendDictation : string -&gt; unit" Usage="grammarBuilder.AppendDictation category" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="category" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="category"><span data-ttu-id="3681d-348">Kategoria gramatyki dyktowanie do dołączenia.</span><span class="sxs-lookup"><span data-stu-id="3681d-348">The category of the dictation grammar to append.</span></span></param>
        <summary><span data-ttu-id="3681d-349">Dołącza gramatyki dyktowanie określony do bieżącej sekwencji elementy gramatyki.</span><span class="sxs-lookup"><span data-stu-id="3681d-349">Appends the specified dictation grammar to the current sequence of grammar elements.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3681d-350">Aby korzystać z Pisownia i gramatyka dyktowania ustaw `category` do `spelling`.</span><span class="sxs-lookup"><span data-stu-id="3681d-350">To use the spelling dictation grammar, set `category` to `spelling`.</span></span>  
  
 <span data-ttu-id="3681d-351">Aby uzyskać więcej informacji dotyczących gramatyki dyktowania, zobacz <xref:System.Speech.Recognition.DictationGrammar>.</span><span class="sxs-lookup"><span data-stu-id="3681d-351">For more information on dictation grammars, see <xref:System.Speech.Recognition.DictationGrammar>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3681d-352">Poniższy przykład tworzy gramatyki rozpoznawania mowy, uwzględniająca reguły gramatyki dyktowanie pisowni.</span><span class="sxs-lookup"><span data-stu-id="3681d-352">The following example creates a speech recognition grammar that incorporates the spelling dictation grammar rules.</span></span>  
  
```csharp  
  
GrammarBuilder builder = new GrammarBuilder();  
builder.Append("begin");  
builder.AppendDictation("spelling");  
builder.Append("end");  
Grammar grammarWithDictation = new Grammar(builder);  
grammarWithDictation.Name = "Grammar with Dictation";  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Speech.Recognition.DictationGrammar" />
      </Docs>
    </Member>
    <MemberGroup MemberName="AppendRuleReference">
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="3681d-353">Dołącza plik gramatyki lub reguły gramatyki do bieżącej sekwencji elementy gramatyki.</span><span class="sxs-lookup"><span data-stu-id="3681d-353">Appends a grammar file or a grammar rule to the current sequence of grammar elements.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3681d-354"><xref:System.Speech.Recognition.GrammarBuilder.AppendRuleReference%2A> Metod można dołączyć pliku gramatyki lub reguły gramatyki z pliku.</span><span class="sxs-lookup"><span data-stu-id="3681d-354">The <xref:System.Speech.Recognition.GrammarBuilder.AppendRuleReference%2A> methods can append a grammar file or a grammar rule from a file.</span></span> <span data-ttu-id="3681d-355">Te metody umożliwiają aplikacjom wprowadzić użycie reguły gramatyki wstępnie wdrożonego lub publicznie dostępne.</span><span class="sxs-lookup"><span data-stu-id="3681d-355">These methods allow applications to make use of pre-deployed or publicly available grammar rules.</span></span> <span data-ttu-id="3681d-356">Aplikacja musi mieć dostęp do odczytu do lokalizacji plików określonego gramatyki.</span><span class="sxs-lookup"><span data-stu-id="3681d-356">The application must have read access to the location of specified grammar files.</span></span>  
  
 <span data-ttu-id="3681d-357">Te metody mogą odczytywać gramatyki rozpoznawania mowy w następujących formatach.</span><span class="sxs-lookup"><span data-stu-id="3681d-357">These methods can read a speech recognition grammar from the following formats.</span></span>  
  
-   <span data-ttu-id="3681d-358">Pliki w formacie XML, które odpowiadają W3C [mowy rozpoznawania gramatyki specyfikacji (SRGS) w wersji 1.0](https://go.microsoft.com/fwlink/?LinkId=201761)</span><span class="sxs-lookup"><span data-stu-id="3681d-358">XML-format files that conform to the W3C [Speech Recognition Grammar Specification (SRGS) Version 1.0](https://go.microsoft.com/fwlink/?LinkId=201761)</span></span>  
  
-   <span data-ttu-id="3681d-359">Pliki binarne, które są zgodne z Microsoft Speech rozpoznawania gramatyki formatu binarnego (cfg rozszerzenia pliku)</span><span class="sxs-lookup"><span data-stu-id="3681d-359">Binary files that conform to the Microsoft Speech Recognition Grammar Binary Format (.cfg file extension)</span></span>  
  
 <span data-ttu-id="3681d-360">Kompilowanie SRGS XML format pliku gramatyki do pliku binarnego gramatyki z rozszerzeniem cfg może skrócić czas używane przez wyszukuje zgodny, zwłaszcza, jeśli gramatyki wymaga rozpoznawania dużą liczbę słów i fraz.</span><span class="sxs-lookup"><span data-stu-id="3681d-360">Compiling an XML-format SRGS grammar file to a binary grammar file with the .cfg extension can reduce the time consumed by searches for a match, especially if the grammar requires recognition of a large number of words and phrases.</span></span> <span data-ttu-id="3681d-361">Aby dowiedzieć się, jak kompilowanie gramatyki SRGS na format binarny CFG, zobacz <xref:System.Speech.Recognition.SrgsGrammar.SrgsGrammarCompiler>.</span><span class="sxs-lookup"><span data-stu-id="3681d-361">For information about compiling SRGS grammars to the CFG binary format, see <xref:System.Speech.Recognition.SrgsGrammar.SrgsGrammarCompiler>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="AppendRuleReference">
      <MemberSignature Language="C#" Value="public void AppendRuleReference (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AppendRuleReference(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.AppendRuleReference(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AppendRuleReference (path As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AppendRuleReference(System::String ^ path);" />
      <MemberSignature Language="F#" Value="member this.AppendRuleReference : string -&gt; unit" Usage="grammarBuilder.AppendRuleReference path" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="3681d-362">Ścieżka lub uniwersalny identyfikator zasobów (URI) pliku, który opisuje gramatykę rozpoznawania mowy w obsługiwanym formacie.</span><span class="sxs-lookup"><span data-stu-id="3681d-362">The path or Universal Resource Identifier (URI) of the file that describes a speech recognition grammar in a supported format.</span></span></param>
        <summary><span data-ttu-id="3681d-363">Dołącza plik definicji gramatyki do bieżącej sekwencji elementy gramatyki.</span><span class="sxs-lookup"><span data-stu-id="3681d-363">Appends a grammar definition file to the current sequence of grammar elements.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3681d-364">Identyfikator URI, dostarczone przez `path` argument może być lokalny lub zdalny.</span><span class="sxs-lookup"><span data-stu-id="3681d-364">The URI provided by the `path` argument may be local or remote.</span></span> <span data-ttu-id="3681d-365">Aplikacja musi mieć dostęp do odczytu do lokalizacji plików określonego gramatyki.</span><span class="sxs-lookup"><span data-stu-id="3681d-365">The application must have read access to the location of specified grammar files.</span></span>  
  
 <span data-ttu-id="3681d-366">Reprezentacja W3C mowy rozpoznawania gramatyki specyfikacji (SRGS) można zdefiniować reguły głównego.</span><span class="sxs-lookup"><span data-stu-id="3681d-366">A W3C Speech Recognition Grammar Specification (SRGS) representation can define a root rule.</span></span> <span data-ttu-id="3681d-367">Ta metoda dołącza gramatykę, począwszy od jej regułą głównego do bieżącej sekwencji elementy gramatyki.</span><span class="sxs-lookup"><span data-stu-id="3681d-367">This method appends the grammar, beginning with its root rule, to the current sequence of grammar elements.</span></span> <span data-ttu-id="3681d-368">Aby dołączyć określonej gramatyczny, należy użyć <xref:System.Speech.Recognition.GrammarBuilder.AppendRuleReference%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="3681d-368">To append a specific grammar rule, use the <xref:System.Speech.Recognition.GrammarBuilder.AppendRuleReference%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3681d-369">Poniższy przykład C# tworzy gramatyki rozpoznawania mowy, które używa reguły o nazwie `Cities` w pliku lokalnym SRGS cities.grxml.</span><span class="sxs-lookup"><span data-stu-id="3681d-369">The following C# example creates a speech recognition grammar that uses the rule named `Cities` in a local SRGS file, cities.grxml.</span></span> <span data-ttu-id="3681d-370">Zawartość pliku cities.grxml pojawia się w poniższym przykładzie kodu C#.</span><span class="sxs-lookup"><span data-stu-id="3681d-370">The content of the cities.grxml file appears below the C# code example.</span></span>  
  
```csharp  
  
private static Grammar CreateCitiesGrammar1()  
{  
  GrammarBuilder builder = new GrammarBuilder();  
  builder.AppendRuleReference("file://c:/temp/cities.grxml");  
  
  Grammar citiesGrammar = new Grammar(builder);  
  citiesGrammar.Name = "Cities Grammar 1";  
  return citiesGrammar;  
}  
```  
  
```xml  
  
<?xml version="1.0" encoding="UTF-16" ?>  
<grammar version="1.0" xml:lang="en-US"  
         xmlns="http://www.w3.org/2001/06/grammar"  
         tag-format="semantics/1.0" root="Main">  
  
  <!-- cities.grxml:   
    Defines an SRGS grammar for requesting a flight. This grammar includes  
    a Cities rule that lists the cities that can be used for departures  
    and destinations. -->  
  
  <rule id="Main">  
    <item>  
      I would like to fly from <ruleref uri="#Cities"/>  
      to <ruleref uri="#Cities"/>  
    </item>  
  </rule>  
  
  <rule id="Cities" scope="public">  
    <one-of>  
      <item> Seattle </item>  
      <item> Los Angeles </item>  
      <item> New York </item>  
      <item> Miami </item>  
    </one-of>  
  </rule>  
</grammar>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.Append(System.Speech.Recognition.Choices)" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.AppendDictation" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.AppendWildcard" />
        <altmember cref="T:System.Speech.Recognition.Grammar" />
      </Docs>
    </Member>
    <Member MemberName="AppendRuleReference">
      <MemberSignature Language="C#" Value="public void AppendRuleReference (string path, string rule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AppendRuleReference(string path, string rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.AppendRuleReference(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AppendRuleReference (path As String, rule As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AppendRuleReference(System::String ^ path, System::String ^ rule);" />
      <MemberSignature Language="F#" Value="member this.AppendRuleReference : string * string -&gt; unit" Usage="grammarBuilder.AppendRuleReference (path, rule)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="rule" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="3681d-371">Ścieżka pliku lub uniwersalny identyfikator zasobów (URI) pliku, który opisuje gramatykę rozpoznawania mowy w obsługiwanym formacie.</span><span class="sxs-lookup"><span data-stu-id="3681d-371">The file path or Universal Resource Identifier (URI) of the file that describes a speech recognition grammar in a supported format.</span></span></param>
        <param name="rule"><span data-ttu-id="3681d-372">Identyfikator reguły do dołączenia, lub <see langword="null" /> dołaczenia domyślną regułę głównego pliku gramatyki.</span><span class="sxs-lookup"><span data-stu-id="3681d-372">The identifier of the rule to append, or <see langword="null" /> to append the default root rule of the grammar file.</span></span></param>
        <summary><span data-ttu-id="3681d-373">Dołącza określoną regułą pliku definicji gramatyki do bieżącej sekwencji elementy gramatyki.</span><span class="sxs-lookup"><span data-stu-id="3681d-373">Appends the specified rule of a grammar definition file to the current sequence of grammar elements.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3681d-374">Identyfikator URI, dostarczone przez `path` argument może być lokalny lub zdalny.</span><span class="sxs-lookup"><span data-stu-id="3681d-374">The URI provided by the `path` argument may be local or remote.</span></span> <span data-ttu-id="3681d-375">Aplikacja musi mieć dostęp do odczytu do lokalizacji plików określonego gramatyki.</span><span class="sxs-lookup"><span data-stu-id="3681d-375">The application must have read access to the location of specified grammar files.</span></span>  
  
 <span data-ttu-id="3681d-376">Umożliwia użycie <xref:System.Speech.Recognition.GrammarBuilder.AppendRuleReference%2A> metodę, aby dołączyć plik zaczynając od gramatyki z jej regułą głównego.</span><span class="sxs-lookup"><span data-stu-id="3681d-376">You can use the use the <xref:System.Speech.Recognition.GrammarBuilder.AppendRuleReference%2A> method to append a grammar file beginning with its root rule.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3681d-377">Poniższy przykład C# tworzy gramatyki rozpoznawania mowy, które używa reguły o nazwie `Cities` w pliku lokalnym SRGS cities.grxml.</span><span class="sxs-lookup"><span data-stu-id="3681d-377">The following C# example creates a speech recognition grammar that uses the rule named `Cities` in a local SRGS file, cities.grxml.</span></span> <span data-ttu-id="3681d-378">Zawartość pliku cities.grxml pojawia się w poniższym przykładzie kodu C#.</span><span class="sxs-lookup"><span data-stu-id="3681d-378">The content of the cities.grxml file appears below the C# code example.</span></span>  
  
```csharp  
  
private static Grammar CreateCitiesGrammar2()  
{  
  GrammarBuilder builder = new GrammarBuilder();  
  builder.Append("Does");  
  builder.AppendRuleReference(@"c:\temp\cities.grxml", "Cities");  
  builder.Append("have a shuttle");  
  
  Grammar citiesGrammar = new Grammar(builder);  
  citiesGrammar.Name = "Cities Grammar 2";  
  return citiesGrammar;  
}  
```  
  
```xml  
  
<?xml version="1.0" encoding="UTF-8" ?>  
<grammar version="1.0" xml:lang="en-US"  
         xmlns="http://www.w3.org/2001/06/grammar"  
         tag-format="semantics/1.0" root="Main">  
  
  <!-- cities.grxml:   
    Defines an SRGS grammar for requesting a flight. This grammar includes  
    a Cities rule that lists the cities that can be used for departures  
    and destinations. -->  
  
  <rule id="Main">  
    <item>  
      I would like to fly from <ruleref uri="#Cities"/>  
      to <ruleref uri="#Cities"/>  
    </item>  
  </rule>  
  
  <rule id="Cities" scope="public">  
    <one-of>  
      <item> Seattle </item>  
      <item> Los Angeles </item>  
      <item> New York </item>  
      <item> Miami </item>  
    </one-of>  
  </rule>  
</grammar>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.Append(System.Speech.Recognition.Choices)" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.AppendDictation" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.AppendWildcard" />
        <altmember cref="T:System.Speech.Recognition.Grammar" />
      </Docs>
    </Member>
    <Member MemberName="AppendWildcard">
      <MemberSignature Language="C#" Value="public void AppendWildcard ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AppendWildcard() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.AppendWildcard" />
      <MemberSignature Language="VB.NET" Value="Public Sub AppendWildcard ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AppendWildcard();" />
      <MemberSignature Language="F#" Value="member this.AppendWildcard : unit -&gt; unit" Usage="grammarBuilder.AppendWildcard " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="3681d-379">Dołącza rozpoznawania elementu gramatyki, który pasuje do żadnych danych do bieżącego sekwencji elementy gramatyki.</span><span class="sxs-lookup"><span data-stu-id="3681d-379">Appends a recognition grammar element that matches any input to the current sequence of grammar elements.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3681d-380">Element symbol wieloznaczny zostanie dodany na końcu bieżącego sekwencję elementów.</span><span class="sxs-lookup"><span data-stu-id="3681d-380">The wildcard element is added to the end of the current sequence of elements.</span></span>  
  
 <span data-ttu-id="3681d-381">Element symboli wieloznacznych jest dopasowywany dowolny wyraz wypowiedzenia.</span><span class="sxs-lookup"><span data-stu-id="3681d-381">The wildcard element matches any spoken word.</span></span> <span data-ttu-id="3681d-382">Nie jest zgodny, hałas w tle lub wyciszenia.</span><span class="sxs-lookup"><span data-stu-id="3681d-382">It does not match background noise or silence.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3681d-383">Poniższy przykład tworzy gramatyki, który akceptuje wprowadzania hasła jako symbolu wieloznacznego.</span><span class="sxs-lookup"><span data-stu-id="3681d-383">The following example creates a grammar that accepts password input as a wildcard.</span></span> <span data-ttu-id="3681d-384">Przykład dołącza <xref:System.Speech.Recognition.Grammar.SpeechRecognized?displayProperty=nameWithType> procedurę obsługi zdarzeń do gramatyki, która weryfikuje wprowadzania hasła.</span><span class="sxs-lookup"><span data-stu-id="3681d-384">The example attaches a <xref:System.Speech.Recognition.Grammar.SpeechRecognized?displayProperty=nameWithType> event handler to the grammar that validates the password input.</span></span>  
  
```csharp  
private Grammar CreatePasswordGrammar()  
{  
  GrammarBuilder wildcardBuilder = new GrammarBuilder();  
  wildcardBuilder.AppendWildcard();  
  SemanticResultKey passwordKey =  
    new SemanticResultKey("Password", wildcardBuilder);  
  
  GrammarBuilder passwordBuilder =  
    new GrammarBuilder("My Password is");  
  passwordBuilder.Append(passwordKey);  
  
  Grammar passwordGrammar = new Grammar(passwordBuilder);  
  passwordGrammar.Name = "Password input";  
  
  passwordGrammar.SpeechRecognized +=  
    new EventHandler<SpeechRecognizedEventArgs>(  
      PasswordInputHandler);  
  
  return passwordGrammar;  
}  
  
// Handle the SpeechRecognized event for the password grammar.  
private void PasswordInputHandler(object sender, SpeechRecognizedEventArgs e)  
{  
  if (e.Result == null) return;  
  
  RecognitionResult result = e.Result;  
  SemanticValue semantics = e.Result.Semantics;  
  
  if (semantics.ContainsKey("Password"))  
  {  
    RecognizedAudio passwordAudio =  
      result.GetAudioForWordRange(  
        result.Words[3], result.Words[result.Words.Count - 1]);  
  
    if (IsValidPassword(passwordAudio))  
    {  
      Console.WriteLine("Password accepted.");  
  
      // Add code to handle a valid password here.  
    }  
    else  
    {  
      Console.WriteLine("Invalid password.");  
  
      // Add code to handle an invalid password here.  
    }  
  }  
}  
  
// Validate the password input.   
private bool IsValidPassword(RecognizedAudio passwordAudio)  
{  
  Console.WriteLine("Validating password.");  
  
  // Add password validation code here.  
  
  return false;  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.Append(System.Speech.Recognition.Choices)" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.AppendDictation" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.AppendRuleReference(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="Culture">
      <MemberSignature Language="C#" Value="public System.Globalization.CultureInfo Culture { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Globalization.CultureInfo Culture" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Recognition.GrammarBuilder.Culture" />
      <MemberSignature Language="VB.NET" Value="Public Property Culture As CultureInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Globalization::CultureInfo ^ Culture { System::Globalization::CultureInfo ^ get(); void set(System::Globalization::CultureInfo ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Culture : System.Globalization.CultureInfo with get, set" Usage="System.Speech.Recognition.GrammarBuilder.Culture" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Globalization.CultureInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3681d-385">Pobiera lub ustawia kulturę gramatyki rozpoznawania mowy.</span><span class="sxs-lookup"><span data-stu-id="3681d-385">Gets or sets the culture of the speech recognition grammar.</span></span></summary>
        <value><span data-ttu-id="3681d-386">Kultura <see cref="T:System.Speech.Recognition.GrammarBuilder" />.</span><span class="sxs-lookup"><span data-stu-id="3681d-386">The culture of the <see cref="T:System.Speech.Recognition.GrammarBuilder" />.</span></span> <span data-ttu-id="3681d-387">Wartością domyślną jest wykonywany wątek <see cref="P:System.Threading.Thread.CurrentUICulture" /> właściwości.</span><span class="sxs-lookup"><span data-stu-id="3681d-387">The default is the executing thread's <see cref="P:System.Threading.Thread.CurrentUICulture" /> property.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3681d-388"><xref:System.Speech.Recognition.Grammar.%23ctor%2A> Konstruktor tworzy <xref:System.Speech.Recognition.Grammar> obiekt, który może być używany przez aparatu rozpoznawania mowy, odpowiedni kultury.</span><span class="sxs-lookup"><span data-stu-id="3681d-388">The <xref:System.Speech.Recognition.Grammar.%23ctor%2A> constructor creates a <xref:System.Speech.Recognition.Grammar> object that can be used by a speech recognizer of the corresponding culture.</span></span> <span data-ttu-id="3681d-389">Tylko <xref:System.Speech.Recognition.GrammarBuilder.Culture%2A> właściwość <xref:System.Speech.Recognition.GrammarBuilder> dostarczanym jako parametr do konstruktora gramatyki służy do ustawiania kulturę wynikowy gramatyki rozpoznawania mowy.</span><span class="sxs-lookup"><span data-stu-id="3681d-389">Only the <xref:System.Speech.Recognition.GrammarBuilder.Culture%2A> property of the <xref:System.Speech.Recognition.GrammarBuilder> that is provided as the parameter to the Grammar constructor is used to set the culture of the resulting speech recognition grammar.</span></span>  
  
 <span data-ttu-id="3681d-390">Program Microsoft Windows i interfejsu API System.Speech Zaakceptuj wszystkie prawidłowe kody krajów języka.</span><span class="sxs-lookup"><span data-stu-id="3681d-390">Microsoft Windows and the System.Speech API accept all valid language-country codes.</span></span> <span data-ttu-id="3681d-391">Aby wykonać rozpoznawanie mowy, przy użyciu języka określonego w `Culture` właściwość, aparatu rozpoznawania mowy, który obsługuje kod kraju języka musi być zainstalowany.</span><span class="sxs-lookup"><span data-stu-id="3681d-391">To perform speech recognition using the language specified in the `Culture` property, a speech recognition engine that supports that language-country code must be installed.</span></span> <span data-ttu-id="3681d-392">Aparatów rozpoznawania mowy, które są dostarczane z programem Microsoft Windows 7 współpracować z poniższych kodów kraju języka.</span><span class="sxs-lookup"><span data-stu-id="3681d-392">The speech recognition engines that shipped with Microsoft Windows 7 work with the following language-country codes.</span></span>  
  
-   <span data-ttu-id="3681d-393">en-GB.</span><span class="sxs-lookup"><span data-stu-id="3681d-393">en-GB.</span></span> <span data-ttu-id="3681d-394">Angielski (Wielka Brytania)</span><span class="sxs-lookup"><span data-stu-id="3681d-394">English (United Kingdom)</span></span>  
  
-   <span data-ttu-id="3681d-395">en-US.</span><span class="sxs-lookup"><span data-stu-id="3681d-395">en-US.</span></span> <span data-ttu-id="3681d-396">Angielski (Stany Zjednoczone)</span><span class="sxs-lookup"><span data-stu-id="3681d-396">English (United States)</span></span>  
  
-   <span data-ttu-id="3681d-397">de-DE.</span><span class="sxs-lookup"><span data-stu-id="3681d-397">de-DE.</span></span> <span data-ttu-id="3681d-398">Niemiecki (Niemcy)</span><span class="sxs-lookup"><span data-stu-id="3681d-398">German (Germany)</span></span>  
  
-   <span data-ttu-id="3681d-399">es-ES.</span><span class="sxs-lookup"><span data-stu-id="3681d-399">es-ES.</span></span> <span data-ttu-id="3681d-400">Hiszpański (Hiszpania)</span><span class="sxs-lookup"><span data-stu-id="3681d-400">Spanish (Spain)</span></span>  
  
-   <span data-ttu-id="3681d-401">fr-FR.</span><span class="sxs-lookup"><span data-stu-id="3681d-401">fr-FR.</span></span> <span data-ttu-id="3681d-402">Francuski (Francja)</span><span class="sxs-lookup"><span data-stu-id="3681d-402">French (France)</span></span>  
  
-   <span data-ttu-id="3681d-403">ja-JP.</span><span class="sxs-lookup"><span data-stu-id="3681d-403">ja-JP.</span></span> <span data-ttu-id="3681d-404">Japoński (Japonia)</span><span class="sxs-lookup"><span data-stu-id="3681d-404">Japanese (Japan)</span></span>  
  
-   <span data-ttu-id="3681d-405">zh-CN.</span><span class="sxs-lookup"><span data-stu-id="3681d-405">zh-CN.</span></span> <span data-ttu-id="3681d-406">Chiński (Chiny)</span><span class="sxs-lookup"><span data-stu-id="3681d-406">Chinese (China)</span></span>  
  
-   <span data-ttu-id="3681d-407">zh-TW.</span><span class="sxs-lookup"><span data-stu-id="3681d-407">zh-TW.</span></span> <span data-ttu-id="3681d-408">Chiński (Tajwan)</span><span class="sxs-lookup"><span data-stu-id="3681d-408">Chinese (Taiwan)</span></span>  
  
 <span data-ttu-id="3681d-409">Kody dwuliterowych języka, takich jak "en", "fr" lub "es" są również dozwolone.</span><span class="sxs-lookup"><span data-stu-id="3681d-409">Two-letter language codes such as "en", "fr", or "es" are also permitted.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3681d-410">Poniższy przykład tworzy gramatyki rozpoznawania mowy do ustalania kolejności pizza z maksymalnie cztery toppings.</span><span class="sxs-lookup"><span data-stu-id="3681d-410">The following example creates a speech recognition grammar for ordering a pizza with up to four toppings.</span></span> <span data-ttu-id="3681d-411">W szczególności ustawia <xref:System.Speech.Recognition.GrammarBuilder> obiektu kultury angielski (Stany Zjednoczone).</span><span class="sxs-lookup"><span data-stu-id="3681d-411">It specifically sets the <xref:System.Speech.Recognition.GrammarBuilder> object's culture to English (United States).</span></span>  
  
```csharp  
  
private static Grammar CreatePizzaGrammar()  
{  
  
  // Create a Choices object with alternatives for toppings.  
  Choices toppings = new Choices(new string[] {  
    "cheese", "mushroom", "tomato", "onion",  
    "anchovy", "chicken", "pepperoni"});  
  
  // Create a GrammarBuilder and append the Choices object.  
  GrammarBuilder andToppings = new GrammarBuilder("and", 0, 1);  
  andToppings.Append(toppings);  
  
  // Construct the phrase.  
  GrammarBuilder gb = new GrammarBuilder("I would like a", 0, 1);  
  gb.Append(toppings);  
  gb.Append(new GrammarBuilder(andToppings, 0, 3));  
  gb.Append("pizza");  
  
  // Create the Grammar from the GrammarBuilder.  
  Grammar grammar = new Grammar(gb);  
  grammar.Name = "Pizza Order";  
  
  return grammar;  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Speech.Recognition.Grammar" />
        <altmember cref="T:System.Speech.Recognition.RecognizerInfo" />
        <altmember cref="T:System.Speech.Recognition.SpeechRecognitionEngine" />
        <altmember cref="T:System.Speech.Recognition.SpeechRecognizer" />
      </Docs>
    </Member>
    <Member MemberName="DebugShowPhrases">
      <MemberSignature Language="C#" Value="public string DebugShowPhrases { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DebugShowPhrases" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Recognition.GrammarBuilder.DebugShowPhrases" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DebugShowPhrases As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DebugShowPhrases { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DebugShowPhrases : string" Usage="System.Speech.Recognition.GrammarBuilder.DebugShowPhrases" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3681d-412">Pobiera ciąg, który pokazuje zawartości i struktury gramatyki zawartych <see cref="T:System.Speech.Recognition.GrammarBuilder" />.</span><span class="sxs-lookup"><span data-stu-id="3681d-412">Gets a string that shows the contents and structure of the grammar contained by the <see cref="T:System.Speech.Recognition.GrammarBuilder" />.</span></span></summary>
        <value><span data-ttu-id="3681d-413">Bieżącej zawartości i struktury <see cref="T:System.Speech.Recognition.GrammarBuilder" />.</span><span class="sxs-lookup"><span data-stu-id="3681d-413">The current content and structure of the <see cref="T:System.Speech.Recognition.GrammarBuilder" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="3681d-414">Poniższy przykład tworzy gramatyki rozpoznawania mowy do ustalania kolejności pizza z maksymalnie cztery toppings.</span><span class="sxs-lookup"><span data-stu-id="3681d-414">The following example creates a speech recognition grammar for ordering a pizza with up to four toppings.</span></span> <span data-ttu-id="3681d-415">Zapisuje stan <xref:System.Speech.Recognition.GrammarBuilder> konsoli przed utworzeniem gramatyki.</span><span class="sxs-lookup"><span data-stu-id="3681d-415">It writes the status of the <xref:System.Speech.Recognition.GrammarBuilder> to the console before creating the grammar.</span></span> <span data-ttu-id="3681d-416">Ta metoda generuje następujące wyniki:</span><span class="sxs-lookup"><span data-stu-id="3681d-416">This method generates the following output:</span></span>  
  
-   `GrammarBuilder status: I would like a [cheese,mushroom,tomato,onion,anchovy,chic ken,pepperoni] and [cheese,mushroom,tomato,onion,anchovy,chicken,pepperoni] pizza`  
  
```csharp  
  
private static Grammar CreatePizzaGrammar()  
{  
  
  // Create a Choices object with alternatives for toppings.  
  Choices toppings = new Choices(new string[] {  
    "cheese", "mushroom", "tomato", "onion",  
    "anchovy", "chicken", "pepperoni"});  
  
  // Create a GrammarBuilder and append the Choices object.  
  GrammarBuilder andToppings = new GrammarBuilder("and", 0, 1);  
  andToppings.Append(toppings);  
  
  // Construct the phrase.  
  GrammarBuilder gb = new GrammarBuilder("I would like a", 0, 1);  
  gb.Append(toppings);  
  gb.Append(new GrammarBuilder(andToppings, 0, 3));  
  gb.Append("pizza");  
  
  // Write the contents and structure of the GrammarBuilder to the console.  
  Console.WriteLine("Grammar content and structure: {0}", gb.DebugShowPhrases);  
  
  // Create the Grammar from the GrammarBuilder.  
  Grammar grammar = new Grammar(gb);  
  grammar.Name = "Pizza Order";  
  
  return grammar;  
}  
```  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/office/developer/speech-technologies/hh361640(v%3doffice.14)"><span data-ttu-id="3681d-417">Tworzenie przy użyciu GrammarBuilder gramatyki</span><span class="sxs-lookup"><span data-stu-id="3681d-417">Create Grammars Using GrammarBuilder</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="op_Addition">
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="3681d-418">Tworzy nową <see cref="T:System.Speech.Recognition.GrammarBuilder" /> , który odpowiada sekwencję dwóch elementów gramatyki.</span><span class="sxs-lookup"><span data-stu-id="3681d-418">Creates a new <see cref="T:System.Speech.Recognition.GrammarBuilder" /> that corresponds to a sequence of two grammar elements.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3681d-419">Kolejność argumentów określa kolejność elementów w nowym <xref:System.Speech.Recognition.GrammarBuilder>.</span><span class="sxs-lookup"><span data-stu-id="3681d-419">The order of the operands determines the order of the elements in the new <xref:System.Speech.Recognition.GrammarBuilder>.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="3681d-420">Ostrzeżenie jest zalecane w przypadku łączenia <xref:System.Speech.Recognition.Choices> lub <xref:System.Speech.Recognition.GrammarBuilder> obiektów, które zawierają <xref:System.Speech.Recognition.SemanticResultValue> lub <xref:System.Speech.Recognition.SemanticResultKey> wystąpień z innymi elementami gramatyki.</span><span class="sxs-lookup"><span data-stu-id="3681d-420">Caution is recommended when combining <xref:System.Speech.Recognition.Choices> or <xref:System.Speech.Recognition.GrammarBuilder> objects that contain <xref:System.Speech.Recognition.SemanticResultValue> or <xref:System.Speech.Recognition.SemanticResultKey> instances with other grammar elements.</span></span> <span data-ttu-id="3681d-421">Aparat rozpoznawania mowy może zgłosić wyjątek, korzystając z gramatyki rozpoznawania mowy, który zawiera zduplikowane elementy semantyki z taką samą nazwę klucza lub wielu elementów semantycznych, które wielokrotnie może modyfikować wartości tego samego elementu semantycznego.</span><span class="sxs-lookup"><span data-stu-id="3681d-421">The speech recognizer can throw an exception when using a speech recognition grammar that contains duplicate semantic elements with the same key name or multiple semantic elements that could repeatedly modify the value of the same semantic element.</span></span> 
  
 <span data-ttu-id="3681d-422">Aby uzyskać więcej informacji na temat tworzenia i używania gramatyki rozpoznawania mowy, zobacz [rozpoznawania mowy](https://docs.microsoft.com/previous-versions/office/developer/speech-technologies/hh361633(v=office.14)) i [tworzenia gramatyki GrammarBuilder](https://msdn.microsoft.com/library/7e2cc577-cb05-4318-9da3-7c8675d3d9ae).</span><span class="sxs-lookup"><span data-stu-id="3681d-422">For more information about building and using speech recognition grammars, see [Speech Recognition](https://docs.microsoft.com/previous-versions/office/developer/speech-technologies/hh361633(v=office.14)) and [Creating GrammarBuilder Grammars](https://msdn.microsoft.com/library/7e2cc577-cb05-4318-9da3-7c8675d3d9ae).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="op_Addition">
      <MemberSignature Language="C#" Value="public static System.Speech.Recognition.GrammarBuilder operator + (System.Speech.Recognition.Choices choices, System.Speech.Recognition.GrammarBuilder builder);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname class System.Speech.Recognition.GrammarBuilder op_Addition(class System.Speech.Recognition.Choices choices, class System.Speech.Recognition.GrammarBuilder builder) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.op_Addition(System.Speech.Recognition.Choices,System.Speech.Recognition.GrammarBuilder)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Speech::Recognition::GrammarBuilder ^ operator +(System::Speech::Recognition::Choices ^ choices, System::Speech::Recognition::GrammarBuilder ^ builder);" />
      <MemberSignature Language="F#" Value="static member ( + ) : System.Speech.Recognition.Choices * System.Speech.Recognition.GrammarBuilder -&gt; System.Speech.Recognition.GrammarBuilder" Usage="choices + builder" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Speech.Recognition.GrammarBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="choices" Type="System.Speech.Recognition.Choices" />
        <Parameter Name="builder" Type="System.Speech.Recognition.GrammarBuilder" />
      </Parameters>
      <Docs>
        <param name="choices"><span data-ttu-id="3681d-423">Pierwszy gramatyki elementu, który reprezentuje zestaw alternatyw.</span><span class="sxs-lookup"><span data-stu-id="3681d-423">The first grammar element, which represents a set of alternatives.</span></span></param>
        <param name="builder"><span data-ttu-id="3681d-424">Drugi element gramatyki.</span><span class="sxs-lookup"><span data-stu-id="3681d-424">The second grammar element.</span></span></param>
        <summary><span data-ttu-id="3681d-425">Tworzy nową <see cref="T:System.Speech.Recognition.GrammarBuilder" /> zawierający <see cref="T:System.Speech.Recognition.Choices" /> obiektu, a następnie <see cref="T:System.Speech.Recognition.GrammarBuilder" /> obiektu.</span><span class="sxs-lookup"><span data-stu-id="3681d-425">Creates a new <see cref="T:System.Speech.Recognition.GrammarBuilder" /> that contains a <see cref="T:System.Speech.Recognition.Choices" /> object followed by a <see cref="T:System.Speech.Recognition.GrammarBuilder" /> object.</span></span></summary>
        <returns><span data-ttu-id="3681d-426">Zwraca <see cref="T:System.Speech.Recognition.GrammarBuilder" /> dla sekwencji <paramref name="choices" /> następuje parametr <paramref name="builder" /> parametru.</span><span class="sxs-lookup"><span data-stu-id="3681d-426">Returns a <see cref="T:System.Speech.Recognition.GrammarBuilder" /> for the sequence of the <paramref name="choices" /> parameter followed by the <paramref name="builder" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3681d-427"><xref:System.Speech.Recognition.GrammarBuilder> obsługuje konwersje z następujących klas.</span><span class="sxs-lookup"><span data-stu-id="3681d-427"><xref:System.Speech.Recognition.GrammarBuilder> supports conversions from the following classes.</span></span>  
  
-   <xref:System.Speech.Recognition.Choices>  
  
-   <xref:System.Speech.Recognition.SemanticResultKey>  
  
-   <xref:System.Speech.Recognition.SemanticResultValue>  
  
-   <xref:System.String>  
  
 <span data-ttu-id="3681d-428">Ta metoda przyjmuje obiektów wymienione powyżej `builder` parametru.</span><span class="sxs-lookup"><span data-stu-id="3681d-428">This method accepts the objects listed above for the `builder` parameter.</span></span> <span data-ttu-id="3681d-429">Aby uzyskać więcej informacji, zobacz <xref:System.Speech.Recognition.GrammarBuilder.op_Implicit%2A> operatorów.</span><span class="sxs-lookup"><span data-stu-id="3681d-429">For more information, see the <xref:System.Speech.Recognition.GrammarBuilder.op_Implicit%2A> operators.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="3681d-430">Łącząc <xref:System.Speech.Recognition.Choices> i <xref:System.Speech.Recognition.GrammarBuilder> obiektów, które zawierają <xref:System.Speech.Recognition.SemanticResultValue> lub <xref:System.Speech.Recognition.SemanticResultKey> wystąpienia, upewnij się, można uniknąć tworzenia zduplikowane elementy semantyki z taką samą nazwę klucza lub wielu elementów semantycznych, które wielokrotnie można zmodyfikować <xref:System.Speech.Recognition.SemanticValue.Value%2A> właściwość <xref:System.Speech.Recognition.SemanticValue> obiektu.</span><span class="sxs-lookup"><span data-stu-id="3681d-430">When you combine <xref:System.Speech.Recognition.Choices> and <xref:System.Speech.Recognition.GrammarBuilder> objects that contain <xref:System.Speech.Recognition.SemanticResultValue> or <xref:System.Speech.Recognition.SemanticResultKey> instances, make sure you avoid creating duplicate semantic elements with the same key name or multiple semantic elements that could repeatedly modify the <xref:System.Speech.Recognition.SemanticValue.Value%2A> property of a <xref:System.Speech.Recognition.SemanticValue> object.</span></span> <span data-ttu-id="3681d-431">Aparat rozpoznawania mowy może zgłosić wyjątek, jeśli wykryje nieważną tych okolicznościach.</span><span class="sxs-lookup"><span data-stu-id="3681d-431">The speech recognizer can throw an exception if it encounters these circumstances.</span></span>
  
 <span data-ttu-id="3681d-432">Jest równoważne metodę dla tego operatora <xref:System.Speech.Recognition.GrammarBuilder.Add%28System.Speech.Recognition.Choices%2CSystem.Speech.Recognition.GrammarBuilder%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="3681d-432">The equivalent method for this operator is <xref:System.Speech.Recognition.GrammarBuilder.Add%28System.Speech.Recognition.Choices%2CSystem.Speech.Recognition.GrammarBuilder%29?displayProperty=nameWithType></span></span>]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.Add(System.Speech.Recognition.Choices,System.Speech.Recognition.GrammarBuilder)" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.op_Implicit(System.Speech.Recognition.Choices)~System.Speech.Recognition.GrammarBuilder" />
      </Docs>
    </Member>
    <Member MemberName="op_Addition">
      <MemberSignature Language="C#" Value="public static System.Speech.Recognition.GrammarBuilder operator + (System.Speech.Recognition.GrammarBuilder builder, System.Speech.Recognition.Choices choices);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname class System.Speech.Recognition.GrammarBuilder op_Addition(class System.Speech.Recognition.GrammarBuilder builder, class System.Speech.Recognition.Choices choices) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.op_Addition(System.Speech.Recognition.GrammarBuilder,System.Speech.Recognition.Choices)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Speech::Recognition::GrammarBuilder ^ operator +(System::Speech::Recognition::GrammarBuilder ^ builder, System::Speech::Recognition::Choices ^ choices);" />
      <MemberSignature Language="F#" Value="static member ( + ) : System.Speech.Recognition.GrammarBuilder * System.Speech.Recognition.Choices -&gt; System.Speech.Recognition.GrammarBuilder" Usage="builder + choices" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Speech.Recognition.GrammarBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="builder" Type="System.Speech.Recognition.GrammarBuilder" />
        <Parameter Name="choices" Type="System.Speech.Recognition.Choices" />
      </Parameters>
      <Docs>
        <param name="builder"><span data-ttu-id="3681d-433">Pierwszy element gramatyki.</span><span class="sxs-lookup"><span data-stu-id="3681d-433">The first grammar element.</span></span></param>
        <param name="choices"><span data-ttu-id="3681d-434">Drugi gramatyki elementu, który reprezentuje zestaw elementów alternatywne.</span><span class="sxs-lookup"><span data-stu-id="3681d-434">The second grammar element, which represents a set of alternative elements.</span></span></param>
        <summary><span data-ttu-id="3681d-435">Tworzy nową <see cref="T:System.Speech.Recognition.GrammarBuilder" /> zawierający <see cref="T:System.Speech.Recognition.GrammarBuilder" /> następuje <see cref="T:System.Speech.Recognition.Choices" />.</span><span class="sxs-lookup"><span data-stu-id="3681d-435">Creates a new <see cref="T:System.Speech.Recognition.GrammarBuilder" /> that contains a <see cref="T:System.Speech.Recognition.GrammarBuilder" /> followed by a <see cref="T:System.Speech.Recognition.Choices" />.</span></span></summary>
        <returns><span data-ttu-id="3681d-436">Zwraca <see cref="T:System.Speech.Recognition.GrammarBuilder" /> dla sekwencji <paramref name="builder" /> następuje parametr <paramref name="choices" /> parametru.</span><span class="sxs-lookup"><span data-stu-id="3681d-436">Returns a <see cref="T:System.Speech.Recognition.GrammarBuilder" /> for the sequence of the <paramref name="builder" /> parameter followed by the <paramref name="choices" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3681d-437"><xref:System.Speech.Recognition.GrammarBuilder> Konwersja obsługuje następujące klasy:</span><span class="sxs-lookup"><span data-stu-id="3681d-437"><xref:System.Speech.Recognition.GrammarBuilder> supports conversions from the following classes:</span></span>  
  
-   <xref:System.Speech.Recognition.Choices>  
  
-   <xref:System.Speech.Recognition.SemanticResultKey>  
  
-   <xref:System.Speech.Recognition.SemanticResultValue>  
  
-   <xref:System.String>  
  
 <span data-ttu-id="3681d-438">Ta metoda przyjmuje obiektów wymienione powyżej `builder` parametru.</span><span class="sxs-lookup"><span data-stu-id="3681d-438">This method accepts the objects listed above for the `builder` parameter.</span></span> <span data-ttu-id="3681d-439">Aby uzyskać więcej informacji, zobacz <xref:System.Speech.Recognition.GrammarBuilder.op_Implicit%2A> operatorów.</span><span class="sxs-lookup"><span data-stu-id="3681d-439">For more information, see the <xref:System.Speech.Recognition.GrammarBuilder.op_Implicit%2A> operators.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="3681d-440">Łącząc <xref:System.Speech.Recognition.Choices> i <xref:System.Speech.Recognition.GrammarBuilder> obiektów, które zawierają <xref:System.Speech.Recognition.SemanticResultValue> lub <xref:System.Speech.Recognition.SemanticResultKey> wystąpienia, upewnij się, można uniknąć tworzenia zduplikowane elementy semantyki z taką samą nazwę klucza lub wielu elementów semantycznych, które wielokrotnie można zmodyfikować <xref:System.Speech.Recognition.SemanticValue.Value%2A> właściwość <xref:System.Speech.Recognition.SemanticValue> obiektu.</span><span class="sxs-lookup"><span data-stu-id="3681d-440">When you combine <xref:System.Speech.Recognition.Choices> and <xref:System.Speech.Recognition.GrammarBuilder> objects that contain <xref:System.Speech.Recognition.SemanticResultValue> or <xref:System.Speech.Recognition.SemanticResultKey> instances, make sure you avoid creating duplicate semantic elements with the same key name or multiple semantic elements that could repeatedly modify the <xref:System.Speech.Recognition.SemanticValue.Value%2A> property of a <xref:System.Speech.Recognition.SemanticValue> object.</span></span> <span data-ttu-id="3681d-441">Aparat rozpoznawania mowy może zgłosić wyjątek, jeśli wykryje nieważną tych okolicznościach.</span><span class="sxs-lookup"><span data-stu-id="3681d-441">The speech recognizer can throw an exception if it encounters these circumstances.</span></span>
  
 <span data-ttu-id="3681d-442">Jest równoważne metodę dla tego operatora <xref:System.Speech.Recognition.GrammarBuilder.Add%28System.Speech.Recognition.GrammarBuilder%2CSystem.Speech.Recognition.Choices%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="3681d-442">The equivalent method for this operator is <xref:System.Speech.Recognition.GrammarBuilder.Add%28System.Speech.Recognition.GrammarBuilder%2CSystem.Speech.Recognition.Choices%29?displayProperty=nameWithType></span></span>  
  
## Examples  
 <span data-ttu-id="3681d-443">Poniższy przykład tworzy gramatyki rozpoznawania mowy, który może rozpoznawać dwóch wyrażeń, "tło *kolor*" i "Ustawianie tła *kolor*", gdzie *kolor* Wybrano zestaw kolorów.</span><span class="sxs-lookup"><span data-stu-id="3681d-443">The following example creates a speech recognition grammar that can recognize the two phrases, "Make background *color*" and "Set background to *color*", where *color* is selected from a set of colors.</span></span> <span data-ttu-id="3681d-444">Różne typy są używane do utworzenia końcowej gramatykę, takich jak [ciąg](https://go.microsoft.com/fwlink/?LinkId=159733), <xref:System.Speech.Recognition.Choices>, i <xref:System.Speech.Recognition.GrammarBuilder> obiektów.</span><span class="sxs-lookup"><span data-stu-id="3681d-444">Various types are used to build the final grammar, such as [String](https://go.microsoft.com/fwlink/?LinkId=159733), <xref:System.Speech.Recognition.Choices>, and <xref:System.Speech.Recognition.GrammarBuilder> objects.</span></span>  
  
```csharp  
  
private Grammar CreateColorGrammar()  
{  
  
  // Create a set of color choices.  
  Choices colorChoice = new Choices(new string[] { "red", "green", "blue" });  
  
  // Create grammar builders for the two versions of the phrase.  
  GrammarBuilder makePhrase =  
    (GrammarBuilder)"Make background" + colorChoice;  
  GrammarBuilder setPhrase =  
    "Set background to" + (GrammarBuilder)colorChoice;  
  
  // Create a Choices for the two alternative phrases, convert the Choices  
  // to a GrammarBuilder, and construct the grammar from the result.  
  Choices bothChoices = new Choices(new GrammarBuilder[] { makePhrase, setPhrase });  
  GrammarBuilder bothPhrases = new GrammarBuilder(bothChoices);  
  
  Grammar grammar = new Grammar(bothPhrases);  
  grammar.Name = "backgroundColor";  
  return grammar;  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.Add(System.Speech.Recognition.Choices,System.Speech.Recognition.GrammarBuilder)" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.op_Implicit(System.Speech.Recognition.Choices)~System.Speech.Recognition.GrammarBuilder" />
      </Docs>
    </Member>
    <Member MemberName="op_Addition">
      <MemberSignature Language="C#" Value="public static System.Speech.Recognition.GrammarBuilder operator + (System.Speech.Recognition.GrammarBuilder builder1, System.Speech.Recognition.GrammarBuilder builder2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname class System.Speech.Recognition.GrammarBuilder op_Addition(class System.Speech.Recognition.GrammarBuilder builder1, class System.Speech.Recognition.GrammarBuilder builder2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.op_Addition(System.Speech.Recognition.GrammarBuilder,System.Speech.Recognition.GrammarBuilder)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator + (builder1 As GrammarBuilder, builder2 As GrammarBuilder) As GrammarBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Speech::Recognition::GrammarBuilder ^ operator +(System::Speech::Recognition::GrammarBuilder ^ builder1, System::Speech::Recognition::GrammarBuilder ^ builder2);" />
      <MemberSignature Language="F#" Value="static member ( + ) : System.Speech.Recognition.GrammarBuilder * System.Speech.Recognition.GrammarBuilder -&gt; System.Speech.Recognition.GrammarBuilder" Usage="builder1 + builder2" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Speech.Recognition.GrammarBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="builder1" Type="System.Speech.Recognition.GrammarBuilder" />
        <Parameter Name="builder2" Type="System.Speech.Recognition.GrammarBuilder" />
      </Parameters>
      <Docs>
        <param name="builder1"><span data-ttu-id="3681d-445">Pierwszy element gramatyki.</span><span class="sxs-lookup"><span data-stu-id="3681d-445">The first grammar element.</span></span></param>
        <param name="builder2"><span data-ttu-id="3681d-446">Drugi element gramatyki.</span><span class="sxs-lookup"><span data-stu-id="3681d-446">The second grammar element.</span></span></param>
        <summary><span data-ttu-id="3681d-447">Tworzy nową <see cref="T:System.Speech.Recognition.GrammarBuilder" /> zawierającego sekwencję dwóch <see cref="T:System.Speech.Recognition.GrammarBuilder" /> obiektów.</span><span class="sxs-lookup"><span data-stu-id="3681d-447">Creates a new <see cref="T:System.Speech.Recognition.GrammarBuilder" /> that contains a sequence of two <see cref="T:System.Speech.Recognition.GrammarBuilder" /> objects.</span></span></summary>
        <returns><span data-ttu-id="3681d-448">Zwraca <see cref="T:System.Speech.Recognition.GrammarBuilder" /> dla sekwencji <paramref name="builder1" /> następuje parametr <paramref name="builder2" /> parametru.</span><span class="sxs-lookup"><span data-stu-id="3681d-448">Returns a <see cref="T:System.Speech.Recognition.GrammarBuilder" /> for the sequence of the <paramref name="builder1" /> parameter followed by the <paramref name="builder2" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3681d-449"><xref:System.Speech.Recognition.GrammarBuilder> obsługuje konwersje z następujących klas.</span><span class="sxs-lookup"><span data-stu-id="3681d-449"><xref:System.Speech.Recognition.GrammarBuilder> supports conversions from the following classes.</span></span>  
  
-   <xref:System.Speech.Recognition.Choices>  
  
-   <xref:System.Speech.Recognition.SemanticResultKey>  
  
-   <xref:System.Speech.Recognition.SemanticResultValue>  
  
-   <xref:System.String>  
  
 <span data-ttu-id="3681d-450">Ta metoda przyjmuje obiektów wymienione powyżej `builder1` i `builder2` parametrów.</span><span class="sxs-lookup"><span data-stu-id="3681d-450">This method accepts the objects listed above for the `builder1` and `builder2` parameters.</span></span> <span data-ttu-id="3681d-451">Aby uzyskać więcej informacji, zobacz <xref:System.Speech.Recognition.GrammarBuilder.op_Implicit%2A> operatorów.</span><span class="sxs-lookup"><span data-stu-id="3681d-451">For more information, see the <xref:System.Speech.Recognition.GrammarBuilder.op_Implicit%2A> operators.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="3681d-452">Łącząc <xref:System.Speech.Recognition.GrammarBuilder> obiektów, które zawierają <xref:System.Speech.Recognition.SemanticResultValue> lub <xref:System.Speech.Recognition.SemanticResultKey> wystąpienia, upewnij się, można uniknąć tworzenia zduplikowane elementy semantyki z taką samą nazwę klucza lub wielu elementów semantycznych, które wielokrotnie można zmodyfikować <xref:System.Speech.Recognition.SemanticValue.Value%2A> Właściwość <xref:System.Speech.Recognition.SemanticValue> obiektu.</span><span class="sxs-lookup"><span data-stu-id="3681d-452">When you combine <xref:System.Speech.Recognition.GrammarBuilder> objects that contain <xref:System.Speech.Recognition.SemanticResultValue> or <xref:System.Speech.Recognition.SemanticResultKey> instances, make sure you avoid creating duplicate semantic elements with the same key name or multiple semantic elements that could repeatedly modify the <xref:System.Speech.Recognition.SemanticValue.Value%2A> property of a <xref:System.Speech.Recognition.SemanticValue> object.</span></span> <span data-ttu-id="3681d-453">Aparat rozpoznawania mowy może zgłosić wyjątek, jeśli wykryje nieważną tych okolicznościach.</span><span class="sxs-lookup"><span data-stu-id="3681d-453">The speech recognizer can throw an exception if it encounters these circumstances.</span></span>
  
 <span data-ttu-id="3681d-454">Jest równoważne metodę dla tego operatora <xref:System.Speech.Recognition.GrammarBuilder.Add%28System.Speech.Recognition.GrammarBuilder%2CSystem.Speech.Recognition.GrammarBuilder%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="3681d-454">The equivalent method for this operator is <xref:System.Speech.Recognition.GrammarBuilder.Add%28System.Speech.Recognition.GrammarBuilder%2CSystem.Speech.Recognition.GrammarBuilder%29?displayProperty=nameWithType></span></span>]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.Add(System.Speech.Recognition.Choices,System.Speech.Recognition.GrammarBuilder)" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.op_Implicit(System.Speech.Recognition.Choices)~System.Speech.Recognition.GrammarBuilder" />
      </Docs>
    </Member>
    <Member MemberName="op_Addition">
      <MemberSignature Language="C#" Value="public static System.Speech.Recognition.GrammarBuilder operator + (System.Speech.Recognition.GrammarBuilder builder, string phrase);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname class System.Speech.Recognition.GrammarBuilder op_Addition(class System.Speech.Recognition.GrammarBuilder builder, string phrase) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.op_Addition(System.Speech.Recognition.GrammarBuilder,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator + (builder As GrammarBuilder, phrase As String) As GrammarBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Speech::Recognition::GrammarBuilder ^ operator +(System::Speech::Recognition::GrammarBuilder ^ builder, System::String ^ phrase);" />
      <MemberSignature Language="F#" Value="static member ( + ) : System.Speech.Recognition.GrammarBuilder * string -&gt; System.Speech.Recognition.GrammarBuilder" Usage="builder + phrase" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Speech.Recognition.GrammarBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="builder" Type="System.Speech.Recognition.GrammarBuilder" />
        <Parameter Name="phrase" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="builder"><span data-ttu-id="3681d-455">Pierwszy element gramatyki.</span><span class="sxs-lookup"><span data-stu-id="3681d-455">The first grammar element.</span></span></param>
        <param name="phrase"><span data-ttu-id="3681d-456">Drugi gramatyki element, który reprezentuje sekwencję wyrazów.</span><span class="sxs-lookup"><span data-stu-id="3681d-456">The second grammar element, which represents a sequence of words.</span></span></param>
        <summary><span data-ttu-id="3681d-457">Tworzy nową <see cref="T:System.Speech.Recognition.GrammarBuilder" /> zawierający <see cref="T:System.Speech.Recognition.GrammarBuilder" /> następuje frazę.</span><span class="sxs-lookup"><span data-stu-id="3681d-457">Creates a new <see cref="T:System.Speech.Recognition.GrammarBuilder" /> that contains a <see cref="T:System.Speech.Recognition.GrammarBuilder" /> followed by a phrase.</span></span></summary>
        <returns><span data-ttu-id="3681d-458">Zwraca <see cref="T:System.Speech.Recognition.GrammarBuilder" /> dla sekwencji <paramref name="builder" /> następuje parametr <paramref name="phrase" /> parametru.</span><span class="sxs-lookup"><span data-stu-id="3681d-458">Returns a <see cref="T:System.Speech.Recognition.GrammarBuilder" /> for the sequence of the <paramref name="builder" /> parameter followed by the <paramref name="phrase" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3681d-459"><xref:System.Speech.Recognition.GrammarBuilder> obsługuje konwersje z następujących klas.</span><span class="sxs-lookup"><span data-stu-id="3681d-459"><xref:System.Speech.Recognition.GrammarBuilder> supports conversions from the following classes.</span></span>  
  
-   <xref:System.Speech.Recognition.Choices>  
  
-   <xref:System.Speech.Recognition.SemanticResultKey>  
  
-   <xref:System.Speech.Recognition.SemanticResultValue>  
  
-   <xref:System.String>  
  
 <span data-ttu-id="3681d-460">Ta metoda przyjmuje obiektów wymienione powyżej `builder` parametru.</span><span class="sxs-lookup"><span data-stu-id="3681d-460">This method accepts the objects listed above for the `builder` parameter.</span></span> <span data-ttu-id="3681d-461">Aby uzyskać więcej informacji, zobacz <xref:System.Speech.Recognition.GrammarBuilder.op_Implicit%2A> operatorów.</span><span class="sxs-lookup"><span data-stu-id="3681d-461">For more information, see the <xref:System.Speech.Recognition.GrammarBuilder.op_Implicit%2A> operators.</span></span>  
  
 <span data-ttu-id="3681d-462">Jest równoważne metodę dla tego operatora <xref:System.Speech.Recognition.GrammarBuilder.Add%28System.Speech.Recognition.GrammarBuilder%2CSystem.String%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="3681d-462">The equivalent method for this operator is <xref:System.Speech.Recognition.GrammarBuilder.Add%28System.Speech.Recognition.GrammarBuilder%2CSystem.String%29?displayProperty=nameWithType></span></span>]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.Add(System.Speech.Recognition.Choices,System.Speech.Recognition.GrammarBuilder)" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.op_Implicit(System.Speech.Recognition.Choices)~System.Speech.Recognition.GrammarBuilder" />
      </Docs>
    </Member>
    <Member MemberName="op_Addition">
      <MemberSignature Language="C#" Value="public static System.Speech.Recognition.GrammarBuilder operator + (string phrase, System.Speech.Recognition.GrammarBuilder builder);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname class System.Speech.Recognition.GrammarBuilder op_Addition(string phrase, class System.Speech.Recognition.GrammarBuilder builder) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.op_Addition(System.String,System.Speech.Recognition.GrammarBuilder)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator + (phrase As String, builder As GrammarBuilder) As GrammarBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Speech::Recognition::GrammarBuilder ^ operator +(System::String ^ phrase, System::Speech::Recognition::GrammarBuilder ^ builder);" />
      <MemberSignature Language="F#" Value="static member ( + ) : string * System.Speech.Recognition.GrammarBuilder -&gt; System.Speech.Recognition.GrammarBuilder" Usage="phrase + builder" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Speech.Recognition.GrammarBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="phrase" Type="System.String" />
        <Parameter Name="builder" Type="System.Speech.Recognition.GrammarBuilder" />
      </Parameters>
      <Docs>
        <param name="phrase"><span data-ttu-id="3681d-463">Pierwszy gramatyki element, który reprezentuje sekwencji wyrazów.</span><span class="sxs-lookup"><span data-stu-id="3681d-463">The first grammar element, which represents a sequence of words.</span></span></param>
        <param name="builder"><span data-ttu-id="3681d-464">Drugi element gramatyki.</span><span class="sxs-lookup"><span data-stu-id="3681d-464">The second grammar element.</span></span></param>
        <summary><span data-ttu-id="3681d-465">Tworzy nową <see cref="T:System.Speech.Recognition.GrammarBuilder" /> zawierający frazę następuje <see cref="T:System.Speech.Recognition.GrammarBuilder" />.</span><span class="sxs-lookup"><span data-stu-id="3681d-465">Creates a new <see cref="T:System.Speech.Recognition.GrammarBuilder" /> that contains a phrase followed by a <see cref="T:System.Speech.Recognition.GrammarBuilder" />.</span></span></summary>
        <returns><span data-ttu-id="3681d-466">Zwraca <see cref="T:System.Speech.Recognition.GrammarBuilder" /> dla sekwencji <paramref name="phrase" /> następuje parametr <paramref name="builder" /> parametru.</span><span class="sxs-lookup"><span data-stu-id="3681d-466">Returns a <see cref="T:System.Speech.Recognition.GrammarBuilder" /> for the sequence of the <paramref name="phrase" /> parameter followed by the <paramref name="builder" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3681d-467"><xref:System.Speech.Recognition.GrammarBuilder> obsługuje konwersje z następujących klas.</span><span class="sxs-lookup"><span data-stu-id="3681d-467"><xref:System.Speech.Recognition.GrammarBuilder> supports conversions from the following classes.</span></span>  
  
-   <xref:System.Speech.Recognition.Choices>  
  
-   <xref:System.Speech.Recognition.SemanticResultKey>  
  
-   <xref:System.Speech.Recognition.SemanticResultValue>  
  
-   <xref:System.String>  
  
 <span data-ttu-id="3681d-468">Ta metoda przyjmuje obiektów wymienione powyżej `builder` parametru.</span><span class="sxs-lookup"><span data-stu-id="3681d-468">This method accepts the objects listed above for the `builder` parameter.</span></span> <span data-ttu-id="3681d-469">Aby uzyskać więcej informacji, zobacz <xref:System.Speech.Recognition.GrammarBuilder.op_Implicit%2A> operatorów.</span><span class="sxs-lookup"><span data-stu-id="3681d-469">For more information, see the <xref:System.Speech.Recognition.GrammarBuilder.op_Implicit%2A> operators.</span></span>  
  
 <span data-ttu-id="3681d-470">Jest równoważne metodę dla tego operatora <xref:System.Speech.Recognition.GrammarBuilder.Add%28System.String%2CSystem.Speech.Recognition.GrammarBuilder%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="3681d-470">The equivalent method for this operator is <xref:System.Speech.Recognition.GrammarBuilder.Add%28System.String%2CSystem.Speech.Recognition.GrammarBuilder%29?displayProperty=nameWithType></span></span>  
  
## Examples  
 <span data-ttu-id="3681d-471">Poniższy przykład tworzy gramatyki rozpoznawania mowy, który może rozpoznawać dwóch wyrażeń, "tło *kolor*" i "Ustawianie tła *kolor*", gdzie *kolor* Wybrano zestaw kolorów.</span><span class="sxs-lookup"><span data-stu-id="3681d-471">The following example creates a speech recognition grammar that can recognize the two phrases, "Make background *color*" and "Set background to *color*", where *color* is selected from a set of colors.</span></span> <span data-ttu-id="3681d-472">Różne typy są używane do utworzenia końcowej gramatykę, takich jak [ciąg](https://go.microsoft.com/fwlink/?LinkId=159733), <xref:System.Speech.Recognition.Choices>, i <xref:System.Speech.Recognition.GrammarBuilder> obiektów.</span><span class="sxs-lookup"><span data-stu-id="3681d-472">Various types are used to build the final grammar, such as [String](https://go.microsoft.com/fwlink/?LinkId=159733), <xref:System.Speech.Recognition.Choices>, and <xref:System.Speech.Recognition.GrammarBuilder> objects.</span></span>  
  
```csharp  
  
private Grammar CreateColorGrammar()  
{  
  
  // Create a set of color choices.  
  Choices colorChoice = new Choices(new string[] { "red", "green", "blue" });  
  
  // Create grammar builders for the two versions of the phrase.  
  GrammarBuilder makePhrase =  
    (GrammarBuilder)"Make background" + colorChoice;  
  GrammarBuilder setPhrase =  
    "Set background to" + (GrammarBuilder)colorChoice;  
  
  // Create a Choices for the two alternative phrases, convert the Choices  
  // to a GrammarBuilder, and construct the Grammar object from the result.  
  Choices bothChoices = new Choices(new GrammarBuilder[] { makePhrase, setPhrase });  
  GrammarBuilder bothPhrases = new GrammarBuilder(bothChoices);  
  
  Grammar grammar = new Grammar(bothPhrases);  
  grammar.Name = "backgroundColor";  
  return grammar;  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.Add(System.Speech.Recognition.Choices,System.Speech.Recognition.GrammarBuilder)" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.op_Implicit(System.Speech.Recognition.Choices)~System.Speech.Recognition.GrammarBuilder" />
      </Docs>
    </Member>
    <MemberGroup MemberName="op_Implicit">
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="3681d-473">Konwertuje kolejny typ <see cref="T:System.Speech.Recognition.GrammarBuilder" />.</span><span class="sxs-lookup"><span data-stu-id="3681d-473">Converts another type to a <see cref="T:System.Speech.Recognition.GrammarBuilder" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3681d-474">Niejawna konwersja tworzy nowe wystąpienie klasy <xref:System.Speech.Recognition.GrammarBuilder>.</span><span class="sxs-lookup"><span data-stu-id="3681d-474">Implicit conversion creates a new instance of <xref:System.Speech.Recognition.GrammarBuilder>.</span></span> <span data-ttu-id="3681d-475">Można rzutować następujących klas do <xref:System.Speech.Recognition.GrammarBuilder>.</span><span class="sxs-lookup"><span data-stu-id="3681d-475">You can cast each of the following classes to a <xref:System.Speech.Recognition.GrammarBuilder>.</span></span>  
  
-   <xref:System.Speech.Recognition.Choices>  
  
-   <xref:System.Speech.Recognition.SemanticResultKey>  
  
-   <xref:System.Speech.Recognition.SemanticResultValue>  
  
-   <xref:System.String>  
  
 <span data-ttu-id="3681d-476">Każdy z niejawne rzutowanie jest odpowiednikiem wywołanie konstruktora.</span><span class="sxs-lookup"><span data-stu-id="3681d-476">Each of the implicit casts is equivalent to calling the constructor.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Speech.Recognition.GrammarBuilder.#ctor" />
      </Docs>
    </MemberGroup>
    <Member MemberName="op_Implicit">
      <MemberSignature Language="C#" Value="public static implicit operator System.Speech.Recognition.GrammarBuilder (System.Speech.Recognition.Choices choices);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname class System.Speech.Recognition.GrammarBuilder op_Implicit(class System.Speech.Recognition.Choices choices) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.op_Implicit(System.Speech.Recognition.Choices)~System.Speech.Recognition.GrammarBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static operator System::Speech::Recognition::GrammarBuilder ^(System::Speech::Recognition::Choices ^ choices);" />
      <MemberSignature Language="F#" Value="static member op_Implicit : System.Speech.Recognition.Choices -&gt; System.Speech.Recognition.GrammarBuilder" Usage="System.Speech.Recognition.GrammarBuilder.op_Implicit choices" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Speech.Recognition.GrammarBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="choices" Type="System.Speech.Recognition.Choices" />
      </Parameters>
      <Docs>
        <param name="choices"><span data-ttu-id="3681d-477">Zestaw rozwiązań alternatywnych, aby przekonwertować.</span><span class="sxs-lookup"><span data-stu-id="3681d-477">The set of alternatives to convert.</span></span></param>
        <summary><span data-ttu-id="3681d-478">Konwertuje <see cref="T:System.Speech.Recognition.Choices" /> obiekt <see cref="T:System.Speech.Recognition.GrammarBuilder" /> obiektu.</span><span class="sxs-lookup"><span data-stu-id="3681d-478">Converts a <see cref="T:System.Speech.Recognition.Choices" /> object to a <see cref="T:System.Speech.Recognition.GrammarBuilder" /> object.</span></span></summary>
        <returns><span data-ttu-id="3681d-479">Przekonwertowana <see cref="T:System.Speech.Recognition.Choices" /> obiektu.</span><span class="sxs-lookup"><span data-stu-id="3681d-479">The converted <see cref="T:System.Speech.Recognition.Choices" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3681d-480">Niejawna konwersja tworzy nowe wystąpienie klasy <xref:System.Speech.Recognition.GrammarBuilder>. Ten operator konwersji jest równoważne z wywoływaniem <xref:System.Speech.Recognition.GrammarBuilder.%23ctor%2A> i określając `choices` dla `alternateChoices`.</span><span class="sxs-lookup"><span data-stu-id="3681d-480">Implicit conversion creates a new instance of <xref:System.Speech.Recognition.GrammarBuilder>.This conversion operator is equivalent to calling <xref:System.Speech.Recognition.GrammarBuilder.%23ctor%2A> and specifying `choices` for the `alternateChoices`.</span></span>  
  
 <span data-ttu-id="3681d-481">Jest równoważne metodę dla tego operatora <xref:System.Speech.Recognition.GrammarBuilder.%23ctor%28System.Speech.Recognition.Choices%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="3681d-481">The equivalent method for this operator is <xref:System.Speech.Recognition.GrammarBuilder.%23ctor%28System.Speech.Recognition.Choices%29?displayProperty=nameWithType></span></span>  
  
## Examples  
 <span data-ttu-id="3681d-482">Poniższy przykład tworzy gramatyki rozpoznawania mowy, rozpoznającego na odpowiedź na "yes" lub "no" zapytania.</span><span class="sxs-lookup"><span data-stu-id="3681d-482">The following example creates a speech recognition grammar that can recognize a response to a "yes" or "no" question.</span></span> <span data-ttu-id="3681d-483">Operator niejawnej konwersji jest używany do budowy <xref:System.Speech.Recognition.SemanticResultValue> obiektu z <xref:System.Speech.Recognition.Choices> obiektu w konstrukcji <xref:System.Speech.Recognition.Choices> obiektu z dwóch <xref:System.Speech.Recognition.SemanticResultValue> obiekty i w konstrukcji <xref:System.Speech.Recognition.Grammar> obiekt z <xref:System.Speech.Recognition.SemanticResultKey> obiektu.</span><span class="sxs-lookup"><span data-stu-id="3681d-483">The implicit conversion operator is used in the construction of a <xref:System.Speech.Recognition.SemanticResultValue> object from a <xref:System.Speech.Recognition.Choices> object, in the construction of a <xref:System.Speech.Recognition.Choices> object from two <xref:System.Speech.Recognition.SemanticResultValue> objects, and in the construction of a <xref:System.Speech.Recognition.Grammar> object from a <xref:System.Speech.Recognition.SemanticResultKey> object.</span></span>  
  
```csharp  
Choices yesChoices = new Choices(new string[] {"yes", "yup", "yah"});  
SemanticResultValue yesValue =  
  new SemanticResultValue(yesChoices, true);  
  
Choices noChoices = new Choices(new string[] { "no", "nope", "nah" });  
SemanticResultValue noValue =  
  new SemanticResultValue(noChoices, false);  
  
SemanticResultKey yesnoKey =  
  new SemanticResultKey("yesno", new Choices(new GrammarBuilder[] { yesValue, noValue }));  
  
Grammar yesnoGrammar = new Grammar(yesnoKey);  
yesnoGrammar.Name = "yesno";  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.#ctor" />
      </Docs>
    </Member>
    <Member MemberName="op_Implicit">
      <MemberSignature Language="C#" Value="public static implicit operator System.Speech.Recognition.GrammarBuilder (System.Speech.Recognition.SemanticResultKey semanticKey);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname class System.Speech.Recognition.GrammarBuilder op_Implicit(class System.Speech.Recognition.SemanticResultKey semanticKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.op_Implicit(System.Speech.Recognition.SemanticResultKey)~System.Speech.Recognition.GrammarBuilder" />
      <MemberSignature Language="VB.NET" Value="Public Shared Widening Operator CType (semanticKey As SemanticResultKey) As GrammarBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static operator System::Speech::Recognition::GrammarBuilder ^(System::Speech::Recognition::SemanticResultKey ^ semanticKey);" />
      <MemberSignature Language="F#" Value="static member op_Implicit : System.Speech.Recognition.SemanticResultKey -&gt; System.Speech.Recognition.GrammarBuilder" Usage="System.Speech.Recognition.GrammarBuilder.op_Implicit semanticKey" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Speech.Recognition.GrammarBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="semanticKey" Type="System.Speech.Recognition.SemanticResultKey" />
      </Parameters>
      <Docs>
        <param name="semanticKey"><span data-ttu-id="3681d-484">Semantyczne klucz do przekonwertowania.</span><span class="sxs-lookup"><span data-stu-id="3681d-484">The semantic key to convert.</span></span></param>
        <summary><span data-ttu-id="3681d-485">Konwertuje <see cref="T:System.Speech.Recognition.SemanticResultKey" /> obiekt <see cref="T:System.Speech.Recognition.GrammarBuilder" /> obiektu.</span><span class="sxs-lookup"><span data-stu-id="3681d-485">Converts a <see cref="T:System.Speech.Recognition.SemanticResultKey" /> object to a <see cref="T:System.Speech.Recognition.GrammarBuilder" /> object.</span></span></summary>
        <returns><span data-ttu-id="3681d-486">Przekonwertowana <see cref="T:System.Speech.Recognition.SemanticResultKey" /> obiektu.</span><span class="sxs-lookup"><span data-stu-id="3681d-486">The converted <see cref="T:System.Speech.Recognition.SemanticResultKey" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3681d-487">Niejawna konwersja tworzy nowe wystąpienie klasy <xref:System.Speech.Recognition.GrammarBuilder>.</span><span class="sxs-lookup"><span data-stu-id="3681d-487">Implicit conversion creates a new instance of <xref:System.Speech.Recognition.GrammarBuilder>.</span></span> <span data-ttu-id="3681d-488">Ten operator konwersji jest równoważne z wywoływaniem <xref:System.Speech.Recognition.GrammarBuilder.%23ctor%2A> i określając `semanticKey` dla `key`.</span><span class="sxs-lookup"><span data-stu-id="3681d-488">This conversion operator is equivalent to calling <xref:System.Speech.Recognition.GrammarBuilder.%23ctor%2A> and specifying `semanticKey` for the `key`.</span></span>  
  
 <span data-ttu-id="3681d-489">Jest równoważne metodę dla tego operatora <xref:System.Speech.Recognition.GrammarBuilder.%23ctor%28System.Speech.Recognition.SemanticResultKey%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="3681d-489">The equivalent method for this operator is <xref:System.Speech.Recognition.GrammarBuilder.%23ctor%28System.Speech.Recognition.SemanticResultKey%29?displayProperty=nameWithType></span></span>  
  
## Examples  
 <span data-ttu-id="3681d-490">Poniższy przykład tworzy gramatyki rozpoznawania mowy, rozpoznającego na odpowiedź na "yes" lub "no" zapytania.</span><span class="sxs-lookup"><span data-stu-id="3681d-490">The following example creates a speech recognition grammar that can recognize a response to a "yes" or "no" question.</span></span> <span data-ttu-id="3681d-491">Operator niejawnej konwersji jest używany do budowy <xref:System.Speech.Recognition.SemanticResultValue> obiektu z <xref:System.Speech.Recognition.Choices> obiektu w konstrukcji <xref:System.Speech.Recognition.Choices> obiektu z dwóch <xref:System.Speech.Recognition.SemanticResultValue> obiekty i w konstrukcji <xref:System.Speech.Recognition.Grammar> obiekt z <xref:System.Speech.Recognition.SemanticResultKey> obiektu.</span><span class="sxs-lookup"><span data-stu-id="3681d-491">The implicit conversion operator is used in the construction of a <xref:System.Speech.Recognition.SemanticResultValue> object from a <xref:System.Speech.Recognition.Choices> object, in the construction of a <xref:System.Speech.Recognition.Choices> object from two <xref:System.Speech.Recognition.SemanticResultValue> objects, and in the construction of a <xref:System.Speech.Recognition.Grammar> object from a <xref:System.Speech.Recognition.SemanticResultKey> object.</span></span>  
  
```csharp  
Choices yesChoices = new Choices(new string[] {"yes", "yup", "yah"});  
SemanticResultValue yesValue =  
  new SemanticResultValue(yesChoices, true);  
  
Choices noChoices = new Choices(new string[] { "no", "nope", "nah" });  
SemanticResultValue noValue =  
  new SemanticResultValue(noChoices, false);  
  
SemanticResultKey yesnoKey =  
  new SemanticResultKey("yesno", new Choices(new GrammarBuilder[] { yesValue, noValue }));  
  
Grammar yesnoGrammar = new Grammar(yesnoKey);  
yesnoGrammar.Name = "yesno";  
  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.#ctor" />
      </Docs>
    </Member>
    <Member MemberName="op_Implicit">
      <MemberSignature Language="C#" Value="public static implicit operator System.Speech.Recognition.GrammarBuilder (System.Speech.Recognition.SemanticResultValue semanticValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname class System.Speech.Recognition.GrammarBuilder op_Implicit(class System.Speech.Recognition.SemanticResultValue semanticValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.op_Implicit(System.Speech.Recognition.SemanticResultValue)~System.Speech.Recognition.GrammarBuilder" />
      <MemberSignature Language="VB.NET" Value="Public Shared Widening Operator CType (semanticValue As SemanticResultValue) As GrammarBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static operator System::Speech::Recognition::GrammarBuilder ^(System::Speech::Recognition::SemanticResultValue ^ semanticValue);" />
      <MemberSignature Language="F#" Value="static member op_Implicit : System.Speech.Recognition.SemanticResultValue -&gt; System.Speech.Recognition.GrammarBuilder" Usage="System.Speech.Recognition.GrammarBuilder.op_Implicit semanticValue" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Speech.Recognition.GrammarBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="semanticValue" Type="System.Speech.Recognition.SemanticResultValue" />
      </Parameters>
      <Docs>
        <param name="semanticValue"><span data-ttu-id="3681d-492"><see cref="T:System.Speech.Recognition.SemanticResultValue" /> Obiektu do przekonwertowania.</span><span class="sxs-lookup"><span data-stu-id="3681d-492">The <see cref="T:System.Speech.Recognition.SemanticResultValue" /> object to convert.</span></span></param>
        <summary><span data-ttu-id="3681d-493">Konwertuje <see cref="T:System.Speech.Recognition.SemanticResultValue" /> obiekt <see cref="T:System.Speech.Recognition.GrammarBuilder" /> obiektu.</span><span class="sxs-lookup"><span data-stu-id="3681d-493">Converts a <see cref="T:System.Speech.Recognition.SemanticResultValue" /> object to a <see cref="T:System.Speech.Recognition.GrammarBuilder" /> object.</span></span></summary>
        <returns><span data-ttu-id="3681d-494">Przekonwertowana <see cref="T:System.Speech.Recognition.SemanticResultValue" /> obiektu.</span><span class="sxs-lookup"><span data-stu-id="3681d-494">The converted <see cref="T:System.Speech.Recognition.SemanticResultValue" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3681d-495">Niejawna konwersja tworzy nowe wystąpienie klasy <xref:System.Speech.Recognition.GrammarBuilder>.</span><span class="sxs-lookup"><span data-stu-id="3681d-495">Implicit conversion creates a new instance of <xref:System.Speech.Recognition.GrammarBuilder>.</span></span> <span data-ttu-id="3681d-496">Ten operator konwersji jest równoważne z wywoływaniem <xref:System.Speech.Recognition.GrammarBuilder.%23ctor%2A> i określając `semanticValue` dla `value`.</span><span class="sxs-lookup"><span data-stu-id="3681d-496">This conversion operator is equivalent to calling <xref:System.Speech.Recognition.GrammarBuilder.%23ctor%2A> and specifying `semanticValue` for the `value`.</span></span>  
  
 <span data-ttu-id="3681d-497">Jest równoważne metodę dla tego operatora <xref:System.Speech.Recognition.GrammarBuilder.%23ctor%28System.Speech.Recognition.SemanticResultValue%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="3681d-497">The equivalent method for this operator is <xref:System.Speech.Recognition.GrammarBuilder.%23ctor%28System.Speech.Recognition.SemanticResultValue%29?displayProperty=nameWithType></span></span>  
  
## Examples  
 <span data-ttu-id="3681d-498">Poniższy przykład tworzy gramatyki rozpoznawania mowy, rozpoznającego na odpowiedź na "yes" lub "no" zapytania.</span><span class="sxs-lookup"><span data-stu-id="3681d-498">The following example creates a speech recognition grammar that can recognize a response to a "yes" or "no" question.</span></span> <span data-ttu-id="3681d-499">Operator niejawnej konwersji jest używany do budowy <xref:System.Speech.Recognition.SemanticResultValue> obiektu z <xref:System.Speech.Recognition.Choices>obiektu w konstrukcji <xref:System.Speech.Recognition.Choices> obiektu z dwóch <xref:System.Speech.Recognition.SemanticResultValue> obiekty i w konstrukcji <xref:System.Speech.Recognition.Grammar> obiekt z <xref:System.Speech.Recognition.SemanticResultKey> obiektu.</span><span class="sxs-lookup"><span data-stu-id="3681d-499">The implicit conversion operator is used in the construction of a <xref:System.Speech.Recognition.SemanticResultValue> object from a <xref:System.Speech.Recognition.Choices>object, in the construction of a <xref:System.Speech.Recognition.Choices> object from two <xref:System.Speech.Recognition.SemanticResultValue> objects, and in the construction of a <xref:System.Speech.Recognition.Grammar> object from a <xref:System.Speech.Recognition.SemanticResultKey> object.</span></span>  
  
```csharp  
Choices yesChoices = new Choices(new string[] {"yes", "yup", "yah"});  
SemanticResultValue yesValue =  
  new SemanticResultValue(yesChoices, true);  
  
Choices noChoices = new Choices(new string[] { "no", "nope", "nah" });  
SemanticResultValue noValue =  
  new SemanticResultValue(noChoices, false);  
  
SemanticResultKey yesnoKey =  
  new SemanticResultKey("yesno", new Choices(new GrammarBuilder[] { yesValue, noValue }));  
  
Grammar yesnoGrammar = new Grammar(yesnoKey);  
yesnoGrammar.Name = "yesno";  
  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.#ctor" />
      </Docs>
    </Member>
    <Member MemberName="op_Implicit">
      <MemberSignature Language="C#" Value="public static implicit operator System.Speech.Recognition.GrammarBuilder (string phrase);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname class System.Speech.Recognition.GrammarBuilder op_Implicit(string phrase) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.op_Implicit(System.String)~System.Speech.Recognition.GrammarBuilder" />
      <MemberSignature Language="VB.NET" Value="Public Shared Widening Operator CType (phrase As String) As GrammarBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static operator System::Speech::Recognition::GrammarBuilder ^(System::String ^ phrase);" />
      <MemberSignature Language="F#" Value="static member op_Implicit : string -&gt; System.Speech.Recognition.GrammarBuilder" Usage="System.Speech.Recognition.GrammarBuilder.op_Implicit phrase" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Speech.Recognition.GrammarBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="phrase" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="phrase"><span data-ttu-id="3681d-500">Ciąg do konwersji.</span><span class="sxs-lookup"><span data-stu-id="3681d-500">The string to convert.</span></span></param>
        <summary><span data-ttu-id="3681d-501">Konwertuje ciąg na <see cref="T:System.Speech.Recognition.GrammarBuilder" /> obiektu.</span><span class="sxs-lookup"><span data-stu-id="3681d-501">Converts a string to a <see cref="T:System.Speech.Recognition.GrammarBuilder" /> object.</span></span></summary>
        <returns><span data-ttu-id="3681d-502">Przekonwertowany ciąg.</span><span class="sxs-lookup"><span data-stu-id="3681d-502">The converted string.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3681d-503">Niejawna konwersja tworzy nowe wystąpienie klasy <xref:System.Speech.Recognition.GrammarBuilder>.</span><span class="sxs-lookup"><span data-stu-id="3681d-503">Implicit conversion creates a new instance of <xref:System.Speech.Recognition.GrammarBuilder>.</span></span> <span data-ttu-id="3681d-504">Ten operator konwersji jest równoważne z wywoływaniem <xref:System.Speech.Recognition.GrammarBuilder.%23ctor%2A> i podając takie same `phrase`.</span><span class="sxs-lookup"><span data-stu-id="3681d-504">This conversion operator is equivalent to calling <xref:System.Speech.Recognition.GrammarBuilder.%23ctor%2A> and specifying the same `phrase`.</span></span>  
  
 <span data-ttu-id="3681d-505">Jest równoważne metodę dla tego operatora <xref:System.Speech.Recognition.GrammarBuilder.%23ctor%28System.String%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="3681d-505">The equivalent method for this operator is <xref:System.Speech.Recognition.GrammarBuilder.%23ctor%28System.String%29?displayProperty=nameWithType></span></span>  
  
## Examples  
 <span data-ttu-id="3681d-506">W poniższym przykładzie użyto <xref:System.Speech.Recognition.GrammarBuilder> i <xref:System.Speech.Recognition.Choices> obiekty do konstruowania gramatyki, który jest w stanie rozpoznać jednego z dwóch wyrażeń, "tło *colorChoice*" lub "Ustawianie tła *colorChoice*".</span><span class="sxs-lookup"><span data-stu-id="3681d-506">The following example uses  <xref:System.Speech.Recognition.GrammarBuilder> and <xref:System.Speech.Recognition.Choices> objects to construct a grammar that can recognize either of the two phrases, "Make background *colorChoice*" or "Set background to *colorChoice*".</span></span>  
  
 <span data-ttu-id="3681d-507">Po utworzeniu listy dopuszczalnymi wartościami *colorChoice* przy użyciu <xref:System.Speech.Recognition.Choices> obiektu przykład inicjuje dwa <xref:System.Speech.Recognition.GrammarBuilder> obiektów `makePhrase` i `setPhrase`, za pomocą niejawną konwersję z ciągu obiekty.</span><span class="sxs-lookup"><span data-stu-id="3681d-507">After creating a list of acceptable values for *colorChoice* using a <xref:System.Speech.Recognition.Choices> object, the example initializes two <xref:System.Speech.Recognition.GrammarBuilder> objects, `makePhrase` and `setPhrase`, using implicit conversion from string objects.</span></span>  
  
 <span data-ttu-id="3681d-508">W przykładzie jest tworzony na koniec <xref:System.Speech.Recognition.Grammar> obiektu z <xref:System.Speech.Recognition.Choices> obiekt rzutowany <xref:System.Speech.Recognition.GrammarBuilder> obiektu.</span><span class="sxs-lookup"><span data-stu-id="3681d-508">The example finally creates a <xref:System.Speech.Recognition.Grammar> object from a <xref:System.Speech.Recognition.Choices> object cast to a <xref:System.Speech.Recognition.GrammarBuilder> object.</span></span>  
  
```csharp  
private Grammar CreateColorGrammar()  
{  
  
  // Create a set of color choices.  
  Choices colorChoice = new Choices(new string[] {"red", "green", "blue"});  
  GrammarBuilder colorElement = new GrammarBuilder(colorChoice);  
  
  // Create grammar builders for the two versions of the phrase.  
  GrammarBuilder makePhrase = new GrammarBuilder("Make background");  
  makePhrase.Append(colorElement);  
  GrammarBuilder setPhrase = new GrammarBuilder("Set background to");  
  setPhrase.Append(colorElement);  
  
  // Create a Choices for the two alternative phrases, convert the Choices  
  // to a GrammarBuilder, and construct the Grammar object from the result.  
  Choices bothChoices = new Choices(new GrammarBuilder[] {makePhrase, setPhrase});  
  Grammar grammar = new Grammar((GrammarBuilder)bothChoices);  
  grammar.Name = "backgroundColor";  
  return grammar;  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.#ctor" />
      </Docs>
    </Member>
  </Members>
</Type>