<Type Name="GrammarBuilder" FullName="System.Speech.Recognition.GrammarBuilder">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="98da164e53b40a45073d60c360d0897674bf1959" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30580024" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class GrammarBuilder" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit GrammarBuilder extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Speech.Recognition.GrammarBuilder" />
  <TypeSignature Language="VB.NET" Value="Public Class GrammarBuilder" />
  <TypeSignature Language="C++ CLI" Value="public ref class GrammarBuilder" />
  <AssemblyInfo>
    <AssemblyName>System.Speech</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Diagnostics.DebuggerDisplay("{DebugSummary}")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="51858-101">Udostępnia mechanizm do programowego tworzenia ograniczenia dla gramatyki rozpoznawania mowy.</span>
      <span class="sxs-lookup">
        <span data-stu-id="51858-101">Provides a mechanism for programmatically building the constraints for a speech recognition grammar.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51858-102">Gramatyki rozpoznawania mowy często są tworzone w formacie XML, zdefiniowane przez [mowy rozpoznawania gramatyki specyfikacji (SRGS) w wersji 1.0](http://go.microsoft.com/fwlink/?LinkId=201761).</span><span class="sxs-lookup"><span data-stu-id="51858-102">Speech recognition grammars are commonly authored in the XML format defined by the [Speech Recognition Grammar Specification (SRGS) Version 1.0](http://go.microsoft.com/fwlink/?LinkId=201761).</span></span> <span data-ttu-id="51858-103">Jeśli znasz SRGS, ale chcesz wygenerować gramatyki programowo, możesz użyć <xref:System.Speech.Recognition.SrgsGrammar> przestrzeni nazw, której członkami są odpowiednie elementy i atrybuty zdefiniowane przez SRGS.</span><span class="sxs-lookup"><span data-stu-id="51858-103">If you are familiar with SRGS but want to generate the grammars programmatically, you can use the <xref:System.Speech.Recognition.SrgsGrammar> namespace, whose members correspond closely to the elements and attributes defined by SRGS.</span></span> <span data-ttu-id="51858-104">Jeśli użytkownik nie zna SRGS lub ma niewielka, programistyczny sposobem tworzenia gramatyki, z których można efektywnie wykonywać wielu typowych scenariuszy; można użyć <xref:System.Speech.Recognition.GrammarBuilder> i <xref:System.Speech.Recognition.Choices> klasy.</span><span class="sxs-lookup"><span data-stu-id="51858-104">If you are unfamiliar with SRGS, or you want a lightweight, programmatic approach to authoring grammars with which you can efficiently accomplish many common scenarios; you can use the <xref:System.Speech.Recognition.GrammarBuilder> and <xref:System.Speech.Recognition.Choices> classes.</span></span>  
  
 <span data-ttu-id="51858-105">Użyj <xref:System.Speech.Recognition.GrammarBuilder> obiektów do kompilacji hierarchiczne drzewo składa się z <xref:System.Speech.Recognition.Choices> z powrotem do obiektów zawierających fraz oraz preambuły i po amble fraz w każdym węźle i rozpoczęta wartościami semantycznego zmienić znaczenie aplikacja.</span><span class="sxs-lookup"><span data-stu-id="51858-105">Use <xref:System.Speech.Recognition.GrammarBuilder> objects to build a hierarchical tree composed of <xref:System.Speech.Recognition.Choices> objects that contain alternate phrases, interspersed with preamble and post-amble phrases at each node, and seeded with semantic values that convey  meaning back to the application.</span></span>  
  
 <span data-ttu-id="51858-106">Aby użyć <xref:System.Speech.Recognition.GrammarBuilder> utworzyć <xref:System.Speech.Recognition.Grammar> obiektów, wykonaj następujące kroki.</span><span class="sxs-lookup"><span data-stu-id="51858-106">To use a <xref:System.Speech.Recognition.GrammarBuilder> to create a <xref:System.Speech.Recognition.Grammar> object, use the following steps.</span></span>  
  
1.  <span data-ttu-id="51858-107">Utwórz <xref:System.Speech.Recognition.GrammarBuilder> obiektu.</span><span class="sxs-lookup"><span data-stu-id="51858-107">Create a <xref:System.Speech.Recognition.GrammarBuilder> object.</span></span>  
  
2.  <span data-ttu-id="51858-108">Dołącz ograniczeń do <xref:System.Speech.Recognition.GrammarBuilder>, takich jak <xref:System.String> obiektów, <xref:System.Speech.Recognition.Choices>, <xref:System.Speech.Recognition.SemanticResultKey>, <xref:System.Speech.Recognition.SemanticResultValue>, <xref:System.Speech.Recognition.DictationGrammar>oraz inne <xref:System.Speech.Recognition.GrammarBuilder> obiektów, które należy zdefiniować ograniczenia dla gramatyki.</span><span class="sxs-lookup"><span data-stu-id="51858-108">Append constraints to the <xref:System.Speech.Recognition.GrammarBuilder>, such as <xref:System.String> objects, <xref:System.Speech.Recognition.Choices>, <xref:System.Speech.Recognition.SemanticResultKey>, <xref:System.Speech.Recognition.SemanticResultValue>, <xref:System.Speech.Recognition.DictationGrammar>, and other <xref:System.Speech.Recognition.GrammarBuilder> objects that define the constraints for the grammar.</span></span>  
  
3.  <span data-ttu-id="51858-109">Użyj jednej z <xref:System.Speech.Recognition.Grammar.%23ctor%2A> konstruktorów, aby utworzyć <xref:System.Speech.Recognition.Grammar> obiektu z ukończonej <xref:System.Speech.Recognition.GrammarBuilder> gramatyki.</span><span class="sxs-lookup"><span data-stu-id="51858-109">Use one of the <xref:System.Speech.Recognition.Grammar.%23ctor%2A> constructors to create a <xref:System.Speech.Recognition.Grammar> object from the completed <xref:System.Speech.Recognition.GrammarBuilder> grammar.</span></span>  
  
 <span data-ttu-id="51858-110">Tworzenie z <xref:System.Speech.Recognition.GrammarBuilder> najlepiej nadaje się dla gramatyk zawierających jedną regułę zawierających listy lub prawdopodobnie listy list.</span><span class="sxs-lookup"><span data-stu-id="51858-110">Authoring with <xref:System.Speech.Recognition.GrammarBuilder> is best suited to grammars that have a single rule containing lists, or perhaps lists of lists.</span></span> <span data-ttu-id="51858-111">Aby programowo kompilacji gramatyki, które mają wiele reguł lub wymagają wewnętrzna zasada odwołuje się, należy użyć klasy <xref:System.Speech.Recognition.SrgsGrammar> przestrzeni nazw.</span><span class="sxs-lookup"><span data-stu-id="51858-111">To programmatically build grammars that have multiple rules, or that need to make internal rule references, use the classes of the <xref:System.Speech.Recognition.SrgsGrammar> namespace.</span></span>  
  
 <span data-ttu-id="51858-112">Wystąpienia <xref:System.Speech.Recognition.GrammarBuilder> również można uzyskać przez niejawną konwersję z niektórych innych klas lub łącząc <xref:System.Speech.Recognition.GrammarBuilder> z drugi obiekt, który zawiera ograniczenia dla gramatyki.</span><span class="sxs-lookup"><span data-stu-id="51858-112">Instances of <xref:System.Speech.Recognition.GrammarBuilder> can also be obtained by implicit conversions from certain other classes or by combining a  <xref:System.Speech.Recognition.GrammarBuilder> with a second object that contains constraints for a grammar..</span></span> <span data-ttu-id="51858-113">Aby uzyskać więcej informacji, zobacz <xref:System.Speech.Recognition.GrammarBuilder.op_Implicit%2A> i <xref:System.Speech.Recognition.GrammarBuilder.op_Addition%2A> operatory i <xref:System.Speech.Recognition.GrammarBuilder.Add%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="51858-113">For more information, see the <xref:System.Speech.Recognition.GrammarBuilder.op_Implicit%2A> and <xref:System.Speech.Recognition.GrammarBuilder.op_Addition%2A> operators and the <xref:System.Speech.Recognition.GrammarBuilder.Add%2A> methods.</span></span>  
  
 <span data-ttu-id="51858-114">Aby dodać do istniejącej reguły <xref:System.Speech.Recognition.GrammarBuilder>, użyj <xref:System.Speech.Recognition.GrammarBuilder.Add%2A>, <xref:System.Speech.Recognition.GrammarBuilder.Append%2A>, <xref:System.Speech.Recognition.GrammarBuilder.AppendDictation%2A>, <xref:System.Speech.Recognition.GrammarBuilder.AppendRuleReference%2A>, i <xref:System.Speech.Recognition.GrammarBuilder.AppendWildcard%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="51858-114">To add rules to an existing <xref:System.Speech.Recognition.GrammarBuilder>, use the <xref:System.Speech.Recognition.GrammarBuilder.Add%2A>, <xref:System.Speech.Recognition.GrammarBuilder.Append%2A>, <xref:System.Speech.Recognition.GrammarBuilder.AppendDictation%2A>, <xref:System.Speech.Recognition.GrammarBuilder.AppendRuleReference%2A>, and <xref:System.Speech.Recognition.GrammarBuilder.AppendWildcard%2A> methods.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="51858-115">Aparat rozpoznawania mowy może zgłosić wyjątek, używając gramatyki rozpoznawania mowy, który zawiera zduplikowane elementy semantycznego o takiej samej nazwie klucza lub wielu elementów semantyczne, które wielokrotnie można zmodyfikować wartości tego samego elementu semantycznego.</span><span class="sxs-lookup"><span data-stu-id="51858-115">The speech recognizer can throw an exception when using a speech recognition grammar that contains duplicate semantic elements with the same key name or multiple semantic elements that could repeatedly modify the value of the same semantic element.</span></span> <span data-ttu-id="51858-116">Aby uzyskać więcej informacji o tworzeniu gramatyki rozpoznawania mowy, który zawiera informacje semantyczne, zobacz [przy użyciu SemanticResultKey i obiekty SemanticResultValue](http://msdn.microsoft.com/library/0fea1236-5261-4608-89b3-9ce9ffc22a1c).</span><span class="sxs-lookup"><span data-stu-id="51858-116">For more information about building a speech recognition grammar that contains semantic information, see [Using SemanticResultKey and SemanticResultValue Objects](http://msdn.microsoft.com/library/0fea1236-5261-4608-89b3-9ce9ffc22a1c).</span></span>  
  
 <span data-ttu-id="51858-117">Aby pomóc w debugowaniu, <xref:System.Speech.Recognition.GrammarBuilder.DebugShowPhrases%2A> właściwość zwraca bieżący stan <xref:System.Speech.Recognition.GrammarBuilder> jako ciąg.</span><span class="sxs-lookup"><span data-stu-id="51858-117">To help with debugging, the <xref:System.Speech.Recognition.GrammarBuilder.DebugShowPhrases%2A> property returns the current status of the <xref:System.Speech.Recognition.GrammarBuilder> as a string.</span></span>  
  
 <span data-ttu-id="51858-118">Aby uzyskać więcej informacji na temat tworzenia i używania gramatyki rozpoznawania mowy, zobacz [rozpoznawania mowy](http://msdn.microsoft.com/library/6a7dc524-07fc-4862-8d48-8c10dc64b919) i [tworzenie gramatyki GrammarBuilder](http://msdn.microsoft.com/library/7e2cc577-cb05-4318-9da3-7c8675d3d9ae).</span><span class="sxs-lookup"><span data-stu-id="51858-118">For more information about building and using speech recognition grammars, see [Speech Recognition](http://msdn.microsoft.com/library/6a7dc524-07fc-4862-8d48-8c10dc64b919) and [Creating GrammarBuilder Grammars](http://msdn.microsoft.com/library/7e2cc577-cb05-4318-9da3-7c8675d3d9ae).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="51858-119">W poniższym przykładzie użyto <xref:System.Speech.Recognition.GrammarBuilder> i <xref:System.Speech.Recognition.Choices> obiekty do skonstruowania gramatyki, która może rozpoznać jednej z dwóch wyrażeń "tło *colorChoice*" lub "ustawioną tła *colorChoice*".</span><span class="sxs-lookup"><span data-stu-id="51858-119">The following example uses  <xref:System.Speech.Recognition.GrammarBuilder> and <xref:System.Speech.Recognition.Choices> objects to construct a grammar that can recognize either of the two phrases, "Make background *colorChoice*" or "Set background to *colorChoice*".</span></span>  
  
 <span data-ttu-id="51858-120">W przykładzie użyto <xref:System.Speech.Recognition.Choices> obiekt, aby utworzyć listę dopuszczalne wartości *colorChoice* z tablicy <xref:System.String> obiektów.</span><span class="sxs-lookup"><span data-stu-id="51858-120">The example uses a <xref:System.Speech.Recognition.Choices> object  to create a list of acceptable values for *colorChoice* from an array of <xref:System.String> objects.</span></span> <span data-ttu-id="51858-121">A <xref:System.Speech.Recognition.Choices> obiektu jest odpowiednikiem `one-of` elementu w specyfikacji SRGS i zawiera zestaw fraz, które mogą być rozpoznawane, gdy jest używany.</span><span class="sxs-lookup"><span data-stu-id="51858-121">A <xref:System.Speech.Recognition.Choices> object is analogous to the `one-of` element in the SRGS specification, and contains a set of alternate phrases, any of which can be recognized when spoken.</span></span> <span data-ttu-id="51858-122">Funkcja <xref:System.Speech.Recognition.Choices> obiektu do grupy macierzy dwa <xref:System.Speech.Recognition.GrammarBuilder> obiektów do pary alternatywnych wyrażeń, które może rozpoznać wynikowe gramatyki.</span><span class="sxs-lookup"><span data-stu-id="51858-122">The example also uses a <xref:System.Speech.Recognition.Choices> object to group an array of two <xref:System.Speech.Recognition.GrammarBuilder> objects into a pair of alternative phrases that the resultant grammar can recognize.</span></span> <span data-ttu-id="51858-123">Alternatywne słów ani fraz wchodzą w skład większości gramatyki i <xref:System.Speech.Recognition.Choices> obiekt zapewnia tę funkcję dla gramatyk skonstruowany przy <xref:System.Speech.Recognition.GrammarBuilder>.</span><span class="sxs-lookup"><span data-stu-id="51858-123">Alternate words or phrases are a component of most grammars, and the <xref:System.Speech.Recognition.Choices> object provides this functionality for grammars constructed with <xref:System.Speech.Recognition.GrammarBuilder>.</span></span>  
  
 <span data-ttu-id="51858-124">W przykładzie jest tworzony na koniec <xref:System.Speech.Recognition.Grammar> obiekt z <xref:System.Speech.Recognition.GrammarBuilder> utworzone na podstawie <xref:System.Speech.Recognition.Choices> obiektu.</span><span class="sxs-lookup"><span data-stu-id="51858-124">The example finally creates a <xref:System.Speech.Recognition.Grammar> object from a <xref:System.Speech.Recognition.GrammarBuilder> constructed from a <xref:System.Speech.Recognition.Choices> object.</span></span>  
  
```csharp  
  
private Grammar CreateColorGrammar()  
{  
  
  // Create a set of color choices.  
  Choices colorChoice = new Choices(new string[] {"red", "green", "blue"});  
  GrammarBuilder colorElement = new GrammarBuilder(colorChoice);  
  
  // Create grammar builders for the two versions of the phrase.  
  GrammarBuilder makePhrase = new GrammarBuilder("Make background");  
  makePhrase.Append(colorElement);  
  GrammarBuilder setPhrase = new GrammarBuilder("Set background to");  
  setPhrase.Append(colorElement);  
  
  // Create a Choices for the two alternative phrases, convert the Choices  
  // to a GrammarBuilder, and construct the grammar from the result.  
  Choices bothChoices = new Choices(new GrammarBuilder[] {makePhrase, setPhrase});  
  Grammar grammar = new Grammar((GrammarBuilder)bothChoices);  
  grammar.Name = "backgroundColor";  
  return grammar;  
}  
  
```  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Speech.Recognition.Choices" />
    <altmember cref="T:System.Speech.Recognition.Grammar" />
    <altmember cref="T:System.Speech.Recognition.SemanticResultKey" />
    <altmember cref="T:System.Speech.Recognition.SemanticResultValue" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="51858-125">Inicjuje nowe wystąpienie klasy <see cref="T:System.Speech.Recognition.GrammarBuilder" /> klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51858-125">Initializes a new instance of the <see cref="T:System.Speech.Recognition.GrammarBuilder" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51858-126">Niejawne konwersje z innych klas lub łącząc można także uzyskać wystąpienia tej klasy <xref:System.Speech.Recognition.GrammarBuilder> obiektu o drugi obiekt do z nową <xref:System.Speech.Recognition.GrammarBuilder>.</span><span class="sxs-lookup"><span data-stu-id="51858-126">Instances of this class can also be obtained by implicit conversions from other classes or by combining a <xref:System.Speech.Recognition.GrammarBuilder> object with a second object to from a new <xref:System.Speech.Recognition.GrammarBuilder>.</span></span> <span data-ttu-id="51858-127">Aby uzyskać więcej informacji, zobacz <xref:System.Speech.Recognition.GrammarBuilder.op_Implicit%2A> i <xref:System.Speech.Recognition.GrammarBuilder.op_Addition%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="51858-127">For more information, see the <xref:System.Speech.Recognition.GrammarBuilder.op_Implicit%2A> and <xref:System.Speech.Recognition.GrammarBuilder.op_Addition%2A> methods.</span></span>  
  
 <span data-ttu-id="51858-128">Aby dodać ograniczeń do istniejącej <xref:System.Speech.Recognition.GrammarBuilder>, użyj <xref:System.Speech.Recognition.GrammarBuilder.Add%2A>, <xref:System.Speech.Recognition.GrammarBuilder.Append%2A>, <xref:System.Speech.Recognition.GrammarBuilder.AppendDictation%2A>, <xref:System.Speech.Recognition.GrammarBuilder.AppendRuleReference%2A>, i <xref:System.Speech.Recognition.GrammarBuilder.AppendWildcard%2A> metod i <xref:System.Speech.Recognition.GrammarBuilder.op_Addition%2A> operatora.</span><span class="sxs-lookup"><span data-stu-id="51858-128">To add constraints to an existing <xref:System.Speech.Recognition.GrammarBuilder>, use the <xref:System.Speech.Recognition.GrammarBuilder.Add%2A>, <xref:System.Speech.Recognition.GrammarBuilder.Append%2A>, <xref:System.Speech.Recognition.GrammarBuilder.AppendDictation%2A>, <xref:System.Speech.Recognition.GrammarBuilder.AppendRuleReference%2A>, and <xref:System.Speech.Recognition.GrammarBuilder.AppendWildcard%2A> methods, and the <xref:System.Speech.Recognition.GrammarBuilder.op_Addition%2A> operator.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="51858-129">Aparat rozpoznawania mowy może zgłosić wyjątek, używając gramatyki rozpoznawania mowy, który zawiera zduplikowane elementy semantycznego o takiej samej nazwie klucza lub wielu elementów semantyczne, które wielokrotnie można zmodyfikować wartości tego samego elementu semantycznego.</span><span class="sxs-lookup"><span data-stu-id="51858-129">The speech recognizer can throw an exception when using a speech recognition grammar that contains duplicate semantic elements with the same key name or multiple semantic elements that could repeatedly modify the value of the same semantic element.</span></span> <span data-ttu-id="51858-130">Aby uzyskać więcej informacji o tworzeniu gramatyki rozpoznawania mowy, który zawiera informacje semantyczne, zobacz [przy użyciu SemanticResultKey i obiekty SemanticResultValue](http://msdn.microsoft.com/library/0fea1236-5261-4608-89b3-9ce9ffc22a1c).</span><span class="sxs-lookup"><span data-stu-id="51858-130">For more information about building a speech recognition grammar that contains semantic information, see [Using SemanticResultKey and SemanticResultValue Objects](http://msdn.microsoft.com/library/0fea1236-5261-4608-89b3-9ce9ffc22a1c).</span></span>  
  
 <span data-ttu-id="51858-131">Aby uzyskać więcej informacji na temat tworzenia i używania gramatyki rozpoznawania mowy, zobacz [rozpoznawania mowy](http://msdn.microsoft.com/library/6a7dc524-07fc-4862-8d48-8c10dc64b919) i [tworzenie gramatyki GrammarBuilder](http://msdn.microsoft.com/library/7e2cc577-cb05-4318-9da3-7c8675d3d9ae).</span><span class="sxs-lookup"><span data-stu-id="51858-131">For more information about building and using speech recognition grammars, see [Speech Recognition](http://msdn.microsoft.com/library/6a7dc524-07fc-4862-8d48-8c10dc64b919) and [Creating GrammarBuilder Grammars](http://msdn.microsoft.com/library/7e2cc577-cb05-4318-9da3-7c8675d3d9ae).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Speech.Recognition.Choices" />
        <altmember cref="T:System.Speech.Recognition.Grammar" />
        <altmember cref="T:System.Speech.Recognition.SemanticResultKey" />
        <altmember cref="T:System.Speech.Recognition.SemanticResultValue" />
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public GrammarBuilder ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; GrammarBuilder();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="51858-132">Inicjuje nową, pustą wystąpienie <see cref="T:System.Speech.Recognition.GrammarBuilder" /> klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51858-132">Initializes a new, empty instance of the <see cref="T:System.Speech.Recognition.GrammarBuilder" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51858-133">Aby dodać do istniejącej reguły <xref:System.Speech.Recognition.GrammarBuilder> obiektów, użyj <xref:System.Speech.Recognition.GrammarBuilder.Add%2A>, <xref:System.Speech.Recognition.GrammarBuilder.Append%2A>, <xref:System.Speech.Recognition.GrammarBuilder.AppendDictation%2A>, <xref:System.Speech.Recognition.GrammarBuilder.AppendRuleReference%2A>, i <xref:System.Speech.Recognition.GrammarBuilder.AppendWildcard%2A> metod i <xref:System.Speech.Recognition.GrammarBuilder.op_Addition%2A> operatora.</span><span class="sxs-lookup"><span data-stu-id="51858-133">To add rules to an existing <xref:System.Speech.Recognition.GrammarBuilder> object, use the <xref:System.Speech.Recognition.GrammarBuilder.Add%2A>, <xref:System.Speech.Recognition.GrammarBuilder.Append%2A>, <xref:System.Speech.Recognition.GrammarBuilder.AppendDictation%2A>, <xref:System.Speech.Recognition.GrammarBuilder.AppendRuleReference%2A>, and <xref:System.Speech.Recognition.GrammarBuilder.AppendWildcard%2A> methods, and the <xref:System.Speech.Recognition.GrammarBuilder.op_Addition%2A> operator.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="51858-134">Aparat rozpoznawania mowy może zgłosić wyjątek, używając gramatyki rozpoznawania mowy, który zawiera zduplikowane elementy semantycznego o takiej samej nazwie klucza lub wielu elementów semantyczne, które wielokrotnie można zmodyfikować wartości tego samego elementu semantycznego.</span><span class="sxs-lookup"><span data-stu-id="51858-134">The speech recognizer can throw an exception when using a speech recognition grammar that contains duplicate semantic elements with the same key name or multiple semantic elements that could repeatedly modify the value of the same semantic element.</span></span> <span data-ttu-id="51858-135">Aby uzyskać więcej informacji o tworzeniu gramatyki rozpoznawania mowy, który zawiera informacje semantyczne, zobacz [przy użyciu SemanticResultKey i obiekty SemanticResultValue](http://msdn.microsoft.com/library/0fea1236-5261-4608-89b3-9ce9ffc22a1c).</span><span class="sxs-lookup"><span data-stu-id="51858-135">For more information about building a speech recognition grammar that contains semantic information, see [Using SemanticResultKey and SemanticResultValue Objects](http://msdn.microsoft.com/library/0fea1236-5261-4608-89b3-9ce9ffc22a1c).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="51858-136">W poniższym przykładzie użyto <xref:System.Speech.Recognition.GrammarBuilder> i <xref:System.Speech.Recognition.Choices> obiekty do skonstruowania gramatyki, która może rozpoznać jednej z dwóch wyrażeń "tło *colorChoice*" lub "ustawioną tła *colorChoice*".</span><span class="sxs-lookup"><span data-stu-id="51858-136">The following example uses  <xref:System.Speech.Recognition.GrammarBuilder> and <xref:System.Speech.Recognition.Choices> objects to construct a grammar that can recognize either of the two phrases, "Make background *colorChoice*" or "Set background to *colorChoice*".</span></span>  
  
 <span data-ttu-id="51858-137">W przykładzie użyto <xref:System.Speech.Recognition.Choices> obiekt, aby utworzyć listę dopuszczalne wartości *colorChoice* z tablicy <xref:System.String> obiektów.</span><span class="sxs-lookup"><span data-stu-id="51858-137">The example uses a <xref:System.Speech.Recognition.Choices> object  to create a list of acceptable values for *colorChoice* from an array of <xref:System.String> objects.</span></span> <span data-ttu-id="51858-138">A <xref:System.Speech.Recognition.Choices> obiektu jest odpowiednikiem `one-of` elementu w specyfikacji SRGS i zawiera zestaw fraz jedno z nich mogą być rozpoznawane, gdy jest używany.</span><span class="sxs-lookup"><span data-stu-id="51858-138">A <xref:System.Speech.Recognition.Choices> object is analogous to the `one-of` element in the SRGS specification, and contains a set of alternate phrases, any one of which can be recognized when spoken.</span></span> <span data-ttu-id="51858-139">Funkcja <xref:System.Speech.Recognition.Choices> obiektu do grupy macierzy dwa <xref:System.Speech.Recognition.GrammarBuilder> obiektów do pary alternatywnych wyrażeń, które może rozpoznać wynikowe gramatyki.</span><span class="sxs-lookup"><span data-stu-id="51858-139">The example also uses a <xref:System.Speech.Recognition.Choices> object to group an array of two <xref:System.Speech.Recognition.GrammarBuilder> objects into a pair of alternative phrases that the resultant grammar can recognize.</span></span> <span data-ttu-id="51858-140">Alternatywne słów ani fraz wchodzą w skład większości gramatyki i <xref:System.Speech.Recognition.Choices> obiekt zapewnia tę funkcję dla gramatyk skonstruowany przy <xref:System.Speech.Recognition.GrammarBuilder>.</span><span class="sxs-lookup"><span data-stu-id="51858-140">Alternate words or phrases are a component of most grammars, and the <xref:System.Speech.Recognition.Choices> object provides this functionality for grammars constructed with <xref:System.Speech.Recognition.GrammarBuilder>.</span></span>  
  
 <span data-ttu-id="51858-141">W przykładzie jest tworzony na koniec <xref:System.Speech.Recognition.Grammar> obiekt z <xref:System.Speech.Recognition.GrammarBuilder> utworzone na podstawie <xref:System.Speech.Recognition.Choices> obiektu.</span><span class="sxs-lookup"><span data-stu-id="51858-141">The example finally creates a <xref:System.Speech.Recognition.Grammar> object from a <xref:System.Speech.Recognition.GrammarBuilder> constructed from a <xref:System.Speech.Recognition.Choices> object.</span></span>  
  
```csharp  
  
private Grammar CreateColorGrammar()  
{  
  
  // Create a set of color choices.  
  Choices colorChoice = new Choices(new string[] {"red", "green", "blue"});  
  GrammarBuilder colorElement = new GrammarBuilder(colorChoice);  
  
  // Create grammar builders for the two versions of the phrase.  
  GrammarBuilder makePhrase = new GrammarBuilder("Make background");  
  makePhrase.Append(colorElement);  
  GrammarBuilder setPhrase = new GrammarBuilder("Set background to");  
  setPhrase.Append(colorElement);  
  
  // Create a Choices for the two alternative phrases, convert the Choices  
  // to a GrammarBuilder, and construct the Grammar object from the result.  
  GrammarBuilder bothPhrases = new GrammarBuilder();  
  Choices bothChoices = new Choices(new GrammarBuilder[] {makePhrase, setPhrase});  
  bothPhrases.Append(bothChoices);  
  Grammar grammar = new Grammar(bothPhrases);  
  grammar.Name = "backgroundColor";  
  return grammar;  
}  
  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Speech.Recognition.Choices" />
        <altmember cref="T:System.Speech.Recognition.Grammar" />
        <altmember cref="T:System.Speech.Recognition.SemanticResultKey" />
        <altmember cref="T:System.Speech.Recognition.SemanticResultValue" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public GrammarBuilder (System.Speech.Recognition.Choices alternateChoices);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Speech.Recognition.Choices alternateChoices) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.#ctor(System.Speech.Recognition.Choices)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (alternateChoices As Choices)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; GrammarBuilder(System::Speech::Recognition::Choices ^ alternateChoices);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="alternateChoices" Type="System.Speech.Recognition.Choices" />
      </Parameters>
      <Docs>
        <param name="alternateChoices">
          <span data-ttu-id="51858-142">Zestaw alternatyw.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51858-142">The set of alternatives.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="51858-143">Inicjuje nowe wystąpienie klasy <see cref="T:System.Speech.Recognition.GrammarBuilder" /> klasy z zestawu alternatyw.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51858-143">Initializes a new instance of the <see cref="T:System.Speech.Recognition.GrammarBuilder" /> class from a set of alternatives.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51858-144">Aby uzyskać więcej informacji o tworzeniu gramatyki rozpoznawania mowy, która zawiera opis rozwiązań alternatywnych, zobacz [przy użyciu opcji do utworzenia gramatyki GrammarBuilder](http://msdn.microsoft.com/library/5b18db18-a5f6-46a3-aa77-6d3141544efd).</span><span class="sxs-lookup"><span data-stu-id="51858-144">For more information about building a speech recognition grammar that contains alternatives, see [Using Choices to Create a GrammarBuilder Grammar](http://msdn.microsoft.com/library/5b18db18-a5f6-46a3-aa77-6d3141544efd).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="51858-145">W poniższym przykładzie użyto <xref:System.Speech.Recognition.GrammarBuilder> i <xref:System.Speech.Recognition.Choices> obiekty do skonstruowania gramatyki, która może rozpoznać jednej z dwóch wyrażeń "tło *colorChoice*" lub "ustawioną tła *colorChoice*".</span><span class="sxs-lookup"><span data-stu-id="51858-145">The following example uses  <xref:System.Speech.Recognition.GrammarBuilder> and <xref:System.Speech.Recognition.Choices> objects to construct a grammar that can recognize either of the two phrases, "Make background *colorChoice*" or "Set background to *colorChoice*".</span></span>  
  
 <span data-ttu-id="51858-146">W przykładzie użyto <xref:System.Speech.Recognition.Choices> obiekt, aby utworzyć listę dopuszczalne wartości *colorChoice* z tablicy <xref:System.String> obiektów.</span><span class="sxs-lookup"><span data-stu-id="51858-146">The example uses a <xref:System.Speech.Recognition.Choices> object  to create a list of acceptable values for *colorChoice* from an array of <xref:System.String> objects.</span></span> <span data-ttu-id="51858-147">A <xref:System.Speech.Recognition.Choices> obiektu jest odpowiednikiem `one-of` elementu w specyfikacji SRGS i zawiera zestaw fraz, które mogą być rozpoznawane, gdy jest używany.</span><span class="sxs-lookup"><span data-stu-id="51858-147">A <xref:System.Speech.Recognition.Choices> object is analogous to the `one-of` element in the SRGS specification, and contains a set of alternate phrases, any of which can be recognized when spoken.</span></span> <span data-ttu-id="51858-148">Funkcja <xref:System.Speech.Recognition.Choices> obiektu do grupy macierzy dwa <xref:System.Speech.Recognition.GrammarBuilder> obiektów do pary alternatywnych wyrażeń, które może rozpoznać wynikowe gramatyki.</span><span class="sxs-lookup"><span data-stu-id="51858-148">The example also uses a <xref:System.Speech.Recognition.Choices> object to group an array of two <xref:System.Speech.Recognition.GrammarBuilder> objects into a pair of alternative phrases that the resultant grammar can recognize.</span></span> <span data-ttu-id="51858-149">Alternatywne słów ani fraz wchodzą w skład większości gramatyki i <xref:System.Speech.Recognition.Choices> obiekt zapewnia tę funkcję dla gramatyk skonstruowany przy <xref:System.Speech.Recognition.GrammarBuilder>.</span><span class="sxs-lookup"><span data-stu-id="51858-149">Alternate words or phrases are a component of most grammars, and the <xref:System.Speech.Recognition.Choices> object provides this functionality for grammars constructed with <xref:System.Speech.Recognition.GrammarBuilder>.</span></span>  
  
 <span data-ttu-id="51858-150">W przykładzie jest tworzony na koniec <xref:System.Speech.Recognition.Grammar> obiekt z <xref:System.Speech.Recognition.GrammarBuilder> utworzone na podstawie <xref:System.Speech.Recognition.Choices> obiektu.</span><span class="sxs-lookup"><span data-stu-id="51858-150">The example finally creates a <xref:System.Speech.Recognition.Grammar> object from a <xref:System.Speech.Recognition.GrammarBuilder> constructed from a <xref:System.Speech.Recognition.Choices> object.</span></span>  
  
```csharp  
  
private Grammar CreateColorGrammar()  
{  
  
  // Create a set of color choices.  
  Choices colorChoice = new Choices(new string[] {"red", "green", "blue"});  
  GrammarBuilder colorElement = new GrammarBuilder(colorChoice);  
  
  // Create grammar builders for the two versions of the phrase.  
  GrammarBuilder makePhrase = new GrammarBuilder("Make background");  
  makePhrase.Append(colorElement);  
  GrammarBuilder setPhrase = new GrammarBuilder("Set background to");  
  setPhrase.Append(colorElement);  
  
  // Create a Choices for the two alternative phrases, convert the Choices  
  // to a GrammarBuilder, and construct the grammar from the result.  
  Choices bothChoices = new Choices(new GrammarBuilder[] {makePhrase, setPhrase});  
  Grammar grammar = new Grammar((GrammarBuilder)bothChoices);  
  grammar.Name = "backgroundColor";  
  return grammar;  
}  
  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Speech.Recognition.Choices" />
        <altmember cref="T:System.Speech.Recognition.Grammar" />
        <altmember cref="T:System.Speech.Recognition.SemanticResultKey" />
        <altmember cref="T:System.Speech.Recognition.SemanticResultValue" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public GrammarBuilder (System.Speech.Recognition.SemanticResultKey key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Speech.Recognition.SemanticResultKey key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.#ctor(System.Speech.Recognition.SemanticResultKey)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (key As SemanticResultKey)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; GrammarBuilder(System::Speech::Recognition::SemanticResultKey ^ key);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="key" Type="System.Speech.Recognition.SemanticResultKey" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="51858-151">Klucz semantyki.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51858-151">The semantic key.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="51858-152">Inicjuje nowe wystąpienie klasy <see cref="T:System.Speech.Recognition.GrammarBuilder" /> klasy z klucz semantyki.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51858-152">Initializes a new instance of the <see cref="T:System.Speech.Recognition.GrammarBuilder" /> class from a semantic key.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51858-153">Po utworzeniu <xref:System.Speech.Recognition.GrammarBuilder> wystąpienia z <xref:System.Speech.Recognition.SemanticResultValue> obiektu, Dodaj informacje semantyczne do gramatyki, które mogą być zwrócone w wyniku rozpoznawania.</span><span class="sxs-lookup"><span data-stu-id="51858-153">When you create a <xref:System.Speech.Recognition.GrammarBuilder> instance from a <xref:System.Speech.Recognition.SemanticResultValue> object, you add semantic information to the grammar that can be returned in the recognition result.</span></span> <span data-ttu-id="51858-154">Są dostępne informacje semantyczne w wyniku rozpoznawania przy użyciu <xref:System.Speech.Recognition.RecognizedPhrase.Semantics%2A> właściwość <xref:System.Speech.Recognition.RecognizedPhrase>, która jest dostępna dla programu obsługi `SpeechRecognized` zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="51858-154">You can access the semantic information in the recognition result using the <xref:System.Speech.Recognition.RecognizedPhrase.Semantics%2A> property of <xref:System.Speech.Recognition.RecognizedPhrase>, which is available in the handler for the `SpeechRecognized` event.</span></span> <span data-ttu-id="51858-155">Jeśli <xref:System.Speech.Recognition.GrammarBuilder> definiuje <xref:System.Speech.Recognition.SemanticResultKey>, to może służyć do pobierania informacje semantyczne w wyniku rozpoznawania, który jest skojarzony z kluczem.</span><span class="sxs-lookup"><span data-stu-id="51858-155">If the <xref:System.Speech.Recognition.GrammarBuilder> defines a <xref:System.Speech.Recognition.SemanticResultKey>, this can be used to retrieve the semantic information in a recognition result that is associated with the key.</span></span> <span data-ttu-id="51858-156">Zobacz przykład <xref:System.Speech.Recognition.GrammarBuilder.Append%28System.Speech.Recognition.SemanticResultKey%29>i również wyświetlany <xref:System.Speech.Recognition.SemanticResultValue> i <xref:System.Speech.Recognition.SemanticResultKey>.</span><span class="sxs-lookup"><span data-stu-id="51858-156">See the example for <xref:System.Speech.Recognition.GrammarBuilder.Append%28System.Speech.Recognition.SemanticResultKey%29>, and also see <xref:System.Speech.Recognition.SemanticResultValue> and <xref:System.Speech.Recognition.SemanticResultKey>.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="51858-157">Podczas konstruowania <xref:System.Speech.Recognition.GrammarBuilder> obiektów, które zawierają <xref:System.Speech.Recognition.SemanticResultValue> lub <xref:System.Speech.Recognition.SemanticResultKey> wystąpienia, upewnij się, że można uniknąć tworzenia zduplikowane elementy semantycznego z tej samej nazwy klucza i wielu semantycznego elementy, które można zmodyfikować wielokrotnie <xref:System.Speech.Recognition.SemanticValue.Value%2A> Właściwość <xref:System.Speech.Recognition.SemanticValue> obiektu.</span><span class="sxs-lookup"><span data-stu-id="51858-157">When you construct <xref:System.Speech.Recognition.GrammarBuilder> objects that contain <xref:System.Speech.Recognition.SemanticResultValue> or <xref:System.Speech.Recognition.SemanticResultKey> instances, make sure you avoid creating duplicate semantic elements with the same key name or multiple semantic elements that could repeatedly modify the <xref:System.Speech.Recognition.SemanticValue.Value%2A> property of a <xref:System.Speech.Recognition.SemanticValue> object.</span></span> <span data-ttu-id="51858-158">Aparat rozpoznawania mowy może zgłosić wyjątek, w przypadku wykrycia takiej sytuacji.</span><span class="sxs-lookup"><span data-stu-id="51858-158">The speech recognizer can throw an exception if it encounters these circumstances.</span></span> <span data-ttu-id="51858-159">Aby uzyskać więcej informacji o tworzeniu gramatyki rozpoznawania mowy, który zawiera informacje semantyczne, zobacz [przy użyciu SemanticResultKey i obiekty SemanticResultValue](http://msdn.microsoft.com/library/0fea1236-5261-4608-89b3-9ce9ffc22a1c).</span><span class="sxs-lookup"><span data-stu-id="51858-159">For more information about building a speech recognition grammar that contains semantic information, see [Using SemanticResultKey and SemanticResultValue Objects](http://msdn.microsoft.com/library/0fea1236-5261-4608-89b3-9ce9ffc22a1c).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="51858-160">Poniższy przykład tworzy gramatyki rozpoznawania mowy, która może rozpoznać dwóch wyrażeń "tło *colorChoice*" i "ustawioną tła *colorChoice*", gdzie * colorChoice* wybrano zestaw kolorów.</span><span class="sxs-lookup"><span data-stu-id="51858-160">The following example creates a speech recognition grammar that can recognize the two phrases, "Make background *colorChoice*" and "Set background to *colorChoice*", where *colorChoice* is selected from a set of colors.</span></span> <span data-ttu-id="51858-161">Gramatyka umożliwia użytkownikowi współpracuje z żadnym z kilku nazwy kolorów i zwraca semantycznego informacji o nazwie rozpoznanym kolorów do aplikacji.</span><span class="sxs-lookup"><span data-stu-id="51858-161">The grammar lets a user speak any of several color names, and returns semantic information about the recognized color name to the application.</span></span>  
  
 <span data-ttu-id="51858-162">W przykładzie użyto pojedynczy <xref:System.Speech.Recognition.SemanticResultKey> z można pobrać <xref:System.Speech.Recognition.SemanticValue> , który jest powiązany z kolor używany przez użytkownika.</span><span class="sxs-lookup"><span data-stu-id="51858-162">The example uses a single <xref:System.Speech.Recognition.SemanticResultKey> with which you can retrieve the <xref:System.Speech.Recognition.SemanticValue> that is associated with the color spoken by the user.</span></span> <span data-ttu-id="51858-163">Na przykład, jeśli dane wejściowe zawierają wyrażenie "Set tła czerwony" wyników rozpoznawania zawiera wartość semantyki "#ff0000", który można pobrać przy użyciu programu obsługi dla `SpeechRecognized` zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="51858-163">For example, if the input contains the phrase, "Set background to red", the recognition result contains the semantic value of "#FF0000", which you can retrieve using a handler for the `SpeechRecognized` event.</span></span>  
  
 <span data-ttu-id="51858-164">W przykładzie użyto <xref:System.String>, <xref:System.Speech.Recognition.Choices>, <xref:System.Speech.Recognition.SemanticResultKey>, <xref:System.Speech.Recognition.SemanticResultValue>, i <xref:System.Speech.Recognition.GrammarBuilder> obiektów do kompilacji zawarte w ciągu ostatnich ograniczenia <xref:System.Speech.Recognition.GrammarBuilder> obiektu `bothPhrases`.</span><span class="sxs-lookup"><span data-stu-id="51858-164">The example uses <xref:System.String>, <xref:System.Speech.Recognition.Choices>, <xref:System.Speech.Recognition.SemanticResultKey>, <xref:System.Speech.Recognition.SemanticResultValue>, and <xref:System.Speech.Recognition.GrammarBuilder> objects to build the constraints that are all contained in the last <xref:System.Speech.Recognition.GrammarBuilder> object, `bothPhrases`.</span></span> <span data-ttu-id="51858-165">Na koniec przykład tworzy <xref:System.Speech.Recognition.Grammar> obiektu z ukończonej <xref:System.Speech.Recognition.GrammarBuilder>.</span><span class="sxs-lookup"><span data-stu-id="51858-165">Finally, the example constructs a <xref:System.Speech.Recognition.Grammar> object from the completed <xref:System.Speech.Recognition.GrammarBuilder>.</span></span>  
  
```csharp  
  
private Grammar CreateColorGrammar()  
{  
  
  // Create a set of color choices.  
  // Include semantic information about each of the colors.  
  Choices colorChoice = new Choices();  
  
  GrammarBuilder colorBuilder = new GrammarBuilder("red");  
  SemanticResultValue colorValue =  
    new SemanticResultValue(colorBuilder, "#FF0000");  
  colorChoice.Add(new GrammarBuilder(colorValue));  
  
  colorBuilder = new GrammarBuilder("green");  
  colorValue = new SemanticResultValue(colorBuilder, "#00FF00");  
  colorChoice.Add(new GrammarBuilder(colorValue));  
  
  colorBuilder = new GrammarBuilder("blue");  
  colorValue = new SemanticResultValue(colorBuilder, "#0000FF");  
  colorChoice.Add(new GrammarBuilder(colorValue));  
  
  GrammarBuilder colorElement = new GrammarBuilder(colorChoice);  
  
  // Create grammar builders for the two versions of the phrase.  
  GrammarBuilder makePhrase = new GrammarBuilder("Make background");  
  makePhrase.Append(colorElement);  
  GrammarBuilder setPhrase = new GrammarBuilder("Set background to");  
  setPhrase.Append(colorElement);  
  
  // Create a Choices object for the two alternative phrases.  
  Choices bothChoices = new Choices(new GrammarBuilder[] {makePhrase, setPhrase});  
  GrammarBuilder bothPhrases = new GrammarBuilder(bothChoices);  
  
  // Create the semantic key for referencing the color information.  
  SemanticResultKey colorKey =  
    new SemanticResultKey("ColorCode", bothPhrases);  
  bothPhrases = new GrammarBuilder(colorKey);  
  
  // Construct the Grammar object from the GrammarBuilder.  
  Grammar grammar = new Grammar(bothPhrases);  
  grammar.Name = "backgroundColor";  
  return grammar;  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Speech.Recognition.Choices" />
        <altmember cref="T:System.Speech.Recognition.Grammar" />
        <altmember cref="T:System.Speech.Recognition.SemanticResultKey" />
        <altmember cref="T:System.Speech.Recognition.SemanticResultValue" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public GrammarBuilder (System.Speech.Recognition.SemanticResultValue value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Speech.Recognition.SemanticResultValue value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.#ctor(System.Speech.Recognition.SemanticResultValue)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (value As SemanticResultValue)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; GrammarBuilder(System::Speech::Recognition::SemanticResultValue ^ value);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="value" Type="System.Speech.Recognition.SemanticResultValue" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="51858-166">Semantycznego pary wartości lub nazwa/wartość.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51858-166">The semantic value or name/value pair.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="51858-167">Inicjuje nowe wystąpienie klasy <see cref="T:System.Speech.Recognition.GrammarBuilder" /> klasy ze wartość semantyki.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51858-167">Initializes a new instance of the <see cref="T:System.Speech.Recognition.GrammarBuilder" /> class from a semantic value.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51858-168">Po utworzeniu <xref:System.Speech.Recognition.GrammarBuilder> wystąpienia z <xref:System.Speech.Recognition.SemanticResultValue> obiektu, Dodaj informacje semantyczne do gramatyki, które mogą być zwrócone w wyniku rozpoznawania.</span><span class="sxs-lookup"><span data-stu-id="51858-168">When you create a <xref:System.Speech.Recognition.GrammarBuilder> instance from a <xref:System.Speech.Recognition.SemanticResultValue> object, you add semantic information to the grammar that can be returned in the recognition result.</span></span> <span data-ttu-id="51858-169">Są dostępne informacje semantyczne w wyniku rozpoznawania przy użyciu <xref:System.Speech.Recognition.RecognizedPhrase.Semantics%2A> właściwość <xref:System.Speech.Recognition.RecognizedPhrase>, która jest dostępna dla programu obsługi `SpeechRecognized` zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="51858-169">You can access the semantic information in the recognition result using the <xref:System.Speech.Recognition.RecognizedPhrase.Semantics%2A> property of <xref:System.Speech.Recognition.RecognizedPhrase>, which is available in the handler for the `SpeechRecognized` event.</span></span> <span data-ttu-id="51858-170">Jeśli <xref:System.Speech.Recognition.GrammarBuilder> definiuje <xref:System.Speech.Recognition.SemanticResultKey>, to może służyć do pobierania informacje semantyczne w wyniku rozpoznawania, który jest skojarzony z kluczem.</span><span class="sxs-lookup"><span data-stu-id="51858-170">If the <xref:System.Speech.Recognition.GrammarBuilder> defines a <xref:System.Speech.Recognition.SemanticResultKey>, this can be used to retrieve the semantic information in a recognition result that is associated with the key.</span></span> <span data-ttu-id="51858-171">Zobacz przykład <xref:System.Speech.Recognition.GrammarBuilder.Append%28System.Speech.Recognition.SemanticResultKey%29>i również wyświetlany <xref:System.Speech.Recognition.SemanticResultValue> i <xref:System.Speech.Recognition.SemanticResultKey>.</span><span class="sxs-lookup"><span data-stu-id="51858-171">See the example for <xref:System.Speech.Recognition.GrammarBuilder.Append%28System.Speech.Recognition.SemanticResultKey%29>, and also see <xref:System.Speech.Recognition.SemanticResultValue> and <xref:System.Speech.Recognition.SemanticResultKey>.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="51858-172">Podczas konstruowania <xref:System.Speech.Recognition.GrammarBuilder> obiektów, które zawierają <xref:System.Speech.Recognition.SemanticResultValue> lub <xref:System.Speech.Recognition.SemanticResultKey> wystąpienia, upewnij się, że można uniknąć tworzenia zduplikowane elementy semantycznego z tej samej nazwy klucza i wielu semantycznego elementy, które można zmodyfikować wielokrotnie <xref:System.Speech.Recognition.SemanticValue.Value%2A> Właściwość <xref:System.Speech.Recognition.SemanticValue> obiektu.</span><span class="sxs-lookup"><span data-stu-id="51858-172">When you construct <xref:System.Speech.Recognition.GrammarBuilder> objects that contain <xref:System.Speech.Recognition.SemanticResultValue> or <xref:System.Speech.Recognition.SemanticResultKey> instances, make sure you avoid creating duplicate semantic elements with the same key name or multiple semantic elements that could repeatedly modify the <xref:System.Speech.Recognition.SemanticValue.Value%2A> property of a <xref:System.Speech.Recognition.SemanticValue> object.</span></span> <span data-ttu-id="51858-173">Aparat rozpoznawania mowy może zgłosić wyjątek, w przypadku wykrycia takiej sytuacji.</span><span class="sxs-lookup"><span data-stu-id="51858-173">The speech recognizer can throw an exception if it encounters these circumstances.</span></span> <span data-ttu-id="51858-174">Aby uzyskać więcej informacji o tworzeniu gramatyki rozpoznawania mowy, który zawiera informacje semantyczne, zobacz [przy użyciu SemanticResultKey i obiekty SemanticResultValue](http://msdn.microsoft.com/library/0fea1236-5261-4608-89b3-9ce9ffc22a1c).</span><span class="sxs-lookup"><span data-stu-id="51858-174">For more information about building a speech recognition grammar that contains semantic information, see [Using SemanticResultKey and SemanticResultValue Objects](http://msdn.microsoft.com/library/0fea1236-5261-4608-89b3-9ce9ffc22a1c).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="51858-175">Poniższy przykład tworzy gramatyki rozpoznawania mowy, która może rozpoznać dwóch wyrażeń "tło *colorChoice*" i "ustawioną tła *colorChoice*", gdzie * colorChoice* wybrano zestaw kolorów.</span><span class="sxs-lookup"><span data-stu-id="51858-175">The following example creates a speech recognition grammar that can recognize the two phrases, "Make background *colorChoice*" and "Set background to *colorChoice*", where *colorChoice* is selected from a set of colors.</span></span> <span data-ttu-id="51858-176">Gramatyka umożliwia użytkownikowi współpracuje z żadnym z kilku nazwy kolorów i zwraca semantycznego informacji o nazwie rozpoznanym kolorów do aplikacji.</span><span class="sxs-lookup"><span data-stu-id="51858-176">The grammar lets a user speak any of several color names, and returns semantic information about the recognized color name to the application.</span></span>  
  
 <span data-ttu-id="51858-177">W przykładzie użyto pojedynczy <xref:System.Speech.Recognition.SemanticResultKey> z można pobrać <xref:System.Speech.Recognition.SemanticValue> , który jest powiązany z kolor używany przez użytkownika.</span><span class="sxs-lookup"><span data-stu-id="51858-177">The example uses a single <xref:System.Speech.Recognition.SemanticResultKey> with which you can retrieve the <xref:System.Speech.Recognition.SemanticValue> that is associated with the color spoken by the user.</span></span> <span data-ttu-id="51858-178">Na przykład, jeśli dane wejściowe zawierają wyrażenie "Set tła czerwony" wyników rozpoznawania zawiera wartość semantyki "#ff0000", który można pobrać przy użyciu programu obsługi dla `SpeechRecognized` zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="51858-178">For example, if the input contains the phrase, "Set background to red", the recognition result contains the semantic value of "#FF0000", which you can retrieve using a handler for the `SpeechRecognized` event.</span></span>  
  
 <span data-ttu-id="51858-179">W przykładzie użyto <xref:System.String>, <xref:System.Speech.Recognition.Choices>, <xref:System.Speech.Recognition.SemanticResultKey>, <xref:System.Speech.Recognition.SemanticResultValue>, i <xref:System.Speech.Recognition.GrammarBuilder> obiektów do kompilacji zawarte w ciągu ostatnich ograniczenia <xref:System.Speech.Recognition.GrammarBuilder> obiektu `bothPhrases`.</span><span class="sxs-lookup"><span data-stu-id="51858-179">The example uses <xref:System.String>, <xref:System.Speech.Recognition.Choices>, <xref:System.Speech.Recognition.SemanticResultKey>, <xref:System.Speech.Recognition.SemanticResultValue>, and <xref:System.Speech.Recognition.GrammarBuilder> objects to build the constraints that are all contained in the last <xref:System.Speech.Recognition.GrammarBuilder> object, `bothPhrases`.</span></span> <span data-ttu-id="51858-180">Na koniec przykład tworzy <xref:System.Speech.Recognition.Grammar> obiektu z ukończonej <xref:System.Speech.Recognition.GrammarBuilder>.</span><span class="sxs-lookup"><span data-stu-id="51858-180">Finally, the example constructs a <xref:System.Speech.Recognition.Grammar> object from the completed <xref:System.Speech.Recognition.GrammarBuilder>.</span></span>  
  
```csharp  
  
private Grammar CreateColorGrammar()  
{  
  
  // Create a set of color choices.  
  // Include semantic information about each of the colors.  
  Choices colorChoice = new Choices();  
  
  GrammarBuilder colorBuilder = new GrammarBuilder("red");  
  SemanticResultValue colorValue =  
    new SemanticResultValue(colorBuilder, "#FF0000");  
  colorChoice.Add(new GrammarBuilder(colorValue));  
  
  colorBuilder = new GrammarBuilder("green");  
  colorValue = new SemanticResultValue(colorBuilder, "#00FF00");  
  colorChoice.Add(new GrammarBuilder(colorValue));  
  
  colorBuilder = new GrammarBuilder("blue");  
  colorValue = new SemanticResultValue(colorBuilder, "#0000FF");  
  colorChoice.Add(new GrammarBuilder(colorValue));  
  
  GrammarBuilder colorElement = new GrammarBuilder(colorChoice);  
  
  // Create grammar builders for the two versions of the phrase.  
  GrammarBuilder makePhrase = new GrammarBuilder("Make background");  
  makePhrase.Append(colorElement);  
  GrammarBuilder setPhrase = new GrammarBuilder("Set background to");  
  setPhrase.Append(colorElement);  
  
  // Create a Choices for the two alternative phrases.  
  Choices bothChoices = new Choices(new GrammarBuilder[] {makePhrase, setPhrase});  
  GrammarBuilder bothPhrases = new GrammarBuilder(bothChoices);  
  
  // Create the semantic key for referencing the color information.  
  SemanticResultKey colorKey =  
    new SemanticResultKey("ColorCode", bothPhrases);  
  bothPhrases = new GrammarBuilder(colorKey);  
  
  // Construct the grammar from the grammar builder.  
  Grammar grammar = new Grammar(bothPhrases);  
  grammar.Name = "backgroundColor";  
  return grammar;  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Speech.Recognition.Choices" />
        <altmember cref="T:System.Speech.Recognition.Grammar" />
        <altmember cref="T:System.Speech.Recognition.SemanticResultKey" />
        <altmember cref="T:System.Speech.Recognition.SemanticResultValue" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public GrammarBuilder (string phrase);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string phrase) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (phrase As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; GrammarBuilder(System::String ^ phrase);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="phrase" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="phrase">
          <span data-ttu-id="51858-181">Sekwencja słów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51858-181">The sequence of words.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="51858-182">Inicjuje nowe wystąpienie klasy <see cref="T:System.Speech.Recognition.GrammarBuilder" /> klasy z sekwencję słów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51858-182">Initializes a new instance of the <see cref="T:System.Speech.Recognition.GrammarBuilder" /> class from a sequence of words.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51858-183">Wyrażenie reprezentuje dokładną frazę rozmowy rozpoznającego gramatyki rozpoznawania mowy.</span><span class="sxs-lookup"><span data-stu-id="51858-183">The phrase represents an exact spoken phrase that the speech recognition grammar can recognize.</span></span> <span data-ttu-id="51858-184">Aby uzyskać więcej informacji o tworzeniu gramatyki rozpoznawania mowy, która zawiera ciągi, zobacz [przy użyciu ciągów można utworzyć gramatyki GrammarBuilder](http://msdn.microsoft.com/library/0d87b445-a342-4369-9b3f-91d07fd7e114).</span><span class="sxs-lookup"><span data-stu-id="51858-184">For more information about building a speech recognition grammar that contains strings, see [Using Strings to Create a GrammarBuilder Grammar](http://msdn.microsoft.com/library/0d87b445-a342-4369-9b3f-91d07fd7e114).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="51858-185">W poniższym przykładzie użyto <xref:System.Speech.Recognition.GrammarBuilder> i <xref:System.Speech.Recognition.Choices> obiekty do skonstruowania gramatyki, która może rozpoznać jednej z dwóch wyrażeń "tło *colorChoice*" lub "ustawioną tła *colorChoice*".</span><span class="sxs-lookup"><span data-stu-id="51858-185">The following example uses  <xref:System.Speech.Recognition.GrammarBuilder> and <xref:System.Speech.Recognition.Choices> objects to construct a grammar that can recognize either of the two phrases, "Make background *colorChoice*" or "Set background to *colorChoice*".</span></span>  
  
 <span data-ttu-id="51858-186">Po utworzeniu listy dopuszczalne wartości *colorChoice* przy użyciu <xref:System.Speech.Recognition.Choices> obiektu, w przykładzie są inicjowane dwa <xref:System.Speech.Recognition.GrammarBuilder> obiektów, `makePhrase` i `setPhrase`, za pomocą ciągu jako argument.</span><span class="sxs-lookup"><span data-stu-id="51858-186">After creating a list of acceptable values for *colorChoice* using a <xref:System.Speech.Recognition.Choices> object, the example initializes two <xref:System.Speech.Recognition.GrammarBuilder> objects, `makePhrase` and `setPhrase`, using a string as an argument.</span></span>  
  
 <span data-ttu-id="51858-187">W przykładzie jest tworzony na koniec <xref:System.Speech.Recognition.Grammar> obiekt z <xref:System.Speech.Recognition.Choices> rzutować obiektu na <xref:System.Speech.Recognition.GrammarBuilder> obiektu.</span><span class="sxs-lookup"><span data-stu-id="51858-187">The example finally creates a <xref:System.Speech.Recognition.Grammar> object from a <xref:System.Speech.Recognition.Choices> object cast to a <xref:System.Speech.Recognition.GrammarBuilder> object.</span></span>  
  
```csharp  
  
private Grammar CreateColorGrammar()  
{  
  
  // Create a set of color choices.  
  Choices colorChoice = new Choices(new string[] {"red", "green", "blue"});  
  GrammarBuilder colorElement = new GrammarBuilder(colorChoice);  
  
  // Create grammar builders for the two versions of the phrase.  
  GrammarBuilder makePhrase = new GrammarBuilder("Make background");  
  makePhrase.Append(colorElement);  
  GrammarBuilder setPhrase = new GrammarBuilder("Set background to");  
  setPhrase.Append(colorElement);  
  
  // Create a Choices for the two alternative phrases, convert the Choices  
  // to a GrammarBuilder, and construct the Grammar object from the result.  
  Choices bothChoices = new Choices(new GrammarBuilder[] {makePhrase, setPhrase});  
  Grammar grammar = new Grammar((GrammarBuilder)bothChoices);  
  grammar.Name = "backgroundColor";  
  return grammar;  
}  
  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Speech.Recognition.Choices" />
        <altmember cref="T:System.Speech.Recognition.Grammar" />
        <altmember cref="T:System.Speech.Recognition.SemanticResultKey" />
        <altmember cref="T:System.Speech.Recognition.SemanticResultValue" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public GrammarBuilder (string phrase, System.Speech.Recognition.SubsetMatchingMode subsetMatchingCriteria);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string phrase, valuetype System.Speech.Recognition.SubsetMatchingMode subsetMatchingCriteria) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.#ctor(System.String,System.Speech.Recognition.SubsetMatchingMode)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (phrase As String, subsetMatchingCriteria As SubsetMatchingMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; GrammarBuilder(System::String ^ phrase, System::Speech::Recognition::SubsetMatchingMode subsetMatchingCriteria);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="phrase" Type="System.String" />
        <Parameter Name="subsetMatchingCriteria" Type="System.Speech.Recognition.SubsetMatchingMode" />
      </Parameters>
      <Docs>
        <param name="phrase">
          <span data-ttu-id="51858-188">Sekwencja słów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51858-188">The sequence of words.</span>
          </span>
        </param>
        <param name="subsetMatchingCriteria">
          <span data-ttu-id="51858-189">Zgodnym trybem gramatyki rozpoznawania mowy używany do rozpoznawania wyrażenie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51858-189">The matching mode the speech recognition grammar uses to recognize the phrase.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="51858-190">Inicjuje nowe wystąpienie klasy <see cref="T:System.Speech.Recognition.GrammarBuilder" /> klasy dla podzbioru sekwencję słów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51858-190">Initializes a new instance of the <see cref="T:System.Speech.Recognition.GrammarBuilder" /> class for a subset of a sequence of words.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51858-191">`phrase` Parametr reprezentuje frazę, które rozpoznają gramatyki rozpoznawania mowy.</span><span class="sxs-lookup"><span data-stu-id="51858-191">The `phrase` parameter represents the phrase that the speech recognition grammar can recognize.</span></span> <span data-ttu-id="51858-192">`subsetMatchingMode` Parametr określa podzestaw frazę, które można używany do osiągnięcia pomyślne rozpoznawanie całej frazy.</span><span class="sxs-lookup"><span data-stu-id="51858-192">The `subsetMatchingMode` parameter specifies a subset of the phrase that can be spoken to achieve successful recognition of the entire phrase.</span></span> <span data-ttu-id="51858-193">To umożliwia utworzenie gramatyki z listą wpisów, które mają długie nazwy, bez konieczności mowy całą nazwę w celu dopasowania elementu.</span><span class="sxs-lookup"><span data-stu-id="51858-193">You can use this to create a grammar with a list of entries that have long names, without requiring users to speak an entire name to match an item.</span></span>  
  
 <span data-ttu-id="51858-194">Aby uzyskać więcej informacji na temat trybów dopasowania, zobacz <xref:System.Speech.Recognition.SubsetMatchingMode>.</span><span class="sxs-lookup"><span data-stu-id="51858-194">For more information about the matching modes, see <xref:System.Speech.Recognition.SubsetMatchingMode>.</span></span> <span data-ttu-id="51858-195">Aby uzyskać więcej informacji o tworzeniu gramatyki rozpoznawania mowy, która zawiera ciągi, zobacz [przy użyciu ciągów można utworzyć gramatyki GrammarBuilder](http://msdn.microsoft.com/library/0d87b445-a342-4369-9b3f-91d07fd7e114).</span><span class="sxs-lookup"><span data-stu-id="51858-195">For more information about building a speech recognition grammar that contains strings, see [Using Strings to Create a GrammarBuilder Grammar](http://msdn.microsoft.com/library/0d87b445-a342-4369-9b3f-91d07fd7e114).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="51858-196">Gramatyka rozpoznawanie mowy w poniższym przykładzie jest tworzony dla każdego <xref:System.Speech.Recognition.SubsetMatchingMode> wartość i gramatyki dotyczące wybierania pomiędzy pasującego gramatyki tryb.</span><span class="sxs-lookup"><span data-stu-id="51858-196">The following example creates a speech recognition grammar for each <xref:System.Speech.Recognition.SubsetMatchingMode> value and a grammar for choosing between the matching mode grammars.</span></span> <span data-ttu-id="51858-197">Jeśli wartość `phrase` jest "jeden dwa trzy cztery pięć sześć siedem", gramatyki Podsekwencji rozpoznaje dane wejściowe, a następnie "dwa trzy cztery", ale nie dane wejściowe "co trzy pięć".</span><span class="sxs-lookup"><span data-stu-id="51858-197">If the value of `phrase` is "one two three four five six seven", then the Subsequence grammar recognizes the input "two three four", but not the input "one three five".</span></span> <span data-ttu-id="51858-198">Jednak uporządkowane podzbiór gramatyki rozpoznaje obu tych danych wejściowych.</span><span class="sxs-lookup"><span data-stu-id="51858-198">However, the Ordered Subset grammar recognizes both of these inputs.</span></span>  
  
```csharp  
  
private static IEnumerable<Grammar>  
  CreateMatchingModeGrammars(string phrase)  
{  
  List<Grammar> grammars = new List<Grammar>(5);  
  
  Choices modeChoice = new Choices();  
  Type enumType = typeof(SubsetMatchingMode);  
  foreach (SubsetMatchingMode mode in Enum.GetValues(enumType))  
  {  
    string modeName = Enum.GetName(enumType, mode);  
    modeName = BreakAtCaps(modeName);  
  
    GrammarBuilder builder = new GrammarBuilder(phrase, mode);  
    Grammar modeGrammar = new Grammar(builder);  
    modeGrammar.Name = modeName;  
    modeGrammar.Enabled = false;  
    grammars.Add(modeGrammar);  
  
    modeChoice.Add(modeName);  
  }  
  
  Grammar choiceGrammar = new Grammar(modeChoice);  
  choiceGrammar.Name = "choice";  
  grammars.Add(choiceGrammar);  
  
  return grammars;  
}  
  
// Insert spaces preceding each uppercase letter in a string.   
private static string BreakAtCaps(string item)  
{  
  if (item == null || item.Length == 0)  
  {  
    return item;  
  }  
  
  StringBuilder sb = new StringBuilder(item[0].ToString());  
  for (int i = 1; i < item.Length; i++)  
  {  
    char c = item[i];  
    if (char.IsUpper(c))  
    {  
      sb.Append(" ");  
    }  
    sb.Append(c);  
  }  
  
  return sb.ToString();  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Speech.Recognition.SubsetMatchingMode" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public GrammarBuilder (System.Speech.Recognition.GrammarBuilder builder, int minRepeat, int maxRepeat);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Speech.Recognition.GrammarBuilder builder, int32 minRepeat, int32 maxRepeat) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.#ctor(System.Speech.Recognition.GrammarBuilder,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (builder As GrammarBuilder, minRepeat As Integer, maxRepeat As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; GrammarBuilder(System::Speech::Recognition::GrammarBuilder ^ builder, int minRepeat, int maxRepeat);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="builder" Type="System.Speech.Recognition.GrammarBuilder" />
        <Parameter Name="minRepeat" Type="System.Int32" />
        <Parameter Name="maxRepeat" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="builder">
          <span data-ttu-id="51858-199">Powtórzony element.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51858-199">The repeated element.</span>
          </span>
        </param>
        <param name="minRepeat">
          <span data-ttu-id="51858-200">Minimalna liczba uruchomień wejściowych dopasowania zdefiniowany przez element <c>konstruktora</c> musi wystąpić stanowić dopasowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51858-200">The minimum number of times that input matching the element defined by <c>builder</c> must occur to constitute a match.</span>
          </span>
        </param>
        <param name="maxRepeat">
          <span data-ttu-id="51858-201">Maksymalną liczbę razy wejściowych dopasowania zdefiniowany przez element <c>konstruktora</c> może wystąpić stanowić dopasowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51858-201">The maximum number of times that input matching the element defined by <c>builder</c> can occur to constitute a match.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="51858-202">Inicjuje nowe wystąpienie klasy <see cref="T:System.Speech.Recognition.GrammarBuilder" /> klasy elementu powtarzanego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51858-202">Initializes a new instance of the <see cref="T:System.Speech.Recognition.GrammarBuilder" /> class from a repeated element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51858-203">Jeśli wartość `minRepeat` jest 0, a następnie nowe <xref:System.Speech.Recognition.GrammarBuilder> reprezentuje element opcjonalny.</span><span class="sxs-lookup"><span data-stu-id="51858-203">If the value of `minRepeat` is 0, then the new <xref:System.Speech.Recognition.GrammarBuilder> represents an optional element.</span></span>  
  
 <span data-ttu-id="51858-204">Wartość `minRepeat` musi być większa lub równa 0 i mniejsza niż wartość `maxRepeat`.</span><span class="sxs-lookup"><span data-stu-id="51858-204">The value of `minRepeat` must be greater than or equal to 0 and less than or equal to the value of `maxRepeat`.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="51858-205">Po określeniu powtarza dla <xref:System.Speech.Recognition.GrammarBuilder> obiektów, które zawierają <xref:System.Speech.Recognition.SemanticResultValue> lub <xref:System.Speech.Recognition.SemanticResultKey> wystąpienia, upewnij się, że można uniknąć tworzenia zduplikowane elementy semantycznego z tej samej nazwy klucza i wielu semantycznego elementy, które można zmodyfikować wielokrotnie <xref:System.Speech.Recognition.SemanticValue.Value%2A> właściwość <xref:System.Speech.Recognition.SemanticValue> obiektu.</span><span class="sxs-lookup"><span data-stu-id="51858-205">When you specify repeats for <xref:System.Speech.Recognition.GrammarBuilder> objects that contain <xref:System.Speech.Recognition.SemanticResultValue> or <xref:System.Speech.Recognition.SemanticResultKey> instances, make sure you avoid creating duplicate semantic elements with the same key name or multiple semantic elements that could repeatedly modify the <xref:System.Speech.Recognition.SemanticValue.Value%2A> property of a <xref:System.Speech.Recognition.SemanticValue> object.</span></span> <span data-ttu-id="51858-206">Aparat rozpoznawania mowy może zgłosić wyjątek, w przypadku wykrycia takiej sytuacji.</span><span class="sxs-lookup"><span data-stu-id="51858-206">The speech recognizer can throw an exception if it encounters these circumstances.</span></span> <span data-ttu-id="51858-207">Aby uzyskać więcej informacji o tworzeniu gramatyki rozpoznawania mowy, który zawiera informacje semantyczne, zobacz [przy użyciu SemanticResultKey i obiekty SemanticResultValue](http://msdn.microsoft.com/library/0fea1236-5261-4608-89b3-9ce9ffc22a1c).</span><span class="sxs-lookup"><span data-stu-id="51858-207">For more information about building a speech recognition grammar that contains semantic information, see [Using SemanticResultKey and SemanticResultValue Objects](http://msdn.microsoft.com/library/0fea1236-5261-4608-89b3-9ce9ffc22a1c).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="51858-208">Poniższy przykład tworzy porządkowania pizza gramatyki rozpoznawania mowy.</span><span class="sxs-lookup"><span data-stu-id="51858-208">The following example creates a speech recognition grammar for ordering a pizza.</span></span> <span data-ttu-id="51858-209">Rozpoczyna się od wyrażenie opcjonalne, otwierając przez toppings 1 do 4, a zamyka się słowem "pizza".</span><span class="sxs-lookup"><span data-stu-id="51858-209">It starts with an optional, opening phrase, followed by one to four toppings, and closes with the word "pizza".</span></span>  
  
```csharp  
  
private static Grammar CreatePizzaGrammar()  
{  
  
  // Create a Choices object from a string array of alternative toppings.  
  Choices toppings = new Choices(new string[] {  
    "cheese", "mushroom", "tomato", "onion",  
    "anchovy", "chicken", "pepperoni"});  
  
  // Create a GrammarBuilder and append the Choices object.  
  GrammarBuilder andToppings = new GrammarBuilder("and", 0, 1);  
  andToppings.Append(toppings);  
  
  // Construct the phrase.  
  GrammarBuilder gb = new GrammarBuilder("I would like a", 0, 1);  
  gb.Append(toppings);  
  gb.Append(new GrammarBuilder(andToppings, 0, 3));  
  gb.Append("pizza");  
  
  // Create the Grammar from the GrammarBuilder.  
  Grammar grammar = new Grammar(gb);  
  grammar.Name = "Pizza Order";  
  
  return grammar;  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Speech.Recognition.Choices" />
        <altmember cref="T:System.Speech.Recognition.Grammar" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public GrammarBuilder (string phrase, int minRepeat, int maxRepeat);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string phrase, int32 minRepeat, int32 maxRepeat) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.#ctor(System.String,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (phrase As String, minRepeat As Integer, maxRepeat As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; GrammarBuilder(System::String ^ phrase, int minRepeat, int maxRepeat);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="phrase" Type="System.String" />
        <Parameter Name="minRepeat" Type="System.Int32" />
        <Parameter Name="maxRepeat" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="phrase">
          <span data-ttu-id="51858-210">Powtórzony sekwencję słów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51858-210">The repeated sequence of words.</span>
          </span>
        </param>
        <param name="minRepeat">
          <span data-ttu-id="51858-211">Minimalna liczba przypadków, wprowadź wyrażenie dopasowania musi nastąpić stanowić dopasowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51858-211">The minimum number of times that input matching the phrase must occur to constitute a match.</span>
          </span>
        </param>
        <param name="maxRepeat">
          <span data-ttu-id="51858-212">Maksymalną liczbę razy wprowadź wyrażenie dopasowania może wystąpić stanowić dopasowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51858-212">The maximum number of times that input matching the phrase can occur to constitute a match.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="51858-213">Inicjuje nowe wystąpienie klasy <see cref="T:System.Speech.Recognition.GrammarBuilder" /> klasy z sekwencji wyrazów w <see cref="T:System.String" /> i określa, ile razy <see cref="T:System.String" /> można powtarzać.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51858-213">Initializes a new instance of the <see cref="T:System.Speech.Recognition.GrammarBuilder" /> class from the sequence of words in a <see cref="T:System.String" /> and specifies how many times the <see cref="T:System.String" /> can be repeated.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51858-214">Jeśli wartość `minRepeat` jest 0, a następnie nowe <xref:System.Speech.Recognition.GrammarBuilder> reprezentuje element opcjonalny.</span><span class="sxs-lookup"><span data-stu-id="51858-214">If the value of `minRepeat` is 0, then the new <xref:System.Speech.Recognition.GrammarBuilder> represents an optional element.</span></span>  
  
 <span data-ttu-id="51858-215">Wartość `minRepeat` musi być większa lub równa 0 i mniejsza niż wartość `maxRepeat`.</span><span class="sxs-lookup"><span data-stu-id="51858-215">The value of `minRepeat` must be greater than or equal to 0 and less than or equal to the value of `maxRepeat`.</span></span> <span data-ttu-id="51858-216">Aby uzyskać więcej informacji o tworzeniu gramatyki rozpoznawania mowy, która zawiera ciągi, zobacz [przy użyciu ciągów można utworzyć gramatyki GrammarBuilder](http://msdn.microsoft.com/library/0d87b445-a342-4369-9b3f-91d07fd7e114).</span><span class="sxs-lookup"><span data-stu-id="51858-216">For more information about building a speech recognition grammar that contains strings, see [Using Strings to Create a GrammarBuilder Grammar](http://msdn.microsoft.com/library/0d87b445-a342-4369-9b3f-91d07fd7e114).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="51858-217">Poniższy przykład tworzy porządkowania pizza gramatyki rozpoznawania mowy.</span><span class="sxs-lookup"><span data-stu-id="51858-217">The following example creates a speech recognition grammar for ordering a pizza.</span></span> <span data-ttu-id="51858-218">Rozpoczyna się od wyrażenie opcjonalne, otwierając przez toppings 1 do 4, a zamyka się słowem "pizza".</span><span class="sxs-lookup"><span data-stu-id="51858-218">It starts with an optional, opening phrase, followed by one to four toppings, and closes with the word "pizza".</span></span>  
  
```csharp  
  
private static Grammar CreatePizzaGrammar()  
{  
  
  // Create a Choices object with alternatives for toppings.  
  Choices toppings = new Choices(new string[] {  
    "cheese", "mushroom", "tomato", "onion",  
    "anchovy", "chicken", "pepperoni"});  
  
  // Create a GrammarBuilder and append the Choices object.  
  GrammarBuilder andToppings = new GrammarBuilder("and", 0, 1);  
  andToppings.Append(toppings);  
  
  // Construct the phrase.  
  GrammarBuilder gb = new GrammarBuilder("I would like a", 0, 1);  
  gb.Append(toppings);  
  gb.Append(new GrammarBuilder(andToppings, 0, 3));  
  gb.Append("pizza");  
  
  // Create the Grammar from the GrammarBuilder.  
  Grammar grammar = new Grammar(gb);  
  grammar.Name = "Pizza Order";  
  
  return grammar;  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Speech.Recognition.Choices" />
        <altmember cref="T:System.Speech.Recognition.Grammar" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Add">
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="51858-219">Tworzy nową <see cref="T:System.Speech.Recognition.GrammarBuilder" /> zawierającego sekwencję dwóch elementów gramatyki.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51858-219">Creates a new <see cref="T:System.Speech.Recognition.GrammarBuilder" /> that contains a sequence of two grammar elements.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51858-220">Statycznych <xref:System.Speech.Recognition.GrammarBuilder.Add%2A> metody Podaj inny mechanizm, za pomocą którego można łączyć różnych typów, aby utworzyć różnorodności i elastyczność w gramatykach skompilowanej za pomocą <xref:System.Speech.Recognition.GrammarBuilder>.</span><span class="sxs-lookup"><span data-stu-id="51858-220">The static <xref:System.Speech.Recognition.GrammarBuilder.Add%2A> methods provide another mechanism by which you can combine various types to create diversity and flexibility in grammars built with <xref:System.Speech.Recognition.GrammarBuilder>.</span></span> <span data-ttu-id="51858-221">Te metody odpowiadają statycznych <xref:System.Speech.Recognition.GrammarBuilder.op_Addition%2A> metody, które także są zdefiniowane w <xref:System.Speech.Recognition.GrammarBuilder> klasy.</span><span class="sxs-lookup"><span data-stu-id="51858-221">These methods correspond to the static <xref:System.Speech.Recognition.GrammarBuilder.op_Addition%2A> methods, which are also defined on the <xref:System.Speech.Recognition.GrammarBuilder> class.</span></span> <span data-ttu-id="51858-222">Kolejność parametrów określa kolejność elementów w nowej <xref:System.Speech.Recognition.GrammarBuilder>.</span><span class="sxs-lookup"><span data-stu-id="51858-222">The order of the parameters determines the order of the elements in the new <xref:System.Speech.Recognition.GrammarBuilder>.</span></span>  
  
 <span data-ttu-id="51858-223">A <xref:System.Speech.Recognition.GrammarBuilder> również można uzyskać z <xref:System.Speech.Recognition.Choices>, <xref:System.Speech.Recognition.SemanticResultKey>, <xref:System.Speech.Recognition.SemanticResultValue>, i [ciąg](http://go.microsoft.com/fwlink/?LinkId=159733) obiektów.</span><span class="sxs-lookup"><span data-stu-id="51858-223">A <xref:System.Speech.Recognition.GrammarBuilder> can also be obtained from <xref:System.Speech.Recognition.Choices>, <xref:System.Speech.Recognition.SemanticResultKey>, <xref:System.Speech.Recognition.SemanticResultValue>, and [String](http://go.microsoft.com/fwlink/?LinkId=159733) objects.</span></span> <span data-ttu-id="51858-224">Aby uzyskać więcej informacji, zobacz <xref:System.Speech.Recognition.GrammarBuilder.op_Implicit%2A> i <xref:System.Speech.Recognition.GrammarBuilder.op_Addition%2A> operatorów.</span><span class="sxs-lookup"><span data-stu-id="51858-224">For more information, see the <xref:System.Speech.Recognition.GrammarBuilder.op_Implicit%2A> and <xref:System.Speech.Recognition.GrammarBuilder.op_Addition%2A> operators.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="51858-225">Aparat rozpoznawania mowy może zgłosić wyjątek, używając gramatyki rozpoznawania mowy, który zawiera zduplikowane elementy semantycznego o takiej samej nazwie klucza lub wielu elementów semantyczne, które wielokrotnie można zmodyfikować wartości tego samego elementu semantycznego.</span><span class="sxs-lookup"><span data-stu-id="51858-225">The speech recognizer can throw an exception when using a speech recognition grammar that contains duplicate semantic elements with the same key name or multiple semantic elements that could repeatedly modify the value of the same semantic element.</span></span> <span data-ttu-id="51858-226">Aby uzyskać więcej informacji o tworzeniu gramatyki rozpoznawania mowy, który zawiera informacje semantyczne, zobacz [przy użyciu SemanticResultKey i obiekty SemanticResultValue](http://msdn.microsoft.com/library/0fea1236-5261-4608-89b3-9ce9ffc22a1c).</span><span class="sxs-lookup"><span data-stu-id="51858-226">For more information about building a speech recognition grammar that contains semantic information, see [Using SemanticResultKey and SemanticResultValue Objects](http://msdn.microsoft.com/library/0fea1236-5261-4608-89b3-9ce9ffc22a1c).</span></span>  
  
 <span data-ttu-id="51858-227">Aby uzyskać więcej informacji na temat tworzenia i używania gramatyki rozpoznawania mowy, zobacz [rozpoznawania mowy](http://msdn.microsoft.com/library/6a7dc524-07fc-4862-8d48-8c10dc64b919) i [tworzenie gramatyki GrammarBuilder](http://msdn.microsoft.com/library/7e2cc577-cb05-4318-9da3-7c8675d3d9ae).</span><span class="sxs-lookup"><span data-stu-id="51858-227">For more information about building and using speech recognition grammars, see [Speech Recognition](http://msdn.microsoft.com/library/6a7dc524-07fc-4862-8d48-8c10dc64b919) and [Creating GrammarBuilder Grammars](http://msdn.microsoft.com/library/7e2cc577-cb05-4318-9da3-7c8675d3d9ae).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public static System.Speech.Recognition.GrammarBuilder Add (System.Speech.Recognition.Choices choices, System.Speech.Recognition.GrammarBuilder builder);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Speech.Recognition.GrammarBuilder Add(class System.Speech.Recognition.Choices choices, class System.Speech.Recognition.GrammarBuilder builder) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.Add(System.Speech.Recognition.Choices,System.Speech.Recognition.GrammarBuilder)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Speech::Recognition::GrammarBuilder ^ Add(System::Speech::Recognition::Choices ^ choices, System::Speech::Recognition::GrammarBuilder ^ builder);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Speech.Recognition.GrammarBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="choices" Type="System.Speech.Recognition.Choices" />
        <Parameter Name="builder" Type="System.Speech.Recognition.GrammarBuilder" />
      </Parameters>
      <Docs>
        <param name="choices">
          <span data-ttu-id="51858-228">Pierwszy gramatyki element, który reprezentuje zestaw alternatyw.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51858-228">The first grammar element, which represents a set of alternatives.</span>
          </span>
        </param>
        <param name="builder">
          <span data-ttu-id="51858-229">Drugi element gramatyki.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51858-229">The second grammar element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="51858-230">Tworzy nowy <see cref="T:System.Speech.Recognition.GrammarBuilder" /> zawierający <see cref="T:System.Speech.Recognition.Choices" /> obiektu, a następnie <see cref="T:System.Speech.Recognition.GrammarBuilder" /> obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51858-230">Creates a new <see cref="T:System.Speech.Recognition.GrammarBuilder" /> that contains a <see cref="T:System.Speech.Recognition.Choices" /> object followed by a <see cref="T:System.Speech.Recognition.GrammarBuilder" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="51858-231">A <see cref="T:System.Speech.Recognition.GrammarBuilder" /> sekwencji <paramref name="choices" /> następuje element <paramref name="builder" /> elementu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51858-231">A <see cref="T:System.Speech.Recognition.GrammarBuilder" /> for the sequence of the <paramref name="choices" /> element followed by the <paramref name="builder" /> element.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51858-232"><xref:System.Speech.Recognition.GrammarBuilder> obsługuje niejawną konwersję z następujących klas:</span><span class="sxs-lookup"><span data-stu-id="51858-232"><xref:System.Speech.Recognition.GrammarBuilder> supports implicit conversions from the following classes:</span></span>  
  
-   <xref:System.Speech.Recognition.Choices>  
  
-   <xref:System.Speech.Recognition.SemanticResultKey>  
  
-   <xref:System.Speech.Recognition.SemanticResultValue>  
  
-   <xref:System.String>  
  
 <span data-ttu-id="51858-233">Ta metoda przyjmuje obiektami wymienionymi powyżej dla `builder` parametru.</span><span class="sxs-lookup"><span data-stu-id="51858-233">This method accepts the objects listed above for the `builder` parameter.</span></span>  
  
 <span data-ttu-id="51858-234">Aby uzyskać więcej informacji, zobacz <xref:System.Speech.Recognition.GrammarBuilder.op_Implicit%2A> i <xref:System.Speech.Recognition.GrammarBuilder.op_Addition%2A> operatorów.</span><span class="sxs-lookup"><span data-stu-id="51858-234">For more information, see the <xref:System.Speech.Recognition.GrammarBuilder.op_Implicit%2A> and <xref:System.Speech.Recognition.GrammarBuilder.op_Addition%2A> operators.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="51858-235">Podczas łączenia <xref:System.Speech.Recognition.Choices> i <xref:System.Speech.Recognition.GrammarBuilder> obiektów, które zawierają <xref:System.Speech.Recognition.SemanticResultValue> lub <xref:System.Speech.Recognition.SemanticResultKey> wystąpienia, upewnij się, że można uniknąć tworzenia zduplikowane elementy semantycznego z tej samej nazwy klucza i wielu semantycznego elementy, które można zmodyfikować wielokrotnie <xref:System.Speech.Recognition.SemanticValue.Value%2A> właściwość <xref:System.Speech.Recognition.SemanticValue> obiektu.</span><span class="sxs-lookup"><span data-stu-id="51858-235">When you combine <xref:System.Speech.Recognition.Choices> and <xref:System.Speech.Recognition.GrammarBuilder> objects that contain <xref:System.Speech.Recognition.SemanticResultValue> or <xref:System.Speech.Recognition.SemanticResultKey> instances, make sure you avoid creating duplicate semantic elements with the same key name or multiple semantic elements that could repeatedly modify the <xref:System.Speech.Recognition.SemanticValue.Value%2A> property of a <xref:System.Speech.Recognition.SemanticValue> object.</span></span> <span data-ttu-id="51858-236">Aparat rozpoznawania mowy może zgłosić wyjątek, w przypadku wykrycia takiej sytuacji.</span><span class="sxs-lookup"><span data-stu-id="51858-236">The speech recognizer can throw an exception if it encounters these circumstances.</span></span> <span data-ttu-id="51858-237">Aby uzyskać więcej informacji o tworzeniu gramatyki rozpoznawania mowy, który zawiera informacje semantyczne, zobacz [dodać semantyki do gramatyki GrammarBuilder](https://msdn.microsoft.com/library/hh361581.aspx).</span><span class="sxs-lookup"><span data-stu-id="51858-237">For more information about building a speech recognition grammar that contains semantic information, see [Add Semantics to a GrammarBuilder Grammar](https://msdn.microsoft.com/library/hh361581.aspx).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.Append(System.Speech.Recognition.Choices)" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.op_Implicit(System.Speech.Recognition.Choices)~System.Speech.Recognition.GrammarBuilder" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.op_Addition(System.Speech.Recognition.Choices,System.Speech.Recognition.GrammarBuilder)" />
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public static System.Speech.Recognition.GrammarBuilder Add (System.Speech.Recognition.GrammarBuilder builder, System.Speech.Recognition.Choices choices);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Speech.Recognition.GrammarBuilder Add(class System.Speech.Recognition.GrammarBuilder builder, class System.Speech.Recognition.Choices choices) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.Add(System.Speech.Recognition.GrammarBuilder,System.Speech.Recognition.Choices)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Speech::Recognition::GrammarBuilder ^ Add(System::Speech::Recognition::GrammarBuilder ^ builder, System::Speech::Recognition::Choices ^ choices);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Speech.Recognition.GrammarBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="builder" Type="System.Speech.Recognition.GrammarBuilder" />
        <Parameter Name="choices" Type="System.Speech.Recognition.Choices" />
      </Parameters>
      <Docs>
        <param name="builder">
          <span data-ttu-id="51858-238">Pierwszy element gramatyki.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51858-238">The first grammar element.</span>
          </span>
        </param>
        <param name="choices">
          <span data-ttu-id="51858-239">Drugi gramatyki element, który reprezentuje zestaw alternatyw.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51858-239">The second grammar element, which represents a set of alternatives.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="51858-240">Tworzy nowy <see cref="T:System.Speech.Recognition.GrammarBuilder" /> zawierający <see cref="T:System.Speech.Recognition.GrammarBuilder" /> obiektu, a następnie <see cref="T:System.Speech.Recognition.Choices" /> obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51858-240">Creates a new <see cref="T:System.Speech.Recognition.GrammarBuilder" /> that contains a <see cref="T:System.Speech.Recognition.GrammarBuilder" /> object followed by a <see cref="T:System.Speech.Recognition.Choices" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="51858-241">A <see cref="T:System.Speech.Recognition.GrammarBuilder" /> sekwencji <paramref name="builder" /> następuje element <paramref name="choices" /> elementu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51858-241">A <see cref="T:System.Speech.Recognition.GrammarBuilder" /> for the sequence of the <paramref name="builder" /> element followed by the <paramref name="choices" /> element.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51858-242"><xref:System.Speech.Recognition.GrammarBuilder> obsługuje niejawną konwersję z następujących klas:</span><span class="sxs-lookup"><span data-stu-id="51858-242"><xref:System.Speech.Recognition.GrammarBuilder> supports implicit conversions from the following classes:</span></span>  
  
-   <xref:System.Speech.Recognition.Choices>  
  
-   <xref:System.Speech.Recognition.SemanticResultKey>  
  
-   <xref:System.Speech.Recognition.SemanticResultValue>  
  
-   <xref:System.String>  
  
 <span data-ttu-id="51858-243">Ta metoda przyjmuje obiektami wymienionymi powyżej dla `builder` parametru.</span><span class="sxs-lookup"><span data-stu-id="51858-243">This method accepts the objects listed above for the `builder` parameter.</span></span>  
  
 <span data-ttu-id="51858-244">Aby uzyskać więcej informacji, zobacz <xref:System.Speech.Recognition.GrammarBuilder.op_Implicit%2A> i <xref:System.Speech.Recognition.GrammarBuilder.op_Addition%2A> operatorów.</span><span class="sxs-lookup"><span data-stu-id="51858-244">For more information, see the <xref:System.Speech.Recognition.GrammarBuilder.op_Implicit%2A> and <xref:System.Speech.Recognition.GrammarBuilder.op_Addition%2A> operators.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="51858-245">Podczas łączenia <xref:System.Speech.Recognition.Choices> i <xref:System.Speech.Recognition.GrammarBuilder> obiektów, które zawierają <xref:System.Speech.Recognition.SemanticResultValue> lub <xref:System.Speech.Recognition.SemanticResultKey> wystąpienia z innymi elementami gramatyki, upewnij się, że można uniknąć tworzenia zduplikowane elementy semantycznego o takiej samej nazwie klucza lub wiele elementów semantycznych można zmodyfikować wielokrotnie <xref:System.Speech.Recognition.SemanticValue.Value%2A> właściwość <xref:System.Speech.Recognition.SemanticValue> obiektu.</span><span class="sxs-lookup"><span data-stu-id="51858-245">When you combine <xref:System.Speech.Recognition.Choices> and <xref:System.Speech.Recognition.GrammarBuilder> objects that contain <xref:System.Speech.Recognition.SemanticResultValue> or <xref:System.Speech.Recognition.SemanticResultKey> instances with other grammar elements, make sure you avoid creating duplicate semantic elements with the same key name or multiple semantic elements that could repeatedly modify the <xref:System.Speech.Recognition.SemanticValue.Value%2A> property of a <xref:System.Speech.Recognition.SemanticValue> object.</span></span> <span data-ttu-id="51858-246">Aparat rozpoznawania mowy może zgłosić wyjątek, w przypadku wykrycia takiej sytuacji.</span><span class="sxs-lookup"><span data-stu-id="51858-246">The speech recognizer can throw an exception if it encounters these circumstances.</span></span> <span data-ttu-id="51858-247">Aby uzyskać więcej informacji o tworzeniu gramatyki rozpoznawania mowy, który zawiera informacje semantyczne, zobacz [przy użyciu SemanticResultKey i obiekty SemanticResultValue](http://msdn.microsoft.com/library/0fea1236-5261-4608-89b3-9ce9ffc22a1c).</span><span class="sxs-lookup"><span data-stu-id="51858-247">For more information about building a speech recognition grammar that contains semantic information, see [Using SemanticResultKey and SemanticResultValue Objects](http://msdn.microsoft.com/library/0fea1236-5261-4608-89b3-9ce9ffc22a1c).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="51858-248">Poniższy przykład tworzy gramatyki rozpoznawania mowy, która może rozpoznać dwóch wyrażeń, "tło *kolor*" i "ustawioną tła *kolor*", gdzie *kolor* Wybrano zestaw kolorów.</span><span class="sxs-lookup"><span data-stu-id="51858-248">The following example creates a speech recognition grammar that can recognize the two phrases, "Make background *color*" and "Set background to *color*", where *color* is selected from a set of colors.</span></span> <span data-ttu-id="51858-249">Różne typy są używane do tworzenia końcowego gramatyki, takich jak [ciąg](http://go.microsoft.com/fwlink/?LinkId=159733), <xref:System.Speech.Recognition.Choices>, i <xref:System.Speech.Recognition.GrammarBuilder> obiektów.</span><span class="sxs-lookup"><span data-stu-id="51858-249">Various types are used to build the final grammar, such as [String](http://go.microsoft.com/fwlink/?LinkId=159733), <xref:System.Speech.Recognition.Choices>, and <xref:System.Speech.Recognition.GrammarBuilder> objects.</span></span> <span data-ttu-id="51858-250">Operatory rzutowania jawnego w wywołaniach <xref:System.Speech.Recognition.GrammarBuilder.Add%2A> metody są opcjonalne.</span><span class="sxs-lookup"><span data-stu-id="51858-250">The explicit cast operators in the calls to the <xref:System.Speech.Recognition.GrammarBuilder.Add%2A> methods are optional.</span></span>  
  
```csharp  
  
private Grammar CreateColorGrammar()  
{  
  
  // Create a set of color choices.  
  Choices colorChoice = new Choices(new string[] {"red", "green", "blue"});  
  
  // Create grammar builders for the two versions of the phrase.  
  GrammarBuilder makePhrase =  
    GrammarBuilder.Add((GrammarBuilder)"Make background", colorChoice);  
  GrammarBuilder setPhrase =  
    GrammarBuilder.Add("Set background to", (GrammarBuilder)colorChoice);  
  
  // Create a Choices for the two alternative phrases, convert the Choices  
  // to a GrammarBuilder, and construct the grammar from the result.  
  Choices bothChoices = new Choices(new GrammarBuilder[] {makePhrase, setPhrase});  
  GrammarBuilder bothPhrases = new GrammarBuilder(bothChoices);  
  
  Grammar grammar = new Grammar(bothPhrases);  
  grammar.Name = "backgroundColor";  
  return grammar;  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.Append(System.Speech.Recognition.Choices)" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.op_Implicit(System.Speech.Recognition.Choices)~System.Speech.Recognition.GrammarBuilder" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.op_Addition(System.Speech.Recognition.Choices,System.Speech.Recognition.GrammarBuilder)" />
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public static System.Speech.Recognition.GrammarBuilder Add (System.Speech.Recognition.GrammarBuilder builder1, System.Speech.Recognition.GrammarBuilder builder2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Speech.Recognition.GrammarBuilder Add(class System.Speech.Recognition.GrammarBuilder builder1, class System.Speech.Recognition.GrammarBuilder builder2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.Add(System.Speech.Recognition.GrammarBuilder,System.Speech.Recognition.GrammarBuilder)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Add (builder1 As GrammarBuilder, builder2 As GrammarBuilder) As GrammarBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Speech::Recognition::GrammarBuilder ^ Add(System::Speech::Recognition::GrammarBuilder ^ builder1, System::Speech::Recognition::GrammarBuilder ^ builder2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Speech.Recognition.GrammarBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="builder1" Type="System.Speech.Recognition.GrammarBuilder" />
        <Parameter Name="builder2" Type="System.Speech.Recognition.GrammarBuilder" />
      </Parameters>
      <Docs>
        <param name="builder1">
          <span data-ttu-id="51858-251">Pierwszy element gramatyki.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51858-251">The first grammar element.</span>
          </span>
        </param>
        <param name="builder2">
          <span data-ttu-id="51858-252">Drugi element gramatyki.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51858-252">The second grammar element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="51858-253">Tworzy nowy <see cref="T:System.Speech.Recognition.GrammarBuilder" /> zawierającego sekwencję dwóch <see cref="T:System.Speech.Recognition.GrammarBuilder" /> obiektów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51858-253">Creates a new <see cref="T:System.Speech.Recognition.GrammarBuilder" /> that contains a sequence of two <see cref="T:System.Speech.Recognition.GrammarBuilder" /> objects.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="51858-254">A <see cref="T:System.Speech.Recognition.GrammarBuilder" /> sekwencji <paramref name="builder1" /> następuje element <paramref name="builder2" /> elementu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51858-254">A <see cref="T:System.Speech.Recognition.GrammarBuilder" /> for the sequence of the <paramref name="builder1" /> element followed by the <paramref name="builder2" /> element.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51858-255"><xref:System.Speech.Recognition.GrammarBuilder> obsługuje niejawną konwersję z następujących klas:</span><span class="sxs-lookup"><span data-stu-id="51858-255"><xref:System.Speech.Recognition.GrammarBuilder> supports implicit conversions from the following classes:</span></span>  
  
-   <xref:System.Speech.Recognition.Choices>  
  
-   <xref:System.Speech.Recognition.SemanticResultKey>  
  
-   <xref:System.Speech.Recognition.SemanticResultValue>  
  
-   <xref:System.String>  
  
 <span data-ttu-id="51858-256">Ta metoda przyjmuje obiektami wymienionymi powyżej dla `builder1` lub `builder2` parametru.</span><span class="sxs-lookup"><span data-stu-id="51858-256">This method accepts the objects listed above for the `builder1` or `builder2` parameter.</span></span>  
  
 <span data-ttu-id="51858-257">Aby uzyskać więcej informacji, zobacz <xref:System.Speech.Recognition.GrammarBuilder.op_Implicit%2A> i <xref:System.Speech.Recognition.GrammarBuilder.op_Addition%2A> operatorów.</span><span class="sxs-lookup"><span data-stu-id="51858-257">For more information, see the <xref:System.Speech.Recognition.GrammarBuilder.op_Implicit%2A> and <xref:System.Speech.Recognition.GrammarBuilder.op_Addition%2A> operators.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="51858-258">Podczas łączenia <xref:System.Speech.Recognition.Choices> i <xref:System.Speech.Recognition.GrammarBuilder> obiektów, które zawierają <xref:System.Speech.Recognition.SemanticResultValue> lub <xref:System.Speech.Recognition.SemanticResultKey> wystąpienia z innymi elementami gramatyki, upewnij się, że można uniknąć tworzenia zduplikowane elementy semantycznego o takiej samej nazwie klucza lub wiele elementów semantycznych można zmodyfikować wielokrotnie <xref:System.Speech.Recognition.SemanticValue.Value%2A> właściwość <xref:System.Speech.Recognition.SemanticValue> obiektu.</span><span class="sxs-lookup"><span data-stu-id="51858-258">When you combine <xref:System.Speech.Recognition.Choices> and <xref:System.Speech.Recognition.GrammarBuilder> objects that contain <xref:System.Speech.Recognition.SemanticResultValue> or <xref:System.Speech.Recognition.SemanticResultKey> instances with other grammar elements, make sure you avoid creating duplicate semantic elements with the same key name or multiple semantic elements that could repeatedly modify the <xref:System.Speech.Recognition.SemanticValue.Value%2A> property of a <xref:System.Speech.Recognition.SemanticValue> object.</span></span> <span data-ttu-id="51858-259">Aparat rozpoznawania mowy może zgłosić wyjątek, w przypadku wykrycia takiej sytuacji.</span><span class="sxs-lookup"><span data-stu-id="51858-259">The speech recognizer can throw an exception if it encounters these circumstances.</span></span> <span data-ttu-id="51858-260">Aby uzyskać więcej informacji o tworzeniu gramatyki rozpoznawania mowy, który zawiera informacje semantyczne, zobacz [przy użyciu SemanticResultKey i obiekty SemanticResultValue](http://msdn.microsoft.com/library/0fea1236-5261-4608-89b3-9ce9ffc22a1c).</span><span class="sxs-lookup"><span data-stu-id="51858-260">For more information about building a speech recognition grammar that contains semantic information, see [Using SemanticResultKey and SemanticResultValue Objects](http://msdn.microsoft.com/library/0fea1236-5261-4608-89b3-9ce9ffc22a1c).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="51858-261">Poniższy przykład tworzy gramatyki rozpoznawania mowy, która może rozpoznać dwóch wyrażeń, "tło *kolor*" i "ustawioną tła *kolor*", gdzie *kolor* Wybrano zestaw kolorów.</span><span class="sxs-lookup"><span data-stu-id="51858-261">The following example creates a speech recognition grammar that can recognize the two phrases, "Make background *color*" and "Set background to *color*", where *color* is selected from a set of colors.</span></span> <span data-ttu-id="51858-262">Różne typy są używane do tworzenia końcowego gramatyki, takich jak [ciąg](http://go.microsoft.com/fwlink/?LinkId=159733), <xref:System.Speech.Recognition.Choices>, i <xref:System.Speech.Recognition.GrammarBuilder> obiektów.</span><span class="sxs-lookup"><span data-stu-id="51858-262">Various types are used to build the final grammar, such as [String](http://go.microsoft.com/fwlink/?LinkId=159733), <xref:System.Speech.Recognition.Choices>, and <xref:System.Speech.Recognition.GrammarBuilder> objects.</span></span> <span data-ttu-id="51858-263">Operatory rzutowania jawnego w wywołaniach <xref:System.Speech.Recognition.GrammarBuilder.Add%2A> metody są opcjonalne.</span><span class="sxs-lookup"><span data-stu-id="51858-263">The explicit cast operators in the calls to the <xref:System.Speech.Recognition.GrammarBuilder.Add%2A> methods are optional.</span></span>  
  
```csharp  
  
private Grammar CreateColorGrammar()  
{  
  
  // Create a set of color choices.  
  Choices colorChoice = new Choices(new string[] {"red", "green", "blue"});  
  
  // Create grammar builders for the two versions of the phrase.  
  GrammarBuilder makePhrase =  
    GrammarBuilder.Add((GrammarBuilder)"Make background", colorChoice);  
  GrammarBuilder setPhrase =  
    GrammarBuilder.Add("Set background to", (GrammarBuilder)colorChoice);  
  
  // Create a Choices for the two alternative phrases, convert the Choices  
  // to a GrammarBuilder, and construct the grammar from the result.  
  Choices bothChoices = new Choices(new GrammarBuilder[] {makePhrase, setPhrase});  
  GrammarBuilder bothPhrases = new GrammarBuilder(bothChoices);  
  
  Grammar grammar = new Grammar(bothPhrases);  
  grammar.Name = "backgroundColor";  
  return grammar;  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.Append(System.Speech.Recognition.Choices)" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.op_Implicit(System.Speech.Recognition.Choices)~System.Speech.Recognition.GrammarBuilder" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.op_Addition(System.Speech.Recognition.Choices,System.Speech.Recognition.GrammarBuilder)" />
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public static System.Speech.Recognition.GrammarBuilder Add (System.Speech.Recognition.GrammarBuilder builder, string phrase);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Speech.Recognition.GrammarBuilder Add(class System.Speech.Recognition.GrammarBuilder builder, string phrase) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.Add(System.Speech.Recognition.GrammarBuilder,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Add (builder As GrammarBuilder, phrase As String) As GrammarBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Speech::Recognition::GrammarBuilder ^ Add(System::Speech::Recognition::GrammarBuilder ^ builder, System::String ^ phrase);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Speech.Recognition.GrammarBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="builder" Type="System.Speech.Recognition.GrammarBuilder" />
        <Parameter Name="phrase" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="builder">
          <span data-ttu-id="51858-264">Pierwszy element gramatyki.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51858-264">The first grammar element.</span>
          </span>
        </param>
        <param name="phrase">
          <span data-ttu-id="51858-265">Drugi gramatyki element, który reprezentuje sekwencję słów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51858-265">The second grammar element, which represents a sequence of words.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="51858-266">Tworzy nowy <see cref="T:System.Speech.Recognition.GrammarBuilder" /> zawierający <see cref="T:System.Speech.Recognition.GrammarBuilder" /> następuje wyrażenie obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51858-266">Creates a new <see cref="T:System.Speech.Recognition.GrammarBuilder" /> that contains a <see cref="T:System.Speech.Recognition.GrammarBuilder" /> object followed by a phrase.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="51858-267">A <see cref="T:System.Speech.Recognition.GrammarBuilder" /> sekwencji <paramref name="builder" /> następuje element <paramref name="phrase" /> elementu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51858-267">A <see cref="T:System.Speech.Recognition.GrammarBuilder" /> for the sequence of the <paramref name="builder" /> element followed by the <paramref name="phrase" /> element.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51858-268"><xref:System.Speech.Recognition.GrammarBuilder> obsługuje niejawną konwersję z następujących klas:</span><span class="sxs-lookup"><span data-stu-id="51858-268"><xref:System.Speech.Recognition.GrammarBuilder> supports implicit conversions from the following classes:</span></span>  
  
-   <xref:System.Speech.Recognition.Choices>  
  
-   <xref:System.Speech.Recognition.SemanticResultKey>  
  
-   <xref:System.Speech.Recognition.SemanticResultValue>  
  
-   <xref:System.String>  
  
 <span data-ttu-id="51858-269">Ta metoda przyjmuje obiektami wymienionymi powyżej dla `builder` parametru.</span><span class="sxs-lookup"><span data-stu-id="51858-269">This method accepts the objects listed above for the `builder` parameter.</span></span>  
  
 <span data-ttu-id="51858-270">Aby uzyskać więcej informacji, zobacz <xref:System.Speech.Recognition.GrammarBuilder.op_Implicit%2A> i <xref:System.Speech.Recognition.GrammarBuilder.op_Addition%2A> operatorów.</span><span class="sxs-lookup"><span data-stu-id="51858-270">For more information, see the <xref:System.Speech.Recognition.GrammarBuilder.op_Implicit%2A> and <xref:System.Speech.Recognition.GrammarBuilder.op_Addition%2A> operators.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="51858-271">Poniższy przykład tworzy gramatyki rozpoznawania mowy, która może rozpoznać dwóch wyrażeń, "tło *kolor*" i "ustawioną tła *kolor*", gdzie *kolor* Wybrano zestaw kolorów.</span><span class="sxs-lookup"><span data-stu-id="51858-271">The following example creates a speech recognition grammar that can recognize the two phrases, "Make background *color*" and "Set background to *color*", where *color* is selected from a set of colors.</span></span> <span data-ttu-id="51858-272">Różne typy są używane do tworzenia końcowego gramatyki, takich jak [ciąg](http://go.microsoft.com/fwlink/?LinkId=159733), <xref:System.Speech.Recognition.Choices>, i <xref:System.Speech.Recognition.GrammarBuilder> obiektów.</span><span class="sxs-lookup"><span data-stu-id="51858-272">Various types are used to build the final grammar, such as [String](http://go.microsoft.com/fwlink/?LinkId=159733), <xref:System.Speech.Recognition.Choices>, and <xref:System.Speech.Recognition.GrammarBuilder> objects.</span></span> <span data-ttu-id="51858-273">Operatory rzutowania jawnego w wywołaniach <xref:System.Speech.Recognition.GrammarBuilder.Add%2A> metody są opcjonalne.</span><span class="sxs-lookup"><span data-stu-id="51858-273">The explicit cast operators in the calls to the <xref:System.Speech.Recognition.GrammarBuilder.Add%2A> methods are optional.</span></span>  
  
```csharp  
  
private Grammar CreateColorGrammar()  
{  
  
  // Create a set of color choices.  
  Choices colorChoice = new Choices(new string[] {"red", "green", "blue"});  
  
  // Create grammar builders for the two versions of the phrase.  
  GrammarBuilder makePhrase =  
    GrammarBuilder.Add((GrammarBuilder)"Make background", colorChoice);  
  GrammarBuilder setPhrase =  
    GrammarBuilder.Add("Set background to", (GrammarBuilder)colorChoice);  
  
  // Create a Choices for the two alternative phrases, convert the Choices  
  // to a GrammarBuilder, and construct the grammar from the result.  
  Choices bothChoices = new Choices(new GrammarBuilder[] {makePhrase, setPhrase});  
  GrammarBuilder bothPhrases = new GrammarBuilder(bothChoices);  
  
  Grammar grammar = new Grammar(bothPhrases);  
  grammar.Name = "backgroundColor";  
  return grammar;  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.Append(System.Speech.Recognition.Choices)" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.op_Implicit(System.Speech.Recognition.Choices)~System.Speech.Recognition.GrammarBuilder" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.op_Addition(System.Speech.Recognition.Choices,System.Speech.Recognition.GrammarBuilder)" />
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public static System.Speech.Recognition.GrammarBuilder Add (string phrase, System.Speech.Recognition.GrammarBuilder builder);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Speech.Recognition.GrammarBuilder Add(string phrase, class System.Speech.Recognition.GrammarBuilder builder) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.Add(System.String,System.Speech.Recognition.GrammarBuilder)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Add (phrase As String, builder As GrammarBuilder) As GrammarBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Speech::Recognition::GrammarBuilder ^ Add(System::String ^ phrase, System::Speech::Recognition::GrammarBuilder ^ builder);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Speech.Recognition.GrammarBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="phrase" Type="System.String" />
        <Parameter Name="builder" Type="System.Speech.Recognition.GrammarBuilder" />
      </Parameters>
      <Docs>
        <param name="phrase">
          <span data-ttu-id="51858-274">Pierwszy gramatyki element, który reprezentuje sekwencję słów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51858-274">The first grammar element, which represents a sequence of words.</span>
          </span>
        </param>
        <param name="builder">
          <span data-ttu-id="51858-275">Drugi element gramatyki.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51858-275">The second grammar element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="51858-276">Tworzy nowy <see cref="T:System.Speech.Recognition.GrammarBuilder" /> zawierający frazę następują <see cref="T:System.Speech.Recognition.GrammarBuilder" /> obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51858-276">Creates a new <see cref="T:System.Speech.Recognition.GrammarBuilder" /> that contains a phrase followed by a <see cref="T:System.Speech.Recognition.GrammarBuilder" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="51858-277">A <see cref="T:System.Speech.Recognition.GrammarBuilder" /> sekwencji <paramref name="phrase" /> następuje element <paramref name="builder" /> elementu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51858-277">A <see cref="T:System.Speech.Recognition.GrammarBuilder" /> for the sequence of the <paramref name="phrase" /> element followed by the <paramref name="builder" /> element.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51858-278"><xref:System.Speech.Recognition.GrammarBuilder> obsługuje niejawną konwersję z następujących klas:</span><span class="sxs-lookup"><span data-stu-id="51858-278"><xref:System.Speech.Recognition.GrammarBuilder> supports implicit conversions from the following classes:</span></span>  
  
-   <xref:System.Speech.Recognition.Choices>  
  
-   <xref:System.Speech.Recognition.SemanticResultKey>  
  
-   <xref:System.Speech.Recognition.SemanticResultValue>  
  
-   <xref:System.String>  
  
 <span data-ttu-id="51858-279">Ta metoda przyjmuje obiektami wymienionymi powyżej dla `builder` parametru.</span><span class="sxs-lookup"><span data-stu-id="51858-279">This method accepts the objects listed above for the `builder` parameter.</span></span>  
  
 <span data-ttu-id="51858-280">Aby uzyskać więcej informacji, zobacz <xref:System.Speech.Recognition.GrammarBuilder.op_Implicit%2A> i <xref:System.Speech.Recognition.GrammarBuilder.op_Addition%2A> operatorów.</span><span class="sxs-lookup"><span data-stu-id="51858-280">For more information, see the <xref:System.Speech.Recognition.GrammarBuilder.op_Implicit%2A> and <xref:System.Speech.Recognition.GrammarBuilder.op_Addition%2A> operators.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="51858-281">Poniższy przykład tworzy gramatyki rozpoznawania mowy, która może rozpoznać dwóch wyrażeń, "tło *kolor*" i "ustawioną tła *kolor*", gdzie *kolor* Wybrano zestaw kolorów.</span><span class="sxs-lookup"><span data-stu-id="51858-281">The following example creates a speech recognition grammar that can recognize the two phrases, "Make background *color*" and "Set background to *color*", where *color* is selected from a set of colors.</span></span> <span data-ttu-id="51858-282">Różne typy są używane do tworzenia końcowego gramatyki, takich jak [ciąg](http://go.microsoft.com/fwlink/?LinkId=159733), <xref:System.Speech.Recognition.Choices>, i <xref:System.Speech.Recognition.GrammarBuilder> obiektów.</span><span class="sxs-lookup"><span data-stu-id="51858-282">Various types are used to build the final grammar, such as [String](http://go.microsoft.com/fwlink/?LinkId=159733), <xref:System.Speech.Recognition.Choices>, and <xref:System.Speech.Recognition.GrammarBuilder> objects.</span></span> <span data-ttu-id="51858-283">Operatory rzutowania jawnego w wywołaniach <xref:System.Speech.Recognition.GrammarBuilder.Add%2A> metody są opcjonalne.</span><span class="sxs-lookup"><span data-stu-id="51858-283">The explicit cast operators in the calls to the <xref:System.Speech.Recognition.GrammarBuilder.Add%2A> methods are optional.</span></span>  
  
```csharp  
  
private Grammar CreateColorGrammar()  
{  
  
  // Create a set of color choices.  
  Choices colorChoice = new Choices(new string[] {"red", "green", "blue"});  
  
  // Create grammar builders for the two versions of the phrase.  
  GrammarBuilder makePhrase =  
    GrammarBuilder.Add((GrammarBuilder)"Make background", colorChoice);  
  GrammarBuilder setPhrase =  
    GrammarBuilder.Add("Set background to", (GrammarBuilder)colorChoice);  
  
  // Create a Choices for the two alternative phrases, convert the Choices  
  // to a GrammarBuilder, and construct the grammar from the result.  
  Choices bothChoices = new Choices(new GrammarBuilder[] {makePhrase, setPhrase});  
  GrammarBuilder bothPhrases = new GrammarBuilder(bothChoices);  
  
  Grammar grammar = new Grammar(bothPhrases);  
  grammar.Name = "backgroundColor";  
  return grammar;  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.Append(System.Speech.Recognition.Choices)" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.op_Implicit(System.Speech.Recognition.Choices)~System.Speech.Recognition.GrammarBuilder" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.op_Addition(System.Speech.Recognition.Choices,System.Speech.Recognition.GrammarBuilder)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Append">
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="51858-284">Dołącza element gramatyki do bieżącej sekwencji elementów gramatyki.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51858-284">Appends a grammar element to the current sequence of grammar elements.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51858-285">Użyj tych metod do dołączenia elementy gramatyki do istniejącej <xref:System.Speech.Recognition.GrammarBuilder>.</span><span class="sxs-lookup"><span data-stu-id="51858-285">Use these methods to append grammar elements to an existing <xref:System.Speech.Recognition.GrammarBuilder>.</span></span> <span data-ttu-id="51858-286">Jak utworzyć elementy gramatyki, można je dołączyć do istniejącego konstruktora stopniowo tworzenia ograniczenia dla gramatyki rozpoznawania mowy.</span><span class="sxs-lookup"><span data-stu-id="51858-286">As you create grammar elements, you can append them to the existing builder to progressively develop the constraints for a speech recognition grammar.</span></span> <span data-ttu-id="51858-287">Każdy element jest dodawany do końca bieżącego sekwencji elementów.</span><span class="sxs-lookup"><span data-stu-id="51858-287">Each element is added to the end of the current sequence of elements.</span></span>  
  
 <span data-ttu-id="51858-288">Ta metoda ma przeciążeń dołączania <xref:System.Speech.Recognition.GrammarBuilder>, <xref:System.String>, <xref:System.Speech.Recognition.Choices>, <xref:System.Speech.Recognition.SemanticResultKey>, i <xref:System.Speech.Recognition.SemanticResultValue> obiektów.</span><span class="sxs-lookup"><span data-stu-id="51858-288">This method has overloads for appending <xref:System.Speech.Recognition.GrammarBuilder>, <xref:System.String>, <xref:System.Speech.Recognition.Choices>, <xref:System.Speech.Recognition.SemanticResultKey>, and <xref:System.Speech.Recognition.SemanticResultValue> objects.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="51858-289">Aparat rozpoznawania mowy może zgłosić wyjątek, używając gramatyki rozpoznawania mowy, który zawiera zduplikowane elementy semantycznego o takiej samej nazwie klucza lub wielu elementów semantyczne, które wielokrotnie można zmodyfikować wartości tego samego elementu semantycznego.</span><span class="sxs-lookup"><span data-stu-id="51858-289">The speech recognizer can throw an exception when using a speech recognition grammar that contains duplicate semantic elements with the same key name or multiple semantic elements that could repeatedly modify the value of the same semantic element.</span></span> <span data-ttu-id="51858-290">Aby uzyskać więcej informacji o tworzeniu gramatyki rozpoznawania mowy, który zawiera informacje semantyczne, zobacz [przy użyciu SemanticResultKey i obiekty SemanticResultValue](http://msdn.microsoft.com/library/0fea1236-5261-4608-89b3-9ce9ffc22a1c).</span><span class="sxs-lookup"><span data-stu-id="51858-290">For more information about building a speech recognition grammar that contains semantic information, see [Using SemanticResultKey and SemanticResultValue Objects](http://msdn.microsoft.com/library/0fea1236-5261-4608-89b3-9ce9ffc22a1c).</span></span>  
  
 <span data-ttu-id="51858-291">Aby uzyskać więcej informacji na temat tworzenia i używania gramatyki rozpoznawania mowy, zobacz [rozpoznawania mowy](http://msdn.microsoft.com/library/6a7dc524-07fc-4862-8d48-8c10dc64b919) i [tworzenie gramatyki GrammarBuilder](http://msdn.microsoft.com/library/7e2cc577-cb05-4318-9da3-7c8675d3d9ae).</span><span class="sxs-lookup"><span data-stu-id="51858-291">For more information about building and using speech recognition grammars, see [Speech Recognition](http://msdn.microsoft.com/library/6a7dc524-07fc-4862-8d48-8c10dc64b919) and [Creating GrammarBuilder Grammars](http://msdn.microsoft.com/library/7e2cc577-cb05-4318-9da3-7c8675d3d9ae).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Append">
      <MemberSignature Language="C#" Value="public void Append (System.Speech.Recognition.Choices alternateChoices);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Append(class System.Speech.Recognition.Choices alternateChoices) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.Append(System.Speech.Recognition.Choices)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Append (alternateChoices As Choices)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Append(System::Speech::Recognition::Choices ^ alternateChoices);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="alternateChoices" Type="System.Speech.Recognition.Choices" />
      </Parameters>
      <Docs>
        <param name="alternateChoices">
          <span data-ttu-id="51858-292">Zestaw alternatyw do dołączenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51858-292">The set of alternatives to append.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="51858-293">Dołącza zestaw alternatywy dla bieżącej sekwencji elementów gramatyki.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51858-293">Appends a set of alternatives to the current sequence of grammar elements.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51858-294">`alternateChoices` jest dodawany do końca bieżącego sekwencji elementów.</span><span class="sxs-lookup"><span data-stu-id="51858-294">`alternateChoices` is added to the end of the current sequence of elements.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="51858-295">Po dołączeniu <xref:System.Speech.Recognition.Choices> obiektów, które zawierają <xref:System.Speech.Recognition.SemanticResultValue> lub <xref:System.Speech.Recognition.SemanticResultKey> wystąpień do <xref:System.Speech.Recognition.GrammarBuilder> obiektów, upewnij się, że można uniknąć tworzenia zduplikowane elementy semantycznego o takiej samej nazwie klucza lub wiele elementów semantyczne, które można wielokrotnie modyfikowanie <xref:System.Speech.Recognition.SemanticValue.Value%2A> właściwość <xref:System.Speech.Recognition.SemanticValue> obiektu.</span><span class="sxs-lookup"><span data-stu-id="51858-295">When you append <xref:System.Speech.Recognition.Choices> objects that contain <xref:System.Speech.Recognition.SemanticResultValue> or <xref:System.Speech.Recognition.SemanticResultKey> instances to a <xref:System.Speech.Recognition.GrammarBuilder> object, make sure you avoid creating duplicate semantic elements with the same key name or multiple semantic elements that could repeatedly modify the <xref:System.Speech.Recognition.SemanticValue.Value%2A> property of a <xref:System.Speech.Recognition.SemanticValue> object.</span></span> <span data-ttu-id="51858-296">Aparat rozpoznawania mowy może zgłosić wyjątek, w przypadku wykrycia takiej sytuacji.</span><span class="sxs-lookup"><span data-stu-id="51858-296">The speech recognizer can throw an exception if it encounters these circumstances.</span></span> <span data-ttu-id="51858-297">Aby uzyskać więcej informacji o tworzeniu gramatyki rozpoznawania mowy, który zawiera informacje semantyczne, zobacz [SemanticResultValue zrozumienia i obiekty SemanticResultKey](http://msdn.microsoft.com/library/0fea1236-5261-4608-89b3-9ce9ffc22a1c).</span><span class="sxs-lookup"><span data-stu-id="51858-297">For more information about building a speech recognition grammar that contains semantic information, see [Understanding SemanticResultValue and SemanticResultKey Objects](http://msdn.microsoft.com/library/0fea1236-5261-4608-89b3-9ce9ffc22a1c).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="51858-298">Poniższy przykład tworzy gramatyki rozpoznawania mowy zwrotów, takie jak "Kuba wywołanie w miejscu pracy" i "Anna wywołania na jego telefon komórkowy", gdzie jest opcjonalne słowo "phone".</span><span class="sxs-lookup"><span data-stu-id="51858-298">The following example creates a speech recognition grammar for phrases such as "Call James at work" and "Call Anne on her cell phone", where the word "phone" is optional.</span></span> <span data-ttu-id="51858-299">Przykład prezentuje użycie <xref:System.Speech.Recognition.GrammarBuilder.Append%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="51858-299">The example highlights the use of the <xref:System.Speech.Recognition.GrammarBuilder.Append%2A> method.</span></span>  
  
```csharp  
  
public static Grammar CreatePhonePhrase()  
{  
  // Create alternatives for person names, locations, devices, and pronouns.  
  Choices personChoice = new Choices(new string[] {"Anne", "James", "Mary", "Sam"});  
  Choices locationChoice = new Choices(new string[] {"home", "work"});  
  Choices deviceChoice = new Choices(new string[] {"home", "work", "cell"});  
  Choices pronounChoice = new Choices(new string[] {"his", "her"});  
  
  // Create a phrase for the receiving device, which optionally contains the word "phone".  
  GrammarBuilder devicePhrase = new GrammarBuilder(pronounChoice);  
  devicePhrase.Append(deviceChoice);  
  devicePhrase.Append("phone", 0, 1);  
  
  // Create alternatives for phrases specifying a device or a location.  
  GrammarBuilder atLocation = new GrammarBuilder("at");  
  atLocation.Append(locationChoice);  
  
  GrammarBuilder onDevice = new GrammarBuilder("on");  
  onDevice.Append(devicePhrase);  
  
  Choices howChoice = new Choices(new GrammarBuilder[] {atLocation, onDevice});  
  
  // Build the final phrase.  
  GrammarBuilder callWho = new GrammarBuilder("Call");  
  callWho.Append(personChoice);  
  callWho.Append(howChoice);  
  
  // Create the Grammar object.  
  Grammar callGrammar = new Grammar(callWho);  
  callGrammar.Name = "Call Grammar";  
  
  return callGrammar;  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Append">
      <MemberSignature Language="C#" Value="public void Append (System.Speech.Recognition.GrammarBuilder builder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Append(class System.Speech.Recognition.GrammarBuilder builder) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.Append(System.Speech.Recognition.GrammarBuilder)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Append (builder As GrammarBuilder)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Append(System::Speech::Recognition::GrammarBuilder ^ builder);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="builder" Type="System.Speech.Recognition.GrammarBuilder" />
      </Parameters>
      <Docs>
        <param name="builder">
          <span data-ttu-id="51858-300">Element gramatyki do dołączenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51858-300">The grammar element to append.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="51858-301">Dołącza element gramatyki do bieżącej sekwencji elementów gramatyki.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51858-301">Appends a grammar element to the current sequence of grammar elements.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51858-302">`builder` jest dodawany do końca bieżącego sekwencji elementów gramatyki.</span><span class="sxs-lookup"><span data-stu-id="51858-302">`builder` is added to the end of the current sequence of grammar elements.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="51858-303">Po dołączeniu <xref:System.Speech.Recognition.GrammarBuilder> obiektów, które zawierają <xref:System.Speech.Recognition.SemanticResultValue> lub <xref:System.Speech.Recognition.SemanticResultKey> wystąpień do <xref:System.Speech.Recognition.GrammarBuilder> obiektów, upewnij się, że można uniknąć tworzenia zduplikowane elementy semantycznego o takiej samej nazwie klucza lub wiele elementów semantyczne, które można wielokrotnie modyfikowanie <xref:System.Speech.Recognition.SemanticValue.Value%2A> właściwość <xref:System.Speech.Recognition.SemanticValue> obiektu.</span><span class="sxs-lookup"><span data-stu-id="51858-303">When you append <xref:System.Speech.Recognition.GrammarBuilder> objects that contain <xref:System.Speech.Recognition.SemanticResultValue> or <xref:System.Speech.Recognition.SemanticResultKey> instances to a <xref:System.Speech.Recognition.GrammarBuilder> object, make sure you avoid creating duplicate semantic elements with the same key name or multiple semantic elements that could repeatedly modify the <xref:System.Speech.Recognition.SemanticValue.Value%2A> property of a <xref:System.Speech.Recognition.SemanticValue> object.</span></span> <span data-ttu-id="51858-304">Aparat rozpoznawania mowy może zgłosić wyjątek, w przypadku wykrycia takiej sytuacji.</span><span class="sxs-lookup"><span data-stu-id="51858-304">The speech recognizer can throw an exception if it encounters these circumstances.</span></span> <span data-ttu-id="51858-305">Aby uzyskać więcej informacji o tworzeniu gramatyki rozpoznawania mowy, który zawiera informacje semantyczne, zobacz [przy użyciu SemanticResultKey i obiekty SemanticResultValue](http://msdn.microsoft.com/library/0fea1236-5261-4608-89b3-9ce9ffc22a1c).</span><span class="sxs-lookup"><span data-stu-id="51858-305">For more information about building a speech recognition grammar that contains semantic information, see [Using SemanticResultKey and SemanticResultValue Objects](http://msdn.microsoft.com/library/0fea1236-5261-4608-89b3-9ce9ffc22a1c).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="51858-306">Poniższy przykład tworzy gramatyki rozpoznawania mowy zwrotów, takie jak "Kuba wywołanie w miejscu pracy" i "Anna wywołania na jego telefon komórkowy", gdzie jest opcjonalne słowo "phone".</span><span class="sxs-lookup"><span data-stu-id="51858-306">The following example creates a speech recognition grammar for phrases such as "Call James at work" and "Call Anne on her cell phone", where the word "phone" is optional.</span></span> <span data-ttu-id="51858-307"><xref:System.Speech.Recognition.GrammarBuilder> i <xref:System.Speech.Recognition.Choices> obiekty służą do utworzenia gramatyki.</span><span class="sxs-lookup"><span data-stu-id="51858-307"><xref:System.Speech.Recognition.GrammarBuilder> and <xref:System.Speech.Recognition.Choices> objects are used to construct the grammar.</span></span> <span data-ttu-id="51858-308">Przykład prezentuje użycie <xref:System.Speech.Recognition.GrammarBuilder.Append%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="51858-308">The example highlights the use of the <xref:System.Speech.Recognition.GrammarBuilder.Append%2A> method.</span></span>  
  
```csharp  
  
public static Grammar CreatePhonePhrase()  
{  
  // Create alternatives for person names, locations, devices, and pronouns.  
  Choices personChoice = new Choices(new string[] {"Anne", "James", "Mary", "Sam"});  
  Choices locationChoice = new Choices(new string[] {"home", "work"});  
  Choices deviceChoice = new Choices(new string[] {"home", "work", "cell"});  
  Choices pronounChoice = new Choices(new string[] {"his", "her"});  
  
  // Create a phrase for the receiving device, which optionally contains the word "phone".  
  GrammarBuilder devicePhrase = new GrammarBuilder(pronounChoice);  
  devicePhrase.Append(deviceChoice);  
  devicePhrase.Append("phone", 0, 1);  
  
  // Create alternatives for phrases specifying a device or a location.  
  GrammarBuilder atLocation = new GrammarBuilder("at");  
  atLocation.Append(locationChoice);  
  
  GrammarBuilder onDevice = new GrammarBuilder("on");  
  onDevice.Append(devicePhrase);  
  
  Choices howChoice = new Choices(new GrammarBuilder[] {atLocation, onDevice});  
  
  // Build the final phrase.  
  GrammarBuilder callWho = new GrammarBuilder("Call");  
  callWho.Append(personChoice);  
  callWho.Append(howChoice);  
  
  // Create the Grammar object.  
  Grammar callGrammar = new Grammar(callWho);  
  callGrammar.Name = "Call Grammar";  
  
  return callGrammar;  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.AppendDictation" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.AppendRuleReference(System.String)" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.AppendWildcard" />
      </Docs>
    </Member>
    <Member MemberName="Append">
      <MemberSignature Language="C#" Value="public void Append (System.Speech.Recognition.SemanticResultKey key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Append(class System.Speech.Recognition.SemanticResultKey key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.Append(System.Speech.Recognition.SemanticResultKey)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Append (key As SemanticResultKey)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Append(System::Speech::Recognition::SemanticResultKey ^ key);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Speech.Recognition.SemanticResultKey" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="51858-309">Klucz semantyki do dołączenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51858-309">The semantic key to append.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="51858-310">Dołącza klucz semantyki do bieżącej sekwencji elementów gramatyki.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51858-310">Appends a semantic key to the current sequence of grammar elements.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51858-311">`key` jest dodawany do końca bieżącego sekwencji elementów.</span><span class="sxs-lookup"><span data-stu-id="51858-311">`key` is added to the end of the current sequence of elements.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="51858-312">Po dołączeniu <xref:System.Speech.Recognition.SemanticResultValue> lub <xref:System.Speech.Recognition.SemanticResultKey> wystąpień do <xref:System.Speech.Recognition.GrammarBuilder> obiektów, upewnij się, że można uniknąć tworzenia zduplikowane elementy semantycznego z tej samej nazwy klucza i wielu semantycznego elementy, które można zmodyfikować wielokrotnie <xref:System.Speech.Recognition.SemanticValue.Value%2A> właściwości <xref:System.Speech.Recognition.SemanticValue> obiektu.</span><span class="sxs-lookup"><span data-stu-id="51858-312">When you append  <xref:System.Speech.Recognition.SemanticResultValue> or <xref:System.Speech.Recognition.SemanticResultKey> instances to a <xref:System.Speech.Recognition.GrammarBuilder> object, make sure you avoid creating duplicate semantic elements with the same key name or multiple semantic elements that could repeatedly modify the <xref:System.Speech.Recognition.SemanticValue.Value%2A> property of a <xref:System.Speech.Recognition.SemanticValue> object.</span></span> <span data-ttu-id="51858-313">Aparat rozpoznawania mowy może zgłosić wyjątek, w przypadku wykrycia takiej sytuacji.</span><span class="sxs-lookup"><span data-stu-id="51858-313">The speech recognizer can throw an exception if it encounters these circumstances.</span></span> <span data-ttu-id="51858-314">Aby uzyskać więcej informacji o tworzeniu gramatyki rozpoznawania mowy, który zawiera informacje semantyczne, zobacz [SemanticResultValue zrozumienia i obiekty SemanticResultKey](http://msdn.microsoft.com/library/0fea1236-5261-4608-89b3-9ce9ffc22a1c).</span><span class="sxs-lookup"><span data-stu-id="51858-314">For more information about building a speech recognition grammar that contains semantic information, see [Understanding SemanticResultValue and SemanticResultKey Objects](http://msdn.microsoft.com/library/0fea1236-5261-4608-89b3-9ce9ffc22a1c).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="51858-315">Poniższy przykład jest częścią aplikacji konsoli dotyczące wybierania miast źródło i miejsce docelowe w locie.</span><span class="sxs-lookup"><span data-stu-id="51858-315">The following example is part of a console application for choosing origin and destination cities for a flight.</span></span> <span data-ttu-id="51858-316">Aplikacja rozpoznaje fraz, takie jak "Chcę udać z Miami do Chicago."</span><span class="sxs-lookup"><span data-stu-id="51858-316">The application recognizes phrases such as "I want to fly from Miami to Chicago."</span></span> <span data-ttu-id="51858-317">Programu obsługi <xref:System.Speech.Recognition.SpeechRecognitionEngine.SpeechRecognized> używa zdarzeń <xref:System.Speech.Recognition.SemanticResultKey> wyodrębnić kodu lotnisku określone w <xref:System.Speech.Recognition.SemanticResultValue> dla miejscowości źródło i miejsce docelowe.</span><span class="sxs-lookup"><span data-stu-id="51858-317">The handler for the <xref:System.Speech.Recognition.SpeechRecognitionEngine.SpeechRecognized> event uses the <xref:System.Speech.Recognition.SemanticResultKey> to extract the airport code specified in the <xref:System.Speech.Recognition.SemanticResultValue> for the origin and destination cities.</span></span>  
  
```csharp  
using System;  
using System.Speech.Recognition;  
  
namespace SampleRecognition  
{  
  class Program  
  {  
    static void Main(string[] args)  
  
    // Initialize an in-process speech recognition engine.  
    {  
      using (SpeechRecognitionEngine recognizer =  
         new SpeechRecognitionEngine())  
      {  
  
        // Create a Choices object and add  cities and airport codes  
        // using SemanticResultValue objects.  
        Choices cities = new Choices();  
        cities.Add(new SemanticResultValue("Chicago", "ORD"));  
        cities.Add(new SemanticResultValue("Boston", "BOS"));  
        cities.Add(new SemanticResultValue("Miami", "MIA"));  
        cities.Add(new SemanticResultValue("Dallas", "DFW"));  
  
        // Build the phrase and add SemanticResultKeys.  
        GrammarBuilder chooseCities = new GrammarBuilder();  
        chooseCities.Append("I want to fly from");  
        chooseCities.Append(new SemanticResultKey("origin", cities));  
        chooseCities.Append("to");  
        chooseCities.Append(new SemanticResultKey("destination", cities));  
  
        // Build a Grammar object from the GrammarBuilder.  
        Grammar bookFlight = new Grammar(chooseCities);  
        bookFlight.Name = "Book Flight";  
  
        // Add a handler for the LoadGrammarCompleted event.  
        recognizer.LoadGrammarCompleted +=   
          new EventHandler<LoadGrammarCompletedEventArgs>(recognizer_LoadGrammarCompleted);  
  
        // Add a handler for the SpeechRecognized event.  
        recognizer.SpeechRecognized +=   
          new EventHandler<SpeechRecognizedEventArgs>(recognizer_SpeechRecognized);  
  
        // Configure the input to the recognizer.  
        recognizer.SetInputToDefaultAudioDevice();  
  
        // Load the grammar object and start recognition.  
        recognizer.LoadGrammarAsync(bookFlight);  
        recognizer.RecognizeAsync();  
  
        // Keep the console window open.  
        Console.ReadLine();  
      }  
    }  
  
    // Handle the LoadGrammarCompleted event.  
    static void recognizer_LoadGrammarCompleted(object sender, LoadGrammarCompletedEventArgs e)  
    {  
      Console.WriteLine("Grammar loaded: " + e.Grammar.Name);  
      Console.WriteLine();  
    }  
  
    // Handle the SpeechRecognized event.  
    static void recognizer_SpeechRecognized(object sender, SpeechRecognizedEventArgs e)  
    {  
      Console.WriteLine("Speech recognized:  " + e.Result.Text);  
      Console.WriteLine();  
      Console.WriteLine("Semantic results:");  
      Console.WriteLine("  The flight origin is " + e.Result.Semantics["origin"].Value);  
      Console.WriteLine("  The flight destination is " + e.Result.Semantics["destination"].Value);  
    }  
  }  
}  
  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.AppendDictation" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.AppendRuleReference(System.String)" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.AppendWildcard" />
      </Docs>
    </Member>
    <Member MemberName="Append">
      <MemberSignature Language="C#" Value="public void Append (System.Speech.Recognition.SemanticResultValue value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Append(class System.Speech.Recognition.SemanticResultValue value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.Append(System.Speech.Recognition.SemanticResultValue)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Append (value As SemanticResultValue)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Append(System::Speech::Recognition::SemanticResultValue ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Speech.Recognition.SemanticResultValue" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="51858-318">Wartość semantyki do dołączenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51858-318">The semantic value to append.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="51858-319">Dołącza wartość semantyki do bieżącej sekwencji elementów gramatyki.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51858-319">Appends a semantic value to the current sequence of grammar elements.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51858-320">`value` jest dodawany do końca bieżącego sekwencji elementów.</span><span class="sxs-lookup"><span data-stu-id="51858-320">`value` is added to the end of the current sequence of elements.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="51858-321">Po dołączeniu <xref:System.Speech.Recognition.SemanticResultValue> lub <xref:System.Speech.Recognition.SemanticResultKey> wystąpień do <xref:System.Speech.Recognition.GrammarBuilder> obiektów, upewnij się, że można uniknąć tworzenia zduplikowane elementy semantycznego z tej samej nazwy klucza i wielu semantycznego elementy, które można zmodyfikować wielokrotnie <xref:System.Speech.Recognition.SemanticValue.Value%2A> właściwości <xref:System.Speech.Recognition.SemanticValue> obiektu.</span><span class="sxs-lookup"><span data-stu-id="51858-321">When you append  <xref:System.Speech.Recognition.SemanticResultValue> or <xref:System.Speech.Recognition.SemanticResultKey> instances to a <xref:System.Speech.Recognition.GrammarBuilder> object, make sure you avoid creating duplicate semantic elements with the same key name or multiple semantic elements that could repeatedly modify the <xref:System.Speech.Recognition.SemanticValue.Value%2A> property of a <xref:System.Speech.Recognition.SemanticValue> object.</span></span> <span data-ttu-id="51858-322">Aparat rozpoznawania mowy może zgłosić wyjątek, w przypadku wykrycia takiej sytuacji.</span><span class="sxs-lookup"><span data-stu-id="51858-322">The speech recognizer can throw an exception if it encounters these circumstances.</span></span> <span data-ttu-id="51858-323">Aby uzyskać więcej informacji o tworzeniu gramatyki rozpoznawania mowy, który zawiera informacje semantyczne, zobacz [SemanticResultValue zrozumienia i obiekty SemanticResultKey](http://msdn.microsoft.com/library/0fea1236-5261-4608-89b3-9ce9ffc22a1c).</span><span class="sxs-lookup"><span data-stu-id="51858-323">For more information about building a speech recognition grammar that contains semantic information, see [Understanding SemanticResultValue and SemanticResultKey Objects](http://msdn.microsoft.com/library/0fea1236-5261-4608-89b3-9ce9ffc22a1c).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="51858-324">Poniższy przykład jest częścią aplikacji konsoli dotyczące wybierania miast źródło i miejsce docelowe w locie.</span><span class="sxs-lookup"><span data-stu-id="51858-324">The following example is part of a console application for choosing origin and destination cities for a flight.</span></span> <span data-ttu-id="51858-325">Aplikacja rozpoznaje fraz, takie jak "Chcę udać z Miami do Chicago."</span><span class="sxs-lookup"><span data-stu-id="51858-325">The application recognizes phrases such as "I want to fly from Miami to Chicago."</span></span> <span data-ttu-id="51858-326">Programu obsługi <xref:System.Speech.Recognition.SpeechRecognitionEngine.SpeechRecognized> używa zdarzeń <xref:System.Speech.Recognition.SemanticResultKey> wyodrębnić kodu lotnisku określone w <xref:System.Speech.Recognition.SemanticResultValue> dla miejscowości źródło i miejsce docelowe.</span><span class="sxs-lookup"><span data-stu-id="51858-326">The handler for the <xref:System.Speech.Recognition.SpeechRecognitionEngine.SpeechRecognized> event uses the <xref:System.Speech.Recognition.SemanticResultKey> to extract the airport code specified in the <xref:System.Speech.Recognition.SemanticResultValue> for the origin and destination cities.</span></span>  
  
```csharp  
  
using System;  
using System.Speech.Recognition;  
  
namespace SampleRecognition  
{  
  class Program  
  {  
    static void Main(string[] args)  
  
    // Initialize an in-process speech recognition engine.  
    {  
      using (SpeechRecognitionEngine recognizer =  
         new SpeechRecognitionEngine())  
      {  
  
        // Create GrammarBuilder objects and append SemanticResultValue objects   
        // that contain cities and airport codes.  
  
        GrammarBuilder chicago = new GrammarBuilder();  
        chicago.Append(new SemanticResultValue("Chicago", "ORD"));  
  
        GrammarBuilder boston = new GrammarBuilder();  
        boston.Append(new SemanticResultValue("Boston", "BOS"));  
  
        GrammarBuilder miami = new GrammarBuilder();  
        miami.Append(new SemanticResultValue("Miami", "MIA"));  
  
        GrammarBuilder dallas = new GrammarBuilder();  
        dallas.Append(new SemanticResultValue("Dallas", "DFW"));  
  
        // Create a Choices object and add the cities using implicit conversion from   
        // SemanticResultValue to GrammarBuilder.  
        Choices cities = new Choices();  
        cities.Add(new Choices(new GrammarBuilder[] { chicago, boston, miami, dallas }));  
  
        // Build the phrase and add SemanticResultKeys.  
        GrammarBuilder chooseCities = new GrammarBuilder();  
        chooseCities.Append("I want to fly from");  
        chooseCities.Append(new SemanticResultKey("origin", cities));  
        chooseCities.Append("to");  
        chooseCities.Append(new SemanticResultKey("destination", cities));  
  
        // Build a Grammar object from the GrammarBuilder.  
        Grammar bookFlight = new Grammar(chooseCities);  
        bookFlight.Name = "Book Flight";  
  
        // Add a handler for the LoadGrammarCompleted event.  
        recognizer.LoadGrammarCompleted +=   
          new EventHandler<LoadGrammarCompletedEventArgs>(recognizer_LoadGrammarCompleted);  
  
        // Add a handler for the SpeechRecognized event.  
        recognizer.SpeechRecognized +=   
          new EventHandler<SpeechRecognizedEventArgs>(recognizer_SpeechRecognized);  
  
        // Configure the input to the recognizer.  
        recognizer.SetInputToDefaultAudioDevice();  
  
        // Load the grammar object and start recognition.  
        recognizer.LoadGrammarAsync(bookFlight);  
        recognizer.RecognizeAsync();  
  
        // Keep the console window open.  
        Console.ReadLine();  
      }  
    }  
    // Handle the LoadGrammarCompleted event.  
    static void recognizer_LoadGrammarCompleted(object sender, LoadGrammarCompletedEventArgs e)  
    {  
      Console.WriteLine("Grammar loaded: " + e.Grammar.Name);  
      Console.WriteLine();  
    }  
  
    // Handle the SpeechRecognized event.  
    static void recognizer_SpeechRecognized(object sender, SpeechRecognizedEventArgs e)  
    {  
      Console.WriteLine("Speech recognized:  " + e.Result.Text);  
      Console.WriteLine();  
      Console.WriteLine("Semantic results:");  
      Console.WriteLine("  The flight origin is " + e.Result.Semantics["origin"].Value);  
      Console.WriteLine("  The flight destination is " + e.Result.Semantics["destination"].Value);  
    }  
  }  
}  
  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.AppendDictation" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.AppendRuleReference(System.String)" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.AppendWildcard" />
      </Docs>
    </Member>
    <Member MemberName="Append">
      <MemberSignature Language="C#" Value="public void Append (string phrase);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Append(string phrase) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.Append(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Append (phrase As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Append(System::String ^ phrase);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="phrase" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="phrase">
          <span data-ttu-id="51858-327">Sekwencja wyrazy, które mają zostać dołączone.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51858-327">The sequence of words to append.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="51858-328">Dołącza frazę do bieżącej sekwencji elementów gramatyki.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51858-328">Appends a phrase to the current sequence of grammar elements.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51858-329">`phrase` jest dodawany do końca bieżącego sekwencji elementów.</span><span class="sxs-lookup"><span data-stu-id="51858-329">`phrase` is added to the end of the current sequence of elements.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.AppendDictation" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.AppendRuleReference(System.String)" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.AppendWildcard" />
      </Docs>
    </Member>
    <Member MemberName="Append">
      <MemberSignature Language="C#" Value="public void Append (string phrase, System.Speech.Recognition.SubsetMatchingMode subsetMatchingCriteria);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Append(string phrase, valuetype System.Speech.Recognition.SubsetMatchingMode subsetMatchingCriteria) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.Append(System.String,System.Speech.Recognition.SubsetMatchingMode)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Append (phrase As String, subsetMatchingCriteria As SubsetMatchingMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Append(System::String ^ phrase, System::Speech::Recognition::SubsetMatchingMode subsetMatchingCriteria);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="phrase" Type="System.String" />
        <Parameter Name="subsetMatchingCriteria" Type="System.Speech.Recognition.SubsetMatchingMode" />
      </Parameters>
      <Docs>
        <param name="phrase">
          <span data-ttu-id="51858-330">Sekwencja wyrazy, które mają zostać dołączone.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51858-330">The sequence of words to append.</span>
          </span>
        </param>
        <param name="subsetMatchingCriteria">
          <span data-ttu-id="51858-331">Zgodnym trybem gramatyki jest używany do rozpoznawania wyrażenie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51858-331">The matching mode the grammar uses to recognize the phrase.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="51858-332">Dołącza element dla podzbioru frazę do bieżącej sekwencji elementów gramatyki.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51858-332">Appends an element for a subset of a phrase to the current sequence of grammar elements.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51858-333">Element podzestawu zostanie dodany na końcu aktualnie sekwencji elementów.</span><span class="sxs-lookup"><span data-stu-id="51858-333">The subset element is added to the end of the current sequence of elements.</span></span> <span data-ttu-id="51858-334">Aby uzyskać więcej informacji o tworzeniu gramatyki rozpoznawania mowy używania ciągów, zobacz [przy użyciu ciągów można utworzyć gramatyki GrammarBuilder](http://msdn.microsoft.com/library/0d87b445-a342-4369-9b3f-91d07fd7e114).</span><span class="sxs-lookup"><span data-stu-id="51858-334">For more information about building a speech recognition grammar using strings, see [Using Strings to Create a GrammarBuilder Grammar](http://msdn.microsoft.com/library/0d87b445-a342-4369-9b3f-91d07fd7e114).</span></span>  
  
 <span data-ttu-id="51858-335">Aby uzyskać szczegółowe informacje na stronie Użyj podzestawu dopasowania tryby, zobacz <xref:System.Speech.Recognition.SubsetMatchingMode?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="51858-335">For detailed information on the use of subset matching modes, see <xref:System.Speech.Recognition.SubsetMatchingMode?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="51858-336">Gramatyka rozpoznawanie mowy w poniższym przykładzie jest tworzony dla każdego <xref:System.Speech.Recognition.SubsetMatchingMode> wartość.</span><span class="sxs-lookup"><span data-stu-id="51858-336">The following example creates a speech recognition grammar for each <xref:System.Speech.Recognition.SubsetMatchingMode> value.</span></span> <span data-ttu-id="51858-337">Na przykład wygenerowanego gramatyki `OrderedSubset` rozpoznaje wyrażeń, "trzy cztery pięć" i "co trzy pięć" i gramatyki `Subsequence` rozpoznaje frazę "trzy cztery pięć", ale nie hasło "co trzy pięć".</span><span class="sxs-lookup"><span data-stu-id="51858-337">For example, the generated grammar `OrderedSubset` recognizes the phrases, "three four five" and "one three five", and the grammar `Subsequence` recognizes the phrase "three four five", but not the phrase, "one three five".</span></span>  
  
```csharp  
  
private Grammar[] CreateSubsetMatchTest()  
{  
  List<Grammar> grammars = new List<Grammar>(4);  
  
  string phrase = "one two three four five six";  
  foreach (SubsetMatchingMode mode in  
    Enum.GetValues(typeof(SubsetMatchingMode)))  
  {  
    GrammarBuilder gb = new GrammarBuilder();  
    gb.Append(phrase, mode);  
  
    Grammar grammar = new Grammar(gb);  
    grammar.Name = mode.ToString();  
    grammars.Add(grammar);  
  }  
  
  return grammars.ToArray();  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.AppendDictation" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.AppendRuleReference(System.String)" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.AppendWildcard" />
      </Docs>
    </Member>
    <Member MemberName="Append">
      <MemberSignature Language="C#" Value="public void Append (System.Speech.Recognition.GrammarBuilder builder, int minRepeat, int maxRepeat);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Append(class System.Speech.Recognition.GrammarBuilder builder, int32 minRepeat, int32 maxRepeat) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.Append(System.Speech.Recognition.GrammarBuilder,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Append (builder As GrammarBuilder, minRepeat As Integer, maxRepeat As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Append(System::Speech::Recognition::GrammarBuilder ^ builder, int minRepeat, int maxRepeat);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="builder" Type="System.Speech.Recognition.GrammarBuilder" />
        <Parameter Name="minRepeat" Type="System.Int32" />
        <Parameter Name="maxRepeat" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="builder">
          <span data-ttu-id="51858-338">Element powtórzony gramatyki do dołączenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51858-338">The repeated grammar element to append.</span>
          </span>
        </param>
        <param name="minRepeat">
          <span data-ttu-id="51858-339">Minimalna liczba uruchomień wejściowych dopasowania zdefiniowany przez element <c>konstruktora</c> musi wystąpić stanowić dopasowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51858-339">The minimum number of times that input matching the element defined by <c>builder</c> must occur to constitute a match.</span>
          </span>
        </param>
        <param name="maxRepeat">
          <span data-ttu-id="51858-340">Maksymalną liczbę razy wejściowych dopasowania zdefiniowany przez element <c>konstruktora</c> może wystąpić stanowić dopasowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51858-340">The maximum number of times that input matching the element defined by <c>builder</c> can occur to constitute a match.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="51858-341">Dołącza element powtórzony gramatyki do bieżącej sekwencji elementów gramatyki.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51858-341">Appends a repeated grammar element to the current sequence of grammar elements.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51858-342">Wartość `minRepeat` musi być większa lub równa 0 i mniejsza niż wartość `maxRepeat`.</span><span class="sxs-lookup"><span data-stu-id="51858-342">The value of `minRepeat` must be greater than or equal to 0 and less than or equal to the value of `maxRepeat`.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="51858-343">Po dołączeniu <xref:System.Speech.Recognition.GrammarBuilder> obiektów, które zawierają <xref:System.Speech.Recognition.SemanticResultValue> lub <xref:System.Speech.Recognition.SemanticResultKey> wystąpień do <xref:System.Speech.Recognition.GrammarBuilder> obiektów, upewnij się, że można uniknąć tworzenia zduplikowane elementy semantycznego o takiej samej nazwie klucza lub wiele elementów semantyczne, które można wielokrotnie modyfikowanie <xref:System.Speech.Recognition.SemanticValue.Value%2A> właściwość <xref:System.Speech.Recognition.SemanticValue> obiektu.</span><span class="sxs-lookup"><span data-stu-id="51858-343">When you append <xref:System.Speech.Recognition.GrammarBuilder> objects that contain <xref:System.Speech.Recognition.SemanticResultValue> or <xref:System.Speech.Recognition.SemanticResultKey> instances to a <xref:System.Speech.Recognition.GrammarBuilder> object, make sure you avoid creating duplicate semantic elements with the same key name or multiple semantic elements that could repeatedly modify the <xref:System.Speech.Recognition.SemanticValue.Value%2A> property of a <xref:System.Speech.Recognition.SemanticValue> object.</span></span> <span data-ttu-id="51858-344">Aparat rozpoznawania mowy może zgłosić wyjątek, w przypadku wykrycia takiej sytuacji.</span><span class="sxs-lookup"><span data-stu-id="51858-344">The speech recognizer can throw an exception if it encounters these circumstances.</span></span> <span data-ttu-id="51858-345">Aby uzyskać więcej informacji o tworzeniu gramatyki rozpoznawania mowy, który zawiera informacje semantyczne, zobacz [SemanticResultValue zrozumienia i obiekty SemanticResultKey](http://msdn.microsoft.com/library/0fea1236-5261-4608-89b3-9ce9ffc22a1c).</span><span class="sxs-lookup"><span data-stu-id="51858-345">For more information about building a speech recognition grammar that contains semantic information, see [Understanding SemanticResultValue and SemanticResultKey Objects](http://msdn.microsoft.com/library/0fea1236-5261-4608-89b3-9ce9ffc22a1c).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="51858-346">Poniższy przykład tworzy gramatyki rozpoznawania mowy zwrotów, takie jak "Kuba wywołanie w miejscu pracy" i "Anna wywołania na jego telefon komórkowy", gdzie jest opcjonalne słowo "phone".</span><span class="sxs-lookup"><span data-stu-id="51858-346">The following example creates a speech recognition grammar for phrases such as "Call James at work" and "Call Anne on her cell phone", where the word "phone" is optional.</span></span> <span data-ttu-id="51858-347"><xref:System.Speech.Recognition.GrammarBuilder> i <xref:System.Speech.Recognition.Choices> obiekty służą do utworzenia gramatyki.</span><span class="sxs-lookup"><span data-stu-id="51858-347"><xref:System.Speech.Recognition.GrammarBuilder> and <xref:System.Speech.Recognition.Choices> objects are used to construct the grammar.</span></span> <span data-ttu-id="51858-348">Przykład prezentuje użycie <xref:System.Speech.Recognition.GrammarBuilder.Append%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="51858-348">The example highlights the use of the <xref:System.Speech.Recognition.GrammarBuilder.Append%2A> method.</span></span>  
  
```csharp  
  
public static Grammar CreatePhonePhrase()  
{  
  // Create alternatives for person names, locations, devices, and pronouns.  
  Choices personChoice = new Choices(new string[] {"Anne", "James", "Mary", "Sam"});  
  Choices locationChoice = new Choices(new string[] {"home", "work"});  
  Choices deviceChoice = new Choices(new string[] {"home", "work", "cell"});  
  Choices pronounChoice = new Choices(new string[] {"his", "her"});  
  
  // Create a phrase for the receiving device, which optionally contains the word "phone".  
  GrammarBuilder devicePhrase = new GrammarBuilder(pronounChoice);  
  devicePhrase.Append(deviceChoice);  
  devicePhrase.Append("phone", 0, 1);  
  
  // Create alternatives for phrases specifying a device or a location.  
  GrammarBuilder atLocation = new GrammarBuilder("at");  
  atLocation.Append(locationChoice);  
  
  GrammarBuilder onDevice = new GrammarBuilder("on");  
  onDevice.Append(devicePhrase);  
  
  Choices howChoice = new Choices(new GrammarBuilder[] {atLocation, onDevice});  
  
  // Build the final phrase.  
  GrammarBuilder callWho = new GrammarBuilder("Call");  
  callWho.Append(personChoice);  
  callWho.Append(howChoice);  
  
  // Create the Grammar object.  
  Grammar callGrammar = new Grammar(callWho);  
  callGrammar.Name = "Call Grammar";  
  
  return callGrammar;  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.AppendDictation" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.AppendRuleReference(System.String)" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.AppendWildcard" />
      </Docs>
    </Member>
    <Member MemberName="Append">
      <MemberSignature Language="C#" Value="public void Append (string phrase, int minRepeat, int maxRepeat);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Append(string phrase, int32 minRepeat, int32 maxRepeat) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.Append(System.String,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Append (phrase As String, minRepeat As Integer, maxRepeat As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Append(System::String ^ phrase, int minRepeat, int maxRepeat);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="phrase" Type="System.String" />
        <Parameter Name="minRepeat" Type="System.Int32" />
        <Parameter Name="maxRepeat" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="phrase">
          <span data-ttu-id="51858-349">Sekwencja powtarzane wyrazy, które mają zostać dołączone.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51858-349">The repeated sequence of words to append.</span>
          </span>
        </param>
        <param name="minRepeat">
          <span data-ttu-id="51858-350">Minimalną liczbę razy wejściowych dopasowania <c>frazy</c> musi wystąpić stanowić dopasowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51858-350">The minimum number of times that input matching <c>phrase</c> must occur to constitute a match.</span>
          </span>
        </param>
        <param name="maxRepeat">
          <span data-ttu-id="51858-351">Maksymalną liczbę razy wejściowych dopasowania <c>frazy</c> może wystąpić stanowić dopasowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51858-351">The maximum number of times that input matching <c>phrase</c> can occur to constitute a match.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="51858-352">Dołącza powtarzane frazę do bieżącej sekwencji elementów gramatyki.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51858-352">Appends a repeated phrase to the current sequence of grammar elements.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51858-353">Wartość `minRepeat` musi być większa lub równa 0 i mniejsza niż wartość `maxRepeat`.</span><span class="sxs-lookup"><span data-stu-id="51858-353">The value of `minRepeat` must be greater than or equal to 0 and less than or equal to the value of `maxRepeat`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="51858-354">Poniższy przykład tworzy gramatyki rozpoznawania mowy zwrotów, takie jak "Kuba wywołanie w miejscu pracy" i "Anna wywołania na jego telefon komórkowy", gdzie jest opcjonalne słowo "phone".</span><span class="sxs-lookup"><span data-stu-id="51858-354">The following example creates a speech recognition grammar for phrases such as "Call James at work" and "Call Anne on her cell phone", where the word "phone" is optional.</span></span> <span data-ttu-id="51858-355"><xref:System.Speech.Recognition.GrammarBuilder> i <xref:System.Speech.Recognition.Choices> obiekty służą do utworzenia gramatyki.</span><span class="sxs-lookup"><span data-stu-id="51858-355"><xref:System.Speech.Recognition.GrammarBuilder> and <xref:System.Speech.Recognition.Choices> objects are used to construct the grammar.</span></span> <span data-ttu-id="51858-356">Przykład prezentuje użycie <xref:System.Speech.Recognition.GrammarBuilder.Append%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="51858-356">The example highlights the use of the <xref:System.Speech.Recognition.GrammarBuilder.Append%2A> method.</span></span>  
  
```csharp  
  
public static Grammar CreatePhonePhrase()  
{  
  // Create alternatives for person names, locations, devices, and pronouns.  
  Choices personChoice = new Choices(new string[] {"Anne", "James", "Mary", "Sam"});  
  Choices locationChoice = new Choices(new string[] {"home", "work"});  
  Choices deviceChoice = new Choices(new string[] {"home", "work", "cell"});  
  Choices pronounChoice = new Choices(new string[] {"his", "her"});  
  
  // Create a phrase for the receiving device, which optionally contains the word "phone".  
  GrammarBuilder devicePhrase = new GrammarBuilder(pronounChoice);  
  devicePhrase.Append(deviceChoice);  
  devicePhrase.Append("phone", 0, 1);  
  
  // Create alternatives for phrases specifying a device or a location.  
  GrammarBuilder atLocation = new GrammarBuilder("at");  
  atLocation.Append(locationChoice);  
  
  GrammarBuilder onDevice = new GrammarBuilder("on");  
  onDevice.Append(devicePhrase);  
  
  Choices howChoice = new Choices(new GrammarBuilder[] {atLocation, onDevice});  
  
  // Build the final phrase.  
  GrammarBuilder callWho = new GrammarBuilder("Call");  
  callWho.Append(personChoice);  
  callWho.Append(howChoice);  
  
  // Create the Grammar object.  
  Grammar callGrammar = new Grammar(callWho);  
  callGrammar.Name = "Call Grammar";  
  
  return callGrammar;  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.AppendDictation" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.AppendRuleReference(System.String)" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.AppendWildcard" />
      </Docs>
    </Member>
    <MemberGroup MemberName="AppendDictation">
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="51858-357">Dołącza gramatyki dyktowania do bieżącej sekwencji elementów gramatyki.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51858-357">Appends a dictation grammar to the current sequence of grammar elements.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51858-358"><xref:System.Speech.Recognition.GrammarBuilder.AppendDictation%2A> Metody umożliwiają dołączanie gramatyki dyktowania jako zasadę, aby <xref:System.Speech.Recognition.GrammarBuilder>.</span><span class="sxs-lookup"><span data-stu-id="51858-358">The <xref:System.Speech.Recognition.GrammarBuilder.AppendDictation%2A> methods allow you to append a dictation grammar as a rule to a <xref:System.Speech.Recognition.GrammarBuilder>.</span></span>  
  
 <span data-ttu-id="51858-359">Aby uzyskać więcej informacji na dyktowania gramatyki, zobacz <xref:System.Speech.Recognition.DictationGrammar>.</span><span class="sxs-lookup"><span data-stu-id="51858-359">For more information on dictation grammars, see <xref:System.Speech.Recognition.DictationGrammar>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="AppendDictation">
      <MemberSignature Language="C#" Value="public void AppendDictation ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AppendDictation() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.AppendDictation" />
      <MemberSignature Language="VB.NET" Value="Public Sub AppendDictation ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AppendDictation();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="51858-360">Dołącza gramatyki dyktowania domyślne do bieżącej sekwencji elementów gramatyki.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51858-360">Appends the default dictation grammar to the current sequence of grammar elements.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51858-361">Aby uzyskać więcej informacji na dyktowania gramatyki, zobacz <xref:System.Speech.Recognition.DictationGrammar>.</span><span class="sxs-lookup"><span data-stu-id="51858-361">For more information on dictation grammars, see <xref:System.Speech.Recognition.DictationGrammar>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="51858-362">Poniższy przykład tworzy gramatyki rozpoznawania mowy, która będzie zawierała dyktowania.</span><span class="sxs-lookup"><span data-stu-id="51858-362">The following example creates a speech recognition grammar that incorporates dictation.</span></span>  
  
```csharp  
  
GrammarBuilder builder = new GrammarBuilder();  
builder.Append("begin");  
builder.AppendDictation();  
builder.Append("end");  
Grammar grammarWithDictation = new Grammar(builder);  
grammarWithDictation.Name = "Grammar with Dictation";  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Speech.Recognition.DictationGrammar" />
      </Docs>
    </Member>
    <Member MemberName="AppendDictation">
      <MemberSignature Language="C#" Value="public void AppendDictation (string category);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AppendDictation(string category) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.AppendDictation(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AppendDictation (category As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AppendDictation(System::String ^ category);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="category" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="category">
          <span data-ttu-id="51858-363">Kategoria gramatyki dyktowania do dołączenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51858-363">The category of the dictation grammar to append.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="51858-364">Dołącza gramatyki dyktowania określony do bieżącej sekwencji elementów gramatyki.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51858-364">Appends the specified dictation grammar to the current sequence of grammar elements.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51858-365">Aby używać gramatyki dyktowania pisowni, ustaw `category` do `spelling`.</span><span class="sxs-lookup"><span data-stu-id="51858-365">To use the spelling dictation grammar, set `category` to `spelling`.</span></span>  
  
 <span data-ttu-id="51858-366">Aby uzyskać więcej informacji na dyktowania gramatyki, zobacz <xref:System.Speech.Recognition.DictationGrammar>.</span><span class="sxs-lookup"><span data-stu-id="51858-366">For more information on dictation grammars, see <xref:System.Speech.Recognition.DictationGrammar>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="51858-367">Poniższy przykład tworzy gramatyki rozpoznawania mowy, która zawiera reguły pisowni dyktowania gramatyki.</span><span class="sxs-lookup"><span data-stu-id="51858-367">The following example creates a speech recognition grammar that incorporates the spelling dictation grammar rules.</span></span>  
  
```csharp  
  
GrammarBuilder builder = new GrammarBuilder();  
builder.Append("begin");  
builder.AppendDictation("spelling");  
builder.Append("end");  
Grammar grammarWithDictation = new Grammar(builder);  
grammarWithDictation.Name = "Grammar with Dictation";  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Speech.Recognition.DictationGrammar" />
      </Docs>
    </Member>
    <MemberGroup MemberName="AppendRuleReference">
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="51858-368">Dołącza pliku gramatyki lub reguła gramatyki do bieżącej sekwencji elementów gramatyki.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51858-368">Appends a grammar file or a grammar rule to the current sequence of grammar elements.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51858-369"><xref:System.Speech.Recognition.GrammarBuilder.AppendRuleReference%2A> Metod można dołączyć pliku gramatyki lub reguła gramatyki z pliku.</span><span class="sxs-lookup"><span data-stu-id="51858-369">The <xref:System.Speech.Recognition.GrammarBuilder.AppendRuleReference%2A> methods can append a grammar file or a grammar rule from a file.</span></span> <span data-ttu-id="51858-370">Te metody umożliwiają aplikacjom należy używać reguł wstępnie wdrożonego lub publicznie dostępnych gramatyki.</span><span class="sxs-lookup"><span data-stu-id="51858-370">These methods allow applications to make use of pre-deployed or publicly available grammar rules.</span></span> <span data-ttu-id="51858-371">Aplikacja musi mieć dostęp do odczytu do lokalizacji plików określony gramatyki.</span><span class="sxs-lookup"><span data-stu-id="51858-371">The application must have read access to the location of specified grammar files.</span></span>  
  
 <span data-ttu-id="51858-372">Te metody mogą odczytywać gramatyki rozpoznawanie mowy w następujących formatach.</span><span class="sxs-lookup"><span data-stu-id="51858-372">These methods can read a speech recognition grammar from the following formats.</span></span>  
  
-   <span data-ttu-id="51858-373">Pliki w formacie XML, zgodnych ze standardami W3C [mowy rozpoznawania gramatyki specyfikacji (SRGS) w wersji 1.0](http://go.microsoft.com/fwlink/?LinkId=201761)</span><span class="sxs-lookup"><span data-stu-id="51858-373">XML-format files that conform to the W3C [Speech Recognition Grammar Specification (SRGS) Version 1.0](http://go.microsoft.com/fwlink/?LinkId=201761)</span></span>  
  
-   <span data-ttu-id="51858-374">Pliki binarne, zgodnych ze standardami firmy Microsoft mowy rozpoznawania gramatyki formatu binarnego (rozszerzenie pliku .cfg)</span><span class="sxs-lookup"><span data-stu-id="51858-374">Binary files that conform to the Microsoft Speech Recognition Grammar Binary Format (.cfg file extension)</span></span>  
  
 <span data-ttu-id="51858-375">Kompilowanie SRGS XML format pliku gramatyki do pliku z rozszerzeniem .cfg gramatyka binarna może skrócić czas używane przez wyszukuje dopasowania, zwłaszcza jeśli gramatyki wymaga rozpoznawania dużą liczbą słów i wyrażeń.</span><span class="sxs-lookup"><span data-stu-id="51858-375">Compiling an XML-format SRGS grammar file to a binary grammar file with the .cfg extension can reduce the time consumed by searches for a match, especially if the grammar requires recognition of a large number of words and phrases.</span></span> <span data-ttu-id="51858-376">Aby dowiedzieć się, jak kompilowanie gramatykach SRGS na format binarny CFG, zobacz <xref:System.Speech.Recognition.SrgsGrammar.SrgsGrammarCompiler>.</span><span class="sxs-lookup"><span data-stu-id="51858-376">For information about compiling SRGS grammars to the CFG binary format, see <xref:System.Speech.Recognition.SrgsGrammar.SrgsGrammarCompiler>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="AppendRuleReference">
      <MemberSignature Language="C#" Value="public void AppendRuleReference (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AppendRuleReference(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.AppendRuleReference(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AppendRuleReference (path As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AppendRuleReference(System::String ^ path);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path">
          <span data-ttu-id="51858-377">Ścieżka lub Universal zasobów Identifier (URI) pliku, który zawiera opis gramatyki rozpoznawanie mowy w obsługiwanym formacie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51858-377">The path or Universal Resource Identifier (URI) of the file that describes a speech recognition grammar in a supported format.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="51858-378">Dołącza plik definicji gramatyki do bieżącej sekwencji elementów gramatyki.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51858-378">Appends a grammar definition file to the current sequence of grammar elements.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51858-379">Dostarczony przez identyfikator URI `path` argument może być lokalnym lub zdalnym.</span><span class="sxs-lookup"><span data-stu-id="51858-379">The URI provided by the `path` argument may be local or remote.</span></span> <span data-ttu-id="51858-380">Aplikacja musi mieć dostęp do odczytu do lokalizacji plików określony gramatyki.</span><span class="sxs-lookup"><span data-stu-id="51858-380">The application must have read access to the location of specified grammar files.</span></span>  
  
 <span data-ttu-id="51858-381">Reprezentacja W3C mowy rozpoznawania gramatyki specyfikacji (SRGS) można zdefiniować reguły głównego.</span><span class="sxs-lookup"><span data-stu-id="51858-381">A W3C Speech Recognition Grammar Specification (SRGS) representation can define a root rule.</span></span> <span data-ttu-id="51858-382">Ta metoda dołącza gramatyki, począwszy od jej główna reguła do bieżącej sekwencji elementów gramatyki.</span><span class="sxs-lookup"><span data-stu-id="51858-382">This method appends the grammar, beginning with its root rule, to the current sequence of grammar elements.</span></span> <span data-ttu-id="51858-383">Aby dołączyć reguła gramatyki określonych, użyj <xref:System.Speech.Recognition.GrammarBuilder.AppendRuleReference%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="51858-383">To append a specific grammar rule, use the <xref:System.Speech.Recognition.GrammarBuilder.AppendRuleReference%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="51858-384">W poniższym przykładzie C# tworzy gramatyki rozpoznawania mowy, który używa reguły o nazwie `Cities` w pliku lokalnym SRGS cities.grxml.</span><span class="sxs-lookup"><span data-stu-id="51858-384">The following C# example creates a speech recognition grammar that uses the rule named `Cities` in a local SRGS file, cities.grxml.</span></span> <span data-ttu-id="51858-385">Zawartość pliku cities.grxml pojawia się poniżej przykładowy kod C#.</span><span class="sxs-lookup"><span data-stu-id="51858-385">The content of the cities.grxml file appears below the C# code example.</span></span>  
  
```csharp  
  
private static Grammar CreateCitiesGrammar1()  
{  
  GrammarBuilder builder = new GrammarBuilder();  
  builder.AppendRuleReference("file://c:/temp/cities.grxml");  
  
  Grammar citiesGrammar = new Grammar(builder);  
  citiesGrammar.Name = "Cities Grammar 1";  
  return citiesGrammar;  
}  
```  
  
```xml  
  
<?xml version="1.0" encoding="UTF-16" ?>  
<grammar version="1.0" xml:lang="en-US"  
         xmlns="http://www.w3.org/2001/06/grammar"  
         tag-format="semantics/1.0" root="Main">  
  
  <!-- cities.grxml:   
    Defines an SRGS grammar for requesting a flight. This grammar includes  
    a Cities rule that lists the cities that can be used for departures  
    and destinations. -->  
  
  <rule id="Main">  
    <item>  
      I would like to fly from <ruleref uri="#Cities"/>  
      to <ruleref uri="#Cities"/>  
    </item>  
  </rule>  
  
  <rule id="Cities" scope="public">  
    <one-of>  
      <item> Seattle </item>  
      <item> Los Angeles </item>  
      <item> New York </item>  
      <item> Miami </item>  
    </one-of>  
  </rule>  
</grammar>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.Append(System.Speech.Recognition.Choices)" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.AppendDictation" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.AppendWildcard" />
        <altmember cref="T:System.Speech.Recognition.Grammar" />
      </Docs>
    </Member>
    <Member MemberName="AppendRuleReference">
      <MemberSignature Language="C#" Value="public void AppendRuleReference (string path, string rule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AppendRuleReference(string path, string rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.AppendRuleReference(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AppendRuleReference (path As String, rule As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AppendRuleReference(System::String ^ path, System::String ^ rule);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="rule" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path">
          <span data-ttu-id="51858-386">Ścieżka pliku lub Universal zasobów Identifier (URI) pliku, który zawiera opis gramatyki rozpoznawanie mowy w obsługiwanym formacie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51858-386">The file path or Universal Resource Identifier (URI) of the file that describes a speech recognition grammar in a supported format.</span>
          </span>
        </param>
        <param name="rule">
          <span data-ttu-id="51858-387">Identyfikator reguły do dołączenia, lub <see langword="null" /> do dołączenia domyślna reguła głównego pliku gramatyki.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51858-387">The identifier of the rule to append, or <see langword="null" /> to append the default root rule of the grammar file.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="51858-388">Dołącza określony reguła gramatyki pliku definicji do bieżącej sekwencji elementów gramatyki.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51858-388">Appends the specified rule of a grammar definition file to the current sequence of grammar elements.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51858-389">Dostarczony przez identyfikator URI `path` argument może być lokalnym lub zdalnym.</span><span class="sxs-lookup"><span data-stu-id="51858-389">The URI provided by the `path` argument may be local or remote.</span></span> <span data-ttu-id="51858-390">Aplikacja musi mieć dostęp do odczytu do lokalizacji plików określony gramatyki.</span><span class="sxs-lookup"><span data-stu-id="51858-390">The application must have read access to the location of specified grammar files.</span></span>  
  
 <span data-ttu-id="51858-391">Umożliwia użycie <xref:System.Speech.Recognition.GrammarBuilder.AppendRuleReference%2A> metodę, aby dołączyć zaczyna się jej główna reguła od pliku gramatyki.</span><span class="sxs-lookup"><span data-stu-id="51858-391">You can use the use the <xref:System.Speech.Recognition.GrammarBuilder.AppendRuleReference%2A> method to append a grammar file beginning with its root rule.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="51858-392">W poniższym przykładzie C# tworzy gramatyki rozpoznawania mowy, który używa reguły o nazwie `Cities` w pliku lokalnym SRGS cities.grxml.</span><span class="sxs-lookup"><span data-stu-id="51858-392">The following C# example creates a speech recognition grammar that uses the rule named `Cities` in a local SRGS file, cities.grxml.</span></span> <span data-ttu-id="51858-393">Zawartość pliku cities.grxml pojawia się poniżej przykładowy kod C#.</span><span class="sxs-lookup"><span data-stu-id="51858-393">The content of the cities.grxml file appears below the C# code example.</span></span>  
  
```csharp  
  
private static Grammar CreateCitiesGrammar2()  
{  
  GrammarBuilder builder = new GrammarBuilder();  
  builder.Append("Does");  
  builder.AppendRuleReference(@"c:\temp\cities.grxml", "Cities");  
  builder.Append("have a shuttle");  
  
  Grammar citiesGrammar = new Grammar(builder);  
  citiesGrammar.Name = "Cities Grammar 2";  
  return citiesGrammar;  
}  
```  
  
```xml  
  
<?xml version="1.0" encoding="UTF-8" ?>  
<grammar version="1.0" xml:lang="en-US"  
         xmlns="http://www.w3.org/2001/06/grammar"  
         tag-format="semantics/1.0" root="Main">  
  
  <!-- cities.grxml:   
    Defines an SRGS grammar for requesting a flight. This grammar includes  
    a Cities rule that lists the cities that can be used for departures  
    and destinations. -->  
  
  <rule id="Main">  
    <item>  
      I would like to fly from <ruleref uri="#Cities"/>  
      to <ruleref uri="#Cities"/>  
    </item>  
  </rule>  
  
  <rule id="Cities" scope="public">  
    <one-of>  
      <item> Seattle </item>  
      <item> Los Angeles </item>  
      <item> New York </item>  
      <item> Miami </item>  
    </one-of>  
  </rule>  
</grammar>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.Append(System.Speech.Recognition.Choices)" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.AppendDictation" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.AppendWildcard" />
        <altmember cref="T:System.Speech.Recognition.Grammar" />
      </Docs>
    </Member>
    <Member MemberName="AppendWildcard">
      <MemberSignature Language="C#" Value="public void AppendWildcard ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AppendWildcard() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.AppendWildcard" />
      <MemberSignature Language="VB.NET" Value="Public Sub AppendWildcard ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AppendWildcard();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="51858-394">Dołącza element gramatyki rozpoznawania, który pasuje do żadnych danych do bieżącej sekwencji elementów gramatyki.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51858-394">Appends a recognition grammar element that matches any input to the current sequence of grammar elements.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51858-395">Element symbolu wieloznacznego zostanie dodany na końcu aktualnie sekwencji elementów.</span><span class="sxs-lookup"><span data-stu-id="51858-395">The wildcard element is added to the end of the current sequence of elements.</span></span>  
  
 <span data-ttu-id="51858-396">Elemencie symbolu wieloznacznego dopasowuje dowolny rozmowy wyraz.</span><span class="sxs-lookup"><span data-stu-id="51858-396">The wildcard element matches any spoken word.</span></span> <span data-ttu-id="51858-397">Nie odpowiada hałas w tle lub wyciszenia.</span><span class="sxs-lookup"><span data-stu-id="51858-397">It does not match background noise or silence.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="51858-398">Poniższy przykład tworzy gramatyki, która akceptuje dane wejściowe hasło jako symbolu wieloznacznego.</span><span class="sxs-lookup"><span data-stu-id="51858-398">The following example creates a grammar that accepts password input as a wildcard.</span></span> <span data-ttu-id="51858-399">Dołącza przykładzie <xref:System.Speech.Recognition.Grammar.SpeechRecognized?displayProperty=nameWithType> program obsługi zdarzeń do gramatyki, która weryfikuje wprowadzania hasła.</span><span class="sxs-lookup"><span data-stu-id="51858-399">The example attaches a <xref:System.Speech.Recognition.Grammar.SpeechRecognized?displayProperty=nameWithType> event handler to the grammar that validates the password input.</span></span>  
  
```csharp  
private Grammar CreatePasswordGrammar()  
{  
  GrammarBuilder wildcardBuilder = new GrammarBuilder();  
  wildcardBuilder.AppendWildcard();  
  SemanticResultKey passwordKey =  
    new SemanticResultKey("Password", wildcardBuilder);  
  
  GrammarBuilder passwordBuilder =  
    new GrammarBuilder("My Password is");  
  passwordBuilder.Append(passwordKey);  
  
  Grammar passwordGrammar = new Grammar(passwordBuilder);  
  passwordGrammar.Name = "Password input";  
  
  passwordGrammar.SpeechRecognized +=  
    new EventHandler<SpeechRecognizedEventArgs>(  
      PasswordInputHandler);  
  
  return passwordGrammar;  
}  
  
// Handle the SpeechRecognized event for the password grammar.  
private void PasswordInputHandler(object sender, SpeechRecognizedEventArgs e)  
{  
  if (e.Result == null) return;  
  
  RecognitionResult result = e.Result;  
  SemanticValue semantics = e.Result.Semantics;  
  
  if (semantics.ContainsKey("Password"))  
  {  
    RecognizedAudio passwordAudio =  
      result.GetAudioForWordRange(  
        result.Words[3], result.Words[result.Words.Count - 1]);  
  
    if (IsValidPassword(passwordAudio))  
    {  
      Console.WriteLine("Password accepted.");  
  
      // Add code to handle a valid password here.  
    }  
    else  
    {  
      Console.WriteLine("Invalid password.");  
  
      // Add code to handle an invalid password here.  
    }  
  }  
}  
  
// Validate the password input.   
private bool IsValidPassword(RecognizedAudio passwordAudio)  
{  
  Console.WriteLine("Validating password.");  
  
  // Add password validation code here.  
  
  return false;  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.Append(System.Speech.Recognition.Choices)" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.AppendDictation" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.AppendRuleReference(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="Culture">
      <MemberSignature Language="C#" Value="public System.Globalization.CultureInfo Culture { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Globalization.CultureInfo Culture" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Recognition.GrammarBuilder.Culture" />
      <MemberSignature Language="VB.NET" Value="Public Property Culture As CultureInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Globalization::CultureInfo ^ Culture { System::Globalization::CultureInfo ^ get(); void set(System::Globalization::CultureInfo ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.CultureInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="51858-400">Pobiera lub ustawia kulturę gramatyki rozpoznawania mowy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51858-400">Gets or sets the culture of the speech recognition grammar.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="51858-401">Kultura <see cref="T:System.Speech.Recognition.GrammarBuilder" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51858-401">The culture of the <see cref="T:System.Speech.Recognition.GrammarBuilder" />.</span>
          </span>
          <span data-ttu-id="51858-402">Wartość domyślna to wykonywanie wątku <see cref="P:System.Threading.Thread.CurrentUICulture" /> właściwości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51858-402">The default is the executing thread's <see cref="P:System.Threading.Thread.CurrentUICulture" /> property.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51858-403"><xref:System.Speech.Recognition.Grammar.%23ctor%2A> Konstruktor tworzy <xref:System.Speech.Recognition.Grammar> obiekt, który mogą być używane przez aparat rozpoznawania mowy odpowiedniego kultury.</span><span class="sxs-lookup"><span data-stu-id="51858-403">The <xref:System.Speech.Recognition.Grammar.%23ctor%2A> constructor creates a <xref:System.Speech.Recognition.Grammar> object that can be used by a speech recognizer of the corresponding culture.</span></span> <span data-ttu-id="51858-404">Tylko <xref:System.Speech.Recognition.GrammarBuilder.Culture%2A> właściwość <xref:System.Speech.Recognition.GrammarBuilder> podano jako parametr do konstruktora gramatyki jest używana do ustawiania kultura wynikowy gramatyki rozpoznawania mowy.</span><span class="sxs-lookup"><span data-stu-id="51858-404">Only the <xref:System.Speech.Recognition.GrammarBuilder.Culture%2A> property of the <xref:System.Speech.Recognition.GrammarBuilder> that is provided as the parameter to the Grammar constructor is used to set the culture of the resulting speech recognition grammar.</span></span>  
  
 <span data-ttu-id="51858-405">Microsoft Windows i interfejsu API System.Speech zaakceptować wszystkie prawidłowe kody języka kraju.</span><span class="sxs-lookup"><span data-stu-id="51858-405">Microsoft Windows and the System.Speech API accept all valid language-country codes.</span></span> <span data-ttu-id="51858-406">Aby przeprowadzić rozpoznawanie mowy przy użyciu języka określonego w `Culture` właściwości, który obsługuje kod kraju język musi być zainstalowany aparatu rozpoznawania mowy.</span><span class="sxs-lookup"><span data-stu-id="51858-406">To perform speech recognition using the language specified in the `Culture` property, a speech recognition engine that supports that language-country code must be installed.</span></span> <span data-ttu-id="51858-407">Aparatów rozpoznawania mowy dostarczonych z programem Microsoft Windows 7 skontaktować się z następujących kodów kraju języka.</span><span class="sxs-lookup"><span data-stu-id="51858-407">The speech recognition engines that shipped with Microsoft Windows 7 work with the following language-country codes.</span></span>  
  
-   <span data-ttu-id="51858-408">en-GB.</span><span class="sxs-lookup"><span data-stu-id="51858-408">en-GB.</span></span> <span data-ttu-id="51858-409">Angielski (brytyjski)</span><span class="sxs-lookup"><span data-stu-id="51858-409">English (United Kingdom)</span></span>  
  
-   <span data-ttu-id="51858-410">en-US.</span><span class="sxs-lookup"><span data-stu-id="51858-410">en-US.</span></span> <span data-ttu-id="51858-411">Angielski (Stany Zjednoczone)</span><span class="sxs-lookup"><span data-stu-id="51858-411">English (United States)</span></span>  
  
-   <span data-ttu-id="51858-412">de-DE.</span><span class="sxs-lookup"><span data-stu-id="51858-412">de-DE.</span></span> <span data-ttu-id="51858-413">Niemiecki (Niemcy)</span><span class="sxs-lookup"><span data-stu-id="51858-413">German (Germany)</span></span>  
  
-   <span data-ttu-id="51858-414">es-ES.</span><span class="sxs-lookup"><span data-stu-id="51858-414">es-ES.</span></span> <span data-ttu-id="51858-415">Hiszpański (Hiszpania)</span><span class="sxs-lookup"><span data-stu-id="51858-415">Spanish (Spain)</span></span>  
  
-   <span data-ttu-id="51858-416">fr-FR.</span><span class="sxs-lookup"><span data-stu-id="51858-416">fr-FR.</span></span> <span data-ttu-id="51858-417">Francuski (Francja)</span><span class="sxs-lookup"><span data-stu-id="51858-417">French (France)</span></span>  
  
-   <span data-ttu-id="51858-418">ja-JP.</span><span class="sxs-lookup"><span data-stu-id="51858-418">ja-JP.</span></span> <span data-ttu-id="51858-419">Japoński (Japonia)</span><span class="sxs-lookup"><span data-stu-id="51858-419">Japanese (Japan)</span></span>  
  
-   <span data-ttu-id="51858-420">zh-CN.</span><span class="sxs-lookup"><span data-stu-id="51858-420">zh-CN.</span></span> <span data-ttu-id="51858-421">Chiński (Chiny)</span><span class="sxs-lookup"><span data-stu-id="51858-421">Chinese (China)</span></span>  
  
-   <span data-ttu-id="51858-422">zh-TW.</span><span class="sxs-lookup"><span data-stu-id="51858-422">zh-TW.</span></span> <span data-ttu-id="51858-423">Chiński (Tajwan)</span><span class="sxs-lookup"><span data-stu-id="51858-423">Chinese (Taiwan)</span></span>  
  
 <span data-ttu-id="51858-424">Język dwuliterowych kodów przykład "en", "fr" lub "es" również są dozwolone.</span><span class="sxs-lookup"><span data-stu-id="51858-424">Two-letter language codes such as "en", "fr", or "es" are also permitted.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="51858-425">Poniższy przykład tworzy porządkowania pizza z maksymalnie cztery toppings gramatyki rozpoznawania mowy.</span><span class="sxs-lookup"><span data-stu-id="51858-425">The following example creates a speech recognition grammar for ordering a pizza with up to four toppings.</span></span> <span data-ttu-id="51858-426">W szczególności ustawia <xref:System.Speech.Recognition.GrammarBuilder> kultury obiektu język angielski (Stany Zjednoczone).</span><span class="sxs-lookup"><span data-stu-id="51858-426">It specifically sets the <xref:System.Speech.Recognition.GrammarBuilder> object's culture to English (United States).</span></span>  
  
```csharp  
  
private static Grammar CreatePizzaGrammar()  
{  
  
  // Create a Choices object with alternatives for toppings.  
  Choices toppings = new Choices(new string[] {  
    "cheese", "mushroom", "tomato", "onion",  
    "anchovy", "chicken", "pepperoni"});  
  
  // Create a GrammarBuilder and append the Choices object.  
  GrammarBuilder andToppings = new GrammarBuilder("and", 0, 1);  
  andToppings.Append(toppings);  
  
  // Construct the phrase.  
  GrammarBuilder gb = new GrammarBuilder("I would like a", 0, 1);  
  gb.Append(toppings);  
  gb.Append(new GrammarBuilder(andToppings, 0, 3));  
  gb.Append("pizza");  
  
  // Create the Grammar from the GrammarBuilder.  
  Grammar grammar = new Grammar(gb);  
  grammar.Name = "Pizza Order";  
  
  return grammar;  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Speech.Recognition.Grammar" />
        <altmember cref="T:System.Speech.Recognition.RecognizerInfo" />
        <altmember cref="T:System.Speech.Recognition.SpeechRecognitionEngine" />
        <altmember cref="T:System.Speech.Recognition.SpeechRecognizer" />
      </Docs>
    </Member>
    <Member MemberName="DebugShowPhrases">
      <MemberSignature Language="C#" Value="public string DebugShowPhrases { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DebugShowPhrases" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Recognition.GrammarBuilder.DebugShowPhrases" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DebugShowPhrases As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DebugShowPhrases { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="51858-427">Pobiera ciąg, który zawiera zawartość i struktura gramatyki zawarty w <see cref="T:System.Speech.Recognition.GrammarBuilder" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51858-427">Gets a string that shows the contents and structure of the grammar contained by the <see cref="T:System.Speech.Recognition.GrammarBuilder" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="51858-428">Bieżący zawartości i struktury <see cref="T:System.Speech.Recognition.GrammarBuilder" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51858-428">The current content and structure of the <see cref="T:System.Speech.Recognition.GrammarBuilder" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="51858-429">Poniższy przykład tworzy porządkowania pizza z maksymalnie cztery toppings gramatyki rozpoznawania mowy.</span><span class="sxs-lookup"><span data-stu-id="51858-429">The following example creates a speech recognition grammar for ordering a pizza with up to four toppings.</span></span> <span data-ttu-id="51858-430">Zapisuje stan <xref:System.Speech.Recognition.GrammarBuilder> konsoli przed utworzeniem gramatyki.</span><span class="sxs-lookup"><span data-stu-id="51858-430">It writes the status of the <xref:System.Speech.Recognition.GrammarBuilder> to the console before creating the grammar.</span></span> <span data-ttu-id="51858-431">Ta metoda generuje następujące dane wyjściowe:</span><span class="sxs-lookup"><span data-stu-id="51858-431">This method generates the following output:</span></span>  
  
-   `GrammarBuilder status: I would like a [cheese,mushroom,tomato,onion,anchovy,chic ken,pepperoni] and [cheese,mushroom,tomato,onion,anchovy,chicken,pepperoni] pizza`  
  
```csharp  
  
private static Grammar CreatePizzaGrammar()  
{  
  
  // Create a Choices object with alternatives for toppings.  
  Choices toppings = new Choices(new string[] {  
    "cheese", "mushroom", "tomato", "onion",  
    "anchovy", "chicken", "pepperoni"});  
  
  // Create a GrammarBuilder and append the Choices object.  
  GrammarBuilder andToppings = new GrammarBuilder("and", 0, 1);  
  andToppings.Append(toppings);  
  
  // Construct the phrase.  
  GrammarBuilder gb = new GrammarBuilder("I would like a", 0, 1);  
  gb.Append(toppings);  
  gb.Append(new GrammarBuilder(andToppings, 0, 3));  
  gb.Append("pizza");  
  
  // Write the contents and structure of the GrammarBuilder to the console.  
  Console.WriteLine("Grammar content and structure: {0}", gb.DebugShowPhrases);  
  
  // Create the Grammar from the GrammarBuilder.  
  Grammar grammar = new Grammar(gb);  
  grammar.Name = "Pizza Order";  
  
  return grammar;  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="op_Addition">
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="51858-432">Tworzy nową <see cref="T:System.Speech.Recognition.GrammarBuilder" /> odpowiadający sekwencję dwóch elementów gramatyki.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51858-432">Creates a new <see cref="T:System.Speech.Recognition.GrammarBuilder" /> that corresponds to a sequence of two grammar elements.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51858-433">Kolejność argumentów operacji określa kolejność elementów w nowej <xref:System.Speech.Recognition.GrammarBuilder>.</span><span class="sxs-lookup"><span data-stu-id="51858-433">The order of the operands determines the order of the elements in the new <xref:System.Speech.Recognition.GrammarBuilder>.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="51858-434">Ostrożność jest zalecane w przypadku łączenia <xref:System.Speech.Recognition.Choices> lub <xref:System.Speech.Recognition.GrammarBuilder> obiektów, które zawierają <xref:System.Speech.Recognition.SemanticResultValue> lub <xref:System.Speech.Recognition.SemanticResultKey> wystąpienia z innymi elementami gramatyki.</span><span class="sxs-lookup"><span data-stu-id="51858-434">Caution is recommended when combining <xref:System.Speech.Recognition.Choices> or <xref:System.Speech.Recognition.GrammarBuilder> objects that contain <xref:System.Speech.Recognition.SemanticResultValue> or <xref:System.Speech.Recognition.SemanticResultKey> instances with other grammar elements.</span></span> <span data-ttu-id="51858-435">Aparat rozpoznawania mowy może zgłosić wyjątek, używając gramatyki rozpoznawania mowy, który zawiera zduplikowane elementy semantycznego o takiej samej nazwie klucza lub wielu elementów semantyczne, które wielokrotnie można zmodyfikować wartości tego samego elementu semantycznego.</span><span class="sxs-lookup"><span data-stu-id="51858-435">The speech recognizer can throw an exception when using a speech recognition grammar that contains duplicate semantic elements with the same key name or multiple semantic elements that could repeatedly modify the value of the same semantic element.</span></span> <span data-ttu-id="51858-436">Aby uzyskać więcej informacji o tworzeniu gramatyki rozpoznawania mowy, który zawiera informacje semantyczne, zobacz [przy użyciu SemanticResultKey i obiekty SemanticResultValue](http://msdn.microsoft.com/library/0fea1236-5261-4608-89b3-9ce9ffc22a1c).</span><span class="sxs-lookup"><span data-stu-id="51858-436">For more information about building a speech recognition grammar that contains semantic information, see [Using SemanticResultKey and SemanticResultValue Objects](http://msdn.microsoft.com/library/0fea1236-5261-4608-89b3-9ce9ffc22a1c).</span></span>  
  
 <span data-ttu-id="51858-437">Aby uzyskać więcej informacji na temat tworzenia i używania gramatyki rozpoznawania mowy, zobacz [rozpoznawania mowy](http://msdn.microsoft.com/library/6a7dc524-07fc-4862-8d48-8c10dc64b919) i [tworzenie gramatyki GrammarBuilder](http://msdn.microsoft.com/library/7e2cc577-cb05-4318-9da3-7c8675d3d9ae).</span><span class="sxs-lookup"><span data-stu-id="51858-437">For more information about building and using speech recognition grammars, see [Speech Recognition](http://msdn.microsoft.com/library/6a7dc524-07fc-4862-8d48-8c10dc64b919) and [Creating GrammarBuilder Grammars](http://msdn.microsoft.com/library/7e2cc577-cb05-4318-9da3-7c8675d3d9ae).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="op_Addition">
      <MemberSignature Language="C#" Value="public static System.Speech.Recognition.GrammarBuilder operator + (System.Speech.Recognition.Choices choices, System.Speech.Recognition.GrammarBuilder builder);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname class System.Speech.Recognition.GrammarBuilder op_Addition(class System.Speech.Recognition.Choices choices, class System.Speech.Recognition.GrammarBuilder builder) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.op_Addition(System.Speech.Recognition.Choices,System.Speech.Recognition.GrammarBuilder)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Speech::Recognition::GrammarBuilder ^ operator +(System::Speech::Recognition::Choices ^ choices, System::Speech::Recognition::GrammarBuilder ^ builder);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Speech.Recognition.GrammarBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="choices" Type="System.Speech.Recognition.Choices" />
        <Parameter Name="builder" Type="System.Speech.Recognition.GrammarBuilder" />
      </Parameters>
      <Docs>
        <param name="choices">
          <span data-ttu-id="51858-438">Pierwszy gramatyki element, który reprezentuje zestaw alternatyw.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51858-438">The first grammar element, which represents a set of alternatives.</span>
          </span>
        </param>
        <param name="builder">
          <span data-ttu-id="51858-439">Drugi element gramatyki.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51858-439">The second grammar element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="51858-440">Tworzy nowy <see cref="T:System.Speech.Recognition.GrammarBuilder" /> zawierający <see cref="T:System.Speech.Recognition.Choices" /> obiektu, a następnie <see cref="T:System.Speech.Recognition.GrammarBuilder" /> obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51858-440">Creates a new <see cref="T:System.Speech.Recognition.GrammarBuilder" /> that contains a <see cref="T:System.Speech.Recognition.Choices" /> object followed by a <see cref="T:System.Speech.Recognition.GrammarBuilder" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="51858-441">Zwraca <see cref="T:System.Speech.Recognition.GrammarBuilder" /> sekwencji <paramref name="choices" /> następuje parametru <paramref name="builder" /> parametru.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51858-441">Returns a <see cref="T:System.Speech.Recognition.GrammarBuilder" /> for the sequence of the <paramref name="choices" /> parameter followed by the <paramref name="builder" /> parameter.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51858-442"><xref:System.Speech.Recognition.GrammarBuilder> obsługuje konwersję z następujących klas.</span><span class="sxs-lookup"><span data-stu-id="51858-442"><xref:System.Speech.Recognition.GrammarBuilder> supports conversions from the following classes.</span></span>  
  
-   <xref:System.Speech.Recognition.Choices>  
  
-   <xref:System.Speech.Recognition.SemanticResultKey>  
  
-   <xref:System.Speech.Recognition.SemanticResultValue>  
  
-   <xref:System.String>  
  
 <span data-ttu-id="51858-443">Ta metoda przyjmuje obiektami wymienionymi powyżej dla `builder` parametru.</span><span class="sxs-lookup"><span data-stu-id="51858-443">This method accepts the objects listed above for the `builder` parameter.</span></span> <span data-ttu-id="51858-444">Aby uzyskać więcej informacji, zobacz <xref:System.Speech.Recognition.GrammarBuilder.op_Implicit%2A> operatorów.</span><span class="sxs-lookup"><span data-stu-id="51858-444">For more information, see the <xref:System.Speech.Recognition.GrammarBuilder.op_Implicit%2A> operators.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="51858-445">Podczas łączenia <xref:System.Speech.Recognition.Choices> i <xref:System.Speech.Recognition.GrammarBuilder> obiektów, które zawierają <xref:System.Speech.Recognition.SemanticResultValue> lub <xref:System.Speech.Recognition.SemanticResultKey> wystąpienia, upewnij się, że można uniknąć tworzenia zduplikowane elementy semantycznego z tej samej nazwy klucza i wielu semantycznego elementy, które można zmodyfikować wielokrotnie <xref:System.Speech.Recognition.SemanticValue.Value%2A> właściwość <xref:System.Speech.Recognition.SemanticValue> obiektu.</span><span class="sxs-lookup"><span data-stu-id="51858-445">When you combine <xref:System.Speech.Recognition.Choices> and <xref:System.Speech.Recognition.GrammarBuilder> objects that contain <xref:System.Speech.Recognition.SemanticResultValue> or <xref:System.Speech.Recognition.SemanticResultKey> instances, make sure you avoid creating duplicate semantic elements with the same key name or multiple semantic elements that could repeatedly modify the <xref:System.Speech.Recognition.SemanticValue.Value%2A> property of a <xref:System.Speech.Recognition.SemanticValue> object.</span></span> <span data-ttu-id="51858-446">Aparat rozpoznawania mowy może zgłosić wyjątek, w przypadku wykrycia takiej sytuacji.</span><span class="sxs-lookup"><span data-stu-id="51858-446">The speech recognizer can throw an exception if it encounters these circumstances.</span></span> <span data-ttu-id="51858-447">Aby uzyskać więcej informacji o tworzeniu gramatyki rozpoznawania mowy, który zawiera informacje semantyczne, zobacz [SemanticResultValue zrozumienia i obiekty SemanticResultKey](http://msdn.microsoft.com/library/0fea1236-5261-4608-89b3-9ce9ffc22a1c).</span><span class="sxs-lookup"><span data-stu-id="51858-447">For more information about building a speech recognition grammar that contains semantic information, see [Understanding SemanticResultValue and SemanticResultKey Objects](http://msdn.microsoft.com/library/0fea1236-5261-4608-89b3-9ce9ffc22a1c).</span></span>  
  
 <span data-ttu-id="51858-448">Jest równoważne metodę dla tego operatora <xref:System.Speech.Recognition.GrammarBuilder.Add%28System.Speech.Recognition.Choices%2CSystem.Speech.Recognition.GrammarBuilder%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="51858-448">The equivalent method for this operator is <xref:System.Speech.Recognition.GrammarBuilder.Add%28System.Speech.Recognition.Choices%2CSystem.Speech.Recognition.GrammarBuilder%29?displayProperty=nameWithType></span></span>]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.Add(System.Speech.Recognition.Choices,System.Speech.Recognition.GrammarBuilder)" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.op_Implicit(System.Speech.Recognition.Choices)~System.Speech.Recognition.GrammarBuilder" />
      </Docs>
    </Member>
    <Member MemberName="op_Addition">
      <MemberSignature Language="C#" Value="public static System.Speech.Recognition.GrammarBuilder operator + (System.Speech.Recognition.GrammarBuilder builder, System.Speech.Recognition.Choices choices);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname class System.Speech.Recognition.GrammarBuilder op_Addition(class System.Speech.Recognition.GrammarBuilder builder, class System.Speech.Recognition.Choices choices) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.op_Addition(System.Speech.Recognition.GrammarBuilder,System.Speech.Recognition.Choices)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Speech::Recognition::GrammarBuilder ^ operator +(System::Speech::Recognition::GrammarBuilder ^ builder, System::Speech::Recognition::Choices ^ choices);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Speech.Recognition.GrammarBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="builder" Type="System.Speech.Recognition.GrammarBuilder" />
        <Parameter Name="choices" Type="System.Speech.Recognition.Choices" />
      </Parameters>
      <Docs>
        <param name="builder">
          <span data-ttu-id="51858-449">Pierwszy element gramatyki.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51858-449">The first grammar element.</span>
          </span>
        </param>
        <param name="choices">
          <span data-ttu-id="51858-450">Drugi gramatyki element, który reprezentuje zestaw elementów alternatywnych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51858-450">The second grammar element, which represents a set of alternative elements.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="51858-451">Tworzy nowy <see cref="T:System.Speech.Recognition.GrammarBuilder" /> zawierający <see cref="T:System.Speech.Recognition.GrammarBuilder" /> następuje <see cref="T:System.Speech.Recognition.Choices" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51858-451">Creates a new <see cref="T:System.Speech.Recognition.GrammarBuilder" /> that contains a <see cref="T:System.Speech.Recognition.GrammarBuilder" /> followed by a <see cref="T:System.Speech.Recognition.Choices" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="51858-452">Zwraca <see cref="T:System.Speech.Recognition.GrammarBuilder" /> sekwencji <paramref name="builder" /> następuje parametru <paramref name="choices" /> parametru.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51858-452">Returns a <see cref="T:System.Speech.Recognition.GrammarBuilder" /> for the sequence of the <paramref name="builder" /> parameter followed by the <paramref name="choices" /> parameter.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51858-453"><xref:System.Speech.Recognition.GrammarBuilder> obsługuje konwersję z następujących klas:</span><span class="sxs-lookup"><span data-stu-id="51858-453"><xref:System.Speech.Recognition.GrammarBuilder> supports conversions from the following classes:</span></span>  
  
-   <xref:System.Speech.Recognition.Choices>  
  
-   <xref:System.Speech.Recognition.SemanticResultKey>  
  
-   <xref:System.Speech.Recognition.SemanticResultValue>  
  
-   <xref:System.String>  
  
 <span data-ttu-id="51858-454">Ta metoda przyjmuje obiektami wymienionymi powyżej dla `builder` parametru.</span><span class="sxs-lookup"><span data-stu-id="51858-454">This method accepts the objects listed above for the `builder` parameter.</span></span> <span data-ttu-id="51858-455">Aby uzyskać więcej informacji, zobacz <xref:System.Speech.Recognition.GrammarBuilder.op_Implicit%2A> operatorów.</span><span class="sxs-lookup"><span data-stu-id="51858-455">For more information, see the <xref:System.Speech.Recognition.GrammarBuilder.op_Implicit%2A> operators.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="51858-456">Podczas łączenia <xref:System.Speech.Recognition.Choices> i <xref:System.Speech.Recognition.GrammarBuilder> obiektów, które zawierają <xref:System.Speech.Recognition.SemanticResultValue> lub <xref:System.Speech.Recognition.SemanticResultKey> wystąpienia, upewnij się, że można uniknąć tworzenia zduplikowane elementy semantycznego z tej samej nazwy klucza i wielu semantycznego elementy, które można zmodyfikować wielokrotnie <xref:System.Speech.Recognition.SemanticValue.Value%2A> właściwość <xref:System.Speech.Recognition.SemanticValue> obiektu.</span><span class="sxs-lookup"><span data-stu-id="51858-456">When you combine <xref:System.Speech.Recognition.Choices> and <xref:System.Speech.Recognition.GrammarBuilder> objects that contain <xref:System.Speech.Recognition.SemanticResultValue> or <xref:System.Speech.Recognition.SemanticResultKey> instances, make sure you avoid creating duplicate semantic elements with the same key name or multiple semantic elements that could repeatedly modify the <xref:System.Speech.Recognition.SemanticValue.Value%2A> property of a <xref:System.Speech.Recognition.SemanticValue> object.</span></span> <span data-ttu-id="51858-457">Aparat rozpoznawania mowy może zgłosić wyjątek, w przypadku wykrycia takiej sytuacji.</span><span class="sxs-lookup"><span data-stu-id="51858-457">The speech recognizer can throw an exception if it encounters these circumstances.</span></span> <span data-ttu-id="51858-458">Aby uzyskać więcej informacji o tworzeniu gramatyki rozpoznawania mowy, który zawiera informacje semantyczne, zobacz [SemanticResultValue zrozumienia i obiekty SemanticResultKey](http://msdn.microsoft.com/library/0fea1236-5261-4608-89b3-9ce9ffc22a1c).</span><span class="sxs-lookup"><span data-stu-id="51858-458">For more information about building a speech recognition grammar that contains semantic information, see [Understanding SemanticResultValue and SemanticResultKey Objects](http://msdn.microsoft.com/library/0fea1236-5261-4608-89b3-9ce9ffc22a1c).</span></span>  
  
 <span data-ttu-id="51858-459">Jest równoważne metodę dla tego operatora <xref:System.Speech.Recognition.GrammarBuilder.Add%28System.Speech.Recognition.GrammarBuilder%2CSystem.Speech.Recognition.Choices%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="51858-459">The equivalent method for this operator is <xref:System.Speech.Recognition.GrammarBuilder.Add%28System.Speech.Recognition.GrammarBuilder%2CSystem.Speech.Recognition.Choices%29?displayProperty=nameWithType></span></span>  
  
## Examples  
 <span data-ttu-id="51858-460">Poniższy przykład tworzy gramatyki rozpoznawania mowy, która może rozpoznać dwóch wyrażeń, "tło *kolor*" i "ustawioną tła *kolor*", gdzie *kolor* Wybrano zestaw kolorów.</span><span class="sxs-lookup"><span data-stu-id="51858-460">The following example creates a speech recognition grammar that can recognize the two phrases, "Make background *color*" and "Set background to *color*", where *color* is selected from a set of colors.</span></span> <span data-ttu-id="51858-461">Różne typy są używane do tworzenia końcowego gramatyki, takich jak [ciąg](http://go.microsoft.com/fwlink/?LinkId=159733), <xref:System.Speech.Recognition.Choices>, i <xref:System.Speech.Recognition.GrammarBuilder> obiektów.</span><span class="sxs-lookup"><span data-stu-id="51858-461">Various types are used to build the final grammar, such as [String](http://go.microsoft.com/fwlink/?LinkId=159733), <xref:System.Speech.Recognition.Choices>, and <xref:System.Speech.Recognition.GrammarBuilder> objects.</span></span>  
  
```csharp  
  
private Grammar CreateColorGrammar()  
{  
  
  // Create a set of color choices.  
  Choices colorChoice = new Choices(new string[] { "red", "green", "blue" });  
  
  // Create grammar builders for the two versions of the phrase.  
  GrammarBuilder makePhrase =  
    (GrammarBuilder)"Make background" + colorChoice;  
  GrammarBuilder setPhrase =  
    "Set background to" + (GrammarBuilder)colorChoice;  
  
  // Create a Choices for the two alternative phrases, convert the Choices  
  // to a GrammarBuilder, and construct the grammar from the result.  
  Choices bothChoices = new Choices(new GrammarBuilder[] { makePhrase, setPhrase });  
  GrammarBuilder bothPhrases = new GrammarBuilder(bothChoices);  
  
  Grammar grammar = new Grammar(bothPhrases);  
  grammar.Name = "backgroundColor";  
  return grammar;  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.Add(System.Speech.Recognition.Choices,System.Speech.Recognition.GrammarBuilder)" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.op_Implicit(System.Speech.Recognition.Choices)~System.Speech.Recognition.GrammarBuilder" />
      </Docs>
    </Member>
    <Member MemberName="op_Addition">
      <MemberSignature Language="C#" Value="public static System.Speech.Recognition.GrammarBuilder operator + (System.Speech.Recognition.GrammarBuilder builder1, System.Speech.Recognition.GrammarBuilder builder2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname class System.Speech.Recognition.GrammarBuilder op_Addition(class System.Speech.Recognition.GrammarBuilder builder1, class System.Speech.Recognition.GrammarBuilder builder2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.op_Addition(System.Speech.Recognition.GrammarBuilder,System.Speech.Recognition.GrammarBuilder)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator + (builder1 As GrammarBuilder, builder2 As GrammarBuilder) As GrammarBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Speech::Recognition::GrammarBuilder ^ operator +(System::Speech::Recognition::GrammarBuilder ^ builder1, System::Speech::Recognition::GrammarBuilder ^ builder2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Speech.Recognition.GrammarBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="builder1" Type="System.Speech.Recognition.GrammarBuilder" />
        <Parameter Name="builder2" Type="System.Speech.Recognition.GrammarBuilder" />
      </Parameters>
      <Docs>
        <param name="builder1">
          <span data-ttu-id="51858-462">Pierwszy element gramatyki.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51858-462">The first grammar element.</span>
          </span>
        </param>
        <param name="builder2">
          <span data-ttu-id="51858-463">Drugi element gramatyki.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51858-463">The second grammar element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="51858-464">Tworzy nowy <see cref="T:System.Speech.Recognition.GrammarBuilder" /> zawierającego sekwencję dwóch <see cref="T:System.Speech.Recognition.GrammarBuilder" /> obiektów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51858-464">Creates a new <see cref="T:System.Speech.Recognition.GrammarBuilder" /> that contains a sequence of two <see cref="T:System.Speech.Recognition.GrammarBuilder" /> objects.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="51858-465">Zwraca <see cref="T:System.Speech.Recognition.GrammarBuilder" /> sekwencji <paramref name="builder1" /> następuje parametru <paramref name="builder2" /> parametru.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51858-465">Returns a <see cref="T:System.Speech.Recognition.GrammarBuilder" /> for the sequence of the <paramref name="builder1" /> parameter followed by the <paramref name="builder2" /> parameter.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51858-466"><xref:System.Speech.Recognition.GrammarBuilder> obsługuje konwersję z następujących klas.</span><span class="sxs-lookup"><span data-stu-id="51858-466"><xref:System.Speech.Recognition.GrammarBuilder> supports conversions from the following classes.</span></span>  
  
-   <xref:System.Speech.Recognition.Choices>  
  
-   <xref:System.Speech.Recognition.SemanticResultKey>  
  
-   <xref:System.Speech.Recognition.SemanticResultValue>  
  
-   <xref:System.String>  
  
 <span data-ttu-id="51858-467">Ta metoda przyjmuje obiektami wymienionymi powyżej dla `builder1` i `builder2` parametrów.</span><span class="sxs-lookup"><span data-stu-id="51858-467">This method accepts the objects listed above for the `builder1` and `builder2` parameters.</span></span> <span data-ttu-id="51858-468">Aby uzyskać więcej informacji, zobacz <xref:System.Speech.Recognition.GrammarBuilder.op_Implicit%2A> operatorów.</span><span class="sxs-lookup"><span data-stu-id="51858-468">For more information, see the <xref:System.Speech.Recognition.GrammarBuilder.op_Implicit%2A> operators.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="51858-469">Podczas łączenia <xref:System.Speech.Recognition.GrammarBuilder> obiektów, które zawierają <xref:System.Speech.Recognition.SemanticResultValue> lub <xref:System.Speech.Recognition.SemanticResultKey> wystąpienia, upewnij się, że można uniknąć tworzenia zduplikowane elementy semantycznego z tej samej nazwy klucza i wielu semantycznego elementy, które można zmodyfikować wielokrotnie <xref:System.Speech.Recognition.SemanticValue.Value%2A> Właściwość <xref:System.Speech.Recognition.SemanticValue> obiektu.</span><span class="sxs-lookup"><span data-stu-id="51858-469">When you combine <xref:System.Speech.Recognition.GrammarBuilder> objects that contain <xref:System.Speech.Recognition.SemanticResultValue> or <xref:System.Speech.Recognition.SemanticResultKey> instances, make sure you avoid creating duplicate semantic elements with the same key name or multiple semantic elements that could repeatedly modify the <xref:System.Speech.Recognition.SemanticValue.Value%2A> property of a <xref:System.Speech.Recognition.SemanticValue> object.</span></span> <span data-ttu-id="51858-470">Aparat rozpoznawania mowy może zgłosić wyjątek, w przypadku wykrycia takiej sytuacji.</span><span class="sxs-lookup"><span data-stu-id="51858-470">The speech recognizer can throw an exception if it encounters these circumstances.</span></span> <span data-ttu-id="51858-471">Aby uzyskać więcej informacji o tworzeniu gramatyki rozpoznawania mowy, który zawiera informacje semantyczne, zobacz [SemanticResultValue zrozumienia i obiekty SemanticResultKey](http://msdn.microsoft.com/library/0fea1236-5261-4608-89b3-9ce9ffc22a1c).</span><span class="sxs-lookup"><span data-stu-id="51858-471">For more information about building a speech recognition grammar that contains semantic information, see [Understanding SemanticResultValue and SemanticResultKey Objects](http://msdn.microsoft.com/library/0fea1236-5261-4608-89b3-9ce9ffc22a1c).</span></span>  
  
 <span data-ttu-id="51858-472">Jest równoważne metodę dla tego operatora <xref:System.Speech.Recognition.GrammarBuilder.Add%28System.Speech.Recognition.GrammarBuilder%2CSystem.Speech.Recognition.GrammarBuilder%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="51858-472">The equivalent method for this operator is <xref:System.Speech.Recognition.GrammarBuilder.Add%28System.Speech.Recognition.GrammarBuilder%2CSystem.Speech.Recognition.GrammarBuilder%29?displayProperty=nameWithType></span></span>]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.Add(System.Speech.Recognition.Choices,System.Speech.Recognition.GrammarBuilder)" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.op_Implicit(System.Speech.Recognition.Choices)~System.Speech.Recognition.GrammarBuilder" />
      </Docs>
    </Member>
    <Member MemberName="op_Addition">
      <MemberSignature Language="C#" Value="public static System.Speech.Recognition.GrammarBuilder operator + (System.Speech.Recognition.GrammarBuilder builder, string phrase);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname class System.Speech.Recognition.GrammarBuilder op_Addition(class System.Speech.Recognition.GrammarBuilder builder, string phrase) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.op_Addition(System.Speech.Recognition.GrammarBuilder,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator + (builder As GrammarBuilder, phrase As String) As GrammarBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Speech::Recognition::GrammarBuilder ^ operator +(System::Speech::Recognition::GrammarBuilder ^ builder, System::String ^ phrase);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Speech.Recognition.GrammarBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="builder" Type="System.Speech.Recognition.GrammarBuilder" />
        <Parameter Name="phrase" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="builder">
          <span data-ttu-id="51858-473">Pierwszy element gramatyki.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51858-473">The first grammar element.</span>
          </span>
        </param>
        <param name="phrase">
          <span data-ttu-id="51858-474">Drugi gramatyki element, który reprezentuje sekwencję słów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51858-474">The second grammar element, which represents a sequence of words.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="51858-475">Tworzy nowy <see cref="T:System.Speech.Recognition.GrammarBuilder" /> zawierający <see cref="T:System.Speech.Recognition.GrammarBuilder" /> następuje frazę.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51858-475">Creates a new <see cref="T:System.Speech.Recognition.GrammarBuilder" /> that contains a <see cref="T:System.Speech.Recognition.GrammarBuilder" /> followed by a phrase.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="51858-476">Zwraca <see cref="T:System.Speech.Recognition.GrammarBuilder" /> sekwencji <paramref name="builder" /> następuje parametru <paramref name="phrase" /> parametru.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51858-476">Returns a <see cref="T:System.Speech.Recognition.GrammarBuilder" /> for the sequence of the <paramref name="builder" /> parameter followed by the <paramref name="phrase" /> parameter.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51858-477"><xref:System.Speech.Recognition.GrammarBuilder> obsługuje konwersję z następujących klas.</span><span class="sxs-lookup"><span data-stu-id="51858-477"><xref:System.Speech.Recognition.GrammarBuilder> supports conversions from the following classes.</span></span>  
  
-   <xref:System.Speech.Recognition.Choices>  
  
-   <xref:System.Speech.Recognition.SemanticResultKey>  
  
-   <xref:System.Speech.Recognition.SemanticResultValue>  
  
-   <xref:System.String>  
  
 <span data-ttu-id="51858-478">Ta metoda przyjmuje obiektami wymienionymi powyżej dla `builder` parametru.</span><span class="sxs-lookup"><span data-stu-id="51858-478">This method accepts the objects listed above for the `builder` parameter.</span></span> <span data-ttu-id="51858-479">Aby uzyskać więcej informacji, zobacz <xref:System.Speech.Recognition.GrammarBuilder.op_Implicit%2A> operatorów.</span><span class="sxs-lookup"><span data-stu-id="51858-479">For more information, see the <xref:System.Speech.Recognition.GrammarBuilder.op_Implicit%2A> operators.</span></span>  
  
 <span data-ttu-id="51858-480">Jest równoważne metodę dla tego operatora <xref:System.Speech.Recognition.GrammarBuilder.Add%28System.Speech.Recognition.GrammarBuilder%2CSystem.String%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="51858-480">The equivalent method for this operator is <xref:System.Speech.Recognition.GrammarBuilder.Add%28System.Speech.Recognition.GrammarBuilder%2CSystem.String%29?displayProperty=nameWithType></span></span>]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.Add(System.Speech.Recognition.Choices,System.Speech.Recognition.GrammarBuilder)" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.op_Implicit(System.Speech.Recognition.Choices)~System.Speech.Recognition.GrammarBuilder" />
      </Docs>
    </Member>
    <Member MemberName="op_Addition">
      <MemberSignature Language="C#" Value="public static System.Speech.Recognition.GrammarBuilder operator + (string phrase, System.Speech.Recognition.GrammarBuilder builder);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname class System.Speech.Recognition.GrammarBuilder op_Addition(string phrase, class System.Speech.Recognition.GrammarBuilder builder) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.op_Addition(System.String,System.Speech.Recognition.GrammarBuilder)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator + (phrase As String, builder As GrammarBuilder) As GrammarBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Speech::Recognition::GrammarBuilder ^ operator +(System::String ^ phrase, System::Speech::Recognition::GrammarBuilder ^ builder);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Speech.Recognition.GrammarBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="phrase" Type="System.String" />
        <Parameter Name="builder" Type="System.Speech.Recognition.GrammarBuilder" />
      </Parameters>
      <Docs>
        <param name="phrase">
          <span data-ttu-id="51858-481">Pierwszy gramatyki element, który reprezentuje sekwencję słów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51858-481">The first grammar element, which represents a sequence of words.</span>
          </span>
        </param>
        <param name="builder">
          <span data-ttu-id="51858-482">Drugi element gramatyki.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51858-482">The second grammar element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="51858-483">Tworzy nowy <see cref="T:System.Speech.Recognition.GrammarBuilder" /> zawierający frazę następują <see cref="T:System.Speech.Recognition.GrammarBuilder" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51858-483">Creates a new <see cref="T:System.Speech.Recognition.GrammarBuilder" /> that contains a phrase followed by a <see cref="T:System.Speech.Recognition.GrammarBuilder" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="51858-484">Zwraca <see cref="T:System.Speech.Recognition.GrammarBuilder" /> sekwencji <paramref name="phrase" /> następuje parametru <paramref name="builder" /> parametru.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51858-484">Returns a <see cref="T:System.Speech.Recognition.GrammarBuilder" /> for the sequence of the <paramref name="phrase" /> parameter followed by the <paramref name="builder" /> parameter.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51858-485"><xref:System.Speech.Recognition.GrammarBuilder> obsługuje konwersję z następujących klas.</span><span class="sxs-lookup"><span data-stu-id="51858-485"><xref:System.Speech.Recognition.GrammarBuilder> supports conversions from the following classes.</span></span>  
  
-   <xref:System.Speech.Recognition.Choices>  
  
-   <xref:System.Speech.Recognition.SemanticResultKey>  
  
-   <xref:System.Speech.Recognition.SemanticResultValue>  
  
-   <xref:System.String>  
  
 <span data-ttu-id="51858-486">Ta metoda przyjmuje obiektami wymienionymi powyżej dla `builder` parametru.</span><span class="sxs-lookup"><span data-stu-id="51858-486">This method accepts the objects listed above for the `builder` parameter.</span></span> <span data-ttu-id="51858-487">Aby uzyskać więcej informacji, zobacz <xref:System.Speech.Recognition.GrammarBuilder.op_Implicit%2A> operatorów.</span><span class="sxs-lookup"><span data-stu-id="51858-487">For more information, see the <xref:System.Speech.Recognition.GrammarBuilder.op_Implicit%2A> operators.</span></span>  
  
 <span data-ttu-id="51858-488">Jest równoważne metodę dla tego operatora <xref:System.Speech.Recognition.GrammarBuilder.Add%28System.String%2CSystem.Speech.Recognition.GrammarBuilder%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="51858-488">The equivalent method for this operator is <xref:System.Speech.Recognition.GrammarBuilder.Add%28System.String%2CSystem.Speech.Recognition.GrammarBuilder%29?displayProperty=nameWithType></span></span>  
  
## Examples  
 <span data-ttu-id="51858-489">Poniższy przykład tworzy gramatyki rozpoznawania mowy, która może rozpoznać dwóch wyrażeń, "tło *kolor*" i "ustawioną tła *kolor*", gdzie *kolor* Wybrano zestaw kolorów.</span><span class="sxs-lookup"><span data-stu-id="51858-489">The following example creates a speech recognition grammar that can recognize the two phrases, "Make background *color*" and "Set background to *color*", where *color* is selected from a set of colors.</span></span> <span data-ttu-id="51858-490">Różne typy są używane do tworzenia końcowego gramatyki, takich jak [ciąg](http://go.microsoft.com/fwlink/?LinkId=159733), <xref:System.Speech.Recognition.Choices>, i <xref:System.Speech.Recognition.GrammarBuilder> obiektów.</span><span class="sxs-lookup"><span data-stu-id="51858-490">Various types are used to build the final grammar, such as [String](http://go.microsoft.com/fwlink/?LinkId=159733), <xref:System.Speech.Recognition.Choices>, and <xref:System.Speech.Recognition.GrammarBuilder> objects.</span></span>  
  
```csharp  
  
private Grammar CreateColorGrammar()  
{  
  
  // Create a set of color choices.  
  Choices colorChoice = new Choices(new string[] { "red", "green", "blue" });  
  
  // Create grammar builders for the two versions of the phrase.  
  GrammarBuilder makePhrase =  
    (GrammarBuilder)"Make background" + colorChoice;  
  GrammarBuilder setPhrase =  
    "Set background to" + (GrammarBuilder)colorChoice;  
  
  // Create a Choices for the two alternative phrases, convert the Choices  
  // to a GrammarBuilder, and construct the Grammar object from the result.  
  Choices bothChoices = new Choices(new GrammarBuilder[] { makePhrase, setPhrase });  
  GrammarBuilder bothPhrases = new GrammarBuilder(bothChoices);  
  
  Grammar grammar = new Grammar(bothPhrases);  
  grammar.Name = "backgroundColor";  
  return grammar;  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.Add(System.Speech.Recognition.Choices,System.Speech.Recognition.GrammarBuilder)" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.op_Implicit(System.Speech.Recognition.Choices)~System.Speech.Recognition.GrammarBuilder" />
      </Docs>
    </Member>
    <MemberGroup MemberName="op_Implicit">
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="51858-491">Konwertuje inny typ do <see cref="T:System.Speech.Recognition.GrammarBuilder" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51858-491">Converts another type to a <see cref="T:System.Speech.Recognition.GrammarBuilder" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51858-492">Niejawna konwersja tworzy nowe wystąpienie klasy <xref:System.Speech.Recognition.GrammarBuilder>.</span><span class="sxs-lookup"><span data-stu-id="51858-492">Implicit conversion creates a new instance of <xref:System.Speech.Recognition.GrammarBuilder>.</span></span> <span data-ttu-id="51858-493">Można rzutować następujących klas do <xref:System.Speech.Recognition.GrammarBuilder>.</span><span class="sxs-lookup"><span data-stu-id="51858-493">You can cast each of the following classes to a <xref:System.Speech.Recognition.GrammarBuilder>.</span></span>  
  
-   <xref:System.Speech.Recognition.Choices>  
  
-   <xref:System.Speech.Recognition.SemanticResultKey>  
  
-   <xref:System.Speech.Recognition.SemanticResultValue>  
  
-   <xref:System.String>  
  
 <span data-ttu-id="51858-494">Każdy z niejawnego rzutowania jest odpowiednikiem wywoływania konstruktora.</span><span class="sxs-lookup"><span data-stu-id="51858-494">Each of the implicit casts is equivalent to calling the constructor.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Speech.Recognition.GrammarBuilder.#ctor" />
      </Docs>
    </MemberGroup>
    <Member MemberName="op_Implicit">
      <MemberSignature Language="C#" Value="public static implicit operator System.Speech.Recognition.GrammarBuilder (System.Speech.Recognition.Choices choices);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname class System.Speech.Recognition.GrammarBuilder op_Implicit(class System.Speech.Recognition.Choices choices) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.op_Implicit(System.Speech.Recognition.Choices)~System.Speech.Recognition.GrammarBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static operator System::Speech::Recognition::GrammarBuilder ^(System::Speech::Recognition::Choices ^ choices);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Speech.Recognition.GrammarBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="choices" Type="System.Speech.Recognition.Choices" />
      </Parameters>
      <Docs>
        <param name="choices">
          <span data-ttu-id="51858-495">Zestaw alternatyw do konwersji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51858-495">The set of alternatives to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="51858-496">Konwertuje <see cref="T:System.Speech.Recognition.Choices" /> do obiektu <see cref="T:System.Speech.Recognition.GrammarBuilder" /> obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51858-496">Converts a <see cref="T:System.Speech.Recognition.Choices" /> object to a <see cref="T:System.Speech.Recognition.GrammarBuilder" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="51858-497">Skonwertowany <see cref="T:System.Speech.Recognition.Choices" /> obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51858-497">The converted <see cref="T:System.Speech.Recognition.Choices" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51858-498">Niejawna konwersja tworzy nowe wystąpienie klasy <xref:System.Speech.Recognition.GrammarBuilder>. Tego operatora konwersji jest odpowiednikiem wywołania <xref:System.Speech.Recognition.GrammarBuilder.%23ctor%2A> i określając `choices` dla `alternateChoices`.</span><span class="sxs-lookup"><span data-stu-id="51858-498">Implicit conversion creates a new instance of <xref:System.Speech.Recognition.GrammarBuilder>.This conversion operator is equivalent to calling <xref:System.Speech.Recognition.GrammarBuilder.%23ctor%2A> and specifying `choices` for the `alternateChoices`.</span></span>  
  
 <span data-ttu-id="51858-499">Jest równoważne metodę dla tego operatora <xref:System.Speech.Recognition.GrammarBuilder.%23ctor%28System.Speech.Recognition.Choices%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="51858-499">The equivalent method for this operator is <xref:System.Speech.Recognition.GrammarBuilder.%23ctor%28System.Speech.Recognition.Choices%29?displayProperty=nameWithType></span></span>  
  
## Examples  
 <span data-ttu-id="51858-500">Poniższy przykład tworzy gramatyki rozpoznawania mowy, która może rozpoznać odpowiedź na "tak" lub "no" zapytania.</span><span class="sxs-lookup"><span data-stu-id="51858-500">The following example creates a speech recognition grammar that can recognize a response to a "yes" or "no" question.</span></span> <span data-ttu-id="51858-501">Operator niejawnej konwersji jest używany do budowy <xref:System.Speech.Recognition.SemanticResultValue> obiekt z <xref:System.Speech.Recognition.Choices> obiektu w konstrukcji <xref:System.Speech.Recognition.Choices> obiektu z dwóch <xref:System.Speech.Recognition.SemanticResultValue> obiektów i w konstrukcji <xref:System.Speech.Recognition.Grammar> obiektu <xref:System.Speech.Recognition.SemanticResultKey> obiektu.</span><span class="sxs-lookup"><span data-stu-id="51858-501">The implicit conversion operator is used in the construction of a <xref:System.Speech.Recognition.SemanticResultValue> object from a <xref:System.Speech.Recognition.Choices> object, in the construction of a <xref:System.Speech.Recognition.Choices> object from two <xref:System.Speech.Recognition.SemanticResultValue> objects, and in the construction of a <xref:System.Speech.Recognition.Grammar> object from a <xref:System.Speech.Recognition.SemanticResultKey> object.</span></span>  
  
```csharp  
Choices yesChoices = new Choices(new string[] {"yes", "yup", "yah"});  
SemanticResultValue yesValue =  
  new SemanticResultValue(yesChoices, true);  
  
Choices noChoices = new Choices(new string[] { "no", "nope", "nah" });  
SemanticResultValue noValue =  
  new SemanticResultValue(noChoices, false);  
  
SemanticResultKey yesnoKey =  
  new SemanticResultKey("yesno", new Choices(new GrammarBuilder[] { yesValue, noValue }));  
  
Grammar yesnoGrammar = new Grammar(yesnoKey);  
yesnoGrammar.Name = "yesno";  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.#ctor" />
      </Docs>
    </Member>
    <Member MemberName="op_Implicit">
      <MemberSignature Language="C#" Value="public static implicit operator System.Speech.Recognition.GrammarBuilder (System.Speech.Recognition.SemanticResultKey semanticKey);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname class System.Speech.Recognition.GrammarBuilder op_Implicit(class System.Speech.Recognition.SemanticResultKey semanticKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.op_Implicit(System.Speech.Recognition.SemanticResultKey)~System.Speech.Recognition.GrammarBuilder" />
      <MemberSignature Language="VB.NET" Value="Public Shared Widening Operator CType (semanticKey As SemanticResultKey) As GrammarBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static operator System::Speech::Recognition::GrammarBuilder ^(System::Speech::Recognition::SemanticResultKey ^ semanticKey);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Speech.Recognition.GrammarBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="semanticKey" Type="System.Speech.Recognition.SemanticResultKey" />
      </Parameters>
      <Docs>
        <param name="semanticKey">
          <span data-ttu-id="51858-502">Klucz semantyki do konwersji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51858-502">The semantic key to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="51858-503">Konwertuje <see cref="T:System.Speech.Recognition.SemanticResultKey" /> do obiektu <see cref="T:System.Speech.Recognition.GrammarBuilder" /> obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51858-503">Converts a <see cref="T:System.Speech.Recognition.SemanticResultKey" /> object to a <see cref="T:System.Speech.Recognition.GrammarBuilder" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="51858-504">Skonwertowany <see cref="T:System.Speech.Recognition.SemanticResultKey" /> obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51858-504">The converted <see cref="T:System.Speech.Recognition.SemanticResultKey" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51858-505">Niejawna konwersja tworzy nowe wystąpienie klasy <xref:System.Speech.Recognition.GrammarBuilder>.</span><span class="sxs-lookup"><span data-stu-id="51858-505">Implicit conversion creates a new instance of <xref:System.Speech.Recognition.GrammarBuilder>.</span></span> <span data-ttu-id="51858-506">Tego operatora konwersji jest odpowiednikiem wywołania <xref:System.Speech.Recognition.GrammarBuilder.%23ctor%2A> i określając `semanticKey` dla `key`.</span><span class="sxs-lookup"><span data-stu-id="51858-506">This conversion operator is equivalent to calling <xref:System.Speech.Recognition.GrammarBuilder.%23ctor%2A> and specifying `semanticKey` for the `key`.</span></span>  
  
 <span data-ttu-id="51858-507">Jest równoważne metodę dla tego operatora <xref:System.Speech.Recognition.GrammarBuilder.%23ctor%28System.Speech.Recognition.SemanticResultKey%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="51858-507">The equivalent method for this operator is <xref:System.Speech.Recognition.GrammarBuilder.%23ctor%28System.Speech.Recognition.SemanticResultKey%29?displayProperty=nameWithType></span></span>  
  
## Examples  
 <span data-ttu-id="51858-508">Poniższy przykład tworzy gramatyki rozpoznawania mowy, która może rozpoznać odpowiedź na "tak" lub "no" zapytania.</span><span class="sxs-lookup"><span data-stu-id="51858-508">The following example creates a speech recognition grammar that can recognize a response to a "yes" or "no" question.</span></span> <span data-ttu-id="51858-509">Operator niejawnej konwersji jest używany do budowy <xref:System.Speech.Recognition.SemanticResultValue> obiekt z <xref:System.Speech.Recognition.Choices> obiektu w konstrukcji <xref:System.Speech.Recognition.Choices> obiektu z dwóch <xref:System.Speech.Recognition.SemanticResultValue> obiektów i w konstrukcji <xref:System.Speech.Recognition.Grammar> obiektu <xref:System.Speech.Recognition.SemanticResultKey> obiektu.</span><span class="sxs-lookup"><span data-stu-id="51858-509">The implicit conversion operator is used in the construction of a <xref:System.Speech.Recognition.SemanticResultValue> object from a <xref:System.Speech.Recognition.Choices> object, in the construction of a <xref:System.Speech.Recognition.Choices> object from two <xref:System.Speech.Recognition.SemanticResultValue> objects, and in the construction of a <xref:System.Speech.Recognition.Grammar> object from a <xref:System.Speech.Recognition.SemanticResultKey> object.</span></span>  
  
```csharp  
Choices yesChoices = new Choices(new string[] {"yes", "yup", "yah"});  
SemanticResultValue yesValue =  
  new SemanticResultValue(yesChoices, true);  
  
Choices noChoices = new Choices(new string[] { "no", "nope", "nah" });  
SemanticResultValue noValue =  
  new SemanticResultValue(noChoices, false);  
  
SemanticResultKey yesnoKey =  
  new SemanticResultKey("yesno", new Choices(new GrammarBuilder[] { yesValue, noValue }));  
  
Grammar yesnoGrammar = new Grammar(yesnoKey);  
yesnoGrammar.Name = "yesno";  
  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.#ctor" />
      </Docs>
    </Member>
    <Member MemberName="op_Implicit">
      <MemberSignature Language="C#" Value="public static implicit operator System.Speech.Recognition.GrammarBuilder (System.Speech.Recognition.SemanticResultValue semanticValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname class System.Speech.Recognition.GrammarBuilder op_Implicit(class System.Speech.Recognition.SemanticResultValue semanticValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.op_Implicit(System.Speech.Recognition.SemanticResultValue)~System.Speech.Recognition.GrammarBuilder" />
      <MemberSignature Language="VB.NET" Value="Public Shared Widening Operator CType (semanticValue As SemanticResultValue) As GrammarBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static operator System::Speech::Recognition::GrammarBuilder ^(System::Speech::Recognition::SemanticResultValue ^ semanticValue);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Speech.Recognition.GrammarBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="semanticValue" Type="System.Speech.Recognition.SemanticResultValue" />
      </Parameters>
      <Docs>
        <param name="semanticValue">
          <span data-ttu-id="51858-510">
            <see cref="T:System.Speech.Recognition.SemanticResultValue" /> Obiektu do skonwertowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51858-510">The <see cref="T:System.Speech.Recognition.SemanticResultValue" /> object to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="51858-511">Konwertuje <see cref="T:System.Speech.Recognition.SemanticResultValue" /> do obiektu <see cref="T:System.Speech.Recognition.GrammarBuilder" /> obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51858-511">Converts a <see cref="T:System.Speech.Recognition.SemanticResultValue" /> object to a <see cref="T:System.Speech.Recognition.GrammarBuilder" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="51858-512">Skonwertowany <see cref="T:System.Speech.Recognition.SemanticResultValue" /> obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51858-512">The converted <see cref="T:System.Speech.Recognition.SemanticResultValue" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51858-513">Niejawna konwersja tworzy nowe wystąpienie klasy <xref:System.Speech.Recognition.GrammarBuilder>.</span><span class="sxs-lookup"><span data-stu-id="51858-513">Implicit conversion creates a new instance of <xref:System.Speech.Recognition.GrammarBuilder>.</span></span> <span data-ttu-id="51858-514">Tego operatora konwersji jest odpowiednikiem wywołania <xref:System.Speech.Recognition.GrammarBuilder.%23ctor%2A> i określając `semanticValue` dla `value`.</span><span class="sxs-lookup"><span data-stu-id="51858-514">This conversion operator is equivalent to calling <xref:System.Speech.Recognition.GrammarBuilder.%23ctor%2A> and specifying `semanticValue` for the `value`.</span></span>  
  
 <span data-ttu-id="51858-515">Jest równoważne metodę dla tego operatora <xref:System.Speech.Recognition.GrammarBuilder.%23ctor%28System.Speech.Recognition.SemanticResultValue%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="51858-515">The equivalent method for this operator is <xref:System.Speech.Recognition.GrammarBuilder.%23ctor%28System.Speech.Recognition.SemanticResultValue%29?displayProperty=nameWithType></span></span>  
  
## Examples  
 <span data-ttu-id="51858-516">Poniższy przykład tworzy gramatyki rozpoznawania mowy, która może rozpoznać odpowiedź na "tak" lub "no" zapytania.</span><span class="sxs-lookup"><span data-stu-id="51858-516">The following example creates a speech recognition grammar that can recognize a response to a "yes" or "no" question.</span></span> <span data-ttu-id="51858-517">Operator niejawnej konwersji jest używany do budowy <xref:System.Speech.Recognition.SemanticResultValue> obiekt z <xref:System.Speech.Recognition.Choices>obiektu w konstrukcji <xref:System.Speech.Recognition.Choices> obiektu z dwóch <xref:System.Speech.Recognition.SemanticResultValue> obiektów i w konstrukcji <xref:System.Speech.Recognition.Grammar> obiektu <xref:System.Speech.Recognition.SemanticResultKey> obiektu.</span><span class="sxs-lookup"><span data-stu-id="51858-517">The implicit conversion operator is used in the construction of a <xref:System.Speech.Recognition.SemanticResultValue> object from a <xref:System.Speech.Recognition.Choices>object, in the construction of a <xref:System.Speech.Recognition.Choices> object from two <xref:System.Speech.Recognition.SemanticResultValue> objects, and in the construction of a <xref:System.Speech.Recognition.Grammar> object from a <xref:System.Speech.Recognition.SemanticResultKey> object.</span></span>  
  
```csharp  
Choices yesChoices = new Choices(new string[] {"yes", "yup", "yah"});  
SemanticResultValue yesValue =  
  new SemanticResultValue(yesChoices, true);  
  
Choices noChoices = new Choices(new string[] { "no", "nope", "nah" });  
SemanticResultValue noValue =  
  new SemanticResultValue(noChoices, false);  
  
SemanticResultKey yesnoKey =  
  new SemanticResultKey("yesno", new Choices(new GrammarBuilder[] { yesValue, noValue }));  
  
Grammar yesnoGrammar = new Grammar(yesnoKey);  
yesnoGrammar.Name = "yesno";  
  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.#ctor" />
      </Docs>
    </Member>
    <Member MemberName="op_Implicit">
      <MemberSignature Language="C#" Value="public static implicit operator System.Speech.Recognition.GrammarBuilder (string phrase);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname class System.Speech.Recognition.GrammarBuilder op_Implicit(string phrase) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.op_Implicit(System.String)~System.Speech.Recognition.GrammarBuilder" />
      <MemberSignature Language="VB.NET" Value="Public Shared Widening Operator CType (phrase As String) As GrammarBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static operator System::Speech::Recognition::GrammarBuilder ^(System::String ^ phrase);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Speech.Recognition.GrammarBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="phrase" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="phrase">
          <span data-ttu-id="51858-518">Ciąg do konwersji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51858-518">The string to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="51858-519">Konwertuje ciąg na <see cref="T:System.Speech.Recognition.GrammarBuilder" /> obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51858-519">Converts a string to a <see cref="T:System.Speech.Recognition.GrammarBuilder" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="51858-520">Skonwertowany ciąg.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51858-520">The converted string.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51858-521">Niejawna konwersja tworzy nowe wystąpienie klasy <xref:System.Speech.Recognition.GrammarBuilder>.</span><span class="sxs-lookup"><span data-stu-id="51858-521">Implicit conversion creates a new instance of <xref:System.Speech.Recognition.GrammarBuilder>.</span></span> <span data-ttu-id="51858-522">Tego operatora konwersji jest odpowiednikiem wywołania <xref:System.Speech.Recognition.GrammarBuilder.%23ctor%2A> i określając takie same `phrase`.</span><span class="sxs-lookup"><span data-stu-id="51858-522">This conversion operator is equivalent to calling <xref:System.Speech.Recognition.GrammarBuilder.%23ctor%2A> and specifying the same `phrase`.</span></span>  
  
 <span data-ttu-id="51858-523">Jest równoważne metodę dla tego operatora <xref:System.Speech.Recognition.GrammarBuilder.%23ctor%28System.String%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="51858-523">The equivalent method for this operator is <xref:System.Speech.Recognition.GrammarBuilder.%23ctor%28System.String%29?displayProperty=nameWithType></span></span>  
  
## Examples  
 <span data-ttu-id="51858-524">W poniższym przykładzie użyto <xref:System.Speech.Recognition.GrammarBuilder> i <xref:System.Speech.Recognition.Choices> obiekty do skonstruowania gramatyki, która może rozpoznać jednej z dwóch wyrażeń "tło *colorChoice*" lub "ustawioną tła *colorChoice*".</span><span class="sxs-lookup"><span data-stu-id="51858-524">The following example uses  <xref:System.Speech.Recognition.GrammarBuilder> and <xref:System.Speech.Recognition.Choices> objects to construct a grammar that can recognize either of the two phrases, "Make background *colorChoice*" or "Set background to *colorChoice*".</span></span>  
  
 <span data-ttu-id="51858-525">Po utworzeniu listy dopuszczalne wartości *colorChoice* przy użyciu <xref:System.Speech.Recognition.Choices> obiektu, w przykładzie są inicjowane dwa <xref:System.Speech.Recognition.GrammarBuilder> obiektów, `makePhrase` i `setPhrase`, przy użyciu niejawna konwersja z ciągu obiekty.</span><span class="sxs-lookup"><span data-stu-id="51858-525">After creating a list of acceptable values for *colorChoice* using a <xref:System.Speech.Recognition.Choices> object, the example initializes two <xref:System.Speech.Recognition.GrammarBuilder> objects, `makePhrase` and `setPhrase`, using implicit conversion from string objects.</span></span>  
  
 <span data-ttu-id="51858-526">W przykładzie jest tworzony na koniec <xref:System.Speech.Recognition.Grammar> obiekt z <xref:System.Speech.Recognition.Choices> rzutować obiektu na <xref:System.Speech.Recognition.GrammarBuilder> obiektu.</span><span class="sxs-lookup"><span data-stu-id="51858-526">The example finally creates a <xref:System.Speech.Recognition.Grammar> object from a <xref:System.Speech.Recognition.Choices> object cast to a <xref:System.Speech.Recognition.GrammarBuilder> object.</span></span>  
  
```csharp  
private Grammar CreateColorGrammar()  
{  
  
  // Create a set of color choices.  
  Choices colorChoice = new Choices(new string[] {"red", "green", "blue"});  
  GrammarBuilder colorElement = new GrammarBuilder(colorChoice);  
  
  // Create grammar builders for the two versions of the phrase.  
  GrammarBuilder makePhrase = new GrammarBuilder("Make background");  
  makePhrase.Append(colorElement);  
  GrammarBuilder setPhrase = new GrammarBuilder("Set background to");  
  setPhrase.Append(colorElement);  
  
  // Create a Choices for the two alternative phrases, convert the Choices  
  // to a GrammarBuilder, and construct the Grammar object from the result.  
  Choices bothChoices = new Choices(new GrammarBuilder[] {makePhrase, setPhrase});  
  Grammar grammar = new Grammar((GrammarBuilder)bothChoices);  
  grammar.Name = "backgroundColor";  
  return grammar;  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.#ctor" />
      </Docs>
    </Member>
  </Members>
</Type>