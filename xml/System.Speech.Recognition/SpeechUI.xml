<Type Name="SpeechUI" FullName="System.Speech.Recognition.SpeechUI">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="ee53288b6f1e70f108f7bc39510d2a0c85fecc7e" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36608587" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class SpeechUI" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SpeechUI extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Speech.Recognition.SpeechUI" />
  <TypeSignature Language="VB.NET" Value="Public Class SpeechUI" />
  <TypeSignature Language="C++ CLI" Value="public ref class SpeechUI" />
  <TypeSignature Language="F#" Value="type SpeechUI = class" />
  <AssemblyInfo>
    <AssemblyName>System.Speech</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Udostępnia tekstu oraz informacje o stanie dla operacji rozpoznawania będzie wyświetlana w interfejsie użytkownika platformy mowy.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Elementy członkowskie <xref:System.Speech.Recognition.SpeechUI> klasy można wskazać dokładne opinii dla użytkownika końcowego za pośrednictwem interfejsu użytkownika rozpoznawania mowy. Aplikacja może zwrócić dowolnego tekstu i powodzeń/niepowodzeń informacji za pomocą tej klasy.  
  
   
  
## Examples  
 Poniższy przykład dotyczy programu obsługi dla <xref:System.Speech.Recognition.Grammar.SpeechRecognized> zdarzeń. To zdarzenie jest używany przez <xref:System.Speech.Recognition.Grammar> zaprojektowano w celu obsługi wprowadzania hasła w postaci "hasło jest...".  
  
 Jeśli hasło nie jest obecny lub jest ona nieprawidłowa, <xref:System.Speech.Recognition.SpeechUI.SendTextFeedback%2A> wysyła informacje o błędzie do interfejsu użytkownika platformy mowy.  
  
```  
  
grammar.SpeechRecognized +=   
delegate(object sender, SpeechRecognizedEventArgs eventArgs)   
{  
  SemanticValue semantics = eventArgs.Result.Semantics;  
  RecognitionResult result=eventArgs.Result;  
  
  if (!semantics.ContainsKey("Password"))   
  {  
    SpeechUI.SendTextFeedback(eventArgs.Result, "No Password Provided", false);  
  }  
  else   
  {  
    RecognizedAudio pwdAudio = result.GetAudioForWordRange(  
                  result.Words[3],  
                  result.Words[result.Words.Count - 1]);  
    MemoryStream pwdMemoryStream = new MemoryStream();  
    pwdAudio.WriteToAudioStream(pwdMemoryStream);  
    if (!IsValidPwd(pwdMemoryStream))   
    {  
      string badPwd = System.IO.Path.GetTempPath() +   
              "BadPwd" + (new Random()).Next().ToString() + ".wav";  
      FileStream waveStream = new FileStream(badPwd, FileMode.Create);  
      pwdAudio.WriteToWaveStream(waveStream);  
      waveStream.Flush();  
      waveStream.Close();  
      SpeechUI.SendTextFeedback(eventArgs.Result, "Invalid Password", false);  
    }  
  }  
};  
```  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="SendTextFeedback">
      <MemberSignature Language="C#" Value="public static bool SendTextFeedback (System.Speech.Recognition.RecognitionResult result, string feedback, bool isSuccessfulAction);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool SendTextFeedback(class System.Speech.Recognition.RecognitionResult result, string feedback, bool isSuccessfulAction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.SpeechUI.SendTextFeedback(System.Speech.Recognition.RecognitionResult,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SendTextFeedback (result As RecognitionResult, feedback As String, isSuccessfulAction As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool SendTextFeedback(System::Speech::Recognition::RecognitionResult ^ result, System::String ^ feedback, bool isSuccessfulAction);" />
      <MemberSignature Language="F#" Value="static member SendTextFeedback : System.Speech.Recognition.RecognitionResult * string * bool -&gt; bool" Usage="System.Speech.Recognition.SpeechUI.SendTextFeedback (result, feedback, isSuccessfulAction)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.Speech.Recognition.RecognitionResult" />
        <Parameter Name="feedback" Type="System.String" />
        <Parameter Name="isSuccessfulAction" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="result">Prawidłowy <see cref="T:System.Speech.Recognition.RecognitionResult" /> wystąpienia.</param>
        <param name="feedback">A <see cref="T:System.String" /> zawierające komentarz dotyczący operacji rozpoznawania wytworzonego <see cref="T:System.Speech.Recognition.RecognitionResult" /><c>wynik</c>.</param>
        <param name="isSuccessfulAction">A <see langword="bool" /> wskazującą, czy aplikacja uznane za operacji rozpoznawania sukcesu.</param>
        <summary>Wysyła stanu i opisu interfejsu użytkownika platformy mowy o stanie operacji rozpoznawania.</summary>
        <returns>
          <see langword="true" /> Jeśli dane przekazane do metody (<paramref name="Feedback" />, i <paramref name="isSuccessfulAction" />) został pomyślnie udostępnione do interfejsu użytkownika platformy mowy i <see langword="false" /> Jeśli działanie nie powiodło się.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Speech.Recognition.SpeechUI.SendTextFeedback%2A> można wskazać, że operacja rozpoznawania nie spełniają pewne kryteria, nawet wtedy, gdy dane wejściowe został rozpoznany.  
  
 Przykładem jest weryfikacja informacji kodu zabezpieczeń, których danych wejściowych pełni został rozpoznany, ale informacje weryfikacji jest nieprawidłowa.  
  
   
  
## Examples  
 Poniższy przykład dotyczy programu obsługi dla <xref:System.Speech.Recognition.Grammar.SpeechRecognized> zdarzeń. To zdarzenie jest używany przez <xref:System.Speech.Recognition.Grammar> zaprojektowano w celu obsługi wprowadzania hasła w postaci, "hasło jest...".  
  
 Jeśli hasło nie jest obecny lub jest ona nieprawidłowa, **SendTextFeedback** służy do wysyłania informacji o błędach do interfejsu użytkownika platformy mowy.  
  
```  
  
grammar.SpeechRecognized +=  
delegate(object sender, SpeechRecognizedEventArgs eventArgs)   
{  
  SemanticValue semantics = eventArgs.Result.Semantics;  
  RecognitionResult result=eventArgs.Result;  
  
  if (!semantics.ContainsKey("Password"))   
  {  
    SpeechUI.SendTextFeedback(eventArgs.Result, "No Password Provided", false);  
  }  
  else  
  {  
    RecognizedAudio pwdAudio = result.GetAudioForWordRange(  
              result.Words[3],  
              result.Words[result.Words.Count - 1]);  
    MemoryStream pwdMemoryStream = new MemoryStream();  
    pwdAudio.WriteToAudioStream(pwdMemoryStream);  
    if (!IsValidPwd(pwdMemoryStream))   
    {  
      string badPwd = System.IO.Path.GetTempPath() + "BadPwd" +   
               (new Random()).Next().ToString() + ".wav";  
      FileStream waveStream = new FileStream(badPwd, FileMode.Create);  
      pwdAudio.WriteToWaveStream(waveStream);  
      waveStream.Flush();  
      waveStream.Close();  
      SpeechUI.SendTextFeedback(eventArgs.Result, "Invalid Password", false);  
    }  
  }  
};  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>