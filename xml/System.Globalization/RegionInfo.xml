<Type Name="RegionInfo" FullName="System.Globalization.RegionInfo">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="920cd2350924ca1a4d0503b4972b6b151059aa67" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36563357" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class RegionInfo" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi serializable beforefieldinit RegionInfo extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Globalization.RegionInfo" />
  <TypeSignature Language="VB.NET" Value="Public Class RegionInfo" />
  <TypeSignature Language="C++ CLI" Value="public ref class RegionInfo" />
  <TypeSignature Language="F#" Value="type RegionInfo = class" />
  <AssemblyInfo>
    <AssemblyName>System.Globalization</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Zawiera informacje o kraju/regionie.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 W odróżnieniu od <xref:System.Globalization.CultureInfo> klasy <xref:System.Globalization.RegionInfo> klasy nie odpowiada preferencje użytkownika i niezależnie od języka i kultury użytkownika.  
  
## <a name="names-associated-with-a-regioninfo-object"></a>Nazwy skojarzone z obiektem RegionInfo  
 Nazwa <xref:System.Globalization.RegionInfo> obiektu jest jednym z kodów dwuliterowych zdefiniowane w normy ISO 3166 w kraju/regionie. Case nie ma znaczenia. <xref:System.Globalization.RegionInfo.Name%2A>, <xref:System.Globalization.RegionInfo.TwoLetterISORegionName%2A>, I <xref:System.Globalization.RegionInfo.ThreeLetterISORegionName%2A> właściwości zwracają odpowiednich kodów pisane wielkimi literami. Dla bieżącej listy <xref:System.Globalization.RegionInfo> nazw, zobacz [angielski nazwy kraju i elementy kodu](http://go.microsoft.com/fwlink/?LinkId=190591) w witrynie sieci Web ISO.  
  
## <a name="instantiating-a-regioninfo-object"></a>Utworzenie wystąpienia obiektu RegionInfo  
 Można utworzyć wystąpienia <xref:System.Globalization.RegionInfo> obiektu, należy przekazać <xref:System.Globalization.RegionInfo.%23ctor%28System.String%29> Konstruktor albo nazwę regionu dwuliterowych, takich jak "PL" dla Stanów Zjednoczonych lub nazwę określoną kulturę, takie jak "en US" w języku angielskim (Stany Zjednoczone). Firma Microsoft zaleca jednak użyć określona nazwa kultury zamiast nazwy dwuliterowych regionu, ponieważ <xref:System.Globalization.RegionInfo> obiekt nie jest całkowicie niezależny od języka. Kilka <xref:System.Globalization.RegionInfo> właściwości, w tym <xref:System.Globalization.RegionInfo.DisplayName%2A>, <xref:System.Globalization.RegionInfo.NativeName%2A>, i <xref:System.Globalization.RegionInfo.CurrencyNativeName%2A>, zależą od nazwy kultury.  
  
 Poniższy przykład przedstawia różnice <xref:System.Globalization.RegionInfo> trzy obiekty, które reprezentują Belgii wartości właściwości. Pierwszy jest utworzonych na podstawie nazwy regionu (BE), podczas gdy drugie i trzecie są utworzone z nazwy kultury (fr-BE francuski (Belgia) i nl-BE dla holenderski (Belgia) odpowiednio). W przykładzie użyto odbicia można pobrać wartości właściwości każdego <xref:System.Globalization.RegionInfo> obiektu.  
  
 [!code-csharp[System.Globalization.RegionInfo#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.RegionInfo/CS/propertyvalues1.cs#2)]
 [!code-vb[System.Globalization.RegionInfo#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.RegionInfo/VB/propertyvalues1.vb#2)]  
  
 W scenariuszach takich jak użyć nazwy kultury zamiast nazw kraj/region można utworzyć wystąpienia <xref:System.Globalization.RegionInfo> obiektu:  
  
-   Gdy nazwa języka odgrywa kluczową rolę. Na przykład nazwy kultury es US, prawdopodobnie należy aplikacji do wyświetlenia "Estados United" zamiast "Stanów Zjednoczonych". Przy użyciu nazwy kraj/region (US) tylko wydajność "Stanów Zjednoczonych" niezależnie od języka, więc powinien współpracować z nazwę kultury zamiast tego.  
  
-   Kiedy należy rozważyć różnice skryptu. Na przykład kraj/region AZ podchodzi do ich kultury, które mają nazwy az-Latn-AZ i az-Cyrl-AZ i Latin i cyrylicy skrypty może być bardzo różnią się w tym kraju/regionie.  
  
-   Podczas konserwacji szczegółów jest ważne. Wartości zwracane przez <xref:System.Globalization.RegionInfo> członkowie mogą się różnić w zależności od tego, czy <xref:System.Globalization.RegionInfo> utworzono wystąpienie obiektu przy użyciu nazwy kultury lub nazwę regionu. Na przykład w poniższej tabeli przedstawiono różnice w zamian podczas obliczania wartości <xref:System.Globalization.RegionInfo> utworzeniu wystąpienia obiektu przy użyciu region "PL", kultury "en US" i kultury "es US".  
  
    |Element członkowski|"US"|"en US"|"es pl"|  
    |------------|----------|--------------|--------------|  
    |<xref:System.Globalization.RegionInfo.CurrencyNativeName%2A>|Dolara Amerykańskiego|Dolara Amerykańskiego|Dólar de EE. UU.|  
    |<xref:System.Globalization.RegionInfo.Name%2A>|US|EN US|es-US|  
    |<xref:System.Globalization.RegionInfo.NativeName%2A>|Stany Zjednoczone|Stany Zjednoczone|United Estados|  
    |<xref:System.Globalization.RegionInfo.ToString%2A>|US|EN US|es-US|  
  
   
  
## Examples  
 W poniższym przykładzie pokazano kilka elementów członkowskich z <xref:System.Globalization.RegionInfo> klasy.  
  
 [!code-cpp[System.Globalization.RegionInfo#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.RegionInfo/CPP/regioninfo.cpp#1)]
 [!code-csharp[System.Globalization.RegionInfo#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.RegionInfo/CS/regioninfo.cs#1)]
 [!code-vb[System.Globalization.RegionInfo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.RegionInfo/VB/regioninfo.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Globalization.CultureInfo" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Globalization.RegionInfo" /> klasy.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RegionInfo (int culture);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.RegionInfo.#ctor(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (culture As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RegionInfo(int culture);" />
      <MemberSignature Language="F#" Value="new System.Globalization.RegionInfo : int -&gt; System.Globalization.RegionInfo" Usage="new System.Globalization.RegionInfo culture" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="culture" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="culture">Identyfikator kultury.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Globalization.RegionInfo" /> klasy oparte na kraj/region, skojarzone z identyfikatorem określonej kultury.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Globalization.RegionInfo.%23ctor%28System.String%29> jest zalecana konstruktora dla wystąpienia <xref:System.Globalization.RegionInfo> obiektu. W odróżnieniu od <xref:System.Globalization.RegionInfo.%23ctor%28System.Int32%29> Konstruktor, który wymaga identyfikator kultury liczbowego jako parametru, jego parametru jest bardziej przejrzysta kultury nazwa lub krajowych kodu.  
  
 Identyfikator kultury jest mapowany na odpowiedni identyfikator ustawień regionalnych National obsługi Language (NLS). Kultura szczegółowe informacje są wyświetlane w [dokumentacja interfejsu API National obsługi Language (NLS)](http://go.microsoft.com/fwlink/?LinkId=200048) w Developer Center globalne Go.  
  
 Wartość <xref:System.Globalization.RegionInfo.Name%2A> właściwości nowej <xref:System.Globalization.RegionInfo> obiekt utworzone przez wywołanie tego konstruktora jest kod ISO 3166 2 litery kraj/region, nie połączonych języka i kod kraju/regionu. Na przykład jeśli <xref:System.Globalization.RegionInfo> wystąpienie obiektu z identyfikatorem kultury 0x0409 dla kultury angielski (Stany Zjednoczone), wartość <xref:System.Globalization.RegionInfo.Name%2A> właściwości to "US". Z kolei jeśli <xref:System.Globalization.RegionInfo> utworzeniu wystąpienia obiektu z językiem połączonych i kraj/region, kod en US dla kultury angielski (Stany Zjednoczone), wartość <xref:System.Globalization.RegionInfo.Name%2A> właściwość jest "en US".  
  
   
  
## Examples  
 Poniższy przykład kodu porównuje dwa wystąpienia <xref:System.Globalization.RegionInfo> utworzonych inaczej.  
  
 [!code-cpp[System.Globalization.RegionInfo_Equals#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.RegionInfo_Equals/CPP/regioninfo_equals.cpp#1)]
 [!code-csharp[System.Globalization.RegionInfo_Equals#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.RegionInfo_Equals/CS/regioninfo_equals.cs#1)]
 [!code-vb[System.Globalization.RegionInfo_Equals#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.RegionInfo_Equals/VB/regioninfo_equals.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="culture" /> Określa albo niezmienna, niestandardowych lub neutralne kultury.</exception>
        <altmember cref="T:System.Globalization.CultureInfo" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RegionInfo (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.RegionInfo.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RegionInfo(System::String ^ name);" />
      <MemberSignature Language="F#" Value="new System.Globalization.RegionInfo : string -&gt; System.Globalization.RegionInfo" Usage="new System.Globalization.RegionInfo name" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">Ciąg, który zawiera kod dwuliterowych zdefiniowane w normy ISO 3166 w kraju/regionie.  - lub - ciąg znaków zawierający nazwę kultury określoną kulturę, niestandardowe kultury lub kultury tylko do systemu Windows. Jeśli nazwa kultury nie jest w formacie RFC 4646, aplikacja musi podawać nazwę kultury całego zamiast właśnie kraju/regionie.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Globalization.RegionInfo" /> klasy oparte na kraj/region lub określoną kulturę, określony przez nazwę.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `name` Parametr jest jednym z kodów zdefiniowane dla kraj/region lub nazwy kultury określonej, niestandardowych lub tylko do systemu Windows. Case nie ma znaczenia. Jednak <xref:System.Globalization.RegionInfo.Name%2A>, <xref:System.Globalization.RegionInfo.TwoLetterISORegionName%2A>i <xref:System.Globalization.RegionInfo.ThreeLetterISORegionName%2A> właściwości zwraca nazwę określonego kodu lub kultury pisane wielkimi literami.  
  
 Wstępnie zdefiniowane <xref:System.Globalization.RegionInfo> nazwy są wymienione w [nazwy kraju i elementy kodu](http://go.microsoft.com/fwlink/?LinkId=190591) w witrynie sieci Web ISO.  
  
 Należy podać nazwę określoną kulturę, a nie tylko nazwę kraju/regionu w `name` parametru. Na przykład en US angielski (Stany Zjednoczone) lub es US dla języka hiszpańskiego (Stany Zjednoczone) jest preferowana US ponieważ właściwości, takie jak <xref:System.Globalization.RegionInfo.NativeName%2A> i <xref:System.Globalization.RegionInfo.CurrencyNativeName%2A> odzwierciedlają określonego języka. preferowane AZ jest az-Latn-AZ lub az-Cyrl-AZ ponieważ właściwości, takie jak <xref:System.Globalization.RegionInfo.NativeName%2A>, <xref:System.Globalization.RegionInfo.CurrencyNativeName%2A>, i <xref:System.Globalization.RegionInfo.CurrencySymbol%2A> odzwierciedlają określonego skryptu.  Nazwy kultury wstępnie zdefiniowane są wymienione w [dokumentacja interfejsu API National obsługi Language (NLS)](http://go.microsoft.com/fwlink/?LinkId=200048) w Developer Center globalne Go. Należy pamiętać, że zgłasza wywołania do tego konstruktora <xref:System.ArgumentException> Jeśli `name` to kultura neutralna (na przykład en w języku angielskim).  
  
   
  
## Examples  
 Poniższy przykład kodu porównuje dwa wystąpienia <xref:System.Globalization.RegionInfo> utworzonych inaczej.  
  
 [!code-cpp[System.Globalization.RegionInfo_Equals#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.RegionInfo_Equals/CPP/regioninfo_equals.cpp#1)]
 [!code-csharp[System.Globalization.RegionInfo_Equals#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.RegionInfo_Equals/CS/regioninfo_equals.cs#1)]
 [!code-vb[System.Globalization.RegionInfo_Equals#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.RegionInfo_Equals/VB/regioninfo_equals.vb#1)]  
  
 Poniższy przykład kodu tworzy wystąpienia <xref:System.Globalization.RegionInfo> przy użyciu nazwy kultury.  
  
 [!code-cpp[System.Globalization.RegionInfo.ctorCultureName#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.RegionInfo.ctorCultureName/CPP/regioninfo_ctorculturename.cpp#1)]
 [!code-csharp[System.Globalization.RegionInfo.ctorCultureName#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.RegionInfo.ctorCultureName/CS/regioninfo_ctorculturename.cs#1)]
 [!code-vb[System.Globalization.RegionInfo.ctorCultureName#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.RegionInfo.ctorCultureName/VB/regioninfo_ctorculturename.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="name" /> jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="name" /> nie jest prawidłowy kraj/region, nazwę lub określona nazwa kultury.</exception>
        <block subset="none" type="usage">
          <para>Ten konstruktor akceptuje tylko określone kultury lub kodów kraju/regionu. Jednak niektóre nazwy kultury neutralnej są takie same jak kodów kraju/regionu. W takim przypadku <paramref name="name" /> jest interpretowany jako kod kraju/regionu, a nie nazwę kultury neutralnej i ten konstruktor nie zgłasza <see cref="T:System.ArgumentException" />.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="CurrencyEnglishName">
      <MemberSignature Language="C#" Value="public virtual string CurrencyEnglishName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CurrencyEnglishName" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.RegionInfo.CurrencyEnglishName" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CurrencyEnglishName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ CurrencyEnglishName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CurrencyEnglishName : string" Usage="System.Globalization.RegionInfo.CurrencyEnglishName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera nazwę, a w języku angielskim, to waluta stosowana w kraju/regionie.</summary>
        <value>Nazwa w języku angielskim, to waluta stosowana w kraju/regionie.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład kodu pokazuje <xref:System.Globalization.RegionInfo.CurrencyEnglishName%2A> właściwości.  
  
 [!code-cpp[sys.glob.regioninfo.rgn5props#1](~/samples/snippets/cpp/VS_Snippets_CLR/sys.glob.regioninfo.rgn5props/cpp/rgn5props.cpp#1)]
 [!code-csharp[sys.glob.regioninfo.rgn5props#1](~/samples/snippets/csharp/VS_Snippets_CLR/sys.glob.regioninfo.rgn5props/CS/rgn5props.cs#1)]
 [!code-vb[sys.glob.regioninfo.rgn5props#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/sys.glob.regioninfo.rgn5props/VB/rgn5props.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CurrencyNativeName">
      <MemberSignature Language="C#" Value="public virtual string CurrencyNativeName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CurrencyNativeName" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.RegionInfo.CurrencyNativeName" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CurrencyNativeName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ CurrencyNativeName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CurrencyNativeName : string" Usage="System.Globalization.RegionInfo.CurrencyNativeName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera nazwę to waluta stosowana w kraju/regionu, sformatowany w języku macierzystym kraju/regionu.</summary>
        <value>Natywny nazwa to waluta stosowana w kraju/regionu, w formacie w język skojarzony z normy ISO 3166 kod kraju/regionu.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli bieżący <xref:System.Globalization.RegionInfo> obiekt jest tworzony z określoną kulturą i więcej niż jednym języku jest używany w odpowiedniej kraj/region, <xref:System.Globalization.RegionInfo.CurrencyNativeName%2A> właściwość pobiera nazwę waluty skojarzone z określoną kulturę.  
  
 Wartość tej właściwości zależy od języka, który jest skojarzony z określonego kraju/regionu. W związku z tym jeśli zamierzasz używać <xref:System.Globalization.RegionInfo.CurrencyNativeName%2A> właściwość, należy wystąpienia <xref:System.Globalization.RegionInfo> obiektu przez przekazywanie <xref:System.Globalization.RegionInfo.%23ctor%28System.String%29> Konstruktor Scalonej kod język i kraj/region. Na przykład jeśli <xref:System.Globalization.RegionInfo> utworzeniu wystąpienia obiektu z połączonych język i kraj/region kodem "en-CA" dla języka angielskiego (Kanada) wartość z jego <xref:System.Globalization.RegionInfo.CurrencyNativeName%2A> właściwość jest "Kanadyjskich dolara ($)". Jeśli zostanie on uruchomiony z połączonych język i kraj/region kodem "fr-CA" Francuski (Kanada) wartość jego <xref:System.Globalization.RegionInfo.CurrencyNativeName%2A> właściwość jest "Canadien dolara ($)". Dlatego utworzenie `RegionInfo` obiektu tylko nazwie kraj/region ("CA" w tym przypadku) nie jest wystarczająco konkretny, aby odróżnić nazwa odpowiedniej waluty natywnego.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje <xref:System.Globalization.RegionInfo.CurrencyNativeName%2A> właściwości.  
  
 [!code-cpp[sys.glob.regioninfo.rgn5props#1](~/samples/snippets/cpp/VS_Snippets_CLR/sys.glob.regioninfo.rgn5props/cpp/rgn5props.cpp#1)]
 [!code-csharp[sys.glob.regioninfo.rgn5props#1](~/samples/snippets/csharp/VS_Snippets_CLR/sys.glob.regioninfo.rgn5props/CS/rgn5props.cs#1)]
 [!code-vb[sys.glob.regioninfo.rgn5props#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/sys.glob.regioninfo.rgn5props/VB/rgn5props.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CurrencySymbol">
      <MemberSignature Language="C#" Value="public virtual string CurrencySymbol { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CurrencySymbol" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.RegionInfo.CurrencySymbol" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CurrencySymbol As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ CurrencySymbol { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CurrencySymbol : string" Usage="System.Globalization.RegionInfo.CurrencySymbol" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera symbol waluty skojarzone z kraju/regionu.</summary>
        <value>Symbol waluty skojarzone z kraju/regionu.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Na przykład symbol waluty dla Stanów Zjednoczonych jest "$".  
  
 Jeśli bieżący <xref:System.Globalization.RegionInfo> obiekt jest tworzony z określoną kulturą i więcej niż jednym języku jest używany w odpowiedniej kraj/region, <xref:System.Globalization.RegionInfo.CurrencySymbol%2A> właściwość zwraca symbol waluty skojarzone z określoną kulturę.  
  
   
  
## Examples  
 Poniższy przykładowy kod przedstawia właściwości <xref:System.Globalization.RegionInfo> klasy.  
  
 [!code-cpp[System.Globalization.RegionInfo_Properties#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.RegionInfo_Properties/CPP/regioninfo_properties.cpp#1)]
 [!code-csharp[System.Globalization.RegionInfo_Properties#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.RegionInfo_Properties/CS/regioninfo_properties.cs#1)]
 [!code-vb[System.Globalization.RegionInfo_Properties#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.RegionInfo_Properties/VB/regioninfo_properties.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Globalization.RegionInfo.ISOCurrencySymbol" />
      </Docs>
    </Member>
    <Member MemberName="CurrentRegion">
      <MemberSignature Language="C#" Value="public static System.Globalization.RegionInfo CurrentRegion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Globalization.RegionInfo CurrentRegion" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.RegionInfo.CurrentRegion" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property CurrentRegion As RegionInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Globalization::RegionInfo ^ CurrentRegion { System::Globalization::RegionInfo ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CurrentRegion : System.Globalization.RegionInfo" Usage="System.Globalization.RegionInfo.CurrentRegion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.RegionInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera <see cref="T:System.Globalization.RegionInfo" /> reprezentujący kraj/region, używany przez bieżący wątek.</summary>
        <value>
          <see cref="T:System.Globalization.RegionInfo" /> Reprezentujący kraj/region, używany przez bieżący wątek.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wartość tej właściwości zależy od kultury wybrany za pomocą części Opcje regionalne i językowe w Panelu sterowania. Jednak te informacje można zmienić podczas trwania <xref:System.AppDomain>. <xref:System.Globalization.RegionInfo> Klasy nie automatycznie wykrywa zmiany w ustawieniach systemu, ale <xref:System.Globalization.RegionInfo.CurrentRegion%2A> właściwości jest aktualizowany po wywołaniu <xref:System.Globalization.CultureInfo.ClearCachedData%2A> metody.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayName">
      <MemberSignature Language="C#" Value="public virtual string DisplayName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DisplayName" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.RegionInfo.DisplayName" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property DisplayName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ DisplayName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DisplayName : string" Usage="System.Globalization.RegionInfo.DisplayName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera pełną nazwę kraju/regionu w języku zlokalizowanej wersji programu .NET Framework.</summary>
        <value>Pełna nazwa kraju/regionu w języku zlokalizowanej wersji programu .NET Framework.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Globalization.RegionInfo.DisplayName%2A> Właściwość Wyświetla nazwę kraju/regionu w języku zlokalizowanej wersji programu .NET Framework. Na przykład <xref:System.Globalization.RegionInfo.DisplayName%2A> właściwości wyświetla kraj/region w języku angielskim w angielskiej wersji programu .NET Framework, a w języku hiszpańskim na hiszpańska wersja językowa programu .NET Framework.  
  
 Wartość <xref:System.Globalization.RegionInfo.DisplayName%2A> właściwości jest pobierana z plików zasobów w języku bieżącej kultury interfejsu użytkownika reprezentowanego przez <xref:System.Globalization.CultureInfo.CurrentUICulture%2A>. Takie syntezatora z systemu operacyjnego lub niestandardowych regionów może nie mieć informacje o zasobach, którym to przypadku wartość <xref:System.Globalization.RegionInfo.DisplayName%2A> jest taka sama jak wartość <xref:System.Globalization.RegionInfo.NativeName%2A> właściwości.  
  
   
  
## Examples  
 Poniższy przykładowy kod przedstawia właściwości <xref:System.Globalization.RegionInfo> klasy.  
  
 [!code-cpp[System.Globalization.RegionInfo_Properties#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.RegionInfo_Properties/CPP/regioninfo_properties.cpp#1)]
 [!code-csharp[System.Globalization.RegionInfo_Properties#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.RegionInfo_Properties/CS/regioninfo_properties.cs#1)]
 [!code-vb[System.Globalization.RegionInfo_Properties#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.RegionInfo_Properties/VB/regioninfo_properties.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Globalization.RegionInfo.Name" />
        <altmember cref="P:System.Globalization.RegionInfo.EnglishName" />
        <altmember cref="P:System.Globalization.RegionInfo.TwoLetterISORegionName" />
        <altmember cref="P:System.Globalization.RegionInfo.ThreeLetterISORegionName" />
        <altmember cref="P:System.Globalization.RegionInfo.ThreeLetterWindowsRegionName" />
      </Docs>
    </Member>
    <Member MemberName="EnglishName">
      <MemberSignature Language="C#" Value="public virtual string EnglishName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string EnglishName" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.RegionInfo.EnglishName" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property EnglishName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ EnglishName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.EnglishName : string" Usage="System.Globalization.RegionInfo.EnglishName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera pełną nazwę kraju/regionu w języku angielskim.</summary>
        <value>Pełna nazwa kraju/regionu w języku angielskim.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Na przykład <xref:System.Globalization.RegionInfo> obiektu utworzonego dla kultury angielski (Stany Zjednoczone) Wyświetla "Stanów Zjednoczonych".  
  
   
  
## Examples  
 Poniższy przykładowy kod przedstawia właściwości <xref:System.Globalization.RegionInfo> klasy.  
  
 [!code-cpp[System.Globalization.RegionInfo_Properties#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.RegionInfo_Properties/CPP/regioninfo_properties.cpp#1)]
 [!code-csharp[System.Globalization.RegionInfo_Properties#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.RegionInfo_Properties/CS/regioninfo_properties.cs#1)]
 [!code-vb[System.Globalization.RegionInfo_Properties#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.RegionInfo_Properties/VB/regioninfo_properties.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Globalization.RegionInfo.Name" />
        <altmember cref="P:System.Globalization.RegionInfo.DisplayName" />
        <altmember cref="P:System.Globalization.RegionInfo.TwoLetterISORegionName" />
        <altmember cref="P:System.Globalization.RegionInfo.ThreeLetterISORegionName" />
        <altmember cref="P:System.Globalization.RegionInfo.ThreeLetterWindowsRegionName" />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.RegionInfo.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (value As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="regionInfo.Equals value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">Obiekt do porównania z bieżącym <see cref="T:System.Globalization.RegionInfo" />.</param>
        <summary>Określa, czy określony obiekt jest tego samego wystąpienia, ponieważ bieżący <see cref="T:System.Globalization.RegionInfo" />.</summary>
        <returns>
          <see langword="true" /> Jeśli <paramref name="value" /> parametr jest <see cref="T:System.Globalization.RegionInfo" /> obiekt i jego <see cref="P:System.Globalization.RegionInfo.Name" /> właściwości jest taka sama jak <see cref="P:System.Globalization.RegionInfo.Name" /> właściwości bieżącego <see cref="T:System.Globalization.RegionInfo" /> obiektu; w przeciwnym razie <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda zastępuje <xref:System.Object.Equals%2A?displayProperty=nameWithType>.  
  
   
  
## Examples  
 Poniższy przykład kodu porównuje dwa wystąpienia <xref:System.Globalization.RegionInfo> utworzonych inaczej.  
  
 [!code-cpp[System.Globalization.RegionInfo_Equals#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.RegionInfo_Equals/CPP/regioninfo_equals.cpp#1)]
 [!code-csharp[System.Globalization.RegionInfo_Equals#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.RegionInfo_Equals/CS/regioninfo_equals.cs#1)]
 [!code-vb[System.Globalization.RegionInfo_Equals#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.RegionInfo_Equals/VB/regioninfo_equals.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Object.Equals(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="GeoId">
      <MemberSignature Language="C#" Value="public virtual int GeoId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 GeoId" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.RegionInfo.GeoId" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property GeoId As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int GeoId { int get(); };" />
      <MemberSignature Language="F#" Value="member this.GeoId : int" Usage="System.Globalization.RegionInfo.GeoId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera unikatowy numer identyfikacyjny dla regionu geograficznego, kraj, miasta lub lokalizacji.</summary>
        <value>Numer podpisem 32-bitowy, w który unikatowo identyfikuje lokalizacji geograficznej.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Należy użyć aplikacji <xref:System.Globalization.RegionInfo.GeoId%2A> właściwości do świadczenia usług specyficzne dla kultury dla klientów. Na przykład <xref:System.Globalization.RegionInfo.GeoId%2A> właściwości może służyć jako klucza do rekordu bazy danych, który zawiera szczegółowe informacje dotyczące kraju/regionu.  
  
 Wartość tej właściwości odnosi się do systemu Windows `GetUserGeoID` funkcji. Listę identyfikatorów geograficznego zawiera [tabeli lokalizacjach geograficznych](http://go.microsoft.com/fwlink/?LinkId=191287) w bibliotece MSDN.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje <xref:System.Globalization.RegionInfo.GeoId%2A> właściwości.  
  
 [!code-cpp[sys.glob.regioninfo.rgn5props#1](~/samples/snippets/cpp/VS_Snippets_CLR/sys.glob.regioninfo.rgn5props/cpp/rgn5props.cpp#1)]
 [!code-csharp[sys.glob.regioninfo.rgn5props#1](~/samples/snippets/csharp/VS_Snippets_CLR/sys.glob.regioninfo.rgn5props/CS/rgn5props.cs#1)]
 [!code-vb[sys.glob.regioninfo.rgn5props#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/sys.glob.regioninfo.rgn5props/VB/rgn5props.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.RegionInfo.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="regionInfo.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Pełni rolę funkcji skrótu dla bieżącego <see cref="T:System.Globalization.RegionInfo" />, odpowiednie do tworzenia skrótów struktury algorytmów i danych, takich jak tablicy skrótów.</summary>
        <returns>Wartość skrótu dla bieżącego <see cref="T:System.Globalization.RegionInfo" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda zastępuje <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType>.  
  
 Ta metoda generuje ten sam kod skrótu dla dwóch obiektów, które są takie same, zgodnie z <xref:System.Globalization.RegionInfo.Equals%2A> metody.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Object.GetHashCode" />
        <altmember cref="T:System.Collections.Hashtable" />
        <altmember cref="M:System.Globalization.RegionInfo.Equals(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="IsMetric">
      <MemberSignature Language="C#" Value="public virtual bool IsMetric { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsMetric" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.RegionInfo.IsMetric" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsMetric As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsMetric { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsMetric : bool" Usage="System.Globalization.RegionInfo.IsMetric" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość wskazującą, czy kraj/region korzysta z systemu metryki dla pomiarów.</summary>
        <value>
          <see langword="true" /> Jeśli kraj/region korzysta z systemu metryki dla pomiarów; w przeciwnym razie <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykładowy kod przedstawia właściwości <xref:System.Globalization.RegionInfo> klasy.  
  
 [!code-cpp[System.Globalization.RegionInfo_Properties#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.RegionInfo_Properties/CPP/regioninfo_properties.cpp#1)]
 [!code-csharp[System.Globalization.RegionInfo_Properties#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.RegionInfo_Properties/CS/regioninfo_properties.cs#1)]
 [!code-vb[System.Globalization.RegionInfo_Properties#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.RegionInfo_Properties/VB/regioninfo_properties.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ISOCurrencySymbol">
      <MemberSignature Language="C#" Value="public virtual string ISOCurrencySymbol { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ISOCurrencySymbol" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.RegionInfo.ISOCurrencySymbol" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property ISOCurrencySymbol As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ISOCurrencySymbol { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ISOCurrencySymbol : string" Usage="System.Globalization.RegionInfo.ISOCurrencySymbol" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera symbol waluty ISO 4217 trzy znaki skojarzone z kraju/regionu.</summary>
        <value>Symbol waluty ISO 4217 trzy znaki skojarzone z kraju/regionu.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Poniższy przykład przedstawia niektóre z symboli waluty ISO 4217 zwrócony przez <xref:System.Globalization.RegionInfo.ISOCurrencySymbol%2A> właściwości.  
  
|Country/region|Nazwa waluty|Symbol waluty ISO 4217|  
|---------------------|-------------------|------------------------------|  
|Albania|Lek albański|WSZYSTKIE|  
|Algeria|Dinar algierski|DZD|  
|Argentyna|Peso argentyńskie|ARS|  
|Armenia|Drama armeńska|AMD|  
|Australia|Australian dolara ($)|LUB|  
|Austria|EUR|EUR|  
|Azerbejdżan|Manat azerbejdżański|AZN|  
|Bahrajn|Dinar bahrajski|BHD|  
|Białoruś|Rubel białoruski|BYR|  
|Belgia|EUR|EUR|  
|Belize|Dolar belizyjski|BZD|  
|Boliwariańska Republika Wenezueli|Bolivar Wenezueli|VEF|  
|Boliwia|Boliviano|ROBERT|  
|Brazylia|Rzeczywiste|BRL|  
|Brunei|Dolar brunejski|BND|  
|Bułgaria|Bułgarska|BGN|  
|Kanada|Kanadyjscy dolara ($)|CAD|  
|Caribbean|Dolara Amerykańskiego|USD|  
|Chile|Peso chilijskie|CLP|  
|Kolumbia|Peso kolumbijskie|COP|  
|Kostaryka|Colon kostarykański|CRC|  
|Chorwacja|Chorwacka chorwacki|HRK|  
|Czechy|Czeski Korona|CZK|  
|Dania|Duńska|DKK|  
|Dominikana|Dominikańskie|DOP|  
|Ekwador|Dolara Amerykańskiego|USD|  
|Egipt|Funt egipski|EGP|  
|Salwador|U.S. dolara ($)|USD|  
|Estonia|Estońska|EEK|  
|Etiopia|Birr etiopski|ETB|  
|Wyspy Owcze|Duńska|DKK|  
|Finlandia|EUR|EUR|  
|Francja|EUR|EUR|  
|Gruzja|Lari|GEL|  
|Niemcy|EUR|EUR|  
|Grecja|EUR|EUR|  
|Gwatemala|Guatemalan Quetzal|GTQ|  
|Honduras|Lempira honduraska|HNL|  
|SRA Hongkong|Hong Kong dolara ($)|HKD|  
|Węgry|Forint węgierski|HUF|  
|Islandia|Islandzka|ISK|  
|Indie|Rupia indyjskiego|INR|  
|Indonezja|Indonezyjska|IDR|  
|Iran|Rial irański|IRR|  
|Irak|Dinar iracki|IQD|  
|Irlandia|EUR|EUR|  
|Islamska Republika Pakistanu|Pakistańska|PKR|  
|Izrael|Nowe Szekla|KOŃCZY SIĘ NIEPOWODZENIEM|  
|Włochy|EUR|EUR|  
|Jamaica|Dolar jamajski|JMD|  
|Japonia|Jen japoński|JPY|  
|Jordania|Dinar Jordanii|JOD|  
|Kazakhstan|Tenge|KZT|  
|Kenya|Szyling kenijski|KES|  
|Korea|Won koreański|KRW|  
|Kuwejt|Dinar Kuwejckim|KWD|  
|Kyrgyzstan|SOM|KGS|  
|Łotwa|Łat łotewski|LVL|  
|Liban|Funt libański|LBP|  
|Libya|Dinar libijski|LYD|  
|Liechtenstein|Frank Szwajcarii|CHF|  
|Litwa|Litewski|LTL|  
|Luksemburg|EUR|EUR|  
|SRA Makau|Makau (Makau SAR)|MOP|  
|Macedonia (była Jugosłowiańska Republika Macedonii)|Macedoński Denar|MKD|  
|Malezja|Ringgit malezyjski|MYR|  
|Malediwy|Rufiyaa|MVR|  
|Meksyk|Peso meksykański|MXN|  
|Mongolia|Tugrik|MNT|  
|Maroko|Marokański|MAD|  
|Holandia|EUR|EUR|  
|Nowa Zelandia|Nowa Zelandia dolara ($)|NZD|  
|Nikaragua|Nicaraguan Cordoba Oro|NIO|  
|Norwegia|Norweska|NOK|  
|Oman|Rial omański|OMR|  
|Panama|Balboa panamskie|PAB|  
|Paragwaj|Paragwaju osób|PYG|  
|Chińska Republika Ludowa|PRC Renminbi|CNY|  
|Peru|Nowy Sol peruwiański|PIÓRA|  
|Filipiny|Peso filipińskie|PHP|  
|Polska|Złoty polski|PLN|  
|Portugalia|EUR|EUR|  
|Księstwo Monako|EUR|EUR|  
|Portoryko|Dolara Amerykańskiego|USD|  
|Katar|Katarski|QAR|  
|Rumunia|Lej rumuński|PIOTR|  
|Rosja|Rubel rosyjski|RUB|  
|Arabia Saudyjska|Arabia Rial|SAR|  
|Serbia|Dinar serbski|RSD|  
|Singapur|Dolar singapurski|SGD|  
|Słowacja|EUR|EUR|  
|Słowenia|EUR|EUR|  
|Republika Południowej Afryki|Rand Południowej Afryki|ZAR|  
|Hiszpania|EUR|EUR|  
|Szwecja|Szwedzka|SEK|  
|Szwajcaria|Frank Szwajcarii|CHF|  
|Syria|Funt syryjski|SYP|  
|Tajwan|Nowy dolar (wersja tajwańska)|TWD|  
|Tajlandia|Bat|THB|  
|Trynidad i Tobago|Trynidad dolara ($)|TTD|  
|Tunezja|Dinar tunezyjski|TND|  
|Turcja|Lir turecki|TRY|  
|Ukraina|Hrywna ukraiński|UAH|  
|Zjednoczone Emiraty Arabskie|Dirham Zjednoczone Emiraty Arabskie|AED|  
|Zjednoczone Królestwo|Wielka Brytania funt szterling|GBP|  
|Stany Zjednoczone|Dolara Amerykańskiego|USD|  
|Urugwaj|Peso urugwajskie|UYU|  
|Uzbekistan|Uzbekistan Som|UZS|  
|Vietnam|Dong wietnamski|VND|  
|Jemen|Rial jemeński|WARSTWY|  
|Zimbabwe|Dolar Zimbabwe|ZWL|  
  
   
  
## Examples  
 Poniższy przykładowy kod przedstawia właściwości <xref:System.Globalization.RegionInfo> klasy.  
  
 [!code-cpp[System.Globalization.RegionInfo_Properties#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.RegionInfo_Properties/CPP/regioninfo_properties.cpp#1)]
 [!code-csharp[System.Globalization.RegionInfo_Properties#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.RegionInfo_Properties/CS/regioninfo_properties.cs#1)]
 [!code-vb[System.Globalization.RegionInfo_Properties#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.RegionInfo_Properties/VB/regioninfo_properties.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Globalization.RegionInfo.CurrencySymbol" />
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public virtual string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.RegionInfo.Name" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Name { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="System.Globalization.RegionInfo.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera nazwę lub kod kraju dwuliterowych normy ISO 3166 dla bieżącego <see cref="T:System.Globalization.RegionInfo" /> obiektu.</summary>
        <value>Wartość określoną przez <paramref name="name" /> parametr <see cref="M:System.Globalization.RegionInfo.#ctor(System.String)" /> konstruktora. Wartość zwracana jest pisane wielkimi literami.  - lub - kod dwuliterowych zdefiniowany w normy ISO 3166 dla kraju/regionu, określony przez <paramref name="culture" /> parametr <see cref="M:System.Globalization.RegionInfo.#ctor(System.Int32)" /> konstruktora. Wartość zwracana jest pisane wielkimi literami.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli bieżący <xref:System.Globalization.RegionInfo> obiekt jest tworzony z <xref:System.Globalization.RegionInfo.%23ctor%28System.Int32%29?displayProperty=nameWithType> Konstruktor, który przyjmuje parametr identyfikator kultury, <xref:System.Globalization.RegionInfo.Name%2A> wartość właściwości jest jednym z kodów dwuliterowych zdefiniowane w normy ISO 3166 w kraju/regionie i są w formacie wielkie litery. Na przykład kod dwuliterowych dla Stanów Zjednoczonych jest "My".  
  
 Jeśli bieżący <xref:System.Globalization.RegionInfo> obiekt jest tworzony z <xref:System.Globalization.RegionInfo.%23ctor%28System.String%29?displayProperty=nameWithType> Konstruktor i jest przekazywany nazwy kultury pełny przykład "en US" <xref:System.Globalization.RegionInfo.Name%2A> wartość właściwości jest pełna nazwa i nie tylko nazwę regionu.  
  
   
  
## Examples  
 Poniższy przykładowy kod przedstawia właściwości <xref:System.Globalization.RegionInfo> klasy.  
  
 [!code-cpp[System.Globalization.RegionInfo_Properties#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.RegionInfo_Properties/CPP/regioninfo_properties.cpp#1)]
 [!code-csharp[System.Globalization.RegionInfo_Properties#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.RegionInfo_Properties/CS/regioninfo_properties.cs#1)]
 [!code-vb[System.Globalization.RegionInfo_Properties#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.RegionInfo_Properties/VB/regioninfo_properties.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Globalization.RegionInfo.EnglishName" />
        <altmember cref="P:System.Globalization.RegionInfo.DisplayName" />
        <altmember cref="P:System.Globalization.RegionInfo.TwoLetterISORegionName" />
        <altmember cref="P:System.Globalization.RegionInfo.ThreeLetterISORegionName" />
        <altmember cref="P:System.Globalization.RegionInfo.ThreeLetterWindowsRegionName" />
      </Docs>
    </Member>
    <Member MemberName="NativeName">
      <MemberSignature Language="C#" Value="public virtual string NativeName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string NativeName" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.RegionInfo.NativeName" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property NativeName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ NativeName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.NativeName : string" Usage="System.Globalization.RegionInfo.NativeName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera nazwę kraju/regionu, sformatowany w języku macierzystym kraju/regionu.</summary>
        <value>Natywny nazwa kraju/regionu, w formacie w język skojarzony z normy ISO 3166 kod kraju/regionu.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <xref:System.Globalization.RegionInfo.NativeName%2A> Właściwość pobiera Pełna nazwa, jeśli `RegionInfo` obiekt jest tworzony przy użyciu nazwy kultury pełna.  
  
 Zalecane jest użycie nazwy kultury — na przykład "en US" w języku angielskim (Stany Zjednoczone), aby uzyskać dostęp do <xref:System.Globalization.RegionInfo.NativeName%2A> właściwości. Ciąg używany dla tej właściwości, zależy od języka skojarzone z kraju/regionu. Na przykład wartość kultury nazwy en US angielski (Stany Zjednoczone) i es US dla języka hiszpańskiego (Stany Zjednoczone) można pobrać różne wartości w systemie Windows Vista. Dlatego utworzenie `RegionInfo` obiekt z tylko nazwa kraju/regionu Stanów Zjednoczonych nie jest wystarczająco konkretny, aby odróżnić na odpowiedni ciąg.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje <xref:System.Globalization.RegionInfo.NativeName%2A> właściwości.  
  
 [!code-cpp[sys.glob.regioninfo.rgn5props#1](~/samples/snippets/cpp/VS_Snippets_CLR/sys.glob.regioninfo.rgn5props/cpp/rgn5props.cpp#1)]
 [!code-csharp[sys.glob.regioninfo.rgn5props#1](~/samples/snippets/csharp/VS_Snippets_CLR/sys.glob.regioninfo.rgn5props/CS/rgn5props.cs#1)]
 [!code-vb[sys.glob.regioninfo.rgn5props#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/sys.glob.regioninfo.rgn5props/VB/rgn5props.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThreeLetterISORegionName">
      <MemberSignature Language="C#" Value="public virtual string ThreeLetterISORegionName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ThreeLetterISORegionName" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.RegionInfo.ThreeLetterISORegionName" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property ThreeLetterISORegionName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ThreeLetterISORegionName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ThreeLetterISORegionName : string" Usage="System.Globalization.RegionInfo.ThreeLetterISORegionName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera trzyliterowy kod zdefiniowany w normy ISO 3166 w kraju/regionie.</summary>
        <value>Trzyliterowy kod zdefiniowany w normy ISO 3166 w kraju/regionie.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Globalization.RegionInfo.ThreeLetterISORegionName%2A> Właściwość zawiera trzyliterowy kod zdefiniowany w normy ISO 3166, w tym kraju/regionie. Na przykład trzyliterowy kod dla Stanów Zjednoczonych to "USA".  
  
 Case nie ma znaczenia. Jednak <xref:System.Globalization.RegionInfo.Name%2A>, <xref:System.Globalization.RegionInfo.TwoLetterISORegionName%2A>i <xref:System.Globalization.RegionInfo.ThreeLetterISORegionName%2A> właściwości zwracają odpowiedni kod pisane wielkimi literami.  
  
   
  
## Examples  
 Poniższy przykładowy kod przedstawia właściwości <xref:System.Globalization.RegionInfo> klasy.  
  
 [!code-cpp[System.Globalization.RegionInfo_Properties#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.RegionInfo_Properties/CPP/regioninfo_properties.cpp#1)]
 [!code-csharp[System.Globalization.RegionInfo_Properties#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.RegionInfo_Properties/CS/regioninfo_properties.cs#1)]
 [!code-vb[System.Globalization.RegionInfo_Properties#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.RegionInfo_Properties/VB/regioninfo_properties.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Globalization.RegionInfo.Name" />
        <altmember cref="P:System.Globalization.RegionInfo.EnglishName" />
        <altmember cref="P:System.Globalization.RegionInfo.DisplayName" />
        <altmember cref="P:System.Globalization.RegionInfo.TwoLetterISORegionName" />
        <altmember cref="P:System.Globalization.RegionInfo.ThreeLetterWindowsRegionName" />
      </Docs>
    </Member>
    <Member MemberName="ThreeLetterWindowsRegionName">
      <MemberSignature Language="C#" Value="public virtual string ThreeLetterWindowsRegionName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ThreeLetterWindowsRegionName" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.RegionInfo.ThreeLetterWindowsRegionName" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property ThreeLetterWindowsRegionName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ThreeLetterWindowsRegionName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ThreeLetterWindowsRegionName : string" Usage="System.Globalization.RegionInfo.ThreeLetterWindowsRegionName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera trzyliterowy kod przypisane przez system Windows do kraj/region, reprezentowany przez to <see cref="T:System.Globalization.RegionInfo" />.</summary>
        <value>Trzyliterowy kod przypisane przez system Windows do kraj/region, reprezentowany przez to <see cref="T:System.Globalization.RegionInfo" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Na przykład trzyliterowy kod dla Stanów Zjednoczonych to "USA".  
  
   
  
## Examples  
 Poniższy przykładowy kod przedstawia właściwości <xref:System.Globalization.RegionInfo> klasy.  
  
 [!code-cpp[System.Globalization.RegionInfo_Properties#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.RegionInfo_Properties/CPP/regioninfo_properties.cpp#1)]
 [!code-csharp[System.Globalization.RegionInfo_Properties#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.RegionInfo_Properties/CS/regioninfo_properties.cs#1)]
 [!code-vb[System.Globalization.RegionInfo_Properties#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.RegionInfo_Properties/VB/regioninfo_properties.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Globalization.RegionInfo.Name" />
        <altmember cref="P:System.Globalization.RegionInfo.EnglishName" />
        <altmember cref="P:System.Globalization.RegionInfo.DisplayName" />
        <altmember cref="P:System.Globalization.RegionInfo.TwoLetterISORegionName" />
        <altmember cref="P:System.Globalization.RegionInfo.ThreeLetterISORegionName" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.RegionInfo.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="regionInfo.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zwraca ciąg zawierający nazwę kultury lub normy ISO 3166 dwuliterowych kraj/region kodów określonych dla bieżącego <see cref="T:System.Globalization.RegionInfo" />.</summary>
        <returns>Ciąg zawierający nazwę kultury lub kodów kraju dwuliterowych normy ISO 3166 zdefiniowanych dla bieżącej <see cref="T:System.Globalization.RegionInfo" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda zastępuje <xref:System.Object.ToString%2A?displayProperty=nameWithType>.  
  
 Ta metoda zwraca wartość <xref:System.Globalization.RegionInfo.Name%2A> właściwości.  
  
 Case nie ma znaczenia. Jednak <xref:System.Globalization.RegionInfo.Name%2A>, <xref:System.Globalization.RegionInfo.TwoLetterISORegionName%2A>i <xref:System.Globalization.RegionInfo.ThreeLetterISORegionName%2A> właściwości zwracają odpowiedni kod pisane wielkimi literami.  
  
 Wstępnie zdefiniowane <xref:System.Globalization.RegionInfo> nazwy są wymienione w <xref:System.Globalization.RegionInfo> klasy tematu.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Object.ToString" />
        <altmember cref="P:System.Globalization.RegionInfo.Name" />
      </Docs>
    </Member>
    <Member MemberName="TwoLetterISORegionName">
      <MemberSignature Language="C#" Value="public virtual string TwoLetterISORegionName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TwoLetterISORegionName" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.RegionInfo.TwoLetterISORegionName" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property TwoLetterISORegionName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ TwoLetterISORegionName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TwoLetterISORegionName : string" Usage="System.Globalization.RegionInfo.TwoLetterISORegionName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera kod dwuliterowych zdefiniowane w normy ISO 3166 w kraju/regionie.</summary>
        <value>Kod dwuliterowych zdefiniowany w normy ISO 3166 w kraju/regionie.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Globalization.RegionInfo> Nazwa jest jeden z kodów dwuliterowych zdefiniowane w normy ISO 3166 w kraju/regionie. Na przykład kod dwuliterowych Stanów Zjednoczonych jest "My".  
  
> [!IMPORTANT]
>  W niektórych przypadkach <xref:System.Globalization.RegionInfo.TwoLetterISORegionName%2A> właściwość może mieć więcej niż dwa znaki. Na przykład wartość <xref:System.Globalization.RegionInfo.TwoLetterISORegionName%2A> właściwość regionu Karaibów jest "029".  
  
 Case nie ma znaczenia. Jednak <xref:System.Globalization.RegionInfo.Name%2A>, <xref:System.Globalization.RegionInfo.TwoLetterISORegionName%2A>i <xref:System.Globalization.RegionInfo.ThreeLetterISORegionName%2A> właściwości zwracają odpowiedni kod pisane wielkimi literami.  
  
> [!WARNING]
>  Jeśli chcesz utrwalić <xref:System.Globalization.RegionInfo> obiektu lub jego komunikacji między procesami, należy utworzyć przy użyciu nazwy kultury pełne zamiast kodu regionu dwuliterowych ISO. Ponieważ <xref:System.Globalization.RegionInfo> właściwości są zależne od skryptów i język, tworzenie wystąpień <xref:System.Globalization.RegionInfo> obiektu za pomocą kod regionu utraci kontekstu i danych.  
  
 Wstępnie zdefiniowane <xref:System.Globalization.RegionInfo> nazwy są wymienione w [angielski nazwy kraju i elementy kodu](http://go.microsoft.com/fwlink/?LinkId=190591) w witrynie sieci Web ISO.  
  
   
  
## Examples  
 Poniższy przykładowy kod przedstawia właściwości <xref:System.Globalization.RegionInfo> klasy.  
  
 [!code-cpp[System.Globalization.RegionInfo_Properties#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.RegionInfo_Properties/CPP/regioninfo_properties.cpp#1)]
 [!code-csharp[System.Globalization.RegionInfo_Properties#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.RegionInfo_Properties/CS/regioninfo_properties.cs#1)]
 [!code-vb[System.Globalization.RegionInfo_Properties#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.RegionInfo_Properties/VB/regioninfo_properties.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Globalization.RegionInfo.Name" />
        <altmember cref="P:System.Globalization.RegionInfo.EnglishName" />
        <altmember cref="P:System.Globalization.RegionInfo.DisplayName" />
        <altmember cref="P:System.Globalization.RegionInfo.ThreeLetterISORegionName" />
        <altmember cref="P:System.Globalization.RegionInfo.ThreeLetterWindowsRegionName" />
      </Docs>
    </Member>
  </Members>
</Type>