<Type Name="StringInfo" FullName="System.Globalization.StringInfo">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="80c192082c2c19396d1b5a09fe5f8cde1b836f2d" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37654329" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class StringInfo" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit StringInfo extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Globalization.StringInfo" />
  <TypeSignature Language="VB.NET" Value="Public Class StringInfo" />
  <TypeSignature Language="C++ CLI" Value="public ref class StringInfo" />
  <TypeSignature Language="F#" Value="type StringInfo = class" />
  <AssemblyInfo>
    <AssemblyName>System.Globalization</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Oferuje funkcje, aby podzielić ciąg na elementy tekstu i do iteracji przez te elementy tekstowe.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 .NET Framework definiuje element tekstowy jako jednostka tekst, który jest wyświetlany jako pojedynczy znak, czyli grafemów. Element tekstowy może być łączenie podstawowego znak, para zastępcza lub sekwencji. [Standardu Unicode](http://go.microsoft.com/fwlink/?linkid=37123) Para dwuskładnikowa jest określany jako reprezentację zakodowanych znaków pojedynczy znak abstrakcyjny, który składa się z sekwencji dwie jednostki kodu, gdzie pierwszy jednostka pary jest znakiem zastępczym wysokiego poziomu, a drugą jest niska zastępczy. W standardzie Unicode definiuje łączenie sekwencji pod postacią połączenia podstawowego znak i znaki łączące, co najmniej jeden znak. Para zastępcza może reprezentować podstawowego znak lub łączenia.  
  
 <xref:System.Globalization.StringInfo> Klasy umożliwia pracę z ciągami jako szereg elementów tekstowych, a nie poszczególnych <xref:System.Char> obiektów.  
  
 Aby utworzyć wystąpienie <xref:System.Globalization.StringInfo> obiekt, który reprezentuje określony ciąg można wykonać jedną z następujących czynności:  
  
-   Wywołaj <xref:System.Globalization.StringInfo.%23ctor%28System.String%29> Konstruktor i przekaż go w ciągu, <xref:System.Globalization.StringInfo> obiekt jest do reprezentowania jako argument.  
  
-   Wywołaj domyślną <xref:System.Globalization.StringInfo.%23ctor> konstruktora i przypisz ciąg, który <xref:System.Globalization.StringInfo> obiekt jest do reprezentowania <xref:System.Globalization.StringInfo.String%2A> właściwości.  
  
 Możesz pracować z elementami tekstowymi poszczególnych w ciągu na dwa sposoby:  
  
-   Wyliczając każdego elementu tekstu. Aby to zrobić, należy wywołać <xref:System.Globalization.StringInfo.GetTextElementEnumerator%2A> metody, a następnie wywołać wielokrotnie <xref:System.Globalization.TextElementEnumerator.MoveNext%2A> zwracanego metody <xref:System.Globalization.TextElementEnumerator> obiektu, dopóki metoda zwraca `false`.  
  
-   Przez wywołanie metody <xref:System.Globalization.StringInfo.ParseCombiningCharacters%2A> metodę, która pobierze tablicę, która zawiera wartość początkowa indeksu dla każdego elementu tekstu. Można później odzyskać elementy poszczególnych tekstu, przekazując te indeksy, aby <xref:System.Globalization.StringInfo.SubstringByTextElements%2A> metody.  
  
 Poniższy przykład ilustruje obie metody pracy z elementami tekstowymi w ciągu. Tworzy dwa ciągi:  
  
-   `strCombining`, który jest ciągiem znaków arabskich, który zawiera trzy elementy tekstowe z wieloma <xref:System.Char> obiektów. Pierwszy element tekstu jest podstawowego znak ARABSKI ALEF litery (U +-627) następuje ARABSKI HAMZA poniżej (U +-655) i KASRA ARABSKI (U + 0650). Drugi element tekstu jest ARABSKI HEH litery (U + 0647) następuje FATHA ARABSKI (U +-64E). Trzeci element tekstowy jest ARABSKI BEH LETTTER (U + 0628) następuje DAMMATAN ARABSKI (U + 064C).  
  
-   `strSurrogates`, który jest ciągiem, który zawiera trzy znaki dwuskładnikowe: GRECKI ACROPHONIC PIĘĆ talentem jej pracowników (U + 10148) z dodatkowego płaszczyzny wielojęzyczny 20026 U + z dodatkowego płaszczyzny ideograficznych i U + F1001 z obszaru prywatnej. Kodowanie UTF-16 każdy znak jest para zastępcza, który składa się z znakiem zastępczym wysokiego poziomu następuje znak zastępczy niskiego poziomu.  
  
 Każdy ciąg jest analizowany raz przy <xref:System.Globalization.StringInfo.ParseCombiningCharacters%2A> metody a następnie według <xref:System.Globalization.StringInfo.GetTextElementEnumerator%2A> metody. Obie metody poprawnie przeanalizować elementy tekstowe w dwa ciągi i wyświetlać wyniki operacji analizowania.  
  
 [!code-csharp[System.Globalization.StringInfo.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.stringinfo.class/cs/indexing1.cs#1)]
 [!code-vb[System.Globalization.StringInfo.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.stringinfo.class/vb/indexing1.vb#1)]  
  
   
  
## Examples  
 W tym przykładzie pokazano, jak używać <xref:System.Globalization.StringInfo.GetTextElementEnumerator%2A> i <xref:System.Globalization.StringInfo.ParseCombiningCharacters%2A> metody <xref:System.Globalization.StringInfo> klasy do manipulowania ciąg, który zawiera zastępcze i znaki łączące.  
  
 [!code-cpp[stringinfo#1](~/samples/snippets/cpp/VS_Snippets_CLR/StringInfo/cpp/StringInfo.cpp#1)]
 [!code-csharp[stringinfo#1](~/samples/snippets/csharp/VS_Snippets_CLR/StringInfo/CS/StringInfo.cs#1)]
 [!code-vb[stringinfo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/StringInfo/vb/stringinfo.vb#1)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="usage">
      <para>Wewnętrznie metody <see cref="T:System.Globalization.StringInfo" /> klasy wywoływanie metod <see cref="T:System.Globalization.CharUnicodeInfo" /> klasy w celu określenia kategorii znaków. Począwszy od [! INCLUDE[net_v462](~/includes/NET-v462-MD.MD)] klasyfikacji znaków zależy od [Unicode Standard w wersji 8.0.0] (https://unicode.org/versions/Unicode8.0.0). Dla [! INCLUDE[net_v40_long](~/includes/NET-V40-Long-MD.MD)] przez [! INCLUDE[net_v461](~/includes/NET-v461-MD.MD)], jest on oparty na [Unicode Standard w wersji wersji 6.3.0] (https://www.unicode.org/versions/Unicode6.3.0/).</para>
    </block>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Globalization.StringInfo" /> klasy.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StringInfo ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.StringInfo.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; StringInfo();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Globalization.StringInfo" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wartość nowego <xref:System.Globalization.StringInfo> obiekt jest inicjowany do pustego ciągu (""). Można przypisać inny ciąg do niego za pomocą <xref:System.Globalization.StringInfo.String%2A> właściwości.  Można również utworzyć wystąpienie <xref:System.Globalization.StringInfo> obiekt, który reprezentuje określony ciąg w jednym kroku przez wywołanie metody <xref:System.Globalization.StringInfo.%23ctor%28System.String%29> konstruktora.  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.String.Empty" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StringInfo (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.StringInfo.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; StringInfo(System::String ^ value);" />
      <MemberSignature Language="F#" Value="new System.Globalization.StringInfo : string -&gt; System.Globalization.StringInfo" Usage="new System.Globalization.StringInfo value" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">Ciąg do zainicjowania tego <see cref="T:System.Globalization.StringInfo" /> obiektu.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Globalization.StringInfo" /> klasy do określonego ciągu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten konstruktor przypisuje wartość argumentu z obiektem <xref:System.Globalization.StringInfo.String%2A> właściwości.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="value" /> jest <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.StringInfo.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (value As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="stringInfo.Equals value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">Obiekt.</param>
        <summary>Wskazuje, czy bieżący <see cref="T:System.Globalization.StringInfo" /> obiekt jest taki sam jak określony segment.</summary>
        <returns>
          <see langword="true" /> Jeśli <paramref name="value" /> parametr jest <see cref="T:System.Globalization.StringInfo" /> obiekt i jego <see cref="P:System.Globalization.StringInfo.String" /> właściwości jest równa <see cref="P:System.Globalization.StringInfo.String" /> właściwość to <see cref="T:System.Globalization.StringInfo" /> obiektu; w przeciwnym razie <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="Overload:System.String.Equals" />
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.StringInfo.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="stringInfo.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Oblicza wartość skrótu dla wartości bieżącego <see cref="T:System.Globalization.StringInfo" /> obiektu.</summary>
        <returns>32-bitową wartość skrótu na podstawie ciągu wartości tego <see cref="T:System.Globalization.StringInfo" /> obiektu.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zachowanie <xref:System.Globalization.StringInfo.GetHashCode%2A> jest zależna od implementacji, które mogą ulec zmianie z jednej wersji środowiska uruchomieniowego języka wspólnego do innego. Może się to zdarzyć w celu zwiększenia wydajności <xref:System.Globalization.StringInfo.GetHashCode%2A>. Aby zachowanie <xref:System.Globalization.StringInfo.GetHashCode%2A> wartością stałą, aplikacja powinna zastępować implementację środowiska uruchomieniowego <xref:System.Globalization.StringInfo.GetHashCode%2A> z implementacją wiadomo, że nigdy nie zmiany.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.String.GetHashCode" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetNextTextElement">
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Pobiera pierwszy element tekstu w określonym ciągu.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetNextTextElement">
      <MemberSignature Language="C#" Value="public static string GetNextTextElement (string str);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetNextTextElement(string str) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.StringInfo.GetNextTextElement(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetNextTextElement (str As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetNextTextElement(System::String ^ str);" />
      <MemberSignature Language="F#" Value="static member GetNextTextElement : string -&gt; string" Usage="System.Globalization.StringInfo.GetNextTextElement str" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="str" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="str">Ciąg, z którego można pobrać elementu tekstu.</param>
        <summary>Pobiera pierwszy element tekstu w określonym ciągu.</summary>
        <returns>Ciąg zawierający pierwszy element tekstu w określonym ciągu.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 .NET Framework definiuje element tekstowy jako jednostka tekst, który jest wyświetlany jako pojedynczy znak, czyli grafemów. Element tekstowy może być łączenie podstawowego znak, para zastępcza lub sekwencji. [Standardu Unicode](http://go.microsoft.com/fwlink/?linkid=37123) Para dwuskładnikowa jest określany jako reprezentację zakodowanych znaków pojedynczy znak abstrakcyjny, który składa się z sekwencji dwie jednostki kodu, gdzie pierwszy jednostka pary jest znakiem zastępczym wysokiego poziomu, a drugą jest niska zastępczy. [Standardu Unicode](http://go.microsoft.com/fwlink/?linkid=37123) definiuje łączenie sekwencji pod postacią połączenia podstawowego znak i znaki łączące, co najmniej jeden znak. Para zastępcza może reprezentować podstawowego znak lub łączenia.  
  
 Metoda ta zwraca tylko pierwszy element tekstu. Do iterowania po elementach tekst w ciągu, aplikacja powinna używać <xref:System.Globalization.TextElementEnumerator> generowane przez obiekt <xref:System.Globalization.StringInfo.GetTextElementEnumerator%2A> metody.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="str" /> jest <see langword="null" />.</exception>
        <altmember cref="M:System.Globalization.StringInfo.GetTextElementEnumerator(System.String)" />
        <altmember cref="M:System.Globalization.StringInfo.ParseCombiningCharacters(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="GetNextTextElement">
      <MemberSignature Language="C#" Value="public static string GetNextTextElement (string str, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetNextTextElement(string str, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.StringInfo.GetNextTextElement(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetNextTextElement (str As String, index As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetNextTextElement(System::String ^ str, int index);" />
      <MemberSignature Language="F#" Value="static member GetNextTextElement : string * int -&gt; string" Usage="System.Globalization.StringInfo.GetNextTextElement (str, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="str" Type="System.String" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="str">Ciąg, z którego można pobrać elementu tekstu.</param>
        <param name="index">Liczony od zera indeks, w którym rozpoczyna się elementu tekstu.</param>
        <summary>Pobiera element tekstowy wskazywany przez określony indeks określonego ciągu.</summary>
        <returns>Ciąg zawierający element tekstowy wskazywany przez określony indeks określonego ciągu.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 .NET Framework definiuje element tekstowy jako jednostka tekst, który jest wyświetlany jako pojedynczy znak, czyli grafemów. Element tekstowy może być łączenie podstawowego znak, para zastępcza lub sekwencji. [Standardu Unicode](http://go.microsoft.com/fwlink/?linkid=37123) Para dwuskładnikowa jest określany jako reprezentację zakodowanych znaków pojedynczy znak abstrakcyjny, który składa się z sekwencji dwie jednostki kodu, gdzie pierwszy jednostka pary jest znakiem zastępczym wysokiego poziomu, a drugą jest niska zastępczy. W standardzie Unicode definiuje łączenie sekwencji pod postacią połączenia podstawowego znak i znaki łączące, co najmniej jeden znak. Para zastępcza może reprezentować podstawowego znak lub łączenia.  
  
 Metoda ta zwraca tylko pierwszy element tekstu podciągu, który rozpoczyna się od określonego indeksu. Do iterowania po elementach tekst w ciągu, aplikacja powinna używać <xref:System.Globalization.TextElementEnumerator> generowane przez <xref:System.Globalization.StringInfo.GetTextElementEnumerator%2A> metody.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="str" /> jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="index" /> znajduje się poza zakresem prawidłowych indeksów dla <paramref name="str" />.</exception>
        <altmember cref="M:System.Globalization.StringInfo.GetTextElementEnumerator(System.String)" />
        <altmember cref="M:System.Globalization.StringInfo.ParseCombiningCharacters(System.String)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetTextElementEnumerator">
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Zwraca moduł wyliczający, który wykonuje iterację przez elementy tekstowe ciągu.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetTextElementEnumerator">
      <MemberSignature Language="C#" Value="public static System.Globalization.TextElementEnumerator GetTextElementEnumerator (string str);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Globalization.TextElementEnumerator GetTextElementEnumerator(string str) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.StringInfo.GetTextElementEnumerator(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetTextElementEnumerator (str As String) As TextElementEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Globalization::TextElementEnumerator ^ GetTextElementEnumerator(System::String ^ str);" />
      <MemberSignature Language="F#" Value="static member GetTextElementEnumerator : string -&gt; System.Globalization.TextElementEnumerator" Usage="System.Globalization.StringInfo.GetTextElementEnumerator str" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.TextElementEnumerator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="str" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="str">Ciąg do iteracji.</param>
        <summary>Zwraca moduł wyliczający, który wykonuje iterację przez elementy tekstowe cały ciąg.</summary>
        <returns>Element <see cref="T:System.Globalization.TextElementEnumerator" /> dla całego łańcucha.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 .NET Framework definiuje element tekstowy jako jednostka tekst, który jest wyświetlany jako pojedynczy znak, czyli grafemów. Element tekstowy może być łączenie podstawowego znak, para zastępcza lub sekwencji. [Standardu Unicode](http://go.microsoft.com/fwlink/?linkid=37123) Para dwuskładnikowa jest określany jako reprezentację zakodowanych znaków pojedynczy znak abstrakcyjny, który składa się z sekwencji dwie jednostki kodu, gdzie pierwszy jednostka pary jest znakiem zastępczym wysokiego poziomu, a drugą jest niska zastępczy. W standardzie Unicode definiuje łączenie sekwencji pod postacią połączenia podstawowego znak i znaki łączące, co najmniej jeden znak. Para zastępcza może reprezentować podstawowego znak lub łączenia.  
  
 Moduł wyliczający elementu tekst jest używany tylko do odczytu danych w ciągu; go nie można zmodyfikować ciągu bazowego. Moduł wyliczający nie ma wyłącznego dostępu do ciągu.  
  
 Moduł wyliczający jest w nieprawidłowym stanie, jeśli jest umieszczony przed pierwszym elementem tekst w ciągu lub po ostatnim elemencie tekst w ciągu. Gdy moduł wyliczający jest w nieprawidłowym stanie, wywołanie <xref:System.Globalization.TextElementEnumerator.Current%2A> zgłasza wyjątek.  
  
 Początkowo moduł wyliczający jest umieszczony przed pierwszym elementem tekst w ciągu. <xref:System.Globalization.TextElementEnumerator.Reset%2A> Przełącza moduł wyliczający do tej pozycji. W związku z tym po utworzeniu modułu wyliczającego lub po <xref:System.Globalization.TextElementEnumerator.Reset%2A> jest wywoływana, <xref:System.Globalization.TextElementEnumerator.MoveNext%2A> musi zostać wywołana w celu wyprzedzeniem modułu wyliczającego do pierwszego elementu tekst w ciągu przed odczytaniem wartości właściwości <xref:System.Globalization.TextElementEnumerator.Current%2A>.  
  
 <xref:System.Globalization.TextElementEnumerator.Current%2A> zwraca ten sam obiekt, do momentu <xref:System.Globalization.TextElementEnumerator.MoveNext%2A> lub <xref:System.Globalization.TextElementEnumerator.Reset%2A> jest wywoływana.  
  
 Po końcu ciągu jest przekazywany, moduł wyliczający jest ponownie w nieprawidłowym stanie i wywoływania <xref:System.Globalization.TextElementEnumerator.MoveNext%2A> zwraca `false`. Wywoływanie <xref:System.Globalization.TextElementEnumerator.Current%2A> zgłasza wyjątek, jeśli ostatnie wywołanie <xref:System.Globalization.TextElementEnumerator.MoveNext%2A> zwrócił `false`.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje wywołanie <xref:System.Globalization.StringInfo.GetTextElementEnumerator%2A> metody. Ten przykład kodu jest częścią większego przykładu przewidzianego dla <xref:System.Globalization.StringInfo> klasy.  
  
 [!code-cpp[stringinfo#1](~/samples/snippets/cpp/VS_Snippets_CLR/StringInfo/cpp/StringInfo.cpp#1)]
 [!code-csharp[stringinfo#1](~/samples/snippets/csharp/VS_Snippets_CLR/StringInfo/CS/StringInfo.cs#1)]
 [!code-vb[stringinfo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/StringInfo/vb/stringinfo.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="str" /> jest <see langword="null" />.</exception>
        <altmember cref="T:System.Globalization.TextElementEnumerator" />
      </Docs>
    </Member>
    <Member MemberName="GetTextElementEnumerator">
      <MemberSignature Language="C#" Value="public static System.Globalization.TextElementEnumerator GetTextElementEnumerator (string str, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Globalization.TextElementEnumerator GetTextElementEnumerator(string str, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.StringInfo.GetTextElementEnumerator(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetTextElementEnumerator (str As String, index As Integer) As TextElementEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Globalization::TextElementEnumerator ^ GetTextElementEnumerator(System::String ^ str, int index);" />
      <MemberSignature Language="F#" Value="static member GetTextElementEnumerator : string * int -&gt; System.Globalization.TextElementEnumerator" Usage="System.Globalization.StringInfo.GetTextElementEnumerator (str, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.TextElementEnumerator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="str" Type="System.String" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="str">Ciąg do iteracji.</param>
        <param name="index">Liczony od zera indeks, pod którym ma zostać rozpoczęte, iteracja.</param>
        <summary>Zwraca moduł wyliczający, który wykonuje iterację przez elementy tekstowe ciągu, rozpoczynając od określonego indeksu.</summary>
        <returns>A <see cref="T:System.Globalization.TextElementEnumerator" /> dla ciągu znaków, zaczynając od <paramref name="index" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 .NET Framework definiuje element tekstowy jako jednostka tekst, który jest wyświetlany jako pojedynczy znak, czyli grafemów. Element tekstowy może być łączenie podstawowego znak, para zastępcza lub sekwencji. [Standardu Unicode](http://go.microsoft.com/fwlink/?linkid=37123) Para dwuskładnikowa jest określany jako reprezentację zakodowanych znaków pojedynczy znak abstrakcyjny, który składa się z sekwencji dwie jednostki kodu, gdzie pierwszy jednostka pary jest znakiem zastępczym wysokiego poziomu, a drugą jest niska zastępczy. W standardzie Unicode definiuje łączenie sekwencji pod postacią połączenia podstawowego znak i znaki łączące, co najmniej jeden znak. Para zastępcza może reprezentować podstawowego znak lub łączenia.  
  
 Moduł wyliczający elementu tekst jest używany tylko do odczytu danych w ciągu; go nie można zmodyfikować ciągu bazowego. Moduł wyliczający nie ma wyłącznego dostępu do ciągu.  
  
 Moduł wyliczający jest w nieprawidłowym stanie, jeśli jest umieszczony przed pierwszym elementem tekst w ciągu lub po ostatnim elemencie tekst w ciągu. Gdy moduł wyliczający jest w nieprawidłowym stanie, wywołanie <xref:System.Globalization.TextElementEnumerator.Current%2A> zgłasza wyjątek.  
  
 Początkowo moduł wyliczający jest umieszczony przed pierwszym elementem tekst w ciągu. <xref:System.Globalization.TextElementEnumerator.Reset%2A> Przełącza moduł wyliczający do tej pozycji. W związku z tym po utworzeniu modułu wyliczającego lub po <xref:System.Globalization.TextElementEnumerator.Reset%2A> jest wywoływana, <xref:System.Globalization.TextElementEnumerator.MoveNext%2A> musi zostać wywołana w celu wyprzedzeniem modułu wyliczającego do pierwszego elementu tekst w ciągu przed odczytaniem wartości właściwości <xref:System.Globalization.TextElementEnumerator.Current%2A>.  
  
 <xref:System.Globalization.TextElementEnumerator.Current%2A> zwraca ten sam obiekt, do momentu <xref:System.Globalization.TextElementEnumerator.MoveNext%2A> lub <xref:System.Globalization.TextElementEnumerator.Reset%2A> jest wywoływana.  
  
 Po końcu ciągu jest przekazywany, moduł wyliczający jest ponownie w nieprawidłowym stanie i wywoływania <xref:System.Globalization.TextElementEnumerator.MoveNext%2A> zwraca `false`. Wywoływanie <xref:System.Globalization.TextElementEnumerator.Current%2A> zgłasza wyjątek, jeśli ostatnie wywołanie <xref:System.Globalization.TextElementEnumerator.MoveNext%2A> zwrócił `false`.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="str" /> jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="index" /> znajduje się poza zakresem prawidłowych indeksów dla <paramref name="str" />.</exception>
        <altmember cref="T:System.Globalization.TextElementEnumerator" />
      </Docs>
    </Member>
    <Member MemberName="LengthInTextElements">
      <MemberSignature Language="C#" Value="public int LengthInTextElements { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 LengthInTextElements" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.StringInfo.LengthInTextElements" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LengthInTextElements As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int LengthInTextElements { int get(); };" />
      <MemberSignature Language="F#" Value="member this.LengthInTextElements : int" Usage="System.Globalization.StringInfo.LengthInTextElements" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera liczbę elementów tekstowych w bieżącym <see cref="T:System.Globalization.StringInfo" /> obiektu.</summary>
        <value>Liczba znaków podstawowego, pary zastępcze i łącząc sekwencji znaków w tym <see cref="T:System.Globalization.StringInfo" /> obiektu.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ParseCombiningCharacters">
      <MemberSignature Language="C#" Value="public static int[] ParseCombiningCharacters (string str);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32[] ParseCombiningCharacters(string str) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.StringInfo.ParseCombiningCharacters(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ParseCombiningCharacters (str As String) As Integer()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;int&gt; ^ ParseCombiningCharacters(System::String ^ str);" />
      <MemberSignature Language="F#" Value="static member ParseCombiningCharacters : string -&gt; int[]" Usage="System.Globalization.StringInfo.ParseCombiningCharacters str" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="str" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="str">Ciąg do wyszukania.</param>
        <summary>Zwraca indeksy każdego podstawowego znak, znakiem zastępczym wysokiego poziomu lub znaku kontrolnego w określonym ciągu.</summary>
        <returns>Tablica liczb całkowitych zawiera indeksy od zera każdego podstawowego znak, znakiem zastępczym wysokiego poziomu lub znaku kontrolnego w określonym ciągu.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [Standardu Unicode](http://go.microsoft.com/fwlink/?linkid=37123) Para dwuskładnikowa jest określany jako reprezentację zakodowanych znaków pojedynczy znak abstrakcyjny, który składa się z sekwencji dwie jednostki kodu, gdzie pierwszy jednostka pary jest znakiem zastępczym wysokiego poziomu, a drugą jest niska zastępczy. Znakiem zastępczym wysokiego poziomu jest punkt kodu Unicode z zakresu od U + D800 do U + DBFF i znak zastępczy niskiego poziomu jest punkt kodu Unicode z zakresu od U + DC00 do U + DFFF.  
  
 Znak kontrolny jest znakiem, którego wartość Unicode to U + 007F lub w zakresie 0000 U + poprzez U + 001F lub U + 0080 do U + 009F.  
  
 .NET Framework definiuje element tekstowy jako jednostka tekst, który jest wyświetlany jako pojedynczy znak, czyli grafemów. Element tekstowy może być łączenie podstawowego znak, para zastępcza lub sekwencji. [Standardu Unicode](http://go.microsoft.com/fwlink/?linkid=37123) definiuje łączenie sekwencji pod postacią połączenia podstawowego znak i znaki łączące, co najmniej jeden znak. Para zastępcza może reprezentować podstawowego znak lub łączenia.  
  
 Jeśli łączenie sekwencja znaków jest nieprawidłowa, każdego znaku w tej sekwencji jest także zwracany.  
  
 Każdy indeks w tablicy wynikowy jest początku elementu tekstu, oznacza to, że indeks podstawowego znak lub znakiem zastępczym wysokiego poziomu.  
  
 Długość każdego elementu łatwo jest obliczana jako różnica między kolejnymi indeksów. Długość tablicy, zawsze będzie większa niż długość ciągu. Na przykład biorąc pod uwagę ciąg "\u4f00\u302a\ud800\udc00\u4f01", ta metoda zwraca indeksami 0, 2 i 4.  
  
## <a name="equivalent-members"></a>Równoważne elementów członkowskich  
 Począwszy od wersji 2.0 programu .NET Framework, <xref:System.Globalization.StringInfo.SubstringByTextElements%2A> metody i <xref:System.Globalization.StringInfo.LengthInTextElements%2A> właściwość zapewniać implementację łatwy w użyciu funkcji oferowanych przez <xref:System.Globalization.StringInfo.ParseCombiningCharacters%2A> metody.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje wywołanie <xref:System.Globalization.StringInfo.ParseCombiningCharacters%2A> metody. Ten przykład kodu jest częścią większego przykładu przewidzianego dla <xref:System.Globalization.StringInfo> klasy.  
  
 [!code-cpp[stringinfo#1](~/samples/snippets/cpp/VS_Snippets_CLR/StringInfo/cpp/StringInfo.cpp#1)]
 [!code-csharp[stringinfo#1](~/samples/snippets/csharp/VS_Snippets_CLR/StringInfo/CS/StringInfo.cs#1)]
 [!code-vb[stringinfo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/StringInfo/vb/stringinfo.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="str" /> jest <see langword="null" />.</exception>
        <altmember cref="Overload:System.Globalization.StringInfo.SubstringByTextElements" />
        <altmember cref="P:System.Globalization.StringInfo.LengthInTextElements" />
      </Docs>
    </Member>
    <Member MemberName="String">
      <MemberSignature Language="C#" Value="public string String { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string String" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.StringInfo.String" />
      <MemberSignature Language="VB.NET" Value="Public Property String As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ String { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.String : string with get, set" Usage="System.Globalization.StringInfo.String" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość bieżącego <see cref="T:System.Globalization.StringInfo" /> obiektu.</summary>
        <value>Ciąg, który jest wartością bieżącego <see cref="T:System.Globalization.StringInfo" /> obiektu.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Gdy <xref:System.Globalization.StringInfo> jest tworzone wystąpienie obiektu, jego <xref:System.Globalization.StringInfo.String%2A> właściwość jest ustawiona na jedną z następujących wartości:  
  
-   <xref:System.String.Empty?displayProperty=nameWithType> Jeśli wartość domyślna <xref:System.Globalization.StringInfo.%23ctor> jest wywoływana. Następnie należy użyć <xref:System.Globalization.StringInfo.String%2A> właściwości, aby przypisać ten ciąg że <xref:System.Globalization.StringInfo> rperesents obiektu.  
  
-   Podany ciąg w postaci `value` argument <xref:System.Globalization.StringInfo.%23ctor%28System.String%29> konstruktora.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Wartość w operacji zestawu jest <see langword="null" />.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="SubstringByTextElements">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Pobiera podciąg elementów tekstowych z bieżącej <see cref="T:System.Globalization.StringInfo" /> obiektu.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SubstringByTextElements">
      <MemberSignature Language="C#" Value="public string SubstringByTextElements (int startingTextElement);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string SubstringByTextElements(int32 startingTextElement) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.StringInfo.SubstringByTextElements(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function SubstringByTextElements (startingTextElement As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ SubstringByTextElements(int startingTextElement);" />
      <MemberSignature Language="F#" Value="member this.SubstringByTextElements : int -&gt; string" Usage="stringInfo.SubstringByTextElements startingTextElement" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startingTextElement" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="startingTextElement">Liczony od zera indeks elementu tekstu, w tym <see cref="T:System.Globalization.StringInfo" /> obiektu.</param>
        <summary>Pobiera podciąg elementów tekstowych z bieżącej <see cref="T:System.Globalization.StringInfo" /> obiektu, począwszy od elementu określony tekst i dalej za pośrednictwem po ostatnim elemencie tekstu.</summary>
        <returns>Podciąg elementów tekstowych, w tym <see cref="T:System.Globalization.StringInfo" /> obiektu, zaczynając od indeksu elementu tekstu określonego przez <paramref name="startingTextElement" /> parametr i kontynuowanie przy użyciu po ostatnim elemencie tekstu, w tym obiekcie.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Należy wziąć pod uwagę ciąg, który składa się z pięciu elementy tekstowe, indeksowana z zakresu od 0 do 4. Jeśli `startingTextElement` parametru to 1, <xref:System.Globalization.StringInfo.SubstringByTextElements%2A> metoda zwraca podciąg, który składa się z elementami tekstowymi, dla których indeksy są 1, 2, 3 i 4.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="startingTextElement" /> jest mniejsza niż zero.  - lub - ciąg, który jest wartością bieżącego <see cref="T:System.Globalization.StringInfo" /> obiekt jest pustym ciągiem ("").</exception>
      </Docs>
    </Member>
    <Member MemberName="SubstringByTextElements">
      <MemberSignature Language="C#" Value="public string SubstringByTextElements (int startingTextElement, int lengthInTextElements);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string SubstringByTextElements(int32 startingTextElement, int32 lengthInTextElements) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.StringInfo.SubstringByTextElements(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function SubstringByTextElements (startingTextElement As Integer, lengthInTextElements As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ SubstringByTextElements(int startingTextElement, int lengthInTextElements);" />
      <MemberSignature Language="F#" Value="member this.SubstringByTextElements : int * int -&gt; string" Usage="stringInfo.SubstringByTextElements (startingTextElement, lengthInTextElements)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startingTextElement" Type="System.Int32" />
        <Parameter Name="lengthInTextElements" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="startingTextElement">Liczony od zera indeks elementu tekstu, w tym <see cref="T:System.Globalization.StringInfo" /> obiektu.</param>
        <param name="lengthInTextElements">Liczba elementów tekstowych do pobrania.</param>
        <summary>Pobiera podciąg elementów tekstowych z bieżącej <see cref="T:System.Globalization.StringInfo" /> obiektu, począwszy od elementu określony tekst i kontynuowanie przy użyciu określonej liczby elementów tekstu.</summary>
        <returns>Podciąg elementów tekstowych, w tym <see cref="T:System.Globalization.StringInfo" /> obiektu. Podciąg, który składa się z liczbą elementów tekstu określonego przez <paramref name="lengthInTextElements" /> parametr i rozpoczyna się od indeks elementu tekstu, które są określone przez <paramref name="startingTextElement" /> parametru.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Należy wziąć pod uwagę ciąg, który składa się z pięciu elementy tekstowe, indeksowana z zakresu od 0 do 4. Jeśli `startingTextElement` parametru to 1 i `lengthInTextElements` parametru to 3, <xref:System.Globalization.StringInfo.SubstringByTextElements%2A> metoda zwraca podciąg, który składa się z elementami tekstowymi, dla których indeksy są 1, 2 i 3.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="startingTextElement" /> jest mniejsza niż zero.  - lub - <paramref name="startingTextElement" /> jest większa niż lub równa długości ciągu, który jest wartością bieżącego <see cref="T:System.Globalization.StringInfo" /> obiektu.  - lub - <paramref name="lengthInTextElements" /> jest mniejsza niż zero.  - lub - ciąg, który jest wartością bieżącego <see cref="T:System.Globalization.StringInfo" /> obiekt jest pustym ciągiem ("").  - lub - <paramref name="startingTextElement" />  +  <paramref name="lengthInTextElements" /> określić indeks, która jest większa niż liczba elementów tekstowych, w tym <see cref="T:System.Globalization.StringInfo" /> obiektu.</exception>
      </Docs>
    </Member>
  </Members>
</Type>