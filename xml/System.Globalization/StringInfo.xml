<Type Name="StringInfo" FullName="System.Globalization.StringInfo">
  <Metadata><Meta Name="ms.openlocfilehash" Value="d4c1ef406e811014aa84aac4fc645028a8fae96e" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69357348" /></Metadata><TypeSignature Language="C#" Value="public class StringInfo" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit StringInfo extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Globalization.StringInfo" />
  <TypeSignature Language="VB.NET" Value="Public Class StringInfo" />
  <TypeSignature Language="C++ CLI" Value="public ref class StringInfo" />
  <TypeSignature Language="F#" Value="type StringInfo = class" />
  <AssemblyInfo>
    <AssemblyName>System.Globalization</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Oferuje funkcje do dzielenia ciągu na elementy tekstowe i do iteracji przez te elementy tekstowe.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks

Platforma .NET definiuje element tekstowy jako jednostkę tekstu wyświetlaną jako pojedynczy znak, czyli Grapheme. Element tekstowy może być znakiem podstawowym, parą zastępczą lub kombinacją sekwencji znaków. [Standard Unicode](https://go.microsoft.com/fwlink/?linkid=37123) definiuje parę zastępczą jako reprezentację kodowanego znaku dla pojedynczego znaku abstrakcyjnego, który składa się z sekwencji dwóch jednostek kodu, gdzie pierwsza jednostka pary jest górnym surogatem, a drugi jest dolnym surogatem. Standard Unicode definiuje Łączenie sekwencji znaków jako kombinację znaku podstawowego i jednego lub więcej łączących się znaków. Para dwuskładnikowa może reprezentować znak podstawowy lub łączący znak.  
  
Klasa umożliwia współpracę z ciągiem jako serią elementów tekstowych, a nie pojedynczymi <xref:System.Char> obiektami. <xref:System.Globalization.StringInfo>  
  
Aby utworzyć wystąpienie <xref:System.Globalization.StringInfo> obiektu, który reprezentuje określony ciąg, możesz wykonać jedną z następujących czynności:  
 
- Wywołaj <xref:System.Globalization.StringInfo> konstruktora i przekaż go do ciągu, który obiekt ma reprezentować jako argument. <xref:System.Globalization.StringInfo.%23ctor%28System.String%29>  
  
- Wywołaj konstruktora <xref:System.Globalization.StringInfo.%23ctor> domyślnego i przypisz ciąg <xref:System.Globalization.StringInfo> , który obiekt <xref:System.Globalization.StringInfo.String%2A> ma reprezentować właściwości.  
  
 Można korzystać z poszczególnych elementów tekstu w ciągu na dwa sposoby:  
  
- Przez Wyliczenie każdego elementu tekstowego. W tym <xref:System.Globalization.StringInfo.GetTextElementEnumerator%2A> celu należy wywołać metodę, a następnie wielokrotnie <xref:System.Globalization.TextElementEnumerator.MoveNext%2A> wywołać metodę na zwracanym <xref:System.Globalization.TextElementEnumerator> obiekcie do momentu zwrócenia `false`metody.  
  
- Wywołując <xref:System.Globalization.StringInfo.ParseCombiningCharacters%2A> metodę, aby pobrać tablicę zawierającą indeks początkowy każdego elementu tekstowego. Następnie można pobrać pojedyncze elementy tekstowe przez przekazanie tych indeksów do <xref:System.Globalization.StringInfo.SubstringByTextElements%2A> metody.  
  
Poniższy przykład ilustruje oba sposoby pracy z elementami tekstu w ciągu. Tworzy dwa ciągi:  
  
- `strCombining`, który jest ciągiem znaków arabskich, które zawierają trzy elementy tekstowe z wieloma <xref:System.Char> obiektami. Pierwszy element tekstowy to znak bazowy litery arabski (U +-627), po którym następuje arabski HAMZA (U +-655) i arabski KASRA (U + 0650). Drugi element tekstowy jest LITERą ARABSKĄ HEH (U + 0647), a następnie arabski FATHA (U +-64E). Trzeci element tekstowy to arabski LETTTER BEH (U + 0628), a następnie arabski DAMMATAN (U + 064C).  
  
- `strSurrogates`, który jest ciągiem zawierającym trzy pary dwuskładnikowe: GRECKI ACROPHONIC pięć oraz TALENTEM (U + 10148) z dodatkowej płaszczyzny wielojęzycznej, U + 20026 z dodatkowej płaszczyzny ideograficzne i U + F1001 z prywatnego obszaru użytkownika. Kodowanie UTF-16 każdego znaku jest parę zastępczą, która składa się z dużego surogatu, po którym następuje dolny Surogat.  
  
Każdy ciąg jest analizowany raz przez <xref:System.Globalization.StringInfo.ParseCombiningCharacters%2A> metodę, a następnie <xref:System.Globalization.StringInfo.GetTextElementEnumerator%2A> przez metodę. Obie metody poprawnie analizują elementy tekstowe w dwóch ciągach i wyświetlają wyniki operacji analizowania.  
  
[!code-csharp[System.Globalization.StringInfo.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.stringinfo.class/cs/indexing1.cs#1)]
[!code-vb[System.Globalization.StringInfo.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.stringinfo.class/vb/indexing1.vb#1)]  
  
## Examples  

W tym przykładzie używane <xref:System.Globalization.StringInfo.GetTextElementEnumerator%2A> są <xref:System.Globalization.StringInfo.ParseCombiningCharacters%2A> metody <xref:System.Globalization.StringInfo> i klasy do manipulowania ciągiem, który zawiera Surogat i łączenie znaków.  
  
[!code-cpp[stringinfo#1](~/samples/snippets/cpp/VS_Snippets_CLR/StringInfo/cpp/StringInfo.cpp#1)]
[!code-csharp[stringinfo#1](~/samples/snippets/csharp/VS_Snippets_CLR/StringInfo/CS/StringInfo.cs#1)]
[!code-vb[stringinfo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/StringInfo/vb/stringinfo.vb#1)]  

 ]]></format>
    </remarks>
    <block subset="none" type="usage"><para>Wewnętrznie metody <see cref="T:System.Globalization.StringInfo" /> klasy wywołują metody <see cref="T:System.Globalization.CharUnicodeInfo" /> klasy w celu określenia kategorii znaków. Począwszy od .NET Framework 4.6.2, klasyfikacja znaków jest oparta na [standardzie Unicode w wersji 8.0.0](https://unicode.org/versions/Unicode8.0.0). Dla .NET Framework 4 za pośrednictwem .NET Framework 4.6.1 jest on oparty na [standardzie Unicode w wersji 6.3.0](https://www.unicode.org/versions/Unicode6.3.0/). W programie .NET Core jest oparty na [standardzie Unicode w wersji 8.0.0](https://unicode.org/versions/Unicode8.0.0).</para></block>
    <related type="ExternalDocumentation" href="https://www.microsoft.com/download/details.aspx?id=10921">Sortowanie tabel wagi dla systemów operacyjnych Windows</related>
    <related type="ExternalDocumentation" href="https://www.unicode.org/Public/UCA/latest/allkeys.txt">Domyślna tabela elementów sortowania Unicode dla systemów Linux i macOS</related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Globalization.StringInfo" /> klasy.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StringInfo ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.StringInfo.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; StringInfo();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Globalization.StringInfo" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wartość nowego <xref:System.Globalization.StringInfo> obiektu jest inicjowana do pustego ciągu (""). Można przypisać do niego inny ciąg, używając <xref:System.Globalization.StringInfo.String%2A> właściwości.  Można również utworzyć wystąpienie <xref:System.Globalization.StringInfo> obiektu, który reprezentuje określony ciąg w pojedynczym kroku przez <xref:System.Globalization.StringInfo.%23ctor%28System.String%29> wywołanie konstruktora.  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.String.Empty" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StringInfo (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.StringInfo.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; StringInfo(System::String ^ value);" />
      <MemberSignature Language="F#" Value="new System.Globalization.StringInfo : string -&gt; System.Globalization.StringInfo" Usage="new System.Globalization.StringInfo value" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="value" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="value">Ciąg do zainicjowania tego <see cref="T:System.Globalization.StringInfo" /> obiektu.</param>
        <summary>Inicjuje nowe wystąpienie <see cref="T:System.Globalization.StringInfo" /> klasy do określonego ciągu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten konstruktor przypisuje argument Value do <xref:System.Globalization.StringInfo.String%2A> właściwości obiektu.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="value" />jest <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.StringInfo.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (value As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="stringInfo.Equals value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="value">Obiekt.</param>
        <summary>Wskazuje, czy bieżący <see cref="T:System.Globalization.StringInfo" /> obiekt jest równy podanemu obiektowi.</summary>
        <returns><see langword="true" /><see cref="P:System.Globalization.StringInfo.String" /> <see cref="T:System.Globalization.StringInfo" /> <see langword="false" />Jeśli parametr jest obiektem, a jego właściwość jest równa właściwościtegoobiektu;wprzeciwnymrazie,.<see cref="P:System.Globalization.StringInfo.String" /> <see cref="T:System.Globalization.StringInfo" /> <paramref name="value" /></returns>
        <remarks>To be added.</remarks>
        <altmember cref="Overload:System.String.Equals" />
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.StringInfo.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="stringInfo.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Oblicza wartość skrótu dla wartości bieżącego <see cref="T:System.Globalization.StringInfo" /> obiektu.</summary>
        <returns>32-bitowy kod skrótu ze znakiem liczb całkowitych na podstawie wartości ciągu <see cref="T:System.Globalization.StringInfo" /> tego obiektu.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zachowanie <xref:System.Globalization.StringInfo.GetHashCode%2A> jest zależne od implementacji, która może ulec zmianie z jednej wersji środowiska uruchomieniowego języka wspólnego na inną. Może się tak zdarzyć, aby zwiększyć wydajność <xref:System.Globalization.StringInfo.GetHashCode%2A>programu. Aby zapewnić zachowanie <xref:System.Globalization.StringInfo.GetHashCode%2A> stałej, aplikacja powinna zastąpić <xref:System.Globalization.StringInfo.GetHashCode%2A> implementację środowiska uruchomieniowego programem, jeśli nie zostanie zmieniona implementacja.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.String.GetHashCode" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetNextTextElement">
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Pobiera pierwszy element tekstowy w określonym ciągu.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetNextTextElement">
      <MemberSignature Language="C#" Value="public static string GetNextTextElement (string str);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetNextTextElement(string str) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.StringInfo.GetNextTextElement(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetNextTextElement (str As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetNextTextElement(System::String ^ str);" />
      <MemberSignature Language="F#" Value="static member GetNextTextElement : string -&gt; string" Usage="System.Globalization.StringInfo.GetNextTextElement str" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="str" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="str">Ciąg, z którego ma zostać pobrany element tekstowy.</param>
        <summary>Pobiera pierwszy element tekstowy w określonym ciągu.</summary>
        <returns>Ciąg zawierający pierwszy element tekstowy w określonym ciągu.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 
Platforma .NET definiuje element tekstowy jako jednostkę tekstu wyświetlaną jako pojedynczy znak, czyli Grapheme. Element tekstowy może być znakiem podstawowym, parą zastępczą lub kombinacją sekwencji znaków. [Standard Unicode](https://go.microsoft.com/fwlink/?linkid=37123) definiuje parę zastępczą jako reprezentację kodowanego znaku dla pojedynczego znaku abstrakcyjnego, który składa się z sekwencji dwóch jednostek kodu, gdzie pierwsza jednostka pary jest górnym surogatem, a drugi jest dolnym surogatem. [Standard Unicode](https://go.microsoft.com/fwlink/?linkid=37123) definiuje Łączenie sekwencji znaków jako kombinację znaku podstawowego i jednego lub więcej łączących się znaków. Para dwuskładnikowa może reprezentować znak podstawowy lub łączący znak.  
  
 Ta metoda zwraca tylko pierwszy element tekstu. Aby wykonać iterację elementów tekstowych ciągu, aplikacja powinna używać <xref:System.Globalization.TextElementEnumerator> obiektu wygenerowanego <xref:System.Globalization.StringInfo.GetTextElementEnumerator%2A> przez metodę.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="str" />jest <see langword="null" />.</exception>
        <altmember cref="M:System.Globalization.StringInfo.GetTextElementEnumerator(System.String)" />
        <altmember cref="M:System.Globalization.StringInfo.ParseCombiningCharacters(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="GetNextTextElement">
      <MemberSignature Language="C#" Value="public static string GetNextTextElement (string str, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetNextTextElement(string str, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.StringInfo.GetNextTextElement(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetNextTextElement (str As String, index As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetNextTextElement(System::String ^ str, int index);" />
      <MemberSignature Language="F#" Value="static member GetNextTextElement : string * int -&gt; string" Usage="System.Globalization.StringInfo.GetNextTextElement (str, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="str" Type="System.String" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="str">Ciąg, z którego ma zostać pobrany element tekstowy.</param>
        <param name="index">Indeks (liczony od zera), w którym jest uruchamiany element Text.</param>
        <summary>Pobiera element tekstowy przy określonym indeksie określonego ciągu.</summary>
        <returns>Ciąg zawierający element tekstowy w określonym indeksie określonego ciągu.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks
 
Platforma .NET definiuje element tekstowy jako jednostkę tekstu wyświetlaną jako pojedynczy znak, czyli Grapheme. Element tekstowy może być znakiem podstawowym, parą zastępczą lub kombinacją sekwencji znaków. [Standard Unicode](https://go.microsoft.com/fwlink/?linkid=37123) definiuje parę zastępczą jako reprezentację kodowanego znaku dla pojedynczego znaku abstrakcyjnego, który składa się z sekwencji dwóch jednostek kodu, gdzie pierwsza jednostka pary jest górnym surogatem, a drugi jest dolnym surogatem. Standard Unicode definiuje Łączenie sekwencji znaków jako kombinację znaku podstawowego i jednego lub więcej łączących się znaków. Para dwuskładnikowa może reprezentować znak podstawowy lub łączący znak.  
  
 Ta metoda zwraca tylko pierwszy element tekstowy podciągu, który zaczyna się od określonego indeksu. Aby wykonać iterację elementów tekstowych ciągu, aplikacja powinna używać <xref:System.Globalization.TextElementEnumerator> wygenerowanej <xref:System.Globalization.StringInfo.GetTextElementEnumerator%2A> przez metodę.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="str" />jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="index" />znajduje się poza zakresem prawidłowych indeksów <paramref name="str" />dla.</exception>
        <altmember cref="M:System.Globalization.StringInfo.GetTextElementEnumerator(System.String)" />
        <altmember cref="M:System.Globalization.StringInfo.ParseCombiningCharacters(System.String)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetTextElementEnumerator">
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Zwraca moduł wyliczający, który wykonuje iterację przez elementy tekstowe ciągu.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetTextElementEnumerator">
      <MemberSignature Language="C#" Value="public static System.Globalization.TextElementEnumerator GetTextElementEnumerator (string str);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Globalization.TextElementEnumerator GetTextElementEnumerator(string str) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.StringInfo.GetTextElementEnumerator(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetTextElementEnumerator (str As String) As TextElementEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Globalization::TextElementEnumerator ^ GetTextElementEnumerator(System::String ^ str);" />
      <MemberSignature Language="F#" Value="static member GetTextElementEnumerator : string -&gt; System.Globalization.TextElementEnumerator" Usage="System.Globalization.StringInfo.GetTextElementEnumerator str" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.TextElementEnumerator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="str" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="str">Ciąg do iteracji.</param>
        <summary>Zwraca moduł wyliczający, który wykonuje iterację przez elementy tekstowe całego ciągu.</summary>
        <returns><see cref="T:System.Globalization.TextElementEnumerator" /> Dla całego ciągu.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Platforma .NET definiuje element tekstowy jako jednostkę tekstu wyświetlaną jako pojedynczy znak, czyli Grapheme. Element tekstowy może być znakiem podstawowym, parą zastępczą lub kombinacją sekwencji znaków. [Standard Unicode](https://go.microsoft.com/fwlink/?linkid=37123) definiuje parę zastępczą jako reprezentację kodowanego znaku dla pojedynczego znaku abstrakcyjnego, który składa się z sekwencji dwóch jednostek kodu, gdzie pierwsza jednostka pary jest górnym surogatem, a drugi jest dolnym surogatem. Standard Unicode definiuje Łączenie sekwencji znaków jako kombinację znaku podstawowego i jednego lub więcej łączących się znaków. Para dwuskładnikowa może reprezentować znak podstawowy lub łączący znak.  
  
 Moduł wyliczający element tekstowy służy tylko do odczytu danych w ciągu; nie można zmodyfikować ciągu bazowego. Moduł wyliczający nie ma wyłącznego dostępu do ciągu.  
  
 Moduł wyliczający jest w nieprawidłowym stanie, jeśli jest umieszczony przed pierwszym elementem tekstu w ciągu lub po ostatnim elemencie tekstu w ciągu. Gdy moduł wyliczający jest w nieprawidłowym stanie <xref:System.Globalization.TextElementEnumerator.Current%2A> , wywołanie zgłosi wyjątek.  
  
 Początkowo moduł wyliczający jest umieszczony przed pierwszym elementem tekstu w ciągu. <xref:System.Globalization.TextElementEnumerator.Reset%2A>przywraca również moduł wyliczający z powrotem do tego położenia. W związku z tym po utworzeniu modułu wyliczającego lub <xref:System.Globalization.TextElementEnumerator.Reset%2A> po <xref:System.Globalization.TextElementEnumerator.MoveNext%2A> wywołaniu, należy wywołać, aby przetworzyć moduł wyliczający do pierwszego elementu tekstowego ciągu <xref:System.Globalization.TextElementEnumerator.Current%2A>przed odczytem wartości.  
  
 <xref:System.Globalization.TextElementEnumerator.Current%2A>zwraca ten sam obiekt do <xref:System.Globalization.TextElementEnumerator.MoveNext%2A> momentu <xref:System.Globalization.TextElementEnumerator.Reset%2A> wywołania metody lub.  
  
 Po przekazaniu końca ciągu moduł wyliczający jest ponownie w nieprawidłowym stanie i wywołuje wywołania <xref:System.Globalization.TextElementEnumerator.MoveNext%2A> zwrotne `false`. Wywołanie <xref:System.Globalization.TextElementEnumerator.Current%2A> zgłasza wyjątek, jeśli ostatnie wywołanie do <xref:System.Globalization.TextElementEnumerator.MoveNext%2A> zwracanego `false`elementu.  
  
   
  
## Examples  
 Poniższy przykład demonstruje wywołanie <xref:System.Globalization.StringInfo.GetTextElementEnumerator%2A> metody. Ten przykład jest częścią większego przykładu dostarczonego dla <xref:System.Globalization.StringInfo> klasy.  
  
 [!code-cpp[stringinfo#1](~/samples/snippets/cpp/VS_Snippets_CLR/StringInfo/cpp/StringInfo.cpp#1)]
 [!code-csharp[stringinfo#1](~/samples/snippets/csharp/VS_Snippets_CLR/StringInfo/CS/StringInfo.cs#1)]
 [!code-vb[stringinfo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/StringInfo/vb/stringinfo.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="str" />jest <see langword="null" />.</exception>
        <altmember cref="T:System.Globalization.TextElementEnumerator" />
      </Docs>
    </Member>
    <Member MemberName="GetTextElementEnumerator">
      <MemberSignature Language="C#" Value="public static System.Globalization.TextElementEnumerator GetTextElementEnumerator (string str, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Globalization.TextElementEnumerator GetTextElementEnumerator(string str, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.StringInfo.GetTextElementEnumerator(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetTextElementEnumerator (str As String, index As Integer) As TextElementEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Globalization::TextElementEnumerator ^ GetTextElementEnumerator(System::String ^ str, int index);" />
      <MemberSignature Language="F#" Value="static member GetTextElementEnumerator : string * int -&gt; System.Globalization.TextElementEnumerator" Usage="System.Globalization.StringInfo.GetTextElementEnumerator (str, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Globalization.TextElementEnumerator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="str" Type="System.String" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="str">Ciąg do iteracji.</param>
        <param name="index">Indeks (liczony od zera), od którego należy rozpocząć iterację.</param>
        <summary>Zwraca moduł wyliczający, który wykonuje iterację przez elementy tekstowe ciągu, rozpoczynając od określonego indeksu.</summary>
        <returns>A <see cref="T:System.Globalization.TextElementEnumerator" /> dla ciągu rozpoczynającego się <paramref name="index" />od.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Platforma .NET definiuje element tekstowy jako jednostkę tekstu wyświetlaną jako pojedynczy znak, czyli Grapheme. Element tekstowy może być znakiem podstawowym, parą zastępczą lub kombinacją sekwencji znaków. [Standard Unicode](https://go.microsoft.com/fwlink/?linkid=37123) definiuje parę zastępczą jako reprezentację kodowanego znaku dla pojedynczego znaku abstrakcyjnego, który składa się z sekwencji dwóch jednostek kodu, gdzie pierwsza jednostka pary jest górnym surogatem, a drugi jest dolnym surogatem. Standard Unicode definiuje Łączenie sekwencji znaków jako kombinację znaku podstawowego i jednego lub więcej łączących się znaków. Para dwuskładnikowa może reprezentować znak podstawowy lub łączący znak.  
  
 Moduł wyliczający element tekstowy służy tylko do odczytu danych w ciągu; nie można zmodyfikować ciągu bazowego. Moduł wyliczający nie ma wyłącznego dostępu do ciągu.  
  
 Moduł wyliczający jest w nieprawidłowym stanie, jeśli jest umieszczony przed pierwszym elementem tekstu w ciągu lub po ostatnim elemencie tekstu w ciągu. Gdy moduł wyliczający jest w nieprawidłowym stanie <xref:System.Globalization.TextElementEnumerator.Current%2A> , wywołanie zgłosi wyjątek.  
  
 Początkowo moduł wyliczający jest umieszczony przed pierwszym elementem tekstu w ciągu. <xref:System.Globalization.TextElementEnumerator.Reset%2A>przywraca również moduł wyliczający z powrotem do tego położenia. W związku z tym po utworzeniu modułu wyliczającego lub <xref:System.Globalization.TextElementEnumerator.Reset%2A> po <xref:System.Globalization.TextElementEnumerator.MoveNext%2A> wywołaniu, należy wywołać, aby przetworzyć moduł wyliczający do pierwszego elementu tekstowego ciągu <xref:System.Globalization.TextElementEnumerator.Current%2A>przed odczytem wartości.  
  
 <xref:System.Globalization.TextElementEnumerator.Current%2A>zwraca ten sam obiekt do <xref:System.Globalization.TextElementEnumerator.MoveNext%2A> momentu <xref:System.Globalization.TextElementEnumerator.Reset%2A> wywołania metody lub.  
  
 Po przekazaniu końca ciągu moduł wyliczający jest ponownie w nieprawidłowym stanie i wywołuje wywołania <xref:System.Globalization.TextElementEnumerator.MoveNext%2A> zwrotne `false`. Wywołanie <xref:System.Globalization.TextElementEnumerator.Current%2A> zgłasza wyjątek, jeśli ostatnie wywołanie do <xref:System.Globalization.TextElementEnumerator.MoveNext%2A> zwracanego `false`elementu.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="str" />jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="index" />znajduje się poza zakresem prawidłowych indeksów <paramref name="str" />dla.</exception>
        <altmember cref="T:System.Globalization.TextElementEnumerator" />
      </Docs>
    </Member>
    <Member MemberName="LengthInTextElements">
      <MemberSignature Language="C#" Value="public int LengthInTextElements { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 LengthInTextElements" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.StringInfo.LengthInTextElements" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LengthInTextElements As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int LengthInTextElements { int get(); };" />
      <MemberSignature Language="F#" Value="member this.LengthInTextElements : int" Usage="System.Globalization.StringInfo.LengthInTextElements" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera liczbę elementów tekstu w bieżącym <see cref="T:System.Globalization.StringInfo" /> obiekcie.</summary>
        <value>Liczba znaków podstawowych, par surogatów i łączenie sekwencji znaków w tym <see cref="T:System.Globalization.StringInfo" /> obiekcie.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ParseCombiningCharacters">
      <MemberSignature Language="C#" Value="public static int[] ParseCombiningCharacters (string str);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32[] ParseCombiningCharacters(string str) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.StringInfo.ParseCombiningCharacters(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ParseCombiningCharacters (str As String) As Integer()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;int&gt; ^ ParseCombiningCharacters(System::String ^ str);" />
      <MemberSignature Language="F#" Value="static member ParseCombiningCharacters : string -&gt; int[]" Usage="System.Globalization.StringInfo.ParseCombiningCharacters str" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="str" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="str">Ciąg do wyszukania.</param>
        <summary>Zwraca indeksy każdego znaku podstawowego, wieloskładnikowego lub znaku kontrolnego w określonym ciągu.</summary>
        <returns>Tablica liczb całkowitych, która zawiera indeksy oparte na zerach dla każdego znaku podstawowego, dużego surogatu lub znaku kontrolnego w określonym ciągu.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [Standard Unicode](https://go.microsoft.com/fwlink/?linkid=37123) definiuje parę zastępczą jako reprezentację kodowanego znaku dla pojedynczego znaku abstrakcyjnego, który składa się z sekwencji dwóch jednostek kodu, gdzie pierwsza jednostka pary jest górnym surogatem, a drugi jest dolnym surogatem. Duży Surogat jest punktem kodu Unicode w zakresie U + D800 za pomocą U + DBFF, a dolny Surogat jest punktem kodu Unicode w zakresie U + DC00 za pomocą U + DFFF.  
  
 Znak kontrolny jest znakiem, dla którego wartość Unicode jest U + 007F lub z zakresu U + 0000 do U + 001F lub U + 0080 za pomocą U + 009F.  
  
 Platforma .NET definiuje element tekstowy jako jednostkę tekstu wyświetlaną jako pojedynczy znak, czyli Grapheme. Element tekstowy może być znakiem podstawowym, parą zastępczą lub kombinacją sekwencji znaków. [Standard Unicode](https://go.microsoft.com/fwlink/?linkid=37123) definiuje Łączenie sekwencji znaków jako kombinację znaku podstawowego i jednego lub więcej łączących się znaków. Para dwuskładnikowa może reprezentować znak podstawowy lub łączący znak.  
  
 Jeśli ciąg łączący znak jest nieprawidłowy, zwracany jest również każdy łączący znak w tej sekwencji.  
  
 Każdy indeks w wyniku tablicy jest początkiem elementu tekstowego, czyli indeksem znaku podstawowego lub dużego surogatu.  
  
 Długość każdego elementu jest łatwo obliczana jako różnica między kolejnymi indeksami. Długość tablicy będzie zawsze mniejsza lub równa długości ciągu. Na przykład, uwzględniając ciąg "\u4f00\u302a\ud800\udc00\u4f01", Metoda ta zwraca indeksy 0, 2 i 4.  
  
## <a name="equivalent-members"></a>Równoważne elementy członkowskie  
 Począwszy od wersji 2,0 .NET Framework, <xref:System.Globalization.StringInfo.SubstringByTextElements%2A> Metoda i <xref:System.Globalization.StringInfo.LengthInTextElements%2A> Właściwość zapewniają łatwą w użyciu implementację funkcji oferowanych przez <xref:System.Globalization.StringInfo.ParseCombiningCharacters%2A> metodę.  
  
   
  
## Examples  
 Poniższy przykład demonstruje wywołanie <xref:System.Globalization.StringInfo.ParseCombiningCharacters%2A> metody. Ten przykład kodu jest częścią większego przykładu dostarczonego dla <xref:System.Globalization.StringInfo> klasy.  
  
 [!code-cpp[stringinfo#1](~/samples/snippets/cpp/VS_Snippets_CLR/StringInfo/cpp/StringInfo.cpp#1)]
 [!code-csharp[stringinfo#1](~/samples/snippets/csharp/VS_Snippets_CLR/StringInfo/CS/StringInfo.cs#1)]
 [!code-vb[stringinfo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/StringInfo/vb/stringinfo.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="str" />jest <see langword="null" />.</exception>
        <altmember cref="Overload:System.Globalization.StringInfo.SubstringByTextElements" />
        <altmember cref="P:System.Globalization.StringInfo.LengthInTextElements" />
      </Docs>
    </Member>
    <Member MemberName="String">
      <MemberSignature Language="C#" Value="public string String { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string String" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.StringInfo.String" />
      <MemberSignature Language="VB.NET" Value="Public Property String As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ String { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.String : string with get, set" Usage="System.Globalization.StringInfo.String" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość bieżącego <see cref="T:System.Globalization.StringInfo" /> obiektu.</summary>
        <value>Ciąg, który jest wartością bieżącego <see cref="T:System.Globalization.StringInfo" /> obiektu.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Po utworzeniu wystąpienia <xref:System.Globalization.StringInfo.String%2A>obiektujego właściwość jest ustawiana na jedną z następujących wartości: <xref:System.Globalization.StringInfo>  
  
-   <xref:System.String.Empty?displayProperty=nameWithType>Jeśli wartość domyślna <xref:System.Globalization.StringInfo.%23ctor> jest wywoływana. Następnie należy użyć <xref:System.Globalization.StringInfo.String%2A> właściwości, aby przypisać ciąg, który ten <xref:System.Globalization.StringInfo> obiekt rperesents.  
  
-   Ciąg dostarczony jako `value` argument <xref:System.Globalization.StringInfo.%23ctor%28System.String%29> konstruktora.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Wartość w operacji zestawu wynosi <see langword="null" />.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="SubstringByTextElements">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Pobiera podciąg elementów tekstu z bieżącego <see cref="T:System.Globalization.StringInfo" /> obiektu.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SubstringByTextElements">
      <MemberSignature Language="C#" Value="public string SubstringByTextElements (int startingTextElement);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string SubstringByTextElements(int32 startingTextElement) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.StringInfo.SubstringByTextElements(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function SubstringByTextElements (startingTextElement As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ SubstringByTextElements(int startingTextElement);" />
      <MemberSignature Language="F#" Value="member this.SubstringByTextElements : int -&gt; string" Usage="stringInfo.SubstringByTextElements startingTextElement" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startingTextElement" Type="System.Int32" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="startingTextElement">Indeks (liczony od zera) elementu tekstowego w tym <see cref="T:System.Globalization.StringInfo" /> obiekcie.</param>
        <summary>Pobiera podciąg elementów tekstu z bieżącego <see cref="T:System.Globalization.StringInfo" /> obiektu, rozpoczynając od określonego elementu tekstowego i przechodząc do ostatniego elementu tekstowego.</summary>
        <returns>Podciąg elementów tekstu w tym <see cref="T:System.Globalization.StringInfo" /> obiekcie, rozpoczynając od indeksu elementu tekstowego określonego <paramref name="startingTextElement" /> przez parametr i kontynuowania przez ostatni element tekstowy w tym obiekcie.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Rozważmy ciąg, który składa się z pięciu elementów tekstu, indeksowanych od 0 do 4. Jeśli parametr ma wartość 1 <xref:System.Globalization.StringInfo.SubstringByTextElements%2A> , metoda zwraca podciąg, który składa się z elementów tekstowych, dla których indeksy to 1, 2, 3 i 4. `startingTextElement`  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="startingTextElement" />jest mniejsza od zera.  
  
—lub— 
Ciąg, który jest wartością bieżącego <see cref="T:System.Globalization.StringInfo" /> obiektu, jest ciągiem pustym ("").</exception>
      </Docs>
    </Member>
    <Member MemberName="SubstringByTextElements">
      <MemberSignature Language="C#" Value="public string SubstringByTextElements (int startingTextElement, int lengthInTextElements);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string SubstringByTextElements(int32 startingTextElement, int32 lengthInTextElements) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.StringInfo.SubstringByTextElements(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function SubstringByTextElements (startingTextElement As Integer, lengthInTextElements As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ SubstringByTextElements(int startingTextElement, int lengthInTextElements);" />
      <MemberSignature Language="F#" Value="member this.SubstringByTextElements : int * int -&gt; string" Usage="stringInfo.SubstringByTextElements (startingTextElement, lengthInTextElements)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startingTextElement" Type="System.Int32" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="lengthInTextElements" Type="System.Int32" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="startingTextElement">Indeks (liczony od zera) elementu tekstowego w tym <see cref="T:System.Globalization.StringInfo" /> obiekcie.</param>
        <param name="lengthInTextElements">Liczba elementów tekstu do pobrania.</param>
        <summary>Pobiera podciąg elementów tekstu z bieżącego <see cref="T:System.Globalization.StringInfo" /> obiektu, rozpoczynając od określonego elementu tekstowego i kontynuując określoną liczbę elementów tekstowych.</summary>
        <returns>Podciąg elementów tekstu w tym <see cref="T:System.Globalization.StringInfo" /> obiekcie. Podciąg składa się z liczby elementów tekstowych określonych przez <paramref name="lengthInTextElements" /> parametr i zaczyna się od indeksu elementu tekstowego określonego <paramref name="startingTextElement" /> przez parametr.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Rozważmy ciąg, który składa się z pięciu elementów tekstu, indeksowanych od 0 do 4. Jeśli parametr ma wartość 1, `lengthInTextElements` a <xref:System.Globalization.StringInfo.SubstringByTextElements%2A> parametr to 3, metoda zwraca podciąg, który składa się z elementów tekstowych, dla których indeksy to 1, 2 i 3. `startingTextElement`  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="startingTextElement" />jest mniejsza od zera.  
  
—lub— 
 <paramref name="startingTextElement" />jest większa niż lub równa długości ciągu, który jest wartością bieżącego <see cref="T:System.Globalization.StringInfo" /> obiektu.  
  
—lub— 
 <paramref name="lengthInTextElements" />jest mniejsza od zera.  
  
—lub— 
Ciąg, który jest wartością bieżącego <see cref="T:System.Globalization.StringInfo" /> obiektu, jest ciągiem pustym ("").  
  
—lub— 
 <paramref name="startingTextElement" /> + <paramref name="lengthInTextElements" />Określ indeks, który jest większy niż liczba elementów tekstu w tym <see cref="T:System.Globalization.StringInfo" /> obiekcie.</exception>
      </Docs>
    </Member>
  </Members>
</Type>
