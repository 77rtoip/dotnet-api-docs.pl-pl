<Type Name="StringInfo" FullName="System.Globalization.StringInfo">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="89e38a54ead99269dc0e016b6a7b247af7214995" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36485948" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class StringInfo" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit StringInfo extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Globalization.StringInfo" />
  <TypeSignature Language="VB.NET" Value="Public Class StringInfo" />
  <TypeSignature Language="C++ CLI" Value="public ref class StringInfo" />
  <TypeSignature Language="F#" Value="type StringInfo = class" />
  <AssemblyInfo>
    <AssemblyName>System.Globalization</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Zawiera funkcję, aby podzielić ciąg na elementy tekstu i do iteracji tych elementów tekstu.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 .NET Framework definiuje element tekstu jako tekst, który jest wyświetlany jako pojedynczy znak, czyli grafemów jednostki. Element tekstowy może być znaku podstawowego, para zastępcza lub znak łączenie sekwencji. [Unicode Standard](http://go.microsoft.com/fwlink/?linkid=37123) definiuje para zastępcza jako reprezentację kodowane znak pojedynczy znak abstrakcyjna, który składa się z sekwencję dwóch jednostek kodu, gdy jednostka pierwszy pary jest zastępczym wysokiego poziomu, a drugą jest niski dwuskładnikowego. Unicode Standard definiuje łączenie sekwencji jako połączenie znaku podstawowego i znaki łączące, co najmniej jeden znak. Para zastępcza może reprezentować znaku podstawowego lub znaku.  
  
 <xref:System.Globalization.StringInfo> Klasa umożliwia pracę z ciągu jako ciąg tekstowy elementy, a nie poszczególnych <xref:System.Char> obiektów.  
  
 Można utworzyć wystąpienia <xref:System.Globalization.StringInfo> obiekt reprezentujący określony ciąg, wykonaj jedną z następujących czynności:  
  
-   Wywołanie <xref:System.Globalization.StringInfo.%23ctor%28System.String%29> Konstruktor i przekaż go ciąg który <xref:System.Globalization.StringInfo> obiektu będzie reprezentować jako argument.  
  
-   Wywołaj domyślny <xref:System.Globalization.StringInfo.%23ctor> konstruktora i przypisz ciąg, który <xref:System.Globalization.StringInfo> obiekt jest do reprezentowania <xref:System.Globalization.StringInfo.String%2A> właściwości.  
  
 Można pracować z elementami poszczególnych tekst w ciągu na dwa sposoby:  
  
-   Wyliczając każdego elementu text. Aby to zrobić, należy wywołać <xref:System.Globalization.StringInfo.GetTextElementEnumerator%2A> metody, a następnie wywołać wielokrotnie <xref:System.Globalization.TextElementEnumerator.MoveNext%2A> metody w zwróconym <xref:System.Globalization.TextElementEnumerator> obiekt do momentu metoda zwraca `false`.  
  
-   Wywołując <xref:System.Globalization.StringInfo.ParseCombiningCharacters%2A> metoda pobierania tablicę, która zawiera indeks początkowy każdego elementu text. Następnie można pobrać elementów tekstowych poszczególnych przekazując te indeksy <xref:System.Globalization.StringInfo.SubstringByTextElements%2A> metody.  
  
 Poniższy przykład przedstawia zarówno sposoby pracy z elementami tekst w ciągu. Tworzy dwa parametry:  
  
-   `strCombining`, która jest ciąg znaków arabskich, który zawiera trzy elementy tekstu w wielu <xref:System.Char> obiektów. Pierwszy element tekst jest znak podstawowy ARABIC ALEF litery (U +-627) następuje ARABIC HAMZA poniżej (U +-655) i ARABIC KASRA (U + 0650). Drugi element tekst jest ARABIC HEH litery (U + 0647) następuje ARABIC FATHA (U +-64E). Trzeci element tekstowy jest ARABIC LETTTER BEH (U + 0628) następuje ARABIC DAMMATAN (U + 064C).  
  
-   `strSurrogates`, który jest ciągiem, który obejmuje trzy znaki dwuskładnikowe: GRECKI ACROPHONIC PIĘĆ sposób (U + 10148) z dodatkowych płaszczyzny wielojęzyczny 20026 U + z dodatkowych płaszczyzny ideograficznych i U + F1001 z obszaru prywatnego użytkownika. Kodowanie UTF-16 każdy znak jest para zastępcza, która składa się z zastępczym wysokiego poziomu następuje dwuskładnikowego.  
  
 Każdy ciąg jest analizowana raz przez <xref:System.Globalization.StringInfo.ParseCombiningCharacters%2A> — metoda, a następnie według <xref:System.Globalization.StringInfo.GetTextElementEnumerator%2A> metody. Obie metody poprawnie analizowanie elementów tekstu w dwa ciągi i wyświetlić wyniki analizy operacji.  
  
 [!code-csharp[System.Globalization.StringInfo.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.stringinfo.class/cs/indexing1.cs#1)]
 [!code-vb[System.Globalization.StringInfo.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.stringinfo.class/vb/indexing1.vb#1)]  
  
   
  
## Examples  
 Ten przykład przedstawia sposób użycia <xref:System.Globalization.StringInfo.GetTextElementEnumerator%2A> i <xref:System.Globalization.StringInfo.ParseCombiningCharacters%2A> metody <xref:System.Globalization.StringInfo> klasy do manipulowania ciąg, który zawiera Surogat i łączenia znaków.  
  
 [!code-cpp[stringinfo#1](~/samples/snippets/cpp/VS_Snippets_CLR/StringInfo/cpp/StringInfo.cpp#1)]
 [!code-csharp[stringinfo#1](~/samples/snippets/csharp/VS_Snippets_CLR/StringInfo/CS/StringInfo.cs#1)]
 [!code-vb[stringinfo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/StringInfo/vb/stringinfo.vb#1)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="usage">
      <para>Wewnętrznie metody <see cref="T:System.Globalization.StringInfo" /> klasy wywołania metody <see cref="T:System.Globalization.CharUnicodeInfo" /> klasę, aby określić kategorie znaków. Począwszy od [! INCLUDE[net_v462](~/includes/NET-v462-MD.MD)] Klasyfikacja znaków opiera się na [Unicode Standard, wersja 8.0.0] (https://unicode.org/versions/Unicode8.0.0). Dla [! INCLUDE[net_v40_long](~/includes/NET-V40-Long-MD.MD)] do [! INCLUDE[net_v461](~/includes/NET-v461-MD.MD)] jest oparty na [Unicode Standard, wersja 6.3.0] (https://www.unicode.org/versions/Unicode6.3.0/).</para>
    </block>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Globalization.StringInfo" /> klasy.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StringInfo ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.StringInfo.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; StringInfo();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Globalization.StringInfo" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wartość nowego <xref:System.Globalization.StringInfo> obiekt został zainicjowany ciąg pusty (""). Inny ciąg można przypisać do niej przy użyciu <xref:System.Globalization.StringInfo.String%2A> właściwości.  Można również utworzyć wystąpienie <xref:System.Globalization.StringInfo> obiekt reprezentujący określony ciąg w jednym kroku przez wywołanie metody <xref:System.Globalization.StringInfo.%23ctor%28System.String%29> konstruktora.  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.String.Empty" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StringInfo (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.StringInfo.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; StringInfo(System::String ^ value);" />
      <MemberSignature Language="F#" Value="new System.Globalization.StringInfo : string -&gt; System.Globalization.StringInfo" Usage="new System.Globalization.StringInfo value" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">Ciąg, aby zainicjować to <see cref="T:System.Globalization.StringInfo" /> obiektu.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Globalization.StringInfo" /> klasy do określonego ciągu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten konstruktor przypisuje wartość argumentu z obiektem <xref:System.Globalization.StringInfo.String%2A> właściwości.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="value" /> jest <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.StringInfo.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (value As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="stringInfo.Equals value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">Obiekt.</param>
        <summary>Wskazuje, czy bieżący <see cref="T:System.Globalization.StringInfo" /> obiekt jest taki sam jak określony obiekt.</summary>
        <returns>
          <see langword="true" /> Jeśli <paramref name="value" /> parametr jest <see cref="T:System.Globalization.StringInfo" /> obiekt i jego <see cref="P:System.Globalization.StringInfo.String" /> równa właściwości <see cref="P:System.Globalization.StringInfo.String" /> właściwości tego <see cref="T:System.Globalization.StringInfo" /> obiektu; w przeciwnym razie <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="Overload:System.String.Equals" />
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.StringInfo.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="stringInfo.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Oblicza wartość skrótu dla wartości bieżącego <see cref="T:System.Globalization.StringInfo" /> obiektu.</summary>
        <returns>32-bitowej podpisanej liczby całkowitej wartość skrótu na podstawie ciągu wartości tego <see cref="T:System.Globalization.StringInfo" /> obiektu.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zachowanie <xref:System.Globalization.StringInfo.GetHashCode%2A> jest zależny od jego wdrożenie, które mogą ulec zmianie od jednej wersji środowiska CLR do innego. Może to mieć miejsce, aby poprawić wydajność <xref:System.Globalization.StringInfo.GetHashCode%2A>. Aby zachowanie <xref:System.Globalization.StringInfo.GetHashCode%2A> stałej, aplikacji powinny zastępować implementacji środowiska uruchomieniowego <xref:System.Globalization.StringInfo.GetHashCode%2A> z implementacją wiadomo, nigdy nie zmiany.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.String.GetHashCode" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetNextTextElement">
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Pobiera pierwszy element tekst w określonym ciągu.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetNextTextElement">
      <MemberSignature Language="C#" Value="public static string GetNextTextElement (string str);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetNextTextElement(string str) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.StringInfo.GetNextTextElement(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetNextTextElement (str As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetNextTextElement(System::String ^ str);" />
      <MemberSignature Language="F#" Value="static member GetNextTextElement : string -&gt; string" Usage="System.Globalization.StringInfo.GetNextTextElement str" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="str" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="str">Ciąg, z którego można pobrać elementu tekstowego.</param>
        <summary>Pobiera pierwszy element tekst w określonym ciągu.</summary>
        <returns>Ciąg zawierający pierwszy element tekst w określonym ciągu.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 .NET Framework definiuje element tekstu jako tekst, który jest wyświetlany jako pojedynczy znak, czyli grafemów jednostki. Element tekstowy może być znaku podstawowego, para zastępcza lub znak łączenie sekwencji. [Unicode Standard](http://go.microsoft.com/fwlink/?linkid=37123) definiuje para zastępcza jako reprezentację kodowane znak pojedynczy znak abstrakcyjna, który składa się z sekwencję dwóch jednostek kodu, gdy jednostka pierwszy pary jest zastępczym wysokiego poziomu, a drugą jest niski dwuskładnikowego. [Unicode Standard](http://go.microsoft.com/fwlink/?linkid=37123) definiuje łączenie sekwencji jako połączenie znaku podstawowego i znaki łączące, co najmniej jeden znak. Para zastępcza może reprezentować znaku podstawowego lub znaku.  
  
 Ta metoda zwraca tylko pierwszy element tekstowy. Do iterowania po elementach tekst ciągu, należy użyć aplikacji <xref:System.Globalization.TextElementEnumerator> generowanych przez obiekt <xref:System.Globalization.StringInfo.GetTextElementEnumerator%2A> metody.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="str" /> jest <see langword="null" />.</exception>
        <altmember cref="M:System.Globalization.StringInfo.GetTextElementEnumerator(System.String)" />
        <altmember cref="M:System.Globalization.StringInfo.ParseCombiningCharacters(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="GetNextTextElement">
      <MemberSignature Language="C#" Value="public static string GetNextTextElement (string str, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetNextTextElement(string str, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.StringInfo.GetNextTextElement(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetNextTextElement (str As String, index As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetNextTextElement(System::String ^ str, int index);" />
      <MemberSignature Language="F#" Value="static member GetNextTextElement : string * int -&gt; string" Usage="System.Globalization.StringInfo.GetNextTextElement (str, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="str" Type="System.String" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="str">Ciąg, z którego można pobrać elementu tekstowego.</param>
        <param name="index">Liczony od zera indeks, w którym rozpoczyna się element tekstowy.</param>
        <summary>Pobiera element tekst w określonym indeksie określonego ciągu.</summary>
        <returns>Ciąg zawierający element tekst w określonym indeksie określonego ciągu.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 .NET Framework definiuje element tekstu jako tekst, który jest wyświetlany jako pojedynczy znak, czyli grafemów jednostki. Element tekstowy może być znaku podstawowego, para zastępcza lub znak łączenie sekwencji. [Unicode Standard](http://go.microsoft.com/fwlink/?linkid=37123) definiuje para zastępcza jako reprezentację kodowane znak pojedynczy znak abstrakcyjna, który składa się z sekwencję dwóch jednostek kodu, gdy jednostka pierwszy pary jest zastępczym wysokiego poziomu, a drugą jest niski dwuskładnikowego. Unicode Standard definiuje łączenie sekwencji jako połączenie znaku podstawowego i znaki łączące, co najmniej jeden znak. Para zastępcza może reprezentować znaku podstawowego lub znaku.  
  
 Ta metoda zwraca tylko pierwszy element tekstowy podciągu, który rozpoczyna się od określonego indeksu. Do iterowania po elementach tekst ciągu, należy użyć aplikacji <xref:System.Globalization.TextElementEnumerator> generowane przez <xref:System.Globalization.StringInfo.GetTextElementEnumerator%2A> metody.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="str" /> jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="index" /> znajduje się poza zakresem indeksów prawidłowy dla <paramref name="str" />.</exception>
        <altmember cref="M:System.Globalization.StringInfo.GetTextElementEnumerator(System.String)" />
        <altmember cref="M:System.Globalization.StringInfo.ParseCombiningCharacters(System.String)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetTextElementEnumerator">
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Zwraca moduł wyliczający, który iteruje po elementy tekst w ciągu.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetTextElementEnumerator">
      <MemberSignature Language="C#" Value="public static System.Globalization.TextElementEnumerator GetTextElementEnumerator (string str);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Globalization.TextElementEnumerator GetTextElementEnumerator(string str) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.StringInfo.GetTextElementEnumerator(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetTextElementEnumerator (str As String) As TextElementEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Globalization::TextElementEnumerator ^ GetTextElementEnumerator(System::String ^ str);" />
      <MemberSignature Language="F#" Value="static member GetTextElementEnumerator : string -&gt; System.Globalization.TextElementEnumerator" Usage="System.Globalization.StringInfo.GetTextElementEnumerator str" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.TextElementEnumerator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="str" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="str">Ciąg do iteracji.</param>
        <summary>Zwraca moduł wyliczający, który iteruje po elementy tekstu cały ciąg.</summary>
        <returns>A <see cref="T:System.Globalization.TextElementEnumerator" /> dla całego ciągu.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 .NET Framework definiuje element tekstu jako tekst, który jest wyświetlany jako pojedynczy znak, czyli grafemów jednostki. Element tekstowy może być znaku podstawowego, para zastępcza lub znak łączenie sekwencji. [Unicode Standard](http://go.microsoft.com/fwlink/?linkid=37123) definiuje para zastępcza jako reprezentację kodowane znak pojedynczy znak abstrakcyjna, który składa się z sekwencję dwóch jednostek kodu, gdy jednostka pierwszy pary jest zastępczym wysokiego poziomu, a drugą jest niski dwuskładnikowego. Unicode Standard definiuje łączenie sekwencji jako połączenie znaku podstawowego i znaki łączące, co najmniej jeden znak. Para zastępcza może reprezentować znaku podstawowego lub znaku.  
  
 Moduł wyliczający element tekstu służy tylko do odczytu danych w ciągu; go nie można zmodyfikować ciąg źródłowy. Moduł wyliczający nie ma wyłączny dostęp do ciągu.  
  
 Moduł wyliczający jest w nieprawidłowym stanie, jeśli jest on ustawiony przed pierwszym elementem tekst w ciągu lub za ostatnim elementem tekst w ciągu. Gdy moduł wyliczający jest w nieprawidłowym stanie, wywoływania <xref:System.Globalization.TextElementEnumerator.Current%2A> zgłasza wyjątek.  
  
 Początkowo moduł wyliczający jest umieszczony przed pierwszym elementem tekst w ciągu. <xref:System.Globalization.TextElementEnumerator.Reset%2A> również wprowadzono moduł wyliczający wróć do tej pozycji. Dlatego po utworzeniu modułu wyliczającego lub po <xref:System.Globalization.TextElementEnumerator.Reset%2A> jest nazywany <xref:System.Globalization.TextElementEnumerator.MoveNext%2A> musi zostać wywołana można poprawić modułu wyliczającego pierwszy element tekst w ciągu przed odczytywania wartości <xref:System.Globalization.TextElementEnumerator.Current%2A>.  
  
 <xref:System.Globalization.TextElementEnumerator.Current%2A> zwraca ten sam obiekt do momentu <xref:System.Globalization.TextElementEnumerator.MoveNext%2A> lub <xref:System.Globalization.TextElementEnumerator.Reset%2A> jest wywoływana.  
  
 Po zakończeniu ciąg jest moduł wyliczający ponownie jest w nieprawidłowym stanie i wywoływania <xref:System.Globalization.TextElementEnumerator.MoveNext%2A> zwraca `false`. Wywoływanie <xref:System.Globalization.TextElementEnumerator.Current%2A> zgłasza wyjątek, jeśli przez ostatnie wywołanie <xref:System.Globalization.TextElementEnumerator.MoveNext%2A> zwrócił `false`.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje wywołanie <xref:System.Globalization.StringInfo.GetTextElementEnumerator%2A> metody. Ten przykładowy kod jest częścią większego przykładu udostępnionego dla <xref:System.Globalization.StringInfo> klasy.  
  
 [!code-cpp[stringinfo#1](~/samples/snippets/cpp/VS_Snippets_CLR/StringInfo/cpp/StringInfo.cpp#1)]
 [!code-csharp[stringinfo#1](~/samples/snippets/csharp/VS_Snippets_CLR/StringInfo/CS/StringInfo.cs#1)]
 [!code-vb[stringinfo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/StringInfo/vb/stringinfo.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="str" /> jest <see langword="null" />.</exception>
        <altmember cref="T:System.Globalization.TextElementEnumerator" />
      </Docs>
    </Member>
    <Member MemberName="GetTextElementEnumerator">
      <MemberSignature Language="C#" Value="public static System.Globalization.TextElementEnumerator GetTextElementEnumerator (string str, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Globalization.TextElementEnumerator GetTextElementEnumerator(string str, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.StringInfo.GetTextElementEnumerator(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetTextElementEnumerator (str As String, index As Integer) As TextElementEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Globalization::TextElementEnumerator ^ GetTextElementEnumerator(System::String ^ str, int index);" />
      <MemberSignature Language="F#" Value="static member GetTextElementEnumerator : string * int -&gt; System.Globalization.TextElementEnumerator" Usage="System.Globalization.StringInfo.GetTextElementEnumerator (str, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.TextElementEnumerator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="str" Type="System.String" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="str">Ciąg do iteracji.</param>
        <param name="index">Liczony od zera indeks, w którym należy uruchomić iteracja.</param>
        <summary>Zwraca moduł wyliczający, który iteruje po elementy tekst ciągu znaków, zaczynając od określonego indeksu.</summary>
        <returns>A <see cref="T:System.Globalization.TextElementEnumerator" /> ciągu, zaczynając od <paramref name="index" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 .NET Framework definiuje element tekstu jako tekst, który jest wyświetlany jako pojedynczy znak, czyli grafemów jednostki. Element tekstowy może być znaku podstawowego, para zastępcza lub znak łączenie sekwencji. [Unicode Standard](http://go.microsoft.com/fwlink/?linkid=37123) definiuje para zastępcza jako reprezentację kodowane znak pojedynczy znak abstrakcyjna, który składa się z sekwencję dwóch jednostek kodu, gdy jednostka pierwszy pary jest zastępczym wysokiego poziomu, a drugą jest niski dwuskładnikowego. Unicode Standard definiuje łączenie sekwencji jako połączenie znaku podstawowego i znaki łączące, co najmniej jeden znak. Para zastępcza może reprezentować znaku podstawowego lub znaku.  
  
 Moduł wyliczający element tekstu służy tylko do odczytu danych w ciągu; go nie można zmodyfikować ciąg źródłowy. Moduł wyliczający nie ma wyłączny dostęp do ciągu.  
  
 Moduł wyliczający jest w nieprawidłowym stanie, jeśli jest on ustawiony przed pierwszym elementem tekst w ciągu lub za ostatnim elementem tekst w ciągu. Gdy moduł wyliczający jest w nieprawidłowym stanie, wywoływania <xref:System.Globalization.TextElementEnumerator.Current%2A> zgłasza wyjątek.  
  
 Początkowo moduł wyliczający jest umieszczony przed pierwszym elementem tekst w ciągu. <xref:System.Globalization.TextElementEnumerator.Reset%2A> również wprowadzono moduł wyliczający wróć do tej pozycji. Dlatego po utworzeniu modułu wyliczającego lub po <xref:System.Globalization.TextElementEnumerator.Reset%2A> jest nazywany <xref:System.Globalization.TextElementEnumerator.MoveNext%2A> musi zostać wywołana można poprawić modułu wyliczającego pierwszy element tekst w ciągu przed odczytywania wartości <xref:System.Globalization.TextElementEnumerator.Current%2A>.  
  
 <xref:System.Globalization.TextElementEnumerator.Current%2A> zwraca ten sam obiekt do momentu <xref:System.Globalization.TextElementEnumerator.MoveNext%2A> lub <xref:System.Globalization.TextElementEnumerator.Reset%2A> jest wywoływana.  
  
 Po zakończeniu ciąg jest moduł wyliczający ponownie jest w nieprawidłowym stanie i wywoływania <xref:System.Globalization.TextElementEnumerator.MoveNext%2A> zwraca `false`. Wywoływanie <xref:System.Globalization.TextElementEnumerator.Current%2A> zgłasza wyjątek, jeśli przez ostatnie wywołanie <xref:System.Globalization.TextElementEnumerator.MoveNext%2A> zwrócił `false`.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="str" /> jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="index" /> znajduje się poza zakresem indeksów prawidłowy dla <paramref name="str" />.</exception>
        <altmember cref="T:System.Globalization.TextElementEnumerator" />
      </Docs>
    </Member>
    <Member MemberName="LengthInTextElements">
      <MemberSignature Language="C#" Value="public int LengthInTextElements { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 LengthInTextElements" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.StringInfo.LengthInTextElements" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LengthInTextElements As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int LengthInTextElements { int get(); };" />
      <MemberSignature Language="F#" Value="member this.LengthInTextElements : int" Usage="System.Globalization.StringInfo.LengthInTextElements" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera liczbę elementów tekstowych w bieżącym <see cref="T:System.Globalization.StringInfo" /> obiektu.</summary>
        <value>Liczba znaków podstawowej, znaki dwuskładnikowe i łączenie sekwencje znaków w tym <see cref="T:System.Globalization.StringInfo" /> obiektu.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ParseCombiningCharacters">
      <MemberSignature Language="C#" Value="public static int[] ParseCombiningCharacters (string str);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32[] ParseCombiningCharacters(string str) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.StringInfo.ParseCombiningCharacters(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ParseCombiningCharacters (str As String) As Integer()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;int&gt; ^ ParseCombiningCharacters(System::String ^ str);" />
      <MemberSignature Language="F#" Value="static member ParseCombiningCharacters : string -&gt; int[]" Usage="System.Globalization.StringInfo.ParseCombiningCharacters str" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="str" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="str">Ciąg do wyszukania.</param>
        <summary>Zwraca indeksów każdego znaku podstawowego, zastępczym wysokiego poziomu lub znaku kontrolnego w określonym ciągu.</summary>
        <returns>Tablica liczb całkowitych zawiera indeksy liczony od zera każdego znaku podstawowego, zastępczym wysokiego poziomu lub znaku kontrolnego w określonym ciągu.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [Unicode Standard](http://go.microsoft.com/fwlink/?linkid=37123) definiuje para zastępcza jako reprezentację kodowane znak pojedynczy znak abstrakcyjna, który składa się z sekwencję dwóch jednostek kodu, gdy jednostka pierwszy pary jest zastępczym wysokiego poziomu, a drugą jest niski dwuskładnikowego. Zastępczym wysokiego poziomu jest punkt kodu Unicode w zakresie U + D800 za pośrednictwem U + DBFF i dwuskładnikowego punkt kodu Unicode w zakresie U + DC00 za pośrednictwem U + DFFF.  
  
 Znak kontrolny jest znak, dla której U + 007F ma wartość Unicode, lub w zakresie 0000 U + za pośrednictwem U + 001F lub U + 0080 za pośrednictwem U + 009F.  
  
 .NET Framework definiuje element tekstu jako tekst, który jest wyświetlany jako pojedynczy znak, czyli grafemów jednostki. Element tekstowy może być znaku podstawowego, para zastępcza lub znak łączenie sekwencji. [Unicode Standard](http://go.microsoft.com/fwlink/?linkid=37123) definiuje łączenie sekwencji jako połączenie znaku podstawowego i znaki łączące, co najmniej jeden znak. Para zastępcza może reprezentować znaku podstawowego lub znaku.  
  
 Jeśli łączenie sekwencja znaków jest nieprawidłowy, co znaku w tej sekwencji jest także zwracany.  
  
 Każdy indeks w tablicy wynikowej jest na początku elementu tekstu, oznacza to, że indeks znaku podstawowego lub znakiem zastępczym wysokiego poziomu.  
  
 Długość każdy element łatwo jest obliczana jako różnica między kolejnymi indeksów. Długość tablicy zawsze będzie mniejsza niż lub równa długości ciągu. Na przykład mając ciąg "\u4f00\u302a\ud800\udc00\u4f01", ta metoda zwraca indeksami 0, 2 i 4.  
  
## <a name="equivalent-members"></a>Odpowiednik elementy członkowskie  
 Począwszy od programu .NET Framework w wersji 2.0 <xref:System.Globalization.StringInfo.SubstringByTextElements%2A> — metoda i <xref:System.Globalization.StringInfo.LengthInTextElements%2A> właściwości zapewniać implementację łatwy w użyciu funkcji oferowanych przez <xref:System.Globalization.StringInfo.ParseCombiningCharacters%2A> metody.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje wywołanie <xref:System.Globalization.StringInfo.ParseCombiningCharacters%2A> metody. Ten przykładowy kod jest częścią większego przykładu udostępnionego dla <xref:System.Globalization.StringInfo> klasy.  
  
 [!code-cpp[stringinfo#1](~/samples/snippets/cpp/VS_Snippets_CLR/StringInfo/cpp/StringInfo.cpp#1)]
 [!code-csharp[stringinfo#1](~/samples/snippets/csharp/VS_Snippets_CLR/StringInfo/CS/StringInfo.cs#1)]
 [!code-vb[stringinfo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/StringInfo/vb/stringinfo.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="str" /> jest <see langword="null" />.</exception>
        <altmember cref="Overload:System.Globalization.StringInfo.SubstringByTextElements" />
        <altmember cref="P:System.Globalization.StringInfo.LengthInTextElements" />
      </Docs>
    </Member>
    <Member MemberName="String">
      <MemberSignature Language="C#" Value="public string String { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string String" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.StringInfo.String" />
      <MemberSignature Language="VB.NET" Value="Public Property String As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ String { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.String : string with get, set" Usage="System.Globalization.StringInfo.String" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość bieżącego <see cref="T:System.Globalization.StringInfo" /> obiektu.</summary>
        <value>Ciąg, który jest wartość bieżącej klasy <see cref="T:System.Globalization.StringInfo" /> obiektu.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Gdy <xref:System.Globalization.StringInfo> wystąpienie obiektu, jego <xref:System.Globalization.StringInfo.String%2A> właściwość jest ustawiona na jeden z następujących wartości:  
  
-   <xref:System.String.Empty?displayProperty=nameWithType> Jeśli domyślna <xref:System.Globalization.StringInfo.%23ctor> jest wywoływana. Następnie należy użyć <xref:System.Globalization.StringInfo.String%2A> właściwość do przypisania ciąg tego <xref:System.Globalization.StringInfo> obiektu rperesents.  
  
-   Ciąg podany jako `value` argument <xref:System.Globalization.StringInfo.%23ctor%28System.String%29> konstruktora.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Wartość w operacji set jest <see langword="null" />.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="SubstringByTextElements">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Pobiera podciąg z tekstu elementy z bieżącego <see cref="T:System.Globalization.StringInfo" /> obiektu.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SubstringByTextElements">
      <MemberSignature Language="C#" Value="public string SubstringByTextElements (int startingTextElement);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string SubstringByTextElements(int32 startingTextElement) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.StringInfo.SubstringByTextElements(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function SubstringByTextElements (startingTextElement As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ SubstringByTextElements(int startingTextElement);" />
      <MemberSignature Language="F#" Value="member this.SubstringByTextElements : int -&gt; string" Usage="stringInfo.SubstringByTextElements startingTextElement" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startingTextElement" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="startingTextElement">Liczony od zera indeks elementu tekstu, w tym <see cref="T:System.Globalization.StringInfo" /> obiektu.</param>
        <summary>Pobiera podciąg z tekstu elementy z bieżącego <see cref="T:System.Globalization.StringInfo" /> obiektu, począwszy od elementu określony tekst i dalej przez ostatni element tekstowy.</summary>
        <returns>Substring elementów tekstowych w tym <see cref="T:System.Globalization.StringInfo" /> obiektu, począwszy od indeksu elementu tekstu określonego przez <paramref name="startingTextElement" /> parametr i kontynuowanie przy użyciu ostatniego elementu tekstu, w tym obiekcie.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Należy wziąć pod uwagę ciąg, który składa się z pięciu elementów tekstu, indeksowane z zakresu od 0 do 4. Jeśli `startingTextElement` parametru to 1, <xref:System.Globalization.StringInfo.SubstringByTextElements%2A> metoda zwraca podciąg, który składa się z elementów tekstu, dla których indeksy są 1, 2, 3 i 4.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="startingTextElement" /> jest mniejsza od zera.  - lub - ciąg, który jest wartość bieżącej klasy <see cref="T:System.Globalization.StringInfo" /> obiektu jest pustym ciągiem ("").</exception>
      </Docs>
    </Member>
    <Member MemberName="SubstringByTextElements">
      <MemberSignature Language="C#" Value="public string SubstringByTextElements (int startingTextElement, int lengthInTextElements);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string SubstringByTextElements(int32 startingTextElement, int32 lengthInTextElements) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.StringInfo.SubstringByTextElements(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function SubstringByTextElements (startingTextElement As Integer, lengthInTextElements As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ SubstringByTextElements(int startingTextElement, int lengthInTextElements);" />
      <MemberSignature Language="F#" Value="member this.SubstringByTextElements : int * int -&gt; string" Usage="stringInfo.SubstringByTextElements (startingTextElement, lengthInTextElements)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startingTextElement" Type="System.Int32" />
        <Parameter Name="lengthInTextElements" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="startingTextElement">Liczony od zera indeks elementu tekstu, w tym <see cref="T:System.Globalization.StringInfo" /> obiektu.</param>
        <param name="lengthInTextElements">Liczba elementów tekstu do pobrania.</param>
        <summary>Pobiera podciąg z tekstu elementy z bieżącego <see cref="T:System.Globalization.StringInfo" /> obiektu, począwszy od elementu określony tekst i dalej przez określoną liczbę elementów tekstu.</summary>
        <returns>Substring elementów tekstowych w tym <see cref="T:System.Globalization.StringInfo" /> obiektu. Podciąg składa się z liczby elementów tekstu określonego przez <paramref name="lengthInTextElements" /> parametr i rozpoczyna się od określony przez indeks elementu tekst <paramref name="startingTextElement" /> parametru.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Należy wziąć pod uwagę ciąg, który składa się z pięciu elementów tekstu, indeksowane z zakresu od 0 do 4. Jeśli `startingTextElement` parametru to 1 i `lengthInTextElements` parametr to 3, <xref:System.Globalization.StringInfo.SubstringByTextElements%2A> metoda zwraca podciąg, który składa się z elementów tekstu, dla których indeksy są 1, 2 i 3.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="startingTextElement" /> jest mniejsza od zera.  - lub - <paramref name="startingTextElement" /> jest większa lub równa długości ciągu jest wartością bieżącego <see cref="T:System.Globalization.StringInfo" /> obiektu.  - lub - <paramref name="lengthInTextElements" /> jest mniejsza od zera.  - lub - ciąg, który jest wartość bieżącej klasy <see cref="T:System.Globalization.StringInfo" /> obiektu jest pustym ciągiem ("").  - lub - <paramref name="startingTextElement" />  +  <paramref name="lengthInTextElements" /> Określ indeks, który jest większa niż liczba elementów tekstu w tym <see cref="T:System.Globalization.StringInfo" /> obiektu.</exception>
      </Docs>
    </Member>
  </Members>
</Type>