<Type Name="SortVersion" FullName="System.Globalization.SortVersion">
  <Metadata><Meta Name="ms.openlocfilehash" Value="862d4c76687001fc84a9143388e540f366b6d50f" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69245802" /></Metadata><TypeSignature Language="C#" Value="public sealed class SortVersion : IEquatable&lt;System.Globalization.SortVersion&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit SortVersion extends System.Object implements class System.IEquatable`1&lt;class System.Globalization.SortVersion&gt;" />
  <TypeSignature Language="DocId" Value="T:System.Globalization.SortVersion" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class SortVersion&#xA;Implements IEquatable(Of SortVersion)" />
  <TypeSignature Language="C++ CLI" Value="public ref class SortVersion sealed : IEquatable&lt;System::Globalization::SortVersion ^&gt;" />
  <TypeSignature Language="F#" Value="type SortVersion = class&#xA;    interface IEquatable&lt;SortVersion&gt;" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IEquatable&lt;System.Globalization.SortVersion&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Zawiera informacje o wersji Unicode używanej do porównywania i porządkowania ciągów.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks

### <a name="sorting-and-string-comparison-in-the-net-framework"></a>Sortowanie i Porównywanie ciągów w .NET Framework

 Od za pośrednictwem [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]programu, każda wersja programu The.NET Framework zawiera tabele, które zawierają wagi sortowania i dane dotyczące normalizacji ciągów, które są oparte na określonej wersji standardu Unicode. [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)] [!INCLUDE[net_v45](~/includes/net-v45-md.md)]Obecność tych tabel w programie zależy od systemu operacyjnego:  
  
-   W [!INCLUDE[win7](~/includes/win7-md.md)] systemach i wcześniejszych wersjach systemu operacyjnego Windows tabele są nadal używane do porównywania i porządkowania ciągów.  
  
-   W [!INCLUDE[win8](~/includes/win8-md.md)].NET Framework deleguje operacje porównywania ciągów i porządkowania do systemu operacyjnego.  
  
 W związku z tym wynik porównania ciągów może nie tylko w wersji .NET Framework, ale również w wersji systemu operacyjnego, jak pokazano w poniższej tabeli. Należy zauważyć, że ta lista obsługiwanych wersji Unicode ma zastosowanie do porównywania znaków i sortowania. nie dotyczy klasyfikacji znaków Unicode według kategorii.  
  
|Wersja programu .NET Framework|System operacyjny|Wersja Unicode|  
|----------------------------|----------------------|---------------------|  
|[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]|Wszystkie systemy operacyjne|Unicode 5,0|  
|[!INCLUDE[net_v45](~/includes/net-v45-md.md)]i nowszych wersjach .NET Framework|[!INCLUDE[win7](~/includes/win7-md.md)]|Unicode 5,0|  
|[!INCLUDE[net_v45](~/includes/net-v45-md.md)]i nowszych wersjach .NET Framework|[!INCLUDE[win8](~/includes/win8-md.md)]i nowsze wersje systemu operacyjnego Windows|Unicode 6,0|  
  
 W [!INCLUDE[win8](~/includes/win8-md.md)]systemie, ponieważ wersja Unicode używana w porównaniu z porównaniem ciągów i porządkowaniem zależy od wersji systemu operacyjnego, wyniki porównania ciągów mogą się różnić nawet w przypadku aplikacji uruchamianych w określonej wersji .NET Framework.  

### <a name="sorting-and-string-comparison-in-net-core"></a>Sortowanie i Porównywanie ciągów w programie .NET Core

Wszystkie wersje programu .NET Core polegają na bazowym systemie operacyjnym podczas porównywania ciągów. W związku z tym wyniki porównania ciągów lub kolejność, w której ciągi są sortowane, zależą od wersji Unicode używanej przez system operacyjny podczas przeprowadzania porównania. W systemach Linux i macOS [składniki międzynarodowe dla bibliotek Unicode](http://site.icu-project.org/) zapewniają implementację do porównywania i sortowania interfejsów API.

### <a name="using-the-sortversion-class"></a>Korzystanie z klasy SortVersion

 <xref:System.Globalization.SortVersion> Klasa zawiera informacje o wersji Unicode używanej przez platformę .NET do porównywania ciągów i określania kolejności. Umożliwia deweloperom pisanie aplikacji, które mogą wykrywać i pomyślnie obsługiwać zmiany w wersji Unicode, która jest używana do porównywania i sortowania ciągów aplikacji.  
  
 Można utworzyć wystąpienie <xref:System.Globalization.SortVersion> obiektu na dwa sposoby:  
  
-   Wywołując <xref:System.Globalization.SortVersion.%23ctor%2A> Konstruktor, który tworzy wystąpienie nowego <xref:System.Globalization.SortVersion> obiektu na podstawie numeru wersji i identyfikatora sortowania. Ten konstruktor jest najbardziej przydatny podczas odtwarzania <xref:System.Globalization.SortVersion> obiektu z zapisanych danych.  
  
-   Pobierając wartość <xref:System.Globalization.CompareInfo.Version%2A?displayProperty=nameWithType> właściwości. Ta właściwość zawiera informacje o wersji Unicode używanej przez implementację platformy .NET, na której działa aplikacja.  
  
 Klasa ma dwie <xref:System.Globalization.SortVersion.FullVersion%2A> właściwości i <xref:System.Globalization.SortVersion.SortId%2A>, która wskazuje wersję Unicode i określoną kulturę używaną do porównywania ciągów. <xref:System.Globalization.SortVersion> Właściwość to dowolna wartość liczbowa, która odzwierciedla wersję standardu Unicode użytą do porównywania ciągów, <xref:System.Globalization.SortVersion.SortId%2A> a <xref:System.Guid> właściwość jest arbitralna, która odzwierciedla kulturę, której konwencje są używane do porównywania ciągów. <xref:System.Globalization.SortVersion.FullVersion%2A> Wartości tych dwóch właściwości są ważne tylko w przypadku <xref:System.Globalization.SortVersion> porównywania dwóch obiektów przy <xref:System.Globalization.SortVersion.Equals%2A> użyciu metody, <xref:System.Globalization.SortVersion.op_Equality%2A> operatora lub <xref:System.Globalization.SortVersion.op_Inequality%2A> operatora.  
  
 <xref:System.Globalization.SortVersion> Obiekt jest zazwyczaj używany podczas zapisywania lub pobierania niektórych form z uwzględnieniem kultury, uporządkowanych danych ciągu, takich jak indeksy lub same ciągi literału. Wymaga to wykonania następujących czynności:  
  
1.  Po zapisaniu <xref:System.Globalization.SortVersion.FullVersion%2A> uporządkowanych danych ciągu są również zapisywane <xref:System.Globalization.SortVersion.SortId%2A> wartości właściwości i.  
  
2.  Po pobraniu danych uporządkowanego ciągu można odtworzyć <xref:System.Globalization.SortVersion> obiekt służący do porządkowania ciągów przez <xref:System.Globalization.SortVersion.%23ctor%2A> wywołanie konstruktora.  
  
3.  Ten nowo <xref:System.Globalization.SortVersion> utworzony obiekt jest porównywany <xref:System.Globalization.SortVersion> z obiektem, który odzwierciedla kulturę, której konwencje są używane do porządkowania danych ciągu.  
  
4.  Jeśli dwa <xref:System.Globalization.SortVersion> obiekty nie są równe, należy zmienić kolejność danych w postaci ciągu.  
  
 Przykład stanowi ilustrację.  
  
   
  
## Examples  
 Poniższy przykład zawiera część kodu źródłowego z aplikacji, która używa <xref:System.Globalization.SortVersion> klasy, aby upewnić się, że natywne <xref:System.Globalization.RegionInfo> nazwy obiektów są uporządkowane odpowiednio dla bieżącego systemu i bieżącej kultury. Używa <xref:System.IO.BinaryReader> ona obiektów i <xref:System.IO.BinaryWriter> do przechowywania i pobierania uporządkowanych danych z pliku danych o nazwie `Regions.dat` zamiast pobierać i porządkować dane przy każdym uruchomieniu aplikacji. Przykład najpierw sprawdza, czy plik danych istnieje. Jeśli tak nie jest, tworzy dane i ustawia `reindex` flagę wskazującą, że dane muszą być ponownie i zapisane. W przeciwnym razie pobiera dane i porównuje zapisany <xref:System.Globalization.SortVersion> obiekt <xref:System.Globalization.SortVersion> z obiektem dla bieżącej kultury w bieżącym systemie. Jeśli nie są równe, lub jeśli `reindex` flaga została wcześniej ustawiona, <xref:System.Globalization.RegionInfo> przeniesie dane.  
  
 [!code-csharp[System.Globalization.SortVersion#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.sortversion/cs/example1.cs#1)]
 [!code-vb[System.Globalization.SortVersion#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.sortversion/vb/example1.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="P:System.Globalization.CompareInfo.Version" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SortVersion (int fullVersion, Guid sortId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 fullVersion, valuetype System.Guid sortId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.SortVersion.#ctor(System.Int32,System.Guid)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (fullVersion As Integer, sortId As Guid)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SortVersion(int fullVersion, Guid sortId);" />
      <MemberSignature Language="F#" Value="new System.Globalization.SortVersion : int * Guid -&gt; System.Globalization.SortVersion" Usage="new System.Globalization.SortVersion (fullVersion, sortId)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="fullVersion" Type="System.Int32" />
        <Parameter Name="sortId" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="fullVersion">Numer wersji.</param>
        <param name="sortId">Identyfikator sortowania.</param>
        <summary>Tworzy nowe wystąpienie <see cref="T:System.Globalization.SortVersion" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten konstruktor tworzy wystąpienie <xref:System.Globalization.SortVersion> obiektu z określoną wersją i identyfikatorem sortowania. Argument jest przypisany <xref:System.Globalization.SortVersion.FullVersion%2A> do właściwości. `fullVersion` Argument jest przypisany <xref:System.Globalization.SortVersion.SortId%2A> do właściwości. `sortId`  
  
 Ten konstruktor jest przydatny do ponownego tworzenia <xref:System.Globalization.SortVersion> obiektu na podstawie danych, które zostały zserializowane lub zapisane. Tę wersję można następnie porównać z bieżącą wersją aplikacji, aby określić, czy wersja Unicode używana do wyświetlania i porządkowania ciągów aplikacji jest dostępna.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Globalization.CompareInfo.Version" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Equals">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Zwraca wartość wskazującą, czy dwa <see cref="T:System.Globalization.SortVersion" /> wystąpienia są równe.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (System.Globalization.SortVersion other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(class System.Globalization.SortVersion other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.SortVersion.Equals(System.Globalization.SortVersion)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (other As SortVersion) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Equals(System::Globalization::SortVersion ^ other);" />
      <MemberSignature Language="F#" Value="override this.Equals : System.Globalization.SortVersion -&gt; bool" Usage="sortVersion.Equals other" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IEquatable`1.Equals(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Globalization.SortVersion" />
      </Parameters>
      <Docs>
        <param name="other">Obiekt, który ma zostać porównany z tym wystąpieniem.</param>
        <summary>Zwraca wartość wskazującą, czy to <see cref="T:System.Globalization.SortVersion" /> wystąpienie jest równe podanemu <see cref="T:System.Globalization.SortVersion" /> obiektowi.</summary>
        <returns><see langword="true" />Jeśli <paramref name="other" /> reprezentuje tę samą wersję, co to wystąpienie; <see langword="false" />w przeciwnym razie.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dwa <xref:System.Globalization.SortVersion> obiekty są równe, jeśli <xref:System.Globalization.SortVersion.FullVersion%2A> ich <xref:System.Globalization.SortVersion.SortId%2A> właściwości i są równe.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Globalization.SortVersion.op_Equality(System.Globalization.SortVersion,System.Globalization.SortVersion)" />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.SortVersion.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="sortVersion.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">Obiekt, który ma zostać porównany z tym wystąpieniem.</param>
        <summary>Zwraca wartość wskazującą, czy to <see cref="T:System.Globalization.SortVersion" /> wystąpienie jest równe podanemu obiektowi.</summary>
        <returns><see langword="true" />if <paramref name="obj" /> <see langword="false" />jest obiektem, który reprezentuje tę samą wersję, co to wystąpienie; w przeciwnym razie. <see cref="T:System.Globalization.SortVersion" /></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dwa <xref:System.Globalization.SortVersion> obiekty są równe, jeśli <xref:System.Globalization.SortVersion.FullVersion%2A> ich <xref:System.Globalization.SortVersion.SortId%2A> właściwości i są równe.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Globalization.SortVersion.op_Equality(System.Globalization.SortVersion,System.Globalization.SortVersion)" />
      </Docs>
    </Member>
    <Member MemberName="FullVersion">
      <MemberSignature Language="C#" Value="public int FullVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 FullVersion" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.SortVersion.FullVersion" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FullVersion As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int FullVersion { int get(); };" />
      <MemberSignature Language="F#" Value="member this.FullVersion : int" Usage="System.Globalization.SortVersion.FullVersion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera pełny numer <see cref="T:System.Globalization.SortVersion" /> wersji obiektu.</summary>
        <value>Numer wersji tego <see cref="T:System.Globalization.SortVersion" /> obiektu.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wartość <xref:System.Globalization.SortVersion.FullVersion%2A> właściwości odzwierciedla wersję Unicode używaną do normalizacji i porównywania ciągów.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.SortVersion.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="sortVersion.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zwraca kod skrótu dla tego wystąpienia.</summary>
        <returns>Kod skrótu 32-bitowej liczby całkowitej ze znakiem.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (System.Globalization.SortVersion left, System.Globalization.SortVersion right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(class System.Globalization.SortVersion left, class System.Globalization.SortVersion right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.SortVersion.op_Equality(System.Globalization.SortVersion,System.Globalization.SortVersion)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (left As SortVersion, right As SortVersion) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(System::Globalization::SortVersion ^ left, System::Globalization::SortVersion ^ right);" />
      <MemberSignature Language="F#" Value="static member ( = ) : System.Globalization.SortVersion * System.Globalization.SortVersion -&gt; bool" Usage="left = right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Globalization.SortVersion" />
        <Parameter Name="right" Type="System.Globalization.SortVersion" />
      </Parameters>
      <Docs>
        <param name="left">Pierwsze wystąpienie do porównania.</param>
        <param name="right">Drugie wystąpienie do porównania.</param>
        <summary>Wskazuje, czy <see cref="T:System.Globalization.SortVersion" /> dwa wystąpienia są równe.</summary>
        <returns><see langword="true" />Jeśli wartości <paramref name="left" /> i <paramref name="right" />sąrówne ; w przeciwnym razie. <see langword="false" /></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dwa <xref:System.Globalization.SortVersion> obiekty są równe, jeśli obie `null`są, lub jeśli <xref:System.Globalization.SortVersion.FullVersion%2A> ich <xref:System.Globalization.SortVersion.SortId%2A> właściwości i są równe.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Globalization.SortVersion.Equals(System.Globalization.SortVersion)" />
        <altmember cref="M:System.Globalization.SortVersion.op_Inequality(System.Globalization.SortVersion,System.Globalization.SortVersion)" />
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (System.Globalization.SortVersion left, System.Globalization.SortVersion right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(class System.Globalization.SortVersion left, class System.Globalization.SortVersion right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.SortVersion.op_Inequality(System.Globalization.SortVersion,System.Globalization.SortVersion)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (left As SortVersion, right As SortVersion) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(System::Globalization::SortVersion ^ left, System::Globalization::SortVersion ^ right);" />
      <MemberSignature Language="F#" Value="static member op_Inequality : System.Globalization.SortVersion * System.Globalization.SortVersion -&gt; bool" Usage="System.Globalization.SortVersion.op_Inequality (left, right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Globalization.SortVersion" />
        <Parameter Name="right" Type="System.Globalization.SortVersion" />
      </Parameters>
      <Docs>
        <param name="left">Pierwsze wystąpienie do porównania.</param>
        <param name="right">Drugie wystąpienie do porównania.</param>
        <summary>Wskazuje, czy <see cref="T:System.Globalization.SortVersion" /> dwa wystąpienia nie są równe.</summary>
        <returns><see langword="true" />Jeśli wartości <paramref name="left" /> i <paramref name="right" />niesą równe; w przeciwnym razie. <see langword="false" /></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dwa <xref:System.Globalization.SortVersion> obiekty nie są równe, jeśli są `null` , a drugie, lub jeśli mają różne <xref:System.Globalization.SortVersion.FullVersion%2A> lub <xref:System.Globalization.SortVersion.SortId%2A> wartości właściwości.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Globalization.SortVersion.Equals(System.Globalization.SortVersion)" />
        <altmember cref="M:System.Globalization.SortVersion.op_Inequality(System.Globalization.SortVersion,System.Globalization.SortVersion)" />
      </Docs>
    </Member>
    <Member MemberName="SortId">
      <MemberSignature Language="C#" Value="public Guid SortId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Guid SortId" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.SortVersion.SortId" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SortId As Guid" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Guid SortId { Guid get(); };" />
      <MemberSignature Language="F#" Value="member this.SortId : Guid" Usage="System.Globalization.SortVersion.SortId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Guid</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera unikatowy identyfikator globalny dla tego <see cref="T:System.Globalization.SortVersion" /> obiektu.</summary>
        <value>Unikatowy identyfikator globalny dla tego <see cref="T:System.Globalization.SortVersion" /> obiektu.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wartość <xref:System.Globalization.SortVersion.SortId%2A> właściwości odzwierciedla kulturę, której konwencje wpływają na Porównywanie ciągów i sortowanie.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
