<Type Name="SortVersion" FullName="System.Globalization.SortVersion">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="0f66573a8d609e99b6cebf9d4e734dc80eae1ccb" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30455130" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class SortVersion : IEquatable&lt;System.Globalization.SortVersion&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit SortVersion extends System.Object implements class System.IEquatable`1&lt;class System.Globalization.SortVersion&gt;" />
  <TypeSignature Language="DocId" Value="T:System.Globalization.SortVersion" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class SortVersion&#xA;Implements IEquatable(Of SortVersion)" />
  <TypeSignature Language="C++ CLI" Value="public ref class SortVersion sealed : IEquatable&lt;System::Globalization::SortVersion ^&gt;" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IEquatable&lt;System.Globalization.SortVersion&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Zawiera informacje na temat wersji Unicode używany do porównania i kolejność parametrów.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Z [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)] za pośrednictwem [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)], każdej wersji systemu.NET Framework zostało uwzględnione tabel zawierających wag sortowania i danych na ciąg normalizacji, które są oparte na konkretnej wersji Unicode. W [!INCLUDE[net_v45](~/includes/net-v45-md.md)], obecności te tabele zależy od systemu operacyjnego:  
  
-   Na [!INCLUDE[win7](~/includes/win7-md.md)] i poprzednich wersjach systemu operacyjnego Windows, tabele nadal można używać podczas porównywania i ciągi porządkowania.  
  
-   Na [!INCLUDE[win8](~/includes/win8-md.md)], .NET Framework deleguje porównania ciągów i kolejność operacji do systemu operacyjnego.  
  
 W rezultacie wynik porównania ciągów mogą zależeć nie tylko od wersji programu .NET Framework, ale także w wersji systemu operacyjnego, jak to pokazano w poniższej tabeli. Należy pamiętać, że ta lista obsługiwanych wersji Unicode dotyczy porównanie znaków i sortowania. nie ma zastosowania do klasyfikacji znaków Unicode w według kategorii.  
  
|Wersja programu .NET Framework|System operacyjny|Wersja Unicode|  
|----------------------------|----------------------|---------------------|  
|[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]|Wszystkie systemy operacyjne|Unicode 5.0|  
|[!INCLUDE[net_v45](~/includes/net-v45-md.md)] i nowszych wersjach systemu .NET Framework|[!INCLUDE[win7](~/includes/win7-md.md)]|Unicode 5.0|  
|[!INCLUDE[net_v45](~/includes/net-v45-md.md)] i nowszych wersjach systemu .NET Framework|[!INCLUDE[win8](~/includes/win8-md.md)] i nowszych wersjach systemu operacyjnego Windows|Unicode 6.0|  
  
 Na [!INCLUDE[win8](~/includes/win8-md.md)], ponieważ w porównania ciągów używana wersja Unicode i kolejność zależy od wersji systemu operacyjnego, wyniki porównania ciągów mogą się różnić, nawet w przypadku aplikacji uruchamianych na określonej wersji programu .NET Framework.  
  
 <xref:System.Globalization.SortVersion> Klasa udostępnia informacje na temat wersji Unicode używane przez program .NET Framework dla porównania ciągów i kolejność. Umożliwia ona deweloperom pisać aplikacje, które mogą wykrywać i pomyślnie obsługiwać zmiany w wersji znaków Unicode, który umożliwia porównywanie i sortowanie ciągów aplikacji.  
  
 Można utworzyć wystąpienia <xref:System.Globalization.SortVersion> obiektu na dwa sposoby:  
  
-   Wywołując <xref:System.Globalization.SortVersion.%23ctor%2A> konstruktora, który tworzy nową <xref:System.Globalization.SortVersion> obiekt na podstawie numeru wersji i sortowania identyfikatora. Ten konstruktor jest najbardziej przydatna podczas odtwarzania <xref:System.Globalization.SortVersion> obiektu na podstawie zapisanych danych.  
  
-   Pobierając zaletą <xref:System.Globalization.CompareInfo.Version%2A?displayProperty=nameWithType> właściwości. Ta właściwość zawiera informacje o wersji Unicode używane przez program .NET Framework, na którym jest uruchomiona aplikacja.  
  
 <xref:System.Globalization.SortVersion> Klasa ma dwie właściwości <xref:System.Globalization.SortVersion.FullVersion%2A> i <xref:System.Globalization.SortVersion.SortId%2A>, wskazujących na wersję Unicode i określoną kulturę, używane do porównywania ciągów. <xref:System.Globalization.SortVersion.FullVersion%2A> Właściwość jest dowolną wartością liczbową odzwierciedlający Unicode wersja używana do porównania ciągów i <xref:System.Globalization.SortVersion.SortId%2A> właściwość jest dowolnego <xref:System.Guid> , które odzwierciedla kultury, na których konwencje są używane do porównywania ciągów. Wartości te dwie właściwości są ważne tylko wtedy, gdy porównać dwa <xref:System.Globalization.SortVersion> obiektów przy użyciu <xref:System.Globalization.SortVersion.Equals%2A> metody <xref:System.Globalization.SortVersion.op_Equality%2A> , operator lub <xref:System.Globalization.SortVersion.op_Inequality%2A> operatora.  
  
 Zazwyczaj używają <xref:System.Globalization.SortVersion> obiektu podczas zapisywania lub pobieranie jakiegoś zależne od kultury, uporządkowanych ciągu danych, takich jak indeksy lub literał parametrów samodzielnie. To wymaga wykonania następujących czynności:  
  
1.  Podczas zapisywania danych uporządkowanych ciągu <xref:System.Globalization.SortVersion.FullVersion%2A> i <xref:System.Globalization.SortVersion.SortId%2A> wartości właściwości zostały także zapisane.  
  
2.  Po pobraniu danych uporządkowanych ciągu można odtworzyć <xref:System.Globalization.SortVersion> porządkowania ciągi przez wywołanie obiektu <xref:System.Globalization.SortVersion.%23ctor%2A> konstruktora.  
  
3.  To jest nowo utworzone <xref:System.Globalization.SortVersion> obiektu jest porównywana z <xref:System.Globalization.SortVersion> obiektu odzwierciedlający kultury, którego konwencje są używane do kolejność danych ciągu.  
  
4.  Jeśli dwa <xref:System.Globalization.SortVersion> obiekty nie są takie same, można zmienić kolejności danych ciągu.  
  
 Przykład stanowi ilustrację.  
  
   
  
## Examples  
 Poniższy przykład zawiera fragment kodu źródłowego z aplikacji, która używa <xref:System.Globalization.SortVersion> klasę, aby upewnić się, że nazwy natywnego <xref:System.Globalization.RegionInfo> obiekty są uporządkowane odpowiednio dla bieżącego systemu i bieżącej kultury. Używa <xref:System.IO.BinaryReader> i <xref:System.IO.BinaryWriter> obiekty do przechowywania i pobierania uporządkowanych danych z pliku danych o nazwie `Regions.dat` zamiast pobierania i kolejność danych w każdym uruchomieniu aplikacji. Przykład sprawdza najpierw ustalić, czy istnieje plik danych. Jeśli nie, tworzy dane i ustawia `reindex` flagę wskazującą, czy dane musi ponownie sortowane i zapisać ponownie. W przeciwnym razie pobiera dane i porównuje zapisanego <xref:System.Globalization.SortVersion> obiekt z <xref:System.Globalization.SortVersion> obiektu dla bieżącej kultury w bieżącym systemie. Jeśli nie są takie same lub `reindex` było wcześniej ustawione flagi, jego uporządkowana <xref:System.Globalization.RegionInfo> danych.  
  
 [!code-csharp[System.Globalization.SortVersion#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.sortversion/cs/example1.cs#1)]
 [!code-vb[System.Globalization.SortVersion#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.sortversion/vb/example1.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="P:System.Globalization.CompareInfo.Version" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SortVersion (int fullVersion, Guid sortId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 fullVersion, valuetype System.Guid sortId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.SortVersion.#ctor(System.Int32,System.Guid)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (fullVersion As Integer, sortId As Guid)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SortVersion(int fullVersion, Guid sortId);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="fullVersion" Type="System.Int32" />
        <Parameter Name="sortId" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="fullVersion">Numer wersji.</param>
        <param name="sortId">Identyfikator sortowania.</param>
        <summary>Tworzy nowe wystąpienie klasy <see cref="T:System.Globalization.SortVersion" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten konstruktor tworzy <xref:System.Globalization.SortVersion> obiektu o określonej wersji i sortować identyfikatora. `fullVersion` Argument jest przypisany do <xref:System.Globalization.SortVersion.FullVersion%2A> właściwości. `sortId` Argument jest przypisany do <xref:System.Globalization.SortVersion.SortId%2A> właściwości.  
  
 Ten konstruktor jest przydatne w przypadku ponownego tworzenia <xref:System.Globalization.SortVersion> obiekt danych serializacji lub zapisać. Następnie można porównywać tę wersję z bieżącą wersją aplikacji w celu ustalenia, czy dostępna jest wersja używany do wyświetlania i kolejność aplikacji ciągów Unicode.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Globalization.CompareInfo.Version" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Equals">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Zwraca wartość wskazującą, czy dwa <see cref="T:System.Globalization.SortVersion" /> wystąpienia są takie same.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (System.Globalization.SortVersion other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(class System.Globalization.SortVersion other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.SortVersion.Equals(System.Globalization.SortVersion)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (other As SortVersion) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Equals(System::Globalization::SortVersion ^ other);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IEquatable`1.Equals(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Globalization.SortVersion" />
      </Parameters>
      <Docs>
        <param name="other">Obiekt, który ma zostać porównany z tym wystąpieniem.</param>
        <summary>Zwraca wartość wskazującą, czy to <see cref="T:System.Globalization.SortVersion" /> wystąpienie jest równe określonej <see cref="T:System.Globalization.SortVersion" /> obiektu.</summary>
        <returns>
          <see langword="true" /> Jeśli <paramref name="other" /> reprezentuje wersji zgodnej z wersją tego wystąpienia; w przeciwnym razie <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dwa <xref:System.Globalization.SortVersion> obiekty są takie same jeśli ich <xref:System.Globalization.SortVersion.FullVersion%2A> i <xref:System.Globalization.SortVersion.SortId%2A> właściwości są takie same.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Globalization.SortVersion.op_Equality(System.Globalization.SortVersion,System.Globalization.SortVersion)" />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.SortVersion.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">Obiekt, który ma zostać porównany z tym wystąpieniem.</param>
        <summary>Zwraca wartość wskazującą, czy to <see cref="T:System.Globalization.SortVersion" /> wystąpienie jest takie samo jak określony obiekt.</summary>
        <returns>
          <see langword="true" /> Jeśli <paramref name="obj" /> jest <see cref="T:System.Globalization.SortVersion" /> obiekt, który reprezentuje wersji zgodnej z wersją tego wystąpienia; w przeciwnym razie <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dwa <xref:System.Globalization.SortVersion> obiekty są takie same jeśli ich <xref:System.Globalization.SortVersion.FullVersion%2A> i <xref:System.Globalization.SortVersion.SortId%2A> właściwości są takie same.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Globalization.SortVersion.op_Equality(System.Globalization.SortVersion,System.Globalization.SortVersion)" />
      </Docs>
    </Member>
    <Member MemberName="FullVersion">
      <MemberSignature Language="C#" Value="public int FullVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 FullVersion" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.SortVersion.FullVersion" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FullVersion As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int FullVersion { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera pełną wersję liczbę <see cref="T:System.Globalization.SortVersion" /> obiektu.</summary>
        <value>Numer wersji <see cref="T:System.Globalization.SortVersion" /> obiektu.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wartość <xref:System.Globalization.SortVersion.FullVersion%2A> właściwość odzwierciedla Unicode wersja użyta do normalizacji i porównywanie ciągów.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.SortVersion.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zwraca wartość skrótu dla tego wystąpienia.</summary>
        <returns>Kod skrótu 32-bitowej liczby całkowitej ze znakiem.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (System.Globalization.SortVersion left, System.Globalization.SortVersion right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(class System.Globalization.SortVersion left, class System.Globalization.SortVersion right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.SortVersion.op_Equality(System.Globalization.SortVersion,System.Globalization.SortVersion)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (left As SortVersion, right As SortVersion) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(System::Globalization::SortVersion ^ left, System::Globalization::SortVersion ^ right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Globalization.SortVersion" />
        <Parameter Name="right" Type="System.Globalization.SortVersion" />
      </Parameters>
      <Docs>
        <param name="left">Pierwsze wystąpienie do porównania.</param>
        <param name="right">Drugie wystąpienie do porównania.</param>
        <summary>Wskazuje, czy dwa <see cref="T:System.Globalization.SortVersion" /> wystąpienia są takie same.</summary>
        <returns>
          <see langword="true" /> Jeśli wartości <paramref name="left" /> i <paramref name="right" /> są równe; w przeciwnym razie <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dwa <xref:System.Globalization.SortVersion> obiekty są takie same, jeśli oba warunki są `null`, lub jeśli ich <xref:System.Globalization.SortVersion.FullVersion%2A> i <xref:System.Globalization.SortVersion.SortId%2A> właściwości są takie same.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Globalization.SortVersion.Equals(System.Globalization.SortVersion)" />
        <altmember cref="M:System.Globalization.SortVersion.op_Inequality(System.Globalization.SortVersion,System.Globalization.SortVersion)" />
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (System.Globalization.SortVersion left, System.Globalization.SortVersion right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(class System.Globalization.SortVersion left, class System.Globalization.SortVersion right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.SortVersion.op_Inequality(System.Globalization.SortVersion,System.Globalization.SortVersion)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (left As SortVersion, right As SortVersion) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(System::Globalization::SortVersion ^ left, System::Globalization::SortVersion ^ right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Globalization.SortVersion" />
        <Parameter Name="right" Type="System.Globalization.SortVersion" />
      </Parameters>
      <Docs>
        <param name="left">Pierwsze wystąpienie do porównania.</param>
        <param name="right">Drugie wystąpienie do porównania.</param>
        <summary>Wskazuje, czy dwa <see cref="T:System.Globalization.SortVersion" /> wystąpień nie są takie same.</summary>
        <returns>
          <see langword="true" /> Jeśli wartości <paramref name="left" /> i <paramref name="right" /> nie są równe; w przeciwnym razie <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dwa <xref:System.Globalization.SortVersion> obiekty nie są takie same, jeśli jest `null` , a drugi nie, czy mają one różne <xref:System.Globalization.SortVersion.FullVersion%2A> lub <xref:System.Globalization.SortVersion.SortId%2A> wartości właściwości.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Globalization.SortVersion.Equals(System.Globalization.SortVersion)" />
        <altmember cref="M:System.Globalization.SortVersion.op_Inequality(System.Globalization.SortVersion,System.Globalization.SortVersion)" />
      </Docs>
    </Member>
    <Member MemberName="SortId">
      <MemberSignature Language="C#" Value="public Guid SortId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Guid SortId" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.SortVersion.SortId" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SortId As Guid" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Guid SortId { Guid get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Guid</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera unikatowy identyfikator globalny tego <see cref="T:System.Globalization.SortVersion" /> obiektu.</summary>
        <value>Globalnie unikatowy identyfikator dla tego <see cref="T:System.Globalization.SortVersion" /> obiektu.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wartość <xref:System.Globalization.SortVersion.SortId%2A> właściwość odzwierciedla kultury, na których konwencje wpływ porównywanie i sortowanie ciągów.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>