<Type Name="IdnMapping" FullName="System.Globalization.IdnMapping">
  <Metadata><Meta Name="ms.openlocfilehash" Value="439eddb16a3263203c7cbcef7cd62c3cd264076c" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69357471" /></Metadata><TypeSignature Language="C#" Value="public sealed class IdnMapping" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit IdnMapping extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Globalization.IdnMapping" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class IdnMapping" />
  <TypeSignature Language="C++ CLI" Value="public ref class IdnMapping sealed" />
  <TypeSignature Language="F#" Value="type IdnMapping = class" />
  <AssemblyInfo>
    <AssemblyName>System.Globalization.Extensions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Obsługuje użycie znaków innych niż ASCII w przypadku nazw domen internetowych. Klasa ta nie może być dziedziczona.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Nazwa domeny internetowej składa się z co najmniej jednej części zwanej etykietami nazw domen, rozdzielonych przez separatory etykiet. Na przykład nazwa domeny "www.proseware.com" składa się z etykiet, "www", "proseware" i "com", oddzielonych kropkami. Standardowe nazwy domen składają się ze wskazanych znaków w zakresie znaków US-ASCII (lub alfabetu Basic), od U + 0021 do U + 007E. Aby ułatwić użycie Internetu w kulturach, które nie korzystają z zestawu znaków US-ASCII, przystosowania nazwy domen w aplikacjach (IDNA) standard zostały przyjęte w 2003, aby obsługiwały Dołączanie znaków Unicode poza zakres znaków US-ASCII. Jednak serwery nazw i rozpoznawanie nazw domen nadal polegają na znakach w zakresie znaków US-ASCII.  
  
 Mechanizm IDNA używa formacie Punycode do mapowania międzynarodowej nazwy domeny zawierającej znaki Unicode spoza zakresu znaków US-ASCII do zakresu znaków US-ASCII obsługiwanego przez system nazw domen. Mechanizm IDNA służy do konwertowania tylko nazw domen, a nie danych przesyłanych przez Internet.  
  
> [!IMPORTANT]
>  [!INCLUDE[net_v45](~/includes/net-v45-md.md)] W<xref:System.Globalization.IdnMapping> , Klasa obsługuje różne wersje standardu IDNA, w zależności od używanego systemu operacyjnego:  
>   
> - W przypadku korzystania [!INCLUDE[win8](~/includes/win8-md.md)]z systemu obsługuje 2008 wersję standardową IDNA, którą opisano w [dokumencie RFC 5891: Międzynarodowe nazwy domen w aplikacjach (IDNA): Protokół](https://go.microsoft.com/fwlink/?LinkId=231875).
> - Gdy program jest uruchamiany we wcześniejszych wersjach systemu operacyjnego Windows, obsługuje 2003 wersję standardową opisaną w [dokumencie RFC 3490: Przystosowania nazwy domen w aplikacjach (IDNA)](https://go.microsoft.com/fwlink/?LinkId=158110).
>   
>  Zobacz [standard Unicode Technical #46: IDNA przetwarzanie](https://go.microsoft.com/fwlink/?LinkId=232459) zgodności dla różnic w sposobie, w jaki te standardy obsługują określone zestawy znaków.  
  
 <xref:System.Globalization.IdnMapping.GetAscii%2A?displayProperty=nameWithType> Metoda normalizuje nazwę domeny, konwertuje znormalizowaną nazwę na reprezentację, która składa się z niedrukowalnych znaków Unicode w zakresie kodów kodu US-ASCII (u + 0020 do U + 007E) i dołącza prefiks kodowania zgodnego ze standardem ASCII (" Xn--") do każdej etykiety. Metoda przywraca etykiety nazw domen konwertowane <xref:System.Globalization.IdnMapping.GetAscii%2A> przez metodę. <xref:System.Globalization.IdnMapping.GetUnicode%2A?displayProperty=nameWithType>  
  
 Jeśli ciąg, który ma zostać przekonwertowany, zawiera znaki separatora etykiet, pełne zatrzymywanie (u + 3001,3002), pełnej pełne zatrzymanie (u + FF0E) i o pełnej szerokości ideograficzne (u + FF61 <xref:System.Globalization.IdnMapping.GetAscii%2A> ), Metoda konwertuje je na pełne separatory etykiet (kropka, u + 002E). Jednak <xref:System.Globalization.IdnMapping.GetUnicode%2A> Metoda nie przywraca oryginalnego znaku separatora etykiet.  
  
   
  
## Examples  
 Poniższy przykład używa <xref:System.Globalization.IdnMapping.GetAscii%28System.String%2CSystem.Int32%2CSystem.Int32%29> metody do konwersji tablicy międzynarodowych nazw domen na formacie Punycode. Następnie <xref:System.Globalization.IdnMapping.GetUnicode%2A> Metoda konwertuje nazwę domeny formacie Punycode z powrotem na oryginalną nazwę domeny, ale zastępuje pierwotne separatory etykiet z separatorem standardowej etykiety.  
  
 [!code-csharp[System.Globalization.IdnMapping.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.idnmapping.class/cs/conversion1.cs#1)]
 [!code-vb[System.Globalization.IdnMapping.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.idnmapping.class/vb/conversion1.vb#1)]  
  
 ]]></format>
    </remarks>
    <threadsafe>Wszystkie metody publiczne są <see cref="T:System.Globalization.IdnMapping" /> bezpieczne dla wątków i mogą być używane współbieżnie z wielu wątków, o <see cref="T:System.Globalization.IdnMapping" /> ile właściwości wystąpienia nie są również ustawiane współbieżnie.</threadsafe>
    <altmember cref="Overload:System.String.Normalize" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public IdnMapping ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.IdnMapping.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IdnMapping();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Globalization.IdnMapping" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Właściwości <xref:System.Globalization.IdnMapping.AllowUnassigned%2A?displayProperty=nameWithType> i <xref:System.Globalization.IdnMapping.UseStd3AsciiRules%2A?displayProperty=nameWithType> są inicjowane do `false`. Niewielkim podzbiorem znaków ASCII innych niż A-Z, 0-9, znaku łącznika (-) (U + 002D) i znaku kropki (.) są dozwolone w nazwach domen, ale nieprzypisane punkty kodów Unicode nie są.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowUnassigned">
      <MemberSignature Language="C#" Value="public bool AllowUnassigned { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowUnassigned" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.IdnMapping.AllowUnassigned" />
      <MemberSignature Language="VB.NET" Value="Public Property AllowUnassigned As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowUnassigned { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AllowUnassigned : bool with get, set" Usage="System.Globalization.IdnMapping.AllowUnassigned" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy nieprzypisane punkty kodu Unicode są używane w operacjach wykonywanych przez elementy członkowskie bieżącego <see cref="T:System.Globalization.IdnMapping" /> obiektu.</summary>
        <value><see langword="true" />w przypadku korzystania z nieprzypisanych punktów kodu w operacjach; w przeciwnym razie. <see langword="false" /></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zarejestrowana nazwa domeny nie może zawierać nieprzypisanych punktów kodu. W związku z tym wartość <xref:System.Globalization.IdnMapping.AllowUnassigned%2A> domyślna właściwości to. `false` Specyfikacja IDNA zezwala na nieprzypisane punkty kodu tylko w zapytaniach dotyczących pasujących ciągów (czyli w wyszukiwaniu nazw domen). Aby uzyskać więcej informacji o używaniu nieprzypisanych punktów kodu w nazwach domen, zobacz [RFC 3454, "Przygotowanie międzynarodowych ciągów (Stringprep)"](https://go.microsoft.com/fwlink/?LinkId=231873) i [RFC 5891, "międzynarodowe nazwy domen w aplikacjach (IDNA): Protokół "](https://go.microsoft.com/fwlink/?LinkId=231875).  
  
> [!IMPORTANT]
>  Jeśli właściwość jest `false`, zachowanie skojarzone z właściwością zależy od bazowego systemu operacyjnego. <xref:System.Globalization.IdnMapping.AllowUnassigned%2A> [!INCLUDE[win8](~/includes/win8-md.md)] Na<xref:System.Globalization.IdnMapping> , Klasa jest zgodna z IDNA 2008, która jest oparta na standardzie Unicode 6,0. W poprzednich wersjach systemu Windows <xref:System.Globalization.IdnMapping> Klasa jest oparta na IDNA 2003, która jest oparta na standardzie Unicode 3. *x*. W przypadku niektórych punktów kodowych, które zostały nieprzypisane w IDNA 2003, zostały przypisane znaki i są one obsługiwane w IDNA 2008. Na przykład w standardzie Unicode 4,0 wprowadzono polecenie U + 0221. W [!INCLUDE[win8](~/includes/win8-md.md)]systemie jest zakodowany jako "Xn-6LA". W poprzednich wersjach systemu Windows zgłasza <xref:System.ArgumentException> wyjątek.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.IdnMapping.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="idnMapping.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">Obiekt do porównania z bieżącym obiektem.</param>
        <summary>Wskazuje, czy określony obiekt i bieżący <see cref="T:System.Globalization.IdnMapping" /> obiekt są równe.</summary>
        <returns><see langword="true" /><paramref name="obj" /> Jeśli obiekt określony przez parametr jest <see cref="T:System.Globalization.IdnMapping" /> pochodną i jego <see cref="P:System.Globalization.IdnMapping.AllowUnassigned" /> <see cref="P:System.Globalization.IdnMapping.UseStd3AsciiRules" /> właściwości są równe; w przeciwnym razie, <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetAscii">
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Extensions</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Koduje ciąg etykiet nazw domen, które zawierają znaki Unicode spoza zakresu znaków US-ASCII do ciągu znaków Unicode, które są dostępne w zakresie znaków w kodzie ASCII (U + 0020 do U + 007E). Ciąg jest formatowany zgodnie ze standardem IDNA.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetAscii">
      <MemberSignature Language="C#" Value="public string GetAscii (string unicode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetAscii(string unicode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.IdnMapping.GetAscii(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAscii (unicode As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetAscii(System::String ^ unicode);" />
      <MemberSignature Language="F#" Value="member this.GetAscii : string -&gt; string" Usage="idnMapping.GetAscii unicode" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="unicode" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="unicode">Ciąg do przekonwertowania, który składa się z co najmniej jednej etykiety nazwy domeny rozdzielanej separatorami etykiet.</param>
        <summary>Koduje ciąg etykiet nazw domen, które składają się z znaków Unicode na ciąg, który zawiera znaki Unicode w zakresie znaków US-ASCII. Ciąg jest formatowany zgodnie ze standardem IDNA.</summary>
        <returns>Odpowiednik ciągu określonego przez <paramref name="unicode" /> parametr, składający się z kodów znaków Unicode w zakresie znaków US-ASCII (u + 0020 do U + 007E) i sformatowanych zgodnie ze standardem IDNA.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `unicode` Parametr określa ciąg składający się z co najmniej jednej etykiety, która składa się z prawidłowych znaków Unicode. Etykiety są oddzielane separatorami etykiet. `unicode` Parametr nie może rozpoczynać się od separatora etykiet, ale może zawierać i opcjonalnie kończyć się separatorem. Separatory etykiet są pełne (okres, U + 002E), pełne zatrzymywanie (U + 3001,3002), pełnej pełne zatrzymanie (U + FF0E) i o pełnej szerokości (U + FF61). Na przykład nazwa domeny "www.adatum.com" składa się z etykiet, "www", "adatum" i "com", oddzielonych kropkami.  
  
 Etykieta nie może zawierać żadnego z następujących znaków:  
  
-   Znaki kontrolne Unicode od U + 0,001 do U + 001F i U + 007F.  
  
-   Nieprzypisane znaki Unicode, jeśli wartość <xref:System.Globalization.IdnMapping.AllowUnassigned%2A> właściwości to. `false`  
  
-   Znaki niestandardowe w zakresie znaków US-ASCII, takie jak spacja (u + 0020), wykrzyknik (u + 0021) i niska linia (u + 005F), jeśli wartość <xref:System.Globalization.IdnMapping.UseStd3AsciiRules%2A> właściwości jest. `true`  
  
-   Znaki, które są zabronione przez określoną wersję standardu IDNA. Aby uzyskać więcej informacji o niedozwolonych [znakach, zobacz RFC 3454: Przygotowanie ciągów międzynarodowych ("stringprep")](https://go.microsoft.com/fwlink/?LinkId=231873) dla IDNA 2003 i [RFC 5982: Punkty kodu Unicode i międzynarodowe nazwy domen dla aplikacji](https://go.microsoft.com/fwlink/?LinkId=231877) dla IDNA 2008.  
  
 <xref:System.Globalization.IdnMapping.GetAscii%2A> Metoda konwertuje wszystkie separatory etykiet na pełne zatrzymanie (okres, U + 002E).  
  
 Jeśli `unicode` nie zawiera żadnych znaków spoza zakresu znaków US-ASCII, a żadne znaki w zakresie znaków US-ASCII nie są dozwolone, metoda zwraca `unicode` niezmieniony.  
  
   
  
## Examples  
 W poniższym przykładzie zastosowano <xref:System.Globalization.IdnMapping.GetAscii%28System.String%29> metodę w celu przekonwertowania tablicy międzynarodowych nazw domen na formacie Punycode, która jest odpowiednikiem zakodowanym, która składa się ze znaków w zakresie znaków US-ASCII. Następnie <xref:System.Globalization.IdnMapping.GetUnicode%28System.String%29> Metoda konwertuje nazwę domeny formacie Punycode z powrotem na oryginalną nazwę domeny, ale zastępuje pierwotne separatory etykiet z separatorem standardowej etykiety.  
  
 [!code-csharp[System.Globalization.IdnMapping.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.idnmapping.class/cs/conversion1.cs#1)]
 [!code-vb[System.Globalization.IdnMapping.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.idnmapping.class/vb/conversion1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="unicode" />jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="unicode" />jest nieprawidłowy na podstawie <see cref="P:System.Globalization.IdnMapping.AllowUnassigned" /> właściwości i <see cref="P:System.Globalization.IdnMapping.UseStd3AsciiRules" /> i standardu IDNA.</exception>
        <block subset="none" type="usage"><para>[!INCLUDE[net_v45](~/includes/net-v45-md.md)] W<see cref="T:System.Globalization.IdnMapping" /> , Klasa obsługuje różne wersje standardu IDNA, w zależności od używanego systemu operacyjnego: 
— W przypadku korzystania [!INCLUDE[win8](~/includes/win8-md.md)]z systemu obsługuje 2008 wersję standardu IDNA, którą opisano [w dokumencie RFC 5891: Międzynarodowe nazwy domen w aplikacjach (IDNA): Protokół](https://go.microsoft.com/fwlink/?LinkId=231875).  
  
— W przypadku uruchamiania we wcześniejszych wersjach systemu operacyjnego Windows obsługuje 2003 wersję standardową opisaną [w dokumencie RFC 3490: Przystosowania nazwy domen w aplikacjach (IDNA)](https://go.microsoft.com/fwlink/?LinkId=158110).  
  
Zobacz [standard Unicode Technical #46: IDNA przetwarzanie](https://go.microsoft.com/fwlink/?LinkId=232459) zgodności dla różnic w sposobie, w jaki te standardy obsługują określone zestawy znaków.</para></block>
      </Docs>
    </Member>
    <Member MemberName="GetAscii">
      <MemberSignature Language="C#" Value="public string GetAscii (string unicode, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetAscii(string unicode, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.IdnMapping.GetAscii(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAscii (unicode As String, index As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetAscii(System::String ^ unicode, int index);" />
      <MemberSignature Language="F#" Value="member this.GetAscii : string * int -&gt; string" Usage="idnMapping.GetAscii (unicode, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="unicode" Type="System.String" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="unicode">Ciąg do przekonwertowania, który składa się z co najmniej jednej etykiety nazwy domeny rozdzielanej separatorami etykiet.</param>
        <param name="index">Przesunięcie od zera do <paramref name="unicode" /> określa początek podciągu do przekonwertowania. Operacja konwersji kończy się na końcu <paramref name="unicode" /> ciągu.</param>
        <summary>Koduje podciąg etykiet nazw domen, które zawierają znaki Unicode spoza zakresu znaków US-ASCII. Podciąg jest konwertowany na ciąg znaków Unicode, który znajduje się w zakresie znaków US-ASCII i jest formatowany zgodnie ze standardem IDNA.</summary>
        <returns>Odpowiednik podciągu określonego przez <paramref name="unicode" /> parametry i <paramref name="index" /> , składający się z kodów znaków Unicode w zakresie znaków US-ASCII (u + 0020 do u + 007E) i sformatowanych zgodnie ze standardem IDNA.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Parametry `unicode` i`index` definiują podciąg z co najmniej jedną etykietę, która składa się z prawidłowych znaków Unicode. Etykiety są oddzielane separatorami etykiet. Pierwszy znak podciągu nie może rozpoczynać się od separatora etykiety, ale może zawierać i opcjonalnie kończyć się separatorem. Separatory etykiet są pełne (okres, U + 002E), pełne zatrzymywanie (U + 3001,3002), pełnej pełne zatrzymanie (U + FF0E) i o pełnej szerokości (U + FF61). Na przykład nazwa domeny "www.adatum.com" składa się z etykiet, "www", "adatum" i "com", oddzielonych kropkami.  
  
 Etykieta nie może zawierać żadnego z następujących znaków:  
  
-   Znaki kontrolne Unicode od U + 0,001 do U + 001F i U + 007F.  
  
-   Nieprzypisane znaki Unicode, w zależności od wartości <xref:System.Globalization.IdnMapping.AllowUnassigned%2A> właściwości.  
  
-   Znaki niestandardowe w zakresie znaków US-ASCII, takie jak spacja (u + 0020), wykrzyknik (u + 0021) i niska linia (u + 005F), w zależności od wartości <xref:System.Globalization.IdnMapping.UseStd3AsciiRules%2A> właściwości.  
  
-   Znaki, które są zabronione przez określoną wersję standardu IDNA. Aby uzyskać więcej informacji o niedozwolonych [znakach, zobacz RFC 3454: Przygotowanie ciągów międzynarodowych ("stringprep")](https://go.microsoft.com/fwlink/?LinkId=231873) dla IDNA 2003 i [RFC 5982: Punkty kodu Unicode i międzynarodowe nazwy domen dla aplikacji](https://go.microsoft.com/fwlink/?LinkId=231877) dla IDNA 2008.  
  
 <xref:System.Globalization.IdnMapping.GetAscii%2A> Metoda konwertuje wszystkie separatory etykiet na pełne zatrzymanie (okres, U + 002E).  
  
 Jeśli `unicode` nie zawiera żadnych znaków spoza zakresu znaków US-ASCII, a żadne znaki w zakresie znaków US-ASCII nie są dozwolone, metoda zwraca `unicode` niezmieniony.  
  
   
  
## Examples  
 Poniższy przykład usuwa część lokalną i @ Character z adresu e-mail, a następnie przekazuje nazwę <xref:System.Globalization.IdnMapping.GetAscii%28System.String%2CSystem.Int32%29> domeny, do metody w celu utworzenia nazwy domeny formacie Punycode, która jest zakodowanym odpowiednikiem, który zawiera znaki w US-ASCII zakres znaków. Następnie <xref:System.Globalization.IdnMapping.GetUnicode%28System.String%2CSystem.Int32%2CSystem.Int32%29> Metoda konwertuje nazwę domeny formacie Punycode z powrotem na oryginalną nazwę domeny, ale zastępuje pierwotne separatory etykiet z separatorem standardowej etykiety.  
  
 [!code-csharp[System.Globalization.IdnMapping.GetAscii#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.idnmapping.getascii/cs/conversion1a.cs#2)]
 [!code-vb[System.Globalization.IdnMapping.GetAscii#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.idnmapping.getascii/vb/conversion1a.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="unicode" />jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="index" />jest mniejsza od zera.  
  
—lub— 
 <paramref name="index" />jest większa niż długość <paramref name="unicode" />.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="unicode" />jest nieprawidłowy na podstawie <see cref="P:System.Globalization.IdnMapping.AllowUnassigned" /> właściwości i <see cref="P:System.Globalization.IdnMapping.UseStd3AsciiRules" /> i standardu IDNA.</exception>
        <block subset="none" type="usage"><para>[!INCLUDE[net_v45](~/includes/net-v45-md.md)] W<see cref="T:System.Globalization.IdnMapping" /> , Klasa obsługuje różne wersje standardu IDNA, w zależności od używanego systemu operacyjnego: 
— W przypadku korzystania [!INCLUDE[win8](~/includes/win8-md.md)]z systemu obsługuje 2008 wersję standardu IDNA, którą opisano [w dokumencie RFC 5891: Międzynarodowe nazwy domen w aplikacjach (IDNA): Protokół](https://go.microsoft.com/fwlink/?LinkId=231875).  
  
— W przypadku uruchamiania we wcześniejszych wersjach systemu operacyjnego Windows obsługuje 2003 wersję standardową opisaną [w dokumencie RFC 3490: Przystosowania nazwy domen w aplikacjach (IDNA)](https://go.microsoft.com/fwlink/?LinkId=158110).  
  
Zobacz [standard Unicode Technical #46: IDNA przetwarzanie](https://go.microsoft.com/fwlink/?LinkId=232459) zgodności dla różnic w sposobie, w jaki te standardy obsługują określone zestawy znaków.</para></block>
      </Docs>
    </Member>
    <Member MemberName="GetAscii">
      <MemberSignature Language="C#" Value="public string GetAscii (string unicode, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetAscii(string unicode, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.IdnMapping.GetAscii(System.String,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAscii (unicode As String, index As Integer, count As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetAscii(System::String ^ unicode, int index, int count);" />
      <MemberSignature Language="F#" Value="member this.GetAscii : string * int * int -&gt; string" Usage="idnMapping.GetAscii (unicode, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="unicode" Type="System.String" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="unicode">Ciąg do przekonwertowania, który składa się z co najmniej jednej etykiety nazwy domeny rozdzielanej separatorami etykiet.</param>
        <param name="index">Przesunięcie od zera do <paramref name="unicode" /> , które określa początek podciągu.</param>
        <param name="count">Liczba znaków do przekonwertowania w podciągach, które zaczynają się w położeniu <paramref name="index" /> określonym przez <paramref name="unicode" /> ciąg.</param>
        <summary>Koduje określoną liczbę znaków w podciągu etykiet nazw domen, które zawierają znaki Unicode spoza zakresu znaków US-ASCII. Podciąg jest konwertowany na ciąg znaków Unicode, który znajduje się w zakresie znaków US-ASCII i jest formatowany zgodnie ze standardem IDNA.</summary>
        <returns>Odpowiednik podciągu określony przez <paramref name="unicode" />, <paramref name="index" />, i <paramref name="count" /> , składający się z niedrukowalnych znaków Unicode w zakresie znaków US-ASCII (u + 0020 do u + 007E) i sformatowany zgodnie ze standardem IDNA.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Parametry `Unicode`, `index` i`count` definiują podciąg z co najmniej jedną etykietę, która składa się z prawidłowych znaków Unicode. Etykiety są oddzielane separatorami etykiet. Pierwszy znak podciągu nie może rozpoczynać się od separatora etykiety, ale może zawierać i opcjonalnie kończyć się separatorem. Separatory etykiet są pełne (okres, U + 002E), pełne zatrzymywanie (U + 3001,3002), pełnej pełne zatrzymanie (U + FF0E) i o pełnej szerokości (U + FF61). Na przykład nazwa domeny "www.adatum.com" składa się z etykiet, "www", "adatum" i "com", oddzielonych kropkami.  
  
 Etykieta nie może zawierać żadnego z następujących znaków:  
  
-   Znaki kontrolne Unicode od U + 0,001 do U + 001F i U + 007F.  
  
-   Nieprzypisane znaki Unicode, w zależności od wartości <xref:System.Globalization.IdnMapping.AllowUnassigned%2A> właściwości.  
  
-   Znaki niestandardowe w zakresie znaków US-ASCII, takie jak spacja (u + 0020), wykrzyknik (u + 0021) i niska linia (u + 005F), w zależności od wartości <xref:System.Globalization.IdnMapping.UseStd3AsciiRules%2A> właściwości.  
  
-   Znaki, które są zabronione przez określoną wersję standardu IDNA. Aby uzyskać więcej informacji o niedozwolonych [znakach, zobacz RFC 3454: Przygotowanie ciągów międzynarodowych ("stringprep")](https://go.microsoft.com/fwlink/?LinkId=231873) dla IDNA 2003 i [RFC 5982: Punkty kodu Unicode i międzynarodowe nazwy domen dla aplikacji](https://go.microsoft.com/fwlink/?LinkId=231877) dla IDNA 2008.  
  
 <xref:System.Globalization.IdnMapping.GetAscii%2A> Metoda konwertuje wszystkie separatory etykiet na pełne zatrzymanie (okres, U + 002E). Jeśli podciąg nie zawiera znaków spoza zakresu znaków US-ASCII, a żadne znaki w zakresie znaków US-ASCII nie są zabronione, metoda zwraca podciąg niezmieniony.  
  
   
  
## Examples  
 W poniższym przykładzie użyto <xref:System.Globalization.IdnMapping.GetAscii%28System.String%2CSystem.Int32%2CSystem.Int32%29> metody do przekonwertowania międzynarodowej nazwy domeny na nazwę domeny, która jest zgodna ze standardem IDNA. <xref:System.Globalization.IdnMapping.GetUnicode%28System.String%2CSystem.Int32%2CSystem.Int32%29> Metoda następnie konwertuje standardowe nazwy domeny z powrotem na oryginalną nazwę domeny, ale zastępuje pierwotne separatory etykiet z separatorem standardowej etykiety.  
  
 [!code-csharp[IdnMapping.GetX#1](~/samples/snippets/csharp/VS_Snippets_CLR/IdnMapping.GetX/CS/getx.cs#1)]
 [!code-vb[IdnMapping.GetX#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/IdnMapping.GetX/VB/getx.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="unicode" />jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="index" />lub <paramref name="count" /> jest mniejsza od zera.  
  
—lub— 
 <paramref name="index" />jest większa niż długość <paramref name="unicode" />.  
  
—lub— 
 <paramref name="index" />jest większa niż długość <paramref name="unicode" /> znaku minus. <paramref name="count" /></exception>
        <exception cref="T:System.ArgumentException"><paramref name="unicode" />jest nieprawidłowy na podstawie <see cref="P:System.Globalization.IdnMapping.AllowUnassigned" /> właściwości i <see cref="P:System.Globalization.IdnMapping.UseStd3AsciiRules" /> i standardu IDNA.</exception>
        <block subset="none" type="usage"><para>[!INCLUDE[net_v45](~/includes/net-v45-md.md)] W<see cref="T:System.Globalization.IdnMapping" /> , Klasa obsługuje różne wersje standardu IDNA, w zależności od używanego systemu operacyjnego: 
— W przypadku korzystania [!INCLUDE[win8](~/includes/win8-md.md)]z systemu obsługuje 2008 wersję standardu IDNA, którą opisano [w dokumencie RFC 5891: Międzynarodowe nazwy domen w aplikacjach (IDNA): Protokół](https://go.microsoft.com/fwlink/?LinkId=231875).  
  
— W przypadku uruchamiania we wcześniejszych wersjach systemu operacyjnego Windows obsługuje 2003 wersję standardową opisaną [w dokumencie RFC 3490: Przystosowania nazwy domen w aplikacjach (IDNA)](https://go.microsoft.com/fwlink/?LinkId=158110).  
  
Zobacz [standard Unicode Technical #46: IDNA przetwarzanie](https://go.microsoft.com/fwlink/?LinkId=232459) zgodności dla różnic w sposobie, w jaki te standardy obsługują określone zestawy znaków.</para></block>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.IdnMapping.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="idnMapping.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zwraca kod skrótu dla tego <see cref="T:System.Globalization.IdnMapping" /> obiektu.</summary>
        <returns>Jedna z 4 32-bitowych stałych ze znakiem uzyskanych na podstawie <see cref="T:System.Globalization.IdnMapping" /> właściwości obiektu.  Wartość zwracana nie ma specjalnego znaczenia i nie jest odpowiednia do użycia w algorytmie kodu skrótu.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zastąp <xref:System.Globalization.IdnMapping.GetHashCode%2A> metodę, jeśli aplikacja musi zaimplementować zrozumiały algorytm kodu skrótu.  
  
   
  
## Examples  
 W poniższym przykładzie przyjęto założenie, że pojedynczy ciąg może zawierać wiele adresów e-mail rozdzielonych spacjami. Spowoduje to usunięcie części lokalnej i znaku @ z każdego adresu e-mail, a następnie przekazanie nazwy <xref:System.Globalization.IdnMapping.GetAscii%28System.String%2CSystem.Int32%29> domeny lub <xref:System.Globalization.IdnMapping.GetAscii%28System.String%2CSystem.Int32%2CSystem.Int32%29> metody w celu utworzenia nazwy domeny formacie Punycode. Następnie <xref:System.Globalization.IdnMapping.GetUnicode%28System.String%2CSystem.Int32%2CSystem.Int32%29> Metoda konwertuje nazwę domeny formacie Punycode z powrotem na oryginalną nazwę domeny.  
  
 [!code-csharp[System.Globalization.IdnMapping.GetAscii#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.idnmapping.getascii/cs/conversion1b.cs#3)]
 [!code-vb[System.Globalization.IdnMapping.GetAscii#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.idnmapping.getascii/vb/conversion1b.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetUnicode">
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Extensions</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Dekoduje jedną lub więcej etykiet nazw domen zakodowanych zgodnie ze standardem IDNA do ciągu znaków Unicode.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetUnicode">
      <MemberSignature Language="C#" Value="public string GetUnicode (string ascii);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetUnicode(string ascii) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.IdnMapping.GetUnicode(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetUnicode (ascii As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetUnicode(System::String ^ ascii);" />
      <MemberSignature Language="F#" Value="member this.GetUnicode : string -&gt; string" Usage="idnMapping.GetUnicode ascii" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ascii" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="ascii">Ciąg do zdekodowania, który składa się z co najmniej jednej etykiety w zakresie znaków US-ASCII (U + 0020 do U + 007E) zakodowanego zgodnie ze standardem IDNA.</param>
        <summary>Dekoduje ciąg składający się z co najmniej jednej etykiety nazwy domeny, zakodowanej zgodnie ze standardem IDNA, do ciągu znaków Unicode.</summary>
        <returns>Odpowiednik Unicode IDNA podciągu określonego przez <paramref name="ascii" /> parametr.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby uzyskać więcej informacji na temat nazw domen, etykiet i separatorów etykiet, zobacz uwagi dla <xref:System.Globalization.IdnMapping.GetAscii%28System.String%2CSystem.Int32%2CSystem.Int32%29?displayProperty=nameWithType> metody.  
  
   
  
## Examples  
 Poniższy przykład używa <xref:System.Globalization.IdnMapping.GetAscii%28System.String%29> metody do konwersji tablicy międzynarodowych nazw domen na formacie Punycode. Następnie <xref:System.Globalization.IdnMapping.GetUnicode%28System.String%29> Metoda konwertuje nazwę domeny formacie Punycode z powrotem na oryginalną nazwę domeny, ale zastępuje pierwotne separatory etykiet z separatorem standardowej etykiety.  
  
 [!code-csharp[System.Globalization.IdnMapping.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.idnmapping.class/cs/conversion1.cs#1)]
 [!code-vb[System.Globalization.IdnMapping.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.idnmapping.class/vb/conversion1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="ascii" />jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="ascii" />jest nieprawidłowy na podstawie <see cref="P:System.Globalization.IdnMapping.AllowUnassigned" /> właściwości i <see cref="P:System.Globalization.IdnMapping.UseStd3AsciiRules" /> i standardu IDNA.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetUnicode">
      <MemberSignature Language="C#" Value="public string GetUnicode (string ascii, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetUnicode(string ascii, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.IdnMapping.GetUnicode(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetUnicode (ascii As String, index As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetUnicode(System::String ^ ascii, int index);" />
      <MemberSignature Language="F#" Value="member this.GetUnicode : string * int -&gt; string" Usage="idnMapping.GetUnicode (ascii, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ascii" Type="System.String" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ascii">Ciąg do zdekodowania, który składa się z co najmniej jednej etykiety w zakresie znaków US-ASCII (U + 0020 do U + 007E) zakodowanego zgodnie ze standardem IDNA.</param>
        <param name="index">Przesunięcie od zera do <paramref name="ascii" /> , które określa początek podciągu do zdekodowania. Operacja dekodowania kończy się na końcu <paramref name="ascii" /> ciągu.</param>
        <summary>Dekoduje podciąg składający się z co najmniej jednej etykiety nazwy domeny, zakodowanej zgodnie ze standardem IDNA, do ciągu znaków Unicode.</summary>
        <returns>Odpowiednik Unicode IDNA podciągu określonego przez <paramref name="ascii" /> parametry i. <paramref name="index" /></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby uzyskać więcej informacji na temat nazw domen, etykiet i separatorów etykiet, zobacz uwagi dla <xref:System.Globalization.IdnMapping.GetAscii%28System.String%2CSystem.Int32%2CSystem.Int32%29?displayProperty=nameWithType> metody.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="ascii" />jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="index" />jest mniejsza od zera.  
  
—lub— 
 <paramref name="index" />jest większa niż długość <paramref name="ascii" />.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="ascii" />jest nieprawidłowy na podstawie <see cref="P:System.Globalization.IdnMapping.AllowUnassigned" /> właściwości i <see cref="P:System.Globalization.IdnMapping.UseStd3AsciiRules" /> i standardu IDNA.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetUnicode">
      <MemberSignature Language="C#" Value="public string GetUnicode (string ascii, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetUnicode(string ascii, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.IdnMapping.GetUnicode(System.String,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetUnicode (ascii As String, index As Integer, count As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetUnicode(System::String ^ ascii, int index, int count);" />
      <MemberSignature Language="F#" Value="member this.GetUnicode : string * int * int -&gt; string" Usage="idnMapping.GetUnicode (ascii, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ascii" Type="System.String" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ascii">Ciąg do zdekodowania, który składa się z co najmniej jednej etykiety w zakresie znaków US-ASCII (U + 0020 do U + 007E) zakodowanego zgodnie ze standardem IDNA.</param>
        <param name="index">Przesunięcie od zera do <paramref name="ascii" /> , które określa początek podciągu.</param>
        <param name="count">Liczba znaków do przekonwertowania w podciągach, które zaczynają się w położeniu <paramref name="index" /> określonym przez <paramref name="ascii" /> ciąg.</param>
        <summary>Dekoduje podciąg o określonej długości, który zawiera jedną lub więcej etykiet nazw domen zakodowanych zgodnie ze standardem IDNA, do ciągu znaków Unicode.</summary>
        <returns>Odpowiednik Unicode IDNA podciągu określonego przez <paramref name="ascii" />parametry, <paramref name="index" />i <paramref name="count" /> .</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby uzyskać więcej informacji na temat nazw domen, etykiet i separatorów etykiet, zobacz uwagi dla <xref:System.Globalization.IdnMapping.GetAscii%28System.String%2CSystem.Int32%2CSystem.Int32%29?displayProperty=nameWithType> metody.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="ascii" />jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="index" />lub <paramref name="count" /> jest mniejsza od zera.  
  
—lub— 
 <paramref name="index" />jest większa niż długość <paramref name="ascii" />.  
  
—lub— 
 <paramref name="index" />jest większa niż długość <paramref name="ascii" /> znaku minus. <paramref name="count" /></exception>
        <exception cref="T:System.ArgumentException"><paramref name="ascii" />jest nieprawidłowy na podstawie <see cref="P:System.Globalization.IdnMapping.AllowUnassigned" /> właściwości i <see cref="P:System.Globalization.IdnMapping.UseStd3AsciiRules" /> i standardu IDNA.</exception>
      </Docs>
    </Member>
    <Member MemberName="UseStd3AsciiRules">
      <MemberSignature Language="C#" Value="public bool UseStd3AsciiRules { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseStd3AsciiRules" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.IdnMapping.UseStd3AsciiRules" />
      <MemberSignature Language="VB.NET" Value="Public Property UseStd3AsciiRules As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseStd3AsciiRules { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.UseStd3AsciiRules : bool with get, set" Usage="System.Globalization.IdnMapping.UseStd3AsciiRules" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy standardowe lub obniżone konwencje nazewnictwa są używane w operacjach wykonywanych przez <see cref="T:System.Globalization.IdnMapping" /> elementy członkowskie bieżącego obiektu.</summary>
        <value><see langword="true" />Jeśli standardowe konwencje nazewnictwa są używane w operacjach; w przeciwnym razie. <see langword="false" /></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Nazwy domen zgodne ze standardowymi regułami nazewnictwa składają się z określonego podzestawu znaków w zakresie znaków US-ASCII. Znaki to litery od A do Z, cyfry od 0 do 9, znak łącznika (-) (U + 002D) oraz znak kropki (.). Wielkość liter nie jest istotna. Obniżone konwencje nazewnictwa umożliwiają używanie szerszego zakresu znaków ASCII, w tym znaku spacji (U + 0020), znaku wykrzyknika (U + 0021) i znaku podkreślenie (U + 005F). Jeśli <xref:System.Globalization.IdnMapping.UseStd3AsciiRules%2A> <xref:System.Globalization.IdnMapping.GetAscii%2A> jest `true`, tylko znaki standardowe mogą być wyświetlane w etykiecie zwróconej przez metodę.  
  
 Domyślnie wartość <xref:System.Globalization.IdnMapping.UseStd3AsciiRules%2A> właściwości jest `false`i rozszerzony podzbiór znaków ASCII jest dozwolony w etykiecie.  
  
> [!NOTE]
>  Klasa zabrania używania niewyświetlanych znaków U + 0000 przez u + 001F i u + 007F w etykietach nazw domen niezależnie od ustawienia <xref:System.Globalization.IdnMapping.UseStd3AsciiRules%2A> właściwości. <xref:System.Globalization.IdnMapping> Ten zakaz zmniejsza ryzyko ataków zabezpieczeń, takich jak fałszowanie nazw.  
  
   
  
## Examples  
 Poniższy przykład generuje adresy URL zawierające znaki w zakresie ASCII od u + 0000 do u + 007F i przekazuje je do <xref:System.Globalization.IdnMapping.GetAscii%28System.String%29> metody dwóch <xref:System.Globalization.IdnMapping> obiektów. Jeden obiekt ma <xref:System.Globalization.IdnMapping.UseStd3AsciiRules%2A> ustawioną właściwość na `true`, a drugi `false`obiekt ma ustawioną wartość. W danych wyjściowych są wyświetlane nieprawidłowe znaki, gdy <xref:System.Globalization.IdnMapping.UseStd3AsciiRules%2A> właściwość jest `true` , ale jest prawidłowa, `false`gdy jest.  
  
 [!code-csharp[System.Globalization.IdnMapping.UseStd3AsciiRules#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.idnmapping.usestd3asciirules/cs/usestd3asciirules1.cs#1)]
 [!code-vb[System.Globalization.IdnMapping.UseStd3AsciiRules#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.idnmapping.usestd3asciirules/vb/usestd3asciirules1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
