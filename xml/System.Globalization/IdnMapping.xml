<Type Name="IdnMapping" FullName="System.Globalization.IdnMapping">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="2c33b447d1b6b540dc51dbe6d103121116d01261" />
    <Meta Name="ms.sourcegitcommit" Value="3507e865a3613c00760f25ad1045aaa11bae4dd8" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="04/23/2018" />
    <Meta Name="ms.locfileid" Value="31780530" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class IdnMapping" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit IdnMapping extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Globalization.IdnMapping" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class IdnMapping" />
  <TypeSignature Language="C++ CLI" Value="public ref class IdnMapping sealed" />
  <AssemblyInfo>
    <AssemblyName>System.Globalization.Extensions</AssemblyName>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Można używać znaków innych niż ASCII w ramach nazwy domen internetowych. Klasa ta nie może być dziedziczona.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Nazwy domeny internetowej składa się z co najmniej jeden części o nazwie etykiety nazwy domeny, oddzielonych separatorów etykiety. Na przykład nazwa domeny "www.proseware.com" składa się z etykiet, "www", "tor" i "com", oddzielone kropkami. Nazwy standardowej w domenę składają się z zakresu znaków US-ASCII (lub podstawowego alfabetu łacińskiego), z 0021 U + do U + 007E wyznaczonych znaków. Ułatwia użycie Internet kultury, które nie używają zestawu znaków US-ASCII internacjonalizacji nazwy domen aplikacji (IDNA) standard przyjęto w 2003 do obsługi włączenia znaki Unicode spoza zakresu znaków US-ASCII. Jednak serwery nazw i rozpoznawanie nazw domeny nadal zależą od znaków z zakresu znaków US-ASCII.  
  
 Mechanizm IDNA wykorzystuje ciąg Punycode do mapowania międzynarodowych nazw domen zawierających znaki Unicode spoza zakresu znaków US-ASCII do zakresu znaków US-ASCII, które są obsługiwane przez system nazw domen. Mechanizm IDNA służy do konwertowania tylko nazwy domeny, a nie dane przesyłane za pośrednictwem Internetu.  
  
> [!IMPORTANT]
>  W [!INCLUDE[net_v45](~/includes/net-v45-md.md)], <xref:System.Globalization.IdnMapping> klasa obsługuje wersje standard IDNA, w zależności od systemu operacyjnego w użyciu:  
>   
>  -   Uruchomienia [!INCLUDE[win8](~/includes/win8-md.md)], obsługuje on wersji 2008 standard IDNA otoczony [RFC 5891: międzynarodowych nazw domen aplikacji (IDNA): protokół](http://go.microsoft.com/fwlink/?LinkId=231875).  
> -   Uruchomienie we wcześniejszych wersjach systemu operacyjnego Windows obsługuje wersja 2003 standard otoczony [RFC 3490: internacjonalizacji nazwy domen aplikacji (IDNA)](http://go.microsoft.com/fwlink/?LinkId=158110).  
>   
>  Zobacz [Unicode techniczne standardowe 46: przetwarzanie zgodności IDNA](http://go.microsoft.com/fwlink/?LinkId=232459) różnice w taki sposób, aby uzyskać te standardy obsługi określonego zestawów znaków.  
  
 <xref:System.Globalization.IdnMapping.GetAscii%2A?displayProperty=nameWithType> Metoda normalizuje nazwę domeny, konwertuje znormalizowaną nazwę reprezentacja składa się z zawiera znaki Unicode w zakresu punktów kodowych US-ASCII (U + 0020 do U + 007E) i dołącza prefiksu kodowania (ACE) zgodnych z ASCII (" Xn--") do każdej etykiety. <xref:System.Globalization.IdnMapping.GetUnicode%2A?displayProperty=nameWithType> Metoda przywraca etykiety nazwy domeny konwersji <xref:System.Globalization.IdnMapping.GetAscii%2A> metody.  
  
 Jeśli ciąg do przekonwertowania zawiera separatora etykiety znaków IDEOGRAFICZNYCH kropka (U + 3002), Zatrzymaj pełnej szerokości (U + FF0E) oraz o szerokości POŁÓWKOWEJ IDEOGRAFICZNYCH kropka (U + FF61) <xref:System.Globalization.IdnMapping.GetAscii%2A> metoda konwertuje je na separatora etykiety kropka (okres, U + 002E). <xref:System.Globalization.IdnMapping.GetUnicode%2A> — Metoda, jednak nie powoduje przywrócenia oryginalnego znak separatora etykiety.  
  
   
  
## Examples  
 W poniższym przykładzie użyto <xref:System.Globalization.IdnMapping.GetAscii%28System.String%2CSystem.Int32%2CSystem.Int32%29> metodę, aby przekonwertować tablicy międzynarodowych nazw domen na ciąg Punycode. <xref:System.Globalization.IdnMapping.GetUnicode%2A> Metody następnie konwertuje nazwę domeny Punycode oryginalna nazwa domeny, ale zastępuje oryginalnego separatorów etykiety z separatorem standardowe etykiety.  
  
 [!code-csharp[System.Globalization.IdnMapping.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.idnmapping.class/cs/conversion1.cs#1)]
 [!code-vb[System.Globalization.IdnMapping.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.idnmapping.class/vb/conversion1.vb#1)]  
  
 ]]></format>
    </remarks>
    <threadsafe>Wszystkie metody publiczne <see cref="T:System.Globalization.IdnMapping" /> są wątkowo i mogą być używane jednocześnie wiele wątków, tak długo, jak <see cref="T:System.Globalization.IdnMapping" /> właściwości nie są również ustawione jednocześnie.</threadsafe>
    <altmember cref="Overload:System.String.Normalize" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public IdnMapping ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.IdnMapping.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IdnMapping();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Extensions</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Globalization.IdnMapping" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Globalization.IdnMapping.AllowUnassigned%2A?displayProperty=nameWithType> i <xref:System.Globalization.IdnMapping.UseStd3AsciiRules%2A?displayProperty=nameWithType> właściwości są inicjowane na `false`. (U + 002D), znaków małego podzbioru ASCII znaki inne niż A-Z, 0-9, łącznik (-) i znak kropki (.) są dozwolone w nazwach domen, ale nie są nieprzypisane punktów kodowych Unicode.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowUnassigned">
      <MemberSignature Language="C#" Value="public bool AllowUnassigned { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowUnassigned" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.IdnMapping.AllowUnassigned" />
      <MemberSignature Language="VB.NET" Value="Public Property AllowUnassigned As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowUnassigned { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Extensions</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy nieprzypisane punktów kodowych Unicode są używane w operacjach wykonywanych przez członków bieżącej <see cref="T:System.Globalization.IdnMapping" /> obiektu.</summary>
        <value>
          <see langword="true" /> Jeśli punkty nieprzypisane kodu są używane podczas wykonywania operacji; w przeciwnym razie <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zarejestrowaną nazwę domeny nie może zawierać punktów kodowych nieprzypisane. W rezultacie wartość domyślną <xref:System.Globalization.IdnMapping.AllowUnassigned%2A> jest właściwość `false`. Specyfikacja IDNA pozwala punktów kodowych nieprzypisane tylko w zapytaniach dla dopasowywanie ciągów (oznacza to, w wyszukiwaniu nazw domeny). Aby uzyskać więcej informacji dotyczących używania punktów kodowych nieprzypisane w nazwach domen, zobacz [RFC 3454, "Przygotowywanie Internationalized ciągów (stringprep)"](http://go.microsoft.com/fwlink/?LinkId=231873) i [RFC 5891, "Internationalized nazw domen w aplikacji () IDNA): Protokół "](http://go.microsoft.com/fwlink/?LinkId=231875).  
  
> [!IMPORTANT]
>  Jeśli <xref:System.Globalization.IdnMapping.AllowUnassigned%2A> właściwość jest `false`, zachowania związanego z właściwością zależy od systemu operacyjnego. Na [!INCLUDE[win8](~/includes/win8-md.md)], <xref:System.Globalization.IdnMapping> klasy odpowiada IDNA 2008, który jest oparty na standardzie Unicode w wersji 6.0. W poprzednich wersjach systemu Windows <xref:System.Globalization.IdnMapping> klasy jest oparta na 2003 IDNA, który jest oparty na Unicode 3.* x*. Niektóre punkty kodu, które były nieprzypisane IDNA 2003 przypisano znaków i są obsługiwane w IDNA 2008. Na przykład U + 0221 została wprowadzona w wersji 4.0 Unicode. Na [!INCLUDE[win8](~/includes/win8-md.md)], został zakodowany jako "xn — 6la". W poprzednich wersjach systemu Windows, zgłasza <xref:System.ArgumentException> wyjątku.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.IdnMapping.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Extensions</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">Obiekt do porównania z bieżącym obiektem.</param>
        <summary>Wskazuje, czy określony obiekt i obecnie <see cref="T:System.Globalization.IdnMapping" /> obiektu są takie same.</summary>
        <returns>
          <see langword="true" /> Jeśli obiekt określony przez <paramref name="obj" /> parametru jest pochodną <see cref="T:System.Globalization.IdnMapping" /> i jego <see cref="P:System.Globalization.IdnMapping.AllowUnassigned" /> i <see cref="P:System.Globalization.IdnMapping.UseStd3AsciiRules" /> właściwości są takie same; w przeciwnym razie <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetAscii">
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Extensions</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Koduje ciąg etykiety nazw domen zawierających znaki Unicode spoza zakresu znaków US-ASCII na ciąg znaków Unicode, którą można wyświetlić w zakresie znaków US-ASCII (U + 0020 do U + 007E). Ciąg jest sformatowany zgodnie z IDNA standardowa.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetAscii">
      <MemberSignature Language="C#" Value="public string GetAscii (string unicode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetAscii(string unicode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.IdnMapping.GetAscii(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAscii (unicode As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetAscii(System::String ^ unicode);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Extensions</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="unicode" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="unicode">Ciąg do przekonwertowania, która składa się z jedną lub więcej domeny nazwy etykiet rozdzielonych z separatorami etykiety.</param>
        <summary>Koduje ciąg etykiety nazwy domeny, które składać się ze znaków Unicode na ciąg zawiera znaki Unicode w zakresie znaków US-ASCII. Ciąg jest sformatowany zgodnie z IDNA standardowa.</summary>
        <returns>Odpowiednik w ciągu określonego przez <paramref name="unicode" /> parametr, składające się z zawiera znaki Unicode w US-ASCII znaku zakresu (U + 0020 do U + 007E) i sformatowanej zgodnie ze standardu IDNA.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `unicode` Parametr określa ciąg przynajmniej jednej etykiety, które składają się z prawidłowych znaków Unicode. Etykiety są oddzielone separatorów etykiety. `unicode` Parametr nie może zaczynać się separatorem etykiety, ale można dołączyć i opcjonalnie kończyć się separatorem. Separatory etykiety są kropka (002E okresu, U +), pełny IDEOGRAFICZNYCH Zatrzymaj (U + 3002), Zatrzymaj pełnej szerokości (U + FF0E) oraz o szerokości POŁÓWKOWEJ IDEOGRAFICZNYCH kropka (U + FF61). Na przykład nazwa domeny "www.adatum.com" składa się z etykiet, "www", "adatum" i "com", oddzielone kropkami.  
  
 Etykiety nie może zawierać żadnego z następujących znaków:  
  
-   Znaki kontrolne Unicode od 0001 U + U + 001F i U + 007F.  
  
-   Nieprzypisane znaków Unicode, jeśli wartość <xref:System.Globalization.IdnMapping.AllowUnassigned%2A> jest właściwość `false`.  
  
-   Znaki niestandardowe w US-ASCII znaku zakresu, takie jak miejsce (U + 0020), WYKRZYKNIK oznaczyć (U + 0021), i mało znaków wiersza (U + 005F), jeśli wartość <xref:System.Globalization.IdnMapping.UseStd3AsciiRules%2A> właściwość jest `true`.  
  
-   Znaki, które są zabronione przez określoną wersję IDNA standard. Aby uzyskać więcej informacji na temat niedozwolone znaki, zobacz [RFC 3454: przygotowanie międzynarodowych ciągi ("stringprep")](http://go.microsoft.com/fwlink/?LinkId=231873) 2003 IDNA i [5982 tylko RFC: kody znaków Unicode i międzynarodowych nazw domen dla Aplikacje](http://go.microsoft.com/fwlink/?LinkId=231877) IDNA 2008.  
  
 <xref:System.Globalization.IdnMapping.GetAscii%2A> Metoda konwertuje wszystkie separatorów etykiety kropka (002E okresu, U +).  
  
 Jeśli `unicode` nie zawiera znaków spoza US-ASCII zakresu znaków i nie znaków z zakresu znaków US-ASCII są niedozwolone, metoda zwraca `unicode` bez zmian.  
  
   
  
## Examples  
 W poniższym przykładzie użyto <xref:System.Globalization.IdnMapping.GetAscii%28System.String%29> metodę, aby przekonwertować tablicy międzynarodowych nazw domen na ciąg Punycode, która jest zakodowany odpowiednik, który składa się ze znaków w zakresie znaków US-ASCII. <xref:System.Globalization.IdnMapping.GetUnicode%28System.String%29> Metody następnie konwertuje nazwę domeny Punycode wrócić do oryginalnej nazwy domeny, ale zastępuje oryginalnego separatorów etykiety z separatorem standardowe etykiety.  
  
 [!code-csharp[System.Globalization.IdnMapping.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.idnmapping.class/cs/conversion1.cs#1)]
 [!code-vb[System.Globalization.IdnMapping.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.idnmapping.class/vb/conversion1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="unicode" /> jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="unicode" /> Nieprawidłowa opiera się na <see cref="P:System.Globalization.IdnMapping.AllowUnassigned" /> i <see cref="P:System.Globalization.IdnMapping.UseStd3AsciiRules" /> właściwości i IDNA standard.</exception>
        <block subset="none" type="usage">
          <para>W [!INCLUDE[net_v45](~/includes/net-v45-md.md)], <see cref="T:System.Globalization.IdnMapping" /> klasa obsługuje wersje standard IDNA, w zależności od systemu operacyjnego w użyciu:  
  
-   Uruchomienia [!INCLUDE[win8](~/includes/win8-md.md)], obsługuje on wersji 2008 standard IDNA otoczony [RFC 5891: międzynarodowych nazw domen aplikacji (IDNA): protokół](http://go.microsoft.com/fwlink/?LinkId=231875).  
  
-   Uruchomienie we wcześniejszych wersjach systemu operacyjnego Windows obsługuje wersja 2003 standard otoczony [RFC 3490: internacjonalizacji nazwy domen aplikacji (IDNA)](http://go.microsoft.com/fwlink/?LinkId=158110).  
  
 Zobacz [Unicode techniczne standardowe 46: przetwarzanie zgodności IDNA](http://go.microsoft.com/fwlink/?LinkId=232459) różnice w taki sposób, aby uzyskać te standardy obsługi określonego zestawów znaków.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="GetAscii">
      <MemberSignature Language="C#" Value="public string GetAscii (string unicode, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetAscii(string unicode, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.IdnMapping.GetAscii(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAscii (unicode As String, index As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetAscii(System::String ^ unicode, int index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Extensions</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="unicode" Type="System.String" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="unicode">Ciąg do przekonwertowania, która składa się z jedną lub więcej domeny nazwy etykiet rozdzielonych z separatorami etykiety.</param>
        <param name="index">Liczony od zera przesunięcie do <c>unicode</c> określający początek podciąg do konwersji. Kontynuuje operacji konwersji na końcu <c>unicode</c> ciągu.</param>
        <summary>Koduje podciąg etykiety nazwy domeny, które zawierają znaki Unicode spoza zakresu znaków US-ASCII. Podciąg jest konwertowana na ciąg zawiera znaki Unicode w zakresie znaków US-ASCII i zostanie sformatowany zgodnie ze standardu IDNA.</summary>
        <returns>Odpowiednik podciąg określony przez <paramref name="unicode" /> i <paramref name="index" /> parametry, składające się z zawiera znaki Unicode w US-ASCII znaku zakresu (U + 0020 do U + 007E) i sformatowanej zgodnie ze standardu IDNA.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `unicode` i `index` parametry definiują podciąg z przynajmniej jednej etykiety, które składają się z prawidłowych znaków Unicode. Etykiety są oddzielone separatorów etykiety. Pierwszy znak podciąg nie może zaczynać się separatorem etykiety, ale można dołączyć i opcjonalnie kończyć się separatorem. Separatory etykiety są kropka (002E okresu, U +), pełny IDEOGRAFICZNYCH Zatrzymaj (U + 3002), Zatrzymaj pełnej szerokości (U + FF0E) oraz o szerokości POŁÓWKOWEJ IDEOGRAFICZNYCH kropka (U + FF61). Na przykład nazwa domeny "www.adatum.com" składa się z etykiet, "www", "adatum" i "com", oddzielone kropkami.  
  
 Etykiety nie może zawierać żadnego z następujących znaków:  
  
-   Znaki kontrolne Unicode od 0001 U + U + 001F i U + 007F.  
  
-   Nieprzypisane znaków Unicode, w zależności od wartości <xref:System.Globalization.IdnMapping.AllowUnassigned%2A> właściwości.  
  
-   Znaki niestandardowe w US-ASCII znaku zakresu, takie jak miejsce (U + 0020), WYKRZYKNIK oznaczyć (U + 0021) i znaki małej wiersza (U + 005F), w zależności od wartości <xref:System.Globalization.IdnMapping.UseStd3AsciiRules%2A> właściwości.  
  
-   Znaki, które są zabronione przez określoną wersję IDNA standard. Aby uzyskać więcej informacji na temat niedozwolone znaki, zobacz [RFC 3454: przygotowanie międzynarodowych ciągi ("stringprep")](http://go.microsoft.com/fwlink/?LinkId=231873) 2003 IDNA i [5982 tylko RFC: kody znaków Unicode i międzynarodowych nazw domen dla Aplikacje](http://go.microsoft.com/fwlink/?LinkId=231877) IDNA 2008.  
  
 <xref:System.Globalization.IdnMapping.GetAscii%2A> Metoda konwertuje wszystkie separatorów etykiety kropka (002E okresu, U +).  
  
 Jeśli `unicode` nie zawiera znaków spoza US-ASCII zakresu znaków i nie znaków z zakresu znaków US-ASCII są niedozwolone, metoda zwraca `unicode` bez zmian.  
  
   
  
## Examples  
 Poniższy przykład umożliwia usunięcie lokalny i @-znak z adresu e-mail i przejścia nazw domeny wynikowy <xref:System.Globalization.IdnMapping.GetAscii%28System.String%2CSystem.Int32%29> metodę w celu utworzenia nazwy domeny ciąg Punycode, który jest zakodowany odpowiednikiem, która składa się ze znaków w US-ASCII zakres znaków. <xref:System.Globalization.IdnMapping.GetUnicode%28System.String%2CSystem.Int32%2CSystem.Int32%29> Metody następnie konwertuje nazwę domeny Punycode wrócić do oryginalnej nazwy domeny, ale zastępuje oryginalnego separatorów etykiety z separatorem standardowe etykiety.  
  
 [!code-csharp[System.Globalization.IdnMapping.GetAscii#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.idnmapping.getascii/cs/conversion1a.cs#2)]
 [!code-vb[System.Globalization.IdnMapping.GetAscii#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.idnmapping.getascii/vb/conversion1a.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="unicode" /> jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="index" /> jest mniejsza od zera.  
  
 —lub—  
  
 <paramref name="index" /> jest większa niż długość <paramref name="unicode" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="unicode" /> Nieprawidłowa opiera się na <see cref="P:System.Globalization.IdnMapping.AllowUnassigned" /> i <see cref="P:System.Globalization.IdnMapping.UseStd3AsciiRules" /> właściwości i IDNA standard.</exception>
        <block subset="none" type="usage">
          <para>W [!INCLUDE[net_v45](~/includes/net-v45-md.md)], <see cref="T:System.Globalization.IdnMapping" /> klasa obsługuje wersje standard IDNA, w zależności od systemu operacyjnego w użyciu:  
  
-   Uruchomienia [!INCLUDE[win8](~/includes/win8-md.md)], obsługuje on wersji 2008 standard IDNA otoczony [RFC 5891: międzynarodowych nazw domen aplikacji (IDNA): protokół](http://go.microsoft.com/fwlink/?LinkId=231875).  
  
-   Uruchomienie we wcześniejszych wersjach systemu operacyjnego Windows obsługuje wersja 2003 standard otoczony [RFC 3490: internacjonalizacji nazwy domen aplikacji (IDNA)](http://go.microsoft.com/fwlink/?LinkId=158110).  
  
 Zobacz [Unicode techniczne standardowe 46: przetwarzanie zgodności IDNA](http://go.microsoft.com/fwlink/?LinkId=232459) różnice w taki sposób, aby uzyskać te standardy obsługi określonego zestawów znaków.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="GetAscii">
      <MemberSignature Language="C#" Value="public string GetAscii (string unicode, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetAscii(string unicode, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.IdnMapping.GetAscii(System.String,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAscii (unicode As String, index As Integer, count As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetAscii(System::String ^ unicode, int index, int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Extensions</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="unicode" Type="System.String" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="unicode">Ciąg do przekonwertowania, która składa się z jedną lub więcej domeny nazwy etykiet rozdzielonych z separatorami etykiety.</param>
        <param name="index">Liczony od zera przesunięcie do <c>unicode</c> określający początek podciąg.</param>
        <param name="count">Liczba znaków, aby przekształcić podciągu, który rozpoczyna się od pozycji określonej przez <c>indeksu</c> w <c>unicode</c> ciągu.</param>
        <summary>Koduje określoną liczbę znaków w podciąg etykiety nazwy domeny, które zawierają znaki Unicode spoza zakresu znaków US-ASCII. Podciąg jest konwertowana na ciąg zawiera znaki Unicode w zakresie znaków US-ASCII i zostanie sformatowany zgodnie ze standardu IDNA.</summary>
        <returns>Odpowiednik podciąg określony przez <paramref name="unicode" />, <paramref name="index" />, i <paramref name="count" /> parametry, składające się z zawiera znaki Unicode w US-ASCII znaku zakresu (U + 0020 do U + 007E) i sformatowanej zgodnie ze standardu IDNA.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `Unicode`, `index`, I `count` parametry definiują podciąg z przynajmniej jednej etykiety, które składają się z prawidłowych znaków Unicode. Etykiety są oddzielone separatorów etykiety. Pierwszy znak podciąg nie może zaczynać się separatorem etykiety, ale można dołączyć i opcjonalnie kończyć się separatorem. Separatory etykiety są kropka (002E okresu, U +), pełny IDEOGRAFICZNYCH Zatrzymaj (U + 3002), Zatrzymaj pełnej szerokości (U + FF0E) oraz o szerokości POŁÓWKOWEJ IDEOGRAFICZNYCH kropka (U + FF61). Na przykład nazwa domeny "www.adatum.com" składa się z etykiet, "www", "adatum" i "com", oddzielone kropkami.  
  
 Etykiety nie może zawierać żadnego z następujących znaków:  
  
-   Znaki kontrolne Unicode od 0001 U + U + 001F i U + 007F.  
  
-   Nieprzypisane znaków Unicode, w zależności od wartości <xref:System.Globalization.IdnMapping.AllowUnassigned%2A> właściwości.  
  
-   Znaki niestandardowe w US-ASCII znaku zakresu, takie jak miejsce (U + 0020), WYKRZYKNIK oznaczyć (U + 0021) i znaki małej wiersza (U + 005F), w zależności od wartości <xref:System.Globalization.IdnMapping.UseStd3AsciiRules%2A> właściwości.  
  
-   Znaki, które są zabronione przez określoną wersję IDNA standard. Aby uzyskać więcej informacji na temat niedozwolone znaki, zobacz [RFC 3454: przygotowanie międzynarodowych ciągi ("stringprep")](http://go.microsoft.com/fwlink/?LinkId=231873) 2003 IDNA i [5982 tylko RFC: kody znaków Unicode i międzynarodowych nazw domen dla Aplikacje](http://go.microsoft.com/fwlink/?LinkId=231877) IDNA 2008.  
  
 <xref:System.Globalization.IdnMapping.GetAscii%2A> Metoda konwertuje wszystkie separatorów etykiety kropka (002E okresu, U +). Jeśli podciąg nie zawiera znaków spoza zakresu znaków US-ASCII, a żadne znaki z zakresu znaków US-ASCII są niedozwolone, metoda zwraca podciąg bez zmian.  
  
   
  
## Examples  
 W poniższym przykładzie użyto <xref:System.Globalization.IdnMapping.GetAscii%28System.String%2CSystem.Int32%2CSystem.Int32%29> do przekonwertowania na nazwę domeny, który jest zgodny ze standardem IDNA międzynarodowych nazw domen. <xref:System.Globalization.IdnMapping.GetUnicode%28System.String%2CSystem.Int32%2CSystem.Int32%29> Metody następnie konwertuje nazwę domeny standardowej wrócić do oryginalnej nazwy domeny, ale zastępuje oryginalnego separatorów etykiety z separatorem standardowe etykiety.  
  
 [!code-csharp[IdnMapping.GetX#1](~/samples/snippets/csharp/VS_Snippets_CLR/IdnMapping.GetX/CS/getx.cs#1)]
 [!code-vb[IdnMapping.GetX#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/IdnMapping.GetX/VB/getx.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="unicode" /> jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="index" /> lub <paramref name="count" /> jest mniejsza od zera.  
  
 —lub—  
  
 <paramref name="index" /> jest większa niż długość <paramref name="unicode" />.  
  
 —lub—  
  
 <paramref name="index" /> jest większa niż długość <paramref name="unicode" /> minus <paramref name="count" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="unicode" /> Nieprawidłowa opiera się na <see cref="P:System.Globalization.IdnMapping.AllowUnassigned" /> i <see cref="P:System.Globalization.IdnMapping.UseStd3AsciiRules" /> właściwości i IDNA standard.</exception>
        <block subset="none" type="usage">
          <para>W [!INCLUDE[net_v45](~/includes/net-v45-md.md)], <see cref="T:System.Globalization.IdnMapping" /> klasa obsługuje wersje standard IDNA, w zależności od systemu operacyjnego w użyciu:  
  
-   Uruchomienia [!INCLUDE[win8](~/includes/win8-md.md)], obsługuje on wersji 2008 standard IDNA otoczony [RFC 5891: międzynarodowych nazw domen aplikacji (IDNA): protokół](http://go.microsoft.com/fwlink/?LinkId=231875).  
  
-   Uruchomienie we wcześniejszych wersjach systemu operacyjnego Windows obsługuje wersja 2003 standard otoczony [RFC 3490: internacjonalizacji nazwy domen aplikacji (IDNA)](http://go.microsoft.com/fwlink/?LinkId=158110).  
  
 Zobacz [Unicode techniczne standardowe 46: przetwarzanie zgodności IDNA](http://go.microsoft.com/fwlink/?LinkId=232459) różnice w taki sposób, aby uzyskać te standardy obsługi określonego zestawów znaków.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.IdnMapping.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Extensions</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zwraca wartość skrótu dla tego <see cref="T:System.Globalization.IdnMapping" /> obiektu.</summary>
        <returns>Jedną z czterech 32-bitowej podpisanej pochodzi od właściwości <see cref="T:System.Globalization.IdnMapping" /> obiektu.  Wartość zwrotna nie ma specjalnego znaczenia i nie nadaje się do użycia w algorytmu wyznaczania wartości skrótu kodu.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zastąpienie <xref:System.Globalization.IdnMapping.GetHashCode%2A> metodę, jeśli aplikacja musi implementować algorytmu mieszania znaczący kodu.  
  
   
  
## Examples  
 W poniższym przykładzie założono, że jeden ciąg może zawierać wielu adresów e-mail, rozdzielając je spacjami. Usuwa lokalny i @-znak z każdej adres e-mail i przejścia nazw domeny wynikowy <xref:System.Globalization.IdnMapping.GetAscii%28System.String%2CSystem.Int32%29> lub <xref:System.Globalization.IdnMapping.GetAscii%28System.String%2CSystem.Int32%2CSystem.Int32%29> metodę w celu utworzenia nazwy domeny Punycode. <xref:System.Globalization.IdnMapping.GetUnicode%28System.String%2CSystem.Int32%2CSystem.Int32%29> Metoda następnie konwertuje nazwy domeny Punycode wrócić do oryginalnej nazwy domeny.  
  
 [!code-csharp[System.Globalization.IdnMapping.GetAscii#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.idnmapping.getascii/cs/conversion1b.cs#3)]
 [!code-vb[System.Globalization.IdnMapping.GetAscii#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.idnmapping.getascii/vb/conversion1b.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetUnicode">
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Extensions</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Dekoduje etykiety nazw co najmniej jeden domeny zakodowane ze standardem IDNA na ciąg znaków Unicode.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetUnicode">
      <MemberSignature Language="C#" Value="public string GetUnicode (string ascii);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetUnicode(string ascii) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.IdnMapping.GetUnicode(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetUnicode (ascii As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetUnicode(System::String ^ ascii);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Extensions</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ascii" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="ascii">Ciąg dekodowania, która składa się z co najmniej jeden etykiet w zakresie znaków US-ASCII (U + 0020 do U + 007E) zakodowany ze standardem IDNA.</param>
        <summary>Dekoduje ciąg co najmniej jeden etykiety nazwy domeny, zakodowany ze standardem IDNA, na ciąg znaków Unicode.</summary>
        <returns>Kod Unicode podciąg IDNA określony przez <paramref name="ascii" /> parametru.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby uzyskać więcej informacji o nazwy domen, etykiety i separatorów etykiety, zobacz uwagi dla <xref:System.Globalization.IdnMapping.GetAscii%28System.String%2CSystem.Int32%2CSystem.Int32%29?displayProperty=nameWithType> metody.  
  
   
  
## Examples  
 W poniższym przykładzie użyto <xref:System.Globalization.IdnMapping.GetAscii%28System.String%29> metodę, aby przekonwertować tablicy międzynarodowych nazw domen na ciąg Punycode. <xref:System.Globalization.IdnMapping.GetUnicode%28System.String%29> Metody następnie konwertuje nazwę domeny Punycode wrócić do oryginalnej nazwy domeny, ale zastępuje oryginalnego separatorów etykiety z separatorem standardowe etykiety.  
  
 [!code-csharp[System.Globalization.IdnMapping.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.idnmapping.class/cs/conversion1.cs#1)]
 [!code-vb[System.Globalization.IdnMapping.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.idnmapping.class/vb/conversion1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="ascii" /> jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="ascii" /> Nieprawidłowa opiera się na <see cref="P:System.Globalization.IdnMapping.AllowUnassigned" /> i <see cref="P:System.Globalization.IdnMapping.UseStd3AsciiRules" /> właściwości i IDNA standard.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetUnicode">
      <MemberSignature Language="C#" Value="public string GetUnicode (string ascii, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetUnicode(string ascii, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.IdnMapping.GetUnicode(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetUnicode (ascii As String, index As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetUnicode(System::String ^ ascii, int index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Extensions</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ascii" Type="System.String" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ascii">Ciąg dekodowania, która składa się z co najmniej jeden etykiet w zakresie znaków US-ASCII (U + 0020 do U + 007E) zakodowany ze standardem IDNA.</param>
        <param name="index">Liczony od zera przesunięcie do <c>ascii</c> określający początek podciąg do zdekodowania. Operacja dekodowania będzie nadal występować na końcu <c>ascii</c> ciągu.</param>
        <summary>Dekoduje podciąg co najmniej jeden etykiety nazwy domeny, zakodowany ze standardem IDNA, na ciąg znaków Unicode.</summary>
        <returns>Kod Unicode podciąg IDNA określony przez <paramref name="ascii" /> i <paramref name="index" /> parametrów.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby uzyskać więcej informacji o nazwy domen, etykiety i separatorów etykiety, zobacz uwagi dla <xref:System.Globalization.IdnMapping.GetAscii%28System.String%2CSystem.Int32%2CSystem.Int32%29?displayProperty=nameWithType> metody.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="ascii" /> jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="index" /> jest mniejsza od zera.  
  
 —lub—  
  
 <paramref name="index" /> jest większa niż długość <paramref name="ascii" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="ascii" /> Nieprawidłowa opiera się na <see cref="P:System.Globalization.IdnMapping.AllowUnassigned" /> i <see cref="P:System.Globalization.IdnMapping.UseStd3AsciiRules" /> właściwości i IDNA standard.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetUnicode">
      <MemberSignature Language="C#" Value="public string GetUnicode (string ascii, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetUnicode(string ascii, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.IdnMapping.GetUnicode(System.String,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetUnicode (ascii As String, index As Integer, count As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetUnicode(System::String ^ ascii, int index, int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Extensions</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ascii" Type="System.String" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ascii">Ciąg dekodowania, która składa się z co najmniej jeden etykiet w zakresie znaków US-ASCII (U + 0020 do U + 007E) zakodowany ze standardem IDNA.</param>
        <param name="index">Liczony od zera przesunięcie do <c>ascii</c> określający początek podciąg.</param>
        <param name="count">Liczba znaków, aby przekształcić podciągu, który rozpoczyna się od pozycji określonej przez <c>indeksu</c> w <c>ascii</c> ciągu.</param>
        <summary>Dekoduje podciąg o określonej długości, która zawiera co najmniej jeden etykiety nazwy domeny, zakodowany ze standardem IDNA, na ciąg znaków Unicode.</summary>
        <returns>Kod Unicode podciąg IDNA określony przez <paramref name="ascii" />, <paramref name="index" />, i <paramref name="count" /> parametrów.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby uzyskać więcej informacji o nazwy domen, etykiety i separatorów etykiety, zobacz uwagi dla <xref:System.Globalization.IdnMapping.GetAscii%28System.String%2CSystem.Int32%2CSystem.Int32%29?displayProperty=nameWithType> metody.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="ascii" /> jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="index" /> lub <paramref name="count" /> jest mniejsza od zera.  
  
 —lub—  
  
 <paramref name="index" /> jest większa niż długość <paramref name="ascii" />.  
  
 —lub—  
  
 <paramref name="index" /> jest większa niż długość <paramref name="ascii" /> minus <paramref name="count" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="ascii" /> Nieprawidłowa opiera się na <see cref="P:System.Globalization.IdnMapping.AllowUnassigned" /> i <see cref="P:System.Globalization.IdnMapping.UseStd3AsciiRules" /> właściwości i IDNA standard.</exception>
      </Docs>
    </Member>
    <Member MemberName="UseStd3AsciiRules">
      <MemberSignature Language="C#" Value="public bool UseStd3AsciiRules { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseStd3AsciiRules" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.IdnMapping.UseStd3AsciiRules" />
      <MemberSignature Language="VB.NET" Value="Public Property UseStd3AsciiRules As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseStd3AsciiRules { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Extensions</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy standard lub swobodna konwencje nazewnictwa są używane w operacjach wykonywanych przez członków bieżącej <see cref="T:System.Globalization.IdnMapping" /> obiektu.</summary>
        <value>
          <see langword="true" /> Jeśli standardowej konwencji nazewnictwa są używane podczas wykonywania operacji; w przeciwnym razie <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Nazwy domen, które należy wykonać standardowe reguły nazewnictwa składają się z konkretnego podzestawu znaków z zakresu znaków US-ASCII. Znaki to litery od A do Z, cyfr od 0 do 9, łącznik (-) znaków (U + 002D) i znak kropki (.). Wielkość liter nie ma znaczenia. Konwencje nazewnictwa swobodna zezwala na używanie szerszego zakresu ASCII znaków, w tym obszarze znaków (U + 0020), wykrzyknik znaków (U + 0021) i górnych znaków (U + 005F). Jeśli <xref:System.Globalization.IdnMapping.UseStd3AsciiRules%2A> jest `true`, tylko standardowe znaki mogą być wyświetlane w etykiecie zwrócony przez <xref:System.Globalization.IdnMapping.GetAscii%2A> metody.  
  
 Domyślnie wartość <xref:System.Globalization.IdnMapping.UseStd3AsciiRules%2A> właściwość jest `false`, i rozszerzonej podzbiór znaków ASCII jest dozwolone w etykiecie.  
  
> [!NOTE]
>  <xref:System.Globalization.IdnMapping> Klasy uniemożliwia użycie znaków nondisplayable U + 0000 za pośrednictwem U + 001F i U + 007F w nazwie domeny etykiet bez względu na ustawienie <xref:System.Globalization.IdnMapping.UseStd3AsciiRules%2A> właściwości. Ten zakaz zmniejsza ryzyko ataków zabezpieczeń, jak podszywanie się nazwę.  
  
   
  
## Examples  
 W poniższym przykładzie generuje adresów URL zawierających znaki zakresu ASCII z 0000 U + U + 007F i przekazuje je do <xref:System.Globalization.IdnMapping.GetAscii%28System.String%29> metody dwóch <xref:System.Globalization.IdnMapping> obiektów. Jeden obiekt jego <xref:System.Globalization.IdnMapping.UseStd3AsciiRules%2A> ustawioną właściwość `true`, a drugi obiekt ma ustawioną `false`. Dane wyjściowe zawiera znaki, które nie są prawidłowe, podczas obliczania <xref:System.Globalization.IdnMapping.UseStd3AsciiRules%2A> właściwość jest `true` ale prawidłowa, gdy jest `false`.  
  
 [!code-csharp[System.Globalization.IdnMapping.UseStd3AsciiRules#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.idnmapping.usestd3asciirules/cs/usestd3asciirules1.cs#1)]
 [!code-vb[System.Globalization.IdnMapping.UseStd3AsciiRules#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.idnmapping.usestd3asciirules/vb/usestd3asciirules1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>