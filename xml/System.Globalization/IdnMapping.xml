<Type Name="IdnMapping" FullName="System.Globalization.IdnMapping">
  <Metadata><Meta Name="ms.openlocfilehash" Value="ed62e8499764dd5b075b00bc015a4b6e1563ef14" /><Meta Name="ms.sourcegitcommit" Value="9e06b87bcfa4347dbbaaa4b3cc36b43b93b5badb" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="11/20/2018" /><Meta Name="ms.locfileid" Value="52193519" /></Metadata><TypeSignature Language="C#" Value="public sealed class IdnMapping" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit IdnMapping extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Globalization.IdnMapping" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class IdnMapping" />
  <TypeSignature Language="C++ CLI" Value="public ref class IdnMapping sealed" />
  <TypeSignature Language="F#" Value="type IdnMapping = class" />
  <AssemblyInfo>
    <AssemblyName>System.Globalization.Extensions</AssemblyName>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Obsługuje znaki spoza zestawu ASCII dla nazwy domen internetowych. Klasa ta nie może być dziedziczona.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Nazwy domeny internetowej składa się z jednej lub kilku części o nazwie etykiety nazw domen, rozdzielonych separatorami etykiety. Na przykład nazwa domeny "www.proseware.com" składa się z etykiet, "www", "tor" i "com", oddzielone kropkami. Domeny standardowej nazwy składają się z zakresu znaków US-ASCII (lub Łaciński podstawowy), od U + 0021 do U + 007E wyznaczonym znaków. Ułatwiają użycie Internet kultur, które nie korzystają z zestawu znaków US-ASCII, z nazwami domen aplikacji (IDNA) Internationalizing standard zostało przyjęte w 2003 w celu stworzeniem znaków Unicode spoza zakresu znaków US-ASCII. Jednak serwery nazw i rozpoznawanie nazw domeny nadal zależą od znaki w obrębie zakresu znaków US-ASCII.  
  
 Mechanizm IDNA używa Punycode do mapowania międzynarodowych nazw domen zawierających znaki Unicode spoza zakresu znaków US-ASCII do zakresu znaków US-ASCII, które są obsługiwane przez system nazw domen. Mechanizm IDNA jest używana do konwersji tylko nazwy domeny, a nie dane przesyłane za pośrednictwem Internetu.  
  
> [!IMPORTANT]
>  W [!INCLUDE[net_v45](~/includes/net-v45-md.md)], <xref:System.Globalization.IdnMapping> klasa obsługuje różne wersje standard IDNA, w zależności od systemu operacyjnego w użyciu:  
>   
>  -   Kiedy uruchomiona na [!INCLUDE[win8](~/includes/win8-md.md)], obsługuje on wersji 2008 standardu IDNA opisane przez [RFC 5891: międzynarodowych nazw domen aplikacji (IDNA): protokół](https://go.microsoft.com/fwlink/?LinkId=231875).  
> -   Po uruchomieniu we wcześniejszych wersjach systemu operacyjnego Windows, wersja 2003 standard opisane przez obsługuje [RFC 3490: Internationalizing nazw domen aplikacji (IDNA)](https://go.microsoft.com/fwlink/?LinkId=158110).  
>   
>  Zobacz [Unicode techniczne standardowa 46: przetwarzanie zgodności IDNA](https://go.microsoft.com/fwlink/?LinkId=232459) różnice w sposobie wzorce obsługi określonych zestawów znaków.  
  
 <xref:System.Globalization.IdnMapping.GetAscii%2A?displayProperty=nameWithType> Metoda normalizuje nazwę domeny, konwertuje znormalizowaną nazwę na reprezentację w postaci, który składa się z zawiera znaki Unicode w zakresie punkt kodu US-ASCII (U + 0020 do U + 007E) i dołącza prefiks ASCII zgodnego kodowania (ACE) (" Xn--") do każdej etykiety. <xref:System.Globalization.IdnMapping.GetUnicode%2A?displayProperty=nameWithType> Metoda przywraca etykiety nazw domen, które są konwertowane przy <xref:System.Globalization.IdnMapping.GetAscii%2A> metody.  
  
 Jeśli ciąg do konwersji zawiera separator etykiet znaków IDEOGRAFICZNYCH KROPKĄ (U + 3002), o KROPKĄ (U + FF0E), a także o szerokości POŁÓWKOWEJ IDEOGRAFICZNYCH KROPKĄ (U + FF61) <xref:System.Globalization.IdnMapping.GetAscii%2A> metody powoduje ich konwersję do separator etykiet KROPKĄ (okres, U + 002E). <xref:System.Globalization.IdnMapping.GetUnicode%2A> Metody, jednak nie powoduje przywrócenia oryginalnego znak separatora etykiety.  
  
   
  
## Examples  
 W poniższym przykładzie użyto <xref:System.Globalization.IdnMapping.GetAscii%28System.String%2CSystem.Int32%2CSystem.Int32%29> metodę, aby przekonwertować tablicę zinternacjonalizowanych nazw domen na ciąg Punycode. <xref:System.Globalization.IdnMapping.GetUnicode%2A> Metoda następnie konwertuje nazwę domeny Punycode oryginalna nazwa domeny, ale zastępuje oryginalny separatory etykiety separator etykiet standardowych.  
  
 [!code-csharp[System.Globalization.IdnMapping.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.idnmapping.class/cs/conversion1.cs#1)]
 [!code-vb[System.Globalization.IdnMapping.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.idnmapping.class/vb/conversion1.vb#1)]  
  
 ]]></format>
    </remarks>
    <threadsafe>Wszystkie metody publiczne <see cref="T:System.Globalization.IdnMapping" /> są odporne na wątki i mogą być używane jednocześnie z wielu wątków, tak długo, jak <see cref="T:System.Globalization.IdnMapping" /> właściwości wystąpienia nie są również ustawione jednocześnie.</threadsafe>
    <altmember cref="Overload:System.String.Normalize" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public IdnMapping ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.IdnMapping.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IdnMapping();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Extensions</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Globalization.IdnMapping" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Globalization.IdnMapping.AllowUnassigned%2A?displayProperty=nameWithType> i <xref:System.Globalization.IdnMapping.UseStd3AsciiRules%2A?displayProperty=nameWithType> właściwości są inicjowane na wartość `false`. Mały podzbiór ASCII znaki inne niż A-Z, 0-9, łącznik (-) znak (U + 002D), a znak kropki (.) są dozwolone w nazwach domen, ale nieprzypisane punkty kodowe Unicode nie są.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowUnassigned">
      <MemberSignature Language="C#" Value="public bool AllowUnassigned { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowUnassigned" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.IdnMapping.AllowUnassigned" />
      <MemberSignature Language="VB.NET" Value="Public Property AllowUnassigned As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowUnassigned { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AllowUnassigned : bool with get, set" Usage="System.Globalization.IdnMapping.AllowUnassigned" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Extensions</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy nieprzypisane punkty kodowe Unicode są używane w operacji wykonywanych przez członków bieżącej <see cref="T:System.Globalization.IdnMapping" /> obiektu.</summary>
        <value><see langword="true" /> Jeśli używane są punkty kodowe nieprzypisane w działalności. w przeciwnym razie <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zarejestrowaną nazwę domeny nie może zawierać punkty kodowe nieprzypisane. W związku z tym, wartością domyślną <xref:System.Globalization.IdnMapping.AllowUnassigned%2A> właściwość `false`. Specyfikacja IDNA zezwala na punkty kodowe nieprzypisane tylko w kwerendach dla dopasowywanie ciągów (oznacza to, w wyszukiwaniu nazw domen). Aby uzyskać więcej informacji na temat użycia punkty kodowe nieprzypisane w nazwach domen, zobacz [RFC 3454, "Przygotowania Internationalized ciągów (stringprep)"](https://go.microsoft.com/fwlink/?LinkId=231873) i [RFC 5891, "Internationalized nazw domen w aplikacji () IDNA): Protokół "](https://go.microsoft.com/fwlink/?LinkId=231875).  
  
> [!IMPORTANT]
>  Jeśli <xref:System.Globalization.IdnMapping.AllowUnassigned%2A> właściwość `false`, zachowania związanego z właściwością zależy od zasadniczego systemu operacyjnego. Na [!INCLUDE[win8](~/includes/win8-md.md)], <xref:System.Globalization.IdnMapping> klasy jest zgodny z IDNA 2008, który jest oparty na standardzie Unicode 6.0. W poprzednich wersjach systemu Windows <xref:System.Globalization.IdnMapping> klasy opiera się na IDNA 2003, która jest oparta na Unicode 3. *x*. Niektóre punkty kodu, które były nieprzypisane 2003 IDNA przypisano znaków i są obsługiwane w IDNA 2008. Na przykład U + 0221 została wprowadzona w Unicode 4.0. Na [!INCLUDE[win8](~/includes/win8-md.md)], jest zakodowane jako "xn — 6la". W poprzednich wersjach systemu Windows, wyniku weryfikacji zgłasza wyjątek <xref:System.ArgumentException> wyjątku.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.IdnMapping.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="idnMapping.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Extensions</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">Obiekt do porównania z bieżącym obiektem.</param>
        <summary>Wskazuje, czy określony obiekt i bieżący <see cref="T:System.Globalization.IdnMapping" /> obiekt są równe.</summary>
        <returns><see langword="true" /> Jeśli obiekt określony przez <paramref name="obj" /> parametru jest tworzony na podstawie <see cref="T:System.Globalization.IdnMapping" /> i jego <see cref="P:System.Globalization.IdnMapping.AllowUnassigned" /> i <see cref="P:System.Globalization.IdnMapping.UseStd3AsciiRules" /> właściwości są równe; w przeciwnym razie <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetAscii">
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Extensions</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Koduje ciąg etykiety nazw domen, które zawierają znaki Unicode spoza zakresu znaków US-ASCII na ciąg zawiera znaki Unicode z zakresu znaków US-ASCII (U + 0020 do U + 007E). Ten ciąg jest formatowana zgodnie z IDNA standardowych.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetAscii">
      <MemberSignature Language="C#" Value="public string GetAscii (string unicode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetAscii(string unicode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.IdnMapping.GetAscii(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAscii (unicode As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetAscii(System::String ^ unicode);" />
      <MemberSignature Language="F#" Value="member this.GetAscii : string -&gt; string" Usage="idnMapping.GetAscii unicode" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Extensions</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="unicode" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="unicode">Ciąg do konwersji, która składa się z etykiety nazw jeden lub więcej domen rozdzielonych z separatorami etykiety.</param>
        <summary>Koduje ciąg etykiety nazw domen, które zawierają znaki Unicode na ciąg zawiera znaki Unicode z zakresu znaków US-ASCII. Ten ciąg jest formatowana zgodnie z IDNA standardowych.</summary>
        <returns>Odpowiednik w ciągu określonego przez <paramref name="unicode" /> parametru, składający się z zawiera znaki Unicode w US-ASCII (U + 0020 do U + 007E) zakres znaków i formatowana zgodnie ze standardem IDNA.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `unicode` Parametr określa ciąg jedną lub więcej etykiet, które składają się z prawidłowych znaków Unicode. Etykiety są oddzielone separatory etykiety. `unicode` Parametru nie może rozpoczynać się od separator etykiet, ale można dołączyć i opcjonalnie kończyć się znakiem separatora. Separatory etykiety są KROPKĄ (002E okresu, U +), pełny IDEOGRAFICZNYCH Zatrzymaj (U + 3002), o KROPKĄ (U + FF0E), a także o szerokości POŁÓWKOWEJ IDEOGRAFICZNYCH KROPKĄ (U + FF61). Na przykład nazwa domeny "www.adatum.com" składa się z etykiet, "www", "adatum" i "com", oddzielone kropkami.  
  
 Etykiety nie może zawierać żadnego z następujących znaków:  
  
-   Znaki kontrolne Unicode z 0001 U + poprzez U + 001F i U + 007F.  
  
-   Nieprzypisane znaków Unicode, jeśli wartość <xref:System.Globalization.IdnMapping.AllowUnassigned%2A> właściwość `false`.  
  
-   Zakres, takie jak miejsce znaków niestandardowych znaków US-ASCII (U + 0020), WYKRZYKNIKA oznaczyć (U + 0021), i małe znaki wiersza (U + 005F), jeśli wartość <xref:System.Globalization.IdnMapping.UseStd3AsciiRules%2A> właściwość jest `true`.  
  
-   Znaki, które są zabronione przez określoną wersję IDNA standard. Aby uzyskać więcej informacji na temat niedozwolonych znaków, zobacz [RFC 3454: przygotowanie międzynarodowych ciągi ("stringprep")](https://go.microsoft.com/fwlink/?LinkId=231873) 2003 IDNA i [5982 tylko RFC: punkty kodowe Unicode i międzynarodowych nazw domen dla Aplikacje](https://go.microsoft.com/fwlink/?LinkId=231877) IDNA 2008.  
  
 <xref:System.Globalization.IdnMapping.GetAscii%2A> Metoda konwertuje wszystkie separatorach etykiet KROPKĄ (002E okresu, U +).  
  
 Jeśli `unicode` nie zawiera żadnych znaków spoza US-ASCII otrzymują zakres znaków i nie znaki w obrębie zakresu znaków US-ASCII, metoda zwraca `unicode` bez zmian.  
  
   
  
## Examples  
 W poniższym przykładzie użyto <xref:System.Globalization.IdnMapping.GetAscii%28System.String%29> metodę, aby przekonwertować tablicę międzynarodowych nazw domen na ciąg Punycode, co jest równoważne zakodowany, który składa się ze znaków z zakresu znaków US-ASCII. <xref:System.Globalization.IdnMapping.GetUnicode%28System.String%29> Metoda następnie konwertuje nazwę domeny Punycode do oryginalnej nazwy domeny, ale zastępuje oryginalny separatory etykiety separator etykiet standardowych.  
  
 [!code-csharp[System.Globalization.IdnMapping.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.idnmapping.class/cs/conversion1.cs#1)]
 [!code-vb[System.Globalization.IdnMapping.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.idnmapping.class/vb/conversion1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="unicode" /> jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="unicode" /> Nieprawidłowa opiera się na <see cref="P:System.Globalization.IdnMapping.AllowUnassigned" /> i <see cref="P:System.Globalization.IdnMapping.UseStd3AsciiRules" /> właściwości i IDNA standard.</exception>
        <block subset="none" type="usage"><para>W [!INCLUDE[net_v45](~/includes/net-v45-md.md)], <see cref="T:System.Globalization.IdnMapping" /> klasa obsługuje różne wersje standard IDNA, w zależności od systemu operacyjnego w użyciu: 
— W przypadku uruchamiania [!INCLUDE[win8](~/includes/win8-md.md)], obsługuje on wersji 2008 standardu IDNA opisane przez [RFC 5891: międzynarodowych nazw domen aplikacji (IDNA): protokół](https://go.microsoft.com/fwlink/?LinkId=231875).  
  
-Uruchamiania we wcześniejszych wersjach systemu operacyjnego Windows, wersja 2003 standard opisane przez obsługuje [RFC 3490: Internationalizing nazw domen aplikacji (IDNA)](https://go.microsoft.com/fwlink/?LinkId=158110).  
  
Zobacz [Unicode techniczne standardowa 46: przetwarzanie zgodności IDNA](https://go.microsoft.com/fwlink/?LinkId=232459) różnice w sposobie wzorce obsługi określonych zestawów znaków.</para></block>
      </Docs>
    </Member>
    <Member MemberName="GetAscii">
      <MemberSignature Language="C#" Value="public string GetAscii (string unicode, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetAscii(string unicode, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.IdnMapping.GetAscii(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAscii (unicode As String, index As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetAscii(System::String ^ unicode, int index);" />
      <MemberSignature Language="F#" Value="member this.GetAscii : string * int -&gt; string" Usage="idnMapping.GetAscii (unicode, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Extensions</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="unicode" Type="System.String" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="unicode">Ciąg do konwersji, która składa się z etykiety nazw jeden lub więcej domen rozdzielonych z separatorami etykiety.</param>
        <param name="index">Liczony od zera przesunięcie <paramref name="unicode" /> , który określa początek podciągu do przekonwertowania. Operacja konwersji kontynuuje do końca <paramref name="unicode" /> ciągu.</param>
        <summary>Koduje podciągiem etykiety nazw domen, które zawierają znaki Unicode spoza zakresu znaków US-ASCII. Podciąg jest konwertowana na ciąg zawiera znaki Unicode z zakresu znaków US-ASCII, a także jest formatowana zgodnie ze standardem IDNA.</summary>
        <returns>Wielokrotność podciąg, określony przez <paramref name="unicode" /> i <paramref name="index" /> parametrów, składający się z zawiera znaki Unicode w US-ASCII (U + 0020 do U + 007E) zakres znaków i formatowana zgodnie ze standardem IDNA.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `unicode` i `index` parametry definiują podciąg z jedną lub więcej etykiet, które składają się z prawidłowych znaków Unicode. Etykiety są oddzielone separatory etykiety. Pierwszy znak podciąg nie może rozpoczynać się od separator etykiet, ale można dołączyć i opcjonalnie kończyć się znakiem separatora. Separatory etykiety są KROPKĄ (002E okresu, U +), pełny IDEOGRAFICZNYCH Zatrzymaj (U + 3002), o KROPKĄ (U + FF0E), a także o szerokości POŁÓWKOWEJ IDEOGRAFICZNYCH KROPKĄ (U + FF61). Na przykład nazwa domeny "www.adatum.com" składa się z etykiet, "www", "adatum" i "com", oddzielone kropkami.  
  
 Etykiety nie może zawierać żadnego z następujących znaków:  
  
-   Znaki kontrolne Unicode z 0001 U + poprzez U + 001F i U + 007F.  
  
-   Nieprzypisane znaków Unicode, w zależności od wartości <xref:System.Globalization.IdnMapping.AllowUnassigned%2A> właściwości.  
  
-   Niestandardowe znaków US-ASCII znaku zakresu, na przykład miejsca (U + 0020), WYKRZYKNIKA oznaczyć (U + 0021) i znaki niski wiersza (U + 005F), w zależności od wartości <xref:System.Globalization.IdnMapping.UseStd3AsciiRules%2A> właściwości.  
  
-   Znaki, które są zabronione przez określoną wersję IDNA standard. Aby uzyskać więcej informacji na temat niedozwolonych znaków, zobacz [RFC 3454: przygotowanie międzynarodowych ciągi ("stringprep")](https://go.microsoft.com/fwlink/?LinkId=231873) 2003 IDNA i [5982 tylko RFC: punkty kodowe Unicode i międzynarodowych nazw domen dla Aplikacje](https://go.microsoft.com/fwlink/?LinkId=231877) IDNA 2008.  
  
 <xref:System.Globalization.IdnMapping.GetAscii%2A> Metoda konwertuje wszystkie separatorach etykiet KROPKĄ (002E okresu, U +).  
  
 Jeśli `unicode` nie zawiera żadnych znaków spoza US-ASCII otrzymują zakres znaków i nie znaki w obrębie zakresu znaków US-ASCII, metoda zwraca `unicode` bez zmian.  
  
   
  
## Examples  
 Poniższy przykład usuwa lokalny i @ znak z adresu e-mail i przekazuje nazwę domeny wynikowy <xref:System.Globalization.IdnMapping.GetAscii%28System.String%2CSystem.Int32%29> metodę, aby utworzyć nazwę domeny Punycode, który jest odpowiednikiem zakodowany, który składa się z znaków US-ASCII zakres znaków. <xref:System.Globalization.IdnMapping.GetUnicode%28System.String%2CSystem.Int32%2CSystem.Int32%29> Metoda następnie konwertuje nazwę domeny Punycode do oryginalnej nazwy domeny, ale zastępuje oryginalny separatory etykiety separator etykiet standardowych.  
  
 [!code-csharp[System.Globalization.IdnMapping.GetAscii#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.idnmapping.getascii/cs/conversion1a.cs#2)]
 [!code-vb[System.Globalization.IdnMapping.GetAscii#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.idnmapping.getascii/vb/conversion1a.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="unicode" /> jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="index" /> jest mniejsza niż zero.  
  
—lub— 
 <paramref name="index" /> jest większa niż długość <paramref name="unicode" />.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="unicode" /> Nieprawidłowa opiera się na <see cref="P:System.Globalization.IdnMapping.AllowUnassigned" /> i <see cref="P:System.Globalization.IdnMapping.UseStd3AsciiRules" /> właściwości i IDNA standard.</exception>
        <block subset="none" type="usage"><para>W [!INCLUDE[net_v45](~/includes/net-v45-md.md)], <see cref="T:System.Globalization.IdnMapping" /> klasa obsługuje różne wersje standard IDNA, w zależności od systemu operacyjnego w użyciu: 
— W przypadku uruchamiania [!INCLUDE[win8](~/includes/win8-md.md)], obsługuje on wersji 2008 standardu IDNA opisane przez [RFC 5891: międzynarodowych nazw domen aplikacji (IDNA): protokół](https://go.microsoft.com/fwlink/?LinkId=231875).  
  
-Uruchamiania we wcześniejszych wersjach systemu operacyjnego Windows, wersja 2003 standard opisane przez obsługuje [RFC 3490: Internationalizing nazw domen aplikacji (IDNA)](https://go.microsoft.com/fwlink/?LinkId=158110).  
  
Zobacz [Unicode techniczne standardowa 46: przetwarzanie zgodności IDNA](https://go.microsoft.com/fwlink/?LinkId=232459) różnice w sposobie wzorce obsługi określonych zestawów znaków.</para></block>
      </Docs>
    </Member>
    <Member MemberName="GetAscii">
      <MemberSignature Language="C#" Value="public string GetAscii (string unicode, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetAscii(string unicode, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.IdnMapping.GetAscii(System.String,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAscii (unicode As String, index As Integer, count As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetAscii(System::String ^ unicode, int index, int count);" />
      <MemberSignature Language="F#" Value="member this.GetAscii : string * int * int -&gt; string" Usage="idnMapping.GetAscii (unicode, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Extensions</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="unicode" Type="System.String" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="unicode">Ciąg do konwersji, która składa się z etykiety nazw jeden lub więcej domen rozdzielonych z separatorami etykiety.</param>
        <param name="index">Liczony od zera przesunięcie <paramref name="unicode" /> , który określa początek podciągu.</param>
        <param name="count">Liczba znaków do przekonwertowania w podciągu, który rozpoczyna się od pozycji określonej przez <paramref name="index" /> w <paramref name="unicode" /> ciągu.</param>
        <summary>Koduje określoną liczbę znaków w podciągu etykiety nazw domen, które zawierają znaki Unicode spoza zakresu znaków US-ASCII. Podciąg jest konwertowana na ciąg zawiera znaki Unicode z zakresu znaków US-ASCII, a także jest formatowana zgodnie ze standardem IDNA.</summary>
        <returns>Wielokrotność podciąg, określony przez <paramref name="unicode" />, <paramref name="index" />, i <paramref name="count" /> parametrów, składający się z zawiera znaki Unicode w US-ASCII (U + 0020 do U + 007E) zakres znaków i formatowana zgodnie ze standardem IDNA.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `Unicode`, `index`, I `count` parametry definiują podciąg z jedną lub więcej etykiet, które składają się z prawidłowych znaków Unicode. Etykiety są oddzielone separatory etykiety. Pierwszy znak podciąg nie może rozpoczynać się od separator etykiet, ale można dołączyć i opcjonalnie kończyć się znakiem separatora. Separatory etykiety są KROPKĄ (002E okresu, U +), pełny IDEOGRAFICZNYCH Zatrzymaj (U + 3002), o KROPKĄ (U + FF0E), a także o szerokości POŁÓWKOWEJ IDEOGRAFICZNYCH KROPKĄ (U + FF61). Na przykład nazwa domeny "www.adatum.com" składa się z etykiet, "www", "adatum" i "com", oddzielone kropkami.  
  
 Etykiety nie może zawierać żadnego z następujących znaków:  
  
-   Znaki kontrolne Unicode z 0001 U + poprzez U + 001F i U + 007F.  
  
-   Nieprzypisane znaków Unicode, w zależności od wartości <xref:System.Globalization.IdnMapping.AllowUnassigned%2A> właściwości.  
  
-   Niestandardowe znaków US-ASCII znaku zakresu, na przykład miejsca (U + 0020), WYKRZYKNIKA oznaczyć (U + 0021) i znaki niski wiersza (U + 005F), w zależności od wartości <xref:System.Globalization.IdnMapping.UseStd3AsciiRules%2A> właściwości.  
  
-   Znaki, które są zabronione przez określoną wersję IDNA standard. Aby uzyskać więcej informacji na temat niedozwolonych znaków, zobacz [RFC 3454: przygotowanie międzynarodowych ciągi ("stringprep")](https://go.microsoft.com/fwlink/?LinkId=231873) 2003 IDNA i [5982 tylko RFC: punkty kodowe Unicode i międzynarodowych nazw domen dla Aplikacje](https://go.microsoft.com/fwlink/?LinkId=231877) IDNA 2008.  
  
 <xref:System.Globalization.IdnMapping.GetAscii%2A> Metoda konwertuje wszystkie separatorach etykiet KROPKĄ (002E okresu, U +). Jeśli podciąg nie zawiera żadnych znaków spoza zakresu znaków US-ASCII i otrzymują żadnych znaków w ramach zakresu znaków US-ASCII, metoda zwraca podciąg bez zmian.  
  
   
  
## Examples  
 W poniższym przykładzie użyto <xref:System.Globalization.IdnMapping.GetAscii%28System.String%2CSystem.Int32%2CSystem.Int32%29> metodę, aby przekonwertować międzynarodowych nazw domen, aby wskazywała nazwę domeny, który jest zgodny ze standardem IDNA. <xref:System.Globalization.IdnMapping.GetUnicode%28System.String%2CSystem.Int32%2CSystem.Int32%29> Metoda następnie konwertuje nazwę domeny standardowy do oryginalnej nazwy domeny, ale zastępuje oryginalny separatory etykiety separator etykiet standardowych.  
  
 [!code-csharp[IdnMapping.GetX#1](~/samples/snippets/csharp/VS_Snippets_CLR/IdnMapping.GetX/CS/getx.cs#1)]
 [!code-vb[IdnMapping.GetX#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/IdnMapping.GetX/VB/getx.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="unicode" /> jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="index" /> lub <paramref name="count" /> jest mniejsza niż zero.  
  
—lub— 
 <paramref name="index" /> jest większa niż długość <paramref name="unicode" />.  
  
—lub— 
 <paramref name="index" /> jest większa niż długość <paramref name="unicode" /> minus <paramref name="count" />.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="unicode" /> Nieprawidłowa opiera się na <see cref="P:System.Globalization.IdnMapping.AllowUnassigned" /> i <see cref="P:System.Globalization.IdnMapping.UseStd3AsciiRules" /> właściwości i IDNA standard.</exception>
        <block subset="none" type="usage"><para>W [!INCLUDE[net_v45](~/includes/net-v45-md.md)], <see cref="T:System.Globalization.IdnMapping" /> klasa obsługuje różne wersje standard IDNA, w zależności od systemu operacyjnego w użyciu: 
— W przypadku uruchamiania [!INCLUDE[win8](~/includes/win8-md.md)], obsługuje on wersji 2008 standardu IDNA opisane przez [RFC 5891: międzynarodowych nazw domen aplikacji (IDNA): protokół](https://go.microsoft.com/fwlink/?LinkId=231875).  
  
-Uruchamiania we wcześniejszych wersjach systemu operacyjnego Windows, wersja 2003 standard opisane przez obsługuje [RFC 3490: Internationalizing nazw domen aplikacji (IDNA)](https://go.microsoft.com/fwlink/?LinkId=158110).  
  
Zobacz [Unicode techniczne standardowa 46: przetwarzanie zgodności IDNA](https://go.microsoft.com/fwlink/?LinkId=232459) różnice w sposobie wzorce obsługi określonych zestawów znaków.</para></block>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.IdnMapping.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="idnMapping.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Extensions</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zwraca wartość skrótu dla tego <see cref="T:System.Globalization.IdnMapping" /> obiektu.</summary>
        <returns>Jedną z czterech 32-bitowe podpisane pochodzi od właściwości <see cref="T:System.Globalization.IdnMapping" /> obiektu.  Wartość zwracana nie ma specjalnego znaczenia i nie jest odpowiedni do użytku w algorytmie kod skrótu.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zastąp <xref:System.Globalization.IdnMapping.GetHashCode%2A> metodę, jeśli aplikacja musi implementować algorytm skrótu istotnych kodu.  
  
   
  
## Examples  
 W poniższym przykładzie założono, że pojedynczy ciąg może zawierać wiele adresów e-mail, rozdzielone spacjami. Usuwa lokalny i @ znak z każdego adresu e-mail i przekazuje nazwę domeny wynikowy <xref:System.Globalization.IdnMapping.GetAscii%28System.String%2CSystem.Int32%29> lub <xref:System.Globalization.IdnMapping.GetAscii%28System.String%2CSystem.Int32%2CSystem.Int32%29> metodę, aby utworzyć nazwę domeny Punycode. <xref:System.Globalization.IdnMapping.GetUnicode%28System.String%2CSystem.Int32%2CSystem.Int32%29> Metoda następnie konwertuje nazwę domeny Punycode do oryginalnej nazwy domeny.  
  
 [!code-csharp[System.Globalization.IdnMapping.GetAscii#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.idnmapping.getascii/cs/conversion1b.cs#3)]
 [!code-vb[System.Globalization.IdnMapping.GetAscii#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.idnmapping.getascii/vb/conversion1b.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetUnicode">
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Extensions</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Dekoduje etykiety nazw jeden lub więcej domen zakodowane zgodnie ze standardem IDNA na ciąg znaków Unicode.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetUnicode">
      <MemberSignature Language="C#" Value="public string GetUnicode (string ascii);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetUnicode(string ascii) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.IdnMapping.GetUnicode(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetUnicode (ascii As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetUnicode(System::String ^ ascii);" />
      <MemberSignature Language="F#" Value="member this.GetUnicode : string -&gt; string" Usage="idnMapping.GetUnicode ascii" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Extensions</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ascii" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="ascii">Ciągu do odkodowania, która składa się z jedną lub więcej etykiet w zakodowanych zgodnie ze standardem IDNA zakresu znaków US-ASCII (U + 0020 do U + 007E).</param>
        <summary>Dekoduje ciąg przynajmniej jednej etykiety nazw domen, kodowane zgodnie ze standardem IDNA, ciąg znaków Unicode.</summary>
        <returns>Kod Unicode podciąg IDNA określony przez <paramref name="ascii" /> parametru.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby uzyskać więcej informacji dotyczących nazw domen, etykiety i etykiety, separatory, zobacz uwagi dla <xref:System.Globalization.IdnMapping.GetAscii%28System.String%2CSystem.Int32%2CSystem.Int32%29?displayProperty=nameWithType> metody.  
  
   
  
## Examples  
 W poniższym przykładzie użyto <xref:System.Globalization.IdnMapping.GetAscii%28System.String%29> metodę, aby przekonwertować tablicę zinternacjonalizowanych nazw domen na ciąg Punycode. <xref:System.Globalization.IdnMapping.GetUnicode%28System.String%29> Metoda następnie konwertuje nazwę domeny Punycode do oryginalnej nazwy domeny, ale zastępuje oryginalny separatory etykiety separator etykiet standardowych.  
  
 [!code-csharp[System.Globalization.IdnMapping.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.idnmapping.class/cs/conversion1.cs#1)]
 [!code-vb[System.Globalization.IdnMapping.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.idnmapping.class/vb/conversion1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="ascii" /> jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="ascii" /> Nieprawidłowa opiera się na <see cref="P:System.Globalization.IdnMapping.AllowUnassigned" /> i <see cref="P:System.Globalization.IdnMapping.UseStd3AsciiRules" /> właściwości i IDNA standard.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetUnicode">
      <MemberSignature Language="C#" Value="public string GetUnicode (string ascii, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetUnicode(string ascii, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.IdnMapping.GetUnicode(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetUnicode (ascii As String, index As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetUnicode(System::String ^ ascii, int index);" />
      <MemberSignature Language="F#" Value="member this.GetUnicode : string * int -&gt; string" Usage="idnMapping.GetUnicode (ascii, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Extensions</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ascii" Type="System.String" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ascii">Ciągu do odkodowania, która składa się z jedną lub więcej etykiet w zakodowanych zgodnie ze standardem IDNA zakresu znaków US-ASCII (U + 0020 do U + 007E).</param>
        <param name="index">Liczony od zera przesunięcie <paramref name="ascii" /> , który określa początek podciągu do odkodowania. Operacja dekodowania kontynuuje do końca <paramref name="ascii" /> ciągu.</param>
        <summary>Dekoduje podciąg z co najmniej jeden etykiety nazw domen, kodowane zgodnie ze standardem IDNA, ciąg znaków Unicode.</summary>
        <returns>Kod Unicode podciąg IDNA określony przez <paramref name="ascii" /> i <paramref name="index" /> parametrów.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby uzyskać więcej informacji dotyczących nazw domen, etykiety i etykiety, separatory, zobacz uwagi dla <xref:System.Globalization.IdnMapping.GetAscii%28System.String%2CSystem.Int32%2CSystem.Int32%29?displayProperty=nameWithType> metody.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="ascii" /> jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="index" /> jest mniejsza niż zero.  
  
—lub— 
 <paramref name="index" /> jest większa niż długość <paramref name="ascii" />.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="ascii" /> Nieprawidłowa opiera się na <see cref="P:System.Globalization.IdnMapping.AllowUnassigned" /> i <see cref="P:System.Globalization.IdnMapping.UseStd3AsciiRules" /> właściwości i IDNA standard.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetUnicode">
      <MemberSignature Language="C#" Value="public string GetUnicode (string ascii, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetUnicode(string ascii, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.IdnMapping.GetUnicode(System.String,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetUnicode (ascii As String, index As Integer, count As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetUnicode(System::String ^ ascii, int index, int count);" />
      <MemberSignature Language="F#" Value="member this.GetUnicode : string * int * int -&gt; string" Usage="idnMapping.GetUnicode (ascii, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Extensions</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ascii" Type="System.String" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ascii">Ciągu do odkodowania, która składa się z jedną lub więcej etykiet w zakodowanych zgodnie ze standardem IDNA zakresu znaków US-ASCII (U + 0020 do U + 007E).</param>
        <param name="index">Liczony od zera przesunięcie <paramref name="ascii" /> , który określa początek podciągu.</param>
        <param name="count">Liczba znaków do przekonwertowania w podciągu, który rozpoczyna się od pozycji określonej przez <paramref name="index" /> w <paramref name="ascii" /> ciągu.</param>
        <summary>Dekoduje ciąg o określonej długości, który zawiera co najmniej jeden etykiety nazw domen, kodowane zgodnie ze standardem IDNA, ciąg znaków Unicode.</summary>
        <returns>Kod Unicode podciąg IDNA określony przez <paramref name="ascii" />, <paramref name="index" />, i <paramref name="count" /> parametrów.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby uzyskać więcej informacji dotyczących nazw domen, etykiety i etykiety, separatory, zobacz uwagi dla <xref:System.Globalization.IdnMapping.GetAscii%28System.String%2CSystem.Int32%2CSystem.Int32%29?displayProperty=nameWithType> metody.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="ascii" /> jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="index" /> lub <paramref name="count" /> jest mniejsza niż zero.  
  
—lub— 
 <paramref name="index" /> jest większa niż długość <paramref name="ascii" />.  
  
—lub— 
 <paramref name="index" /> jest większa niż długość <paramref name="ascii" /> minus <paramref name="count" />.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="ascii" /> Nieprawidłowa opiera się na <see cref="P:System.Globalization.IdnMapping.AllowUnassigned" /> i <see cref="P:System.Globalization.IdnMapping.UseStd3AsciiRules" /> właściwości i IDNA standard.</exception>
      </Docs>
    </Member>
    <Member MemberName="UseStd3AsciiRules">
      <MemberSignature Language="C#" Value="public bool UseStd3AsciiRules { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseStd3AsciiRules" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.IdnMapping.UseStd3AsciiRules" />
      <MemberSignature Language="VB.NET" Value="Public Property UseStd3AsciiRules As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseStd3AsciiRules { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.UseStd3AsciiRules : bool with get, set" Usage="System.Globalization.IdnMapping.UseStd3AsciiRules" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Extensions</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy standard lub swobodna konwencji nazewnictwa używanych w operacji wykonywanych przez członków bieżącej <see cref="T:System.Globalization.IdnMapping" /> obiektu.</summary>
        <value><see langword="true" /> Jeśli używane są standardowe konwencje nazewnictwa w działalności. w przeciwnym razie <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Nazwy domen, które należy wykonać standardowe reguły nazewnictwa składają się z określony podzbiór znaki z zakresu znaków US-ASCII. Znaki to litery od A do Z, cyfr od 0 do 9 i znak łącznika (-) (U + 002D) oraz znaku kropki (.). Wielkość liter nie ma znaczenia. Swobodna konwencji nazewnictwa umożliwia korzystanie z szerszego zakresu ASCII znaków, w tym miejsce znak (U + 0020), wykrzyknika znak (U + 0021) i górnych znak (U + 005F). Jeśli <xref:System.Globalization.IdnMapping.UseStd3AsciiRules%2A> jest `true`, tylko standardowe znaki mogą być wyświetlane w etykiecie zwrócony przez <xref:System.Globalization.IdnMapping.GetAscii%2A> metody.  
  
 Domyślnie wartość <xref:System.Globalization.IdnMapping.UseStd3AsciiRules%2A> właściwość `false`, i rozwiniętej podzbiór znaków ASCII jest dozwolone w etykiecie.  
  
> [!NOTE]
>  <xref:System.Globalization.IdnMapping> Klasy zabraniają używania znaków nondisplayable 0000 U + poprzez U + 001F i U + 007F w nazwie domeny etykiet bez względu na ustawienie z <xref:System.Globalization.IdnMapping.UseStd3AsciiRules%2A> właściwości. Zakaz zmniejsza ryzyko ataków zabezpieczeń, takich jak fałszowanie nazwy.  
  
   
  
## Examples  
 Poniższy przykład generuje adresy URL, które zawierają znaki w zakresie ASCII od U + 0000 do U + 007F i przekazuje je do <xref:System.Globalization.IdnMapping.GetAscii%28System.String%29> dwie metody <xref:System.Globalization.IdnMapping> obiektów. Jeden obiekt ma jego <xref:System.Globalization.IdnMapping.UseStd3AsciiRules%2A> właściwością `true`, a innego obiektu ma ustawioną na `false`. Dane wyjściowe wyświetla znaki, które są nieprawidłowe, kiedy <xref:System.Globalization.IdnMapping.UseStd3AsciiRules%2A> właściwość `true` ale nieprawidłowy, gdy jest ona `false`.  
  
 [!code-csharp[System.Globalization.IdnMapping.UseStd3AsciiRules#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.idnmapping.usestd3asciirules/cs/usestd3asciirules1.cs#1)]
 [!code-vb[System.Globalization.IdnMapping.UseStd3AsciiRules#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.idnmapping.usestd3asciirules/vb/usestd3asciirules1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>