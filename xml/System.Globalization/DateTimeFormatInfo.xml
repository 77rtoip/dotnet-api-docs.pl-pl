<Type Name="DateTimeFormatInfo" FullName="System.Globalization.DateTimeFormatInfo">
  <Metadata><Meta Name="ms.openlocfilehash" Value="f1945da7c795b705d47c8e37526d7aa5868d77e3" /><Meta Name="ms.sourcegitcommit" Value="3efce15f3841385ee3ba24bd71ff0c0cf9a47815" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="04/03/2019" /><Meta Name="ms.locfileid" Value="58875245" /></Metadata><TypeSignature Language="C#" Value="public sealed class DateTimeFormatInfo : ICloneable, IFormatProvider" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit DateTimeFormatInfo extends System.Object implements class System.ICloneable, class System.IFormatProvider" />
  <TypeSignature Language="DocId" Value="T:System.Globalization.DateTimeFormatInfo" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class DateTimeFormatInfo&#xA;Implements ICloneable, IFormatProvider" />
  <TypeSignature Language="C++ CLI" Value="public ref class DateTimeFormatInfo sealed : ICloneable, IFormatProvider" />
  <TypeSignature Language="F#" Value="type DateTimeFormatInfo = class&#xA;    interface ICloneable&#xA;    interface IFormatProvider" />
  <AssemblyInfo>
    <AssemblyName>System.Globalization</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IFormatProvider</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Dostarcza informacje specyficzne dla kultury o formacie wartości daty i godziny.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Właściwości <xref:System.Globalization.DateTimeFormatInfo> klasy zawierają specyficzne dla kultury informacje dotyczące formatowania lub analizowania wartości daty i godziny, takie jak następujące:  
  
-   Wzorce, używany do formatowania wartości daty.  
  
-   Wzorce, używany do formatowania wartości typu time.  
  
-   Nazwy dni tygodnia.  
  
-   Nazwy miesięcy roku.  
  
-   Rano and P.M. oznaczenia używane w wartości typu time.  
  
-   Kalendarz, w którym są wyrażane daty.  
  
 W tej sekcji:  
  
-   [Utworzenie wystąpienia obiektu DateTimeFormatInfo](#instantiating)  
  
    -   [Dla niezmiennej kultury](#instantiating_Invariant)  
  
    -   [Dla określonej kultury](#instantiating_Specific)  
  
    -   [Dla kultury neutralnej](#instantiating_neutral)  
  
    -   [Dla bieżącej kultury](#instantiating_Current)  
  
-   [DateTimeFormatInfo i dane dynamiczne](#dynamic)  
  
-   [Formatowanie daty i godziny](#Formatting_dates_times)  
  
-   [Ciągi formatów i właściwości DateTimeFormatInfo](#format-strings-and-datetimeformatinfo-properties)  
  
-   [Modyfikowanie właściwości DateTimeFormatInfo](#Modifying)  
  
<a name="instantiating"></a>   
## <a name="instantiating-a-datetimeformatinfo-object"></a>Utworzenie wystąpienia obiektu DateTimeFormatInfo  
 A <xref:System.Globalization.DateTimeFormatInfo> object może reprezentować Konwencji formatowania kultury niezmiennej, określonej kultury, kultury neutralnej lub bieżącej kultury. W tej sekcji omówiono sposób tworzenia wystąpienia każdego typu <xref:System.Globalization.DateTimeFormatInfo> obiektu.  
  
<a name="instantiating_Invariant"></a>   
### <a name="instantiating-a-datetimeformatinfo-object-for-the-invariant-culture"></a>Utworzenie wystąpienia obiektu DateTimeFormatInfo dla kultury niezmiennej  
 Niezmienna kultura reprezentuje kulturę, w której nie uwzględnia się ustawień kulturowych. Jest ona oparta na język angielski, ale nie na dowolnym określonym anglojęzycznego kraju/regionie. Mimo że danych określonych kultur może być dynamiczny i można zmieniać, aby odzwierciedlić nowe konwencje kultury lub preferencje użytkownika, danych o niezmiennej kultury nie zmienia się. Można utworzyć wystąpienie <xref:System.Globalization.DateTimeFormatInfo> obiekt, który reprezentuje konwencje formatowania niezmiennej kultury w następujący sposób:  
  
-   Poprzez pobranie wartości <xref:System.Globalization.DateTimeFormatInfo.InvariantInfo%2A> właściwości. Zwrócony <xref:System.Globalization.DateTimeFormatInfo> obiekt jest tylko do odczytu.  
  
-   Przez wywołanie metody bez parametrów <xref:System.Globalization.DateTimeFormatInfo.%23ctor%2A> konstruktora. Zwrócony <xref:System.Globalization.DateTimeFormatInfo> obiektu jest do odczytu/zapisu.  
  
-   Poprzez pobranie wartości <xref:System.Globalization.CultureInfo.DateTimeFormat%2A> właściwość <xref:System.Globalization.CultureInfo> obiektu, który jest zwracany przez <xref:System.Globalization.CultureInfo.InvariantCulture%2A?displayProperty=nameWithType> właściwości. Zwrócony <xref:System.Globalization.DateTimeFormatInfo> obiekt jest tylko do odczytu.  
  
 W poniższym przykładzie użyto, każda z tych metod do utworzenia wystąpienia <xref:System.Globalization.DateTimeFormatInfo> obiekt, który reprezentuje niezmienną kulturę. Następnie wskazuje, czy obiekt jest tylko do odczytu.  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/cs/create1.cs#1)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/vb/create1.vb#1)]  
  
<a name="instantiating_Specific"></a>   
### <a name="instantiating-a-datetimeformatinfo-object-for-a-specific-culture"></a>Utworzenie wystąpienia obiektu DateTimeFormatInfo dla określonej kultury  
 Określonej kultury reprezentuje język, który jest używany w danym kraju/regionie. Na przykład en US jest określoną kulturę, która reprezentuje język angielski, używany w Stanach Zjednoczonych i en-urząd certyfikacji jest określoną kulturę, która reprezentuje język angielski, używany w Kanadzie. Można utworzyć wystąpienie <xref:System.Globalization.DateTimeFormatInfo> obiekt, który reprezentuje konwencje formatowania określonej kultury w następujący sposób:  
  
-   Przez wywołanie metody <xref:System.Globalization.CultureInfo.GetCultureInfo%28System.String%29?displayProperty=nameWithType> metody i pobieranie wartości zwracanej <xref:System.Globalization.CultureInfo> obiektu <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType> właściwości. Zwrócony <xref:System.Globalization.DateTimeFormatInfo> obiekt jest tylko do odczytu.  
  
-   Przekazując statycznej <xref:System.Globalization.DateTimeFormatInfo.GetInstance%2A> — metoda <xref:System.Globalization.CultureInfo> obiekt, który reprezentuje kulturę, której <xref:System.Globalization.DateTimeFormatInfo> obiekt ma zostać pobrane. Zwrócony <xref:System.Globalization.DateTimeFormatInfo> obiektu jest do odczytu/zapisu.  
  
-   Przez wywołanie statycznego <xref:System.Globalization.CultureInfo.CreateSpecificCulture%2A?displayProperty=nameWithType> metody i pobieranie wartości zwracanej <xref:System.Globalization.CultureInfo> obiektu <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType> właściwości. Zwrócony <xref:System.Globalization.DateTimeFormatInfo> obiektu jest do odczytu/zapisu.  
  
-   Przez wywołanie metody <xref:System.Globalization.CultureInfo.%23ctor%2A?displayProperty=nameWithType> klasy Konstruktor i pobieranie wartości zwracanej <xref:System.Globalization.CultureInfo> obiektu <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType> właściwości. Zwrócony <xref:System.Globalization.DateTimeFormatInfo> obiektu jest do odczytu/zapisu.  
  
 W poniższym przykładzie pokazano każdego z tych sposobów, aby utworzyć wystąpienie <xref:System.Globalization.DateTimeFormatInfo> obiektu i wskazuje, czy wynikowy obiekt jest tylko do odczytu.  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.Class#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/cs/create1.cs#3)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.Class#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/vb/create1.vb#3)]  
  
<a name="instantiating_neutral"></a>   
### <a name="instantiating-a-datetimeformatinfo-object-for-a-neutral-culture"></a>Utworzenie wystąpienia obiektu DateTimeFormatInfo dla kultury neutralnej  
 Kultury neutralnej reprezentuje kultury lub języka, który jest niezależny od kraju/regionu; zwykle jest elementem nadrzędnym jeden lub więcej określonych kultur. Na przykład Fr jest kultury neutralnej dla języka francuskiego i element nadrzędny kultury fr-FR. Można utworzyć wystąpienie <xref:System.Globalization.DateTimeFormatInfo> obiekt, który reprezentuje konwencje formatowania kultury neutralnej w taki sam sposób, którą tworzysz <xref:System.Globalization.DateTimeFormatInfo> obiekt, który reprezentuje konwencje formatowania określonej kultury. Ponadto, możesz pobrać kultury neutralnej <xref:System.Globalization.DateTimeFormatInfo> obiektu przez pobranie kultury neutralnej z określoną kulturę <xref:System.Globalization.CultureInfo.Parent%2A?displayProperty=nameWithType> właściwości i pobierania <xref:System.Globalization.DateTimeFormatInfo> obiektu zwróconego przez jego <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType> właściwości. Chyba że culture nadrzędnego reprezentuje kultury niezmiennej, zwrócony <xref:System.Globalization.DateTimeFormatInfo> obiektu jest do odczytu/zapisu. W poniższym przykładzie pokazano te sposoby tworzenia wystąpienia <xref:System.Globalization.DateTimeFormatInfo> obiekt, który reprezentuje kultury neutralnej.  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.Class#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/cs/create1.cs#2)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.Class#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/vb/create1.vb#2)]  
  
> [!NOTE]
>  W .NET Framework w wersji 1.0 za pośrednictwem [!INCLUDE[net_v35_short](~/includes/net-v35-short-md.md)], próby pobrania <xref:System.Globalization.DateTimeFormatInfo> wyrzuca obiekt, który odzwierciedla konwencje formatowania kultury neutralnej <xref:System.NotSupportedException> wyjątku.  
  
 Jednak kultury neutralnej nie posiada informacje o formatowaniu specyficzne dla kultury, ponieważ jest ono niezależne od określonego kraju/regionu. Zamiast wypełnianie <xref:System.Globalization.DateTimeFormatInfo> obiekt z ogólnych wartości, zwraca programu .NET Framework <xref:System.Globalization.DateTimeFormatInfo> obiekt, który odzwierciedla konwencje formatowania określonej kultury, która jest elementem podrzędnym kultury neutralnej. Na przykład <xref:System.Globalization.DateTimeFormatInfo> obiektu dla kultury neutralnej en odzwierciedla konwencje formatowania kultury en US i <xref:System.Globalization.DateTimeFormatInfo> obiektu dla kultury fr odzwierciedla konwencje formatowania kultury fr-FR.  
  
 Aby określić, które określonej kultury Konwencji formatowania kultury neutralnej reprezentuje, można użyć kodu, jak pokazano poniżej. W przykładzie użyto odbicia do porównania <xref:System.Globalization.DateTimeFormatInfo> właściwości kultury neutralnej z właściwości podrzędnych określonej kultury. Go uwzględnia oba te kalendarze jako równoważne, jeśli są one ten sam typ kalendarza oraz dla kalendarza gregoriańskiego kalendarze i, jeśli ich <xref:System.Globalization.GregorianCalendar.CalendarType%2A?displayProperty=nameWithType> właściwości ma takie same wartości.  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.Class#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/cs/instantiate6c.cs#6)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.Class#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/vb/instantiate6c.vb#6)]  
  
<a name="instantiating_Current"></a>   
### <a name="instantiating-a-datetimeformatinfo-object-for-the-current-culture"></a>Utworzenie wystąpienia obiektu DateTimeFormatInfo dla bieżącej kultury  
 Można utworzyć wystąpienie <xref:System.Globalization.DateTimeFormatInfo> obiekt, który reprezentuje konwencje formatowania bieżącej kultury w następujący sposób:  
  
-   Poprzez pobranie wartości <xref:System.Globalization.DateTimeFormatInfo.CurrentInfo%2A> właściwości. Zwrócony <xref:System.Globalization.DateTimeFormatInfo> obiekt jest tylko do odczytu.  
  
-   Poprzez pobranie wartości <xref:System.Globalization.CultureInfo.DateTimeFormat%2A> właściwość <xref:System.Globalization.CultureInfo> obiektu, który jest zwracany przez <xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=nameWithType> właściwości. Zwrócony <xref:System.Globalization.DateTimeFormatInfo> obiekt jest tylko do odczytu.  
  
-   Przez wywołanie metody <xref:System.Globalization.NumberFormatInfo.GetInstance%2A> metody z <xref:System.Globalization.CultureInfo> obiekt, który reprezentuje bieżącą kulturę. Zwrócony <xref:System.Globalization.DateTimeFormatInfo> obiekt jest tylko do odczytu.  
  
 W poniższym przykładzie użyto, każda z tych metod do utworzenia wystąpienia <xref:System.Globalization.DateTimeFormatInfo> obiekt, który reprezentuje konwencje formatowania bieżącej kultury. Następnie wskazuje, czy obiekt jest tylko do odczytu.  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.Class#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/cs/create2.cs#4)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.Class#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/vb/create2.vb#4)]  
  
 Możesz utworzyć zapisywalnego <xref:System.Globalization.DateTimeFormatInfo> obiekt, który reprezentuje konwencje bieżącej kultury wątku w jednym z następujących sposobów:  
  
-   Pobierając <xref:System.Globalization.DateTimeFormatInfo> obiektów w jednym z trzech sposobów z poprzednim i wywoływania <xref:System.Globalization.DateTimeFormatInfo.Clone%2A> zwracanego metody <xref:System.Globalization.DateTimeFormatInfo> obiektu. Spowoduje to utworzenie kopię oryginału <xref:System.Globalization.DateTimeFormatInfo> obiektu, chyba że jego <xref:System.Globalization.DateTimeFormatInfo.IsReadOnly%2A> właściwość `false`.  
  
-   Przez wywołanie metody <xref:System.Globalization.CultureInfo.CreateSpecificCulture%2A?displayProperty=nameWithType> metodę w celu utworzenia <xref:System.Globalization.CultureInfo> obiekt, który reprezentuje bieżącą kulturę, a następnie użyć jej <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType> właściwość służąca do pobierania <xref:System.Globalization.DateTimeFormatInfo> obiektu.  
  
 Poniższy przykład ilustruje sposób każdego wystąpienia odczytu/zapisu <xref:System.Globalization.DateTimeFormatInfo> obiektu i wyświetla wartość jego <xref:System.Globalization.DateTimeFormatInfo.IsReadOnly%2A> właściwości.  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.Class#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/cs/instantiate2.cs#7)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.Class#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/vb/instantiate2.vb#7)]  
  
 W Windows, użytkownik może zastąpić niektóre <xref:System.Globalization.DateTimeFormatInfo> wartości właściwości używane w formatowania i analizowania operacji za pomocą **Region i język** aplikacji w Panelu sterowania. Na przykład użytkownik, którego kultura jest angielski (Stany Zjednoczone) wybrać wyświetlanie długo wartości czasu za pomocą zegara 24-godzinny (w formacie: mm: ss) zamiast domyślnej zegar 12-godzinny (w formacie hh: mm:). <xref:System.Globalization.DateTimeFormatInfo> Obiektów, pobrać w sposób omówionych wcześniej wszystkie odzwierciedlać te zastąpienia użytkownika. Jeśli jest to niepożądane, możesz utworzyć <xref:System.Globalization.NumberFormatInfo> obiektu, który nie będzie odzwierciedlał użytkownik zastępuje (i jest również odczytu/zapisu, a nie tylko do odczytu) przez wywołanie metody <xref:System.Globalization.CultureInfo.%23ctor%28System.String%2CSystem.Boolean%29?displayProperty=nameWithType> Konstruktor i podanie wartości `false` dla `useUserOverride` argumentu. Poniższy przykład ilustruje ten system, którego bieżącą kulturą jest angielski (Stany Zjednoczone) i którego wzorca długo została zmieniona z domyślnego hh: mm: do: mm: ss.  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.Class#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/cs/instantiate3.cs#8)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.Class#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/vb/instantiate3.vb#8)]  
  
<a name="dynamic"></a>   
## <a name="datetimeformatinfo-and-dynamic-data"></a>DateTimeFormatInfo i dane dynamiczne  
 Formatowanie wartości daty i godziny, które są dostarczane przez dane specyficzne dla kultury <xref:System.Globalization.DateTimeFormatInfo> klasa jest dynamiczny, podobnie jak dane kultury dostarczonych przez <xref:System.Globalization.CultureInfo> klasy. Nie należy czynić żadnych założeń o stabilności wartości dla <xref:System.Globalization.DateTimeFormatInfo> obiekty, które są skojarzone z określonego <xref:System.Globalization.CultureInfo> obiektów. Tylko dane dostarczane przez niezmiennej kultury i związanych z nią <xref:System.Globalization.DateTimeFormatInfo> obiektu jest stabilna. Zmienić inne dane między sesjami aplikacji, lub nawet wtedy, gdy aplikacja jest uruchomiona. Istnieją cztery główne źródła zmiany:  
  
-   Aktualizacje systemu. Zmień preferencje kultury, takich jak kalendarz preferowanych lub wszelkie formaty daty i godziny wraz z upływem czasu. W takiej sytuacji aktualizacja Windows obejmuje zmiany <xref:System.Globalization.DateTimeFormatInfo> wartości właściwości dla określonej kultury.  
  
-   Zamienne. <xref:System.Globalization.CultureAndRegionInfoBuilder> Klasa może być używana, aby zamienić dane istniejące kultury.  
  
-   Kaskadowe zmiany wartości właściwości. Wiele właściwości związane z kulturą można zmieniać w czasie wykonywania, co z kolei powoduje, że <xref:System.Globalization.DateTimeFormatInfo> dane, aby zmienić. Na przykład bieżąca kultura można zmienić programowo lub za pomocą akcji przez użytkownika. W takim przypadku <xref:System.Globalization.DateTimeFormatInfo> obiektu zwróconego przez <xref:System.Globalization.DateTimeFormatInfo.CurrentInfo%2A> zmienia właściwość do obiektu, który został skojarzony z bieżącą kulturą. Podobnie, kalendarza kultury mogą ulec zmianie, co może spowodować zmiany licznych <xref:System.Globalization.DateTimeFormatInfo> wartości właściwości.  
  
-   Preferencje użytkownika. Użytkownicy twojej aplikacji może wybrać do nadpisania niektóre wartości skojarzone z bieżącą kulturą systemu za pośrednictwem opcji regionalnych i językowych w Panelu sterowania. Na przykład użytkownicy mogą używać wyświetlić datę w innym formacie. Jeśli <xref:System.Globalization.CultureInfo.UseUserOverride%2A?displayProperty=nameWithType> właściwość jest ustawiona na `true`, właściwości <xref:System.Globalization.DateTimeFormatInfo> obiektu również jest pobierana z ustawienia użytkownika. Jeśli ustawienia użytkownika są niezgodne z kulturą skojarzoną z <xref:System.Globalization.CultureInfo> obiektu (na przykład, jeśli wybrany kalendarz nie jest jednym z kalendarzy wskazywanym przez <xref:System.Globalization.CultureInfo.OptionalCalendars%2A> właściwości), wyniki metod i wartości właściwości są niezdefiniowane.  
  
 Aby ograniczyć możliwość niespójność danych, wszystkie właściwości użytkownika do przesłonięcia <xref:System.Globalization.DateTimeFormatInfo> obiektu są inicjowane, gdy obiekt jest tworzony. Się nadal istnieje możliwość niespójności, ponieważ utworzenie obiektu ani proces zastąpienie użytkownika nie są niepodzielne, a odpowiednie wartości można zmienić podczas tworzenia obiektu. Jednak ta sytuacja powinna być bardzo rzadko.  
  
 Można kontrolować, czy użytkownik zastąpienia są odzwierciedlane w <xref:System.Globalization.DateTimeFormatInfo> obiektami, które reprezentują tę samą kulturę, co kultury systemu. W poniższej tabeli przedstawiono sposoby, w którym <xref:System.Globalization.DateTimeFormatInfo> obiekt mogą być pobierane i wskazuje, czy wynikowy obiekt odzwierciedla napisanie użytkownika.  
  
|Źródłowy obiekt CultureInfo i DateTimeFormatInfo|Odzwierciedla napisanie użytkownika|  
|---------------------------------------------------------|-----------------------------|  
|`CultureInfo.CurrentCulture.DateTimeFormat` property|Tak|  
|<xref:System.Globalization.DateTimeFormatInfo.CurrentInfo%2A?displayProperty=nameWithType> property|Tak|  
|<xref:System.Globalization.CultureInfo.CreateSpecificCulture%2A?displayProperty=nameWithType> — metoda|Tak|  
|<xref:System.Globalization.CultureInfo.GetCultureInfo%2A?displayProperty=nameWithType> — metoda|Nie|  
|<xref:System.Globalization.CultureInfo.%23ctor%28System.String%29?displayProperty=nameWithType>  — konstruktor|Tak|  
|<xref:System.Globalization.CultureInfo.%23ctor%28System.String%2CSystem.Boolean%29?displayProperty=nameWithType>  — konstruktor|Zależy od wartości `useUserOverride` parametru|  
  
 Chyba że istnieje istotny powód, aby robić, należy przestrzegać napisanie użytkownika, gdy używasz <xref:System.Globalization.DateTimeFormatInfo> obiektu w aplikacjach klienckich do formatowania i analizowania danych wejściowych użytkownika lub do wyświetlania danych. Dla aplikacji serwera lub nienadzorowanej aplikacji nie należy. Jednak jeśli używasz <xref:System.Globalization.DateTimeFormatInfo> obiektu albo jawnie lub niejawnie do utrwalenia danych daty i godziny w postaci ciągu, należy użyć <xref:System.Globalization.DateTimeFormatInfo> należy określić obiekt, który odzwierciedla konwencje formatowania kultury niezmiennej, lub Niestandardowy ciąg daty i godziny formatu używanego niezależnie od kultury.  
  
<a name="Formatting_dates_times"></a>   
## <a name="formatting-dates-and-times"></a>Formatowanie daty i godziny  
 A <xref:System.Globalization.DateTimeFormatInfo> obiekt jest używany jawnie lub niejawnie w wszystkich formatowania daty i godziny operacji. Obejmują one wywołania następujących metod:  
  
-   Wszystkie formatowania daty i godziny metody, takie jak <xref:System.DateTime.ToString?displayProperty=nameWithType> i <xref:System.DateTimeOffset.ToString%28System.String%29?displayProperty=nameWithType>.  
  
-   Główne metodę formatowania złożonego, czyli <xref:System.String.Format%2A?displayProperty=nameWithType>.  
  
-   Inne złożone formatowanie metod, takich jak <xref:System.Console.WriteLine%28System.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType> i <xref:System.Text.StringBuilder.AppendFormat%28System.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType>.  
  
 Wszystkie daty i godziny, w operacji formatowania należy korzystać z <xref:System.IFormatProvider> implementacji. <xref:System.IFormatProvider> Interfejs zawiera jedną metodę <xref:System.IFormatProvider.GetFormat%28System.Type%29?displayProperty=nameWithType>. Tej metody wywołania zwrotnego jest przekazywany <xref:System.Type> obiekt, który reprezentuje typ niezbędnej do zapewnienia informacji o formatowaniu. Metoda ta zwraca wystąpienie tego typu lub `null` Jeśli wystąpienie tego typu nie może dostarczyć. Program .NET Framework zawiera dwa <xref:System.IFormatProvider> niedotyczące formatowanie daty i godziny:  
  
-   <xref:System.Globalization.CultureInfo> Klasy, która reprezentuje określoną kulturę (lub określonym językiem w programie określonego kraju/regionu). W formatowania daty i godziny operacji <xref:System.Globalization.CultureInfo.GetFormat%2A?displayProperty=nameWithType> metoda zwraca <xref:System.Globalization.DateTimeFormatInfo> obiekt skojarzony z jego <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType> właściwości.  
  
-   <xref:System.Globalization.DateTimeFormatInfo> Klasy, która dostarcza informacji na temat Konwencji formatowania jego skojarzony kultury. <xref:System.Globalization.DateTimeFormatInfo.GetFormat%2A?displayProperty=nameWithType> Metoda zwraca instancję samego siebie.  
  
 Jeśli <xref:System.IFormatProvider> wdrożenia nie zostanie podany do metody formatowania jawnie <xref:System.Globalization.CultureInfo> obiektu zwróconego przez <xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=nameWithType> właściwość, która reprezentuje bieżącą kulturę wątku jest używana.  
  
 W poniższym przykładzie pokazano relację między <xref:System.IFormatProvider> interfejsu i <xref:System.Globalization.DateTimeFormatInfo> klasy w operacjach formatowania. Definiuje niestandardowe <xref:System.IFormatProvider> implementacji którego <xref:System.IFormatProvider.GetFormat%2A> metoda Wyświetla typ obiektu, żądane przez operację formatowania. Jeśli żąda <xref:System.Globalization.DateTimeFormatInfo> obiektu, udostępnia metody <xref:System.Globalization.DateTimeFormatInfo> obiektu dla bieżącej kultury wątku. Jako dane wyjściowe w przykładzie pokazano <xref:System.Decimal.ToString%28System.IFormatProvider%29?displayProperty=nameWithType> metod żądań <xref:System.Globalization.DateTimeFormatInfo> obiektu, aby zapewnić informacje o formatowaniu, natomiast <xref:System.String.Format%28System.IFormatProvider%2CSystem.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType> metod żądań <xref:System.Globalization.NumberFormatInfo> i <xref:System.Globalization.DateTimeFormatInfo> obiektów, a także <xref:System.ICustomFormatter> Implementacja.  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.Class#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/cs/formatprovider1.cs#9)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.Class#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/vb/formatprovider1.vb#9)]  
  
## <a name="format-strings-and-datetimeformatinfo-properties"></a>Ciągi formatów i właściwości DateTimeFormatInfo  
 <xref:System.Globalization.DateTimeFormatInfo> Obiekt zawiera trzy rodzaje właściwości, które są używane w formatowaniu operacji przy użyciu wartości daty i godziny:  
  
-   Właściwości związane z kalendarza. Właściwości, takie jak <xref:System.Globalization.DateTimeFormatInfo.AbbreviatedDayNames%2A>, <xref:System.Globalization.DateTimeFormatInfo.AbbreviatedMonthNames%2A>, <xref:System.Globalization.DateTimeFormatInfo.DayNames%2A>, i <xref:System.Globalization.DateTimeFormatInfo.MonthNames%2A>, są skojarzone z kalendarz używany przez kulturę, która jest zdefiniowana przez <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> właściwości. Te właściwości są używane do daty długiej i format czasu.  
  
-   Właściwości, które tworzą ciąg wynikowy standardy zdefiniowane. <xref:System.Globalization.DateTimeFormatInfo.RFC1123Pattern%2A>, <xref:System.Globalization.DateTimeFormatInfo.SortableDateTimePattern%2A>, I <xref:System.Globalization.DateTimeFormatInfo.UniversalSortableDateTimePattern%2A> właściwości zawierają Tworzenie niestandardowych formatów ciągów, które tworzą ciągi wynikowe definicją standardami międzynarodowymi. Te właściwości są przeznaczone tylko do odczytu i nie może być modyfikowany.  
  
-   Właściwości, które definiują ciągi wynikowe zależne od kultury. Niektóre właściwości, takie jak <xref:System.Globalization.DateTimeFormatInfo.FullDateTimePattern%2A> i <xref:System.Globalization.DateTimeFormatInfo.ShortDatePattern%2A>, zawierają [niestandardowe ciągi formatujące](~/docs/standard/base-types/custom-date-and-time-format-strings.md) określające format ciągu wynikowego. Inne, takie jak <xref:System.Globalization.DateTimeFormatInfo.AMDesignator%2A>, <xref:System.Globalization.DateTimeFormatInfo.DateSeparator%2A>, <xref:System.Globalization.DateTimeFormatInfo.PMDesignator%2A>, i <xref:System.Globalization.DateTimeFormatInfo.TimeSeparator%2A>, zdefiniuj wrażliwość na ustawienia kulturowe symboli lub podciągi, które mogły zostać uwzględnione w ciągu wynikowym.  
  
 [Ciągi formatu standardowego daty i godziny](~/docs/standard/base-types/standard-date-and-time-format-strings.md), takie jak "d", "D", "f" i "F", są aliasy, które odpowiadają określony <xref:System.Globalization.DateTimeFormatInfo> właściwości wzorzec formatowania. Większość [niestandardowa data i godzina ciągi formatujące](~/docs/standard/base-types/custom-date-and-time-format-strings.md) są powiązane z ciągów lub podciągów wstawianych do strumienia wynik w operacji formatowania. W poniższej tabeli wymieniono standardowe i niestandardowe daty i czasu specyfikatorów formatu i ich skojarzone <xref:System.Globalization.DateTimeFormatInfo> właściwości. Aby uzyskać szczegółowe informacje o sposobie używania tych specyfikatory formatu, zobacz [standardowych ciągów daty i godziny Format](~/docs/standard/base-types/standard-date-and-time-format-strings.md) i [Custom Date and Time Format Strings](~/docs/standard/base-types/custom-date-and-time-format-strings.md). Należy zauważyć, że każdy ciąg formatu standardowego odnosi się do <xref:System.Globalization.DateTimeFormatInfo> właściwość, której wartość jest niestandardowa data i ciąg formatu godziny. Poszczególne specyfikatory w tym ciągu formatu niestandardowego z kolei odnoszą się do innych <xref:System.Globalization.DateTimeFormatInfo> właściwości. W tabeli wymieniono tylko <xref:System.Globalization.DateTimeFormatInfo> właściwości, dla których są aliasami ciągi w standardowym formacie, a nie właściwości listy, które mogą być używane przez niestandardowe ciągi formatujące przypisane do tych właściwości aliasu jest. Ponadto w tabeli wymieniono tylko niestandardowych specyfikatorów formatu, które odpowiadają <xref:System.Globalization.DateTimeFormatInfo> właściwości.  
  
|Specyfikator formatu|Skojarzonych z nimi właściwości|  
|----------------------|---------------------------|  
|"d" (Data krótka, ciąg formatu standardowego)|<xref:System.Globalization.DateTimeFormatInfo.ShortDatePattern%2A>, aby zdefiniować ogólny format ciągu wynikowego.|  
|"D" (Data długa; ciąg formatu standardowego)|<xref:System.Globalization.DateTimeFormatInfo.LongDatePattern%2A>, aby zdefiniować ogólny format ciągu wynikowego.|  
|"f" (pełna data / krótki czas; standardowy ciąg formatu)|<xref:System.Globalization.DateTimeFormatInfo.LongDatePattern%2A>, aby zdefiniować format składnika daty w ciągu wynikowym.<br /><br /> <xref:System.Globalization.DateTimeFormatInfo.ShortTimePattern%2A>, aby zdefiniować format składnika godziny w ciągu wynikowym.|  
|"F" (pełna data / długi czas; ciąg formatu standardowego)|<xref:System.Globalization.DateTimeFormatInfo.LongDatePattern%2A>, aby zdefiniować format składnika daty w ciągu wynikowym.<br /><br /> <xref:System.Globalization.DateTimeFormatInfo.LongTimePattern%2A>, aby zdefiniować format składnika godziny w ciągu wynikowym.|  
|"g" (ogólna Data / Godzina krótka; ciąg formatu standardowego)|<xref:System.Globalization.DateTimeFormatInfo.ShortDatePattern%2A>, aby zdefiniować format składnika daty w ciągu wynikowym.<br /><br /> <xref:System.Globalization.DateTimeFormatInfo.ShortTimePattern%2A>, aby zdefiniować format składnika godziny w ciągu wynikowym.|  
|"G" (ogólna data / długi czas; standardowy ciąg formatu)|<xref:System.Globalization.DateTimeFormatInfo.ShortDatePattern%2A>, aby zdefiniować format składnika daty w ciągu wynikowym.<br /><br /> <xref:System.Globalization.DateTimeFormatInfo.LongTimePattern%2A>, aby zdefiniować format składnika godziny w ciągu wynikowym.|  
|"M", "m" (miesiąc/dzień; ciąg formatu standardowego)|<xref:System.Globalization.DateTimeFormatInfo.MonthDayPattern%2A>, aby zdefiniować ogólny format ciągu wynikowego.|  
|"O", "o" (dwustronnej konwersji Data/Godzina; ciąg formatu standardowego)|Brak.|  
|"R", "r" (RFC1123; ciąg formatu standardowego)|<xref:System.Globalization.DateTimeFormatInfo.RFC1123Pattern%2A>, aby zdefiniować ciąg wynikowy, który jest zgodny ze standardem RFC 1123. Właściwość jest tylko do odczytu.|  
|"s" (wzorzec sortowalnej daty/godziny; ciąg formatu standardowego)|<xref:System.Globalization.DateTimeFormatInfo.SortableDateTimePattern%2A>, aby zdefiniować ciąg wynikowy, który jest zgodny ze standardem ISO 8601. Właściwość jest tylko do odczytu.|  
|"t" (godzina krótka; ciąg formatu standardowego)|<xref:System.Globalization.DateTimeFormatInfo.ShortTimePattern%2A>, aby zdefiniować ogólny format ciągu wynikowego.|  
|"T" (godzina długa; ciąg formatu standardowego)|<xref:System.Globalization.DateTimeFormatInfo.LongTimePattern%2A>, aby zdefiniować ogólny format ciągu wynikowego.|  
|"u" (wzorzec uniwersalnej sortowalnej daty/godziny; ciąg formatu standardowego)|<xref:System.Globalization.DateTimeFormatInfo.UniversalSortableDateTimePattern%2A>, aby zdefiniować ciąg wynikowy, który jest zgodny ze standardem ISO 8601 dla uniwersalnego czasu koordynowanego. Właściwość jest tylko do odczytu.|  
|"U" (uniwersalna pełna data/godzina; ciąg formatu standardowego)|<xref:System.Globalization.DateTimeFormatInfo.FullDateTimePattern%2A>, aby zdefiniować ogólny format ciągu wynikowego.|  
|"Y", "y" (rok, miesiąc; ciąg formatu standardowego)|<xref:System.Globalization.DateTimeFormatInfo.YearMonthPattern%2A>, aby zdefiniować ogólny format ciągu wynikowego.|  
|"ddd" (specyfikator formatu niestandardowego)|<xref:System.Globalization.DateTimeFormatInfo.AbbreviatedDayNames%2A>, aby uwzględnić skrócona nazwa dnia tygodnia w ciągu wynikowym.|  
|"g", "gg" (specyfikator formatu niestandardowego)|Wywołania <xref:System.Globalization.DateTimeFormatInfo.GetEraName%2A> metodę, aby wstawić nazwę ery do ciągu wynikowego.|  
|"MMM" (specyfikator formatu niestandardowego)|<xref:System.Globalization.DateTimeFormatInfo.AbbreviatedMonthNames%2A>, aby uwzględnić skrócona nazwa miesiąca w ciągu wynikowym.|  
|"MMMM" (specyfikator formatu niestandardowego)|<xref:System.Globalization.DateTimeFormatInfo.MonthNames%2A> lub <xref:System.Globalization.DateTimeFormatInfo.MonthGenitiveNames%2A>, aby uwzględnić pełną nazwę miesiąca w ciągu wynikowym.|  
|(specyfikator formatu niestandardowego) "t"|<xref:System.Globalization.DateTimeFormatInfo.AMDesignator%2A> lub <xref:System.Globalization.DateTimeFormatInfo.PMDesignator%2A>, aby uwzględnić pierwszy znak oznaczenia AM/PM w ciągu wynikowym.|  
|"tt" (specyfikator formatu niestandardowego)|<xref:System.Globalization.DateTimeFormatInfo.AMDesignator%2A> lub <xref:System.Globalization.DateTimeFormatInfo.PMDesignator%2A>, aby uwzględnić pełne oznaczenia AM/PM w ciągu wynikowym.|  
|":" (specyfikator formatu niestandardowego)|<xref:System.Globalization.DateTimeFormatInfo.TimeSeparator%2A>, aby uwzględnić separator godziny w ciągu wynikowym.|  
|"/" (specyfikator formatu niestandardowego)|<xref:System.Globalization.DateTimeFormatInfo.DateSeparator%2A>, aby uwzględnić separator daty w ciągu wynikowym.|  
  
<a name="Modifying"></a>   
## <a name="modifying-datetimeformatinfo-properties"></a>Modyfikowanie właściwości DateTimeFormatInfo  
 Możesz zmienić ciąg wynikowy utworzony przez ciągów formatu daty i godziny, zmieniając właściwości skojarzone z możliwością zapisu <xref:System.Globalization.DateTimeFormatInfo> obiektu. Aby ustalić, czy <xref:System.Globalization.DateTimeFormatInfo> obiektu jest zapisywalny, użyj <xref:System.Globalization.DateTimeFormatInfo.IsReadOnly%2A> właściwości. Aby dostosować <xref:System.Globalization.DateTimeFormatInfo> obiektu w ten sposób:  
  
1.  Utwórz kopię odczytu/zapisu <xref:System.Globalization.DateTimeFormatInfo> obiektu, której konwencje formatowania, którą chcesz zmodyfikować. (Zobacz [utworzenie wystąpienia obiektu DateTimeFormatInfo](#instantiating) sekcji.)  
  
2.  Zmodyfikuj właściwości lub właściwości, które są używane do tworzenia ciągu pożądanych efektów. (Aby uzyskać informacje na temat formatowania sposób używania metody <xref:System.Globalization.DateTimeFormatInfo> właściwości, aby zdefiniować ciągi wynikowe zobacz poprzednią sekcję [formatowanie ciągów i właściwości DateTimeFormatInfo](#format-strings-and-datetimeformatinfo-properties).)  
  
3.  Użyj niestandardowego <xref:System.Globalization.DateTimeFormatInfo> obiekt zostanie utworzony jako <xref:System.IFormatProvider> argument w wywołaniach do metod formatowania.  
  
 Istnieją dwa inne sposoby, aby zmienić format ciągu wynikowego:  
  
-   Możesz użyć <xref:System.Globalization.CultureAndRegionInfoBuilder> klasy zdefiniować kultury niestandardowej (kulturami kultury, która ma unikatową nazwę i która uzupełnia istniejącą) oraz kultury zastąpienia (taki, który jest używany zamiast określonej kultury). Można zapisać i programowo dostęp do tej kultury, tak jak dowolne <xref:System.Globalization.CultureInfo> obiekt obsługiwany przez program .NET Framework.  
  
-   Jeśli ciąg wynikowy nie jest uwzględniana kultura, nie wykonaj wstępnie zdefiniowany format można użyć niestandardowa data i ciąg formatu godziny. Na przykład, jeśli serializowania danych daty i godziny w formacie rrrrmmddggmmss, można wygenerować ciągu wynikowego, przekazując ciąg formatu niestandardowego, aby <xref:System.DateTime.ToString%28System.String%29?displayProperty=nameWithType> metody, na które można przekonwertować ciąg wyniku do <xref:System.DateTime> wartość przez wywołanie metody <xref:System.DateTime.ParseExact%2A?displayProperty=nameWithType> metody.  
  
### <a name="changing-the-short-date-pattern"></a>Zmienianie wzorca daty krótkiej  
 Poniższy przykład zmienia format ciąg wynikowy utworzony przez ciąg formatu standardowego "d" (daty krótkiej). Zmienia skojarzonego <xref:System.Globalization.DateTimeFormatInfo.ShortDatePattern%2A> właściwość en US lub kultury angielski (Stany Zjednoczone) z jego domyślnej "M/d/rrrr" do "yyyy" — "MM"-"dd" i używa ciągów formatu standardowego "d", aby wyświetlić datę, przed i po <xref:System.Globalization.DateTimeFormatInfo.ShortDatePattern%2A> właściwość zmienione.  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.Class#10](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/cs/example1.cs#10)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.Class#10](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/vb/example1.vb#10)]  
  
### <a name="changing-the-date-separator-character"></a>Zmienianie znaku separatora daty  
 Poniższy przykład umożliwia zmianę znaku separatora daty w <xref:System.Globalization.DateTimeFormatInfo> obiekt, który reprezentuje konwencje formatowania kultury fr-FR. W przykładzie użyto ciągu formatu standardowego "g", aby wyświetlić datę, przed i po <xref:System.Globalization.DateTimeFormatInfo.DateSeparator%2A> zmienić właściwości.  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.Class#12](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/cs/example3.cs#12)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.Class#12](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/vb/example3.vb#12)]  
  
### <a name="changing-day-name-abbreviations-and-the-long-date-pattern"></a>Zmienianie skrótów nazw dni i wzorzec daty długiej  
 W niektórych przypadkach wzorzec daty długiej, który zwykle wyświetla pełny dzień i nazwy miesiąca, wraz z liczbą dzień miesiąca i roku, może być zbyt długa. Poniższy przykład skraca wzorzec daty długiej dla kultury en US zwrócić skrót nazwy dnia znak jeden lub dwa —, następuje numer dnia, skrót nazwy miesiąca i roku. Dzieje się tak, przypisując krótszy skrótów nazw dni do <xref:System.Globalization.DateTimeFormatInfo.AbbreviatedDayNames%2A> tablicy i poprzez zmodyfikowanie ciągu formatu niestandardowego, przypisany do <xref:System.Globalization.DateTimeFormatInfo.LongDatePattern%2A> właściwości. Ma to wpływ na ciągi wynikowe zwrócony przez "D" i ciągi formatu standardowego "f".  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.Class#13](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/cs/example2.cs#13)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.Class#13](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/vb/example2.vb#13)]  
  
 Zazwyczaj zmiana <xref:System.Globalization.DateTimeFormatInfo.LongDatePattern%2A> właściwość wpływa również na <xref:System.Globalization.DateTimeFormatInfo.FullDateTimePattern%2A> właściwość, która z kolei definiuje ciąg wynik zwracany przez ciąg formatu standardowego "F". Aby zachować oryginalne pełnej daty i godziny, przykład ponownie przypisuje oryginalny ciąg formatu niestandardowego, przypisany do <xref:System.Globalization.DateTimeFormatInfo.FullDateTimePattern%2A> właściwości po <xref:System.Globalization.DateTimeFormatInfo.LongDatePattern%2A> właściwość jest modyfikowana.  
  
### <a name="changing-from-a-12-hour-clock-to-a-24-hour-clock"></a>Zmiana z 12-godzinnego zegara na 24-godzinny  
 Dla wielu języków w programie .NET Framework czas jest wyrażany za pomocą zegara 12-godzinnego i oznaczenie AM/PM. W poniższym przykładzie zdefiniowano `ReplaceWith24HourClock` metodę, która zastępuje wszelkie za 12-godzinnym formacie, który jest używany format 24-godzinny format czasu.  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.Class#14](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/cs/example5.cs#14)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.Class#14](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/vb/example5.vb#14)]  
  
 W przykładzie użyto wyrażenia regularnego, aby zmodyfikować ciągu formatu. Definicję wzorca wyrażenia regularnego `@"^(?<openAMPM>\s*t+\s*)? (?(openAMPM) h+(?<nonHours>[^ht]+)$ | \s*h+(?<nonHours>[^ht]+)\s*t+)` jest zdefiniowana w następujący sposób:  
  
|Wzorzec|Opis|  
|-------------|-----------------|  
|`^`|Rozpoczyna dopasowanie na początku ciągu.|  
|`(?<openAMPM>\s*t+\s*)?`|Dopasowanie zera lub jednego wystąpienia zero lub więcej białych znaków, następuje litera "t", jeden lub więcej razy, następuje zero lub więcej znaków odstępu. Ta grupa przechwytywania nosi nazwę `openAMPM`.|  
|`(?(openAMPM) h+(?<nonHours>[^ht]+)$`|Jeśli `openAMPM` grupy jest zgodny, dopasowania litery "h" co najmniej raz następuje jeden lub więcej znaków, które nie są "h" ani "t". Dopasowanie kończy się na końcu ciągu. Wszystkie znaki przechwycone po "h" znajdują się w grupie przechwytywania o nazwie `nonHours`.|  
|`&#124; \s*h+(?<nonHours>[^ht]+)\s*t+)`|Jeśli `openAMPM` grupa nie ma dopasowania, dopasowania litery "h" jeden lub więcej razy, następuje jeden lub więcej znaków, które nie są "h" ani "t", następuje zero lub więcej znaków odstępu. Na koniec dopasowuje jeden lub więcej wystąpień litery "t". Wszystkie znaki przechwycone po "h", a przed-białych znaków i "t" znajdują się w grupie przechwytywania o nazwie `nonHours`.|  
  
 `nonHours` Grupa przechwytywania zawiera minutę i ewentualnie drugiego składnika niestandardowa data i ciąg formatu godziny, wraz z wszystkie symbole, separatora godziny. Wzorzec zamieniania `HH${nonHours}` dołącza podciągu "HH" do tych elementów.  
  
### <a name="displaying-and-changing-the-era-in-a-date"></a>Wyświetlanie i zmienianie ery w dacie  
 W poniższym przykładzie dodano specyfikator formatu niestandardowego "g", aby <xref:System.Globalization.DateTimeFormatInfo.LongDatePattern%2A> właściwości obiektu, który reprezentuje konwencje formatowania kultury en US. To dodawanie ma wpływ na następujące trzy ciągi standardowego formatu:  
  
-   Ciąg formatu standardowego "D" (daty długiej), który mapuje bezpośrednio do <xref:System.Globalization.DateTimeFormatInfo.LongDatePattern%2A> właściwości.  
  
-   "f" (pełna data / krótki czas) ciąg standardowego formatu, który daje ciąg wynikowy, który łączy podciągów produkowane przez <xref:System.Globalization.DateTimeFormatInfo.LongDatePattern%2A> i <xref:System.Globalization.DateTimeFormatInfo.ShortTimePattern%2A> właściwości.  
  
-   "F" (pełna data / godzina długa) standardowy ciąg formatu, który mapuje bezpośrednio do <xref:System.Globalization.DateTimeFormatInfo.FullDateTimePattern%2A> właściwości. Ponieważ firma Microsoft ma nie jawnie ustawić wartość tej właściwości, jest ona generowana dynamicznie przez złączenie <xref:System.Globalization.DateTimeFormatInfo.LongDatePattern%2A> i <xref:System.Globalization.DateTimeFormatInfo.LongTimePattern%2A> właściwości.  
  
 W przykładzie pokazano również sposób zmienić nazwę ery dla kultury, na których kalendarza ma jedną erę. W takim przypadku kultury en US używa kalendarz gregoriański, który jest reprezentowany przez <xref:System.Globalization.GregorianCalendar> obiektu. <xref:System.Globalization.GregorianCalendar> Klasa obsługuje jedną erę nazwa N.E. (Tak). W przykładzie zmieniono nazwę ery r. (Typowe Era), zastępując specyfikator formatu niestandardowego "g" w ciągu formatu przypisane do <xref:System.Globalization.DateTimeFormatInfo.FullDateTimePattern%2A> właściwość z ciągiem literału. Użycie literału ciągu jest to konieczne, ponieważ zwykle zwraca nazwę ery <xref:System.Globalization.DateTimeFormatInfo.GetEraName%2A> metody z prywatnych danych w tabelach kultury dostarczonych przez .NET Framework lub systemu operacyjnego Windows.  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.Class#11](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/cs/example4.cs#11)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.Class#11](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/vb/example4.vb#11)]  
  
## <a name="parsing-date-and-time-strings"></a>Analiza ciągów daty i godziny  
 Podczas analizowania polega na konwersji ciąg reprezentujący datę i godzinę na <xref:System.DateTime> lub <xref:System.DateTimeOffset> wartość. Oba typy obejmują `Parse`, `TryParse`, `ParseExact`, i `TryParseExact` metod do obsługi operacji analizy. `Parse` i `TryParse` konwertują ciąg znaków, jaką może mieć wiele formatów, natomiast `ParseExact` i `TryParseExact` wymagają, że ciąg ma zdefiniowany format lub formatu. W przypadku niepowodzenia operacji analizowania `Parse` i `ParseExact` zgłosić wyjątek, natomiast `TryParse` i `TryParseExact` zwracają `false`.  
  
 Podczas analizowania metody jawnie lub niejawenie używają <xref:System.Globalization.DateTimeStyles> wartości wyliczenia, aby określić, które elementy stylu (takie jak wiodące, końcowe lub wewnętrzny białe znaki) może znajdować się w ciągu, który ma być analizowany i jak interpretować przeanalizowany ciąg lub wszelkie brakujące elementy. Jeśli nie podasz <xref:System.Globalization.DateTimeStyles> wartość po wywołaniu `Parse` lub `TryParse` metody, wartość domyślna to <xref:System.Globalization.DateTimeStyles.AllowWhiteSpaces?displayProperty=nameWithType>, czyli stylu złożony, który zawiera <xref:System.Globalization.DateTimeStyles.AllowLeadingWhite?displayProperty=nameWithType>, <xref:System.Globalization.DateTimeStyles.AllowTrailingWhite?displayProperty=nameWithType>, i <xref:System.Globalization.DateTimeStyles.AllowInnerWhite?displayProperty=nameWithType> flag. Aby uzyskać `ParseExact` i `TryParseExact` metody, wartość domyślna to <xref:System.Globalization.DateTimeStyles.None?displayProperty=nameWithType>; ciąg wejściowy musi dokładnie odpowiadają określonego niestandardowa data i godzina w ciągu formatu.  
  
 Podczas analizowania metody, dodatkowo niejawnie lub jawnie za pomocą <xref:System.Globalization.DateTimeFormatInfo> obiekt, który definiuje określone symbole i wzorce, które mogą wystąpić w ciągu, który ma być analizowany. Jeśli nie podasz <xref:System.Globalization.DateTimeFormatInfo> obiektu <xref:System.Globalization.DateTimeFormatInfo> obiekt bieżącej kultury wątku jest używane domyślnie. Aby uzyskać więcej informacji na temat analizowania ciągów daty i godziny, zobacz poszczególne metody analizy, takie jak <xref:System.DateTime.Parse%2A?displayProperty=nameWithType>, <xref:System.DateTime.TryParse%2A?displayProperty=nameWithType>, <xref:System.DateTimeOffset.ParseExact%2A?displayProperty=nameWithType>, i <xref:System.DateTimeOffset.TryParseExact%2A?displayProperty=nameWithType>.  
  
 Poniższy przykład ilustruje charakter wrażliwość na ustawienia kulturowe ciągi analizy daty i godziny. Próbuje przeanalizować dwa ciągi daty przy użyciu konwencji en US, en-GB, fr-FR i kultur fi-FI. Daty, który jest interpretowany jako 8/18/2014 w en US kulturze zgłasza <xref:System.FormatException> wyjątek w pozostałych trzech kulturami ponieważ 18 jest interpretowana jako numer miesiąca. 2015-1-2 jest analizowany jako drugi dzień pierwszego miesiąca w kulturze en US, ale jako pierwszego dnia drugiego miesiąca w pozostałych kultur.  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.Class#15](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/cs/parsing1.cs#15)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.Class#15](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/vb/parsing1.vb#15)]  
  
 Ciągi daty i godziny są zazwyczaj przeanalizować dwóch powodów:  
  
-   Aby przekonwertować danych wejściowych użytkownika do wartości daty i godziny.  
  
-   Aby obustronnie konwertować wartość daty i godziny oznacza to do deserializacji wartości daty i godziny, który został wcześniej serializowany jako ciąg.  
  
 W poniższych sekcjach omówiono te dwie operacje bardziej szczegółowo.  
  
### <a name="parsing-user-strings"></a>Analiza ciągów użytkownika  
 Podczas analizy ciągów daty i godziny, w danych wejściowych przez użytkownika, użytkownik powinien zawsze tworzyć wystąpienie <xref:System.Globalization.DateTimeFormatInfo> obiekt, który odzwierciedla ustawienia kultury użytkownika, w tym wszelkie dostosowania, które mogły zostać wprowadzone użytkownika. W przeciwnym razie obiektu daty i godziny może mieć nieprawidłowe wartości. Aby uzyskać informacje dotyczące tworzenia wystąpienia <xref:System.Globalization.DateTimeFormatInfo> obiekt, który odzwierciedla dostosowania kultury użytkownika, zobacz [DateTimeFormatInfo i dane dynamiczne](#dynamic) sekcji.  
  
 Poniższy przykład ilustruje różnicę między operacji analizowania, która odzwierciedla ustawienia kultury użytkownika oraz jedną, która nie ma. W tym przypadku domyślnej kultury systemu jest en US, ale użytkownik został użyty w Panelu sterowania **Region i język** Zmiana wzorca daty krótkiej z domyślnej "M/d/rrrr" na "RR/MM/dd". Gdy użytkownik wpisuje ciąg, który odzwierciedla ustawienia użytkownika, a ten ciąg jest analizowany przy <xref:System.Globalization.DateTimeFormatInfo> obiektu odzwierciedlający ustawienia użytkownika (zastąpień), operacja analizowania zwraca odpowiedni wynik. Jednak, jeśli ciąg jest analizowany przy <xref:System.Globalization.DateTimeFormatInfo> obiekt, który odzwierciedla ustawienia kultury standardowa en US, analizy, metoda zgłasza wyjątek <xref:System.FormatException> wyjątków ponieważ interpretuje 14 jako numer miesiąca roku nie dwie ostatnie cyfry.  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.Class#16](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/cs/parse2.cs#16)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.Class#16](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/vb/parse2.vb#16)]  
  
### <a name="serializing-and-deserializing-date-and-time-data"></a>Serializacja i deserializacja danych daty i godziny  
 Serializowane dane daty i godziny można oczekiwać, wykonują rundę; oznacza to, że wszystkie serializacji i zdeserializowany wartości powinny być identyczne. Jeśli wartość daty i godziny reprezentuje jeden moment w czasie, po deserializacji wartości powinny reprezentować ten sam moment w czasie, niezależnie od kultury i strefy czasowej systemu, na którym została przywrócona. Aby dane obustronne daty i godziny pomyślnie, należy użyć konwencji kultury niezmiennej, która jest zwracana przez <xref:System.Globalization.DateTimeFormatInfo.InvariantInfo%2A> właściwości do generowania i analizowania danych. Operacji formatowania i analizowania nigdy nie powinny odzwierciedlać Konwencji kultury domyślnej. Jeśli używasz domyślne ustawienia kultury, przenośność danych jest ściśle ograniczona. może być pomyślnie zdeserializowany tylko w wątku, którego ustawienia specyficzne dla kultury są identyczne z tymi wątku, na którym został wydany. W niektórych przypadkach oznacza to, że dane nie może nawet być pomyślnie serializacji i deserializacji w tym samym systemie.  
  
 W przypadku znaczący składnik godziny wartości daty i godziny, powinna również być konwertowana na czas UTC i serializacji przy użyciu "o" lub "r" [ciąg formatu standardowego](~/docs/standard/base-types/standard-date-and-time-format-strings.md). Danych czasowych można przywrócić przez wywołanie metody analizowania i przekazanie do niej ciąg odpowiedni format wraz z niezmienną kulturę, co `provider` argumentu.  
  
 Poniższy przykład ilustruje proces obustronne konwertowanie wartości daty i godziny. To szereguje daty i godziny w systemie, która przestrzega Stanów Zjednoczonych Czas pacyficzny i którego bieżącą kulturą jest en US.  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.Class#17](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/cs/serialize1.cs#17)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.Class#17](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/vb/serialize1.vb#17)]  
  
 Deserializuje jej danych w systemie w strefie czasowej Bruksela, Kopenhaga, Madryt i Paryż i którego bieżącą kulturą jest np. Przywrócona Data jest późniejsza niż data oryginalnej, która odzwierciedla korekta strefy czasowej z ośmiu godzin za UTC jedną godzinę wcześniej przed UTC 9 godzin. Pierwotna data i przywrócony Data reprezentują ten sam moment w czasie.  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.Class#18](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/cs/serialize2.cs#18)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.Class#18](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/vb/serialize2.vb#18)]  
  
   
  
## Examples  
 W poniższym przykładzie użyto odbicia, można pobrać właściwości <xref:System.Globalization.DateTimeFormatInfo> obiektu dla kultury angielski (Stany Zjednoczone). On służy do wyświetlania wartości tych właściwości, które zawierają ciągi formatów niestandardowych i używa tych ciągów do wyświetlania, w formacie daty.  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.Class#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/cs/format1.cs#5)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.Class#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/vb/format1.vb#5)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.DateTime" />
    <altmember cref="T:System.Globalization.Calendar" />
    <altmember cref="T:System.Globalization.CultureInfo" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DateTimeFormatInfo ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.DateTimeFormatInfo.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DateTimeFormatInfo();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie zapisywalny <see cref="T:System.Globalization.DateTimeFormatInfo" /> klasy, czyli niezależny od kultury (niezmiennej).</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten konstruktor tworzy <xref:System.Globalization.DateTimeFormatInfo> obiekt, który reprezentuje dane daty i godziny niezmiennej kultury. Aby utworzyć <xref:System.Globalization.DateTimeFormatInfo> obiektu dla określonej kultury, Utwórz <xref:System.Globalization.CultureInfo> obiektu dla tej kultury i pobieranie <xref:System.Globalization.DateTimeFormatInfo> obiektu zwróconego przez jego <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType> właściwości.  
  
 Właściwości <xref:System.Globalization.DateTimeFormatInfo> można zmodyfikować obiekt utworzony przez tego konstruktora. Jednak nie można zmodyfikować <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> właściwość, ponieważ niezmiennej kultury obsługuje zlokalizowaną wersję kalendarz gregoriański. Do utworzenia <xref:System.Globalization.DateTimeFormatInfo> obiektu, który używa określonego kalendarza, trzeba utworzyć <xref:System.Globalization.CultureInfo> obiekt, który obsługuje kalendarza i przypisać kalendarz według którego <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> właściwość <xref:System.Globalization.DateTimeFormatInfo> obiektu zwróconego przez <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType> właściwości .  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Globalization.CultureInfo.DateTimeFormat" />
      </Docs>
    </Member>
    <Member MemberName="AbbreviatedDayNames">
      <MemberSignature Language="C#" Value="public string[] AbbreviatedDayNames { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] AbbreviatedDayNames" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.DateTimeFormatInfo.AbbreviatedDayNames" />
      <MemberSignature Language="VB.NET" Value="Public Property AbbreviatedDayNames As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::String ^&gt; ^ AbbreviatedDayNames { cli::array &lt;System::String ^&gt; ^ get(); void set(cli::array &lt;System::String ^&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.AbbreviatedDayNames : string[] with get, set" Usage="System.Globalization.DateTimeFormatInfo.AbbreviatedDayNames" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia tablicę jednowymiarową typu <see cref="T:System.String" /> zawierające specyficzne dla kultury skrócone nazwy dni tygodnia.</summary>
        <value>Jednowymiarowa tablica typu <see cref="T:System.String" /> zawierające specyficzne dla kultury skrócone nazwy dni tygodnia. Tablica <see cref="P:System.Globalization.DateTimeFormatInfo.InvariantInfo" /> zawiera "Sun", "Mon", "Wtorek", "Środa", "Czwartek", "Od poniedziałku do piątku" i "SO".</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli ustawienie tej właściwości, tablicy musi być jednowymiarowy i musi mieć dokładnie siedem elementów. Pierwszy element (element o indeksie zero) reprezentuje pierwszy dzień tygodnia w kalendarzu, zdefiniowane przez <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> właściwości.  
  
 Jeśli ciąg niestandardowego formatu zawiera specyfikator formatu "ddd" <xref:System.DateTime.ToString%2A?displayProperty=nameWithType> lub <xref:System.DateTimeOffset.ToString%2A> metoda zawiera odpowiedniej składowej klasy <xref:System.Globalization.DateTimeFormatInfo.AbbreviatedDayNames%2A> tablicy zamiast "ddd" w ciągu wynikowym.  
  
 Ta właściwość ma wpływ, jeśli wartość <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> zmiany właściwości. Jeśli wybrane <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> nie nie pomocy technicznej skrócone nazwy dni, tablica zawiera nazwy cały dzień.  
  
   
  
## Examples  
 Poniższy przykład tworzy odczytu/zapisu <xref:System.Globalization.CultureInfo> obiekt, który reprezentuje kultury angielski (Stany Zjednoczone), a następnie przypisuje skrócone nazwy dni, aby jego <xref:System.Globalization.DateTimeFormatInfo.AbbreviatedDayNames%2A> właściwości. Następnie używa specyfikator formatu "ddd" w do wyświetlenia reprezentację daty przez jeden tydzień od 28 maja 2014 r.  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.AbbreviatedDayNames#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.abbreviateddaynames/cs/abbreviateddaynames1.cs#1)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.AbbreviatedDayNames#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.abbreviateddaynames/vb/abbreviateddaynames1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Właściwość jest ustawiana na <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">Właściwość jest ustawiany na tablicy wielowymiarowej lub zawierający długości, która nie jest dokładnie 7.</exception>
        <exception cref="T:System.InvalidOperationException">Ustawiono właściwość i <see cref="T:System.Globalization.DateTimeFormatInfo" /> obiekt jest tylko do odczytu.</exception>
        <altmember cref="P:System.Globalization.DateTimeFormatInfo.DayNames" />
        <altmember cref="P:System.Globalization.DateTimeFormatInfo.AbbreviatedMonthNames" />
        <altmember cref="M:System.Globalization.DateTimeFormatInfo.GetAbbreviatedDayName(System.DayOfWeek)" />
      </Docs>
    </Member>
    <Member MemberName="AbbreviatedMonthGenitiveNames">
      <MemberSignature Language="C#" Value="public string[] AbbreviatedMonthGenitiveNames { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] AbbreviatedMonthGenitiveNames" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.DateTimeFormatInfo.AbbreviatedMonthGenitiveNames" />
      <MemberSignature Language="VB.NET" Value="Public Property AbbreviatedMonthGenitiveNames As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::String ^&gt; ^ AbbreviatedMonthGenitiveNames { cli::array &lt;System::String ^&gt; ^ get(); void set(cli::array &lt;System::String ^&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.AbbreviatedMonthGenitiveNames : string[] with get, set" Usage="System.Globalization.DateTimeFormatInfo.AbbreviatedMonthGenitiveNames" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia ciąg na tablicę skrócone nazwy miesięcy skojarzone z bieżącym <see cref="T:System.Globalization.DateTimeFormatInfo" /> obiektu.</summary>
        <value>Tablica skrócone nazwy miesięcy.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 W przypadku niektórych języków nazwę miesiąca, który jest częścią daty pojawia się w przypadku genitive. Na przykład daty, ru-RU lub kultury rosyjski (Rosja) składa się z numer dnia i miesiąca genitive nazwy, np. 1 Января (od 1 stycznia). Dla tych języków, jeśli ciąg niestandardowego formatu zawiera specyfikator formatu "MMM" <xref:System.DateTime.ToString%2A?displayProperty=nameWithType> lub <xref:System.DateTimeOffset.ToString%2A> metoda zawiera odpowiedniej składowej klasy <xref:System.Globalization.DateTimeFormatInfo.AbbreviatedMonthGenitiveNames%2A> tablicy zamiast "MMM" w ciągu wynikowym.  
  
 W operacji zestawu, tablicy musi być jednowymiarowa dokładnie 13 elementów, ponieważ <xref:System.Globalization.Calendar> obiektów pomieścić kalendarzy 13-miesięcznych. Kalendarze, które mają 12 miesięcy, powinna być elementem 13 <xref:System.String.Empty?displayProperty=nameWithType>. Pierwszy element (element o indeksie zero) reprezentuje pierwszy miesiąc roku, zdefiniowane przez <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> właściwości.  
  
 Jeśli ustawisz <xref:System.Globalization.DateTimeFormatInfo.AbbreviatedMonthGenitiveNames%2A> właściwość, należy także ustawić <xref:System.Globalization.DateTimeFormatInfo.AbbreviatedMonthNames%2A> właściwości.  
  
   
  
## Examples  
 Poniższy przykład tworzy odczytu/zapisu <xref:System.Globalization.CultureInfo> obiekt, który reprezentuje kultury angielski (Stany Zjednoczone), a następnie przypisuje skrócone nazwy miesięcy genitive do jego <xref:System.Globalization.DateTimeFormatInfo.AbbreviatedMonthNames%2A> i <xref:System.Globalization.DateTimeFormatInfo.AbbreviatedMonthGenitiveNames%2A> właściwości. Następnie wyświetla reprezentację ciągu daty, które zawierają skrócona nazwa miesiąca każdego miesiąca w kalendarzu obsługiwanej kultury.  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.AbbreviatedMonthGenitiveNames#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.abbreviatedmonthgenitivenames/cs/abbreviatedmonthnames1.cs#1)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.AbbreviatedMonthGenitiveNames#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.abbreviatedmonthgenitivenames/vb/abbreviatedmonthnames1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">W operacji zestawu tablica ma charakter wielowymiarowy lub o długości, który nie jest dokładnie 13.</exception>
        <exception cref="T:System.ArgumentNullException">W operacji zestawu, tablica lub jeden z elementów tablicy jest <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">W operacji zestawu, bieżący <see cref="T:System.Globalization.DateTimeFormatInfo" /> obiekt jest tylko do odczytu.</exception>
        <altmember cref="P:System.Globalization.DateTimeFormatInfo.MonthGenitiveNames" />
        <altmember cref="P:System.Globalization.DateTimeFormatInfo.AbbreviatedMonthNames" />
      </Docs>
    </Member>
    <Member MemberName="AbbreviatedMonthNames">
      <MemberSignature Language="C#" Value="public string[] AbbreviatedMonthNames { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] AbbreviatedMonthNames" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.DateTimeFormatInfo.AbbreviatedMonthNames" />
      <MemberSignature Language="VB.NET" Value="Public Property AbbreviatedMonthNames As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::String ^&gt; ^ AbbreviatedMonthNames { cli::array &lt;System::String ^&gt; ^ get(); void set(cli::array &lt;System::String ^&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.AbbreviatedMonthNames : string[] with get, set" Usage="System.Globalization.DateTimeFormatInfo.AbbreviatedMonthNames" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia tablicę jednowymiarową ciągu, która zawiera skrócone nazwy miesięcy specyficzne dla kultury.</summary>
        <value>Jednowymiarowa tablica ciągu, z elementami 13 zawierającą skrócone nazwy miesięcy specyficzne dla kultury. Kalendarzy, 12-miesięcznego 13 element tablicy jest pusty ciąg. Tablica <see cref="P:System.Globalization.DateTimeFormatInfo.InvariantInfo" /> zawiera "Sty", "Lutego", "Marca", "Kwi", "Maja", "Czy", "Lip", "Sie", "Wrz", "Oct", "Lis", "Gru" i "".</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli ustawisz tę właściwość, tablicy musi być jednowymiarowa dokładnie 13 elementów. <xref:System.Globalization.Calendar> obiekty pomieścić kalendarzy z 13 miesięcy. Pierwszy element (element o indeksie zero) reprezentuje pierwszy miesiąc roku, zdefiniowane przez <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> właściwości.  
  
 Jeśli ustawisz <xref:System.Globalization.DateTimeFormatInfo.AbbreviatedMonthNames%2A> właściwość, należy także ustawić <xref:System.Globalization.DateTimeFormatInfo.AbbreviatedMonthGenitiveNames%2A> właściwości. <xref:System.Globalization.DateTimeFormatInfo.AbbreviatedMonthNames%2A> i <xref:System.Globalization.DateTimeFormatInfo.AbbreviatedMonthGenitiveNames%2A> właściwości są używane do formatowania daty przy użyciu następujących ciągów formatu:  
  
-   Standardowa Data i godzina, o których ciąg formatu, aliasy niestandardowego formatu ciągu, który zawiera "MMM" specyfikatora formatu.  
  
-   Niestandardowa data i godzina ciąg formatu, który zawiera "MMM" specyfikatora formatu.  
  
 Ta właściwość ma wpływ, jeśli wartość <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> zmiany właściwości. Jeśli wybrane <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> nie nie pomocy technicznej skrócone nazwy miesięcy, tablica zawiera pełne nazwy miesięcy.  
  
   
  
## Examples  
 Poniższy przykład tworzy odczytu/zapisu <xref:System.Globalization.CultureInfo> obiekt, który reprezentuje kultury angielski (Stany Zjednoczone), a następnie przypisuje skrócone nazwy miesięcy genitive do jego <xref:System.Globalization.DateTimeFormatInfo.AbbreviatedMonthNames%2A> i <xref:System.Globalization.DateTimeFormatInfo.AbbreviatedMonthGenitiveNames%2A> właściwości. Następnie wyświetla reprezentację ciągu daty, które zawierają skrócona nazwa dnia każdego miesiąca w kalendarzu obsługiwanej kultury.  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.AbbreviatedMonthGenitiveNames#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.abbreviatedmonthgenitivenames/cs/abbreviatedmonthnames1.cs#1)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.AbbreviatedMonthGenitiveNames#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.abbreviatedmonthgenitivenames/vb/abbreviatedmonthnames1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Właściwość jest ustawiana na <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">Właściwość jest ustawiany na tablicy wielowymiarowej lub zawierający długości, która nie jest dokładnie 13.</exception>
        <exception cref="T:System.InvalidOperationException">Ustawiono właściwość i <see cref="T:System.Globalization.DateTimeFormatInfo" /> obiekt jest tylko do odczytu.</exception>
        <altmember cref="P:System.Globalization.DateTimeFormatInfo.AbbreviatedDayNames" />
        <altmember cref="P:System.Globalization.DateTimeFormatInfo.MonthNames" />
        <altmember cref="M:System.Globalization.DateTimeFormatInfo.GetAbbreviatedMonthName(System.Int32)" />
        <altmember cref="P:System.Globalization.DateTimeFormatInfo.AbbreviatedMonthGenitiveNames" />
      </Docs>
    </Member>
    <Member MemberName="AMDesignator">
      <MemberSignature Language="C#" Value="public string AMDesignator { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AMDesignator" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.DateTimeFormatInfo.AMDesignator" />
      <MemberSignature Language="VB.NET" Value="Public Property AMDesignator As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ AMDesignator { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.AMDesignator : string with get, set" Usage="System.Globalization.DateTimeFormatInfo.AMDesignator" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia oznaczenie ciągu godzin, które są "ante meridiem" (przed południem).</summary>
        <value>Oznaczenie ciągu godzin, które są ante meridiem. Wartość domyślna dla <see cref="P:System.Globalization.DateTimeFormatInfo.InvariantInfo" /> jest "AM".</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Globalization.DateTimeFormatInfo.AMDesignator%2A> Jest używana dla wszystkich godzin z zakresu od 0:00:00 (północ) do 11:59:59.999.  
  
 Jeśli ciąg niestandardowego formatu zawiera specyfikator formatu "tt", a czas przed południem, <xref:System.DateTime.ToString%2A?displayProperty=nameWithType> lub <xref:System.DateTimeOffset.ToString%2A> metody zawiera wartość <xref:System.Globalization.DateTimeFormatInfo.AMDesignator%2A> właściwości zamiast "tt" w ciągu wynikowym. Jeśli ciąg formatu niestandardowego, który zawiera specyfikator formatu niestandardowego "t", tylko pierwszy znak <xref:System.Globalization.DateTimeFormatInfo.AMDesignator%2A> wartość właściwości jest dołączony. Należy użyć "tt" w przypadku języków, dla których jest konieczne utrzymywanie rozróżnienie między rano and P.M. Przykładem jest japońskich, w którym rano and P.M. oznaczenia różnią się w drugim znakiem zamiast pierwszego znaku.  
  
 Dla kultury, które nie korzystają z rano oznaczenie, ta właściwość zwraca pusty ciąg.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Właściwość jest ustawiana na <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">Ustawiono właściwość i <see cref="T:System.Globalization.DateTimeFormatInfo" /> obiekt jest tylko do odczytu.</exception>
        <altmember cref="P:System.Globalization.DateTimeFormatInfo.PMDesignator" />
      </Docs>
    </Member>
    <Member MemberName="Calendar">
      <MemberSignature Language="C#" Value="public System.Globalization.Calendar Calendar { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Globalization.Calendar Calendar" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.DateTimeFormatInfo.Calendar" />
      <MemberSignature Language="VB.NET" Value="Public Property Calendar As Calendar" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Globalization::Calendar ^ Calendar { System::Globalization::Calendar ^ get(); void set(System::Globalization::Calendar ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Calendar : System.Globalization.Calendar with get, set" Usage="System.Globalization.DateTimeFormatInfo.Calendar" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Globalization.Calendar</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia kalendarza do użycia dla bieżącej kultury.</summary>
        <value>Kalendarz przeznaczony do bieżącej kultury. Wartość domyślna dla <see cref="P:System.Globalization.DateTimeFormatInfo.InvariantInfo" /> jest <see cref="T:System.Globalization.GregorianCalendar" /> obiektu.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> Właściwość akceptuje tylko kalendarze, które są prawidłowe dla kultury, która jest skojarzona z <xref:System.Globalization.DateTimeFormatInfo> obiektu. <xref:System.Globalization.CultureInfo.OptionalCalendars%2A?displayProperty=nameWithType> Właściwość określa kalendarze, które mogą być używane przez daną kulturę, a <xref:System.Globalization.CultureInfo.Calendar%2A?displayProperty=nameWithType> właściwość określa kalendarz domyślny dla kultury.  

[!INCLUDE[japanese-era-note](~/includes/calendar-era.md)]

Zmiana wartości tej właściwości wpływa również następujące właściwości: <xref:System.Globalization.DateTimeFormatInfo.MonthNames%2A>, <xref:System.Globalization.DateTimeFormatInfo.AbbreviatedMonthNames%2A>, <xref:System.Globalization.DateTimeFormatInfo.DayNames%2A>, <xref:System.Globalization.DateTimeFormatInfo.AbbreviatedDayNames%2A>, <xref:System.Globalization.DateTimeFormatInfo.CalendarWeekRule%2A>, <xref:System.Globalization.DateTimeFormatInfo.FirstDayOfWeek%2A>, <xref:System.Globalization.DateTimeFormatInfo.FullDateTimePattern%2A>, <xref:System.Globalization.DateTimeFormatInfo.LongDatePattern%2A>, <xref:System.Globalization.DateTimeFormatInfo.ShortDatePattern%2A>, <xref:System.Globalization.DateTimeFormatInfo.YearMonthPattern%2A> , a <xref:System.Globalization.DateTimeFormatInfo.MonthDayPattern%2A>.  
  
 Na przykład, jeśli kultury bieżącego wątku jest japońskiego, ta właściwość akceptuje <xref:System.Globalization.JapaneseCalendar>, <xref:System.Globalization.GregorianCalendarTypes.Localized><xref:System.Globalization.GregorianCalendar>, lub <xref:System.Globalization.GregorianCalendarTypes.USEnglish><xref:System.Globalization.GregorianCalendar>. Gdy <xref:System.Globalization.JapaneseCalendar> jest używany domyślny daty długiej specyfikatora "gg y '\x5e74 'M' \x6708 miał"\x65e5"". Podczas <xref:System.Globalization.GregorianCalendarTypes.Localized><xref:System.Globalization.GregorianCalendar>, jest używany domyślny daty długiej specyfikatora "yyyy '\x5e74 'M' \x6708 miał"\x65e5"".  
  
   
  
## Examples  
 W poniższym przykładzie zdefiniowano `ChangeCalendar` metodę, która zmienia bieżący kalendarz kultury do określonego kalendarza, chyba że jest on już bieżący kalendarz, lub jeśli nie jest obsługiwany przez kulturę. Tworzy kod, który wywołuje metodę <xref:System.Globalization.CultureInfo> obiekt, który reprezentuje kulturę arabski (Egipt), a następnie próbuje najpierw zmienić jego kalendarz na Kalendarz japoński. Ponieważ Kalendarz japoński nie jest obsługiwany, metoda sprawia, że nie zmieniać kalendarz kultury. Jednak ponieważ um al-Qura kalendarz jest elementem członkowskim <xref:System.Globalization.CultureInfo.OptionalCalendars%2A?displayProperty=nameWithType> kolekcji, metoda zakończy się sukcesem co bieżący kalendarz kultury ar np.  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.Calendar#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Globalization.DateTimeFormatInfo.Calendar/cs/CalendarTest1.cs#1)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.Calendar#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Globalization.DateTimeFormatInfo.Calendar/vb/CalendarTest1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Właściwość jest ustawiana na <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">Właściwość jest ustawiana na <see cref="T:System.Globalization.Calendar" /> obiekt, który jest nieprawidłowy dla bieżącej kultury.</exception>
        <exception cref="T:System.InvalidOperationException">Ustawiono właściwość i <see cref="T:System.Globalization.DateTimeFormatInfo" /> obiekt jest tylko do odczytu.</exception>
        <altmember cref="T:System.Globalization.Calendar" />
      </Docs>
    </Member>
    <Member MemberName="CalendarWeekRule">
      <MemberSignature Language="C#" Value="public System.Globalization.CalendarWeekRule CalendarWeekRule { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Globalization.CalendarWeekRule CalendarWeekRule" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.DateTimeFormatInfo.CalendarWeekRule" />
      <MemberSignature Language="VB.NET" Value="Public Property CalendarWeekRule As CalendarWeekRule" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Globalization::CalendarWeekRule CalendarWeekRule { System::Globalization::CalendarWeekRule get(); void set(System::Globalization::CalendarWeekRule value); };" />
      <MemberSignature Language="F#" Value="member this.CalendarWeekRule : System.Globalization.CalendarWeekRule with get, set" Usage="System.Globalization.DateTimeFormatInfo.CalendarWeekRule" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Globalization.CalendarWeekRule</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość określającą, reguły, które służy do określania pierwszy tydzień kalendarza w roku.</summary>
        <value>Wartość, która określa pierwszy tydzień kalendarza w roku. Wartość domyślna dla <see cref="P:System.Globalization.DateTimeFormatInfo.InvariantInfo" /> jest <see cref="F:System.Globalization.CalendarWeekRule.FirstDay" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość ma wpływ, jeśli wartość <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> zmiany właściwości.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Właściwość jest ustawiany na wartość, która nie jest prawidłowym <see cref="T:System.Globalization.CalendarWeekRule" /> wartość.</exception>
        <exception cref="T:System.InvalidOperationException">W operacji zestawu, bieżący <see cref="T:System.Globalization.DateTimeFormatInfo" /> obiekt jest tylko do odczytu.</exception>
        <altmember cref="T:System.Globalization.CalendarWeekRule" />
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public object Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.DateTimeFormatInfo.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Function Clone () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ Clone();" />
      <MemberSignature Language="F#" Value="abstract member Clone : unit -&gt; obj&#xA;override this.Clone : unit -&gt; obj" Usage="dateTimeFormatInfo.Clone " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ICloneable.Clone</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Tworzy kopię pobieżną <see cref="T:System.Globalization.DateTimeFormatInfo" />.</summary>
        <returns>Nowy <see cref="T:System.Globalization.DateTimeFormatInfo" /> obiekt jest kopiowany z oryginalnym <see cref="T:System.Globalization.DateTimeFormatInfo" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Klon jest zapisywalny nawet wtedy, gdy oryginalny <xref:System.Globalization.DateTimeFormatInfo> obiekt jest tylko do odczytu. W związku z tym można zmodyfikować właściwości klonu wzorami zdefiniowanych przez użytkownika.  
  
 Płytką kopię obiektu jest kopią tylko obiekt. Jeśli obiekt zawiera odwołania do innych obiektów, płytka kopia nie tworzy kopii obiektów, do którego się odwołuje. Odwołuje się do obiektów, oryginalnym zamiast tego. Natomiast głębokie kopiowanie obiektu tworzy kopię obiektu i wszystko bezpośrednio lub pośrednio odwołuje się ten obiekt kopię.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CurrentInfo">
      <MemberSignature Language="C#" Value="public static System.Globalization.DateTimeFormatInfo CurrentInfo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Globalization.DateTimeFormatInfo CurrentInfo" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.DateTimeFormatInfo.CurrentInfo" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property CurrentInfo As DateTimeFormatInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Globalization::DateTimeFormatInfo ^ CurrentInfo { System::Globalization::DateTimeFormatInfo ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CurrentInfo : System.Globalization.DateTimeFormatInfo" Usage="System.Globalization.DateTimeFormatInfo.CurrentInfo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Globalization.DateTimeFormatInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera tylko do odczytu <see cref="T:System.Globalization.DateTimeFormatInfo" /> obiektów, które formatuje wartości na podstawie bieżącej kultury.</summary>
        <value>Tylko do odczytu <see cref="T:System.Globalization.DateTimeFormatInfo" /> na podstawie obiektu <see cref="T:System.Globalization.CultureInfo" /> obiektu dla bieżącego wątku.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Globalization.DateTimeFormatInfo> Obiektu zwróconego przez <xref:System.Globalization.DateTimeFormatInfo.CurrentInfo%2A> właściwość odzwierciedla napisanie użytkownika.  
  
   
  
## Examples  
 W poniższym przykładzie użyto <xref:System.Globalization.DateTimeFormatInfo.CurrentInfo%2A> właściwość służąca do pobierania <xref:System.Globalization.DateTimeFormatInfo> obiekt, który reprezentuje konwencje formatowania bieżącej kultury, czyli w tym przypadku kultury en US. Następnie wyświetla ciąg formatu i ciągu wynikowego dla sześciu właściwości formatowania.  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.CurrentInfo#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Globalization.DateTimeFormatInfo.CurrentInfo/cs/CurrentInfo1.cs#1)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.CurrentInfo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Globalization.DateTimeFormatInfo.CurrentInfo/vb/CurrentInfo1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Globalization.CultureInfo" />
      </Docs>
    </Member>
    <Member MemberName="DateSeparator">
      <MemberSignature Language="C#" Value="public string DateSeparator { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DateSeparator" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.DateTimeFormatInfo.DateSeparator" />
      <MemberSignature Language="VB.NET" Value="Public Property DateSeparator As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DateSeparator { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DateSeparator : string with get, set" Usage="System.Globalization.DateTimeFormatInfo.DateSeparator" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia ciąg, który oddziela składniki daty, oznacza to, rok, miesiąc i dzień.</summary>
        <value>Ciąg, który oddziela składniki daty, oznacza to, rok, miesiąc i dzień. Wartość domyślna dla <see cref="P:System.Globalization.DateTimeFormatInfo.InvariantInfo" /> jest "/".</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli ciąg niestandardowego formatu zawiera specyfikator formatu "/" <xref:System.DateTime.ToString%2A?displayProperty=nameWithType> metoda Wyświetla wartość <xref:System.Globalization.DateTimeFormatInfo.DateSeparator%2A> zamiast "/" w ciągu wynikowym.  
  
 <xref:System.Globalization.DateTimeFormatInfo.DateSeparator%2A> Właściwość definiuje ciąg, który zastępuje separatora daty ("/" Niestandardowa data i godzina specyfikatora formatu) w ciągu wynikowym w operacji formatowania. Definiuje również ciąg separatora daty podczas operacji analizowania.  
  
   
  
## Examples  
 Poniższy przykład tworzy wystąpienie <xref:System.Globalization.CultureInfo> obiektu jego separator daty, który zmienia się dla kultury en US "-", a data jest wyświetlana przy użyciu "d", "G" i ciągi formatu standardowego "g".  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.DateSeparator#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.dateseparator/cs/dateseparatorex.cs#1)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.DateSeparator#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.dateseparator/vb/dateseparatorex.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Właściwość jest ustawiana na <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">Ustawiono właściwość i <see cref="T:System.Globalization.DateTimeFormatInfo" /> obiekt jest tylko do odczytu.</exception>
        <altmember cref="P:System.Globalization.DateTimeFormatInfo.TimeSeparator" />
        <related type="Article" href="~/docs/standard/base-types/custom-date-and-time-format-strings.md">Niestandardowe ciągi formatujące datę i godzinę</related>
        <related type="Article" href="~/docs/standard/base-types/standard-date-and-time-format-strings.md">Standardowe ciągi formatujące datę i godzinę</related>
      </Docs>
    </Member>
    <Member MemberName="DayNames">
      <MemberSignature Language="C#" Value="public string[] DayNames { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] DayNames" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.DateTimeFormatInfo.DayNames" />
      <MemberSignature Language="VB.NET" Value="Public Property DayNames As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::String ^&gt; ^ DayNames { cli::array &lt;System::String ^&gt; ^ get(); void set(cli::array &lt;System::String ^&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DayNames : string[] with get, set" Usage="System.Globalization.DateTimeFormatInfo.DayNames" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia tablicę jednowymiarową ciągu, która zawiera specyficzne dla kultury pełne nazwy dni tygodnia.</summary>
        <value>Tablica jednowymiarowa ciąg, który zawiera charakterystyczne dla kultury pełne nazwy dni tygodnia. Tablica <see cref="P:System.Globalization.DateTimeFormatInfo.InvariantInfo" /> zawiera "Niedziela", "Poniedziałek", "Wtorek", "Środa", "Czwartek", "Piątek" i "Sobota".</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli ustawienie tej właściwości, tablicy musi być jednowymiarowy i musi mieć dokładnie siedem elementów. Pierwszy element (element o indeksie zero) reprezentuje pierwszy dzień tygodnia w kalendarzu, zdefiniowane przez <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> właściwości.  
  
 Jeśli ciąg niestandardowego formatu zawiera specyfikator formatu "dddd" <xref:System.DateTime.ToString%2A?displayProperty=nameWithType> metody zawiera wartość odpowiednią <xref:System.Globalization.DateTimeFormatInfo.DayNames%2A> elementu członkowskiego zamiast "dddd" w ciągu wynikowym.  
  
 Ta właściwość ma wpływ, jeśli wartość <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> zmiany właściwości.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Właściwość jest ustawiana na <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">Właściwość jest ustawiany na tablicy wielowymiarowej lub zawierający długości, która nie jest dokładnie 7.</exception>
        <exception cref="T:System.InvalidOperationException">Ustawiono właściwość i <see cref="T:System.Globalization.DateTimeFormatInfo" /> obiekt jest tylko do odczytu.</exception>
        <altmember cref="P:System.Globalization.DateTimeFormatInfo.AbbreviatedDayNames" />
        <altmember cref="P:System.Globalization.DateTimeFormatInfo.MonthNames" />
        <altmember cref="M:System.Globalization.DateTimeFormatInfo.GetDayName(System.DayOfWeek)" />
      </Docs>
    </Member>
    <Member MemberName="FirstDayOfWeek">
      <MemberSignature Language="C#" Value="public DayOfWeek FirstDayOfWeek { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DayOfWeek FirstDayOfWeek" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.DateTimeFormatInfo.FirstDayOfWeek" />
      <MemberSignature Language="VB.NET" Value="Public Property FirstDayOfWeek As DayOfWeek" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property DayOfWeek FirstDayOfWeek { DayOfWeek get(); void set(DayOfWeek value); };" />
      <MemberSignature Language="F#" Value="member this.FirstDayOfWeek : DayOfWeek with get, set" Usage="System.Globalization.DateTimeFormatInfo.FirstDayOfWeek" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.DayOfWeek</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia pierwszy dzień tygodnia.</summary>
        <value>Wartość wyliczenia, który reprezentuje pierwszy dzień tygodnia. Wartość domyślna dla <see cref="P:System.Globalization.DateTimeFormatInfo.InvariantInfo" /> jest <see cref="F:System.DayOfWeek.Sunday" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość ma wpływ, jeśli wartość <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> zmiany właściwości.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Właściwość jest ustawiany na wartość, która nie jest prawidłowym <see cref="T:System.DayOfWeek" /> wartość.</exception>
        <exception cref="T:System.InvalidOperationException">Ustawiono właściwość i <see cref="T:System.Globalization.DateTimeFormatInfo" /> obiekt jest tylko do odczytu.</exception>
        <altmember cref="T:System.DayOfWeek" />
      </Docs>
    </Member>
    <Member MemberName="FullDateTimePattern">
      <MemberSignature Language="C#" Value="public string FullDateTimePattern { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FullDateTimePattern" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.DateTimeFormatInfo.FullDateTimePattern" />
      <MemberSignature Language="VB.NET" Value="Public Property FullDateTimePattern As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ FullDateTimePattern { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.FullDateTimePattern : string with get, set" Usage="System.Globalization.DateTimeFormatInfo.FullDateTimePattern" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia ciąg niestandardowego formatu daty długiej i długo wartość godziny.</summary>
        <value>Ciąg formatu niestandardowego dla daty długiej i długo wartość godziny.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ciąg formatu standardowego "F" jest aliasem <xref:System.Globalization.DateTimeFormatInfo.FullDateTimePattern%2A> właściwości. Innymi słowy ciąg formatu niestandardowego, przypisany do tej właściwości definiuje format ciągu wynikowego ciągu formatu standardowego "F". Aby uzyskać więcej informacji, zobacz [standardowych ciągów daty i godziny Format](~/docs/standard/base-types/standard-date-and-time-format-strings.md).  
  
 Wartość <xref:System.Globalization.DateTimeFormatInfo.FullDateTimePattern%2A> właściwości jest generowana dynamicznie przez połączenie <xref:System.Globalization.DateTimeFormatInfo.LongDatePattern%2A> i <xref:System.Globalization.DateTimeFormatInfo.LongTimePattern%2A> właściwości rozdzielonych spacją. To dynamiczne przypisanie odbywa się w następujących warunkach:  
  
-   Jeśli wartość właściwości jest pobierana przed została jawnie ustawiona.  
  
-   Gdy wartość <xref:System.Globalization.DateTimeFormatInfo.LongDatePattern%2A> zmiany właściwości.  
  
-   Gdy wartość <xref:System.Globalization.DateTimeFormatInfo.LongTimePattern%2A> zmiany właściwości.  
  
 Ta właściwość ma wpływ, jeśli wartość <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> zmiany właściwości.  
  
   
  
## Examples  
 Poniższy przykład wyświetla wartość <xref:System.Globalization.DateTimeFormatInfo.FullDateTimePattern%2A> dla kilku języków.  
  
 [!code-cpp[System.Globalization.DateTimeFormatInfo.FullDateTimePattern#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.FullDateTimePattern/CPP/dtfi_fulldatetimepattern.cpp#1)]
 [!code-csharp[System.Globalization.DateTimeFormatInfo.FullDateTimePattern#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.FullDateTimePattern/CS/dtfi_fulldatetimepattern.cs#1)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.FullDateTimePattern#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.FullDateTimePattern/VB/dtfi_fulldatetimepattern.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Właściwość jest ustawiana na <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">Ustawiono właściwość i <see cref="T:System.Globalization.DateTimeFormatInfo" /> obiekt jest tylko do odczytu.</exception>
        <related type="Article" href="~/docs/standard/base-types/standard-date-and-time-format-strings.md">Standardowe ciągi formatujące datę i godzinę</related>
        <related type="Article" href="~/docs/standard/base-types/custom-date-and-time-format-strings.md">Niestandardowe ciągi formatujące datę i godzinę</related>
      </Docs>
    </Member>
    <Member MemberName="GetAbbreviatedDayName">
      <MemberSignature Language="C#" Value="public string GetAbbreviatedDayName (DayOfWeek dayofweek);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetAbbreviatedDayName(valuetype System.DayOfWeek dayofweek) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.DateTimeFormatInfo.GetAbbreviatedDayName(System.DayOfWeek)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetAbbreviatedDayName(DayOfWeek dayofweek);" />
      <MemberSignature Language="F#" Value="member this.GetAbbreviatedDayName : DayOfWeek -&gt; string" Usage="dateTimeFormatInfo.GetAbbreviatedDayName dayofweek" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dayofweek" Type="System.DayOfWeek" />
      </Parameters>
      <Docs>
        <param name="dayofweek">A <see cref="T:System.DayOfWeek" /> wartość.</param>
        <summary>Zwraca specyficzne dla kultury skróconą nazwę określonego dnia, tygodnia, w oparciu o kulturę skojarzony z bieżącą <see cref="T:System.Globalization.DateTimeFormatInfo" /> obiektu.</summary>
        <returns>Specyficzne dla kultury skrócona nazwa dnia tygodnia, reprezentowane przez <paramref name="dayofweek" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Niezmienna domyślnego <xref:System.Globalization.DateTimeFormatInfo> obiektu, ta metoda zwraca ciąg z <xref:System.Globalization.GregorianCalendar>:  
  
|`dayofweek`|Wartość zwracana|  
|-----------------|------------------|  
|Niedziela|"Sun"|  
|Każdy poniedziałek|"Mon"|  
|Wtorek|"Wtorek"|  
|Środa|"Środa"|  
|Czwartek|"Czwartek"|  
|Piątek|"Fri"|  
|Sobota|"NAS."|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="dayofweek" /> nie jest prawidłowym <see cref="T:System.DayOfWeek" /> wartość.</exception>
        <altmember cref="T:System.Globalization.CultureInfo" />
        <altmember cref="T:System.Globalization.GregorianCalendar" />
        <altmember cref="P:System.Globalization.DateTimeFormatInfo.AbbreviatedDayNames" />
        <altmember cref="T:System.DayOfWeek" />
      </Docs>
    </Member>
    <Member MemberName="GetAbbreviatedEraName">
      <MemberSignature Language="C#" Value="public string GetAbbreviatedEraName (int era);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetAbbreviatedEraName(int32 era) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.DateTimeFormatInfo.GetAbbreviatedEraName(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAbbreviatedEraName (era As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetAbbreviatedEraName(int era);" />
      <MemberSignature Language="F#" Value="member this.GetAbbreviatedEraName : int -&gt; string" Usage="dateTimeFormatInfo.GetAbbreviatedEraName era" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="era" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="era">Liczba całkowita reprezentująca ery.</param>
        <summary>Zwraca ciąg zawierający skróconą nazwę określonego ery, jeśli istnieje skrót.</summary>
        <returns>Ciąg zawierający skróconą nazwę określonego ery, jeśli istnieje skrót.  
  
—lub— 
Ciąg zawierający pełną nazwę ery, jeśli skrót nie istnieje.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Nazwa era jest nazwą, używanymi w kalendarzu do odwoływania się do skorzystania z okresu czasu liczona od stały punktu lub zdarzeń. Na przykład "N.E." lub "R". jest bieżącej ery w kalendarzu gregoriańskim.  
  
 Prawidłowe wartości dla `era` są wymienione w <xref:System.Globalization.Calendar.Eras%2A> właściwości odpowiedniej klasy pochodne <xref:System.Globalization.Calendar>. Na przykład: <xref:System.Globalization.JapaneseCalendar.Eras%2A?displayProperty=nameWithType> Wyświetla listę ery, które są obsługiwane przez tę implementację.  
  
 W <xref:System.Globalization.JapaneseCalendar> klasy ery skrócona nazwa jest pierwszym znakiem nazwy ery pełne. Ten znak jest skrót bez uwzględniania wielkości liter alfabetu łacińskiego pojedynczych znaków lub skrót Kanji pojedynczych znaków.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="era" /> nie reprezentuje prawidłowy ery kalendarza, określone w <see cref="P:System.Globalization.DateTimeFormatInfo.Calendar" /> właściwości.</exception>
        <block subset="none" type="usage"><para>Jeśli <see cref="P:System.Globalization.DateTimeFormatInfo.Calendar" /> jest <see cref="T:System.Globalization.TaiwanCalendar" /> ale <see cref="P:System.Threading.Thread.CurrentCulture" /> nie jest "zh-TW", następnie <see cref="P:System.Globalization.DateTimeFormatInfo.NativeCalendarName" />, <see cref="M:System.Globalization.DateTimeFormatInfo.GetEraName(System.Int32)" />, i <see cref="M:System.Globalization.DateTimeFormatInfo.GetAbbreviatedEraName(System.Int32)" /> zwraca pusty ciąg ("").</para></block>
        <altmember cref="T:System.Globalization.JapaneseCalendar" />
        <altmember cref="T:System.Globalization.TaiwanCalendar" />
      </Docs>
    </Member>
    <Member MemberName="GetAbbreviatedMonthName">
      <MemberSignature Language="C#" Value="public string GetAbbreviatedMonthName (int month);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetAbbreviatedMonthName(int32 month) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.DateTimeFormatInfo.GetAbbreviatedMonthName(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAbbreviatedMonthName (month As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetAbbreviatedMonthName(int month);" />
      <MemberSignature Language="F#" Value="member this.GetAbbreviatedMonthName : int -&gt; string" Usage="dateTimeFormatInfo.GetAbbreviatedMonthName month" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="month" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="month">Liczba całkowita z zakresu od 1 do 13 reprezentujący nazwę miesiąca do pobrania.</param>
        <summary>Zwraca specyficzne dla kultury skróconą nazwę miesiąca określonego na podstawie kultury skojarzonej z bieżącym <see cref="T:System.Globalization.DateTimeFormatInfo" /> obiektu.</summary>
        <returns>Specyficzne dla kultury skrócona nazwa miesiąca, reprezentowane przez <paramref name="month" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Niezmienna domyślnego <xref:System.Globalization.DateTimeFormatInfo> obiektu, ta metoda zwraca ciąg z <xref:System.Globalization.GregorianCalendar> obiektu.  
  
|`month`|Wartość zwracana|  
|-------------|------------------|  
|1|"Sty"|  
|2|"Feb"|  
|3|"Marca"|  
|4|"Kwi"|  
|5|"Może być"|  
|6|"Czy"|  
|7|"Lip"|  
|8|"Sie"|  
|9|"Wrz"|  
|10|"Oct"|  
|11|"Lis"|  
|12|"Dec"|  
|13|""|  
  
 <xref:System.Globalization.Calendar> obiekty może obsłużyć kalendarzy z 13 miesięcy. Kalendarzy, 12-miesięcznego zawsze zwracany jest pusty ciąg jako nazwę miesiąca 13.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="month" /> jest mniejsza niż 1 lub większa od 13.</exception>
        <altmember cref="T:System.Globalization.Calendar" />
        <altmember cref="T:System.Globalization.CultureInfo" />
        <altmember cref="T:System.Globalization.GregorianCalendar" />
        <altmember cref="P:System.Globalization.DateTimeFormatInfo.AbbreviatedMonthNames" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetAllDateTimePatterns">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Zwraca Wzorce standardowe, w których można sformatować wartości daty i godziny.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetAllDateTimePatterns">
      <MemberSignature Language="C#" Value="public string[] GetAllDateTimePatterns ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string[] GetAllDateTimePatterns() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.DateTimeFormatInfo.GetAllDateTimePatterns" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAllDateTimePatterns () As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::String ^&gt; ^ GetAllDateTimePatterns();" />
      <MemberSignature Language="F#" Value="member this.GetAllDateTimePatterns : unit -&gt; string[]" Usage="dateTimeFormatInfo.GetAllDateTimePatterns " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zwraca standardowe wzorce, w których można sformatować wartości daty i godziny.</summary>
        <returns>Tablica, która zawiera standardowe wzorce, w których można sformatować wartości daty i godziny.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda zwraca tablicę zawierającą wszystkie ciągi formatu niestandardowego, które odpowiadają ciągi w standardowym formacie. Zobacz [standardowych ciągów daty i godziny Format](~/docs/standard/base-types/standard-date-and-time-format-strings.md) listę ciągów formatu standardowego.  
  
 Można użyć niestandardowych formatów ciągów, w tablicy zwracanej przez <xref:System.Globalization.DateTimeFormatInfo.GetAllDateTimePatterns%2A> metody w operacjach formatowania. Jednak jeśli to zrobisz, ciąg reprezentujący wartość daty i godziny zwrócone w tym, że operacja formatowania nie zawsze można przeanalizować pomyślnie przez `Parse` i `TryParse` metody. W związku z tym, nie można zakładać, że ciągi formatu niestandardowego zwracany przez <xref:System.Globalization.DateTimeFormatInfo.GetAllDateTimePatterns%2A> metoda może służyć do wartości obustronne daty i godziny. Poniższy przykład ilustruje ten problem. Pobiera <xref:System.Globalization.DateTimeFormatInfo> obiekt, który zawiera informacje o formatowaniu dla kultury Włochy (włoski). Przekazuje każdego ciągu formatu niestandardowego w tablicy zwracanej przez <xref:System.Globalization.DateTimeFormatInfo.GetAllDateTimePatterns> metody <xref:System.DateTime.ToString%28System.String%29?displayProperty=nameWithType> metodę w celu utworzenia reprezentacji w postaci ciągu daty i godziny. W tym przykładzie następnie próbuje przeanalizować tę wartość przez wywołanie metody <xref:System.DateTime.TryParse%28System.String%2CSystem.DateTime%40%29?displayProperty=nameWithType> metody. Dane wyjściowe z przykładu pokazują, nie produkuj niektóre ciągi niestandardowego formatu daty i godziny wartość oznacza pomyślnie rund.  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.GetAllDateTimePatterns#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.getalldatetimepatterns/cs/getalldatetimepatternsex1.cs#1)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.GetAllDateTimePatterns#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.getalldatetimepatterns/vb/getalldatetimepatternsex1.vb#1)]  
  
 Aby przeanalizować ciąg reprezentujący datę i godzinę, które mogą być wyrażone w wielu wstępnie zdefiniowanych formatów niestandardowych, należy wywołać jedną z następujących metod:  
  
-   <xref:System.DateTime.ParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=nameWithType>  
  
-   <xref:System.DateTimeOffset.ParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=nameWithType>  
  
-   <xref:System.DateTime.TryParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTime%40%29?displayProperty=nameWithType>  
  
-   <xref:System.DateTimeOffset.TryParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTimeOffset%40%29?displayProperty=nameWithType>  
  
 Ciągi formatów niestandardowych w tablicy zwracanej przez <xref:System.Globalization.DateTimeFormatInfo.GetAllDateTimePatterns%2A> metoda zależy od bieżącego kalendarza kultury, dla którego <xref:System.Globalization.DateTimeFormatInfo> obiektu dostarcza informacje o formatowaniu. Jeśli zmieni się kalendarza, zmienia się również tablica zwrócona przez tę metodę  
  
   
  
## Examples  
 Poniższy przykład wyświetla datę i czas ciągów formatu dla niezmiennej kultury, a także ciąg wynikowy, który jest generowany, gdy czy ciąg formatu jest używany do formatowania określonej daty.  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.GetAllDateTimePatterns#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.getalldatetimepatterns/cs/getalldatetimepatternsinv.cs#3)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.GetAllDateTimePatterns#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.getalldatetimepatterns/vb/getalldatetimepatternsinv.vb#3)]  
  
 Przykład tworzy <xref:System.Globalization.DateTimeFormatInfo> obiekt, który reprezentuje niezmienną kulturę, wywołując <xref:System.Globalization.DateTimeFormatInfo.%23ctor%2A> konstruktora. Można również pobrać <xref:System.Globalization.DateTimeFormatInfo> reprezentująca kultury niezmiennej z <xref:System.Globalization.DateTimeFormatInfo.InvariantInfo%2A> właściwości.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Globalization.DateTimeFormatInfo.SetAllDateTimePatterns(System.String[],System.Char)" />
      </Docs>
    </Member>
    <Member MemberName="GetAllDateTimePatterns">
      <MemberSignature Language="C#" Value="public string[] GetAllDateTimePatterns (char format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string[] GetAllDateTimePatterns(char format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.DateTimeFormatInfo.GetAllDateTimePatterns(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAllDateTimePatterns (format As Char) As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::String ^&gt; ^ GetAllDateTimePatterns(char format);" />
      <MemberSignature Language="F#" Value="member this.GetAllDateTimePatterns : char -&gt; string[]" Usage="dateTimeFormatInfo.GetAllDateTimePatterns format" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.Char" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="format">Ciąg formatu standardowego.</param>
        <summary>Zwraca wszystkie wzorce, w których wartości daty i godziny można sformatować za pomocą określonego standardowego ciągu formatu.</summary>
        <returns>Tablica zawierająca standardowe wzorce w wartości daty i godziny może być sformatowane przy użyciu określonego ciągu formatu.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda zwraca tablicę zawierającą ciągi formatów niestandardowych, które odpowiadają określonej standardowym ciągiem formatującym. Zobacz [standardowych ciągów daty i godziny Format](~/docs/standard/base-types/standard-date-and-time-format-strings.md) listę ciągów formatu standardowego.  
  
 Można użyć niestandardowych formatów ciągów, w tablicy zwracanej przez <xref:System.Globalization.DateTimeFormatInfo.GetAllDateTimePatterns%2A> metody w operacjach formatowania. Jednak jeśli to zrobisz, ciąg reprezentujący wartość daty i godziny zwrócone w tym, że operacja formatowania nie zawsze można przeanalizować pomyślnie przez `Parse` i `TryParse` metody. W związku z tym, nie można zakładać, że ciągi formatu niestandardowego zwracany przez <xref:System.Globalization.DateTimeFormatInfo.GetAllDateTimePatterns%2A> metoda może służyć do wartości obustronne daty i godziny. Poniższy przykład ilustruje ten problem. Pobiera <xref:System.Globalization.DateTimeFormatInfo> obiekt, który zawiera informacje o formatowaniu dla kultury Rosja (rosyjski). Wywołuje <xref:System.Globalization.DateTimeFormatInfo.GetAllDateTimePatterns%28System.Char%29> metodę dla każdego ciągu formatu standardowego, a następnie przekazuje każdy niestandardowy format ciągu w zwróconej tablicy do <xref:System.DateTime.ToString%28System.String%29?displayProperty=nameWithType> metodę w celu utworzenia reprezentacji w postaci ciągu daty i godziny. W tym przykładzie następnie próbuje przeanalizować tę wartość przez wywołanie metody <xref:System.DateTime.TryParse%28System.String%2CSystem.DateTime%40%29?displayProperty=nameWithType> metody. Dane wyjściowe z przykładu pokazują, nie produkuj niektóre ciągi niestandardowego formatu daty i godziny wartość oznacza pomyślnie rund.  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.GetAllDateTimePatterns#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.getalldatetimepatterns/cs/getalldatetimepatternsex2.cs#2)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.GetAllDateTimePatterns#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.getalldatetimepatterns/vb/getalldatetimepatternsex2.vb#2)]  
  
 Aby przeanalizować ciąg reprezentujący datę i godzinę, które mogą być wyrażone w wielu wstępnie zdefiniowanych formatów niestandardowych, należy wywołać jedną z następujących metod:  
  
-   <xref:System.DateTime.ParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=nameWithType>  
  
-   <xref:System.DateTimeOffset.ParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=nameWithType>  
  
-   <xref:System.DateTime.TryParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTime%40%29?displayProperty=nameWithType>  
  
-   <xref:System.DateTimeOffset.TryParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTimeOffset%40%29?displayProperty=nameWithType>  
  
 Ciągi formatów niestandardowych w tablicy zwracanej przez <xref:System.Globalization.DateTimeFormatInfo.GetAllDateTimePatterns%2A> metoda zależy od bieżącego kalendarza kultury, dla którego <xref:System.Globalization.DateTimeFormatInfo> obiektu dostarcza informacje o formatowaniu. Jeśli zmieni się kalendarza, zmienia się również tablica zwrócona przez tę metodę  
  
   
  
## Examples  
 Poniższy przykład wyświetla wzorców daty i godziny dla bieżącego kalendarza.  
  
 [!code-cpp[Classic DateTimeFormatInfo.GetAllDateTimePatterns Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic DateTimeFormatInfo.GetAllDateTimePatterns Example/CPP/source.cpp#1)]
 [!code-csharp[Classic DateTimeFormatInfo.GetAllDateTimePatterns Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic DateTimeFormatInfo.GetAllDateTimePatterns Example/CS/source.cs#1)]
 [!code-vb[Classic DateTimeFormatInfo.GetAllDateTimePatterns Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic DateTimeFormatInfo.GetAllDateTimePatterns Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="format" /> nie jest prawidłową standardowym ciągiem formatującym.</exception>
        <altmember cref="M:System.Globalization.DateTimeFormatInfo.SetAllDateTimePatterns(System.String[],System.Char)" />
      </Docs>
    </Member>
    <Member MemberName="GetDayName">
      <MemberSignature Language="C#" Value="public string GetDayName (DayOfWeek dayofweek);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetDayName(valuetype System.DayOfWeek dayofweek) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.DateTimeFormatInfo.GetDayName(System.DayOfWeek)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetDayName(DayOfWeek dayofweek);" />
      <MemberSignature Language="F#" Value="member this.GetDayName : DayOfWeek -&gt; string" Usage="dateTimeFormatInfo.GetDayName dayofweek" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dayofweek" Type="System.DayOfWeek" />
      </Parameters>
      <Docs>
        <param name="dayofweek">A <see cref="T:System.DayOfWeek" /> wartość.</param>
        <summary>Zwraca pełną nazwę specyficzne dla kultury określonego dnia, tygodnia, w oparciu o kulturę skojarzony z bieżącą <see cref="T:System.Globalization.DateTimeFormatInfo" /> obiektu.</summary>
        <returns>Specyficzne dla kultury pełną nazwę dnia tygodnia, reprezentowane przez <paramref name="dayofweek" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Niezmienna domyślnego <xref:System.Globalization.DateTimeFormatInfo> obiektu, ta metoda zwraca ciąg z <xref:System.Globalization.GregorianCalendar> obiektu.  
  
|`dayofweek`|Wartość zwracana|  
|-----------------|------------------|  
|Niedziela|"Niedziela"|  
|Każdy poniedziałek|"Poniedziałek"|  
|Wtorek|"Wtorek"|  
|Środa|"Środa"|  
|Czwartek|"Czwartek"|  
|Piątek|"Piątek"|  
|Sobota|"Sobota"|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="dayofweek" /> nie jest prawidłowym <see cref="T:System.DayOfWeek" /> wartość.</exception>
        <altmember cref="T:System.Globalization.CultureInfo" />
        <altmember cref="T:System.Globalization.GregorianCalendar" />
        <altmember cref="P:System.Globalization.DateTimeFormatInfo.DayNames" />
        <altmember cref="T:System.DayOfWeek" />
      </Docs>
    </Member>
    <Member MemberName="GetEra">
      <MemberSignature Language="C#" Value="public int GetEra (string eraName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetEra(string eraName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.DateTimeFormatInfo.GetEra(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEra (eraName As String) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetEra(System::String ^ eraName);" />
      <MemberSignature Language="F#" Value="member this.GetEra : string -&gt; int" Usage="dateTimeFormatInfo.GetEra eraName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eraName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eraName">Ciąg zawierający nazwę ery.</param>
        <summary>Zwraca liczbę całkowitą reprezentującą określoną ery.</summary>
        <returns>Liczbę całkowitą przedstawiającą ery, jeśli <paramref name="eraName" /> jest prawidłowy; w przeciwnym razie wartość -1.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Nazwa era jest nazwą, używanymi w kalendarzu do odwoływania się do skorzystania z okresu czasu liczona od stały punktu lub zdarzeń. Na przykład "N.E." lub "R". jest bieżącej ery w kalendarzu gregoriańskim.  
  
 Porównanie z `eraName` jest rozróżniana wielkość liter, na przykład "N.E." jest odpowiednikiem "n.e.".  
  
 <xref:System.Globalization.DateTimeFormatInfo.GetEra%2A> ignoruje znaki interpunkcyjne w nazwach skróconej ery, tylko wtedy, gdy <xref:System.Globalization.GregorianCalendar> wybrano <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A?displayProperty=nameWithType> i kultura używa "N.E." jako nazwy ery, czyli "N.E." jest odpowiednikiem "AD".  
  
 <xref:System.Globalization.DateTimeFormatInfo.GetEra%2A> porównuje `eraName` o nazwie pełną ery zwrócony przez <xref:System.Globalization.DateTimeFormatInfo.GetEraName%2A> i nazwą skróconą ery zwrócony przez <xref:System.Globalization.DateTimeFormatInfo.GetAbbreviatedEraName%2A>.  

[!INCLUDE[japanese-era-note](~/includes/calendar-era.md)]

## Examples  
 Poniższy przykład pokazuje, że <xref:System.Globalization.DateTimeFormatInfo> ignoruje znaki interpunkcyjne nazwę ery, tylko wtedy, gdy jest używany kalendarz gregoriański kultura używa nazwy ery "N.E.".  
  
 [!code-cpp[System.Globalization.GregorianCalendar.GetEra#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.GregorianCalendar.GetEra/CPP/gregorian_getera.cpp#1)]
 [!code-csharp[System.Globalization.GregorianCalendar.GetEra#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.GregorianCalendar.GetEra/CS/gregorian_getera.cs#1)]
 [!code-vb[System.Globalization.GregorianCalendar.GetEra#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.GregorianCalendar.GetEra/VB/gregorian_getera.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="eraName" /> jest <see langword="null" />.</exception>
        <altmember cref="M:System.Globalization.DateTimeFormatInfo.GetEraName(System.Int32)" />
        <altmember cref="T:System.Globalization.Calendar" />
      </Docs>
    </Member>
    <Member MemberName="GetEraName">
      <MemberSignature Language="C#" Value="public string GetEraName (int era);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetEraName(int32 era) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.DateTimeFormatInfo.GetEraName(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEraName (era As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetEraName(int era);" />
      <MemberSignature Language="F#" Value="member this.GetEraName : int -&gt; string" Usage="dateTimeFormatInfo.GetEraName era" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="era" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="era">Liczba całkowita reprezentująca ery.</param>
        <summary>Zwraca ciąg zawierający nazwę określonego ery.</summary>
        <returns>Ciąg zawierający nazwę ery.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Nazwa era jest nazwą, używanymi w kalendarzu do odwoływania się do skorzystania z okresu czasu liczona od stały punktu lub zdarzeń. Na przykład "N.E." lub "R". jest bieżącej ery w kalendarzu gregoriańskim.  
  
 Prawidłowe wartości dla `era` są wymienione w <xref:System.Globalization.Calendar.Eras%2A> właściwości odpowiedniej klasy pochodne <xref:System.Globalization.Calendar>. Na przykład: <xref:System.Globalization.JapaneseCalendar.Eras%2A?displayProperty=nameWithType> Wyświetla listę ery, które są obsługiwane przez tę implementację.  

[!INCLUDE[japanese-era-note](~/includes/calendar-era.md)]
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="era" /> nie reprezentuje prawidłowy ery kalendarza, określone w <see cref="P:System.Globalization.DateTimeFormatInfo.Calendar" /> właściwości.</exception>
        <block subset="none" type="usage"><para>Jeśli kalendarz jest reprezentowany przez <see cref="T:System.Globalization.TaiwanCalendar" /> ale <see cref="P:System.Threading.Thread.CurrentCulture" /> nie jest "zh-TW", następnie <see cref="P:System.Globalization.DateTimeFormatInfo.NativeCalendarName" />, <see cref="M:System.Globalization.DateTimeFormatInfo.GetEraName(System.Int32)" />, i <see cref="M:System.Globalization.DateTimeFormatInfo.GetAbbreviatedEraName(System.Int32)" /> zwraca pusty ciąg ("").</para></block>
        <altmember cref="M:System.Globalization.DateTimeFormatInfo.GetEra(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="GetFormat">
      <MemberSignature Language="C#" Value="public object GetFormat (Type formatType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetFormat(class System.Type formatType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.DateTimeFormatInfo.GetFormat(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetFormat (formatType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ GetFormat(Type ^ formatType);" />
      <MemberSignature Language="F#" Value="abstract member GetFormat : Type -&gt; obj&#xA;override this.GetFormat : Type -&gt; obj" Usage="dateTimeFormatInfo.GetFormat formatType" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IFormatProvider.GetFormat(System.Type)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="formatType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="formatType">Typ wymaganej usługi formatowania.</param>
        <summary>Zwraca obiekt określonego typu, który zapewnia formatowania daty i godziny usługi.</summary>
        <returns>Bieżący obiekt, jeśli <paramref name="formatType" /> jest taki sam jak typ bieżącego elementu <see cref="T:System.Globalization.DateTimeFormatInfo" />; w przeciwnym razie <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `Format(String, IFormatProvider)` Metody obsługiwanej przez podstawowe typy danych wywołać tę metodę podczas bieżącej <xref:System.Globalization.DateTimeFormatInfo> obiekt jest przekazywany jako <xref:System.IFormatProvider> parametru. Ta metoda implementuje <xref:System.IFormatProvider.GetFormat%2A?displayProperty=nameWithType>.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IFormatProvider" />
        <altmember cref="M:System.Globalization.NumberFormatInfo.GetFormat(System.Type)" />
      </Docs>
    </Member>
    <Member MemberName="GetInstance">
      <MemberSignature Language="C#" Value="public static System.Globalization.DateTimeFormatInfo GetInstance (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Globalization.DateTimeFormatInfo GetInstance(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.DateTimeFormatInfo.GetInstance(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetInstance (provider As IFormatProvider) As DateTimeFormatInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Globalization::DateTimeFormatInfo ^ GetInstance(IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="static member GetInstance : IFormatProvider -&gt; System.Globalization.DateTimeFormatInfo" Usage="System.Globalization.DateTimeFormatInfo.GetInstance provider" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Globalization.DateTimeFormatInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><see cref="T:System.IFormatProvider" /> , Które pobiera <see cref="T:System.Globalization.DateTimeFormatInfo" /> obiektu.  
  
—lub— 
 <see langword="null" /> Aby uzyskać <see cref="P:System.Globalization.DateTimeFormatInfo.CurrentInfo" />.</param>
        <summary>Zwraca <see cref="T:System.Globalization.DateTimeFormatInfo" /> obiekt skojarzony z określonym <see cref="T:System.IFormatProvider" />.</summary>
        <returns>A <see cref="T:System.Globalization.DateTimeFormatInfo" /> obiekt skojarzony z <see cref="T:System.IFormatProvider" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda używa <xref:System.IFormatProvider.GetFormat%2A?displayProperty=nameWithType> metody `formatProvider` przy użyciu <xref:System.Globalization.DateTimeFormatInfo> obiektu jako `Type` parametru. Jeśli `formatProvider` jest `null` lub jeśli <xref:System.IFormatProvider.GetFormat%2A?displayProperty=nameWithType> zwraca `null`, Metoda ta zwraca <xref:System.Globalization.DateTimeFormatInfo.CurrentInfo%2A>.  
  
 Aplikację można uzyskać <xref:System.Globalization.DateTimeFormatInfo> obiektu dla określonej kultury przy użyciu jednej z następujących metod:  
  
-   <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType> Właściwości.  
  
-   <xref:System.Globalization.DateTimeFormatInfo.GetInstance%2A> Metody, gdzie `provider` jest <xref:System.Globalization.CultureInfo> obiektu.  
  
 Element <xref:System.Globalization.DateTimeFormatInfo> obiektu można tworzyć tylko dla niezmiennej kultury lub dla określonych kultur, a nie dla kultury neutralnej.  
  
 Aby uzyskać więcej informacji dotyczących niezmiennej kultury określonej kultury i kultury neutralnej, zobacz <xref:System.Globalization.CultureInfo> klasy opis.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IFormatProvider" />
      </Docs>
    </Member>
    <Member MemberName="GetMonthName">
      <MemberSignature Language="C#" Value="public string GetMonthName (int month);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetMonthName(int32 month) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.DateTimeFormatInfo.GetMonthName(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetMonthName (month As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetMonthName(int month);" />
      <MemberSignature Language="F#" Value="member this.GetMonthName : int -&gt; string" Usage="dateTimeFormatInfo.GetMonthName month" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="month" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="month">Liczba całkowita z zakresu od 1 do 13 reprezentujący nazwę miesiąca do pobrania.</param>
        <summary>Zwraca pełną nazwę specyficzne dla kultury określonego miesiąca na podstawie kultury skojarzonej z bieżącym <see cref="T:System.Globalization.DateTimeFormatInfo" /> obiektu.</summary>
        <returns>Specyficzne dla kultury pełną nazwę miesiąca, reprezentowane przez <paramref name="month" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Niezmienna domyślnego <xref:System.Globalization.DateTimeFormatInfo> obiektu, ta metoda zwraca ciąg z <xref:System.Globalization.GregorianCalendar> obiektu.  
  
|`month`|Wartość zwracana|  
|-------------|------------------|  
|1|"Stycznia"|  
|2|"Czerwiec"|  
|3|"Marca"|  
|4|"Kwiecień"|  
|5|"Może być"|  
|6|"Czerwiec"|  
|7|"Lipca"|  
|8|"Sierpnia"|  
|9|"Września"|  
|10|"Października"|  
|11|"Listopada"|  
|12|"Grudnia"|  
|13|""|  
  
 <xref:System.Globalization.Calendar> obiekty może obsłużyć kalendarzy z 13 miesięcy. Kalendarzy, 12-miesięcznego zawsze zwracany jest pusty ciąg jako nazwę miesiąca 13.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="month" /> jest mniejsza niż 1 lub większa od 13.</exception>
        <altmember cref="T:System.Globalization.Calendar" />
        <altmember cref="T:System.Globalization.CultureInfo" />
        <altmember cref="T:System.Globalization.GregorianCalendar" />
        <altmember cref="P:System.Globalization.DateTimeFormatInfo.MonthNames" />
      </Docs>
    </Member>
    <Member MemberName="GetShortestDayName">
      <MemberSignature Language="C#" Value="public string GetShortestDayName (DayOfWeek dayOfWeek);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetShortestDayName(valuetype System.DayOfWeek dayOfWeek) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.DateTimeFormatInfo.GetShortestDayName(System.DayOfWeek)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetShortestDayName(DayOfWeek dayOfWeek);" />
      <MemberSignature Language="F#" Value="member this.GetShortestDayName : DayOfWeek -&gt; string" Usage="dateTimeFormatInfo.GetShortestDayName dayOfWeek" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dayOfWeek" Type="System.DayOfWeek" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="dayOfWeek">Jedną z <see cref="T:System.DayOfWeek" /> wartości.</param>
        <summary>Uzyskuje nazwę najkrótszej skróconym oznaczeniem dnia na dany dzień tygodnia, skojarzone z bieżącym <see cref="T:System.Globalization.DateTimeFormatInfo" /> obiektu.</summary>
        <returns>Skrócona nazwa tygodnia odpowiadający <paramref name="dayOfWeek" /> parametru.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład pokazuje kilka metod i właściwości, które określają daty i wzorce formatu czasu, nazwa kalendarz natywny i pełnego i skróconej miesiąca i nazwy dni.  
  
 [!code-csharp[sys.glob.DTFI1#1](~/samples/snippets/csharp/VS_Snippets_CLR/sys.glob.DTFI1/cs/dtfi1.cs#1)]
 [!code-vb[sys.glob.DTFI1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/sys.glob.DTFI1/vb/dtfi1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="dayOfWeek" /> nie jest wartością w <see cref="T:System.DayOfWeek" /> wyliczenia.</exception>
      </Docs>
    </Member>
    <Member MemberName="InvariantInfo">
      <MemberSignature Language="C#" Value="public static System.Globalization.DateTimeFormatInfo InvariantInfo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Globalization.DateTimeFormatInfo InvariantInfo" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.DateTimeFormatInfo.InvariantInfo" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property InvariantInfo As DateTimeFormatInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Globalization::DateTimeFormatInfo ^ InvariantInfo { System::Globalization::DateTimeFormatInfo ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.InvariantInfo : System.Globalization.DateTimeFormatInfo" Usage="System.Globalization.DateTimeFormatInfo.InvariantInfo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.DateTimeFormatInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera domyślny atrybut tylko do odczytu <see cref="T:System.Globalization.DateTimeFormatInfo" /> obiekt niezależnych od kultury (niezmiennej).</summary>
        <value>Obiekt tylko do odczytu, który jest niezależny od kultury (niezmiennego).</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość nie zmienia się, niezależnie od bieżącej kultury. W związku z tym niezmiennej kultury firmy <xref:System.Globalization.DateTimeFormatInfo> obiekt może służyć do wygenerowania wyników spójny, niezależnych od kultury w operacji na danych wielu kultury formatowanie i analizowanie. Na przykład, jeśli dane daty i godziny z różnych kultur jest w celu jego utrwalenia w postaci ciągu, jego mogą być sformatowane przy użyciu <xref:System.Globalization.DateTimeFormatInfo> obiektu niezmiennej kultury i jest zapisywana. Następnie można go przeanalizować przy użyciu niezmiennej kultury <xref:System.Globalization.DateTimeFormatInfo> obiektu.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Globalization.CultureInfo.InvariantCulture" />
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.DateTimeFormatInfo.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsReadOnly : bool" Usage="System.Globalization.DateTimeFormatInfo.IsReadOnly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość wskazującą czy <see cref="T:System.Globalization.DateTimeFormatInfo" /> obiekt jest tylko do odczytu.</summary>
        <value><see langword="true" /> Jeśli <see cref="T:System.Globalization.DateTimeFormatInfo" /> obiekt jest tylko do odczytu; w przeciwnym razie <see langword="false" />.</value>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Globalization.DateTimeFormatInfo.ReadOnly(System.Globalization.DateTimeFormatInfo)" />
      </Docs>
    </Member>
    <Member MemberName="LongDatePattern">
      <MemberSignature Language="C#" Value="public string LongDatePattern { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string LongDatePattern" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.DateTimeFormatInfo.LongDatePattern" />
      <MemberSignature Language="VB.NET" Value="Public Property LongDatePattern As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ LongDatePattern { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.LongDatePattern : string with get, set" Usage="System.Globalization.DateTimeFormatInfo.LongDatePattern" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia ciąg formatu niestandardowego dla wartości daty długiej.</summary>
        <value>Ciąg formatu niestandardowego dla wartości daty długiej.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Globalization.DateTimeFormatInfo.LongDatePattern%2A> Właściwość definiuje format specyficzny dla kultury ciągów daty, które są zwracane przez wywołania <xref:System.DateTime.ToString%2A?displayProperty=nameWithType> i <xref:System.DateTimeOffset.ToString%2A?displayProperty=nameWithType> metody i przez formatowania złożonego ciągi, które są dostarczane na ciąg formatu standardowego "D". Poniższy przykład ilustruje relacje następujące czynności: ciąg formatu standardowego "D", niestandardowe formatowanie ciągu zwracanego przez <xref:System.Globalization.DateTimeFormatInfo.LongDatePattern%2A> właściwość i specyficzne dla kultury reprezentację daty.  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.LongDatePattern#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.LongDatePattern/CS/longdatepattern1.cs#2)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.LongDatePattern#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.LongDatePattern/VB/longdatepattern1.vb#2)]  
  
 Zobacz [niestandardowych ciągów daty i godziny Format](~/docs/standard/base-types/custom-date-and-time-format-strings.md) dla poszczególnych niestandardowych specyfikatorów formatu, które mogą być łączone w celu utworzenia niestandardowych formatów ciągów, takich jak "dddd, dd MMMM yyyy".  
  
 Separator daty powinny być określone w wzorzec daty długiej dokładny ciąg zamiast symbol zastępczy separator daty. Na przykład aby uzyskać wzorzec MM-DD-RRRR, należy ustawić wzorzec daty długiej do "MM-DD-yyyy".  
  
 Wartość tej właściwości mogą ulec zmianie, jeśli kalendarz używany przez zmiany kultury. Na przykład w poniższym przykładzie pokazano sposób, w jaki <xref:System.Globalization.DateTimeFormatInfo.LongDatePattern%2A> właściwość <xref:System.Globalization.CultureInfo> obiekt, który reprezentuje kulturę arabski (Syria) zmienia się podczas <xref:System.Globalization.Calendar> obiekt używany przez zmiany kultury.  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.LongDatePattern#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.LongDatePattern/CS/longdatepattern2.cs#3)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.LongDatePattern#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.LongDatePattern/VB/longdatepattern2.vb#3)]  
  
   
  
## Examples  
 Poniższy przykład wyświetla wartość <xref:System.Globalization.DateTimeFormatInfo.LongDatePattern%2A> właściwości dla kilku języków.  
  
 [!code-cpp[System.Globalization.DateTimeFormatInfo.LongDatePattern#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.LongDatePattern/CPP/dtfi_longdatepattern.cpp#1)]
 [!code-csharp[System.Globalization.DateTimeFormatInfo.LongDatePattern#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.LongDatePattern/CS/dtfi_longdatepattern.cs#1)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.LongDatePattern#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.LongDatePattern/VB/dtfi_longdatepattern.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Właściwość jest ustawiana na <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">Ustawiono właściwość i <see cref="T:System.Globalization.DateTimeFormatInfo" /> obiekt jest tylko do odczytu.</exception>
        <related type="Article" href="~/docs/standard/base-types/standard-date-and-time-format-strings.md">Standardowe ciągi formatujące datę i godzinę</related>
        <related type="Article" href="~/docs/standard/base-types/custom-date-and-time-format-strings.md">Niestandardowe ciągi formatujące datę i godzinę</related>
      </Docs>
    </Member>
    <Member MemberName="LongTimePattern">
      <MemberSignature Language="C#" Value="public string LongTimePattern { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string LongTimePattern" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.DateTimeFormatInfo.LongTimePattern" />
      <MemberSignature Language="VB.NET" Value="Public Property LongTimePattern As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ LongTimePattern { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.LongTimePattern : string with get, set" Usage="System.Globalization.DateTimeFormatInfo.LongTimePattern" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia ciąg formatu niestandardowego dla wartości dużo czasu.</summary>
        <value>Wzorzec formatu wartości dużo czasu.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Globalization.DateTimeFormatInfo.LongTimePattern%2A> Właściwość definiuje format specyficzny dla kultury ciągów daty, które są zwracane przez wywołania <xref:System.DateTime.ToString%2A?displayProperty=nameWithType> i <xref:System.DateTimeOffset.ToString%2A?displayProperty=nameWithType> metody i przez formatowania złożonego ciągi, które są dostarczane na ciąg formatu standardowego "T".  
  
 Zalecane ustawienie separator godziny we wzorcu dużo czasu na dokładny ciąg zamiast symbolu zastępczego separator godziny. Na przykład aby uzyskać wzorzec h-mm-ss, należy ustawić wzorzec daty długiej do "h-mm-ss".  
  
   
  
## Examples  
 Poniższy przykład wyświetla wartość <xref:System.Globalization.DateTimeFormatInfo.LongTimePattern%2A> dla kilku języków.  
  
 [!code-cpp[System.Globalization.DateTimeFormatInfo.LongTimePattern#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.LongTimePattern/CPP/dtfi_longtimepattern.cpp#1)]
 [!code-csharp[System.Globalization.DateTimeFormatInfo.LongTimePattern#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.LongTimePattern/CS/dtfi_longtimepattern.cs#1)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.LongTimePattern#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.LongTimePattern/VB/dtfi_longtimepattern.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Właściwość jest ustawiana na <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">Ustawiono właściwość i <see cref="T:System.Globalization.DateTimeFormatInfo" /> obiekt jest tylko do odczytu.</exception>
        <related type="Article" href="~/docs/standard/base-types/standard-date-and-time-format-strings.md">Standardowe ciągi formatujące datę i godzinę</related>
        <related type="Article" href="~/docs/standard/base-types/custom-date-and-time-format-strings.md">Niestandardowe ciągi formatujące datę i godzinę</related>
      </Docs>
    </Member>
    <Member MemberName="MonthDayPattern">
      <MemberSignature Language="C#" Value="public string MonthDayPattern { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MonthDayPattern" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.DateTimeFormatInfo.MonthDayPattern" />
      <MemberSignature Language="VB.NET" Value="Public Property MonthDayPattern As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ MonthDayPattern { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.MonthDayPattern : string with get, set" Usage="System.Globalization.DateTimeFormatInfo.MonthDayPattern" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia ciąg formatu niestandardowego dla wartości miesiąca i dnia.</summary>
        <value>Ciąg formatu niestandardowego dla wartości miesiąca i dnia.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Globalization.DateTimeFormatInfo.MonthDayPattern%2A> Właściwość definiuje format specyficzny dla kultury ciągów daty, które są zwracane przez wywołania <xref:System.DateTime.ToString%2A?displayProperty=nameWithType> i <xref:System.DateTimeOffset.ToString%2A?displayProperty=nameWithType> metody i formatowania złożonego ciągi, które są dostarczane, "m" i ciągi formatu standardowego "M".  
  
 Ta właściwość ma wpływ, jeśli wartość <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> zmiany właściwości.  
  
 Zalecane ustawienie separator daty we wzorcu dokładny ciąg, zamiast symbol zastępczy separator daty z miesiąc i dzień. Na przykład uzyskać wzorzec MM-DD, należy ustawić wzorzec miesiąc i dzień do "MM-DD".  
  
   
  
## Examples  
 Poniższy przykład wyświetla wartość <xref:System.Globalization.DateTimeFormatInfo.MonthDayPattern%2A> dla kilku języków.  
  
 [!code-cpp[System.Globalization.DateTimeFormatInfo.MonthDayPattern#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.MonthDayPattern/CPP/dtfi_monthdaypattern.cpp#1)]
 [!code-csharp[System.Globalization.DateTimeFormatInfo.MonthDayPattern#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.MonthDayPattern/CS/dtfi_monthdaypattern.cs#1)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.MonthDayPattern#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.MonthDayPattern/VB/dtfi_monthdaypattern.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Właściwość jest ustawiana na <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">Ustawiono właściwość i <see cref="T:System.Globalization.DateTimeFormatInfo" /> obiekt jest tylko do odczytu.</exception>
        <related type="Article" href="~/docs/standard/base-types/standard-date-and-time-format-strings.md">Standardowe ciągi formatujące datę i godzinę</related>
        <related type="Article" href="~/docs/standard/base-types/custom-date-and-time-format-strings.md">Niestandardowe ciągi formatujące datę i godzinę</related>
      </Docs>
    </Member>
    <Member MemberName="MonthGenitiveNames">
      <MemberSignature Language="C#" Value="public string[] MonthGenitiveNames { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] MonthGenitiveNames" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.DateTimeFormatInfo.MonthGenitiveNames" />
      <MemberSignature Language="VB.NET" Value="Public Property MonthGenitiveNames As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::String ^&gt; ^ MonthGenitiveNames { cli::array &lt;System::String ^&gt; ^ get(); void set(cli::array &lt;System::String ^&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.MonthGenitiveNames : string[] with get, set" Usage="System.Globalization.DateTimeFormatInfo.MonthGenitiveNames" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia tablica ciągów nazw miesięcy skojarzone z bieżącym <see cref="T:System.Globalization.DateTimeFormatInfo" /> obiektu.</summary>
        <value>Tablica ciągu nazwy miesięcy.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 W przypadku niektórych języków nazwę miesiąca, który jest częścią daty pojawia się w przypadku genitive. Na przykład daty w rosyjski (Rosja) lub "ru-RU" kultury składa się z numer dnia i miesiąca genitive nazwy, np. 1 Января.  
  
 Gdy ta właściwość jest ustawiona, tablicy musi być jednowymiarowy i musi mieć dokładnie 13 elementów. <xref:System.Globalization.Calendar> obiekty pomieścić kalendarzy z 13 miesięcy. Pierwszy element (element o indeksie zero) reprezentuje pierwszy miesiąc roku, zdefiniowane przez <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> właściwości. Jeśli ustawisz <xref:System.Globalization.DateTimeFormatInfo.MonthGenitiveNames%2A> właściwość, należy także ustawić <xref:System.Globalization.DateTimeFormatInfo.MonthNames%2A> właściwości.  
  
   
  
## Examples  
 Poniższy przykład pokazuje kilka metod i właściwości, które określają daty i wzorce formatu czasu, nazwa kalendarz natywny i pełnego i skróconej miesiąca i nazwy dni.  
  
 [!code-csharp[sys.glob.DTFI1#1](~/samples/snippets/csharp/VS_Snippets_CLR/sys.glob.DTFI1/cs/dtfi1.cs#1)]
 [!code-vb[sys.glob.DTFI1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/sys.glob.DTFI1/vb/dtfi1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">W operacji zestawu tablica ma charakter wielowymiarowy lub o długości, który nie jest dokładnie 13.</exception>
        <exception cref="T:System.ArgumentNullException">W operacji zestawu, tablica lub jeden z jego elementów jest <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">W operacji zestawu, bieżący <see cref="T:System.Globalization.DateTimeFormatInfo" /> obiekt jest tylko do odczytu.</exception>
        <altmember cref="P:System.Globalization.DateTimeFormatInfo.AbbreviatedMonthGenitiveNames" />
        <altmember cref="P:System.Globalization.DateTimeFormatInfo.MonthNames" />
        <altmember cref="P:System.Globalization.DateTimeFormatInfo.AbbreviatedMonthNames" />
      </Docs>
    </Member>
    <Member MemberName="MonthNames">
      <MemberSignature Language="C#" Value="public string[] MonthNames { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] MonthNames" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.DateTimeFormatInfo.MonthNames" />
      <MemberSignature Language="VB.NET" Value="Public Property MonthNames As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::String ^&gt; ^ MonthNames { cli::array &lt;System::String ^&gt; ^ get(); void set(cli::array &lt;System::String ^&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.MonthNames : string[] with get, set" Usage="System.Globalization.DateTimeFormatInfo.MonthNames" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia tablicę jednowymiarową typu <see cref="T:System.String" /> zawierającą pełne nazwy miesięcy specyficzne dla kultury.</summary>
        <value>Jednowymiarowa tablica typu <see cref="T:System.String" /> zawierającą pełne nazwy miesięcy specyficzne dla kultury. W kalendarzu 12-miesięcznego 13 element tablicy jest pusty ciąg. Tablica <see cref="P:System.Globalization.DateTimeFormatInfo.InvariantInfo" /> zawiera "Stycznia", "Czerwiec", "Marca", "Kwiecień", "Maja", "Czerwiec", "Lipca", "Sierpnia", "Września", "Października", "Listopada", "Grudnia" i "".</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Gdy ta właściwość jest ustawiona, tablicy musi być jednowymiarowy i musi mieć dokładnie 13 elementów. <xref:System.Globalization.Calendar> obiekty pomieścić kalendarzy z 13 miesięcy. Pierwszy element (element o indeksie zero) reprezentuje pierwszy miesiąc roku, zdefiniowane przez <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> właściwości.  
  
 Jeśli ustawisz <xref:System.Globalization.DateTimeFormatInfo.MonthNames%2A> właściwość, należy także ustawić <xref:System.Globalization.DateTimeFormatInfo.MonthGenitiveNames%2A> właściwości.  
  
 Jeśli wzorcem niestandardowym zawiera wzorzec formatu "MMMM" <xref:System.DateTime.ToString%2A?displayProperty=nameWithType> wyświetlana jest wartość <xref:System.Globalization.DateTimeFormatInfo.MonthNames%2A> zamiast "MMMM" we wzorcu formatu.  
  
 Ta właściwość ma wpływ, jeśli wartość <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> zmiany właściwości.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Właściwość jest ustawiana na <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">Właściwość jest ustawiany na tablicy wielowymiarowej lub zawierający długości, która nie jest dokładnie 13.</exception>
        <exception cref="T:System.InvalidOperationException">Ustawiono właściwość i <see cref="T:System.Globalization.DateTimeFormatInfo" /> obiekt jest tylko do odczytu.</exception>
        <altmember cref="P:System.Globalization.DateTimeFormatInfo.AbbreviatedMonthNames" />
        <altmember cref="P:System.Globalization.DateTimeFormatInfo.MonthGenitiveNames" />
        <altmember cref="M:System.Globalization.DateTimeFormatInfo.GetMonthName(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="NativeCalendarName">
      <MemberSignature Language="C#" Value="public string NativeCalendarName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string NativeCalendarName" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.DateTimeFormatInfo.NativeCalendarName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NativeCalendarName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ NativeCalendarName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.NativeCalendarName : string" Usage="System.Globalization.DateTimeFormatInfo.NativeCalendarName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera nazwę natywnych kalendarza skojarzonych z bieżącym <see cref="T:System.Globalization.DateTimeFormatInfo" /> obiektu.</summary>
        <value>Natywne nazwę kalendarz używany w kulturze skojarzone z bieżącym <see cref="T:System.Globalization.DateTimeFormatInfo" /> obiektu, jeśli ta nazwa jest dostępna lub pustym ciągiem (""), jeśli nazwa kalendarz natywny jest niedostępna.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład pokazuje kilka metod i właściwości, które określają daty i wzorce formatu czasu, nazwa kalendarz natywny i pełnego i skróconej miesiąca i nazwy dni.  
  
 [!code-csharp[sys.glob.DTFI1#1](~/samples/snippets/csharp/VS_Snippets_CLR/sys.glob.DTFI1/cs/dtfi1.cs#1)]
 [!code-vb[sys.glob.DTFI1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/sys.glob.DTFI1/vb/dtfi1.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="usage"><para>Jeśli <see cref="P:System.Globalization.DateTimeFormatInfo.Calendar" /> jest <see cref="T:System.Globalization.TaiwanCalendar" /> ale <see cref="P:System.Threading.Thread.CurrentCulture" /> nie jest "zh-TW", następnie <see cref="P:System.Globalization.DateTimeFormatInfo.NativeCalendarName" />, <see cref="M:System.Globalization.DateTimeFormatInfo.GetEraName(System.Int32)" />, i <see cref="M:System.Globalization.DateTimeFormatInfo.GetAbbreviatedEraName(System.Int32)" /> zwraca pusty ciąg ("").</para></block>
      </Docs>
    </Member>
    <Member MemberName="PMDesignator">
      <MemberSignature Language="C#" Value="public string PMDesignator { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PMDesignator" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.DateTimeFormatInfo.PMDesignator" />
      <MemberSignature Language="VB.NET" Value="Public Property PMDesignator As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ PMDesignator { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.PMDesignator : string with get, set" Usage="System.Globalization.DateTimeFormatInfo.PMDesignator" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia oznaczenie ciągu godzin, które są "post meridiem" (po południu).</summary>
        <value>Oznaczenie ciągu godzin, które są "post meridiem" (po południu). Wartość domyślna dla <see cref="P:System.Globalization.DateTimeFormatInfo.InvariantInfo" /> jest "PM".</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Globalization.DateTimeFormatInfo.PMDesignator%2A> Właściwość jest używane przez cały czas od 12:00:00 (południe) do 23:59:59.999.  
  
 Jeśli niestandardowy wzorzec zawiera wzorzec format "tt", a czas jest po południu, <xref:System.DateTime.ToString%2A?displayProperty=nameWithType> wyświetlana jest wartość <xref:System.Globalization.DateTimeFormatInfo.PMDesignator%2A> zamiast "tt" we wzorcu formatu. Jeśli wzorcem niestandardowym zawiera wzorzec formatu "t", tylko pierwszy znak <xref:System.Globalization.DateTimeFormatInfo.PMDesignator%2A> jest wyświetlana. Aplikacja powinna używać "tt" dla języków, dla których jest konieczne utrzymywanie rozróżnienie między AM i PM. Przykładem jest język japoński, dla którego oznaczenia AM i PM różnią się w drugim znaku, a nie w pierwszym znaku.  
  
 Dla języków, które nie korzystają z oznaczenie PM ta właściwość zwraca pusty ciąg.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Właściwość jest ustawiana na <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">Ustawiono właściwość i <see cref="T:System.Globalization.DateTimeFormatInfo" /> obiekt jest tylko do odczytu.</exception>
        <altmember cref="P:System.Globalization.DateTimeFormatInfo.AMDesignator" />
      </Docs>
    </Member>
    <Member MemberName="ReadOnly">
      <MemberSignature Language="C#" Value="public static System.Globalization.DateTimeFormatInfo ReadOnly (System.Globalization.DateTimeFormatInfo dtfi);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Globalization.DateTimeFormatInfo ReadOnly(class System.Globalization.DateTimeFormatInfo dtfi) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.DateTimeFormatInfo.ReadOnly(System.Globalization.DateTimeFormatInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ReadOnly (dtfi As DateTimeFormatInfo) As DateTimeFormatInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Globalization::DateTimeFormatInfo ^ ReadOnly(System::Globalization::DateTimeFormatInfo ^ dtfi);" />
      <MemberSignature Language="F#" Value="static member ReadOnly : System.Globalization.DateTimeFormatInfo -&gt; System.Globalization.DateTimeFormatInfo" Usage="System.Globalization.DateTimeFormatInfo.ReadOnly dtfi" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Globalization.DateTimeFormatInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dtfi" Type="System.Globalization.DateTimeFormatInfo" />
      </Parameters>
      <Docs>
        <param name="dtfi"><see cref="T:System.Globalization.DateTimeFormatInfo" /> Obiekt do opakowania.</param>
        <summary>Zwraca tylko do odczytu <see cref="T:System.Globalization.DateTimeFormatInfo" /> otoki.</summary>
        <returns>Tylko do odczytu <see cref="T:System.Globalization.DateTimeFormatInfo" /> otoki.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Tę otokę zapobiega wszelkie modyfikacje `dtfi`.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="dtfi" /> jest <see langword="null" />.</exception>
        <altmember cref="M:System.Globalization.DateTimeFormatInfo.GetAllDateTimePatterns(System.Char)" />
      </Docs>
    </Member>
    <Member MemberName="RFC1123Pattern">
      <MemberSignature Language="C#" Value="public string RFC1123Pattern { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string RFC1123Pattern" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.DateTimeFormatInfo.RFC1123Pattern" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RFC1123Pattern As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ RFC1123Pattern { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.RFC1123Pattern : string" Usage="System.Globalization.DateTimeFormatInfo.RFC1123Pattern" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera ciąg formatu niestandardowego dla czasu wartość, która jest na podstawie Internet Engineering Task Force (IETF) żądania komentarzy (RFC) specyfikacji 1123.</summary>
        <value>Ciąg formatu niestandardowego, jako wartość czasu, który jest oparty na specyfikacji IETF RFC 1123.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Globalization.DateTimeFormatInfo.RFC1123Pattern%2A> Właściwość definiuje format specyficzny dla kultury ciągów daty, które są zwracane przez wywołania <xref:System.DateTime.ToString%2A?displayProperty=nameWithType> i <xref:System.DateTimeOffset.ToString%2A?displayProperty=nameWithType> metody i formatowania złożonego ciągi, które są dostarczane, "r" i ciągi formatu standardowego "R".  
  
 Wzorzec RFC1123 odzwierciedla zdefiniowany standard, a właściwość jest tylko do odczytu. Dlatego jest zawsze takie same, niezależnie od kultury. Ciąg formatu niestandardowego to „ddd, dd MMM yyyy HH':'mm':'ss 'GMT'”.  
  
   
  
## Examples  
 Poniższy przykład wyświetla wartość RFC1123Pattern kilka kultur.  
  
 [!code-cpp[System.Globalization.DateTimeFormatInfo.RFC1123Pattern#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.RFC1123Pattern/CPP/dtfi_rfc1123pattern.cpp#1)]
 [!code-csharp[System.Globalization.DateTimeFormatInfo.RFC1123Pattern#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.RFC1123Pattern/CS/dtfi_rfc1123pattern.cs#1)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.RFC1123Pattern#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.RFC1123Pattern/VB/dtfi_rfc1123pattern.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/base-types/standard-date-and-time-format-strings.md">Standardowe ciągi formatujące datę i godzinę</related>
        <related type="Article" href="~/docs/standard/base-types/custom-date-and-time-format-strings.md">Niestandardowe ciągi formatujące datę i godzinę</related>
      </Docs>
    </Member>
    <Member MemberName="SetAllDateTimePatterns">
      <MemberSignature Language="C#" Value="public void SetAllDateTimePatterns (string[] patterns, char format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetAllDateTimePatterns(string[] patterns, char format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.DateTimeFormatInfo.SetAllDateTimePatterns(System.String[],System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetAllDateTimePatterns (patterns As String(), format As Char)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetAllDateTimePatterns(cli::array &lt;System::String ^&gt; ^ patterns, char format);" />
      <MemberSignature Language="F#" Value="member this.SetAllDateTimePatterns : string[] * char -&gt; unit" Usage="dateTimeFormatInfo.SetAllDateTimePatterns (patterns, format)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="patterns" Type="System.String[]" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="format" Type="System.Char" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="patterns">Tablica ciągów formatu niestandardowego.</param>
        <param name="format">Ciąg formatu standardowego, skojarzone z niestandardowych formatów ciągów, określone w <paramref name="patterns" /> parametru.</param>
        <summary>Ustawia niestandardowych ciągów daty i godziny formatu, które odpowiadają określonej standardowym ciągiem formatującym.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Globalization.DateTimeFormatInfo.SetAllDateTimePatterns%2A> Metoda definiuje ciągi formatów niestandardowych, które odnoszą się do określonego standardowa Data i godzina w ciągu formatu. Jeśli wywołanie datę i godzinę, zawiera metody formatowania daty standardowe i ciąg formatu godziny określone przez `format`, metoda używa pierwszego elementu w `patterns` tablicy, aby zdefiniować format ciągu wynikowego.  
  
> [!WARNING]
>  `Parse` i `TryParse` metody nie pełni iteracji wszystkie ciągi w `patterns` podczas analizowania reprezentację ciągu daty i godziny. Jeśli potrzebujesz ciąg daty i godziny, aby formaty określonego podczas operacji analizowania, należy przekazać tablicę prawidłowe formaty stosowane do <xref:System.DateTime.ParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=nameWithType>, <xref:System.DateTimeOffset.ParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=nameWithType>, <xref:System.DateTime.TryParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTime%40%29?displayProperty=nameWithType>, lub <xref:System.DateTimeOffset.TryParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTimeOffset%40%29?displayProperty=nameWithType> metody.  
  
 Można zdefiniować ciągi formatów niestandardowych, które odpowiadają "d", "D", "t", "T" i "y" lub "Y" Standardowy format daty i czasu ciągów formatu. Jeśli wartość `format` jest inny ciąg formatu standardowego, <xref:System.Globalization.DateTimeFormatInfo.SetAllDateTimePatterns%2A> metoda zgłasza wyjątek <xref:System.ArgumentException>.  
  
 Jeśli Twoje niestandardowych ciągów daty i godziny format obejmują separatorów daty, należy jawnie określić separator daty, zamiast polegania na metodę formatowania lub analizowania, która zastępuje specyfikator formatu niestandardowego "/" separatorem określonej daty. Na przykład aby uzyskać wzorzec MM-DD-RRRR, należy użyć wzorca "MM-DD-yyyy".  
  
   
  
## Examples  
 Poniższy przykład tworzy wystąpienie <xref:System.Globalization.CultureInfo> obiektu, że reprezentuje wartość "en US" (Angielski - Stany Zjednoczone) kultury i używa go w celu przeanalizowania tablicę ciągów daty i godziny przy użyciu ciągu formatu standardowego "Y". Następnie używa <xref:System.Globalization.DateTimeFormatInfo.SetAllDateTimePatterns%2A> metodę, aby skojarzyć nowy ciąg formatu niestandardowego za pomocą ciągu formatu standardowego "Y", a następnie próbuje przeanalizować tablicy ciągów daty i godziny. Dane wyjściowe z przykładu pokazuje, że nowy ciąg formatu niestandardowego jest używana w operacjach formatowania i analizy.  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.SetAllDateTimePatterns#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.setalldatetimepatterns/cs/setalldatetimepatterns.cs#1)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.SetAllDateTimePatterns#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.setalldatetimepatterns/vb/setalldatetimepatterns.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="patterns" /> jest <see langword="null" /> lub tablicę o zerowej długości.  
  
—lub— 
 <paramref name="format" /> nie jest prawidłową standardowym ciągiem formatującym lub jest standardowym ciągiem formatującym wzorce, których nie można ustawić.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="patterns" /> do elementu tablicy, w których wartość ma <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">To <see cref="T:System.Globalization.DateTimeFormatInfo" /> obiekt jest tylko do odczytu.</exception>
        <altmember cref="Overload:System.Globalization.DateTimeFormatInfo.GetAllDateTimePatterns" />
        <related type="Article" href="~/docs/standard/base-types/standard-date-and-time-format-strings.md">Standardowe ciągi formatujące datę i godzinę</related>
        <related type="Article" href="~/docs/standard/base-types/custom-date-and-time-format-strings.md">Niestandardowe ciągi formatujące datę i godzinę</related>
      </Docs>
    </Member>
    <Member MemberName="ShortDatePattern">
      <MemberSignature Language="C#" Value="public string ShortDatePattern { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ShortDatePattern" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.DateTimeFormatInfo.ShortDatePattern" />
      <MemberSignature Language="VB.NET" Value="Public Property ShortDatePattern As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ShortDatePattern { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ShortDatePattern : string with get, set" Usage="System.Globalization.DateTimeFormatInfo.ShortDatePattern" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia ciąg formatu niestandardowego dla wartości daty krótkiej.</summary>
        <value>Ciąg formatu niestandardowego dla wartości daty krótkiej.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Globalization.DateTimeFormatInfo.ShortDatePattern%2A> Właściwość definiuje format specyficzny dla kultury ciągów daty, które są zwracane przez wywołania <xref:System.DateTime.ToString%2A?displayProperty=nameWithType> i <xref:System.DateTimeOffset.ToString%2A?displayProperty=nameWithType> metody i przez formatowania złożonego ciągi, które są dostarczane na ciąg formatu standardowego "d".  
  
 Ta właściwość ma wpływ, jeśli wartość <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> zmiany właściwości.  
  
   
  
## Examples  
 Poniższy przykład wyświetla wartość <xref:System.Globalization.DateTimeFormatInfo.ShortDatePattern%2A> właściwości i wartość daty sformatowane przy użyciu <xref:System.Globalization.DateTimeFormatInfo.ShortDatePattern%2A> właściwości dla kilku języków.  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.ShortDatePattern#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.ShortDatePattern/CS/dtfi_shortdatepattern.cs#1)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.ShortDatePattern#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.ShortDatePattern/VB/dtfi_shortdatepattern.vb#1)]  
  
 Poniższy przykład modyfikuje <xref:System.Globalization.DateTimeFormatInfo.ShortDatePattern%2A> właściwość <xref:System.Globalization.DateTimeFormatInfo> obiekt, który reprezentuje konwencje formatowania kultury angielski (Stany Zjednoczone). Wyświetla również wartość typu date dwa razy, najpierw aby odzwierciedlić, oryginalnym <xref:System.Globalization.DateTimeFormatInfo.ShortDatePattern%2A> właściwości i następnie w celu odzwierciedlenia nowej wartości właściwości.  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.ShortDatePattern#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.ShortDatePattern/CS/shortdatepattern1.cs#2)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.ShortDatePattern#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.ShortDatePattern/VB/shortdatepattern1.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Właściwość jest ustawiana na <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">Ustawiono właściwość i <see cref="T:System.Globalization.DateTimeFormatInfo" /> obiekt jest tylko do odczytu.</exception>
        <related type="Article" href="~/docs/standard/base-types/standard-date-and-time-format-strings.md">Standardowe ciągi formatujące datę i godzinę</related>
        <related type="Article" href="~/docs/standard/base-types/custom-date-and-time-format-strings.md">Niestandardowe ciągi formatujące datę i godzinę</related>
      </Docs>
    </Member>
    <Member MemberName="ShortestDayNames">
      <MemberSignature Language="C#" Value="public string[] ShortestDayNames { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] ShortestDayNames" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.DateTimeFormatInfo.ShortestDayNames" />
      <MemberSignature Language="VB.NET" Value="Public Property ShortestDayNames As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::String ^&gt; ^ ShortestDayNames { cli::array &lt;System::String ^&gt; ^ get(); void set(cli::array &lt;System::String ^&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ShortestDayNames : string[] with get, set" Usage="System.Globalization.DateTimeFormatInfo.ShortestDayNames" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia ciąg tablicę najkrótszej unikatowy skrócone nazwy dni skojarzone z bieżącym <see cref="T:System.Globalization.DateTimeFormatInfo" /> obiektu.</summary>
        <value>Tablica ciągu nazwy dni.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład pokazuje kilka metod i właściwości, które określają daty i wzorce formatu czasu, nazwa kalendarz natywny i pełnego i skróconej miesiąca i nazwy dni.  
  
 [!code-csharp[sys.glob.DTFI1#1](~/samples/snippets/csharp/VS_Snippets_CLR/sys.glob.DTFI1/cs/dtfi1.cs#1)]
 [!code-vb[sys.glob.DTFI1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/sys.glob.DTFI1/vb/dtfi1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">W operacji zestawu tablicy nie ma dokładnie siedem elementów.</exception>
        <exception cref="T:System.ArgumentNullException">W operacji zestawu, jest tablica wartości lub jeden z elementów tablicy wartości <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">W operacji zestawu, bieżący <see cref="T:System.Globalization.DateTimeFormatInfo" /> obiekt jest tylko do odczytu.</exception>
      </Docs>
    </Member>
    <Member MemberName="ShortTimePattern">
      <MemberSignature Language="C#" Value="public string ShortTimePattern { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ShortTimePattern" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.DateTimeFormatInfo.ShortTimePattern" />
      <MemberSignature Language="VB.NET" Value="Public Property ShortTimePattern As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ShortTimePattern { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ShortTimePattern : string with get, set" Usage="System.Globalization.DateTimeFormatInfo.ShortTimePattern" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia ciąg formatu niestandardowego dla wartości godziny krótkiej.</summary>
        <value>Ciąg formatu niestandardowego dla wartości godziny krótkiej.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Globalization.DateTimeFormatInfo.ShortTimePattern%2A> Właściwość definiuje format specyficzny dla kultury ciągów daty, które są zwracane przez wywołania <xref:System.DateTime.ToString%2A?displayProperty=nameWithType> i <xref:System.DateTimeOffset.ToString%2A?displayProperty=nameWithType> metody i przez formatowania złożonego ciągi, które są dostarczane na ciąg formatu standardowego "t".  
  
 Zalecane ustawienie separator godziny we wzorcu dokładny ciąg, zamiast symbolu zastępczego separator godziny z krótkim czasie. Na przykład aby uzyskać wzorzec h-mm-ss, należy ustawić wzorzec godziny krótkiej do "h-mm-ss".  
  
   
  
## Examples  
 Poniższy przykład wyświetla wartość <xref:System.Globalization.DateTimeFormatInfo.ShortTimePattern%2A> dla kilku języków.  
  
 [!code-cpp[System.Globalization.DateTimeFormatInfo.ShortTimePattern#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.ShortTimePattern/CPP/dtfi_shorttimepattern.cpp#1)]
 [!code-csharp[System.Globalization.DateTimeFormatInfo.ShortTimePattern#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.ShortTimePattern/CS/dtfi_shorttimepattern.cs#1)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.ShortTimePattern#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.ShortTimePattern/VB/dtfi_shorttimepattern.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Właściwość jest ustawiana na <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">Ustawiono właściwość i <see cref="T:System.Globalization.DateTimeFormatInfo" /> obiekt jest tylko do odczytu.</exception>
        <related type="Article" href="~/docs/standard/base-types/standard-date-and-time-format-strings.md">Standardowe ciągi formatujące datę i godzinę</related>
        <related type="Article" href="~/docs/standard/base-types/custom-date-and-time-format-strings.md">Niestandardowe ciągi formatujące datę i godzinę</related>
      </Docs>
    </Member>
    <Member MemberName="SortableDateTimePattern">
      <MemberSignature Language="C#" Value="public string SortableDateTimePattern { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SortableDateTimePattern" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.DateTimeFormatInfo.SortableDateTimePattern" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SortableDateTimePattern As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SortableDateTimePattern { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SortableDateTimePattern : string" Usage="System.Globalization.DateTimeFormatInfo.SortableDateTimePattern" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera ciąg formatu niestandardowego dla sortowanie wartość daty i godziny.</summary>
        <value>Ciąg formatu niestandardowego dla sortowanie wartość daty i godziny.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Globalization.DateTimeFormatInfo.SortableDateTimePattern%2A> Właściwość definiuje format specyficzny dla kultury ciągów daty, które są zwracane przez wywołania <xref:System.DateTime.ToString%2A?displayProperty=nameWithType> i <xref:System.DateTimeOffset.ToString%2A?displayProperty=nameWithType> metody i przez formatowania złożonego ciągi, które są dostarczane na ciąg formatu standardowego "s".  
  
 Format ciągu zwracanego przez <xref:System.Globalization.DateTimeFormatInfo.SortableDateTimePattern%2A> właściwość odzwierciedla zdefiniowany standard (ISO 8601), a właściwość jest tylko do odczytu. Dlatego jest zawsze takie same, niezależnie od kultury. Ciąg formatu niestandardowego to „yyyy'-'MM'-'dd'T'HH':'mm':'ss”.  
  
   
  
## Examples  
 Poniższy przykład wyświetla wartość <xref:System.Globalization.DateTimeFormatInfo.SortableDateTimePattern%2A> dla kilku języków.  
  
 [!code-cpp[System.Globalization.DateTimeFormatInfo.SortableDateTimePattern#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.SortableDateTimePattern/CPP/dtfi_sortabledatetimepattern.cpp#1)]
 [!code-csharp[System.Globalization.DateTimeFormatInfo.SortableDateTimePattern#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.SortableDateTimePattern/CS/dtfi_sortabledatetimepattern.cs#1)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.SortableDateTimePattern#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.SortableDateTimePattern/VB/dtfi_sortabledatetimepattern.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Globalization.DateTimeFormatInfo.UniversalSortableDateTimePattern" />
        <related type="Article" href="~/docs/standard/base-types/standard-date-and-time-format-strings.md">Standardowe ciągi formatujące datę i godzinę</related>
        <related type="Article" href="~/docs/standard/base-types/custom-date-and-time-format-strings.md">Niestandardowe ciągi formatujące datę i godzinę</related>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.Serialization.ISerializable.GetObjectData">
      <MemberSignature Language="C#" Value="void ISerializable.GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.Serialization.ISerializable.GetObjectData(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.DateTimeFormatInfo.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Sub GetObjectData (info As SerializationInfo, context As StreamingContext) Implements ISerializable.GetObjectData" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.Serialization.ISerializable.GetObjectData(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context) = System::Runtime::Serialization::ISerializable::GetObjectData;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" Index="0" FrameworkAlternate="netframework-1.1" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" Index="1" FrameworkAlternate="netframework-1.1" />
      </Parameters>
      <Docs>
        <param name="info">To be added.</param>
        <param name="context">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TimeSeparator">
      <MemberSignature Language="C#" Value="public string TimeSeparator { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TimeSeparator" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.DateTimeFormatInfo.TimeSeparator" />
      <MemberSignature Language="VB.NET" Value="Public Property TimeSeparator As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ TimeSeparator { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.TimeSeparator : string with get, set" Usage="System.Globalization.DateTimeFormatInfo.TimeSeparator" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia ciąg, który rozdziela składniki godziny, oznacza to, godziny, minuty i sekundy.</summary>
        <value>Ciąg, który rozdziela składniki godziny. Wartość domyślna dla <see cref="P:System.Globalization.DateTimeFormatInfo.InvariantInfo" /> jest ":".</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli wzorcem niestandardowym zawiera wzorzec formatu ":", <xref:System.DateTime.ToString%2A?displayProperty=nameWithType> wyświetlana jest wartość <xref:System.Globalization.DateTimeFormatInfo.TimeSeparator%2A> zamiast ":" we wzorcu formatu.  
  
 Separator godziny jest tworzony na podstawie <xref:System.Globalization.DateTimeFormatInfo.ShortTimePattern%2A> właściwości. Firma Microsoft zaleca, Ustaw separator godziny w skrócie, lub długi czas wzorców w celu dokładnego ciągu zamiast symbolu zastępczego separator godziny. Na przykład uzyskać wzorzec h-mm-ss, należy ustawić wzorzec do "h-mm-ss". Praktyka ta umożliwia także ustawić wzorców, takich jak "h'h" mm am "ss" "(36m 12s 3-h) zawierające wiele typów separatorów. <xref:System.Globalization.DateTimeFormatInfo.TimeSeparator%2A> Właściwość definiuje ciąg, który zastępuje separator godziny (":" Niestandardowa data i specyfikator formatu godziny) w ciągu wynikowym w operacji formatowania. Definiuje również ciągu separatora godziny podczas operacji analizowania.  
  
   
  
## Examples  
 Poniższy przykład tworzy wystąpienie <xref:System.Globalization.CultureInfo> obiektu jego separator daty, który zmienia się dla kultury en US ".", a data jest wyświetlana przy użyciu "t", "T", "F", "f", "G" i ciągi formatu standardowego "g".  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.TimeSeparator#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.timeseparator/cs/timeseparatorex.cs#1)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.TimeSeparator#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.timeseparator/vb/timeseparatorex.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Właściwość jest ustawiana na <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">Ustawiono właściwość i <see cref="T:System.Globalization.DateTimeFormatInfo" /> obiekt jest tylko do odczytu.</exception>
        <altmember cref="P:System.Globalization.DateTimeFormatInfo.DateSeparator" />
        <related type="Article" href="~/docs/standard/base-types/custom-date-and-time-format-strings.md">Niestandardowe ciągi formatujące datę i godzinę</related>
        <related type="Article" href="~/docs/standard/base-types/standard-date-and-time-format-strings.md">Standardowe ciągi formatujące datę i godzinę</related>
      </Docs>
    </Member>
    <Member MemberName="UniversalSortableDateTimePattern">
      <MemberSignature Language="C#" Value="public string UniversalSortableDateTimePattern { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UniversalSortableDateTimePattern" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.DateTimeFormatInfo.UniversalSortableDateTimePattern" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UniversalSortableDateTimePattern As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ UniversalSortableDateTimePattern { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.UniversalSortableDateTimePattern : string" Usage="System.Globalization.DateTimeFormatInfo.UniversalSortableDateTimePattern" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera ciąg formatu niestandardowego dla uniwersalnych, sortowania ciąg daty i godziny, zgodnie z definicją ISO 8601.</summary>
        <value>Ciąg formatu niestandardowego dla uniwersalnych, sortowania ciąg daty i godziny.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Globalization.DateTimeFormatInfo.UniversalSortableDateTimePattern%2A> Właściwość definiuje format ciągów daty, które są zwracane przez wywołania <xref:System.DateTime.ToString%2A?displayProperty=nameWithType> i <xref:System.DateTimeOffset.ToString%2A?displayProperty=nameWithType> metody i przez formatowania złożonego ciągi, które są dostarczane na ciąg formatu standardowego "u". Może służyć do wyświetlania daty i godziny w kolejności można sortować z oznaczeniem uniwersalny czas "Z" na końcu. Format jest sortowanie, ponieważ używa ona zer wiodących na rok, miesiąc, dzień, godzinę, minutę i sekundę. Ciąg formatu niestandardowego ("yyyy '-' MM'-' dd HH': 'mm': 'ss'Z'") jest taki sam, niezależnie od dostawcy kultury lub formatu.  
  
 Format ciągu zwracanego przez <xref:System.Globalization.DateTimeFormatInfo.UniversalSortableDateTimePattern%2A> właściwość odzwierciedla zdefiniowany standard, a właściwość jest tylko do odczytu. Dlatego jest zawsze takie same, niezależnie od kultury. Ciąg formatu niestandardowego to „yyyy'-'MM'-'dd HH':'mm':'ss'Z'”.  
  
   
  
## Examples  
 Poniższy przykład wyświetla wartość <xref:System.Globalization.DateTimeFormatInfo.UniversalSortableDateTimePattern%2A> dla kilku języków.  
  
 [!code-cpp[System.Globalization.DateTimeFormatInfo.UniversalSortableDateTimePattern#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.UniversalSortableDateTimePattern/CPP/dtfi_universalsortabledatetimepattern.cpp#1)]
 [!code-csharp[System.Globalization.DateTimeFormatInfo.UniversalSortableDateTimePattern#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.UniversalSortableDateTimePattern/CS/dtfi_universalsortabledatetimepattern.cs#1)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.UniversalSortableDateTimePattern#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.UniversalSortableDateTimePattern/VB/dtfi_universalsortabledatetimepattern.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Globalization.DateTimeFormatInfo.SortableDateTimePattern" />
        <related type="Article" href="~/docs/standard/base-types/standard-date-and-time-format-strings.md">Ciągi standardowego formatu daty i godziny</related>
        <related type="Article" href="~/docs/standard/base-types/custom-date-and-time-format-strings.md">Niestandardowe ciągi formatujące datę i godzinę</related>
      </Docs>
    </Member>
    <Member MemberName="YearMonthPattern">
      <MemberSignature Language="C#" Value="public string YearMonthPattern { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string YearMonthPattern" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.DateTimeFormatInfo.YearMonthPattern" />
      <MemberSignature Language="VB.NET" Value="Public Property YearMonthPattern As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ YearMonthPattern { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.YearMonthPattern : string with get, set" Usage="System.Globalization.DateTimeFormatInfo.YearMonthPattern" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia ciąg formatu niestandardowego dla wartości roku i miesiąca.</summary>
        <value>Ciąg formatu niestandardowego dla wartości roku i miesiąca.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Globalization.DateTimeFormatInfo.YearMonthPattern%2A> Właściwość definiuje format specyficzny dla kultury ciągów daty, które są zwracane przez wywołania <xref:System.DateTime.ToString%2A?displayProperty=nameWithType> i <xref:System.DateTimeOffset.ToString%2A?displayProperty=nameWithType> metody i formatowania złożonego ciągi, które są dostarczane, "y" i ciągi formatu standardowego "Y".  
  
 Ta właściwość ma wpływ, jeśli wartość <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> zmiany właściwości.  
  
 Zaleca się, że separator daty jest ustawiony w wzorzec miesiąca roku dokładny ciąg zamiast symbol zastępczy separator daty. Na przykład aby uzyskać wzorzec MM-RRRR, należy ustawić wzorzec miesiąca roku do "MM-yyyy".  
  
   
  
## Examples  
 Poniższy przykład wyświetla wartość <xref:System.Globalization.DateTimeFormatInfo.YearMonthPattern%2A> dla kilku języków.  
  
 [!code-cpp[System.Globalization.DateTimeFormatInfo.YearMonthPattern#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.YearMonthPattern/CPP/dtfi_yearmonthpattern.cpp#1)]
 [!code-csharp[System.Globalization.DateTimeFormatInfo.YearMonthPattern#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.YearMonthPattern/CS/dtfi_yearmonthpattern.cs#1)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.YearMonthPattern#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.YearMonthPattern/VB/dtfi_yearmonthpattern.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Właściwość jest ustawiana na <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">Ustawiono właściwość i <see cref="T:System.Globalization.DateTimeFormatInfo" /> obiekt jest tylko do odczytu.</exception>
        <related type="Article" href="~/docs/standard/base-types/standard-date-and-time-format-strings.md">Standardowe ciągi formatujące datę i godzinę</related>
        <related type="Article" href="~/docs/standard/base-types/custom-date-and-time-format-strings.md">Niestandardowe ciągi formatujące datę i godzinę</related>
      </Docs>
    </Member>
  </Members>
</Type>
