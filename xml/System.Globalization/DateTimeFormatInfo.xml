<Type Name="DateTimeFormatInfo" FullName="System.Globalization.DateTimeFormatInfo">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="109eb84474f226248e8a75e5ce3bb4bbb4d38683" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30452781" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class DateTimeFormatInfo : ICloneable, IFormatProvider" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit DateTimeFormatInfo extends System.Object implements class System.ICloneable, class System.IFormatProvider" />
  <TypeSignature Language="DocId" Value="T:System.Globalization.DateTimeFormatInfo" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class DateTimeFormatInfo&#xA;Implements ICloneable, IFormatProvider" />
  <TypeSignature Language="C++ CLI" Value="public ref class DateTimeFormatInfo sealed : ICloneable, IFormatProvider" />
  <AssemblyInfo>
    <AssemblyName>System.Globalization</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IFormatProvider</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Zawiera informacje specyficzne dla kultury o format wartości daty i godziny.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Właściwości <xref:System.Globalization.DateTimeFormatInfo> klasy zawierają informacje specyficzne dla kultury dla formatowania lub analizowania wartości daty i godziny, takie jak następujące:  
  
-   Wzorce używany do formatowania wartości daty.  
  
-   Wzorce używany do formatowania wartości czasu.  
  
-   Nazwy dni tygodnia.  
  
-   Nazwy miesięcy roku.  
  
-   Godziny and P.M. CAL używane w wartości typu time.  
  
-   Kalendarz, w którym są wyrażane daty.  
  
 W tej sekcji:  
  
-   [Utworzenie wystąpienia obiektu DateTimeFormatInfo](#instantiating)  
  
    -   [Dla Niezmienna kultura](#instantiating_Invariant)  
  
    -   [Dla określonej kultury](#instantiating_Specific)  
  
    -   [Neutralne kultury](#instantiating_neutral)  
  
    -   [Dla bieżącej kultury](#instantiating_Current)  
  
-   [DateTimeFormatInfo i danych dynamicznych](#dynamic)  
  
-   [Formatowanie dat i godzin](#Formatting_dates_times)  
  
-   [Ciągi formatujące i DateTimeFormatInfo właściwości](#properties)  
  
-   [Modyfikowanie właściwości DateTimeFormatInfo](#Modifying)  
  
<a name="instantiating"></a>   
## <a name="instantiating-a-datetimeformatinfo-object"></a>Utworzenie wystąpienia obiektu DateTimeFormatInfo  
 A <xref:System.Globalization.DateTimeFormatInfo> object może reprezentować Konwencji formatowania Niezmienna kultura, określoną kulturę, kultury neutralnej lub bieżącej kultury. W tej sekcji opisano sposób tworzenia wystąpienia każdego typu <xref:System.Globalization.DateTimeFormatInfo> obiektu.  
  
<a name="instantiating_Invariant"></a>   
### <a name="instantiating-a-datetimeformatinfo-object-for-the-invariant-culture"></a>Utworzenie wystąpienia obiektu DateTimeFormatInfo dla kultury niezmiennej  
 Niezmienna kultura reprezentuje kulturę, w której nie uwzględnia się ustawień kulturowych. Jest on oparty na języku angielskim, ale nie na żadnych szczególnych anglojęzycznego kraj/region. Mimo że dane określone kultury może być dynamiczny i można zmienić w celu uwzględnienia nowych Konwencji kultury lub preferencje użytkownika, danych Niezmienna kultura nie zmienia się. Można utworzyć wystąpienia <xref:System.Globalization.DateTimeFormatInfo> obiekt, który reprezentuje Konwencji formatowania kultury invariant w następujący sposób:  
  
-   Pobierając zaletą <xref:System.Globalization.DateTimeFormatInfo.InvariantInfo%2A> właściwości. Zwrócona <xref:System.Globalization.DateTimeFormatInfo> obiekt jest tylko do odczytu.  
  
-   Wywołując bez parametrów <xref:System.Globalization.DateTimeFormatInfo.%23ctor%2A> konstruktora. Zwrócona <xref:System.Globalization.DateTimeFormatInfo> obiekt jest odczytu/zapisu.  
  
-   Pobierając zaletą <xref:System.Globalization.CultureInfo.DateTimeFormat%2A> właściwość z <xref:System.Globalization.CultureInfo> obiektu, który jest zwracany przez <xref:System.Globalization.CultureInfo.InvariantCulture%2A?displayProperty=nameWithType> właściwości. Zwrócona <xref:System.Globalization.DateTimeFormatInfo> obiekt jest tylko do odczytu.  
  
 W poniższym przykładzie użyto każdej z tych metod można utworzyć wystąpienia <xref:System.Globalization.DateTimeFormatInfo> obiekt, który reprezentuje Niezmienna kultura. Następnie wskazuje ona, czy obiekt jest tylko do odczytu.  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/cs/create1.cs#1)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/vb/create1.vb#1)]  
  
<a name="instantiating_Specific"></a>   
### <a name="instantiating-a-datetimeformatinfo-object-for-a-specific-culture"></a>Utworzenie wystąpienia obiektu DateTimeFormatInfo dla określonej kultury  
 Określoną kulturę reprezentuje język, który jest używany w określonym kraju/regionu. Na przykład en US jest określoną kulturą, reprezentujący języka angielskiego używany w Stanach Zjednoczonych i en-CA jest określoną kulturę, który reprezentuje język angielski, używany w Kanady. Można utworzyć wystąpienia <xref:System.Globalization.DateTimeFormatInfo> obiekt, który reprezentuje Konwencji formatowania określonej kultury w następujący sposób:  
  
-   Wywołując <xref:System.Globalization.CultureInfo.GetCultureInfo%28System.String%29?displayProperty=nameWithType> — metoda i pobierania wartość zwracana <xref:System.Globalization.CultureInfo> obiektu <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType> właściwości. Zwrócona <xref:System.Globalization.DateTimeFormatInfo> obiekt jest tylko do odczytu.  
  
-   Przez przekazanie statycznych <xref:System.Globalization.DateTimeFormatInfo.GetInstance%2A> metody <xref:System.Globalization.CultureInfo> obiekt, który reprezentuje kultura którego <xref:System.Globalization.DateTimeFormatInfo> obiekt ma zostać pobrane. Zwrócona <xref:System.Globalization.DateTimeFormatInfo> obiekt jest odczytu/zapisu.  
  
-   Wywołując statycznych <xref:System.Globalization.CultureInfo.CreateSpecificCulture%2A?displayProperty=nameWithType> — metoda i pobierania wartość zwracana <xref:System.Globalization.CultureInfo> obiektu <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType> właściwości. Zwrócona <xref:System.Globalization.DateTimeFormatInfo> obiekt jest odczytu/zapisu.  
  
-   Wywołując <xref:System.Globalization.CultureInfo.%23ctor%2A?displayProperty=nameWithType> klasy Konstruktor i pobierania wartość zwracana <xref:System.Globalization.CultureInfo> obiektu <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType> właściwości. Zwrócona <xref:System.Globalization.DateTimeFormatInfo> obiekt jest odczytu/zapisu.  
  
 Poniższy przykład przedstawia każdego z tych metod, można utworzyć wystąpienia <xref:System.Globalization.DateTimeFormatInfo> obiektu i wskazuje, czy obiekt wynikowy jest tylko do odczytu.  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.Class#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/cs/create1.cs#3)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.Class#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/vb/create1.vb#3)]  
  
<a name="instantiating_neutral"></a>   
### <a name="instantiating-a-datetimeformatinfo-object-for-a-neutral-culture"></a>Utworzenie wystąpienia obiektu DateTimeFormatInfo dla kultury neutralnej  
 Określa kulturę neutralną reprezentuje kultury lub język, która jest niezależna od kraju/regionu; zwykle jest on nadrzędny co najmniej jednego określonego kultur. Na przykład Fr jest kultury neutralnej dla języka francuskiego i element nadrzędny, fr-FR kultury. Można utworzyć wystąpienia <xref:System.Globalization.DateTimeFormatInfo> obiekt, który reprezentuje Konwencji formatowania kultury neutralnej w taki sam sposób, który utworzono <xref:System.Globalization.DateTimeFormatInfo> obiekt, który reprezentuje Konwencji formatowania określonej kultury. Ponadto można pobrać kultury neutralnej <xref:System.Globalization.DateTimeFormatInfo> obiektu pobierając kultury neutralnej z określoną kulturę <xref:System.Globalization.CultureInfo.Parent%2A?displayProperty=nameWithType> właściwości i pobierania <xref:System.Globalization.DateTimeFormatInfo> obiektu zwróconego przez jego <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType> właściwości. Chyba że Kultura nadrzędna reprezentuje Niezmienna kultura zwróconego <xref:System.Globalization.DateTimeFormatInfo> obiekt jest odczytu/zapisu. Poniższy przykład przedstawia te metody tworzenia wystąpienia <xref:System.Globalization.DateTimeFormatInfo> obiekt, który reprezentuje kultury neutralnej.  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.Class#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/cs/create1.cs#2)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.Class#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/vb/create1.vb#2)]  
  
> [!NOTE]
>  W wersji systemu .NET Framework 1.0 za pośrednictwem [!INCLUDE[net_v35_short](~/includes/net-v35-short-md.md)], w trakcie pobierania <xref:System.Globalization.DateTimeFormatInfo> zwraca obiekt, który odzwierciedla Konwencji formatowania kultury neutralnej <xref:System.NotSupportedException> wyjątku.  
  
 Jednak kultury neutralnej brakuje formatowania informacje specyficzne dla kultury, ponieważ jest niezależna od określonego kraju/regionu. Zamiast wypełnianie <xref:System.Globalization.DateTimeFormatInfo> obiekt z ogólnym wartości, zwraca programu .NET Framework <xref:System.Globalization.DateTimeFormatInfo> obiektu odzwierciedlający formatowania konwencjach określonej kultury, który jest elementem podrzędnym kultury neutralnej. Na przykład <xref:System.Globalization.DateTimeFormatInfo> obiektu dla kultury neutralnej en odzwierciedla Konwencji formatowania kultury en US i <xref:System.Globalization.DateTimeFormatInfo> obiekt kultury fr odzwierciedla Konwencji formatowania, fr-FR kultury.  
  
 Można użyć kodu podobne do poniższych ustalenie, który określoną kulturę Konwencji formatowania reprezentuje kultury neutralnej. W przykładzie użyto odbicia do porównania <xref:System.Globalization.DateTimeFormatInfo> właściwości kultury neutralnej o właściwościach podrzędnych określonej kultury. On uwzględnia dwa kalendarze jako równoważne, jeśli są one ten sam typ kalendarza i, dla kalendarza gregoriańskiego kalendarzy, jeśli ich <xref:System.Globalization.GregorianCalendar.CalendarType%2A?displayProperty=nameWithType> właściwości ma takie same wartości.  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.Class#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/cs/instantiate6c.cs#6)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.Class#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/vb/instantiate6c.vb#6)]  
  
<a name="instantiating_Current"></a>   
### <a name="instantiating-a-datetimeformatinfo-object-for-the-current-culture"></a>Utworzenie wystąpienia obiektu DateTimeFormatInfo dla bieżącej kultury  
 Można utworzyć wystąpienia <xref:System.Globalization.DateTimeFormatInfo> obiekt, który reprezentuje Konwencji formatowania bieżącej kultury w następujący sposób:  
  
-   Pobierając zaletą <xref:System.Globalization.DateTimeFormatInfo.CurrentInfo%2A> właściwości. Zwrócona <xref:System.Globalization.DateTimeFormatInfo> obiekt jest tylko do odczytu.  
  
-   Pobierając zaletą <xref:System.Globalization.CultureInfo.DateTimeFormat%2A> właściwość z <xref:System.Globalization.CultureInfo> obiektu, który jest zwracany przez <xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=nameWithType> właściwości. Zwrócona <xref:System.Globalization.DateTimeFormatInfo> obiekt jest tylko do odczytu.  
  
-   Wywołując <xref:System.Globalization.NumberFormatInfo.GetInstance%2A> metody z <xref:System.Globalization.CultureInfo> obiekt, który reprezentuje bieżącej kultury. Zwrócona <xref:System.Globalization.DateTimeFormatInfo> obiekt jest tylko do odczytu.  
  
 W poniższym przykładzie użyto każdej z tych metod można utworzyć wystąpienia <xref:System.Globalization.DateTimeFormatInfo> obiekt, który reprezentuje Konwencji formatowania bieżącej kultury. Następnie wskazuje ona, czy obiekt jest tylko do odczytu.  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.Class#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/cs/create2.cs#4)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.Class#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/vb/create2.vb#4)]  
  
 Możesz utworzyć zapisywalny <xref:System.Globalization.DateTimeFormatInfo> obiekt, który reprezentuje konwencje bieżącej kultury wątku w jeden z następujących sposobów:  
  
-   Pobierając <xref:System.Globalization.DateTimeFormatInfo> obiektu w jednym z trzech sposobów poprzedniej i wywoływania <xref:System.Globalization.DateTimeFormatInfo.Clone%2A> metody w zwróconym <xref:System.Globalization.DateTimeFormatInfo> obiektu. Spowoduje to utworzenie kopii oryginalnej <xref:System.Globalization.DateTimeFormatInfo> obiektu, z wyjątkiem jego <xref:System.Globalization.DateTimeFormatInfo.IsReadOnly%2A> jest właściwość `false`.  
  
-   Wywołując <xref:System.Globalization.CultureInfo.CreateSpecificCulture%2A?displayProperty=nameWithType> metodę w celu utworzenia <xref:System.Globalization.CultureInfo> obiekt, który reprezentuje bieżącej kultury, a następnie użyć jego <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType> właściwości do pobrania <xref:System.Globalization.DateTimeFormatInfo> obiektu.  
  
 Poniższy przykład przedstawia każdego sposób tworzenia wystąpienia odczytu/zapisu <xref:System.Globalization.DateTimeFormatInfo> obiektu i wyświetla wartość jego <xref:System.Globalization.DateTimeFormatInfo.IsReadOnly%2A> właściwości.  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.Class#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/cs/instantiate2.cs#7)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.Class#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/vb/instantiate2.vb#7)]  
  
 W systemie Windows, użytkownik może zastępowania niektórych <xref:System.Globalization.DateTimeFormatInfo> wartości właściwości używany do formatowania ani do analizowania operacji za pomocą **Region i język** aplikacji w Panelu sterowania. Na przykład użytkownika, którego kultury jest angielski (Stany Zjednoczone) może być wyświetlana długi czas wartości 24-godzinnym (w formacie hh: mm:) zamiast domyślnego 12-godzinnego (w formacie mm: ss). <xref:System.Globalization.DateTimeFormatInfo> Obiektów pobrać w sposób omówionych wcześniej wszystkich odzwierciedlają te zastąpienia użytkownika. Jeśli jest to niepożądane, można utworzyć <xref:System.Globalization.NumberFormatInfo> obiekt, który nie odzwierciedla użytkownik zastępuje (i jest również odczytu/zapisu, a nie tylko do odczytu) przez wywołanie metody <xref:System.Globalization.CultureInfo.%23ctor%28System.String%2CSystem.Boolean%29?displayProperty=nameWithType> Konstruktor i podanie wartości `false` dla `useUserOverride` argumentu. Poniższy przykład przedstawia to system, którego bieżącej kultury jest angielski (Stany Zjednoczone) i którego wzorzec długo została zmieniona z domyślnego: mm: ss tt do hh: mm:.  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.Class#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/cs/instantiate3.cs#8)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.Class#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/vb/instantiate3.vb#8)]  
  
<a name="dynamic"></a>   
## <a name="datetimeformatinfo-and-dynamic-data"></a>DateTimeFormatInfo i dane dynamiczne  
 Formatowanie wartości daty i godziny, które są udostępniane przez dane specyficzne dla kultury <xref:System.Globalization.DateTimeFormatInfo> klasy jest dynamiczny, podobnie jak kultury dane dostarczone przez <xref:System.Globalization.CultureInfo> klasy. Nie należy wprowadzać żadnych założenia dotyczące stabilności wartości <xref:System.Globalization.DateTimeFormatInfo> obiektów, które są skojarzone z określonego <xref:System.Globalization.CultureInfo> obiektów. Tylko dane dostarczone przez Niezmienna kultura i jego skojarzony <xref:System.Globalization.DateTimeFormatInfo> obiektu jest stabilna. Inne dane, można zmienić między sesjami aplikacji lub nawet wtedy, gdy aplikacja jest uruchomiona. Istnieją cztery główne źródła zmiany:  
  
-   Aktualizacje systemu. Zmień kultury preferencje, takie jak preferowany kalendarz lub zwyczajowe formaty daty i godziny w czasie. W takim przypadku usługa Windows Update obejmuje zmiany <xref:System.Globalization.DateTimeFormatInfo> wartości właściwości dla określonej kultury.  
  
-   Zastąpienie kultur. <xref:System.Globalization.CultureAndRegionInfoBuilder> Klasa może być używana, aby zamienić dane istniejące kultury.  
  
-   Kaskadowe zmiany wartości właściwości. Liczba powiązanych właściwości można zmienić w czasie wykonywania, co z kolei powoduje, że <xref:System.Globalization.DateTimeFormatInfo> dane, aby zmienić. Na przykład bieżącej kultury można zmienić programowo lub przez akcję użytkownika. W takim przypadku <xref:System.Globalization.DateTimeFormatInfo> obiektu zwróconego przez <xref:System.Globalization.DateTimeFormatInfo.CurrentInfo%2A> zmiany właściwości do obiektu skojarzone z bieżącej kultury. Podobnie, kalendarz kultury mogą ulec zmianie, co może spowodować zmiany do wielu <xref:System.Globalization.DateTimeFormatInfo> wartości właściwości.  
  
-   Preferencje użytkownika. Użytkownicy aplikacji mogą używać do zastępowania niektórych wartości skojarzone z bieżącego ustawienia kulturowego systemu za pośrednictwem Opcje regionalne i językowe w Panelu sterowania. Na przykład użytkownicy mogą wybrać wyświetlanie daty w innym formacie. Jeśli <xref:System.Globalization.CultureInfo.UseUserOverride%2A?displayProperty=nameWithType> właściwość jest ustawiona na `true`, właściwości <xref:System.Globalization.DateTimeFormatInfo> również pobrać obiektu z ustawień użytkownika. Jeśli ustawienia użytkownika są niezgodne z kulturą skojarzone z <xref:System.Globalization.CultureInfo> obiektu (na przykład, jeśli wybranego kalendarza nie jest jednym z kalendarzy wskazywanym przez <xref:System.Globalization.CultureInfo.OptionalCalendars%2A> właściwości), wyniki metody i wartości właściwości jest nieokreślona.  
  
 Aby ograniczyć możliwość niespójne dane i wszystkie właściwości użytkownika do przesłonięcia <xref:System.Globalization.DateTimeFormatInfo> obiektu są inicjowane po utworzeniu obiektu. Jest nadal ryzyko wystąpienia niespójności, ponieważ tworzenie obiektu ani procesu zastąpienie użytkownika nie są atomic i odpowiednie wartości można zmieniać podczas tworzenia obiektu. Jednak ta sytuacja powinna być bardzo rzadko.  
  
 Można kontrolować, czy zastąpienia użytkownika zostaną odzwierciedlone w <xref:System.Globalization.DateTimeFormatInfo> obiektów, które reprezentują tego samego kultury kultury systemu. W poniższej tabeli przedstawiono sposoby, w którym <xref:System.Globalization.DateTimeFormatInfo> obiekt mogą być pobierane i wskazuje, czy obiekt wynikowy odzwierciedla zastąpienia użytkownika.  
  
|Źródłowy obiekt CultureInfo i DateTimeFormatInfo|Odzwierciedla zastąpienia użytkownika|  
|---------------------------------------------------------|-----------------------------|  
|`CultureInfo.CurrentCulture.DateTimeFormat` Właściwość|Tak|  
|<xref:System.Globalization.DateTimeFormatInfo.CurrentInfo%2A?displayProperty=nameWithType> Właściwość|Tak|  
|<xref:System.Globalization.CultureInfo.CreateSpecificCulture%2A?displayProperty=nameWithType> — Metoda|Tak|  
|<xref:System.Globalization.CultureInfo.GetCultureInfo%2A?displayProperty=nameWithType> — Metoda|Nie|  
|<xref:System.Globalization.CultureInfo.%23ctor%28System.String%29?displayProperty=nameWithType> Konstruktor|Tak|  
|<xref:System.Globalization.CultureInfo.%23ctor%28System.String%2CSystem.Boolean%29?displayProperty=nameWithType> Konstruktor|Zależy od wartości `useUserOverride` parametru|  
  
 Jeśli jest przekonujący powód nie, powinien przestrzegać zastąpienia użytkownika korzystając z <xref:System.Globalization.DateTimeFormatInfo> obiektu w aplikacjach klienckich sformatowanie i analizować dane wprowadzone przez użytkownika lub do wyświetlania danych. Dla serwera aplikacji lub aplikacji instalacji nienadzorowanej należy nie. Jednak jeśli używasz <xref:System.Globalization.DateTimeFormatInfo> obiektu albo jawnie lub niejawnie do utrwalenia danych daty i godziny w postaci ciągu, należy albo użyj <xref:System.Globalization.DateTimeFormatInfo> należy określić obiekt, który odzwierciedla Konwencji formatowania Niezmienna kultura, lub Niestandardowa data i godzina ciąg formatu, który można użyć niezależnie od kultury.  
  
<a name="Formatting_dates_times"></a>   
## <a name="formatting-dates-and-times"></a>Formatowanie daty i godziny  
 A <xref:System.Globalization.DateTimeFormatInfo> obiekt jest używany we wszystkich Data i czas operacji formatowania jawnie lub niejawnie. Obejmują one wywołania do następujących metod:  
  
-   Wszystkie formatowania daty i godziny metod, takich jak <xref:System.DateTime.ToString?displayProperty=nameWithType> i <xref:System.DateTimeOffset.ToString%28System.String%29?displayProperty=nameWithType>.  
  
-   Główne złożone formatowanie metodę, która jest <xref:System.String.Format%2A?displayProperty=nameWithType>.  
  
-   Inne złożone formatowanie metod, takich jak <xref:System.Console.WriteLine%28System.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType> i <xref:System.Text.StringBuilder.AppendFormat%28System.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType>.  
  
 Wszystkie daty i godziny, wprowadź operacji formatowania użycie <xref:System.IFormatProvider> implementacji. <xref:System.IFormatProvider> Interfejs zawiera jedną metodę <xref:System.IFormatProvider.GetFormat%28System.Type%29?displayProperty=nameWithType>. Tej metody wywołania zwrotnego jest przekazywany <xref:System.Type> obiekt, który reprezentuje typ potrzebnych do udostępniania informacji formatowania. Metoda zwraca wystąpienie tego typu lub `null` , jeśli nie można udostępnić wystąpienia typu. .NET Framework zawiera dwie <xref:System.IFormatProvider> implementacje formatowania daty i godziny:  
  
-   <xref:System.Globalization.CultureInfo> Klasy, która reprezentuje określoną kulturę (lub określonego języka w danym kraju lub regionie). Data i czas operacji formatowania <xref:System.Globalization.CultureInfo.GetFormat%2A?displayProperty=nameWithType> metoda zwraca <xref:System.Globalization.DateTimeFormatInfo> obiekt skojarzony z jego <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType> właściwości.  
  
-   <xref:System.Globalization.DateTimeFormatInfo> Klasy, która dostarcza informacji na temat Konwencji formatowania jego skojarzony kultury. <xref:System.Globalization.DateTimeFormatInfo.GetFormat%2A?displayProperty=nameWithType> Metoda zwraca wystąpienia samej siebie.  
  
 Jeśli <xref:System.IFormatProvider> implementacji nie podano do formatowania metody jawnie, <xref:System.Globalization.CultureInfo> obiektu zwróconego przez <xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=nameWithType> jest używana właściwość, która reprezentuje bieżącej kultury wątku.  
  
 Poniższy przykład przedstawia relacje między <xref:System.IFormatProvider> interfejsu i <xref:System.Globalization.DateTimeFormatInfo> klasy w operacji formatowania. Definiuje niestandardowe <xref:System.IFormatProvider> implementacji których <xref:System.IFormatProvider.GetFormat%2A> metoda Wyświetla typ obiektu zażądał operacji formatowania. Jeśli żąda <xref:System.Globalization.DateTimeFormatInfo> obiektu, udostępnia metody <xref:System.Globalization.DateTimeFormatInfo> obiektu dla bieżącej kultury wątku. Jako dane wyjściowe w przykładzie pokazano <xref:System.Decimal.ToString%28System.IFormatProvider%29?displayProperty=nameWithType> metod żądań <xref:System.Globalization.DateTimeFormatInfo> obiekt, aby podać informacje dotyczące formatowania, podczas gdy <xref:System.String.Format%28System.IFormatProvider%2CSystem.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType> metod żądań <xref:System.Globalization.NumberFormatInfo> i <xref:System.Globalization.DateTimeFormatInfo> obiektów, a także <xref:System.ICustomFormatter> Implementacja.  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.Class#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/cs/formatprovider1.cs#9)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.Class#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/vb/formatprovider1.vb#9)]  
  
<a name="properties"></a>   
## <a name="format-strings-and-datetimeformatinfo-properties"></a>Ciągi formatów i właściwości DateTimeFormatInfo  
 <xref:System.Globalization.DateTimeFormatInfo> Obiekt zawiera trzy rodzaje właściwości, które są używane w formatowaniu operacje z wartości daty i godziny:  
  
-   Właściwości związane z kalendarza. Właściwości, takie jak <xref:System.Globalization.DateTimeFormatInfo.AbbreviatedDayNames%2A>, <xref:System.Globalization.DateTimeFormatInfo.AbbreviatedMonthNames%2A>, <xref:System.Globalization.DateTimeFormatInfo.DayNames%2A>, i <xref:System.Globalization.DateTimeFormatInfo.MonthNames%2A>, są skojarzone z kalendarza używanego przez kultury, który jest zdefiniowany przez <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> właściwości. Te właściwości są używane do daty długiej i godziny formatów.  
  
-   Właściwości, które powodują powstanie ciągu standardy zdefiniowane wynik. <xref:System.Globalization.DateTimeFormatInfo.RFC1123Pattern%2A>, <xref:System.Globalization.DateTimeFormatInfo.SortableDateTimePattern%2A>, I <xref:System.Globalization.DateTimeFormatInfo.UniversalSortableDateTimePattern%2A> właściwości zawierają ciągi formatu niestandardowego, które tworzą ciągi wynik zdefiniowana w standardach międzynarodowych. Te właściwości są tylko do odczytu i nie może być modyfikowany.  
  
-   Właściwości, które definiują ciągów wynikowych zależne od kultury. Niektóre właściwości, takie jak <xref:System.Globalization.DateTimeFormatInfo.FullDateTimePattern%2A> i <xref:System.Globalization.DateTimeFormatInfo.ShortDatePattern%2A>, zawierają [niestandardowych ciągów formatu](~/docs/standard/base-types/custom-date-and-time-format-strings.md) określające format ciągu wynik. Inne, takie jak <xref:System.Globalization.DateTimeFormatInfo.AMDesignator%2A>, <xref:System.Globalization.DateTimeFormatInfo.DateSeparator%2A>, <xref:System.Globalization.DateTimeFormatInfo.PMDesignator%2A>, i <xref:System.Globalization.DateTimeFormatInfo.TimeSeparator%2A>, zdefiniuj symboli zależne od kultury lub podciągów, które mogą znajdować się w ciągu wynik.  
  
 [Standardowa Data i godzina ciągi formatujące](~/docs/standard/base-types/standard-date-and-time-format-strings.md), takich jak "d", "D", "f" i "F", są aliasy, które odpowiadają określonego <xref:System.Globalization.DateTimeFormatInfo> format właściwości wzorca. Większość [niestandardowa data i godzina ciągi formatujące](~/docs/standard/base-types/custom-date-and-time-format-strings.md) są związane z ciągami lub podciągów wstawianych do strumienia wynik operacji formatowania. W poniższej tabeli wymieniono standardowe i niestandardowe Data i godzina specyfikatory formatu i skojarzone z nimi <xref:System.Globalization.DateTimeFormatInfo> właściwości. Zobacz szczegółowe informacje o sposobie używania tych format Specyfikatory, [standardowe ciągi daty i godziny Format](~/docs/standard/base-types/standard-date-and-time-format-strings.md) i [niestandardowe ciągi daty i godziny Format](~/docs/standard/base-types/custom-date-and-time-format-strings.md). Należy pamiętać, że każdy ciąg standardowy format odpowiada <xref:System.Globalization.DateTimeFormatInfo> właściwości, której wartość jest niestandardowa data i godzina ciąg formatu. Z kolei odpowiada innych poszczególnych specyfikatorów w tym ciągu formatu niestandardowego <xref:System.Globalization.DateTimeFormatInfo> właściwości. W tabeli wymieniono tylko <xref:System.Globalization.DateTimeFormatInfo> właściwości, dla których są aliasami standardowe ciągi formatujące, a nie właściwości listy, które mogą być używane przez niestandardowych ciągów formatu przypisane do tych właściwości aliasu jest. Ponadto w tabeli wymieniono tylko specyfikatory formatu niestandardowego, które odpowiadają <xref:System.Globalization.DateTimeFormatInfo> właściwości.  
  
|Specyfikator formatu|Właściwości|  
|----------------------|---------------------------|  
|"d" (Data krótka; ciąg formatu standardowy)|<xref:System.Globalization.DateTimeFormatInfo.ShortDatePattern%2A>, aby zdefiniować ogólny format ciągu wynik.|  
|"D" (Data długa; ciąg formatu standardowy)|<xref:System.Globalization.DateTimeFormatInfo.LongDatePattern%2A>, aby zdefiniować ogólny format ciągu wynik.|  
|"f" (pełna data / krótki czas; standardowe ciąg formatu)|<xref:System.Globalization.DateTimeFormatInfo.LongDatePattern%2A>, aby zdefiniować format składnik daty ciągu wynik.<br /><br /> <xref:System.Globalization.DateTimeFormatInfo.ShortTimePattern%2A>, aby zdefiniować format składnik godziny ciąg wyniku.|  
|"F" (pełna data / długie czasu; ciąg formatu standardowy)|<xref:System.Globalization.DateTimeFormatInfo.LongDatePattern%2A>, aby zdefiniować format składnik daty ciągu wynik.<br /><br /> <xref:System.Globalization.DateTimeFormatInfo.LongTimePattern%2A>, aby zdefiniować format składnik godziny ciąg wyniku.|  
|"g" (ogólne daty / godziny krótkiej; ciąg standardowy format)|<xref:System.Globalization.DateTimeFormatInfo.ShortDatePattern%2A>, aby zdefiniować format składnik daty ciągu wynik.<br /><br /> <xref:System.Globalization.DateTimeFormatInfo.ShortTimePattern%2A>, aby zdefiniować format składnik godziny ciąg wyniku.|  
|"G" (Ogólne Data / długi czas; standardowy ciąg formatu)|<xref:System.Globalization.DateTimeFormatInfo.ShortDatePattern%2A>, aby zdefiniować format składnik daty ciągu wynik.<br /><br /> <xref:System.Globalization.DateTimeFormatInfo.LongTimePattern%2A>, aby zdefiniować format składnik godziny ciąg wyniku.|  
|"M", "m" (miesiąc/dzień; ciąg formatu standardowy)|<xref:System.Globalization.DateTimeFormatInfo.MonthDayPattern%2A>, aby zdefiniować ogólny format ciągu wynik.|  
|"O", "o" (wyrównana daty/godziny; ciąg formatu standardowy)|Brak.|  
|"R", "r" (RFC1123; ciąg formatu standardowy)|<xref:System.Globalization.DateTimeFormatInfo.RFC1123Pattern%2A>, aby zdefiniować ciąg wynik, który jest zgodny ze standardem RFC 1123. Właściwość jest tylko do odczytu.|  
|"s" (można sortować daty/godziny; ciąg formatu standardowy)|<xref:System.Globalization.DateTimeFormatInfo.SortableDateTimePattern%2A>, aby zdefiniować ciąg wynik, który jest zgodny ze standardem ISO 8601. Właściwość jest tylko do odczytu.|  
|"t" (krótki czas; ciąg formatu standardowy)|<xref:System.Globalization.DateTimeFormatInfo.ShortTimePattern%2A>, aby zdefiniować ogólny format ciągu wynik.|  
|"T" (długi czas; ciąg formatu standardowy)|<xref:System.Globalization.DateTimeFormatInfo.LongTimePattern%2A>, aby zdefiniować ogólny format ciągu wynik.|  
|"u" (universal Data/Godzina sortowanie; standardowego formatu ciągu)|<xref:System.Globalization.DateTimeFormatInfo.UniversalSortableDateTimePattern%2A>, aby zdefiniować ciąg wynik, który jest zgodny ze standardem ISO 8601 dla uniwersalnego czasu koordynowanego. Właściwość jest tylko do odczytu.|  
|"U" (uniwersalny pełny daty/godziny; ciąg formatu standardowy)|<xref:System.Globalization.DateTimeFormatInfo.FullDateTimePattern%2A>, aby zdefiniować ogólny format ciągu wynik.|  
|"Y", "y" (miesiąc roku; ciąg formatu standardowy)|<xref:System.Globalization.DateTimeFormatInfo.YearMonthPattern%2A>, aby zdefiniować ogólny format ciągu wynik.|  
|"ddd" (specyfikator formatu niestandardowego)|<xref:System.Globalization.DateTimeFormatInfo.AbbreviatedDayNames%2A>, aby uwzględnić skróconą nazwę dnia tygodnia w ciągu wynik.|  
|"g", "gg" (specyfikator formatu niestandardowego)|Wywołania <xref:System.Globalization.DateTimeFormatInfo.GetEraName%2A> metodę, aby wstawić nazwę ery w ciągu wynik.|  
|"MMM" (specyfikator formatu niestandardowego)|<xref:System.Globalization.DateTimeFormatInfo.AbbreviatedMonthNames%2A>, aby uwzględnić nazwę skróconej miesiąca w ciągu wynik.|  
|"MMMM" (specyfikator formatu niestandardowego)|<xref:System.Globalization.DateTimeFormatInfo.MonthNames%2A> lub <xref:System.Globalization.DateTimeFormatInfo.MonthGenitiveNames%2A>, aby uwzględnić nazwę pełny miesiąc w ciągu wynik.|  
|"t" (specyfikator formatu niestandardowego)|<xref:System.Globalization.DateTimeFormatInfo.AMDesignator%2A> lub <xref:System.Globalization.DateTimeFormatInfo.PMDesignator%2A>, aby uwzględnić w ciągu wynik pierwszy znak oznaczenia AM/PM.|  
|"tt" (specyfikator formatu niestandardowego)|<xref:System.Globalization.DateTimeFormatInfo.AMDesignator%2A> lub <xref:System.Globalization.DateTimeFormatInfo.PMDesignator%2A>, aby dołączyć pełnego określenia AM/PM ciągu wynik.|  
|":" (specyfikator formatu niestandardowego)|<xref:System.Globalization.DateTimeFormatInfo.TimeSeparator%2A>, aby uwzględnić separator godziny w ciągu wynik.|  
|"/" (specyfikator formatu niestandardowego)|<xref:System.Globalization.DateTimeFormatInfo.DateSeparator%2A>, aby objąć separatora daty ciąg wyniku.|  
  
<a name="Modifying"></a>   
## <a name="modifying-datetimeformatinfo-properties"></a>Modyfikowanie właściwości DateTimeFormatInfo  
 Można zmienić ciąg wyniku utworzonej przez ciągi formatujące datę i godzinę przez modyfikowanie właściwości skojarzone z możliwością zapisu <xref:System.Globalization.DateTimeFormatInfo> obiektu. Aby ustalić, czy <xref:System.Globalization.DateTimeFormatInfo> obiektu jest zapisywalny, użyj <xref:System.Globalization.DateTimeFormatInfo.IsReadOnly%2A> właściwości. Aby dostosować <xref:System.Globalization.DateTimeFormatInfo> obiektu w ten sposób:  
  
1.  Utwórz kopię odczytu/zapisu <xref:System.Globalization.DateTimeFormatInfo> obiektu, którego Konwencji formatowania chcesz zmodyfikować. (Zobacz [tworzenia wystąpienia obiektu DateTimeFormatInfo](#instantiating) sekcji.)  
  
2.  Zmodyfikuj właściwości lub właściwości, które są używane do tworzenia ciąg oczekiwany wynik. (Aby uzyskać informacje na temat używania metod sposób formatowania <xref:System.Globalization.DateTimeFormatInfo> właściwości, aby zdefiniować ciągów wynikowych zawiera Poprzednia sekcja, [formatowanie ciągów i właściwości DateTimeFormatInfo](#properties).)  
  
3.  Użyj niestandardowego <xref:System.Globalization.DateTimeFormatInfo> obiekt utworzony jako <xref:System.IFormatProvider> argument w wywołaniach metod formatowania.  
  
 Istnieją dwa sposoby zmiany formatu ciągu wyników:  
  
-   Można użyć <xref:System.Globalization.CultureAndRegionInfoBuilder> klasy do definiowania kulturą niestandardową (kulturę, która ma unikatową nazwę i który uzupełnia istniejące kulturami) lub kultury zastąpienia (taki, który jest używany zamiast określoną kulturę). Można zapisywać i programowy dostęp tej kultury, jak każdą <xref:System.Globalization.CultureInfo> obiektu obsługiwane przez program .NET Framework.  
  
-   Jeśli ciąg wyniku nie jest zależne od kultury, nie będzie zgodna z formatem wstępnie zdefiniowanych można użyć niestandardowa data i godzina ciąg formatu. Na przykład, jeśli są serializacji danych daty i godziny w formacie rrrrmmddggmmss, można wygenerować ciągu wynik przez przekazanie ciąg formatu niestandardowego <xref:System.DateTime.ToString%28System.String%29?displayProperty=nameWithType> metody, a można przekonwertować ciągu wynik do <xref:System.DateTime> wartości przez wywołanie metody <xref:System.DateTime.ParseExact%2A?displayProperty=nameWithType> metody.  
  
### <a name="changing-the-short-date-pattern"></a>Zmienianie wzorca daty krótkiej  
 Poniższy przykład umożliwia zmianę formatu ciągu wynik utworzonego przez ciąg formatu standardowych (Data krótka) "d". Zmienia skojarzony <xref:System.Globalization.DateTimeFormatInfo.ShortDatePattern%2A> właściwość en US lub kultury angielski (Stany Zjednoczone) domyślne "M/d/rrrr" do "yyyy"-"MM"-"dd" i "d" standardowego formatu ciągu, aby wyświetlić datę przed i po używa <xref:System.Globalization.DateTimeFormatInfo.ShortDatePattern%2A> właściwość jest zmienić.  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.Class#10](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/cs/example1.cs#10)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.Class#10](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/vb/example1.vb#10)]  
  
### <a name="changing-the-date-separator-character"></a>Zmienianie znaku separatora daty  
 Poniższy przykład umożliwia zmianę znaku separatora daty w <xref:System.Globalization.DateTimeFormatInfo> obiekt, który reprezentuje Konwencji formatowania, fr-FR kultury. W przykładzie użyto ciągu standardowego formatu: "g", aby wyświetlić datę przed i po <xref:System.Globalization.DateTimeFormatInfo.DateSeparator%2A> właściwości zostanie zmieniona.  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.Class#12](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/cs/example3.cs#12)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.Class#12](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/vb/example3.vb#12)]  
  
### <a name="changing-day-name-abbreviations-and-the-long-date-pattern"></a>Zmienianie skrótów nazw dni i wzorzec daty długiej  
 W niektórych przypadkach wzorcu daty długiej zwykle wyświetlany pełny dzień i nazwy miesięcy wraz z liczbą dzień miesiąca i roku, może być zbyt długa. Poniższy przykład skraca wzorzec Data długa dla kultury en US do zwracania znaków jednego lub dwóch znaków dzień skrót nazwy, następuje numer dnia, skrót nazwy miesiąca i roku. Dzieje się tak, przypisując krótszą skróty nazw dzień do <xref:System.Globalization.DateTimeFormatInfo.AbbreviatedDayNames%2A> tablicy i przez modyfikowanie niestandardowy ciąg formatu przypisane do <xref:System.Globalization.DateTimeFormatInfo.LongDatePattern%2A> właściwości. Ma to wpływ na ciągi wynik zwracany przez metodę "D" i "f" standardowe ciągi formatujące.  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.Class#13](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/cs/example2.cs#13)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.Class#13](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/vb/example2.vb#13)]  
  
 Zwykle zmiany <xref:System.Globalization.DateTimeFormatInfo.LongDatePattern%2A> właściwości wpływa także na <xref:System.Globalization.DateTimeFormatInfo.FullDateTimePattern%2A> właściwość, która z kolei definiuje parametry wyników zwróconych przez ciąg formatu standardowych "F". Aby zachować oryginalnego pełne daty i czasu wzorzec, przykładzie następuje zmiana przypisania przypisane do oryginalnego ciągu formatu niestandardowego <xref:System.Globalization.DateTimeFormatInfo.FullDateTimePattern%2A> właściwości po <xref:System.Globalization.DateTimeFormatInfo.LongDatePattern%2A> zmodyfikować właściwości.  
  
### <a name="changing-from-a-12-hour-clock-to-a-24-hour-clock"></a>Zmiana z 12-godzinnego zegara na 24-godzinny  
 Dla wielu języków w programie .NET Framework czas jest wyrażona za pomocą 12-godzinnym i oznaczenie AM/PM. W poniższym przykładzie zdefiniowano `ReplaceWith24HourClock` metodę, która zastępuje wszelkie format czasu używające 12-godzinnym formacie, który korzysta z 24-godzinnym.  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.Class#14](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/cs/example5.cs#14)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.Class#14](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/vb/example5.vb#14)]  
  
 W przykładzie użyto wyrażenia regularnego, aby zmodyfikować ciąg formatu. Wzorzec wyrażenia regularnego `@"^(?<openAMPM>\s*t+\s*)? (?(openAMPM) h+(?<nonHours>[^ht]+)$ | \s*h+(?<nonHours>[^ht]+)\s*t+)` jest zdefiniowane w następujący sposób:  
  
|Wzorzec|Opis|  
|-------------|-----------------|  
|`^`|Rozpocznij dopasowania na początku ciąg.|  
|`(?<openAMPM>\s*t+\s*)?`|Wystąpienie dopasowania zero lub jeden zero lub więcej-białe znaki, następują litery "t" jeden lub więcej razy, a następnie zero lub więcej znaków odstępu. Nosi nazwę tej grupy przechwytywania `openAMPM`.|  
|`(?(openAMPM) h+(?<nonHours>[^ht]+)$`|Jeśli `openAMPM` grupa ma dopasowania, zgodne litery "h" jeden lub więcej razy, a następnie jeden lub więcej znaków, które nie są "h" ani "t". Dopasowanie kończy się na końcu ciągu. Wszystkie znaki przechwycone po "h" znajdują się w grupie przechwytywania o nazwie `nonHours`.|  
|`&#124; \s*h+(?<nonHours>[^ht]+)\s*t+)`|Jeśli `openAMPM` grupa nie ma dopasowania, zgodne litery "h" jeden lub więcej razy, a następnie jeden lub więcej znaków, które nie są "h" ani "t", a następnie zero lub więcej znaków odstępu. Na koniec odpowiada jedno lub więcej wystąpień litery "t". Wszystkie znaki przechwycone po "h" i przed białe znaki i "t" są uwzględnione w przechwytywaniu grupę o nazwie `nonHours`.|  
  
 `nonHours` Przechwytywanie grupy zawiera minutę i prawdopodobnie drugim składnikiem niestandardowa data i godzina ciąg formatu, wraz z żadnych symboli separatora czasu. Wzorzec zastępczy `HH${nonHours}` dołącza podciągu "HH" do tych elementów.  
  
### <a name="displaying-and-changing-the-era-in-a-date"></a>Wyświetlanie i zmienianie ery w dacie  
 W poniższym przykładzie dodano specyfikator formatu niestandardowego "g", aby <xref:System.Globalization.DateTimeFormatInfo.LongDatePattern%2A> właściwość obiektu, który reprezentuje Konwencji formatowania kultury en US. Dodanie tej wpływa na następujące trzy ciągi standardowego formatu:  
  
-   Ciąg formatu standardowe "D" (Data długa), która mapuje bezpośrednio do <xref:System.Globalization.DateTimeFormatInfo.LongDatePattern%2A> właściwości.  
  
-   "f" (pełna data / krótki czas) ciągu standardowym formacie, który tworzy ciąg wynik, który łączy podciągów utworzonego przez <xref:System.Globalization.DateTimeFormatInfo.LongDatePattern%2A> i <xref:System.Globalization.DateTimeFormatInfo.ShortTimePattern%2A> właściwości.  
  
-   "F" (pełna data / godzina długo) ciągu standardowym formacie, który mapuje bezpośrednio do <xref:System.Globalization.DateTimeFormatInfo.FullDateTimePattern%2A> właściwości. Ponieważ firma Microsoft nie jawnie ustawiono wartość tej właściwości, jest generowany dynamicznie przez łączenie <xref:System.Globalization.DateTimeFormatInfo.LongDatePattern%2A> i <xref:System.Globalization.DateTimeFormatInfo.LongTimePattern%2A> właściwości.  
  
 W przykładzie przedstawiono również sposób zmienić nazwę ery dla kultury, na których kalendarza ma jeden ery. W takim przypadku kultury en US używa kalendarza gregoriańskiego, która jest reprezentowana przez <xref:System.Globalization.GregorianCalendar> obiektu. <xref:System.Globalization.GregorianCalendar> Klasa obsługuje era pojedynczego, nazwy go r. (Tak roku). W przykładzie zmieniono nazwę ery r. (Typowe Era) przez zastąpienie specyfikator formatu niestandardowego: "g" w ciągu formatu przypisane do <xref:System.Globalization.DateTimeFormatInfo.FullDateTimePattern%2A> właściwości z ciągiem literałowym. Użycie literału ciągu jest to konieczne, ponieważ nazwa ery jest zazwyczaj zwracane przez <xref:System.Globalization.DateTimeFormatInfo.GetEraName%2A> metody z prywatnej dane w tabelach kultury dostarczanych przez platformę .NET lub systemu operacyjnego Windows.  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.Class#11](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/cs/example4.cs#11)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.Class#11](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/vb/example4.vb#11)]  
  
## <a name="parsing-date-and-time-strings"></a>Analiza ciągów daty i godziny  
 Podczas analizowania polega na konwertowaniu reprezentację ciągu daty i godziny do <xref:System.DateTime> lub <xref:System.DateTimeOffset> wartość. Oba typy obejmują `Parse`, `TryParse`, `ParseExact`, i `TryParseExact` metod do obsługi operacji analizy. `Parse` i `TryParse` metody przekonwertować ciąg, który może mieć wiele formatów, podczas gdy `ParseExact` i `TryParseExact` wymagają, że ciąg ma zdefiniowany format ani formatów. W przypadku niepowodzenia operacji analizy `Parse` i `ParseExact` zgłoszenia wyjątku, podczas gdy `TryParse` i `TryParseExact` zwracać `false`.  
  
 Podczas analizowania metody jawnie lub niejawnie używać <xref:System.Globalization.DateTimeStyles> wartości wyliczenia, aby określić, które elementy style (na przykład początkowych, końcowych lub wewnętrzny biały znak) mogą być obecne w ciągu do przeanalizowania i jak interpretować analizowany ciąg lub wszelkie brakujące elementy. Jeśli nie podasz <xref:System.Globalization.DateTimeStyles> wartość po wywołaniu `Parse` lub `TryParse` metody, wartość domyślna to <xref:System.Globalization.DateTimeStyles.AllowWhiteSpaces?displayProperty=nameWithType>, która jest złożone stylu, który zawiera <xref:System.Globalization.DateTimeStyles.AllowLeadingWhite?displayProperty=nameWithType>, <xref:System.Globalization.DateTimeStyles.AllowTrailingWhite?displayProperty=nameWithType>, i <xref:System.Globalization.DateTimeStyles.AllowInnerWhite?displayProperty=nameWithType> flagi. Aby uzyskać `ParseExact` i `TryParseExact` metody, wartość domyślna to <xref:System.Globalization.DateTimeStyles.None?displayProperty=nameWithType>; ciąg wejściowy musi odpowiadać dokładnie określonego niestandardowa data i godzina ciąg formatu.  
  
 Podczas analizowania metody również jawnie lub niejawnie używać <xref:System.Globalization.DateTimeFormatInfo> obiekt, który definiuje określone symbole i wzorce, które mogą wystąpić w ciągu do przeanalizowania. Jeśli nie podasz <xref:System.Globalization.DateTimeFormatInfo> obiektu <xref:System.Globalization.DateTimeFormatInfo> obiektu dla bieżącej kultury wątku jest używany domyślnie. Aby uzyskać więcej informacji na temat analizowanie ciągów daty i godziny, zobacz poszczególne metody analizy, takich jak <xref:System.DateTime.Parse%2A?displayProperty=nameWithType>, <xref:System.DateTime.TryParse%2A?displayProperty=nameWithType>, <xref:System.DateTimeOffset.ParseExact%2A?displayProperty=nameWithType>, i <xref:System.DateTimeOffset.TryParseExact%2A?displayProperty=nameWithType>.  
  
 Poniższy przykład przedstawia zależne od kultury rodzaj ciągów analizy daty i godziny. Próbuje przeanalizować dwa ciągi daty przy użyciu konwencji en US, en-GB, fr-FR i kultur fi-FI. Datę, która jest interpretowana jako 8 18 2014-w en US kultury zgłasza <xref:System.FormatException> wyjątek w innych trzech kulturami ponieważ 18 jest interpretowana jako numer miesiąca. 2015-1-2 jest analizowana jako drugiego dnia miesiąca w kultury en US, ale jako pierwszego dnia miesiąca w pozostałych kultur.  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.Class#15](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/cs/parsing1.cs#15)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.Class#15](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/vb/parsing1.vb#15)]  
  
 Ciągi daty i godziny są zwykle przeanalizować dwóch powodów:  
  
-   Aby przekonwertować danych wejściowych użytkownika na wartość daty i godziny.  
  
-   Wartość daty i godziny; przesyłania danych oznacza to, że do deserializacji wartość daty i godziny, która wcześniej została wykonana serializacja jako ciąg.  
  
 W poniższych sekcjach omówiono te dwie operacje bardziej szczegółowo.  
  
### <a name="parsing-user-strings"></a>Analiza ciągów użytkownika  
 Podczas analizy ciągi daty i czasu, w danych wejściowych przez użytkownika, należy zawsze wystąpienia <xref:System.Globalization.DateTimeFormatInfo> obiektu odzwierciedlający kultury ustawień użytkownika, w tym wszelkie dostosowania użytkownik może mieć. W przeciwnym razie wartość daty i godziny obiekt ma nieprawidłowe wartości. Aby uzyskać informacje o sposobie tworzenia wystąpienia <xref:System.Globalization.DateTimeFormatInfo> obiektu odzwierciedlający dostosowania kultury użytkownika, zobacz [DateTimeFormatInfo i danych dynamicznych](#dynamic) sekcji.  
  
 Poniższy przykład przedstawia różnicę między analizy operacja, która odzwierciedla kultury ustawień użytkownika i jedną, która nie. W takim przypadku domyślną kulturę systemu jest en US, ale użytkownik został użyty w Panelu sterowania **Region i język** można zmienić wzorzec krótkiej daty domyślne "M/d/rrrr" na "RR/MM/dd.". Gdy użytkownik wprowadza ciąg, który odzwierciedla ustawienia użytkownika i ten ciąg jest analizowana przez <xref:System.Globalization.DateTimeFormatInfo> obiektu odzwierciedlający ustawień użytkownika (zastąpień) podczas analizowania operacja zwraca prawidłowego wyniku. Jednak gdy przeanalizowany ciąg przez <xref:System.Globalization.DateTimeFormatInfo> obiektu odzwierciedlający standardowe en US ustawienia kultury, analizy zgłasza — metoda <xref:System.FormatException> wyjątek ponieważ go interpretuje 14 jako liczba miesięcy, nie dwa ostatnie cyfry roku.  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.Class#16](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/cs/parse2.cs#16)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.Class#16](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/vb/parse2.vb#16)]  
  
### <a name="serializing-and-deserializing-date-and-time-data"></a>Serializacja i deserializacja danych daty i godziny  
 Serializowane dane daty i godziny są oczekiwane przesyłania danych; oznacza to, że wszystkie serializowane i zdeserializowany wartości powinny być identyczne. Jeśli wartość daty i godziny reprezentuje pojedynczy moment w czasie, zdeserializowana wartość powinno reprezentować tej samej moment w czasie, niezależnie od kultury i strefy czasowej systemu, na którym została przywrócona. Aby wykonywać Rundy daty i godziny pomyślnie, należy użyć konwencje Niezmienna kultura, która jest zwracana przez <xref:System.Globalization.DateTimeFormatInfo.InvariantInfo%2A> właściwości do generowania i analizowania danych. Operacje formatowania i analizy nigdy nie powinien odzwierciedlać konwencje domyślną kulturę. Jeśli używasz domyślne ustawienia kultury, przenośność danych jest ograniczone; może być zdeserializowany pomyślnie tylko w wątku, którego ustawienia specyficzne dla kultury są identyczne z wątku, w którym została wykonana serializacja. W niektórych przypadkach oznacza to, że dane nie może nawet można pomyślnie serializacji i deserializacji w tym samym systemie.  
  
 Jeśli składnik godziny z wartości daty i godziny jest ważna, powinna również zostać przekonwertowane na czas UTC i serializacji przy użyciu "o" lub "r" [ciąg formatu standardowych](~/docs/standard/base-types/standard-date-and-time-format-strings.md). Następnie można przywrócić przy zbieraniu danych przez wywołanie metody analizy i przekazanie jej przez ciąg formatu odpowiednie wraz z kulturą niezmienną jako `provider` argumentu.  
  
 Poniższy przykład przedstawia proces dwustronną komunikację wartość daty i godziny. Serializuje go daty i godziny w systemie obserwujące stany USA Czas pacyficzny i którego bieżącej kultury jest en US.  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.Class#17](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/cs/serialize1.cs#17)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.Class#17](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/vb/serialize1.vb#17)]  
  
 Go deserializuje dane w systemie w strefie czasowej Brussels, Kopenhaga, Madryt i Paryża i którego bieżącej kultury jest np. Przywróconej Data jest późniejsza niż data oryginalnej, która odzwierciedla korekta strefy czasowej z 8 godzin za UTC godzinę przed UTC 9 godzin. Zarówno oryginalnego datą i przywrócone reprezentują tego samego moment, w czasie.  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.Class#18](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/cs/serialize2.cs#18)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.Class#18](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/vb/serialize2.vb#18)]  
  
   
  
## Examples  
 W poniższym przykładzie użyto odbicia można pobrać właściwości <xref:System.Globalization.DateTimeFormatInfo> obiektu dla kultury angielski (Stany Zjednoczone). Wyświetla wartość te właściwości, które zawierają ciągi formatu niestandardowego, a używa te ciągi do wyświetlenia, w formacie daty.  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.Class#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/cs/format1.cs#5)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.Class#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/vb/format1.vb#5)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.DateTime" />
    <altmember cref="T:System.Globalization.Calendar" />
    <altmember cref="T:System.Globalization.CultureInfo" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DateTimeFormatInfo ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.DateTimeFormatInfo.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DateTimeFormatInfo();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie zapisywalny <see cref="T:System.Globalization.DateTimeFormatInfo" /> klasy, który jest niezależny od kultury (niezmiennej).</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten konstruktor tworzy <xref:System.Globalization.DateTimeFormatInfo> obiekt reprezentujący datę i godzinę informacji Niezmienna kultura. Aby utworzyć <xref:System.Globalization.DateTimeFormatInfo> obiektu dla określonej kultury, Utwórz <xref:System.Globalization.CultureInfo> obiektu dla tej kultury i pobrać <xref:System.Globalization.DateTimeFormatInfo> obiektu zwróconego przez jego <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType> właściwości.  
  
 Właściwości <xref:System.Globalization.DateTimeFormatInfo> obiektu utworzonego przez ten konstruktor może być modyfikowany. Jednak nie można zmodyfikować <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> właściwości, ponieważ zlokalizowanej wersji kalendarza gregoriańskiego obsługuje Niezmienna kultura. Aby utworzyć <xref:System.Globalization.DateTimeFormatInfo> obiekt, który korzysta z określonego kalendarza, musi utworzyć wystąpienia <xref:System.Globalization.CultureInfo> obiekt, który obsługuje kalendarza i przypisać kalendarz do <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> właściwości <xref:System.Globalization.DateTimeFormatInfo> obiektu zwróconego przez <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType> właściwości .  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Globalization.CultureInfo.DateTimeFormat" />
      </Docs>
    </Member>
    <Member MemberName="AbbreviatedDayNames">
      <MemberSignature Language="C#" Value="public string[] AbbreviatedDayNames { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] AbbreviatedDayNames" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.DateTimeFormatInfo.AbbreviatedDayNames" />
      <MemberSignature Language="VB.NET" Value="Public Property AbbreviatedDayNames As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::String ^&gt; ^ AbbreviatedDayNames { cli::array &lt;System::String ^&gt; ^ get(); void set(cli::array &lt;System::String ^&gt; ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia tablicą jednowymiarową typu <see cref="T:System.String" /> zawierający specyficzne dla kultury skróconej nazwy dni tygodnia.</summary>
        <value>Jednowymiarowa tablica typu <see cref="T:System.String" /> zawierający specyficzne dla kultury skróconej nazwy dni tygodnia. Tablica dla <see cref="P:System.Globalization.DateTimeFormatInfo.InvariantInfo" /> zawiera "Sun", "Mon", "Wt", "Śro", "Czwartek", "Pt" i "SO".</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli ustawienie dla tej właściwości, tablicy musi być jednowymiarowa i musi mieć dokładnie siedmiu elementy. Pierwszy dzień tygodnia w kalendarzu zdefiniowane przez reprezentuje pierwszy element (element w indeksie zero) <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> właściwości.  
  
 Jeśli niestandardowy ciąg formatu zawiera specyfikatora formatu "ddd", <xref:System.DateTime.ToString%2A?displayProperty=nameWithType> lub <xref:System.DateTimeOffset.ToString%2A> metoda zawiera odpowiednie członkiem <xref:System.Globalization.DateTimeFormatInfo.AbbreviatedDayNames%2A> tablicy zamiast "ddd" w ciągu wynik.  
  
 Ta właściwość ma wpływ, jeśli wartość <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> zmiany właściwości. Jeśli wybrane <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> nie nie obsługuje, skróconej dzień nazwy, tablica zawiera nazwy pełny dzień.  
  
   
  
## Examples  
 Poniższy przykład tworzy odczytu/zapisu <xref:System.Globalization.CultureInfo> obiekt, który reprezentuje kultury angielski (Stany Zjednoczone), a następnie przypisuje skróconej nazwy dzień do jego <xref:System.Globalization.DateTimeFormatInfo.AbbreviatedDayNames%2A> właściwości. Następnie używa specyfikator formatu "ddd" w można wyświetlić reprezentację ciągu daty przez tydzień od 28 maja 2014.  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.AbbreviatedDayNames#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.abbreviateddaynames/cs/abbreviateddaynames1.cs#1)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.AbbreviatedDayNames#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.abbreviateddaynames/vb/abbreviateddaynames1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Ustawianie właściwości <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">Właściwość jest ustawiany tablicy jest wielowymiarowy lub mający długości, która nie jest dokładnie 7.</exception>
        <exception cref="T:System.InvalidOperationException">Ustawiono właściwość i <see cref="T:System.Globalization.DateTimeFormatInfo" /> obiekt jest tylko do odczytu.</exception>
        <altmember cref="P:System.Globalization.DateTimeFormatInfo.DayNames" />
        <altmember cref="P:System.Globalization.DateTimeFormatInfo.AbbreviatedMonthNames" />
        <altmember cref="M:System.Globalization.DateTimeFormatInfo.GetAbbreviatedDayName(System.DayOfWeek)" />
      </Docs>
    </Member>
    <Member MemberName="AbbreviatedMonthGenitiveNames">
      <MemberSignature Language="C#" Value="public string[] AbbreviatedMonthGenitiveNames { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] AbbreviatedMonthGenitiveNames" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.DateTimeFormatInfo.AbbreviatedMonthGenitiveNames" />
      <MemberSignature Language="VB.NET" Value="Public Property AbbreviatedMonthGenitiveNames As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::String ^&gt; ^ AbbreviatedMonthGenitiveNames { cli::array &lt;System::String ^&gt; ^ get(); void set(cli::array &lt;System::String ^&gt; ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia ciąg tablicę skróconych nazw miesięcy skojarzone z bieżącym <see cref="T:System.Globalization.DateTimeFormatInfo" /> obiektu.</summary>
        <value>Tablica skróconych nazw miesięcy.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 W przypadku niektórych języków nazwy miesięcy, który jest częścią daty jest wyświetlany w przypadku genitive. Na przykład data w ru-RU lub kultury rosyjski (Rosji) składa się z numer dnia i nazwy genitive miesięcy, takich jak Января 1 (styczeń 1). Dla tych języków, jeśli niestandardowy ciąg formatu zawiera specyfikatora formatu "MMM" <xref:System.DateTime.ToString%2A?displayProperty=nameWithType> lub <xref:System.DateTimeOffset.ToString%2A> metoda zawiera odpowiednie członkiem <xref:System.Globalization.DateTimeFormatInfo.AbbreviatedMonthGenitiveNames%2A> tablicy zamiast "MMM" w ciągu wynik.  
  
 W ramach operacji set tablicy musi być jednowymiarowa dokładnie 13 elementów, ponieważ <xref:System.Globalization.Calendar> obiektów zmieścił się w kalendarzy, które mają 13 miesięcy. Kalendarzy, które mają 12 miesięcy, powinien być element 13 <xref:System.String.Empty?displayProperty=nameWithType>. Pierwszy element (element w indeksie zero) reprezentuje pierwszy miesiąc roku zdefiniowane przez <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> właściwości.  
  
 Jeśli ustawisz <xref:System.Globalization.DateTimeFormatInfo.AbbreviatedMonthGenitiveNames%2A> właściwość, należy także ustawić <xref:System.Globalization.DateTimeFormatInfo.AbbreviatedMonthNames%2A> właściwości.  
  
   
  
## Examples  
 Poniższy przykład tworzy odczytu/zapisu <xref:System.Globalization.CultureInfo> obiekt, który reprezentuje kultury angielski (Stany Zjednoczone), a następnie przypisuje skróconej nazwy genitive miesięcy do jego <xref:System.Globalization.DateTimeFormatInfo.AbbreviatedMonthNames%2A> i <xref:System.Globalization.DateTimeFormatInfo.AbbreviatedMonthGenitiveNames%2A> właściwości. Wyświetla reprezentację ciągu daty, które obejmują skrócona nazwa miesiąca każdego miesiąca w kalendarzu obsługiwaną kulturą.  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.AbbreviatedMonthGenitiveNames#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.abbreviatedmonthgenitivenames/cs/abbreviatedmonthnames1.cs#1)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.AbbreviatedMonthGenitiveNames#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.abbreviatedmonthgenitivenames/vb/abbreviatedmonthnames1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">W ramach operacji set tablica jest wielowymiarowa lub o długości, która nie jest dokładnie 13.</exception>
        <exception cref="T:System.ArgumentNullException">W ramach operacji set tablica lub jeden z elementów tablicy jest <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">W bieżącej operacji set <see cref="T:System.Globalization.DateTimeFormatInfo" /> obiekt jest tylko do odczytu.</exception>
        <altmember cref="P:System.Globalization.DateTimeFormatInfo.MonthGenitiveNames" />
        <altmember cref="P:System.Globalization.DateTimeFormatInfo.AbbreviatedMonthNames" />
      </Docs>
    </Member>
    <Member MemberName="AbbreviatedMonthNames">
      <MemberSignature Language="C#" Value="public string[] AbbreviatedMonthNames { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] AbbreviatedMonthNames" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.DateTimeFormatInfo.AbbreviatedMonthNames" />
      <MemberSignature Language="VB.NET" Value="Public Property AbbreviatedMonthNames As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::String ^&gt; ^ AbbreviatedMonthNames { cli::array &lt;System::String ^&gt; ^ get(); void set(cli::array &lt;System::String ^&gt; ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia tablicy ciągów jednowymiarowa zawierającej nazwy skróconej specyficzne dla kultury miesięcy.</summary>
        <value>Jednowymiarowa tablica ciągów z elementami 13 zawierającej nazwy skróconej specyficzne dla kultury miesięcy. W kalendarzach 12-miesięczny 13 element tablicy jest pustym ciągiem. Tablica dla <see cref="P:System.Globalization.DateTimeFormatInfo.InvariantInfo" /> zawiera "Jan", "Luty", "Marca", "Kwietnia", "Może", "Cze", "Lip", "Sie", "Wrz", "Oct", "Lis", "Gru" i "".</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli ustawisz tę właściwość tablicy musi być jednowymiarowa z elementami dokładnie 13. <xref:System.Globalization.Calendar> obiekty zmieścił się w kalendarzy z 13 miesięcy. Pierwszy element (element w indeksie zero) reprezentuje pierwszy miesiąc roku zdefiniowane przez <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> właściwości.  
  
 Jeśli ustawisz <xref:System.Globalization.DateTimeFormatInfo.AbbreviatedMonthNames%2A> właściwość, należy także ustawić <xref:System.Globalization.DateTimeFormatInfo.AbbreviatedMonthGenitiveNames%2A> właściwości. <xref:System.Globalization.DateTimeFormatInfo.AbbreviatedMonthNames%2A> i <xref:System.Globalization.DateTimeFormatInfo.AbbreviatedMonthGenitiveNames%2A> właściwości są używane do formatowania daty przy użyciu następujące ciągi formatu:  
  
-   Standardowy format daty i godziny ciąg formatu czy formatu niestandardowego aliasy ciąg, który zawiera "MMM" specyfikator.  
  
-   Niestandardowa data i godzina ciąg formatu, który zawiera "MMM" specyfikatorze formatu.  
  
 Ta właściwość ma wpływ, jeśli wartość <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> zmiany właściwości. Jeśli wybrane <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> nie nie Obsługa skróconej nazwy miesięcy, tablica zawiera nazwy całego miesiąca.  
  
   
  
## Examples  
 Poniższy przykład tworzy odczytu/zapisu <xref:System.Globalization.CultureInfo> obiekt, który reprezentuje kultury angielski (Stany Zjednoczone), a następnie przypisuje skróconej nazwy genitive miesięcy do jego <xref:System.Globalization.DateTimeFormatInfo.AbbreviatedMonthNames%2A> i <xref:System.Globalization.DateTimeFormatInfo.AbbreviatedMonthGenitiveNames%2A> właściwości. Wyświetla reprezentację ciągu daty, które obejmują skróconą nazwę każdego miesiąca w kalendarzu obsługiwaną kulturą.  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.AbbreviatedMonthGenitiveNames#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.abbreviatedmonthgenitivenames/cs/abbreviatedmonthnames1.cs#1)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.AbbreviatedMonthGenitiveNames#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.abbreviatedmonthgenitivenames/vb/abbreviatedmonthnames1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Ustawianie właściwości <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">Właściwość jest ustawiany tablicy jest wielowymiarowy lub mający długości, która nie jest dokładnie 13.</exception>
        <exception cref="T:System.InvalidOperationException">Ustawiono właściwość i <see cref="T:System.Globalization.DateTimeFormatInfo" /> obiekt jest tylko do odczytu.</exception>
        <altmember cref="P:System.Globalization.DateTimeFormatInfo.AbbreviatedDayNames" />
        <altmember cref="P:System.Globalization.DateTimeFormatInfo.MonthNames" />
        <altmember cref="M:System.Globalization.DateTimeFormatInfo.GetAbbreviatedMonthName(System.Int32)" />
        <altmember cref="P:System.Globalization.DateTimeFormatInfo.AbbreviatedMonthGenitiveNames" />
      </Docs>
    </Member>
    <Member MemberName="AMDesignator">
      <MemberSignature Language="C#" Value="public string AMDesignator { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AMDesignator" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.DateTimeFormatInfo.AMDesignator" />
      <MemberSignature Language="VB.NET" Value="Public Property AMDesignator As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ AMDesignator { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia ciąg określenia godzin, które są "ante meridiem" (przed południe).</summary>
        <value>Określenia ciągu godzin, które są ante meridiem. Wartość domyślna dla <see cref="P:System.Globalization.DateTimeFormatInfo.InvariantInfo" /> jest "AM".</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Globalization.DateTimeFormatInfo.AMDesignator%2A> Jest używana dla cały czas od 0:00:00 (północ) do 11:59:59.999.  
  
 Jeśli niestandardowy ciąg formatu zawiera specyfikator formatu "tt", a czas jest przed południe <xref:System.DateTime.ToString%2A?displayProperty=nameWithType> lub <xref:System.DateTimeOffset.ToString%2A> metody zawiera wartość <xref:System.Globalization.DateTimeFormatInfo.AMDesignator%2A> właściwości zamiast "tt" w ciągu wynik. Jeśli niestandardowy ciąg formatu zawiera specyfikatora formatu niestandardowego "t", tylko pierwszy znak <xref:System.Globalization.DateTimeFormatInfo.AMDesignator%2A> wartość właściwości jest dołączony. Należy użyć "tt" dla języków, dla których konieczne jest utrzymanie różnicę między godziną and P.M. Przykładem jest japońskich, w którym o and P.M. zastrzeżeń różnią się w drugim znaku zamiast pierwszego znaku.  
  
 Dla kultury, które nie korzystają z godziną desygnator, ta właściwość zwraca pusty ciąg.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Ustawianie właściwości <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">Ustawiono właściwość i <see cref="T:System.Globalization.DateTimeFormatInfo" /> obiekt jest tylko do odczytu.</exception>
        <altmember cref="P:System.Globalization.DateTimeFormatInfo.PMDesignator" />
      </Docs>
    </Member>
    <Member MemberName="Calendar">
      <MemberSignature Language="C#" Value="public System.Globalization.Calendar Calendar { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Globalization.Calendar Calendar" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.DateTimeFormatInfo.Calendar" />
      <MemberSignature Language="VB.NET" Value="Public Property Calendar As Calendar" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Globalization::Calendar ^ Calendar { System::Globalization::Calendar ^ get(); void set(System::Globalization::Calendar ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.Calendar</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia kalendarza do użycia dla bieżącej kultury.</summary>
        <value>Kalendarz dla bieżącej kultury. Wartość domyślna dla <see cref="P:System.Globalization.DateTimeFormatInfo.InvariantInfo" /> jest <see cref="T:System.Globalization.GregorianCalendar" /> obiektu.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> Właściwość akceptuje tylko kalendarze, które są prawidłowe dla kultury, z którym skojarzony jest <xref:System.Globalization.DateTimeFormatInfo> obiektu. <xref:System.Globalization.CultureInfo.OptionalCalendars%2A?displayProperty=nameWithType> Właściwość określa kalendarzy, które mogą być używane przez określonej kultury, i <xref:System.Globalization.CultureInfo.Calendar%2A?displayProperty=nameWithType> właściwość określa kalendarz domyślny dla kultury.  
  
 Zmiana wartości tej właściwości dotyczy również następujące właściwości: <xref:System.Globalization.DateTimeFormatInfo.MonthNames%2A>, <xref:System.Globalization.DateTimeFormatInfo.AbbreviatedMonthNames%2A>, <xref:System.Globalization.DateTimeFormatInfo.DayNames%2A>, <xref:System.Globalization.DateTimeFormatInfo.AbbreviatedDayNames%2A>, <xref:System.Globalization.DateTimeFormatInfo.CalendarWeekRule%2A>, <xref:System.Globalization.DateTimeFormatInfo.FirstDayOfWeek%2A>, <xref:System.Globalization.DateTimeFormatInfo.FullDateTimePattern%2A>, <xref:System.Globalization.DateTimeFormatInfo.LongDatePattern%2A>, <xref:System.Globalization.DateTimeFormatInfo.ShortDatePattern%2A>, <xref:System.Globalization.DateTimeFormatInfo.YearMonthPattern%2A> , a <xref:System.Globalization.DateTimeFormatInfo.MonthDayPattern%2A>.  
  
 Na przykład w przypadku japońskiego kultura bieżącego wątku, ta właściwość akceptuje <xref:System.Globalization.JapaneseCalendar>, <xref:System.Globalization.GregorianCalendarTypes.Localized> <xref:System.Globalization.GregorianCalendar>, lub <xref:System.Globalization.GregorianCalendarTypes.USEnglish> <xref:System.Globalization.GregorianCalendar>. Gdy <xref:System.Globalization.JapaneseCalendar> jest używany domyślny daty długiej specyfikatora "\x6708"Używam \x5e74"y gg miał"\x65e5"". Gdy <xref:System.Globalization.GregorianCalendarTypes.Localized> <xref:System.Globalization.GregorianCalendar>, jest używany domyślny daty długiej specyfikatora "\x6708"Używam \x5e74"rrrr miał"\x65e5"".  
  
   
  
## Examples  
 W poniższym przykładzie zdefiniowano `ChangeCalendar` metody zmieniającej kulturę bieżącego kalendarza do określonego kalendarza, chyba że jest on już bieżącego kalendarza lub jeśli nie jest obsługiwany przez kultury. Tworzy kod, który wywołuje metodę <xref:System.Globalization.CultureInfo> obiekt, który reprezentuje kultury arabski (Egipt) i najpierw spróbuje jego kalendarza kalendarza japońskiego. Kalendarza japońskiego nie jest obsługiwane, metoda sprawia, że nie zmienić kalendarza kultury. Jednak ponieważ um al Qura kalendarza jest elementem członkowskim <xref:System.Globalization.CultureInfo.OptionalCalendars%2A?displayProperty=nameWithType> kolekcji, metoda uda się co bieżącego kalendarza kultury ar np.  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.Calendar#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Globalization.DateTimeFormatInfo.Calendar/cs/CalendarTest1.cs#1)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.Calendar#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Globalization.DateTimeFormatInfo.Calendar/vb/CalendarTest1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Ustawianie właściwości <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">Ustawianie właściwości <see cref="T:System.Globalization.Calendar" /> obiekt, który jest nieprawidłowy dla bieżącej kultury.</exception>
        <exception cref="T:System.InvalidOperationException">Ustawiono właściwość i <see cref="T:System.Globalization.DateTimeFormatInfo" /> obiekt jest tylko do odczytu.</exception>
        <altmember cref="T:System.Globalization.Calendar" />
      </Docs>
    </Member>
    <Member MemberName="CalendarWeekRule">
      <MemberSignature Language="C#" Value="public System.Globalization.CalendarWeekRule CalendarWeekRule { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Globalization.CalendarWeekRule CalendarWeekRule" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.DateTimeFormatInfo.CalendarWeekRule" />
      <MemberSignature Language="VB.NET" Value="Public Property CalendarWeekRule As CalendarWeekRule" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Globalization::CalendarWeekRule CalendarWeekRule { System::Globalization::CalendarWeekRule get(); void set(System::Globalization::CalendarWeekRule value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.CalendarWeekRule</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość określającą, reguły, które służy do określania pierwszy tydzień kalendarza w roku.</summary>
        <value>Wartość, która określa pierwszy tydzień kalendarza w roku. Wartość domyślna dla <see cref="P:System.Globalization.DateTimeFormatInfo.InvariantInfo" /> jest <see cref="F:System.Globalization.CalendarWeekRule.FirstDay" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość ma wpływ, jeśli wartość <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> zmiany właściwości.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Właściwość jest ustawiany na wartość, która nie jest prawidłową <see cref="T:System.Globalization.CalendarWeekRule" /> wartość.</exception>
        <exception cref="T:System.InvalidOperationException">W bieżącej operacji set <see cref="T:System.Globalization.DateTimeFormatInfo" /> obiekt jest tylko do odczytu.</exception>
        <altmember cref="T:System.Globalization.CalendarWeekRule" />
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public object Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.DateTimeFormatInfo.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Function Clone () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ Clone();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ICloneable.Clone</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Tworzy kopię pobieżną <see cref="T:System.Globalization.DateTimeFormatInfo" />.</summary>
        <returns>Nowy <see cref="T:System.Globalization.DateTimeFormatInfo" /> obiektu skopiowane z oryginalnego <see cref="T:System.Globalization.DateTimeFormatInfo" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Klon jest zapisywalny nawet wtedy, gdy oryginalne <xref:System.Globalization.DateTimeFormatInfo> obiekt jest tylko do odczytu. W związku z tym można modyfikować właściwości klonu wzorami zdefiniowane przez użytkownika.  
  
 Kopia pobieżna obiektu jest kopię tylko obiekt. Jeśli obiekt zawiera odwołania do innych obiektów, kopię pobieżną nie tworzy kopie określono obiektów. Odnosi się do oryginalnych obiektów zamiast tego. Z kolei głęboką kopię obiektu tworzy kopię obiektu i kopie wszystkich bezpośrednio lub pośrednio odwołuje się ten obiekt.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CurrentInfo">
      <MemberSignature Language="C#" Value="public static System.Globalization.DateTimeFormatInfo CurrentInfo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Globalization.DateTimeFormatInfo CurrentInfo" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.DateTimeFormatInfo.CurrentInfo" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property CurrentInfo As DateTimeFormatInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Globalization::DateTimeFormatInfo ^ CurrentInfo { System::Globalization::DateTimeFormatInfo ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.DateTimeFormatInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera tylko do odczytu <see cref="T:System.Globalization.DateTimeFormatInfo" /> obiekt, który formatuje wartości oparte na bieżącej kultury.</summary>
        <value>Tylko do odczytu <see cref="T:System.Globalization.DateTimeFormatInfo" /> na podstawie obiektu <see cref="T:System.Globalization.CultureInfo" /> obiektu dla bieżącego wątku.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Globalization.DateTimeFormatInfo> Obiektu zwróconego przez <xref:System.Globalization.DateTimeFormatInfo.CurrentInfo%2A> właściwość odzwierciedla zastąpienia użytkownika.  
  
   
  
## Examples  
 W poniższym przykładzie użyto <xref:System.Globalization.DateTimeFormatInfo.CurrentInfo%2A> właściwości do pobrania <xref:System.Globalization.DateTimeFormatInfo> obiekt, który reprezentuje Konwencji formatowania bieżącej kultury, w tym przypadku jest kulturą en US. Następnie wyświetla ciąg formatu i ciąg, którego wynik sześć właściwości formatowania.  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.CurrentInfo#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Globalization.DateTimeFormatInfo.CurrentInfo/cs/CurrentInfo1.cs#1)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.CurrentInfo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Globalization.DateTimeFormatInfo.CurrentInfo/vb/CurrentInfo1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Globalization.CultureInfo" />
      </Docs>
    </Member>
    <Member MemberName="DateSeparator">
      <MemberSignature Language="C#" Value="public string DateSeparator { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DateSeparator" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.DateTimeFormatInfo.DateSeparator" />
      <MemberSignature Language="VB.NET" Value="Public Property DateSeparator As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DateSeparator { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia ciąg polegająca na separowaniu składników daty, oznacza to, rok, miesiąc i dzień.</summary>
        <value>Polegająca na separowaniu składników daty, czyli ciąg, rok, miesiąc i dzień. Wartość domyślna dla <see cref="P:System.Globalization.DateTimeFormatInfo.InvariantInfo" /> jest "/".</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli niestandardowy ciąg formatu zawiera specyfikator formatu "/" <xref:System.DateTime.ToString%2A?displayProperty=nameWithType> metoda Wyświetla wartość <xref:System.Globalization.DateTimeFormatInfo.DateSeparator%2A> zamiast "/" w ciągu wynik.  
  
 <xref:System.Globalization.DateTimeFormatInfo.DateSeparator%2A> Właściwość definiuje ciąg, który zastępuje separatora daty ("/" Niestandardowa data i godzina specyfikatorze formatu) w ciągu wynik operacji formatowania. Definiuje również ciąg separatora daty w operacji analizy.  
  
   
  
## Examples  
 Poniższy przykład tworzy <xref:System.Globalization.CultureInfo> obiektu dla kultury en US zmienia jego separator daty "-" i wyświetla za pomocą "d", "G" i "g" standardowe ciągi formatujące datę.  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.DateSeparator#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.dateseparator/cs/dateseparatorex.cs#1)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.DateSeparator#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.dateseparator/vb/dateseparatorex.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Ustawianie właściwości <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">Ustawiono właściwość i <see cref="T:System.Globalization.DateTimeFormatInfo" /> obiekt jest tylko do odczytu.</exception>
        <altmember cref="P:System.Globalization.DateTimeFormatInfo.TimeSeparator" />
      </Docs>
    </Member>
    <Member MemberName="DayNames">
      <MemberSignature Language="C#" Value="public string[] DayNames { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] DayNames" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.DateTimeFormatInfo.DayNames" />
      <MemberSignature Language="VB.NET" Value="Public Property DayNames As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::String ^&gt; ^ DayNames { cli::array &lt;System::String ^&gt; ^ get(); void set(cli::array &lt;System::String ^&gt; ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia tablicy jednowymiarowej tablicy ciągów, które zawierają specyficzne dla kultury pełne nazwy dni tygodnia.</summary>
        <value>Tablica jednowymiarowa ciągu, która zawiera specyficzne dla kultury pełne nazwy dni tygodnia. Tablica dla <see cref="P:System.Globalization.DateTimeFormatInfo.InvariantInfo" /> zawiera "Niedziela", "Poniedziałek", "Wtorek", "Środa", "Czwartek", "Piątek" i "Sobota".</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli ustawienie dla tej właściwości, tablicy musi być jednowymiarowa i musi mieć dokładnie siedmiu elementy. Pierwszy dzień tygodnia w kalendarzu zdefiniowane przez reprezentuje pierwszy element (element w indeksie zero) <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> właściwości.  
  
 Jeśli niestandardowy ciąg formatu zawiera specyfikatora formatu "dddd", <xref:System.DateTime.ToString%2A?displayProperty=nameWithType> metody zawiera wartość odpowiednią <xref:System.Globalization.DateTimeFormatInfo.DayNames%2A> elementu członkowskiego zamiast "dddd" w ciągu wynik.  
  
 Ta właściwość ma wpływ, jeśli wartość <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> zmiany właściwości.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Ustawianie właściwości <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">Właściwość jest ustawiany tablicy jest wielowymiarowy lub mający długości, która nie jest dokładnie 7.</exception>
        <exception cref="T:System.InvalidOperationException">Ustawiono właściwość i <see cref="T:System.Globalization.DateTimeFormatInfo" /> obiekt jest tylko do odczytu.</exception>
        <altmember cref="P:System.Globalization.DateTimeFormatInfo.AbbreviatedDayNames" />
        <altmember cref="P:System.Globalization.DateTimeFormatInfo.MonthNames" />
        <altmember cref="M:System.Globalization.DateTimeFormatInfo.GetDayName(System.DayOfWeek)" />
      </Docs>
    </Member>
    <Member MemberName="FirstDayOfWeek">
      <MemberSignature Language="C#" Value="public DayOfWeek FirstDayOfWeek { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DayOfWeek FirstDayOfWeek" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.DateTimeFormatInfo.FirstDayOfWeek" />
      <MemberSignature Language="VB.NET" Value="Public Property FirstDayOfWeek As DayOfWeek" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property DayOfWeek FirstDayOfWeek { DayOfWeek get(); void set(DayOfWeek value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DayOfWeek</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia pierwszy dzień tygodnia.</summary>
        <value>Wartość wyliczenia reprezentujący pierwszy dzień tygodnia. Wartość domyślna dla <see cref="P:System.Globalization.DateTimeFormatInfo.InvariantInfo" /> jest <see cref="F:System.DayOfWeek.Sunday" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość ma wpływ, jeśli wartość <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> zmiany właściwości.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Właściwość jest ustawiany na wartość, która nie jest prawidłową <see cref="T:System.DayOfWeek" /> wartość.</exception>
        <exception cref="T:System.InvalidOperationException">Ustawiono właściwość i <see cref="T:System.Globalization.DateTimeFormatInfo" /> obiekt jest tylko do odczytu.</exception>
        <altmember cref="T:System.DayOfWeek" />
      </Docs>
    </Member>
    <Member MemberName="FullDateTimePattern">
      <MemberSignature Language="C#" Value="public string FullDateTimePattern { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FullDateTimePattern" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.DateTimeFormatInfo.FullDateTimePattern" />
      <MemberSignature Language="VB.NET" Value="Public Property FullDateTimePattern As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ FullDateTimePattern { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia ciąg formatu niestandardowego dla daty długiej i długi czas wartość.</summary>
        <value>Niestandardowy ciąg formatu daty długiej i długi czas wartość.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ciąg formatu standardowych "F" jest aliasem <xref:System.Globalization.DateTimeFormatInfo.FullDateTimePattern%2A> właściwości. Innymi słowy niestandardowy ciąg formatu przypisany do tej właściwości definiuje format ciągu wyników dla ciągu formatowania standardowego "F". Aby uzyskać więcej informacji, zobacz [standardowe ciągi daty i godziny Format](~/docs/standard/base-types/standard-date-and-time-format-strings.md).  
  
 Wartość <xref:System.Globalization.DateTimeFormatInfo.FullDateTimePattern%2A> właściwość jest generowana dynamicznie przez połączenie <xref:System.Globalization.DateTimeFormatInfo.LongDatePattern%2A> i <xref:System.Globalization.DateTimeFormatInfo.LongTimePattern%2A> właściwości rozdzielonych spacją. To przypisanie dynamiczne odbywa się w następujących warunkach:  
  
-   Jeśli wartość właściwości jest pobierana przed została jawnie ustawiona.  
  
-   Jeśli wartość <xref:System.Globalization.DateTimeFormatInfo.LongDatePattern%2A> zmiany właściwości.  
  
-   Jeśli wartość <xref:System.Globalization.DateTimeFormatInfo.LongTimePattern%2A> zmiany właściwości.  
  
 Ta właściwość ma wpływ, jeśli wartość <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> zmiany właściwości.  
  
   
  
## Examples  
 W poniższym przykładzie przedstawiono wartości <xref:System.Globalization.DateTimeFormatInfo.FullDateTimePattern%2A> dla kilku kultur.  
  
 [!code-cpp[System.Globalization.DateTimeFormatInfo.FullDateTimePattern#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.FullDateTimePattern/CPP/dtfi_fulldatetimepattern.cpp#1)]
 [!code-csharp[System.Globalization.DateTimeFormatInfo.FullDateTimePattern#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.FullDateTimePattern/CS/dtfi_fulldatetimepattern.cs#1)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.FullDateTimePattern#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.FullDateTimePattern/VB/dtfi_fulldatetimepattern.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Ustawianie właściwości <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">Ustawiono właściwość i <see cref="T:System.Globalization.DateTimeFormatInfo" /> obiekt jest tylko do odczytu.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetAbbreviatedDayName">
      <MemberSignature Language="C#" Value="public string GetAbbreviatedDayName (DayOfWeek dayofweek);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetAbbreviatedDayName(valuetype System.DayOfWeek dayofweek) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.DateTimeFormatInfo.GetAbbreviatedDayName(System.DayOfWeek)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetAbbreviatedDayName(DayOfWeek dayofweek);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dayofweek" Type="System.DayOfWeek" />
      </Parameters>
      <Docs>
        <param name="dayofweek">A <see cref="T:System.DayOfWeek" /> wartość.</param>
        <summary>Zwraca specyficzne dla kultury skróconą nazwę określonego dnia, tygodnia, w oparciu kultury skojarzone z bieżącym <see cref="T:System.Globalization.DateTimeFormatInfo" /> obiektu.</summary>
        <returns>Specyficzne dla kultury skróconą nazwę dnia tygodnia reprezentowany przez <paramref name="dayofweek" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dla domyślnego niezmiennej <xref:System.Globalization.DateTimeFormatInfo> obiektu, ta metoda zwraca ciąg z <xref:System.Globalization.GregorianCalendar>:  
  
|`dayofweek`|Wartość zwracana|  
|-----------------|------------------|  
|Niedziela|"Sun"|  
|Poniedziałek|"Mon"|  
|Wtorek|"Wt"|  
|Środa|"Śro"|  
|Czwartek|"Czw"|  
|Piątek|"Fri"|  
|Sobota|"NAS."|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="dayofweek" /> nie jest prawidłową <see cref="T:System.DayOfWeek" /> wartość.</exception>
        <altmember cref="T:System.Globalization.CultureInfo" />
        <altmember cref="T:System.Globalization.GregorianCalendar" />
        <altmember cref="P:System.Globalization.DateTimeFormatInfo.AbbreviatedDayNames" />
        <altmember cref="T:System.DayOfWeek" />
      </Docs>
    </Member>
    <Member MemberName="GetAbbreviatedEraName">
      <MemberSignature Language="C#" Value="public string GetAbbreviatedEraName (int era);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetAbbreviatedEraName(int32 era) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.DateTimeFormatInfo.GetAbbreviatedEraName(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAbbreviatedEraName (era As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetAbbreviatedEraName(int era);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="era" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="era">Liczbę całkowitą przedstawiającą ery.</param>
        <summary>Zwraca ciąg zawierający skróconą nazwę określonego era, jeśli istnieje skrót.</summary>
        <returns>Ciąg zawierający skróconą nazwę określonego era, jeśli istnieje skrót.  
  
 —lub—  
  
 Ciąg zawierający imię i nazwisko era, jeśli skrót nie istnieje.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Nazwa ery jest nazwą, używanych do odwoływania się do okresu czasu liczona od stałego punktu lub zdarzenia kalendarza. Na przykład "r". lub "R". jest bieżącym ery w kalendarza gregoriańskiego.  
  
 Prawidłowe wartości dla `era` są wymienione w <xref:System.Globalization.Calendar.Eras%2A> właściwości odpowiedniej klasy pochodzące z <xref:System.Globalization.Calendar>. Na przykład: <xref:System.Globalization.JapaneseCalendar.Eras%2A?displayProperty=nameWithType> zostanie wyświetlona lista Arial, które są obsługiwane przez tę implementację.  
  
 W <xref:System.Globalization.JapaneseCalendar> klasy era skróconej nazwy to pierwszy znak nazwy pełne ery. Ten znak jest jednoznakowym bez uwzględniania wielkości liter alfabetu łacińskiego skrótu lub skrótu Kanji jednoznakowym.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="era" /> reprezentuje prawidłową ery w kalendarzu określone w <see cref="P:System.Globalization.DateTimeFormatInfo.Calendar" /> właściwości.</exception>
        <block subset="none" type="usage">
          <para>Jeśli <see cref="P:System.Globalization.DateTimeFormatInfo.Calendar" /> jest <see cref="T:System.Globalization.TaiwanCalendar" /> , ale <see cref="P:System.Threading.Thread.CurrentCulture" /> nie jest "zh-TW", następnie <see cref="P:System.Globalization.DateTimeFormatInfo.NativeCalendarName" />, <see cref="M:System.Globalization.DateTimeFormatInfo.GetEraName(System.Int32)" />, i <see cref="M:System.Globalization.DateTimeFormatInfo.GetAbbreviatedEraName(System.Int32)" /> Zwróć ciąg pusty ("").</para>
        </block>
        <altmember cref="T:System.Globalization.JapaneseCalendar" />
        <altmember cref="T:System.Globalization.TaiwanCalendar" />
      </Docs>
    </Member>
    <Member MemberName="GetAbbreviatedMonthName">
      <MemberSignature Language="C#" Value="public string GetAbbreviatedMonthName (int month);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetAbbreviatedMonthName(int32 month) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.DateTimeFormatInfo.GetAbbreviatedMonthName(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAbbreviatedMonthName (month As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetAbbreviatedMonthName(int month);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="month" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="month">Liczba całkowita z zakresu od 1 do 13 reprezentujący nazwę miesiąca do pobrania.</param>
        <summary>Zwraca specyficzne dla kultury skróconą nazwę podanego miesiąca oparte na kultury skojarzone z bieżącym <see cref="T:System.Globalization.DateTimeFormatInfo" /> obiektu.</summary>
        <returns>Specyficzne dla kultury skróconą nazwę miesiąca reprezentowany przez <paramref name="month" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dla domyślnego niezmiennej <xref:System.Globalization.DateTimeFormatInfo> obiektu, ta metoda zwraca ciąg z <xref:System.Globalization.GregorianCalendar> obiektu.  
  
|`month`|Wartość zwracana|  
|-------------|------------------|  
|1|"Jan"|  
|2|"Luty"|  
|3|"Marca"|  
|4|"Kwietnia"|  
|5|"Może"|  
|6|"Cze"|  
|7|"Lip"|  
|8|"Sie"|  
|9|"Wrz"|  
|10|"Oct"|  
|11|"Lis"|  
|12|"Gru"|  
|13|""|  
  
 <xref:System.Globalization.Calendar> obiekty może obsłużyć kalendarzy z 13 miesięcy. W kalendarzach 12-miesięczny pustego ciągu zawsze jest zwracana jako nazwę 13 miesiąca.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="month" /> jest mniejsza niż 1 lub większą niż 13.</exception>
        <altmember cref="T:System.Globalization.Calendar" />
        <altmember cref="T:System.Globalization.CultureInfo" />
        <altmember cref="T:System.Globalization.GregorianCalendar" />
        <altmember cref="P:System.Globalization.DateTimeFormatInfo.AbbreviatedMonthNames" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetAllDateTimePatterns">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Zwraca standardowe wzorce, w których mogą być sformatowane wartości daty i godziny.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetAllDateTimePatterns">
      <MemberSignature Language="C#" Value="public string[] GetAllDateTimePatterns ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string[] GetAllDateTimePatterns() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.DateTimeFormatInfo.GetAllDateTimePatterns" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAllDateTimePatterns () As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::String ^&gt; ^ GetAllDateTimePatterns();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zwraca standardowe wzorce, w których mogą być sformatowane wartości daty i godziny.</summary>
        <returns>Tablica zawiera standardowe wzorce, w których mogą być sformatowane wartości daty i godziny.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda zwraca tablicę, która zawiera wszystkie ciągi formatu niestandardowego, które odpowiadają standardowe ciągi formatujące. Zobacz [standardowe ciągi daty i godziny Format](~/docs/standard/base-types/standard-date-and-time-format-strings.md) listę ciągów standardowym formacie.  
  
 Możesz użyć niestandardowych ciągów formatu w tablicy zwracanej przez <xref:System.Globalization.DateTimeFormatInfo.GetAllDateTimePatterns%2A> metody w operacji formatowania. Jednak jeśli to zrobisz, reprezentację ciągu wartość daty i godziny zwracane w tej operacji formatowania nie zawsze można analizować pomyślnie przez `Parse` i `TryParse` metody. W związku z tym nie założono, że ciągi formatu niestandardowego zwrócony przez <xref:System.Globalization.DateTimeFormatInfo.GetAllDateTimePatterns%2A> metoda może służyć do wartości obustronne daty i godziny. Poniższy przykład przedstawia ten problem. Pobiera on <xref:System.Globalization.DateTimeFormatInfo> obiekt, który zawiera informacje dotyczące formatowania dla kultury Włochy (włoski). Przekazuje ono każdy niestandardowy ciąg formatu w tablicy zwracanej przez <xref:System.Globalization.DateTimeFormatInfo.GetAllDateTimePatterns> metodę <xref:System.DateTime.ToString%28System.String%29?displayProperty=nameWithType> metodę w celu utworzenia reprezentacji ciągu daty i godziny. W tym przykładzie podejmuje próbę przeanalizować tej wartości przez wywołanie metody <xref:System.DateTime.TryParse%28System.String%2CSystem.DateTime%40%29?displayProperty=nameWithType> metody. Jak dane wyjściowe w przykładzie pokazano, niektóre ciągi formatu niestandardowego dać daty i czasu to pomyślnie wartość przechodzenia.  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.GetAllDateTimePatterns#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.getalldatetimepatterns/cs/getalldatetimepatternsex1.cs#1)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.GetAllDateTimePatterns#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.getalldatetimepatterns/vb/getalldatetimepatternsex1.vb#1)]  
  
 Można przeanalizować reprezentację ciągu daty i godziny, który może zostać wyrażona w szereg wstępnie zdefiniowanych i niestandardowych formatów, wywoływanie jednego z następujących metod:  
  
-   <xref:System.DateTime.ParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=nameWithType>  
  
-   <xref:System.DateTimeOffset.ParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=nameWithType>  
  
-   <xref:System.DateTime.TryParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTime%40%29?displayProperty=nameWithType>  
  
-   <xref:System.DateTimeOffset.TryParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTimeOffset%40%29?displayProperty=nameWithType>  
  
 Ciągi formatu niestandardowego w tablicy zwracanej przez <xref:System.Globalization.DateTimeFormatInfo.GetAllDateTimePatterns%2A> metoda zależy od bieżącego kalendarza kultura, dla którego <xref:System.Globalization.DateTimeFormatInfo> obiektu dostarcza informacje dotyczące formatowania. W przypadku zmiany kalendarza, zmieniają się także tablica zwrócona przez tę metodę.  
  
   
  
## Examples  
 W poniższym przykładzie przedstawiono daty i ciągi formatu czasu dla Niezmienna kultura, a także ciąg wynik, który jest generowany, gdy czy ciąg formatu używany do formatowania określonej daty.  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.GetAllDateTimePatterns#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.getalldatetimepatterns/cs/getalldatetimepatternsinv.cs#3)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.GetAllDateTimePatterns#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.getalldatetimepatterns/vb/getalldatetimepatternsinv.vb#3)]  
  
 Przykład tworzy <xref:System.Globalization.DateTimeFormatInfo> obiekt, który reprezentuje Niezmienna kultura wywołując <xref:System.Globalization.DateTimeFormatInfo.%23ctor%2A> konstruktora. Można również pobrać <xref:System.Globalization.DateTimeFormatInfo> reprezentujący Niezmienna kultura z <xref:System.Globalization.DateTimeFormatInfo.InvariantInfo%2A> właściwości.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Globalization.DateTimeFormatInfo.SetAllDateTimePatterns(System.String[],System.Char)" />
      </Docs>
    </Member>
    <Member MemberName="GetAllDateTimePatterns">
      <MemberSignature Language="C#" Value="public string[] GetAllDateTimePatterns (char format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string[] GetAllDateTimePatterns(char format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.DateTimeFormatInfo.GetAllDateTimePatterns(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAllDateTimePatterns (format As Char) As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::String ^&gt; ^ GetAllDateTimePatterns(char format);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="format">Ciąg formatu standardowych.</param>
        <summary>Zwraca te wzorce, w których można formatować wartości daty i godziny przy użyciu określonego standardowe ciągu formatu.</summary>
        <returns>Tablica zawierająca Wzorce standardowe, w których wartości daty i godziny mogą być sformatowane przy użyciu określonego ciągu formatu.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda zwraca tablicę zawierającą ciągów formatu niestandardowego, które odpowiadają ciągu określonego formatu standardowych. Zobacz [standardowe ciągi daty i godziny Format](~/docs/standard/base-types/standard-date-and-time-format-strings.md) listę ciągów standardowym formacie.  
  
 Możesz użyć niestandardowych ciągów formatu w tablicy zwracanej przez <xref:System.Globalization.DateTimeFormatInfo.GetAllDateTimePatterns%2A> metody w operacji formatowania. Jednak jeśli to zrobisz, reprezentację ciągu wartość daty i godziny zwracane w tej operacji formatowania nie zawsze można analizować pomyślnie przez `Parse` i `TryParse` metody. W związku z tym nie założono, że ciągi formatu niestandardowego zwrócony przez <xref:System.Globalization.DateTimeFormatInfo.GetAllDateTimePatterns%2A> metoda może służyć do wartości obustronne daty i godziny. Poniższy przykład przedstawia ten problem. Pobiera on <xref:System.Globalization.DateTimeFormatInfo> obiekt, który zawiera informacje dotyczące formatowania dla kultury Rosji (rosyjski). Wywołuje <xref:System.Globalization.DateTimeFormatInfo.GetAllDateTimePatterns%28System.Char%29> metodę dla każdego ciągu standardowym formacie, a następnie przekazuje ciąg zwrócony tablicy do formatu każdej niestandardowej <xref:System.DateTime.ToString%28System.String%29?displayProperty=nameWithType> metodę w celu utworzenia reprezentacji ciągu daty i godziny. W tym przykładzie podejmuje próbę przeanalizować tej wartości przez wywołanie metody <xref:System.DateTime.TryParse%28System.String%2CSystem.DateTime%40%29?displayProperty=nameWithType> metody. Jak dane wyjściowe w przykładzie pokazano, niektóre ciągi formatu niestandardowego dać daty i czasu to pomyślnie wartość przechodzenia.  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.GetAllDateTimePatterns#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.getalldatetimepatterns/cs/getalldatetimepatternsex2.cs#2)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.GetAllDateTimePatterns#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.getalldatetimepatterns/vb/getalldatetimepatternsex2.vb#2)]  
  
 Można przeanalizować reprezentację ciągu daty i godziny, który może zostać wyrażona w szereg wstępnie zdefiniowanych i niestandardowych formatów, wywoływanie jednego z następujących metod:  
  
-   <xref:System.DateTime.ParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=nameWithType>  
  
-   <xref:System.DateTimeOffset.ParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=nameWithType>  
  
-   <xref:System.DateTime.TryParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTime%40%29?displayProperty=nameWithType>  
  
-   <xref:System.DateTimeOffset.TryParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTimeOffset%40%29?displayProperty=nameWithType>  
  
 Ciągi formatu niestandardowego w tablicy zwracanej przez <xref:System.Globalization.DateTimeFormatInfo.GetAllDateTimePatterns%2A> metoda zależy od bieżącego kalendarza kultura, dla którego <xref:System.Globalization.DateTimeFormatInfo> obiektu dostarcza informacje dotyczące formatowania. W przypadku zmiany kalendarza, zmieniają się także tablica zwrócona przez tę metodę.  
  
   
  
## Examples  
 W poniższym przykładzie przedstawiono wzorców daty i godziny dla bieżącego kalendarza.  
  
 [!code-cpp[Classic DateTimeFormatInfo.GetAllDateTimePatterns Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic DateTimeFormatInfo.GetAllDateTimePatterns Example/CPP/source.cpp#1)]
 [!code-csharp[Classic DateTimeFormatInfo.GetAllDateTimePatterns Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic DateTimeFormatInfo.GetAllDateTimePatterns Example/CS/source.cs#1)]
 [!code-vb[Classic DateTimeFormatInfo.GetAllDateTimePatterns Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic DateTimeFormatInfo.GetAllDateTimePatterns Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="format" /> nie jest prawidłowym standardowe ciągiem formatu.</exception>
        <altmember cref="M:System.Globalization.DateTimeFormatInfo.SetAllDateTimePatterns(System.String[],System.Char)" />
      </Docs>
    </Member>
    <Member MemberName="GetDayName">
      <MemberSignature Language="C#" Value="public string GetDayName (DayOfWeek dayofweek);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetDayName(valuetype System.DayOfWeek dayofweek) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.DateTimeFormatInfo.GetDayName(System.DayOfWeek)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetDayName(DayOfWeek dayofweek);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dayofweek" Type="System.DayOfWeek" />
      </Parameters>
      <Docs>
        <param name="dayofweek">A <see cref="T:System.DayOfWeek" /> wartość.</param>
        <summary>Zwraca pełną nazwę określonego dnia, tygodnia, w oparciu kultury skojarzone z bieżącym specyficzne dla kultury <see cref="T:System.Globalization.DateTimeFormatInfo" /> obiektu.</summary>
        <returns>Pełna nazwa dnia tygodnia reprezentowany przez specyficzne dla kultury <paramref name="dayofweek" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dla domyślnego niezmiennej <xref:System.Globalization.DateTimeFormatInfo> obiektu, ta metoda zwraca ciąg z <xref:System.Globalization.GregorianCalendar> obiektu.  
  
|`dayofweek`|Wartość zwracana|  
|-----------------|------------------|  
|Niedziela|"Niedziela"|  
|Poniedziałek|"Poniedziałek"|  
|Wtorek|"Wtorek"|  
|Środa|"Środa"|  
|Czwartek|"Czwartek"|  
|Piątek|"Piątek"|  
|Sobota|"Sobota"|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="dayofweek" /> nie jest prawidłową <see cref="T:System.DayOfWeek" /> wartość.</exception>
        <altmember cref="T:System.Globalization.CultureInfo" />
        <altmember cref="T:System.Globalization.GregorianCalendar" />
        <altmember cref="P:System.Globalization.DateTimeFormatInfo.DayNames" />
        <altmember cref="T:System.DayOfWeek" />
      </Docs>
    </Member>
    <Member MemberName="GetEra">
      <MemberSignature Language="C#" Value="public int GetEra (string eraName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetEra(string eraName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.DateTimeFormatInfo.GetEra(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEra (eraName As String) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetEra(System::String ^ eraName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eraName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eraName">Ciąg zawierający nazwę ery.</param>
        <summary>Zwraca liczbę całkowitą przedstawiającą określonego ery.</summary>
        <returns>Liczbę całkowitą przedstawiającą era, jeśli <paramref name="eraName" /> jest prawidłowy; w przeciwnym razie wartość -1.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Nazwa ery jest nazwą, używanych do odwoływania się do okresu czasu liczona od stałego punktu lub zdarzenia kalendarza. Na przykład "r". lub "R". jest bieżącym ery w kalendarza gregoriańskiego.  
  
 Porównanie z `eraName` nie uwzględnia wielkości liter, na przykład "r". odpowiada to r ".".  
  
 <xref:System.Globalization.DateTimeFormatInfo.GetEra%2A> ignoruje znaki interpunkcyjne w nazwach skróconej ery tylko wtedy, gdy <xref:System.Globalization.GregorianCalendar> wybrano <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A?displayProperty=nameWithType> i kultura używa "r". jako Nazwa ery, czyli r "." odpowiada to "AD".  
  
 <xref:System.Globalization.DateTimeFormatInfo.GetEra%2A> porównuje `eraName` o nazwie pełne ery zwrócony przez <xref:System.Globalization.DateTimeFormatInfo.GetEraName%2A> i nazwy skróconej ery zwrócony przez <xref:System.Globalization.DateTimeFormatInfo.GetAbbreviatedEraName%2A>.  
  
   
  
## Examples  
 W poniższym przykładzie pokazano, że <xref:System.Globalization.DateTimeFormatInfo> ignoruje te znaki w nazwie ery tylko wtedy, gdy jest używany kalendarz gregoriański i kultura używana nazwa ery "r.".  
  
 [!code-cpp[System.Globalization.GregorianCalendar.GetEra#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.GregorianCalendar.GetEra/CPP/gregorian_getera.cpp#1)]
 [!code-csharp[System.Globalization.GregorianCalendar.GetEra#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.GregorianCalendar.GetEra/CS/gregorian_getera.cs#1)]
 [!code-vb[System.Globalization.GregorianCalendar.GetEra#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.GregorianCalendar.GetEra/VB/gregorian_getera.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="eraName" /> jest <see langword="null" />.</exception>
        <altmember cref="M:System.Globalization.DateTimeFormatInfo.GetEraName(System.Int32)" />
        <altmember cref="T:System.Globalization.Calendar" />
      </Docs>
    </Member>
    <Member MemberName="GetEraName">
      <MemberSignature Language="C#" Value="public string GetEraName (int era);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetEraName(int32 era) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.DateTimeFormatInfo.GetEraName(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEraName (era As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetEraName(int era);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="era" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="era">Liczbę całkowitą przedstawiającą ery.</param>
        <summary>Zwraca ciąg zawierający nazwę określonego ery.</summary>
        <returns>Ciąg zawierający nazwę ery.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Nazwa ery jest nazwą, używanych do odwoływania się do okresu czasu liczona od stałego punktu lub zdarzenia kalendarza. Na przykład "r". lub "R". jest bieżącym ery w kalendarza gregoriańskiego.  
  
 Prawidłowe wartości dla `era` są wymienione w <xref:System.Globalization.Calendar.Eras%2A> właściwości odpowiedniej klasy pochodzące z <xref:System.Globalization.Calendar>. Na przykład: <xref:System.Globalization.JapaneseCalendar.Eras%2A?displayProperty=nameWithType> zostanie wyświetlona lista Arial, które są obsługiwane przez tę implementację.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="era" /> reprezentuje prawidłową ery w kalendarzu określone w <see cref="P:System.Globalization.DateTimeFormatInfo.Calendar" /> właściwości.</exception>
        <block subset="none" type="usage">
          <para>Jeśli kalendarz jest reprezentowana przez <see cref="T:System.Globalization.TaiwanCalendar" /> , ale <see cref="P:System.Threading.Thread.CurrentCulture" /> nie jest "zh-TW", następnie <see cref="P:System.Globalization.DateTimeFormatInfo.NativeCalendarName" />, <see cref="M:System.Globalization.DateTimeFormatInfo.GetEraName(System.Int32)" />, i <see cref="M:System.Globalization.DateTimeFormatInfo.GetAbbreviatedEraName(System.Int32)" /> Zwróć ciąg pusty ("").</para>
        </block>
        <altmember cref="M:System.Globalization.DateTimeFormatInfo.GetEra(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="GetFormat">
      <MemberSignature Language="C#" Value="public object GetFormat (Type formatType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetFormat(class System.Type formatType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.DateTimeFormatInfo.GetFormat(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetFormat (formatType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ GetFormat(Type ^ formatType);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IFormatProvider.GetFormat(System.Type)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="formatType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="formatType">Typ wymagana usługa formatowania.</param>
        <summary>Zwraca obiekt określonego typu, który udostępnia formatowania daty i godziny usługi.</summary>
        <returns>Bieżący obiekt, jeśli <paramref name="formatType" /> jest taki sam jak typ bieżącego <see cref="T:System.Globalization.DateTimeFormatInfo" />; w przeciwnym razie <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `Format(String, IFormatProvider)` Metoda obsługiwana przez podstawowe typy danych wywołania tej metody podczas bieżącej <xref:System.Globalization.DateTimeFormatInfo> obiekt jest przekazywany jako <xref:System.IFormatProvider> parametru. Ta metoda implementuje <xref:System.IFormatProvider.GetFormat%2A?displayProperty=nameWithType>.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IFormatProvider" />
        <altmember cref="M:System.Globalization.NumberFormatInfo.GetFormat(System.Type)" />
      </Docs>
    </Member>
    <Member MemberName="GetInstance">
      <MemberSignature Language="C#" Value="public static System.Globalization.DateTimeFormatInfo GetInstance (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Globalization.DateTimeFormatInfo GetInstance(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.DateTimeFormatInfo.GetInstance(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetInstance (provider As IFormatProvider) As DateTimeFormatInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Globalization::DateTimeFormatInfo ^ GetInstance(IFormatProvider ^ provider);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.DateTimeFormatInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <see cref="T:System.IFormatProvider" /> Który pobiera <see cref="T:System.Globalization.DateTimeFormatInfo" /> obiektu.  
  
 —lub—  
  
 <see langword="null" /> Aby uzyskać <see cref="P:System.Globalization.DateTimeFormatInfo.CurrentInfo" />.</param>
        <summary>Zwraca <see cref="T:System.Globalization.DateTimeFormatInfo" /> obiekt skojarzony z określonym <see cref="T:System.IFormatProvider" />.</summary>
        <returns>A <see cref="T:System.Globalization.DateTimeFormatInfo" /> obiekt skojarzony z <see cref="T:System.IFormatProvider" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda używa <xref:System.IFormatProvider.GetFormat%2A?displayProperty=nameWithType> metody `formatProvider` przy użyciu <xref:System.Globalization.DateTimeFormatInfo> obiekt jako `Type` parametru. Jeśli `formatProvider` jest `null` lub, jeśli <xref:System.IFormatProvider.GetFormat%2A?displayProperty=nameWithType> zwraca `null`, ta metoda zwraca <xref:System.Globalization.DateTimeFormatInfo.CurrentInfo%2A>.  
  
 Aplikacja może pobrać <xref:System.Globalization.DateTimeFormatInfo> obiektu dla określonej kultury przy użyciu jednej z następujących metod:  
  
-   <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType> Właściwości.  
  
-   <xref:System.Globalization.DateTimeFormatInfo.GetInstance%2A> Metody, gdzie `provider` jest <xref:System.Globalization.CultureInfo> obiektu.  
  
 A <xref:System.Globalization.DateTimeFormatInfo> obiektu można tworzyć tylko w przypadku Niezmienna kultura lub dla określonej kultury, a nie dla kultury neutralnej.  
  
 Aby uzyskać więcej informacji na temat Niezmienna kultura, określone kultury i neutralne kultury, zobacz <xref:System.Globalization.CultureInfo> klasy opis.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IFormatProvider" />
      </Docs>
    </Member>
    <Member MemberName="GetMonthName">
      <MemberSignature Language="C#" Value="public string GetMonthName (int month);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetMonthName(int32 month) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.DateTimeFormatInfo.GetMonthName(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetMonthName (month As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetMonthName(int month);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="month" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="month">Liczba całkowita z zakresu od 1 do 13 reprezentujący nazwę miesiąca do pobrania.</param>
        <summary>Zwraca pełną nazwę podanego miesiąca oparte na kultury skojarzone z bieżącym specyficzne dla kultury <see cref="T:System.Globalization.DateTimeFormatInfo" /> obiektu.</summary>
        <returns>Pełna nazwa specyficzne dla kultury miesiąca reprezentowany przez <paramref name="month" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dla domyślnego niezmiennej <xref:System.Globalization.DateTimeFormatInfo> obiektu, ta metoda zwraca ciąg z <xref:System.Globalization.GregorianCalendar> obiektu.  
  
|`month`|Wartość zwracana|  
|-------------|------------------|  
|1|"Stycznia"|  
|2|"Lutego"|  
|3|"Marca"|  
|4|"Kwietnia"|  
|5|"Może"|  
|6|"Czerwiec"|  
|7|"Lipca"|  
|8|"Sierpnia"|  
|9|"Września"|  
|10|"Października"|  
|11|"Listopad"|  
|12|"Grudnia"|  
|13|""|  
  
 <xref:System.Globalization.Calendar> obiekty może obsłużyć kalendarzy z 13 miesięcy. W kalendarzach 12-miesięczny pustego ciągu zawsze jest zwracana jako nazwę 13 miesiąca.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="month" /> jest mniejsza niż 1 lub większą niż 13.</exception>
        <altmember cref="T:System.Globalization.Calendar" />
        <altmember cref="T:System.Globalization.CultureInfo" />
        <altmember cref="T:System.Globalization.GregorianCalendar" />
        <altmember cref="P:System.Globalization.DateTimeFormatInfo.MonthNames" />
      </Docs>
    </Member>
    <Member MemberName="GetShortestDayName">
      <MemberSignature Language="C#" Value="public string GetShortestDayName (DayOfWeek dayOfWeek);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetShortestDayName(valuetype System.DayOfWeek dayOfWeek) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.DateTimeFormatInfo.GetShortestDayName(System.DayOfWeek)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetShortestDayName(DayOfWeek dayOfWeek);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dayOfWeek" Type="System.DayOfWeek" />
      </Parameters>
      <Docs>
        <param name="dayOfWeek">Jeden z <see cref="T:System.DayOfWeek" /> wartości.</param>
        <summary>Uzyskuje nazwę dniu skrócie najkrótszy na określony dzień tygodnia skojarzone z bieżącym <see cref="T:System.Globalization.DateTimeFormatInfo" /> obiektu.</summary>
        <returns>Skróconą nazwę tygodnia odpowiadający <paramref name="dayOfWeek" /> parametru.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 W poniższym przykładzie pokazano kilka metod i właściwości, które określają daty i wzorce format czasu, nazwy natywnego kalendarza i pełnego i skróconej miesiąc i nazw dni.  
  
 [!code-csharp[sys.glob.DTFI1#1](~/samples/snippets/csharp/VS_Snippets_CLR/sys.glob.DTFI1/cs/dtfi1.cs#1)]
 [!code-vb[sys.glob.DTFI1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/sys.glob.DTFI1/vb/dtfi1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="dayOfWeek" /> nie jest wartością w <see cref="T:System.DayOfWeek" /> wyliczenia.</exception>
      </Docs>
    </Member>
    <Member MemberName="InvariantInfo">
      <MemberSignature Language="C#" Value="public static System.Globalization.DateTimeFormatInfo InvariantInfo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Globalization.DateTimeFormatInfo InvariantInfo" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.DateTimeFormatInfo.InvariantInfo" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property InvariantInfo As DateTimeFormatInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Globalization::DateTimeFormatInfo ^ InvariantInfo { System::Globalization::DateTimeFormatInfo ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.DateTimeFormatInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera domyślny tylko do odczytu <see cref="T:System.Globalization.DateTimeFormatInfo" /> obiekt, który jest niezależny od kultury (niezmiennej).</summary>
        <value>Obiekt tylko do odczytu, który jest niezależny od kultury (niezmiennego).</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość nie ulega zmianie, niezależnie od bieżącej kultury. W związku z tym Niezmienna kultura w <xref:System.Globalization.DateTimeFormatInfo> obiekt może służyć do dostarczyło spójne, niezależnych od kultury wyników analizy i formatowanie operacje na danych wielu kultury. Na przykład w przypadku danych daty i godziny z wielu kultur utrwalenia w postaci ciągu, jego może być sformatowany przy użyciu <xref:System.Globalization.DateTimeFormatInfo> obiektu kulturą niezmienną i zapisane. Następnie można przeanalizować za pomocą Niezmienna kultura <xref:System.Globalization.DateTimeFormatInfo> obiektu.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Globalization.CultureInfo.InvariantCulture" />
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.DateTimeFormatInfo.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsReadOnly { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość wskazującą czy <see cref="T:System.Globalization.DateTimeFormatInfo" /> obiekt jest tylko do odczytu.</summary>
        <value>
          <see langword="true" /> Jeśli <see cref="T:System.Globalization.DateTimeFormatInfo" /> obiekt jest tylko do odczytu; w przeciwnym razie <see langword="false" />.</value>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Globalization.DateTimeFormatInfo.ReadOnly(System.Globalization.DateTimeFormatInfo)" />
      </Docs>
    </Member>
    <Member MemberName="LongDatePattern">
      <MemberSignature Language="C#" Value="public string LongDatePattern { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string LongDatePattern" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.DateTimeFormatInfo.LongDatePattern" />
      <MemberSignature Language="VB.NET" Value="Public Property LongDatePattern As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ LongDatePattern { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia ciąg formatu niestandardowego dla wartości daty długiej.</summary>
        <value>Ciąg formatu niestandardowego dla wartości daty długiej.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Globalization.DateTimeFormatInfo.LongDatePattern%2A> Właściwość definiuje format specyficzne dla kultury ciągów daty, które są zwracane przez wywołania <xref:System.DateTime.ToString%2A?displayProperty=nameWithType> i <xref:System.DateTimeOffset.ToString%2A?displayProperty=nameWithType> metody i złożone formacie ciągów, które są dostarczane ciągu standardowym formacie "D". Poniższy przykład przedstawia relacje między następujące: ciąg formatu standardowych "D", niestandardowego formatu ciągu zwróconego przez <xref:System.Globalization.DateTimeFormatInfo.LongDatePattern%2A> właściwości i reprezentacja specyficzne dla kultury daty.  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.LongDatePattern#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.LongDatePattern/CS/longdatepattern1.cs#2)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.LongDatePattern#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.LongDatePattern/VB/longdatepattern1.vb#2)]  
  
 Zobacz [niestandardowe ciągi daty i godziny Format](~/docs/standard/base-types/custom-date-and-time-format-strings.md) dla poszczególnych formatu niestandardowego Specyfikatory, które można łączyć, aby utworzyć niestandardowy format ciągów, takich jak "dddd, dd MMMM yyyy".  
  
 Należy ustawić separatora daty we wzorcu Data długa, aby dokładnie taki ciąg znaków, zamiast symbolu zastępczego separatora daty. Na przykład uzyskać wzorzec MM-DD-RRRR, należy ustawić wzorzec daty długiej do "MM-DD-RRRR".  
  
 Wartość tej właściwości mogą ulec zmianie, jeśli kalendarz używany przez zmiany kultury. Na przykład w poniższym przykładzie przedstawiono sposób <xref:System.Globalization.DateTimeFormatInfo.LongDatePattern%2A> właściwość <xref:System.Globalization.CultureInfo> zmienia obiekt, który reprezentuje kultury arabski (Syria), gdy <xref:System.Globalization.Calendar> obiekt używany przez zmiany kultury.  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.LongDatePattern#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.LongDatePattern/CS/longdatepattern2.cs#3)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.LongDatePattern#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.LongDatePattern/VB/longdatepattern2.vb#3)]  
  
   
  
## Examples  
 W poniższym przykładzie przedstawiono wartości <xref:System.Globalization.DateTimeFormatInfo.LongDatePattern%2A> właściwość kilka kultur.  
  
 [!code-cpp[System.Globalization.DateTimeFormatInfo.LongDatePattern#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.LongDatePattern/CPP/dtfi_longdatepattern.cpp#1)]
 [!code-csharp[System.Globalization.DateTimeFormatInfo.LongDatePattern#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.LongDatePattern/CS/dtfi_longdatepattern.cs#1)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.LongDatePattern#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.LongDatePattern/VB/dtfi_longdatepattern.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Ustawianie właściwości <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">Ustawiono właściwość i <see cref="T:System.Globalization.DateTimeFormatInfo" /> obiekt jest tylko do odczytu.</exception>
      </Docs>
    </Member>
    <Member MemberName="LongTimePattern">
      <MemberSignature Language="C#" Value="public string LongTimePattern { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string LongTimePattern" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.DateTimeFormatInfo.LongTimePattern" />
      <MemberSignature Language="VB.NET" Value="Public Property LongTimePattern As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ LongTimePattern { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia ciąg formatu niestandardowego dla wartości dużo czasu.</summary>
        <value>Wzorzec formatu wartości dużo czasu.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Globalization.DateTimeFormatInfo.LongTimePattern%2A> Właściwość definiuje format specyficzne dla kultury ciągów daty, które są zwracane przez wywołania <xref:System.DateTime.ToString%2A?displayProperty=nameWithType> i <xref:System.DateTimeOffset.ToString%2A?displayProperty=nameWithType> metody i złożone formacie ciągów, które są dostarczane ciągu standardowym formacie "T".  
  
 Zalecane ustawienie separator godziny we wzorcu długo do dokładnie taki ciąg znaków, zamiast symbolu zastępczego separatora czasu. Na przykład uzyskać wzorzec h-mm-ss, należy ustawić wzorzec daty długiej do "h-mm-ss".  
  
   
  
## Examples  
 W poniższym przykładzie przedstawiono wartości <xref:System.Globalization.DateTimeFormatInfo.LongTimePattern%2A> dla kilku kultur.  
  
 [!code-cpp[System.Globalization.DateTimeFormatInfo.LongTimePattern#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.LongTimePattern/CPP/dtfi_longtimepattern.cpp#1)]
 [!code-csharp[System.Globalization.DateTimeFormatInfo.LongTimePattern#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.LongTimePattern/CS/dtfi_longtimepattern.cs#1)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.LongTimePattern#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.LongTimePattern/VB/dtfi_longtimepattern.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Ustawianie właściwości <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">Ustawiono właściwość i <see cref="T:System.Globalization.DateTimeFormatInfo" /> obiekt jest tylko do odczytu.</exception>
      </Docs>
    </Member>
    <Member MemberName="MonthDayPattern">
      <MemberSignature Language="C#" Value="public string MonthDayPattern { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MonthDayPattern" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.DateTimeFormatInfo.MonthDayPattern" />
      <MemberSignature Language="VB.NET" Value="Public Property MonthDayPattern As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ MonthDayPattern { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia ciąg formatu niestandardowego dla wartości miesiąca i dnia.</summary>
        <value>Ciąg formatu niestandardowego dla wartości miesiąca i dnia.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Globalization.DateTimeFormatInfo.MonthDayPattern%2A> Właściwość definiuje format specyficzne dla kultury ciągów daty, które są zwracane przez wywołania <xref:System.DateTime.ToString%2A?displayProperty=nameWithType> i <xref:System.DateTimeOffset.ToString%2A?displayProperty=nameWithType> metody i złożone formacie ciągów, które są dostarczane "m" i "M" standardowe ciągi formatujące.  
  
 Ta właściwość ma wpływ, jeśli wartość <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> zmiany właściwości.  
  
 Zalecane ustawienie separatora daty we wzorcu miesiąc i dzień, aby dokładnie taki ciąg znaków, zamiast symbolu zastępczego separatora daty. Na przykład uzyskać wzorzec MM-DD, należy ustawić wartość miesiąca i dnia wzorzec do "MM-DD".  
  
   
  
## Examples  
 W poniższym przykładzie przedstawiono wartości <xref:System.Globalization.DateTimeFormatInfo.MonthDayPattern%2A> dla kilku kultur.  
  
 [!code-cpp[System.Globalization.DateTimeFormatInfo.MonthDayPattern#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.MonthDayPattern/CPP/dtfi_monthdaypattern.cpp#1)]
 [!code-csharp[System.Globalization.DateTimeFormatInfo.MonthDayPattern#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.MonthDayPattern/CS/dtfi_monthdaypattern.cs#1)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.MonthDayPattern#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.MonthDayPattern/VB/dtfi_monthdaypattern.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Ustawianie właściwości <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">Ustawiono właściwość i <see cref="T:System.Globalization.DateTimeFormatInfo" /> obiekt jest tylko do odczytu.</exception>
      </Docs>
    </Member>
    <Member MemberName="MonthGenitiveNames">
      <MemberSignature Language="C#" Value="public string[] MonthGenitiveNames { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] MonthGenitiveNames" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.DateTimeFormatInfo.MonthGenitiveNames" />
      <MemberSignature Language="VB.NET" Value="Public Property MonthGenitiveNames As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::String ^&gt; ^ MonthGenitiveNames { cli::array &lt;System::String ^&gt; ^ get(); void set(cli::array &lt;System::String ^&gt; ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia ciąg tablicę nazw miesięcy skojarzone z bieżącym <see cref="T:System.Globalization.DateTimeFormatInfo" /> obiektu.</summary>
        <value>Tablica ciągów nazw miesięcy.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 W przypadku niektórych języków nazwy miesięcy, który jest częścią daty jest wyświetlany w przypadku genitive. Na przykład na datę w rosyjski (Rosji) lub "ru-RU" kultury składa się z numer dnia i nazwy genitive miesięcy, takich jak 1 Января.  
  
 Gdy ta właściwość jest ustawiona, tablicy musi być jednowymiarowa i musi mieć dokładnie 13 elementy. <xref:System.Globalization.Calendar> obiekty zmieścił się w kalendarzy z 13 miesięcy. Pierwszy element (element w indeksie zero) reprezentuje pierwszy miesiąc roku zdefiniowane przez <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> właściwości. Jeśli ustawisz <xref:System.Globalization.DateTimeFormatInfo.MonthGenitiveNames%2A> właściwość, należy także ustawić <xref:System.Globalization.DateTimeFormatInfo.MonthNames%2A> właściwości.  
  
   
  
## Examples  
 W poniższym przykładzie pokazano kilka metod i właściwości, które określają daty i wzorce format czasu, nazwy natywnego kalendarza i pełnego i skróconej miesiąc i nazw dni.  
  
 [!code-csharp[sys.glob.DTFI1#1](~/samples/snippets/csharp/VS_Snippets_CLR/sys.glob.DTFI1/cs/dtfi1.cs#1)]
 [!code-vb[sys.glob.DTFI1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/sys.glob.DTFI1/vb/dtfi1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">W ramach operacji set tablica jest wielowymiarowa lub o długości, która nie jest dokładnie 13.</exception>
        <exception cref="T:System.ArgumentNullException">W ramach operacji zestawu jest tablica lub jeden z jego elementów <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">W bieżącej operacji set <see cref="T:System.Globalization.DateTimeFormatInfo" /> obiekt jest tylko do odczytu.</exception>
        <altmember cref="P:System.Globalization.DateTimeFormatInfo.AbbreviatedMonthGenitiveNames" />
        <altmember cref="P:System.Globalization.DateTimeFormatInfo.MonthNames" />
        <altmember cref="P:System.Globalization.DateTimeFormatInfo.AbbreviatedMonthNames" />
      </Docs>
    </Member>
    <Member MemberName="MonthNames">
      <MemberSignature Language="C#" Value="public string[] MonthNames { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] MonthNames" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.DateTimeFormatInfo.MonthNames" />
      <MemberSignature Language="VB.NET" Value="Public Property MonthNames As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::String ^&gt; ^ MonthNames { cli::array &lt;System::String ^&gt; ^ get(); void set(cli::array &lt;System::String ^&gt; ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia tablicą jednowymiarową typu <see cref="T:System.String" /> zawierające specyficzne dla kultury pełne nazwy miesięcy.</summary>
        <value>Jednowymiarowa tablica typu <see cref="T:System.String" /> zawierające specyficzne dla kultury pełne nazwy miesięcy. W kalendarzu miesięcznym 12 13 element tablicy jest pustym ciągiem. Tablica dla <see cref="P:System.Globalization.DateTimeFormatInfo.InvariantInfo" /> zawiera "Stycznia", "Lutego", "Marca", "Kwietnia", "Może", "Czerwiec", "Lipca", "Sierpnia", "Września", "Października", "Listopad", "Grudnia" i "".</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Gdy ta właściwość jest ustawiona, tablicy musi być jednowymiarowa i musi mieć dokładnie 13 elementy. <xref:System.Globalization.Calendar> obiekty zmieścił się w kalendarzy z 13 miesięcy. Pierwszy element (element w indeksie zero) reprezentuje pierwszy miesiąc roku zdefiniowane przez <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> właściwości.  
  
 Jeśli ustawisz <xref:System.Globalization.DateTimeFormatInfo.MonthNames%2A> właściwość, należy także ustawić <xref:System.Globalization.DateTimeFormatInfo.MonthGenitiveNames%2A> właściwości.  
  
 Jeśli wzorzec formatu "MMMM" obejmuje wzorcem niestandardowym <xref:System.DateTime.ToString%2A?displayProperty=nameWithType> Wyświetla wartość <xref:System.Globalization.DateTimeFormatInfo.MonthNames%2A> zamiast "MMMM" we wzorcu formatu.  
  
 Ta właściwość ma wpływ, jeśli wartość <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> zmiany właściwości.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Ustawianie właściwości <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">Właściwość jest ustawiany tablicy jest wielowymiarowy lub mający długości, która nie jest dokładnie 13.</exception>
        <exception cref="T:System.InvalidOperationException">Ustawiono właściwość i <see cref="T:System.Globalization.DateTimeFormatInfo" /> obiekt jest tylko do odczytu.</exception>
        <altmember cref="P:System.Globalization.DateTimeFormatInfo.AbbreviatedMonthNames" />
        <altmember cref="P:System.Globalization.DateTimeFormatInfo.MonthGenitiveNames" />
        <altmember cref="M:System.Globalization.DateTimeFormatInfo.GetMonthName(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="NativeCalendarName">
      <MemberSignature Language="C#" Value="public string NativeCalendarName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string NativeCalendarName" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.DateTimeFormatInfo.NativeCalendarName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NativeCalendarName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ NativeCalendarName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera nazwę natywnego kalendarza skojarzone z bieżącym <see cref="T:System.Globalization.DateTimeFormatInfo" /> obiektu.</summary>
        <value>Natywny nazwę kalendarz kultury skojarzone z bieżącym <see cref="T:System.Globalization.DateTimeFormatInfo" /> obiektu, jeśli ta nazwa jest dostępna lub ciąg pusty ("") Jeśli nazwa kalendarza macierzysty nie jest dostępna.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 W poniższym przykładzie pokazano kilka metod i właściwości, które określają daty i wzorce format czasu, nazwy natywnego kalendarza i pełnego i skróconej miesiąc i nazw dni.  
  
 [!code-csharp[sys.glob.DTFI1#1](~/samples/snippets/csharp/VS_Snippets_CLR/sys.glob.DTFI1/cs/dtfi1.cs#1)]
 [!code-vb[sys.glob.DTFI1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/sys.glob.DTFI1/vb/dtfi1.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="usage">
          <para>Jeśli <see cref="P:System.Globalization.DateTimeFormatInfo.Calendar" /> jest <see cref="T:System.Globalization.TaiwanCalendar" /> , ale <see cref="P:System.Threading.Thread.CurrentCulture" /> nie jest "zh-TW", następnie <see cref="P:System.Globalization.DateTimeFormatInfo.NativeCalendarName" />, <see cref="M:System.Globalization.DateTimeFormatInfo.GetEraName(System.Int32)" />, i <see cref="M:System.Globalization.DateTimeFormatInfo.GetAbbreviatedEraName(System.Int32)" /> Zwróć ciąg pusty ("").</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="PMDesignator">
      <MemberSignature Language="C#" Value="public string PMDesignator { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PMDesignator" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.DateTimeFormatInfo.PMDesignator" />
      <MemberSignature Language="VB.NET" Value="Public Property PMDesignator As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ PMDesignator { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia ciąg określenia godzin, które są "post meridiem" (od południa).</summary>
        <value>Określenia ciągu godzin, które są "post meridiem" (od południa). Wartość domyślna dla <see cref="P:System.Globalization.DateTimeFormatInfo.InvariantInfo" /> jest "PM".</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Globalization.DateTimeFormatInfo.PMDesignator%2A> Właściwość jest używana dla wszystkich przypadkach z 12:00:00 (południe) do 23:59:59.999.  
  
 Jeśli wzorzec formatu "tt" obejmuje wzorcem niestandardowym, a czas jest od południa, <xref:System.DateTime.ToString%2A?displayProperty=nameWithType> Wyświetla wartość <xref:System.Globalization.DateTimeFormatInfo.PMDesignator%2A> zamiast "tt" we wzorcu formatu. Jeśli wzorcem niestandardowym zawiera wzorzec formatu "t", tylko pierwszy znak <xref:System.Globalization.DateTimeFormatInfo.PMDesignator%2A> jest wyświetlany. Aplikacja powinna używać "tt" dla języków, dla których konieczne jest utrzymanie różnicy między AM i PM. Przykładem jest język japoński, dla którego oznaczenia AM i PM różnią się w drugim znaku, a nie w pierwszym znaku.  
  
 Dla kultury, które nie korzystają z określeniem PM ta właściwość zwraca pusty ciąg.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Ustawianie właściwości <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">Ustawiono właściwość i <see cref="T:System.Globalization.DateTimeFormatInfo" /> obiekt jest tylko do odczytu.</exception>
        <altmember cref="P:System.Globalization.DateTimeFormatInfo.AMDesignator" />
      </Docs>
    </Member>
    <Member MemberName="ReadOnly">
      <MemberSignature Language="C#" Value="public static System.Globalization.DateTimeFormatInfo ReadOnly (System.Globalization.DateTimeFormatInfo dtfi);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Globalization.DateTimeFormatInfo ReadOnly(class System.Globalization.DateTimeFormatInfo dtfi) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.DateTimeFormatInfo.ReadOnly(System.Globalization.DateTimeFormatInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ReadOnly (dtfi As DateTimeFormatInfo) As DateTimeFormatInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Globalization::DateTimeFormatInfo ^ ReadOnly(System::Globalization::DateTimeFormatInfo ^ dtfi);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.DateTimeFormatInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dtfi" Type="System.Globalization.DateTimeFormatInfo" />
      </Parameters>
      <Docs>
        <param name="dtfi">
          <see cref="T:System.Globalization.DateTimeFormatInfo" /> Obiekt do zakodowania.</param>
        <summary>Zwraca tylko do odczytu <see cref="T:System.Globalization.DateTimeFormatInfo" /> otoki.</summary>
        <returns>Tylko do odczytu <see cref="T:System.Globalization.DateTimeFormatInfo" /> otoki.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Tej otoki uniemożliwia wszelkie modyfikacje `dtfi`.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="dtfi" /> jest <see langword="null" />.</exception>
        <altmember cref="M:System.Globalization.DateTimeFormatInfo.GetAllDateTimePatterns(System.Char)" />
      </Docs>
    </Member>
    <Member MemberName="RFC1123Pattern">
      <MemberSignature Language="C#" Value="public string RFC1123Pattern { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string RFC1123Pattern" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.DateTimeFormatInfo.RFC1123Pattern" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RFC1123Pattern As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ RFC1123Pattern { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera ciąg formatu niestandardowego w czasie wartość oznacza to oparte na Internet Engineering Task Force (IETF) Request for Comments (RFC) 1123 specyfikacji.</summary>
        <value>Ciąg formatu niestandardowego dla wartość czasu, który jest oparty na Specyfikacja IETF RFC 1123.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Globalization.DateTimeFormatInfo.RFC1123Pattern%2A> Właściwość definiuje format specyficzne dla kultury ciągów daty, które są zwracane przez wywołania <xref:System.DateTime.ToString%2A?displayProperty=nameWithType> i <xref:System.DateTimeOffset.ToString%2A?displayProperty=nameWithType> metody i złożone formacie ciągów, które są dostarczane "r" i "R" standardowe ciągi formatujące.  
  
 Wzorzec RFC1123 odzwierciedla zdefiniowanych standard, a właściwość jest tylko do odczytu. W związku z tym jest zawsze taki sam, niezależnie od kultury. Ciąg formatu niestandardowego to „ddd, dd MMM yyyy HH':'mm':'ss 'GMT'”.  
  
   
  
## Examples  
 W poniższym przykładzie przedstawiono wartość RFC1123Pattern kilka kultur.  
  
 [!code-cpp[System.Globalization.DateTimeFormatInfo.RFC1123Pattern#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.RFC1123Pattern/CPP/dtfi_rfc1123pattern.cpp#1)]
 [!code-csharp[System.Globalization.DateTimeFormatInfo.RFC1123Pattern#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.RFC1123Pattern/CS/dtfi_rfc1123pattern.cs#1)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.RFC1123Pattern#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.RFC1123Pattern/VB/dtfi_rfc1123pattern.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetAllDateTimePatterns">
      <MemberSignature Language="C#" Value="public void SetAllDateTimePatterns (string[] patterns, char format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetAllDateTimePatterns(string[] patterns, char format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.DateTimeFormatInfo.SetAllDateTimePatterns(System.String[],System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetAllDateTimePatterns (patterns As String(), format As Char)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetAllDateTimePatterns(cli::array &lt;System::String ^&gt; ^ patterns, char format);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="patterns" Type="System.String[]" />
        <Parameter Name="format" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="patterns">Tablica ciągów formatu niestandardowego.</param>
        <param name="format">Standardowy format ciągu skojarzonego z niestandardowych ciągów formatu określonego w <c>wzorce</c> parametru.</param>
        <summary>Ustawia niestandardowa data i czas ciągi formatów, które odpowiadają na ciąg określonego formatu standardowych.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Globalization.DateTimeFormatInfo.SetAllDateTimePatterns%2A> Metoda definiuje ciągi formatu niestandardowego, które odpowiadają do określonego standardowa Data i godzina ciąg formatu. Jeśli wywołanie datę i godzinę obejmuje metodę formatowania standardowa Data i czas ciąg formatu określona przez `format`, metoda używa pierwszego elementu w `patterns` tablicy, tak aby zdefiniować format wynikowy ciąg.  
  
> [!WARNING]
>  `Parse` i `TryParse` metod nie pełni Iterowanie wszystkich ciągów w `patterns` podczas analizowania reprezentację ciągu daty i godziny. Jeśli potrzebujesz ciąg daty i godziny w celu zapewnienia formatów określonej operacji analizy, należy przekazać tablicy prawidłowe formaty do <xref:System.DateTime.ParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=nameWithType>, <xref:System.DateTimeOffset.ParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=nameWithType>, <xref:System.DateTime.TryParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTime%40%29?displayProperty=nameWithType>, lub <xref:System.DateTimeOffset.TryParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTimeOffset%40%29?displayProperty=nameWithType> metody.  
  
 Można określić niestandardowych ciągów formatu odpowiadające "d", "D", "t", "T" i "y" lub "Y" Standardowy format daty i czasu ciągi formatów. Jeśli wartość `format` jest inny ciąg formatu standardowych, <xref:System.Globalization.DateTimeFormatInfo.SetAllDateTimePatterns%2A> metoda zgłasza <xref:System.ArgumentException>.  
  
 Jeśli Twoje niestandardowe ciągi daty i godziny format zawierać separatorów daty, należy jawnie określić separator daty, zdejmując to zadanie analizy lub formatowania metodę, która zastępuje specyfikator formatu niestandardowego "/" separator określonej daty. Na przykład aby uzyskać wzorzec MM-DD-RRRR, użyj wzorca "MM-DD-RRRR".  
  
   
  
## Examples  
 Poniższy przykład tworzy <xref:System.Globalization.CultureInfo> obiekt czy reprezentuje wartość "en US" (Polski — Polska) kultury i używa go do analizy tablica ciągów daty i godziny przy użyciu standardowego formatu ciągu "Y". Następnie używa <xref:System.Globalization.DateTimeFormatInfo.SetAllDateTimePatterns%2A> do kojarzenia nowy ciąg formatu niestandardowego z ciągu standardowym formacie "Y", a następnie próbuje przeanalizować tablicy ciągów daty i godziny. Dane wyjściowe w przykładzie pokazano, czy nowy niestandardowy ciąg formatu jest używany zarówno analizowania i operacji formatowania.  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.SetAllDateTimePatterns#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.setalldatetimepatterns/cs/setalldatetimepatterns.cs#1)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.SetAllDateTimePatterns#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.setalldatetimepatterns/vb/setalldatetimepatterns.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="patterns" /> jest <see langword="null" /> lub tablicą o zerowej długości.  
  
 —lub—  
  
 <paramref name="format" /> nie jest prawidłowym standardowe ciągiem formatu lub ciągiem formatu standardowych wzorców, którego nie można ustawić.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="patterns" /> ma elementu tablicy, którego wartość jest <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">To <see cref="T:System.Globalization.DateTimeFormatInfo" /> obiekt jest tylko do odczytu.</exception>
        <altmember cref="Overload:System.Globalization.DateTimeFormatInfo.GetAllDateTimePatterns" />
      </Docs>
    </Member>
    <Member MemberName="ShortDatePattern">
      <MemberSignature Language="C#" Value="public string ShortDatePattern { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ShortDatePattern" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.DateTimeFormatInfo.ShortDatePattern" />
      <MemberSignature Language="VB.NET" Value="Public Property ShortDatePattern As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ShortDatePattern { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia ciąg formatu niestandardowego dla wartości daty krótkiej.</summary>
        <value>Ciąg formatu niestandardowego dla wartości daty krótkiej.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Globalization.DateTimeFormatInfo.ShortDatePattern%2A> Właściwość definiuje format specyficzne dla kultury ciągów daty, które są zwracane przez wywołania <xref:System.DateTime.ToString%2A?displayProperty=nameWithType> i <xref:System.DateTimeOffset.ToString%2A?displayProperty=nameWithType> metody i złożone formacie ciągów, które są dostarczane ciągu standardowym formacie "d".  
  
 Ta właściwość ma wpływ, jeśli wartość <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> zmiany właściwości.  
  
   
  
## Examples  
 W poniższym przykładzie przedstawiono wartości <xref:System.Globalization.DateTimeFormatInfo.ShortDatePattern%2A> właściwości i wartości typu date sformatowany przy użyciu <xref:System.Globalization.DateTimeFormatInfo.ShortDatePattern%2A> właściwość kilka kultur.  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.ShortDatePattern#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.ShortDatePattern/CS/dtfi_shortdatepattern.cs#1)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.ShortDatePattern#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.ShortDatePattern/VB/dtfi_shortdatepattern.vb#1)]  
  
 Poniższy przykład modyfikuje <xref:System.Globalization.DateTimeFormatInfo.ShortDatePattern%2A> właściwość <xref:System.Globalization.DateTimeFormatInfo> obiekt, który reprezentuje Konwencji formatowania kultury angielski (Stany Zjednoczone). Wyświetla również wartość typu date dwa razy, najpierw do uwzględnienia oryginalnej <xref:System.Globalization.DateTimeFormatInfo.ShortDatePattern%2A> właściwości, a następnie w celu uwzględnienia nowej wartości właściwości.  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.ShortDatePattern#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.ShortDatePattern/CS/shortdatepattern1.cs#2)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.ShortDatePattern#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.ShortDatePattern/VB/shortdatepattern1.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Ustawianie właściwości <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">Ustawiono właściwość i <see cref="T:System.Globalization.DateTimeFormatInfo" /> obiekt jest tylko do odczytu.</exception>
      </Docs>
    </Member>
    <Member MemberName="ShortestDayNames">
      <MemberSignature Language="C#" Value="public string[] ShortestDayNames { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] ShortestDayNames" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.DateTimeFormatInfo.ShortestDayNames" />
      <MemberSignature Language="VB.NET" Value="Public Property ShortestDayNames As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::String ^&gt; ^ ShortestDayNames { cli::array &lt;System::String ^&gt; ^ get(); void set(cli::array &lt;System::String ^&gt; ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia tablicy ciągów najkrótszy nazw unikatowy dniu skrócie skojarzonych z bieżącym <see cref="T:System.Globalization.DateTimeFormatInfo" /> obiektu.</summary>
        <value>Tablica ciągów nazw dnia.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 W poniższym przykładzie pokazano kilka metod i właściwości, które określają daty i wzorce format czasu, nazwy natywnego kalendarza i pełnego i skróconej miesiąc i nazw dni.  
  
 [!code-csharp[sys.glob.DTFI1#1](~/samples/snippets/csharp/VS_Snippets_CLR/sys.glob.DTFI1/cs/dtfi1.cs#1)]
 [!code-vb[sys.glob.DTFI1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/sys.glob.DTFI1/vb/dtfi1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">W ramach operacji set tablicy nie ma dokładnie siedmiu elementów.</exception>
        <exception cref="T:System.ArgumentNullException">W ramach operacji set tablicy wartości lub jeden z elementów tablicy wartości jest <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">W bieżącej operacji set <see cref="T:System.Globalization.DateTimeFormatInfo" /> obiekt jest tylko do odczytu.</exception>
      </Docs>
    </Member>
    <Member MemberName="ShortTimePattern">
      <MemberSignature Language="C#" Value="public string ShortTimePattern { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ShortTimePattern" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.DateTimeFormatInfo.ShortTimePattern" />
      <MemberSignature Language="VB.NET" Value="Public Property ShortTimePattern As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ShortTimePattern { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia ciąg formatu niestandardowego dla wartości krótki czas.</summary>
        <value>Ciąg formatu niestandardowego dla wartości krótki czas.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Globalization.DateTimeFormatInfo.ShortTimePattern%2A> Właściwość definiuje format specyficzne dla kultury ciągów daty, które są zwracane przez wywołania <xref:System.DateTime.ToString%2A?displayProperty=nameWithType> i <xref:System.DateTimeOffset.ToString%2A?displayProperty=nameWithType> metody i złożone formacie ciągów, które są dostarczane ciągu standardowym formacie "t".  
  
 Zaleca się ustawić czas separatora we wzorcu krótki czas, aby dokładnie taki ciąg znaków, zamiast symbolu zastępczego separatora czasu. Na przykład uzyskać wzorzec h-mm-ss, należy ustawić wzorzec krótki czas do "h-mm-ss".  
  
   
  
## Examples  
 W poniższym przykładzie przedstawiono wartości <xref:System.Globalization.DateTimeFormatInfo.ShortTimePattern%2A> dla kilku kultur.  
  
 [!code-cpp[System.Globalization.DateTimeFormatInfo.ShortTimePattern#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.ShortTimePattern/CPP/dtfi_shorttimepattern.cpp#1)]
 [!code-csharp[System.Globalization.DateTimeFormatInfo.ShortTimePattern#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.ShortTimePattern/CS/dtfi_shorttimepattern.cs#1)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.ShortTimePattern#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.ShortTimePattern/VB/dtfi_shorttimepattern.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Ustawianie właściwości <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">Ustawiono właściwość i <see cref="T:System.Globalization.DateTimeFormatInfo" /> obiekt jest tylko do odczytu.</exception>
      </Docs>
    </Member>
    <Member MemberName="SortableDateTimePattern">
      <MemberSignature Language="C#" Value="public string SortableDateTimePattern { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SortableDateTimePattern" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.DateTimeFormatInfo.SortableDateTimePattern" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SortableDateTimePattern As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SortableDateTimePattern { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera ciąg formatu niestandardowego dla sortowanie wartość daty i godziny.</summary>
        <value>Ciąg formatu niestandardowego dla sortowanie wartość daty i godziny.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Globalization.DateTimeFormatInfo.SortableDateTimePattern%2A> Właściwość definiuje format specyficzne dla kultury ciągów daty, które są zwracane przez wywołania <xref:System.DateTime.ToString%2A?displayProperty=nameWithType> i <xref:System.DateTimeOffset.ToString%2A?displayProperty=nameWithType> metody i złożone formacie ciągów, które są dostarczane standardowego formatu ciągu "s".  
  
 Ciąg formatu, który został zwrócony przez <xref:System.Globalization.DateTimeFormatInfo.SortableDateTimePattern%2A> właściwość odzwierciedla zdefiniowanych standard (ISO 8601), a właściwość jest tylko do odczytu. W związku z tym jest zawsze taki sam, niezależnie od kultury. Ciąg formatu niestandardowego to „yyyy'-'MM'-'dd'T'HH':'mm':'ss”.  
  
   
  
## Examples  
 W poniższym przykładzie przedstawiono wartości <xref:System.Globalization.DateTimeFormatInfo.SortableDateTimePattern%2A> dla kilku kultur.  
  
 [!code-cpp[System.Globalization.DateTimeFormatInfo.SortableDateTimePattern#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.SortableDateTimePattern/CPP/dtfi_sortabledatetimepattern.cpp#1)]
 [!code-csharp[System.Globalization.DateTimeFormatInfo.SortableDateTimePattern#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.SortableDateTimePattern/CS/dtfi_sortabledatetimepattern.cs#1)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.SortableDateTimePattern#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.SortableDateTimePattern/VB/dtfi_sortabledatetimepattern.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Globalization.DateTimeFormatInfo.UniversalSortableDateTimePattern" />
      </Docs>
    </Member>
    <Member MemberName="TimeSeparator">
      <MemberSignature Language="C#" Value="public string TimeSeparator { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TimeSeparator" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.DateTimeFormatInfo.TimeSeparator" />
      <MemberSignature Language="VB.NET" Value="Public Property TimeSeparator As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ TimeSeparator { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia ciąg polegająca na separowaniu składników czasu, to znaczy, godzina, minuty i sekundy.</summary>
        <value>Ciąg, polegająca na separowaniu składników czasu. Wartość domyślna dla <see cref="P:System.Globalization.DateTimeFormatInfo.InvariantInfo" /> jest ":".</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli wzorzec formatu zawiera wzorcem niestandardowym ":", <xref:System.DateTime.ToString%2A?displayProperty=nameWithType> Wyświetla wartość <xref:System.Globalization.DateTimeFormatInfo.TimeSeparator%2A> zamiast ":" we wzorcu formatu.  
  
 Separator godziny jest pochodną <xref:System.Globalization.DateTimeFormatInfo.ShortTimePattern%2A> właściwości. Firma Microsoft zaleca w skrócie Ustaw separator godziny, lub długi czas wzorców, aby dokładnie taki ciąg znaków, zamiast symbolu zastępczego separatora czasu. Na przykład uzyskać wzorzec h-mm-ss, należy ustawić wzorzec do "h-mm-ss". Takie rozwiązanie umożliwia także ustawić wzorców, takich jak "h'h" mm "ss" m "(36m 12s 3-h) zawierające wiele typów separatorów. <xref:System.Globalization.DateTimeFormatInfo.TimeSeparator%2A> Właściwość definiuje ciąg, który zastępuje separator godziny (":" Niestandardowa data i godzina specyfikator formatu) w ciągu wynik operacji formatowania. Definiuje również ciąg separatora czas przetwarzania operacji.  
  
   
  
## Examples  
 Poniższy przykład tworzy <xref:System.Globalization.CultureInfo> obiektu dla kultury en US zmienia jego separator daty "." i wyświetla za pomocą "t", "T", "F", "f", "G" i "g" standardowe ciągi formatujące datę.  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.TimeSeparator#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.timeseparator/cs/timeseparatorex.cs#1)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.TimeSeparator#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.timeseparator/vb/timeseparatorex.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Ustawianie właściwości <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">Ustawiono właściwość i <see cref="T:System.Globalization.DateTimeFormatInfo" /> obiekt jest tylko do odczytu.</exception>
        <altmember cref="P:System.Globalization.DateTimeFormatInfo.DateSeparator" />
      </Docs>
    </Member>
    <Member MemberName="UniversalSortableDateTimePattern">
      <MemberSignature Language="C#" Value="public string UniversalSortableDateTimePattern { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UniversalSortableDateTimePattern" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.DateTimeFormatInfo.UniversalSortableDateTimePattern" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UniversalSortableDateTimePattern As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ UniversalSortableDateTimePattern { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera ciąg formatu niestandardowego dla daty uniwersalnego, sortowanie i ciąg godziny.</summary>
        <value>Niestandardowy ciąg formatu daty uniwersalnego, sortowanie i ciąg godziny.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Globalization.DateTimeFormatInfo.UniversalSortableDateTimePattern%2A> Właściwość definiuje format daty ciągów, które są zwracane przez wywołania <xref:System.DateTime.ToString%2A?displayProperty=nameWithType> i <xref:System.DateTimeOffset.ToString%2A?displayProperty=nameWithType> metody i złożone formacie ciągów, które są dostarczane ciągu standardowym formacie "u". Może służyć do wyświetlania daty i godziny w kolejności można sortować z określeniem uniwersalnego czasu "Z" na końcu. Format jest sortowania, ponieważ używa zer dla rok, miesiąc, dzień, godzinę, minutę i sekundę. Niestandardowy ciąg formatu ("yyyy"-"MM"-"dd gg": "mm": "ss'Z" ") jest taka sama niezależnie od dostawcy kultury lub formatu.  
  
 Ciąg formatu, który został zwrócony przez <xref:System.Globalization.DateTimeFormatInfo.UniversalSortableDateTimePattern%2A> właściwość odzwierciedla zdefiniowanych standard, a właściwość jest tylko do odczytu. W związku z tym jest zawsze taki sam, niezależnie od kultury. Ciąg formatu niestandardowego to „yyyy'-'MM'-'dd HH':'mm':'ss'Z'”.  
  
   
  
## Examples  
 W poniższym przykładzie przedstawiono wartości <xref:System.Globalization.DateTimeFormatInfo.UniversalSortableDateTimePattern%2A> dla kilku kultur.  
  
 [!code-cpp[System.Globalization.DateTimeFormatInfo.UniversalSortableDateTimePattern#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.UniversalSortableDateTimePattern/CPP/dtfi_universalsortabledatetimepattern.cpp#1)]
 [!code-csharp[System.Globalization.DateTimeFormatInfo.UniversalSortableDateTimePattern#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.UniversalSortableDateTimePattern/CS/dtfi_universalsortabledatetimepattern.cs#1)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.UniversalSortableDateTimePattern#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.UniversalSortableDateTimePattern/VB/dtfi_universalsortabledatetimepattern.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Globalization.DateTimeFormatInfo.SortableDateTimePattern" />
      </Docs>
    </Member>
    <Member MemberName="YearMonthPattern">
      <MemberSignature Language="C#" Value="public string YearMonthPattern { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string YearMonthPattern" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.DateTimeFormatInfo.YearMonthPattern" />
      <MemberSignature Language="VB.NET" Value="Public Property YearMonthPattern As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ YearMonthPattern { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia ciąg formatu niestandardowego dla wartości rok i miesiąc.</summary>
        <value>Ciąg formatu niestandardowego dla wartości rok i miesiąc.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Globalization.DateTimeFormatInfo.YearMonthPattern%2A> Właściwość definiuje format specyficzne dla kultury ciągów daty, które są zwracane przez wywołania <xref:System.DateTime.ToString%2A?displayProperty=nameWithType> i <xref:System.DateTimeOffset.ToString%2A?displayProperty=nameWithType> metody i złożone format ciągów, które są dostarczane, "y" i "Y" standardowe ciągi formatujące.  
  
 Ta właściwość ma wpływ, jeśli wartość <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> zmiany właściwości.  
  
 Zalecane ustawienie separatora daty we wzorcu miesiąc roku dokładny ciąg zamiast symbol zastępczy separatora daty. Na przykład uzyskać wzorzec MM-RRRR, należy ustawić wzorzec miesiąc roku do "MM-RRRR".  
  
   
  
## Examples  
 W poniższym przykładzie przedstawiono wartości <xref:System.Globalization.DateTimeFormatInfo.YearMonthPattern%2A> dla kilku kultur.  
  
 [!code-cpp[System.Globalization.DateTimeFormatInfo.YearMonthPattern#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.YearMonthPattern/CPP/dtfi_yearmonthpattern.cpp#1)]
 [!code-csharp[System.Globalization.DateTimeFormatInfo.YearMonthPattern#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.YearMonthPattern/CS/dtfi_yearmonthpattern.cs#1)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.YearMonthPattern#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.YearMonthPattern/VB/dtfi_yearmonthpattern.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Ustawianie właściwości <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">Ustawiono właściwość i <see cref="T:System.Globalization.DateTimeFormatInfo" /> obiekt jest tylko do odczytu.</exception>
      </Docs>
    </Member>
  </Members>
</Type>