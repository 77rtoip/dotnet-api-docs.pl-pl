<Type Name="DateTimeFormatInfo" FullName="System.Globalization.DateTimeFormatInfo">
  <Metadata><Meta Name="ms.openlocfilehash" Value="442f8f6c9c242f37f44bd8e3c9f39426c0480951" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69245992" /></Metadata><TypeSignature Language="C#" Value="public sealed class DateTimeFormatInfo : ICloneable, IFormatProvider" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit DateTimeFormatInfo extends System.Object implements class System.ICloneable, class System.IFormatProvider" />
  <TypeSignature Language="DocId" Value="T:System.Globalization.DateTimeFormatInfo" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class DateTimeFormatInfo&#xA;Implements ICloneable, IFormatProvider" />
  <TypeSignature Language="C++ CLI" Value="public ref class DateTimeFormatInfo sealed : ICloneable, IFormatProvider" />
  <TypeSignature Language="F#" Value="type DateTimeFormatInfo = class&#xA;    interface ICloneable&#xA;    interface IFormatProvider" />
  <AssemblyInfo>
    <AssemblyName>System.Globalization</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IFormatProvider</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Zawiera informacje specyficzne dla kultury dotyczące formatu wartości daty i godziny.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Właściwości <xref:System.Globalization.DateTimeFormatInfo> klasy zawierają informacje specyficzne dla kultury do formatowania lub analizowania wartości daty i godziny, takich jak następujące:  
  
-   Wzorce używane do formatowania wartości dat.  
  
-   Wzorce używane do formatowania wartości czasu.  
  
-   Nazwy dni tygodnia.  
  
-   Nazwy miesięcy roku.  
  
-   Rano and P.M. określenia używane w wartościach czasu.  
  
-   Kalendarz, w którym są wyrażane daty.  
  
 W tej sekcji:  
  
-   [Tworzenie wystąpienia obiektu DateTimeFormatInfo](#instantiating)  
  
    -   [Dla niezmiennej kultury](#instantiating_Invariant)  
  
    -   [Dla określonej kultury](#instantiating_Specific)  
  
    -   [Dla kultury neutralnej](#instantiating_neutral)  
  
    -   [Dla bieżącej kultury](#instantiating_Current)  
  
-   [DateTimeFormatInfo i dane dynamiczne](#dynamic)  
  
-   [Formatowanie dat i godzin](#Formatting_dates_times)  
  
-   [Ciągi formatowania i właściwości DateTimeFormatInfo](#format-strings-and-datetimeformatinfo-properties)  
  
-   [Modyfikowanie właściwości DateTimeFormatInfo](#Modifying)  
  
<a name="instantiating"></a>   
## <a name="instantiating-a-datetimeformatinfo-object"></a>Utworzenie wystąpienia obiektu DateTimeFormatInfo  
 <xref:System.Globalization.DateTimeFormatInfo> Obiekt może reprezentować konwencje formatowania kultury niezmiennej, określoną kulturę, kulturę neutralną lub bieżącą kulturę. W tej sekcji omówiono sposób tworzenia wystąpienia poszczególnych typów <xref:System.Globalization.DateTimeFormatInfo> obiektów.  
  
<a name="instantiating_Invariant"></a>   
### <a name="instantiating-a-datetimeformatinfo-object-for-the-invariant-culture"></a>Utworzenie wystąpienia obiektu DateTimeFormatInfo dla kultury niezmiennej  
 Niezmienna kultura reprezentuje kulturę, w której nie uwzględnia się ustawień kulturowych. Jest on oparty na języku angielskim, ale nie w żadnym konkretnym kraju/regionie mówiącym w języku angielskim. Chociaż dane określonych kultur mogą być dynamiczne i mogą ulec zmianie, aby odzwierciedlały nowe konwencje kulturalne lub Preferencje użytkownika, dane niezmiennej kultury nie zmieniają się. Można utworzyć wystąpienie <xref:System.Globalization.DateTimeFormatInfo> obiektu, który reprezentuje konwencje formatowania niezmiennej kultury w następujący sposób:  
  
-   Pobierając wartość <xref:System.Globalization.DateTimeFormatInfo.InvariantInfo%2A> właściwości. Zwrócony <xref:System.Globalization.DateTimeFormatInfo> obiekt jest tylko do odczytu.  
  
-   Wywołując <xref:System.Globalization.DateTimeFormatInfo.%23ctor%2A> Konstruktor bez parametrów. Zwrócony <xref:System.Globalization.DateTimeFormatInfo> obiekt jest do odczytu/zapisu.  
  
-   Pobierając wartość <xref:System.Globalization.CultureInfo.DateTimeFormat%2A> właściwości <xref:System.Globalization.CultureInfo> z obiektu <xref:System.Globalization.CultureInfo.InvariantCulture%2A?displayProperty=nameWithType> , który jest zwracany przez właściwość. Zwrócony <xref:System.Globalization.DateTimeFormatInfo> obiekt jest tylko do odczytu.  
  
 Poniższy przykład używa każdej z tych metod, aby utworzyć wystąpienie <xref:System.Globalization.DateTimeFormatInfo> obiektu, który reprezentuje niezmienną kulturę. Następnie wskazuje, czy obiekt jest tylko do odczytu.  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/cs/create1.cs#1)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/vb/create1.vb#1)]  
  
<a name="instantiating_Specific"></a>   
### <a name="instantiating-a-datetimeformatinfo-object-for-a-specific-culture"></a>Utworzenie wystąpienia obiektu DateTimeFormatInfo dla określonej kultury  
 Określona kultura reprezentuje język, który jest mówiony w określonym kraju/regionie. Na przykład, en-US to określona kultura, która reprezentuje język angielski, który jest mówiony w Stany Zjednoczone, a en-CA to określona kultura, która reprezentuje język angielski w Kanadzie. Można utworzyć wystąpienie <xref:System.Globalization.DateTimeFormatInfo> obiektu, który reprezentuje konwencje formatowania określonej kultury w następujący sposób:  
  
-   Wywołując <xref:System.Globalization.CultureInfo.GetCultureInfo%28System.String%29?displayProperty=nameWithType> metodę i pobierając wartość <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType> właściwości zwracanego <xref:System.Globalization.CultureInfo> obiektu. Zwrócony <xref:System.Globalization.DateTimeFormatInfo> obiekt jest tylko do odczytu.  
  
-   Przekazując <xref:System.Globalization.DateTimeFormatInfo.GetInstance%2A> <xref:System.Globalization.DateTimeFormatInfo> metodę statyczną obiekt, który reprezentuje kulturę, której obiekt ma zostać pobrany. <xref:System.Globalization.CultureInfo> Zwrócony <xref:System.Globalization.DateTimeFormatInfo> obiekt jest do odczytu/zapisu.  
  
-   Wywołując metodę statyczną <xref:System.Globalization.CultureInfo.CreateSpecificCulture%2A?displayProperty=nameWithType> i pobierając wartość <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType> właściwości zwracanego <xref:System.Globalization.CultureInfo> obiektu. Zwrócony <xref:System.Globalization.DateTimeFormatInfo> obiekt jest do odczytu/zapisu.  
  
-   Wywołując <xref:System.Globalization.CultureInfo.%23ctor%2A?displayProperty=nameWithType> Konstruktor klasy i pobierając wartość <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType> właściwości zwracanego <xref:System.Globalization.CultureInfo> obiektu. Zwrócony <xref:System.Globalization.DateTimeFormatInfo> obiekt jest do odczytu/zapisu.  
  
 Poniższy przykład ilustruje każdy z tych metod, aby utworzyć wystąpienie <xref:System.Globalization.DateTimeFormatInfo> obiektu i wskazuje, czy otrzymany obiekt jest tylko do odczytu.  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.Class#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/cs/create1.cs#3)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.Class#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/vb/create1.vb#3)]  
  
<a name="instantiating_neutral"></a>   
### <a name="instantiating-a-datetimeformatinfo-object-for-a-neutral-culture"></a>Utworzenie wystąpienia obiektu DateTimeFormatInfo dla kultury neutralnej  
 Neutralna kultura reprezentuje kulturę lub język, który jest niezależny od kraju/regionu; zwykle jest elementem nadrzędnym jednej lub kilku określonych kultur. Na przykład fr jest neutralną kulturą dla języka francuskiego i elementem nadrzędnym kultury fr-FR. Można utworzyć wystąpienie <xref:System.Globalization.DateTimeFormatInfo> obiektu, który reprezentuje konwencje formatowania kultury neutralnej w taki sam sposób, jak w przypadku <xref:System.Globalization.DateTimeFormatInfo> tworzenia obiektu, który reprezentuje konwencje formatowania określonej kultury. Ponadto można pobrać <xref:System.Globalization.DateTimeFormatInfo> obiekt neutralnej kultury, pobierając neutralną kulturę z <xref:System.Globalization.CultureInfo.Parent%2A?displayProperty=nameWithType> właściwości określonej kultury i pobierając <xref:System.Globalization.DateTimeFormatInfo> obiekt zwrócony przez jego <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType> właściwość. Chyba że kultura nadrzędna reprezentuje niezmienną kulturę, zwracany <xref:System.Globalization.DateTimeFormatInfo> obiekt jest odczyt/zapis. Poniższy przykład ilustruje te metody tworzenia wystąpienia <xref:System.Globalization.DateTimeFormatInfo> obiektu, który reprezentuje kulturę neutralną.  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.Class#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/cs/create1.cs#2)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.Class#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/vb/create1.vb#2)]  
  
> [!NOTE]
>  W .NET Framework wersji 1,0 przez [!INCLUDE[net_v35_short](~/includes/net-v35-short-md.md)], próba <xref:System.Globalization.DateTimeFormatInfo> pobrania obiektu, który odzwierciedla konwencje formatowania kultury neutralnej zgłasza <xref:System.NotSupportedException> wyjątek.  
  
 Niemniej jednak niezależna kultura nie ma informacji o formatowaniu specyficznych dla kultury, ponieważ jest ona niezależnie od określonego kraju/regionu. Zamiast wypełniania <xref:System.Globalization.DateTimeFormatInfo> obiektu za pomocą wartości ogólnych, .NET Framework <xref:System.Globalization.DateTimeFormatInfo> zwraca obiekt, który odzwierciedla konwencje formatowania określonej kultury, która jest elementem podrzędnym kultury neutralnej. Na przykład <xref:System.Globalization.DateTimeFormatInfo> obiekt neutralnej kultury jest odzwierciedla konwencje formatowania kultury en-us, <xref:System.Globalization.DateTimeFormatInfo> a obiekt kultury fr odzwierciedla konwencje formatowania kultury fr-fr.  
  
 Można użyć kodu, takiego jak następujące, aby określić, które konwencje formatowania określonej kultury reprezentują neutralną kulturę. W przykładzie przedstawiono użycie odbicia w <xref:System.Globalization.DateTimeFormatInfo> celu porównania właściwości kultury neutralnej z właściwościami określonej kultury podrzędnej. Traktuje dwa kalendarze jako równoważne, jeśli są one tego samego typu Kalendarz i dla kalendarzy gregoriańskich, <xref:System.Globalization.GregorianCalendar.CalendarType%2A?displayProperty=nameWithType> jeśli ich właściwości mają identyczne wartości.  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.Class#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/cs/instantiate6c.cs#6)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.Class#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/vb/instantiate6c.vb#6)]  
  
<a name="instantiating_Current"></a>   
### <a name="instantiating-a-datetimeformatinfo-object-for-the-current-culture"></a>Utworzenie wystąpienia obiektu DateTimeFormatInfo dla bieżącej kultury  
 Można utworzyć wystąpienie <xref:System.Globalization.DateTimeFormatInfo> obiektu, który reprezentuje konwencje formatowania bieżącej kultury w następujący sposób:  
  
-   Pobierając wartość <xref:System.Globalization.DateTimeFormatInfo.CurrentInfo%2A> właściwości. Zwrócony <xref:System.Globalization.DateTimeFormatInfo> obiekt jest tylko do odczytu.  
  
-   Pobierając wartość <xref:System.Globalization.CultureInfo.DateTimeFormat%2A> właściwości <xref:System.Globalization.CultureInfo> z obiektu <xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=nameWithType> , który jest zwracany przez właściwość. Zwrócony <xref:System.Globalization.DateTimeFormatInfo> obiekt jest tylko do odczytu.  
  
-   Przez wywołanie <xref:System.Globalization.NumberFormatInfo.GetInstance%2A> metody <xref:System.Globalization.CultureInfo> z obiektem, który reprezentuje bieżącą kulturę. Zwrócony <xref:System.Globalization.DateTimeFormatInfo> obiekt jest tylko do odczytu.  
  
 Poniższy przykład używa każdej z tych metod, aby utworzyć wystąpienie <xref:System.Globalization.DateTimeFormatInfo> obiektu, który reprezentuje konwencje formatowania bieżącej kultury. Następnie wskazuje, czy obiekt jest tylko do odczytu.  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.Class#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/cs/create2.cs#4)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.Class#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/vb/create2.vb#4)]  
  
 Można utworzyć zapisywalny <xref:System.Globalization.DateTimeFormatInfo> obiekt, który reprezentuje konwencje bieżącej kultury wątku w jeden z następujących sposobów:  
  
-   Pobierając <xref:System.Globalization.DateTimeFormatInfo> obiekt z trzech poprzednich sposobów i <xref:System.Globalization.DateTimeFormatInfo.Clone%2A> wywołując metodę na zwracanym <xref:System.Globalization.DateTimeFormatInfo> obiekcie. Spowoduje to utworzenie kopii oryginalnego <xref:System.Globalization.DateTimeFormatInfo> obiektu, z tą różnicą, że jej `false` <xref:System.Globalization.DateTimeFormatInfo.IsReadOnly%2A> właściwość jest.  
  
-   Wywołując <xref:System.Globalization.CultureInfo.CreateSpecificCulture%2A?displayProperty=nameWithType> metodę, aby <xref:System.Globalization.CultureInfo> utworzyć obiekt, który reprezentuje bieżącą kulturę, a następnie użyć <xref:System.Globalization.DateTimeFormatInfo> jej <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType> właściwości do pobrania obiektu.  
  
 Poniższy przykład ilustruje każdy sposób tworzenia wystąpienia obiektu do odczytu/zapisu <xref:System.Globalization.DateTimeFormatInfo> i wyświetla wartość jego <xref:System.Globalization.DateTimeFormatInfo.IsReadOnly%2A> właściwości.  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.Class#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/cs/instantiate2.cs#7)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.Class#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/vb/instantiate2.vb#7)]  
  
 W systemie Windows użytkownik może przesłonić niektóre <xref:System.Globalization.DateTimeFormatInfo> wartości właściwości używane podczas formatowania i analizowania operacji za pomocą **regionu i aplikacji językowych** w panelu sterowania. Na przykład użytkownik, którego kultura jest w języku angielskim (Stany Zjednoczone), może zdecydować się na wyświetlanie wartości czasu długiego przy użyciu 24-godzinnego zegara (w formacie gg: mm: SS) zamiast domyślnego zegara 12-godzinnego (w formacie h:mm: SS TT). <xref:System.Globalization.DateTimeFormatInfo> Obiekty pobrane w opisanych wcześniej metodach odzwierciedlają te zastąpienia użytkownika. Jeśli jest to niepożądane <xref:System.Globalization.NumberFormatInfo> , można utworzyć obiekt, który nie odzwierciedla zastąpień użytkownika (i jest również odczyt/zapis zamiast tylko do odczytu) przez <xref:System.Globalization.CultureInfo.%23ctor%28System.String%2CSystem.Boolean%29?displayProperty=nameWithType> wywołanie konstruktora i `false` dostarczenie wartości dla `useUserOverride` argumentu. Poniższy przykład ilustruje ten system dla systemu, którego bieżąca kultura jest w języku angielskim (Stany Zjednoczone) i którego wzorzec czasu długiego został zmieniony z domyślnej wartości h:mm: SS TT na HH: mm: SS.  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.Class#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/cs/instantiate3.cs#8)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.Class#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/vb/instantiate3.vb#8)]  
  
<a name="dynamic"></a>   
## <a name="datetimeformatinfo-and-dynamic-data"></a>DateTimeFormatInfo i dane dynamiczne  
 Dane specyficzne dla kultury służące do formatowania wartości daty i godziny dostarczonej <xref:System.Globalization.DateTimeFormatInfo> przez klasę są dynamiczne, podobnie jak dane kulturowe udostępniane <xref:System.Globalization.CultureInfo> przez klasę. Nie należy wprowadzać żadnych założeń dotyczących trwałości wartości dla <xref:System.Globalization.DateTimeFormatInfo> obiektów, które są skojarzone z konkretnymi <xref:System.Globalization.CultureInfo> obiektami. Tylko dane dostarczone przez niezmienną kulturę i jej skojarzony <xref:System.Globalization.DateTimeFormatInfo> obiekt są stabilne. Inne dane mogą ulec zmianie między sesjami aplikacji lub nawet wtedy, gdy aplikacja jest uruchomiona. Istnieją cztery główne źródła zmian:  
  
-   Aktualizacje systemu. Preferencje kulturowe, takie jak preferowany Kalendarz lub niestandardowe formaty daty i godziny, zmieniają się w miarę upływu czasu. W takim przypadku Windows Update obejmuje zmiany <xref:System.Globalization.DateTimeFormatInfo> wartości właściwości dla określonej kultury.  
  
-   Kultury zamienne. <xref:System.Globalization.CultureAndRegionInfoBuilder> Klasa może służyć do zastępowania danych istniejącej kultury.  
  
-   Kaskadowe zmiany wartości właściwości. Wiele właściwości związanych z kulturą może ulec zmianie w czasie wykonywania, co z kolei powoduje <xref:System.Globalization.DateTimeFormatInfo> zmianę danych. Na przykład bieżącą kulturę można zmienić programowo lub za pomocą akcji użytkownika. W takim <xref:System.Globalization.DateTimeFormatInfo> przypadku obiekt zwrócony <xref:System.Globalization.DateTimeFormatInfo.CurrentInfo%2A> przez właściwość zmieni się na obiekt skojarzony z bieżącą kulturą. Podobnie kalendarz kultury może ulec zmianie, co może spowodować zmiany w wielu <xref:System.Globalization.DateTimeFormatInfo> wartościach właściwości.  
  
-   Preferencje użytkownika. Użytkownicy aplikacji mogą zdecydować się na zastąpienie niektórych wartości skojarzonych z bieżącą kulturą systemu za pomocą opcji regionalnych i językowych w panelu sterowania. Na przykład użytkownicy mogą zdecydować się na wyświetlanie daty w innym formacie. Jeśli właściwość jest ustawiona na `true` <xref:System.Globalization.DateTimeFormatInfo> , właściwości obiektu są również pobierane z ustawień użytkownika. <xref:System.Globalization.CultureInfo.UseUserOverride%2A?displayProperty=nameWithType> Jeśli ustawienia użytkownika są niezgodne z kulturą skojarzoną z <xref:System.Globalization.CultureInfo> obiektem (na przykład jeśli wybrany kalendarz nie jest jednym z kalendarzy wskazywanym <xref:System.Globalization.CultureInfo.OptionalCalendars%2A> przez właściwość), wyniki metod i wartości właściwości nie są zdefiniowane.  
  
 Aby zminimalizować prawdopodobieństwo wystąpienia niespójnych danych, wszystkie właściwości, które <xref:System.Globalization.DateTimeFormatInfo> można wypróbować obiektu są inicjowane podczas tworzenia obiektu. Nadal istnieje możliwość niespójności, ponieważ nie można utworzyć obiektu ani proces przesłonięcia użytkownika jest niepodzielny i odpowiednie wartości mogą ulec zmianie podczas tworzenia obiektu. Ta sytuacja powinna jednak być wyjątkowo rzadki.  
  
 Można kontrolować, czy zastąpienia użytkowników są odzwierciedlone <xref:System.Globalization.DateTimeFormatInfo> w obiektach, które reprezentują tę samą kulturę co kultura systemu. Poniższa tabela zawiera listę sposobów, w których <xref:System.Globalization.DateTimeFormatInfo> można pobrać obiekt i wskazuje, czy obiekt wyniku odzwierciedla zastąpień użytkownika.  
  
|Źródło obiektu CultureInfo i DateTimeFormatInfo|Odzwierciedla zastąpienia użytkownika|  
|---------------------------------------------------------|-----------------------------|  
|`CultureInfo.CurrentCulture.DateTimeFormat`wartość|Tak|  
|<xref:System.Globalization.DateTimeFormatInfo.CurrentInfo%2A?displayProperty=nameWithType>wartość|Tak|  
|<xref:System.Globalization.CultureInfo.CreateSpecificCulture%2A?displayProperty=nameWithType>Method|Tak|  
|<xref:System.Globalization.CultureInfo.GetCultureInfo%2A?displayProperty=nameWithType>Method|Nie|  
|<xref:System.Globalization.CultureInfo.%23ctor%28System.String%29?displayProperty=nameWithType>konstruktora|Tak|  
|<xref:System.Globalization.CultureInfo.%23ctor%28System.String%2CSystem.Boolean%29?displayProperty=nameWithType>konstruktora|Zależy od wartości `useUserOverride` parametru|  
  
 O ile nie istnieje istotny powód, aby to zrobić, należy przestrzegać zastąpień użytkownika podczas używania <xref:System.Globalization.DateTimeFormatInfo> obiektu w aplikacjach klienckich do formatowania i analizowania danych wprowadzonych przez użytkownika lub do wyświetlania. W przypadku aplikacji serwerowych lub aplikacji nienadzorowanych nie należy. Jeśli jednak używasz <xref:System.Globalization.DateTimeFormatInfo> obiektu jawnie lub niejawnie do utrwalania danych daty i godziny w postaci ciągu, należy <xref:System.Globalization.DateTimeFormatInfo> użyć obiektu, który odzwierciedla konwencje formatowania kultury niezmiennej, lub należy określić niestandardowy ciąg formatu daty i godziny, który jest używany bez względu na kulturę.  
  
<a name="Formatting_dates_times"></a>   
## <a name="formatting-dates-and-times"></a>Formatowanie daty i godziny  
 <xref:System.Globalization.DateTimeFormatInfo> Obiekt jest używany niejawnie lub jawnie we wszystkich operacjach formatowania daty i godziny. Obejmują one wywołania następujących metod:  
  
-   Wszystkie metody formatowania daty i godziny, takie jak <xref:System.DateTime.ToString?displayProperty=nameWithType> i <xref:System.DateTimeOffset.ToString%28System.String%29?displayProperty=nameWithType>.  
  
-   Główna Metoda formatowania złożonego, która jest <xref:System.String.Format%2A?displayProperty=nameWithType>.  
  
-   Inne metody formatowania złożonego, takie <xref:System.Console.WriteLine%28System.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType> jak <xref:System.Text.StringBuilder.AppendFormat%28System.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType>i.  
  
 Wszystkie operacje formatowania daty i godziny wykorzystują <xref:System.IFormatProvider> implementację. Interfejs zawiera jedną metodę, <xref:System.IFormatProvider.GetFormat%28System.Type%29?displayProperty=nameWithType>. <xref:System.IFormatProvider> Ta metoda wywołania zwrotnego została <xref:System.Type> przeniesiona do obiektu, który reprezentuje typ wymagany do zapewnienia informacji o formatowaniu. Metoda zwraca wystąpienie tego typu lub `null` , jeśli nie może dostarczyć wystąpienia typu. .NET Framework obejmuje dwie <xref:System.IFormatProvider> implementacje formatowania dat i godzin:  
  
-   <xref:System.Globalization.CultureInfo> Klasa, która reprezentuje określoną kulturę (lub konkretny język w określonym kraju/regionie). W operacji <xref:System.Globalization.CultureInfo.GetFormat%2A?displayProperty=nameWithType> formatowania daty i godziny Metoda <xref:System.Globalization.DateTimeFormatInfo> zwraca obiekt skojarzony z jego <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType> właściwością.  
  
-   <xref:System.Globalization.DateTimeFormatInfo> Klasa, która zawiera informacje na temat Konwencji formatowania powiązanej kultury. <xref:System.Globalization.DateTimeFormatInfo.GetFormat%2A?displayProperty=nameWithType> Metoda zwraca wystąpienie samego siebie.  
  
 Jeśli implementacja nie zostanie przekazana do metody formatowania jawnie <xref:System.Globalization.CultureInfo> , używany jest obiekt zwrócony przez <xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=nameWithType> właściwość, która reprezentuje bieżącą kulturę wątku. <xref:System.IFormatProvider>  
  
 Poniższy przykład ilustruje relacje między <xref:System.IFormatProvider> interfejsem <xref:System.Globalization.DateTimeFormatInfo> i klasą w operacjach formatowania. Definiuje implementację <xref:System.IFormatProvider> niestandardową <xref:System.IFormatProvider.GetFormat%2A> , której Metoda Wyświetla typ obiektu żądanego przez operację formatowania. Jeśli żąda <xref:System.Globalization.DateTimeFormatInfo> obiektu, Metoda <xref:System.Globalization.DateTimeFormatInfo> zapewnia obiekt dla bieżącej kultury wątku. <xref:System.Decimal.ToString%28System.IFormatProvider%29?displayProperty=nameWithType> Jak wynika z przykładu, Metoda <xref:System.Globalization.DateTimeFormatInfo> żąda obiektu, aby dostarczyć informacji o <xref:System.String.Format%28System.IFormatProvider%2CSystem.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType> formatowaniu, podczas gdy <xref:System.ICustomFormatter> Metoda żąda <xref:System.Globalization.NumberFormatInfo> i obiektów <xref:System.Globalization.DateTimeFormatInfo> , a także realizacji.  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.Class#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/cs/formatprovider1.cs#9)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.Class#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/vb/formatprovider1.vb#9)]  
  
## <a name="format-strings-and-datetimeformatinfo-properties"></a>Ciągi formatów i właściwości DateTimeFormatInfo  
 <xref:System.Globalization.DateTimeFormatInfo> Obiekt zawiera trzy rodzaje właściwości, które są używane w operacjach formatowania z wartościami daty i godziny:  
  
-   Właściwości związane z kalendarzem. Właściwości <xref:System.Globalization.DateTimeFormatInfo.AbbreviatedDayNames%2A> <xref:System.Globalization.DateTimeFormatInfo.AbbreviatedMonthNames%2A> <xref:System.Globalization.DateTimeFormatInfo.MonthNames%2A>, takie jak, <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> , i, są skojarzone z kalendarzem używanym przez kulturę, która jest definiowana przez właściwość. <xref:System.Globalization.DateTimeFormatInfo.DayNames%2A> Te właściwości są używane dla długich formatów daty i godziny.  
  
-   Właściwości, które tworzą zdefiniowany przez standardy ciąg wynikowy. Właściwości <xref:System.Globalization.DateTimeFormatInfo.RFC1123Pattern%2A>, <xref:System.Globalization.DateTimeFormatInfo.SortableDateTimePattern%2A> i<xref:System.Globalization.DateTimeFormatInfo.UniversalSortableDateTimePattern%2A> zawierają niestandardowe ciągi formatujące, które generują ciągi wynikowe zdefiniowane przez standardy międzynarodowe. Te właściwości są tylko do odczytu i nie można ich modyfikować.  
  
-   Właściwości, które definiują specyficzne dla kultury ciągi wynikowe. Niektóre właściwości, takie jak <xref:System.Globalization.DateTimeFormatInfo.FullDateTimePattern%2A> i <xref:System.Globalization.DateTimeFormatInfo.ShortDatePattern%2A>, zawierają [ciągi formatu niestandardowego](~/docs/standard/base-types/custom-date-and-time-format-strings.md) , które określają format ciągu wynikowego. Inne, takie jak <xref:System.Globalization.DateTimeFormatInfo.AMDesignator%2A> <xref:System.Globalization.DateTimeFormatInfo.DateSeparator%2A> <xref:System.Globalization.DateTimeFormatInfo.PMDesignator%2A>,, i <xref:System.Globalization.DateTimeFormatInfo.TimeSeparator%2A>definiują specjalne symbole lub podciągi, które mogą być uwzględnione w ciągu wynikowym.  
  
 [Standardowe ciągi formatujące datę i godzinę](~/docs/standard/base-types/standard-date-and-time-format-strings.md), takie jak "d", "d", "f" i "f", są aliasami odpowiadającymi określonym <xref:System.Globalization.DateTimeFormatInfo> właściwościom wzorca formatu. Większość [niestandardowych ciągów formatu daty i godziny](~/docs/standard/base-types/custom-date-and-time-format-strings.md) dotyczy ciągów lub podciągów, które operacja formatowania wstawia do strumienia wynikowego. W poniższej tabeli wymieniono specyfikatory standardowego i niestandardowego formatu daty i godziny oraz skojarzone <xref:System.Globalization.DateTimeFormatInfo> z nimi właściwości. Aby uzyskać szczegółowe informacje na temat używania tych specyfikatorów formatu, zobacz [ciągi standardowego formatu daty i godziny](~/docs/standard/base-types/standard-date-and-time-format-strings.md) oraz [Niestandardowe ciągi formatujące datę i godzinę](~/docs/standard/base-types/custom-date-and-time-format-strings.md). Należy zauważyć, że każdy ciąg formatu standardowego odpowiada <xref:System.Globalization.DateTimeFormatInfo> właściwości, której wartość jest niestandardowym ciągiem formatu daty i godziny. Poszczególne Specyfikatory w tym niestandardowym ciągu formatu są zgodne z innymi <xref:System.Globalization.DateTimeFormatInfo> właściwościami. W tabeli wymieniono tylko <xref:System.Globalization.DateTimeFormatInfo> właściwości, dla których ciągi formatu standardowego są aliasami i nie są wyświetlane właściwości, do których można uzyskać dostęp za pomocą ciągów formatu niestandardowego przypisanych do tych właściwości. Ponadto tabela zawiera tylko specyfikatory formatu niestandardowego, które odpowiadają <xref:System.Globalization.DateTimeFormatInfo> właściwościom.  
  
|Specyfikator formatu|Skojarzone właściwości|  
|----------------------|---------------------------|  
|"d" (Data krótka; ciąg formatu standardowego)|<xref:System.Globalization.DateTimeFormatInfo.ShortDatePattern%2A>, aby zdefiniować ogólny format ciągu wynikowego.|  
|"D" (Data długa; ciąg formatu standardowego)|<xref:System.Globalization.DateTimeFormatInfo.LongDatePattern%2A>, aby zdefiniować ogólny format ciągu wynikowego.|  
|"f" (pełna Data/godzina krótka; ciąg formatu standardowego)|<xref:System.Globalization.DateTimeFormatInfo.LongDatePattern%2A>, aby zdefiniować format składnika daty w ciągu wynikowym.<br /><br /> <xref:System.Globalization.DateTimeFormatInfo.ShortTimePattern%2A>, aby zdefiniować format składnika czasu ciągu wynikowego.|  
|"F" (pełna Data/godzina długa; ciąg formatu standardowego)|<xref:System.Globalization.DateTimeFormatInfo.LongDatePattern%2A>, aby zdefiniować format składnika daty w ciągu wynikowym.<br /><br /> <xref:System.Globalization.DateTimeFormatInfo.LongTimePattern%2A>, aby zdefiniować format składnika czasu ciągu wynikowego.|  
|"g" (Data ogólna/godzina krótka; ciąg formatu standardowego)|<xref:System.Globalization.DateTimeFormatInfo.ShortDatePattern%2A>, aby zdefiniować format składnika daty w ciągu wynikowym.<br /><br /> <xref:System.Globalization.DateTimeFormatInfo.ShortTimePattern%2A>, aby zdefiniować format składnika czasu ciągu wynikowego.|  
|"G" (ogólna Data/godzina długa; ciąg formatu standardowego)|<xref:System.Globalization.DateTimeFormatInfo.ShortDatePattern%2A>, aby zdefiniować format składnika daty w ciągu wynikowym.<br /><br /> <xref:System.Globalization.DateTimeFormatInfo.LongTimePattern%2A>, aby zdefiniować format składnika czasu ciągu wynikowego.|  
|"M", "m" (miesiąc/dzień; ciąg formatu standardowego)|<xref:System.Globalization.DateTimeFormatInfo.MonthDayPattern%2A>, aby zdefiniować ogólny format ciągu wynikowego.|  
|"O", "o" (Data/godzina rundy; ciąg formatu standardowego)|Brak.|  
|"R", "r" (RFC1123; ciąg formatu standardowego)|<xref:System.Globalization.DateTimeFormatInfo.RFC1123Pattern%2A>, aby zdefiniować ciąg wynikowy, który jest zgodny ze standardem RFC 1123. Właściwość jest tylko do odczytu.|  
|"s" (sortowanie daty/godziny; ciąg formatu standardowego)|<xref:System.Globalization.DateTimeFormatInfo.SortableDateTimePattern%2A>, aby zdefiniować ciąg wynikowy, który jest zgodny ze standardem ISO 8601. Właściwość jest tylko do odczytu.|  
|"t" (godzina krótka; ciąg formatu standardowego)|<xref:System.Globalization.DateTimeFormatInfo.ShortTimePattern%2A>, aby zdefiniować ogólny format ciągu wynikowego.|  
|"T" (godzina długa; ciąg formatu standardowego)|<xref:System.Globalization.DateTimeFormatInfo.LongTimePattern%2A>, aby zdefiniować ogólny format ciągu wynikowego.|  
|"u" (uniwersalna Data/godzina, ciąg formatu standardowego)|<xref:System.Globalization.DateTimeFormatInfo.UniversalSortableDateTimePattern%2A>, aby zdefiniować ciąg wynikowy, który jest zgodny ze standardem ISO 8601 dla uniwersalnego czasu koordynowanego. Właściwość jest tylko do odczytu.|  
|"U" (uniwersalna pełna Data/godzina; ciąg formatu standardowego)|<xref:System.Globalization.DateTimeFormatInfo.FullDateTimePattern%2A>, aby zdefiniować ogólny format ciągu wynikowego.|  
|"Y", "y" (miesiąc rok; ciąg formatu standardowego)|<xref:System.Globalization.DateTimeFormatInfo.YearMonthPattern%2A>, aby zdefiniować ogólny format ciągu wynikowego.|  
|"ddd" (specyfikator formatu niestandardowego)|<xref:System.Globalization.DateTimeFormatInfo.AbbreviatedDayNames%2A>, aby dołączyć skróconą nazwę dnia tygodnia w ciągu wynikowym.|  
|"g", "gg" (specyfikator formatu niestandardowego)|<xref:System.Globalization.DateTimeFormatInfo.GetEraName%2A> Wywołuje metodę, aby wstawić nazwę ERA w ciągu wynikowym.|  
|"MMM" (specyfikator formatu niestandardowego)|<xref:System.Globalization.DateTimeFormatInfo.AbbreviatedMonthNames%2A>, aby uwzględnić skróconą nazwę miesiąca w ciągu wynikowym.|  
|"MMMM" (specyfikator formatu niestandardowego)|<xref:System.Globalization.DateTimeFormatInfo.MonthNames%2A>lub <xref:System.Globalization.DateTimeFormatInfo.MonthGenitiveNames%2A>, aby uwzględnić pełną nazwę miesiąca w ciągu wynikowym.|  
|"t" (specyfikator formatu niestandardowego)|<xref:System.Globalization.DateTimeFormatInfo.AMDesignator%2A>lub <xref:System.Globalization.DateTimeFormatInfo.PMDesignator%2A>, aby uwzględnić pierwszy znak oznaczenia AM/PM w ciągu wynikowym.|  
|"tt" (specyfikator formatu niestandardowego)|<xref:System.Globalization.DateTimeFormatInfo.AMDesignator%2A>lub <xref:System.Globalization.DateTimeFormatInfo.PMDesignator%2A>, aby uwzględnić pełny wskaźnik AM/PM w ciągu wynikowym.|  
|":" (specyfikator formatu niestandardowego)|<xref:System.Globalization.DateTimeFormatInfo.TimeSeparator%2A>, aby uwzględnić separator czasu w ciągu wynikowym.|  
|"/" (specyfikator formatu niestandardowego)|<xref:System.Globalization.DateTimeFormatInfo.DateSeparator%2A>, aby uwzględnić separator daty w ciągu wynikowym.|  
  
<a name="Modifying"></a>   
## <a name="modifying-datetimeformatinfo-properties"></a>Modyfikowanie właściwości DateTimeFormatInfo  
 Można zmienić ciąg wynikowy generowany przez ciągi formatu daty i godziny, modyfikując skojarzone właściwości obiektu zapisywalnego <xref:System.Globalization.DateTimeFormatInfo> . Aby określić, czy <xref:System.Globalization.DateTimeFormatInfo> obiekt jest zapisywalny, <xref:System.Globalization.DateTimeFormatInfo.IsReadOnly%2A> Użyj właściwości. Aby dostosować <xref:System.Globalization.DateTimeFormatInfo> obiekt w ten sposób:  
  
1.  Utwórz kopię <xref:System.Globalization.DateTimeFormatInfo> obiektu do odczytu/zapisu, którego konwencje formatowania chcesz zmodyfikować. (Zobacz sekcję [Tworzenie wystąpienia obiektu DateTimeFormatInfo](#instantiating) ).  
  
2.  Zmodyfikuj właściwość lub właściwości, które są używane do generowania żądanego ciągu wynikowego. (Aby uzyskać informacje na temat sposobu, <xref:System.Globalization.DateTimeFormatInfo> w jaki metody formatowania używają właściwości do definiowania ciągów wynikowych, zobacz poprzednią sekcję, [ciągi formatów i właściwości DateTimeFormatInfo](#format-strings-and-datetimeformatinfo-properties)).  
  
3.  Użyj niestandardowego <xref:System.Globalization.DateTimeFormatInfo> obiektu utworzonego <xref:System.IFormatProvider> jako argument w wywołaniach metod formatowania.  
  
 Istnieją dwa inne sposoby zmiany formatu ciągu wynikowego:  
  
-   Można użyć klasy, <xref:System.Globalization.CultureAndRegionInfoBuilder> aby zdefiniować niestandardową kulturę (kulturę, która ma unikatową nazwę i która uzupełnia istniejące kultury) lub kulturę zamienną (która jest używana zamiast określonej kultury). Możesz zapisać tę kulturę i uzyskać do niej dostęp programowo, <xref:System.Globalization.CultureInfo> tak jak każdy obiekt obsługiwany przez .NET Framework.  
  
-   Jeśli ciąg wynikowy nie jest uwzględniany w kulturze i nie jest zgodny ze wstępnie zdefiniowanym formatem, można użyć niestandardowego ciągu formatu daty i godziny. Na przykład jeśli Serializowanie danych daty i godziny w formacie rrrrmmddggmmss, można wygenerować ciąg wynikowy przez przekazanie ciągu formatu niestandardowego do <xref:System.DateTime.ToString%28System.String%29?displayProperty=nameWithType> metody i można przekonwertować ciąg wynikowy z powrotem <xref:System.DateTime> na wartość przez wywołanie <xref:System.DateTime.ParseExact%2A?displayProperty=nameWithType> Metoda.  
  
### <a name="changing-the-short-date-pattern"></a>Zmienianie wzorca daty krótkiej  
 Poniższy przykład zmienia format ciągu wynikowego wygenerowanego w ciągu formatu standardowego "d" (Data krótka). Zmienia skojarzoną <xref:System.Globalization.DateTimeFormatInfo.ShortDatePattern%2A> właściwość kultury en-us lub English (Stany Zjednoczone) na wartość domyślną "M/d/rrrr" na "RRRR"-"mm"-"DD" i używa ciągu formatu standardowego "d" do wyświetlania daty przed i <xref:System.Globalization.DateTimeFormatInfo.ShortDatePattern%2A> po właściwości jest zmianę.  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.Class#10](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/cs/example1.cs#10)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.Class#10](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/vb/example1.vb#10)]  
  
### <a name="changing-the-date-separator-character"></a>Zmienianie znaku separatora daty  
 Poniższy przykład zmienia znak separatora daty w <xref:System.Globalization.DateTimeFormatInfo> obiekcie, który reprezentuje konwencje formatowania kultury fr-fr. W przykładzie użyto standardowego ciągu formatu "g", aby wyświetlić datę wcześniejszą i po <xref:System.Globalization.DateTimeFormatInfo.DateSeparator%2A> zmianie właściwości.  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.Class#12](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/cs/example3.cs#12)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.Class#12](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/vb/example3.vb#12)]  
  
### <a name="changing-day-name-abbreviations-and-the-long-date-pattern"></a>Zmienianie skrótów nazw dni i wzorzec daty długiej  
 W niektórych przypadkach wzorzec daty długiej, który zwykle wyświetla pełną nazwę dnia i miesiąca wraz z liczbą dni miesiąca i roku, może być zbyt długi. Poniższy przykład skraca wzorzec daty długiej dla kultury en-US w celu zwrócenia jednoznakowego lub dwubajtowego skrótu nazwy, a następnie numeru dnia, skrótu nazwy miesiąca i roku. Robi to poprzez przypisanie do <xref:System.Globalization.DateTimeFormatInfo.AbbreviatedDayNames%2A> tablicy krótszych skrótów nazw dni i zmodyfikowanie niestandardowego ciągu formatu przypisanego <xref:System.Globalization.DateTimeFormatInfo.LongDatePattern%2A> do właściwości. Ma to wpływ na ciągi wynikowe zwracane przez ciągi formatu standardowego "D" i "f".  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.Class#13](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/cs/example2.cs#13)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.Class#13](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/vb/example2.vb#13)]  
  
 Zwykle zmiana <xref:System.Globalization.DateTimeFormatInfo.LongDatePattern%2A> właściwości <xref:System.Globalization.DateTimeFormatInfo.FullDateTimePattern%2A> wpływa również na właściwość, która z kolei definiuje ciąg wynik zwracany przez ciąg formatu standardowego "F". Aby zachować oryginalny wzorzec pełnej daty i godziny, przykład ponownie przypisuje oryginalny ciąg formatu niestandardowego przypisany do <xref:System.Globalization.DateTimeFormatInfo.FullDateTimePattern%2A> właściwości <xref:System.Globalization.DateTimeFormatInfo.LongDatePattern%2A> po zmodyfikowaniu właściwości.  
  
### <a name="changing-from-a-12-hour-clock-to-a-24-hour-clock"></a>Zmiana z 12-godzinnego zegara na 24-godzinny  
 W przypadku wielu kultur w .NET Framework czas jest wyrażany przy użyciu zegara 12-godzinnego i oznaczenia AM/PM. W poniższym przykładzie zdefiniowano `ReplaceWith24HourClock` metodę, która zastępuje dowolny format czasu, który używa zegara 12-godzinnego w formacie, który używa zegara 24-godzinnego.  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.Class#14](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/cs/example5.cs#14)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.Class#14](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/vb/example5.vb#14)]  
  
 W przykładzie do modyfikacji ciągu formatu jest stosowane wyrażenie regularne. Wzorzec `@"^(?<openAMPM>\s*t+\s*)? (?(openAMPM) h+(?<nonHours>[^ht]+)$ | \s*h+(?<nonHours>[^ht]+)\s*t+)` wyrażenia regularnego definiuje się w następujący sposób:  
  
|Wzorzec|Opis|  
|-------------|-----------------|  
|`^`|Rozpocznij dopasowanie na początku ciągu.|  
|`(?<openAMPM>\s*t+\s*)?`|Dopasowanie do zera lub jednego wystąpienia zero lub więcej białych znaków, po których następuje litera "t" co najmniej raz, a po nim zero lub więcej znaków białych. Ta grupa przechwytywania ma nazwę `openAMPM`.|  
|`(?(openAMPM) h+(?<nonHours>[^ht]+)$`|`openAMPM` Jeśli grupa ma dopasowanie, dopasowuje się do litery "h" co najmniej jeden raz, po którym następuje jeden lub więcej znaków, które nie są "h" ani "t". Dopasowanie kończy się na końcu ciągu. Wszystkie znaki przechwycone po znaku "h" są zawarte w grupie przechwytywania o `nonHours`nazwie.|  
|`&#124; \s*h+(?<nonHours>[^ht]+)\s*t+)`|`openAMPM` Jeśli grupa nie ma dopasowania, dopasowuje się do litery "h" co najmniej raz, po którym następuje co najmniej jeden znak "h" lub "t", po którym następuje zero lub więcej znaków białych. Na koniec dopasowuje jedno lub więcej wystąpień litery "t". Wszystkie znaki przechwycone po "h" i przed znakiem "t" są zawarte w grupie przechwytywania o nazwie `nonHours`.|  
  
 Grupa `nonHours` przechwytywania zawiera minutę i prawdopodobnie drugi składnik niestandardowego ciągu formatu daty i godziny wraz z dowolnym symbolem separatora czasu. Wzorzec `HH${nonHours}` zamieniania dołącza podciąg "gg" do tych elementów.  
  
### <a name="displaying-and-changing-the-era-in-a-date"></a>Wyświetlanie i zmienianie ery w dacie  
 W poniższym przykładzie specyfikator formatu niestandardowego "g" jest dodawany do <xref:System.Globalization.DateTimeFormatInfo.LongDatePattern%2A> właściwości obiektu, który reprezentuje konwencje formatowania kultury en-us. To dodanie ma wpływ na trzy następujące ciągi formatu standardowego:  
  
-   Ciąg formatu standardowego "D" (Long Date), który jest mapowany bezpośrednio na <xref:System.Globalization.DateTimeFormatInfo.LongDatePattern%2A> właściwość.  
  
-   Ciąg formatu standardowego "f" (pełna Data/godzina krótka), który tworzy ciąg wynikowy, który łączy podciągi wygenerowane przez <xref:System.Globalization.DateTimeFormatInfo.LongDatePattern%2A> właściwości i. <xref:System.Globalization.DateTimeFormatInfo.ShortTimePattern%2A>  
  
-   Ciąg formatu standardowego "F" (pełna Data/godzina długa), który jest mapowany bezpośrednio na <xref:System.Globalization.DateTimeFormatInfo.FullDateTimePattern%2A> właściwość. Ponieważ ta wartość właściwości nie została jawnie ustawiona, jest generowana dynamicznie przez połączenie <xref:System.Globalization.DateTimeFormatInfo.LongDatePattern%2A> właściwości i. <xref:System.Globalization.DateTimeFormatInfo.LongTimePattern%2A>  
  
 W przykładzie pokazano również, jak zmienić nazwę ery dla kultury, której kalendarz ma pojedynczą ERA. W takim przypadku Kultura en-us używa kalendarza gregoriańskiego, który jest reprezentowany przez <xref:System.Globalization.GregorianCalendar> obiekt. <xref:System.Globalization.GregorianCalendar> Klasa obsługuje pojedynczą ERA, która nazywa n.e. (Anno Domini). Przykład zmienia nazwę ery na 0001 (Typowa ERA) przez zastąpienie niestandardowego specyfikatora formatu "g" w ciągu formatu przypisanym do <xref:System.Globalization.DateTimeFormatInfo.FullDateTimePattern%2A> właściwości z ciągiem literału. Użycie ciągu literału jest konieczne, ponieważ nazwa era jest zazwyczaj zwracana przez <xref:System.Globalization.DateTimeFormatInfo.GetEraName%2A> metodę z danych prywatnych w tabelach kultury dostarczonych przez .NET Framework lub system operacyjny Windows.  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.Class#11](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/cs/example4.cs#11)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.Class#11](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/vb/example4.vb#11)]  
  
## <a name="parsing-date-and-time-strings"></a>Analiza ciągów daty i godziny  
 Analizowanie polega na przekonwertowaniu ciągu reprezentującego datę i godzinę na <xref:System.DateTime> wartość lub. <xref:System.DateTimeOffset> Oba `Parse`te typy obejmują metody, `TryParse`, `ParseExact`i `TryParseExact` do obsługi operacji analizowania. `ParseExact` `TryParseExact` Metody `Parse` i `TryParse` konwertują ciąg, który może mieć różne formaty, i wymagają, aby ciąg miał zdefiniowany format lub formaty. Jeśli operacja analizowania nie powiedzie `Parse` się `ParseExact` i zgłosi wyjątek, `TryParse` a `TryParseExact` i `false`Return.  
  
 Metody analizy niejawnie lub jawnie wykorzystują <xref:System.Globalization.DateTimeStyles> wartość wyliczenia, aby określić, które elementy stylu (takie jak wiodące, końcowe lub białe znaki wewnętrzne) mogą być obecne w ciągu do analizy i jak interpretować przeanalizowany ciąg lub dowolny z brakujących części. Jeśli nie podajesz <xref:System.Globalization.DateTimeStyles> wartości w `Parse` wywołaniu metody lub `TryParse` , wartością domyślną jest <xref:System.Globalization.DateTimeStyles.AllowWhiteSpaces?displayProperty=nameWithType>, która jest stylem złożonym, który zawiera <xref:System.Globalization.DateTimeStyles.AllowLeadingWhite?displayProperty=nameWithType>flagi, <xref:System.Globalization.DateTimeStyles.AllowTrailingWhite?displayProperty=nameWithType>, i <xref:System.Globalization.DateTimeStyles.AllowInnerWhite?displayProperty=nameWithType> . Dla metod `TryParseExact` <xref:System.Globalization.DateTimeStyles.None?displayProperty=nameWithType>i wartość domyślna to; ciąg wejściowy musi dokładnie odpowiadać określonemu ciągowi niestandardowego formatu daty i godziny. `ParseExact`  
  
 Metody analizy również niejawnie lub jawnie używają <xref:System.Globalization.DateTimeFormatInfo> obiektu, który definiuje określone symbole i wzorce, które mogą wystąpić w ciągu do przeanalizowania. Jeśli nie podano <xref:System.Globalization.DateTimeFormatInfo> obiektu <xref:System.Globalization.DateTimeFormatInfo> , domyślnie używany jest obiekt dla bieżącej kultury wątku. Aby uzyskać więcej informacji na temat analizowania ciągów daty i godziny, zobacz poszczególne metody analizy, takie <xref:System.DateTime.Parse%2A?displayProperty=nameWithType>jak <xref:System.DateTime.TryParse%2A?displayProperty=nameWithType> <xref:System.DateTimeOffset.ParseExact%2A?displayProperty=nameWithType>,, i <xref:System.DateTimeOffset.TryParseExact%2A?displayProperty=nameWithType>.  
  
 Poniższy przykład ilustruje kulturowy charakter analizy ciągów daty i godziny. Próbuje on analizować dwa ciągi dat przy użyciu konwencji en-US, en-GB, fr-FR i fi-FI kultur. Data, która jest interpretowana jako 8/18/2014 w kulturze en-us, <xref:System.FormatException> zgłasza wyjątek w innych, ponieważ 18 jest interpretowana jako numer miesiąca. 1/2/2015 jest analizowany w drugim dniu pierwszego miesiąca w kulturze en-US, ale jako pierwszy dzień drugiego miesiąca w pozostałych kulturach.  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.Class#15](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/cs/parsing1.cs#15)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.Class#15](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/vb/parsing1.vb#15)]  
  
 Ciągi daty i godziny są zwykle analizowane z dwóch powodów:  
  
-   Aby przekonwertować dane wejściowe użytkownika na wartość daty i godziny.  
  
-   Aby zaokrąglić wartość daty i godziny, oznacza to, że w celu deserializacji wartości daty i godziny, która była uprzednio serializowana jako ciąg.  
  
 W poniższych sekcjach szczegółowo omówiono te dwie operacje.  
  
### <a name="parsing-user-strings"></a>Analiza ciągów użytkownika  
 Podczas analizowania ciągów daty i godziny w danych wejściowych użytkownika należy zawsze utworzyć wystąpienie <xref:System.Globalization.DateTimeFormatInfo> obiektu, który odzwierciedla ustawienia kulturowe użytkownika, łącznie z wszelkimi dostosowaniami dostosowań użytkownika. W przeciwnym razie obiekt date i Time może mieć nieprawidłowe wartości. Informacje o sposobie tworzenia wystąpienia <xref:System.Globalization.DateTimeFormatInfo> obiektu, który odzwierciedlają dostosowania kulturowe użytkownika, można znaleźć w sekcji [DateTimeFormatInfo i dane dynamiczne](#dynamic) .  
  
 Poniższy przykład ilustruje różnicę między operacją analizowania, która odzwierciedla ustawienia kulturowe użytkownika i takie, które nie. W tym przypadku domyślna kultura systemowa to en-US, ale użytkownik użył panelu sterowania, **regionu i języka** , aby zmienić wzorzec daty krótkiej z domyślnego "M/d/rrrr" na "RR/mm/dd". Gdy użytkownik wprowadza ciąg, który odzwierciedla ustawienia użytkownika, a ciąg jest analizowany przez <xref:System.Globalization.DateTimeFormatInfo> obiekt, który również odzwierciedla ustawienia użytkownika (przesłonięcia), operacja analizowania zwraca prawidłowy wynik. Jeśli jednak ciąg jest analizowany przez <xref:System.Globalization.DateTimeFormatInfo> obiekt, który odzwierciedla standardowe ustawienia kulturowe en-us, metoda analizy <xref:System.FormatException> zgłasza wyjątek, ponieważ interpretuje 14 jako liczbę miesięcy, a nie ostatnie dwie cyfry roku.  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.Class#16](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/cs/parse2.cs#16)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.Class#16](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/vb/parse2.vb#16)]  
  
### <a name="serializing-and-deserializing-date-and-time-data"></a>Serializacja i deserializacja danych daty i godziny  
 Serializowane dane daty i godziny są oczekiwane do rundy; oznacza to, że wszystkie wartości serializowane i deserializowane powinny być identyczne. Jeśli wartość daty i godziny reprezentuje pojedynczy moment w czasie, wartość deserializowana powinna reprezentować ten sam moment w czasie, niezależnie od kultury lub strefy czasowej systemu, w którym została przywrócona. Aby pomyślnie zaokrąglić dane daty i godziny, należy użyć Konwencji niezmiennej niezmiennej, która jest zwracana przez <xref:System.Globalization.DateTimeFormatInfo.InvariantInfo%2A> właściwość w celu wygenerowania i przeanalizowania danych. Operacje formatowania i analizowania nigdy nie powinny odzwierciedlać Konwencji domyślnej kultury. Jeśli używasz domyślnych ustawień kultury, przenośność danych jest ściśle ograniczona; można go pomyślnie deserializować tylko w wątku, którego ustawienia specyficzne dla kultury są takie same jak w wątku, w którym został on Zserializowany. W niektórych przypadkach oznacza to, że dane nie mogą być nawet pomyślnie serializowane i deserializowane w tym samym systemie.  
  
 Jeśli składnik czasu wartości daty i godziny jest znaczący, powinien również zostać przekonwertowany na czas UTC i serializować przy użyciu [standardowego ciągu formatu](~/docs/standard/base-types/standard-date-and-time-format-strings.md)"o" lub "r". Dane czasu można następnie przywrócić przez wywołanie metody analizy i przekazanie jej odpowiedniego ciągu formatu wraz z niezmienną kulturą jako `provider` argument.  
  
 Poniższy przykład ilustruje proces okrężnej wartości daty i godziny. Deserializacji datę i godzinę w systemie, który obserwuje Stanów Zjednoczonych Czas pacyficzny, którego bieżąca kultura to en-US.  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.Class#17](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/cs/serialize1.cs#17)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.Class#17](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/vb/serialize1.vb#17)]  
  
 Deserializacji dane w systemie w Brukseli, Kopenhaga, Madrytu i paryskiej strefie czasowej, których bieżącą kulturą jest fr-FR. Przywrócona Data to dziewięć godzin później niż oryginalna data, która odzwierciedla korektę strefy czasowej z ośmiu godzin za UTC do godziny przed czasem UTC. Zarówno Data oryginalna, jak i Data przywrócenia reprezentują ten sam moment w czasie.  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.Class#18](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/cs/serialize2.cs#18)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.Class#18](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/vb/serialize2.vb#18)]  
  
   
  
## Examples  
 W poniższym przykładzie przedstawiono użycie odbicia w celu uzyskania właściwości <xref:System.Globalization.DateTimeFormatInfo> obiektu dla kultury angielskiej (Stany Zjednoczone). Wyświetla wartości tych właściwości, które zawierają ciągi formatu niestandardowego i używa tych ciągów do wyświetlania sformatowanych dat.  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.Class#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/cs/format1.cs#5)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.Class#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/vb/format1.vb#5)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.DateTime" />
    <altmember cref="T:System.Globalization.Calendar" />
    <altmember cref="T:System.Globalization.CultureInfo" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DateTimeFormatInfo ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.DateTimeFormatInfo.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DateTimeFormatInfo();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe, zapisywalne wystąpienie <see cref="T:System.Globalization.DateTimeFormatInfo" /> klasy, która jest niezależna od kultury (niezmienna).</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten konstruktor tworzy <xref:System.Globalization.DateTimeFormatInfo> obiekt, który reprezentuje informacje o dacie i godzinie niezmiennej kultury. Aby utworzyć <xref:System.Globalization.DateTimeFormatInfo> obiekt dla określonej kultury, należy <xref:System.Globalization.CultureInfo> utworzyć obiekt dla <xref:System.Globalization.DateTimeFormatInfo> tej kultury i pobrać obiekt zwrócony przez jego <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType> właściwość.  
  
 Można modyfikować właściwości <xref:System.Globalization.DateTimeFormatInfo> obiektu utworzonego przez ten Konstruktor. Nie można jednak zmodyfikować <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> właściwości, ponieważ kultura niezmienna obsługuje tylko zlokalizowaną wersję kalendarza gregoriańskiego. Aby <xref:System.Globalization.DateTimeFormatInfo> utworzyć obiekt, który używa określonego kalendarza, należy <xref:System.Globalization.CultureInfo> utworzyć wystąpienie obiektu, który obsługuje ten kalendarz i <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> przypisać kalendarz <xref:System.Globalization.DateTimeFormatInfo> do właściwości obiektu zwróconego przez <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType> Właściwość .  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Globalization.CultureInfo.DateTimeFormat" />
      </Docs>
    </Member>
    <Member MemberName="AbbreviatedDayNames">
      <MemberSignature Language="C#" Value="public string[] AbbreviatedDayNames { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] AbbreviatedDayNames" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.DateTimeFormatInfo.AbbreviatedDayNames" />
      <MemberSignature Language="VB.NET" Value="Public Property AbbreviatedDayNames As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::String ^&gt; ^ AbbreviatedDayNames { cli::array &lt;System::String ^&gt; ^ get(); void set(cli::array &lt;System::String ^&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.AbbreviatedDayNames : string[] with get, set" Usage="System.Globalization.DateTimeFormatInfo.AbbreviatedDayNames" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia jednowymiarową tablicę typu <see cref="T:System.String" /> zawierającej skrócone nazwy dni tygodnia charakterystyczne dla kultury.</summary>
        <value>Jednowymiarowa tablica typu <see cref="T:System.String" /> zawierającego charakterystyczne dla kultury nazwy dni tygodnia. Tablica dla <see cref="P:System.Globalization.DateTimeFormatInfo.InvariantInfo" /> zawiera "Sun", "PN", "WT", "wed", "czwartek", "pt" i "SAT".</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 W przypadku ustawienia tej właściwości Tablica musi być Jednowymiarowa i musi zawierać dokładnie siedem elementów. Pierwszy element (element w indeksie zero) reprezentuje pierwszy dzień tygodnia w kalendarzu zdefiniowanym przez <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> właściwość.  
  
 Jeśli niestandardowy ciąg formatu zawiera specyfikator formatu "ddd", <xref:System.DateTime.ToString%2A?displayProperty=nameWithType> Metoda or <xref:System.DateTimeOffset.ToString%2A> zawiera odpowiedni element członkowski <xref:System.Globalization.DateTimeFormatInfo.AbbreviatedDayNames%2A> tablicy zamiast "ddd" w ciągu wynikowym.  
  
 Ta właściwość jest zależna od tego, czy <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> wartość właściwości zostanie zmieniona. Jeśli wybrany <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> program nie obsługuje skróconych nazw dni, tablica zawiera pełne nazwy dni.  
  
   
  
## Examples  
 Poniższy przykład tworzy obiekt odczytu/zapisu <xref:System.Globalization.CultureInfo> , który reprezentuje kulturę w języku angielskim (Stany Zjednoczone) i przypisuje skrócone nazwy dni do swojej <xref:System.Globalization.DateTimeFormatInfo.AbbreviatedDayNames%2A> właściwości. Następnie używa specyfikatora formatu "ddd" w niestandardowym [ciągu formatu daty i godziny](~/docs/standard/base-types/custom-date-and-time-format-strings.md) , aby wyświetlić reprezentację daty w ciągu jednego tygodnia od 28 maja 2014.  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.AbbreviatedDayNames#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.abbreviateddaynames/cs/abbreviateddaynames1.cs#1)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.AbbreviatedDayNames#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.abbreviateddaynames/vb/abbreviateddaynames1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Właściwość jest ustawiana na <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">Właściwość jest ustawiana na tablicę, która jest wielowymiarowa lub ma długość, która nie jest dokładnie 7.</exception>
        <exception cref="T:System.InvalidOperationException">Właściwość jest ustawiana i <see cref="T:System.Globalization.DateTimeFormatInfo" /> obiekt jest tylko do odczytu.</exception>
        <altmember cref="P:System.Globalization.DateTimeFormatInfo.DayNames" />
        <altmember cref="P:System.Globalization.DateTimeFormatInfo.AbbreviatedMonthNames" />
        <altmember cref="M:System.Globalization.DateTimeFormatInfo.GetAbbreviatedDayName(System.DayOfWeek)" />
      </Docs>
    </Member>
    <Member MemberName="AbbreviatedMonthGenitiveNames">
      <MemberSignature Language="C#" Value="public string[] AbbreviatedMonthGenitiveNames { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] AbbreviatedMonthGenitiveNames" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.DateTimeFormatInfo.AbbreviatedMonthGenitiveNames" />
      <MemberSignature Language="VB.NET" Value="Public Property AbbreviatedMonthGenitiveNames As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::String ^&gt; ^ AbbreviatedMonthGenitiveNames { cli::array &lt;System::String ^&gt; ^ get(); void set(cli::array &lt;System::String ^&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.AbbreviatedMonthGenitiveNames : string[] with get, set" Usage="System.Globalization.DateTimeFormatInfo.AbbreviatedMonthGenitiveNames" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia tablicę ciągów zawierającą skrócone nazwy miesięcy skojarzone z bieżącym <see cref="T:System.Globalization.DateTimeFormatInfo" /> obiektem.</summary>
        <value>Tablica skróconych nazw miesięcy.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 W niektórych językach Nazwa miesiąca, która jest częścią daty, jest wyświetlana w genitive przypadku. Na przykład data w kulturze ru-RU lub rosyjski (Rosja) składa się z numeru dnia i nazwy miesiąca genitive, takich jak 1 Января (1 styczeń). W przypadku tych kultur, jeśli ciąg formatu niestandardowego zawiera specyfikator formatu "MMM", <xref:System.DateTime.ToString%2A?displayProperty=nameWithType> Metoda or <xref:System.DateTimeOffset.ToString%2A> zawiera odpowiedni element członkowski <xref:System.Globalization.DateTimeFormatInfo.AbbreviatedMonthGenitiveNames%2A> tablicy zamiast "MMM" w ciągu wynikowym.  
  
 W operacji ustawiania Tablica musi być Jednowymiarowa o dokładnie 13 elementach, ponieważ <xref:System.Globalization.Calendar> obiekty obsługują kalendarze z 13 miesiącami. W przypadku kalendarzy, które mają 12 miesięcy, trzynasty <xref:System.String.Empty?displayProperty=nameWithType>element powinien być. Pierwszy element (element w indeksie zero) reprezentuje pierwszy miesiąc roku zdefiniowany przez <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> właściwość.  
  
 W przypadku ustawienia <xref:System.Globalization.DateTimeFormatInfo.AbbreviatedMonthGenitiveNames%2A> właściwości należy również <xref:System.Globalization.DateTimeFormatInfo.AbbreviatedMonthNames%2A> ustawić właściwość.  
  
   
  
## Examples  
 Poniższy przykład tworzy obiekt odczytu/zapisu <xref:System.Globalization.CultureInfo> , który reprezentuje kulturę w języku angielskim (Stany Zjednoczone) i przypisuje skrócone nazwy miesięcy genitive <xref:System.Globalization.DateTimeFormatInfo.AbbreviatedMonthNames%2A> do właściwości i. <xref:System.Globalization.DateTimeFormatInfo.AbbreviatedMonthGenitiveNames%2A> Następnie zostanie wyświetlony ciąg reprezentujący daty zawierające skróconą nazwę miesiąca każdego miesiąca w obsługiwanym kalendarzu kultury.  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.AbbreviatedMonthGenitiveNames#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.abbreviatedmonthgenitivenames/cs/abbreviatedmonthnames1.cs#1)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.AbbreviatedMonthGenitiveNames#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.abbreviatedmonthgenitivenames/vb/abbreviatedmonthnames1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">W operacji zestawu tablica jest wielowymiarowa lub ma długość, która nie jest dokładnie 13.</exception>
        <exception cref="T:System.ArgumentNullException">W operacji ustawiania tablica lub jeden z elementów tablicy jest <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">W operacji ustawiania bieżący <see cref="T:System.Globalization.DateTimeFormatInfo" /> obiekt jest tylko do odczytu.</exception>
        <altmember cref="P:System.Globalization.DateTimeFormatInfo.MonthGenitiveNames" />
        <altmember cref="P:System.Globalization.DateTimeFormatInfo.AbbreviatedMonthNames" />
      </Docs>
    </Member>
    <Member MemberName="AbbreviatedMonthNames">
      <MemberSignature Language="C#" Value="public string[] AbbreviatedMonthNames { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] AbbreviatedMonthNames" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.DateTimeFormatInfo.AbbreviatedMonthNames" />
      <MemberSignature Language="VB.NET" Value="Public Property AbbreviatedMonthNames As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::String ^&gt; ^ AbbreviatedMonthNames { cli::array &lt;System::String ^&gt; ^ get(); void set(cli::array &lt;System::String ^&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.AbbreviatedMonthNames : string[] with get, set" Usage="System.Globalization.DateTimeFormatInfo.AbbreviatedMonthNames" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia jednowymiarową tablicę ciągów, która zawiera skrócone nazwy miesięcy określonych dla kultury.</summary>
        <value>Jednowymiarowa tablica ciągów zawierająca 13 elementów, które zawierają skrócone nazwy miesięcy określonych dla kultury. W przypadku kalendarzy 12-miesięcznych element trzynasty tablicy jest pustym ciągiem. Tablica dla <see cref="P:System.Globalization.DateTimeFormatInfo.InvariantInfo" /> zawiera "Jan", "lut", "Mar", "kwi", "maj", "Jun", "lip", "sie", "SEP", "OCT", "lis", "gru" i "".</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli ustawisz tę właściwość, Tablica musi być jednowymiarowa z dokładnie 13 elementami. <xref:System.Globalization.Calendar>obiekty zamieścić kalendarze z 13 miesiącami. Pierwszy element (element w indeksie zero) reprezentuje pierwszy miesiąc roku zdefiniowany przez <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> właściwość.  
  
 W przypadku ustawienia <xref:System.Globalization.DateTimeFormatInfo.AbbreviatedMonthNames%2A> właściwości należy również <xref:System.Globalization.DateTimeFormatInfo.AbbreviatedMonthGenitiveNames%2A> ustawić właściwość. Właściwości <xref:System.Globalization.DateTimeFormatInfo.AbbreviatedMonthNames%2A> i<xref:System.Globalization.DateTimeFormatInfo.AbbreviatedMonthGenitiveNames%2A> służą do formatowania dat przy użyciu następujących ciągów formatu:  
  
-   Standardowy ciąg formatu daty i godziny, który aliasuje niestandardowy ciąg formatu, który zawiera specyfikator formatu "MMM".  
  
-   Niestandardowy ciąg formatu daty i godziny, który zawiera specyfikator formatu "MMM".  
  
 Ta właściwość jest zależna od tego, czy <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> wartość właściwości zostanie zmieniona. Jeśli wybrana <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> wartość nie obsługuje skróconych nazw miesięcy, tablica zawiera pełne nazwy miesięcy.  
  
   
  
## Examples  
 Poniższy przykład tworzy obiekt odczytu/zapisu <xref:System.Globalization.CultureInfo> , który reprezentuje kulturę w języku angielskim (Stany Zjednoczone) i przypisuje skrócone nazwy miesięcy genitive <xref:System.Globalization.DateTimeFormatInfo.AbbreviatedMonthNames%2A> do właściwości i. <xref:System.Globalization.DateTimeFormatInfo.AbbreviatedMonthGenitiveNames%2A> Następnie zostanie wyświetlony ciąg reprezentujący daty zawierające skróconą nazwę każdego miesiąca w obsługiwanym kalendarzu kultury.  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.AbbreviatedMonthGenitiveNames#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.abbreviatedmonthgenitivenames/cs/abbreviatedmonthnames1.cs#1)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.AbbreviatedMonthGenitiveNames#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.abbreviatedmonthgenitivenames/vb/abbreviatedmonthnames1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Właściwość jest ustawiana na <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">Właściwość jest ustawiana na tablicę, która jest wielowymiarowa lub ma długość, która nie jest dokładnie 13.</exception>
        <exception cref="T:System.InvalidOperationException">Właściwość jest ustawiana i <see cref="T:System.Globalization.DateTimeFormatInfo" /> obiekt jest tylko do odczytu.</exception>
        <altmember cref="P:System.Globalization.DateTimeFormatInfo.AbbreviatedDayNames" />
        <altmember cref="P:System.Globalization.DateTimeFormatInfo.MonthNames" />
        <altmember cref="M:System.Globalization.DateTimeFormatInfo.GetAbbreviatedMonthName(System.Int32)" />
        <altmember cref="P:System.Globalization.DateTimeFormatInfo.AbbreviatedMonthGenitiveNames" />
      </Docs>
    </Member>
    <Member MemberName="AMDesignator">
      <MemberSignature Language="C#" Value="public string AMDesignator { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AMDesignator" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.DateTimeFormatInfo.AMDesignator" />
      <MemberSignature Language="VB.NET" Value="Public Property AMDesignator As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ AMDesignator { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.AMDesignator : string with get, set" Usage="System.Globalization.DateTimeFormatInfo.AMDesignator" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia oznaczenie ciągu dla godzin, które są "ante meridiem" (przed południem).</summary>
        <value>Oznaczenie ciągu dla godzin, które są meridiem ante. Wartość domyślna dla <see cref="P:System.Globalization.DateTimeFormatInfo.InvariantInfo" /> to "am".</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Globalization.DateTimeFormatInfo.AMDesignator%2A> Właściwość jest używana przez wszystkie czasy z 0:00:00 (północy) do 11:59:59.999.  
  
 Jeśli niestandardowy ciąg formatu zawiera specyfikator formatu "tt", a czas jest wcześniejszy niż południe, <xref:System.DateTime.ToString%2A?displayProperty=nameWithType> Metoda or <xref:System.DateTimeOffset.ToString%2A> <xref:System.Globalization.DateTimeFormatInfo.AMDesignator%2A> zawiera wartość właściwości zamiast "tt" w ciągu wynikowym. Jeśli ciąg formatu niestandardowego zawiera specyfikator formatu niestandardowego "t", dołączany jest tylko pierwszy znak <xref:System.Globalization.DateTimeFormatInfo.AMDesignator%2A> wartości właściwości. Należy używać "tt" dla języków, dla których konieczne jest zachowanie rozróżnienia między rano and P.M. Przykładem jest japoński, w którym rano and P.M. oznaczenia różnią się w drugim znaku, a nie pierwszym znakiem.  
  
 Dla kultur, które nie używają rano oznaczenie, ta właściwość zwraca pusty ciąg.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Właściwość jest ustawiana na <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">Właściwość jest ustawiana i <see cref="T:System.Globalization.DateTimeFormatInfo" /> obiekt jest tylko do odczytu.</exception>
        <altmember cref="P:System.Globalization.DateTimeFormatInfo.PMDesignator" />
      </Docs>
    </Member>
    <Member MemberName="Calendar">
      <MemberSignature Language="C#" Value="public System.Globalization.Calendar Calendar { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Globalization.Calendar Calendar" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.DateTimeFormatInfo.Calendar" />
      <MemberSignature Language="VB.NET" Value="Public Property Calendar As Calendar" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Globalization::Calendar ^ Calendar { System::Globalization::Calendar ^ get(); void set(System::Globalization::Calendar ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Calendar : System.Globalization.Calendar with get, set" Usage="System.Globalization.DateTimeFormatInfo.Calendar" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Globalization.Calendar</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia kalendarz, który ma być używany dla bieżącej kultury.</summary>
        <value>Kalendarz, który ma być używany dla bieżącej kultury. Wartość domyślna dla <see cref="P:System.Globalization.DateTimeFormatInfo.InvariantInfo" /> <see cref="T:System.Globalization.GregorianCalendar" /> jest obiektem.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Właściwość akceptuje tylko kalendarze, które są prawidłowe dla kultury, która jest skojarzona <xref:System.Globalization.DateTimeFormatInfo> z obiektem. <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> Właściwość określa kalendarze, które mogą być używane przez określoną kulturę, <xref:System.Globalization.CultureInfo.Calendar%2A?displayProperty=nameWithType> a właściwość określa domyślny kalendarz dla kultury. <xref:System.Globalization.CultureInfo.OptionalCalendars%2A?displayProperty=nameWithType>  

[!INCLUDE[japanese-era-note](~/includes/calendar-era.md)]

Zmiana wartości <xref:System.Globalization.DateTimeFormatInfo.MonthNames%2A>tej właściwości ma także wpływ na następujące właściwości:, <xref:System.Globalization.DateTimeFormatInfo.ShortDatePattern%2A> <xref:System.Globalization.DateTimeFormatInfo.FullDateTimePattern%2A> <xref:System.Globalization.DateTimeFormatInfo.FirstDayOfWeek%2A> <xref:System.Globalization.DateTimeFormatInfo.AbbreviatedMonthNames%2A>, <xref:System.Globalization.DateTimeFormatInfo.DayNames%2A> <xref:System.Globalization.DateTimeFormatInfo.CalendarWeekRule%2A> <xref:System.Globalization.DateTimeFormatInfo.AbbreviatedDayNames%2A>,,,, <xref:System.Globalization.DateTimeFormatInfo.LongDatePattern%2A>,,, <xref:System.Globalization.DateTimeFormatInfo.YearMonthPattern%2A> i <xref:System.Globalization.DateTimeFormatInfo.MonthDayPattern%2A>.  
  
 Na przykład jeśli kultura bieżącego wątku jest Japońska, ta właściwość akceptuje <xref:System.Globalization.JapaneseCalendar>, <xref:System.Globalization.GregorianCalendarTypes.Localized> <xref:System.Globalization.GregorianCalendar>, lub <xref:System.Globalization.GregorianCalendarTypes.USEnglish>. <xref:System.Globalization.GregorianCalendar> <xref:System.Globalization.JapaneseCalendar> Gdy jest używany, domyślnym specyfikatorem daty długiej jest "gg t" \x5e74 "\x6708" \x65e5 "". Gdy jest używany, domyślnym specyfikatorem daty długiej jest "RRRR" \x5e74 "\x6708" \x65e5 "". <xref:System.Globalization.GregorianCalendar> <xref:System.Globalization.GregorianCalendarTypes.Localized>  
  
   
  
## Examples  
 W poniższym przykładzie zdefiniowano `ChangeCalendar` metodę, która zmienia bieżący kalendarz kultury na określony kalendarz, chyba że jest już bieżącym kalendarzem lub nie jest obsługiwany przez kulturę. Kod, który wywołuje metodę tworzy wystąpienie <xref:System.Globalization.CultureInfo> obiektu, który reprezentuje kulturę arabski (Egipt) i najpierw próbuje zmienić swój kalendarz na Kalendarz japoński. Ponieważ Kalendarz japoński nie jest obsługiwany, metoda nie zmienia kalendarza kultury. Jednak ponieważ kalendarz UM Al-Qura jest członkiem <xref:System.Globalization.CultureInfo.OptionalCalendars%2A?displayProperty=nameWithType> kolekcji, Metoda kończy się powodzeniem w bieżącym kalendarzu dla kultury AR-EG.  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.Calendar#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Globalization.DateTimeFormatInfo.Calendar/cs/CalendarTest1.cs#1)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.Calendar#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Globalization.DateTimeFormatInfo.Calendar/vb/CalendarTest1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Właściwość jest ustawiana na <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">Właściwość jest ustawiana na <see cref="T:System.Globalization.Calendar" /> obiekt, który nie jest prawidłowy dla bieżącej kultury.</exception>
        <exception cref="T:System.InvalidOperationException">Właściwość jest ustawiana i <see cref="T:System.Globalization.DateTimeFormatInfo" /> obiekt jest tylko do odczytu.</exception>
        <altmember cref="T:System.Globalization.Calendar" />
      </Docs>
    </Member>
    <Member MemberName="CalendarWeekRule">
      <MemberSignature Language="C#" Value="public System.Globalization.CalendarWeekRule CalendarWeekRule { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Globalization.CalendarWeekRule CalendarWeekRule" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.DateTimeFormatInfo.CalendarWeekRule" />
      <MemberSignature Language="VB.NET" Value="Public Property CalendarWeekRule As CalendarWeekRule" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Globalization::CalendarWeekRule CalendarWeekRule { System::Globalization::CalendarWeekRule get(); void set(System::Globalization::CalendarWeekRule value); };" />
      <MemberSignature Language="F#" Value="member this.CalendarWeekRule : System.Globalization.CalendarWeekRule with get, set" Usage="System.Globalization.DateTimeFormatInfo.CalendarWeekRule" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Globalization.CalendarWeekRule</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość określającą, która reguła jest używana do określenia pierwszego tygodnia kalendarzowego roku.</summary>
        <value>Wartość określająca pierwszy tydzień kalendarzowy roku. Wartość domyślna <see cref="P:System.Globalization.DateTimeFormatInfo.InvariantInfo" /> to <see cref="F:System.Globalization.CalendarWeekRule.FirstDay" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość jest zależna od tego, czy <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> wartość właściwości zostanie zmieniona.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Właściwość jest ustawiana na wartość, która nie jest prawidłową <see cref="T:System.Globalization.CalendarWeekRule" /> wartością.</exception>
        <exception cref="T:System.InvalidOperationException">W operacji ustawiania bieżący <see cref="T:System.Globalization.DateTimeFormatInfo" /> obiekt jest tylko do odczytu.</exception>
        <altmember cref="T:System.Globalization.CalendarWeekRule" />
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public object Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.DateTimeFormatInfo.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Function Clone () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ Clone();" />
      <MemberSignature Language="F#" Value="abstract member Clone : unit -&gt; obj&#xA;override this.Clone : unit -&gt; obj" Usage="dateTimeFormatInfo.Clone " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ICloneable.Clone</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Tworzy skróconą kopię <see cref="T:System.Globalization.DateTimeFormatInfo" />.</summary>
        <returns>Nowy <see cref="T:System.Globalization.DateTimeFormatInfo" /> obiekt skopiowany z oryginału <see cref="T:System.Globalization.DateTimeFormatInfo" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Klon jest zapisywalny, nawet jeśli oryginalny <xref:System.Globalization.DateTimeFormatInfo> obiekt jest tylko do odczytu. W związku z tym właściwości klonu można modyfikować za pomocą wzorców zdefiniowanych przez użytkownika.  
  
 Płytki kopia obiektu jest kopią tylko obiektu. Jeśli obiekt zawiera odwołania do innych obiektów, płytki kopia nie tworzy kopii określonych obiektów. Odwołuje się do oryginalnych obiektów. Z kolei Szczegółowa kopia obiektu tworzy kopię obiektu i kopię wszystkiego bezpośrednio lub pośrednio, do którego odwołuje się ten obiekt.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CurrentInfo">
      <MemberSignature Language="C#" Value="public static System.Globalization.DateTimeFormatInfo CurrentInfo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Globalization.DateTimeFormatInfo CurrentInfo" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.DateTimeFormatInfo.CurrentInfo" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property CurrentInfo As DateTimeFormatInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Globalization::DateTimeFormatInfo ^ CurrentInfo { System::Globalization::DateTimeFormatInfo ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CurrentInfo : System.Globalization.DateTimeFormatInfo" Usage="System.Globalization.DateTimeFormatInfo.CurrentInfo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Globalization.DateTimeFormatInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera obiekt tylko <see cref="T:System.Globalization.DateTimeFormatInfo" /> do odczytu, który formatuje wartości w oparciu o bieżącą kulturę.</summary>
        <value>Obiekt tylko <see cref="T:System.Globalization.DateTimeFormatInfo" /> do odczytu oparty <see cref="T:System.Globalization.CultureInfo" /> na obiekcie dla bieżącego wątku.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Globalization.DateTimeFormatInfo> Obiekt zwrócony<xref:System.Globalization.DateTimeFormatInfo.CurrentInfo%2A> przez właściwość odzwierciedla zastąpienia użytkownika.  
  
   
  
## Examples  
 Poniższy przykład używa <xref:System.Globalization.DateTimeFormatInfo.CurrentInfo%2A> właściwości, aby <xref:System.Globalization.DateTimeFormatInfo> pobrać obiekt, który reprezentuje konwencje formatowania bieżącej kultury, która w tym przypadku jest kulturą en-us. Następnie wyświetla ciąg formatu i ciąg wynikowy dla sześciu właściwości formatowania.  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.CurrentInfo#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Globalization.DateTimeFormatInfo.CurrentInfo/cs/CurrentInfo1.cs#1)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.CurrentInfo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Globalization.DateTimeFormatInfo.CurrentInfo/vb/CurrentInfo1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Globalization.CultureInfo" />
      </Docs>
    </Member>
    <Member MemberName="DateSeparator">
      <MemberSignature Language="C#" Value="public string DateSeparator { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DateSeparator" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.DateTimeFormatInfo.DateSeparator" />
      <MemberSignature Language="VB.NET" Value="Public Property DateSeparator As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DateSeparator { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DateSeparator : string with get, set" Usage="System.Globalization.DateTimeFormatInfo.DateSeparator" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia ciąg oddzielający składniki daty, czyli rok, miesiąc i dzień.</summary>
        <value>Ciąg oddzielający składniki daty, czyli rok, miesiąc i dzień. Wartość domyślna dla <see cref="P:System.Globalization.DateTimeFormatInfo.InvariantInfo" /> to "/".</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli niestandardowy ciąg formatu zawiera specyfikator formatu "/", <xref:System.DateTime.ToString%2A?displayProperty=nameWithType> Metoda wyświetla wartość zamiast <xref:System.Globalization.DateTimeFormatInfo.DateSeparator%2A> "/" w ciągu wynikowym.  
  
 <xref:System.Globalization.DateTimeFormatInfo.DateSeparator%2A> Właściwość definiuje ciąg, który zastępuje separator daty ("/" niestandardowy specyfikator formatu daty i godziny) w ciągu wynikowym w operacji formatowania. Definiuje również ciąg separatora daty w operacji analizowania.  
  
   
  
## Examples  
 Poniższy przykład tworzy wystąpienie <xref:System.Globalization.CultureInfo> obiektu dla kultury en-us, zmienia jego separator daty na "-" i wyświetla datę przy użyciu ciągów formatu standardowego "d", "g" i "g".  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.DateSeparator#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.dateseparator/cs/dateseparatorex.cs#1)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.DateSeparator#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.dateseparator/vb/dateseparatorex.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Właściwość jest ustawiana na <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">Właściwość jest ustawiana i <see cref="T:System.Globalization.DateTimeFormatInfo" /> obiekt jest tylko do odczytu.</exception>
        <altmember cref="P:System.Globalization.DateTimeFormatInfo.TimeSeparator" />
        <related type="Article" href="~/docs/standard/base-types/custom-date-and-time-format-strings.md">Niestandardowe ciągi formatujące datę i godzinę</related>
        <related type="Article" href="~/docs/standard/base-types/standard-date-and-time-format-strings.md">Standardowe ciągi formatujące datę i godzinę</related>
      </Docs>
    </Member>
    <Member MemberName="DayNames">
      <MemberSignature Language="C#" Value="public string[] DayNames { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] DayNames" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.DateTimeFormatInfo.DayNames" />
      <MemberSignature Language="VB.NET" Value="Public Property DayNames As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::String ^&gt; ^ DayNames { cli::array &lt;System::String ^&gt; ^ get(); void set(cli::array &lt;System::String ^&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DayNames : string[] with get, set" Usage="System.Globalization.DateTimeFormatInfo.DayNames" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia jednowymiarową tablicę ciągów, która zawiera pełne nazwy charakterystyczne dla kultury dni tygodnia.</summary>
        <value>Jednowymiarowa tablica ciągów, która zawiera pełne nazwy dla określonych kultur dni tygodnia. Tablica dla <see cref="P:System.Globalization.DateTimeFormatInfo.InvariantInfo" /> zawiera "Niedziela", "poniedziałek", "wtorek", "Środa", "czwartek", "piątek" i "Sobota".</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 W przypadku ustawienia tej właściwości Tablica musi być Jednowymiarowa i musi zawierać dokładnie siedem elementów. Pierwszy element (element w indeksie zero) reprezentuje pierwszy dzień tygodnia w kalendarzu zdefiniowanym przez <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> właściwość.  
  
 Jeśli niestandardowy ciąg formatu zawiera specyfikator formatu "dddd", <xref:System.DateTime.ToString%2A?displayProperty=nameWithType> Metoda zawiera wartość odpowiedniego <xref:System.Globalization.DateTimeFormatInfo.DayNames%2A> elementu członkowskiego zamiast "dddd" w ciągu wynikowym.  
  
 Ta właściwość jest zależna od tego, czy <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> wartość właściwości zostanie zmieniona.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Właściwość jest ustawiana na <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">Właściwość jest ustawiana na tablicę, która jest wielowymiarowa lub ma długość, która nie jest dokładnie 7.</exception>
        <exception cref="T:System.InvalidOperationException">Właściwość jest ustawiana i <see cref="T:System.Globalization.DateTimeFormatInfo" /> obiekt jest tylko do odczytu.</exception>
        <altmember cref="P:System.Globalization.DateTimeFormatInfo.AbbreviatedDayNames" />
        <altmember cref="P:System.Globalization.DateTimeFormatInfo.MonthNames" />
        <altmember cref="M:System.Globalization.DateTimeFormatInfo.GetDayName(System.DayOfWeek)" />
      </Docs>
    </Member>
    <Member MemberName="FirstDayOfWeek">
      <MemberSignature Language="C#" Value="public DayOfWeek FirstDayOfWeek { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DayOfWeek FirstDayOfWeek" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.DateTimeFormatInfo.FirstDayOfWeek" />
      <MemberSignature Language="VB.NET" Value="Public Property FirstDayOfWeek As DayOfWeek" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property DayOfWeek FirstDayOfWeek { DayOfWeek get(); void set(DayOfWeek value); };" />
      <MemberSignature Language="F#" Value="member this.FirstDayOfWeek : DayOfWeek with get, set" Usage="System.Globalization.DateTimeFormatInfo.FirstDayOfWeek" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.DayOfWeek</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia pierwszy dzień tygodnia.</summary>
        <value>Wartość wyliczenia, która reprezentuje pierwszy dzień tygodnia. Wartość domyślna <see cref="P:System.Globalization.DateTimeFormatInfo.InvariantInfo" /> to <see cref="F:System.DayOfWeek.Sunday" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość jest zależna od tego, czy <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> wartość właściwości zostanie zmieniona.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Właściwość jest ustawiana na wartość, która nie jest prawidłową <see cref="T:System.DayOfWeek" /> wartością.</exception>
        <exception cref="T:System.InvalidOperationException">Właściwość jest ustawiana i <see cref="T:System.Globalization.DateTimeFormatInfo" /> obiekt jest tylko do odczytu.</exception>
        <altmember cref="T:System.DayOfWeek" />
      </Docs>
    </Member>
    <Member MemberName="FullDateTimePattern">
      <MemberSignature Language="C#" Value="public string FullDateTimePattern { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FullDateTimePattern" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.DateTimeFormatInfo.FullDateTimePattern" />
      <MemberSignature Language="VB.NET" Value="Public Property FullDateTimePattern As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ FullDateTimePattern { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.FullDateTimePattern : string with get, set" Usage="System.Globalization.DateTimeFormatInfo.FullDateTimePattern" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia ciąg formatu niestandardowego dla wartości daty długiej i godziny długiej.</summary>
        <value>Ciąg formatu niestandardowego dla wartości daty długiej i godziny długiej.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ciąg formatu standardowego "F" jest aliasem dla <xref:System.Globalization.DateTimeFormatInfo.FullDateTimePattern%2A> właściwości. Innymi słowy, ciąg formatu niestandardowego przypisany do tej właściwości definiuje format ciągu wynikowego dla standardowego ciągu formatu "F". Aby uzyskać więcej informacji, zobacz [ciągi standardowych formatów daty i godziny](~/docs/standard/base-types/standard-date-and-time-format-strings.md).  
  
 Wartość <xref:System.Globalization.DateTimeFormatInfo.FullDateTimePattern%2A> właściwości jest generowana dynamicznie przez połączenie <xref:System.Globalization.DateTimeFormatInfo.LongDatePattern%2A> właściwości i <xref:System.Globalization.DateTimeFormatInfo.LongTimePattern%2A> rozdzielonych spacją. To przypisanie dynamiczne odbywa się w następujących warunkach:  
  
-   Jeśli wartość właściwości zostanie pobrana, zanim zostanie ustawiona jawnie.  
  
-   Gdy wartość właściwości zostanie <xref:System.Globalization.DateTimeFormatInfo.LongDatePattern%2A> zmieniona.  
  
-   Gdy wartość właściwości zostanie <xref:System.Globalization.DateTimeFormatInfo.LongTimePattern%2A> zmieniona.  
  
 Ta właściwość jest zależna od tego, czy <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> wartość właściwości zostanie zmieniona.  
  
   
  
## Examples  
 Poniższy przykład wyświetla wartość <xref:System.Globalization.DateTimeFormatInfo.FullDateTimePattern%2A> dla kilku kultur.  
  
 [!code-cpp[System.Globalization.DateTimeFormatInfo.FullDateTimePattern#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.FullDateTimePattern/CPP/dtfi_fulldatetimepattern.cpp#1)]
 [!code-csharp[System.Globalization.DateTimeFormatInfo.FullDateTimePattern#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.FullDateTimePattern/CS/dtfi_fulldatetimepattern.cs#1)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.FullDateTimePattern#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.FullDateTimePattern/VB/dtfi_fulldatetimepattern.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Właściwość jest ustawiana na <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">Właściwość jest ustawiana i <see cref="T:System.Globalization.DateTimeFormatInfo" /> obiekt jest tylko do odczytu.</exception>
        <related type="Article" href="~/docs/standard/base-types/standard-date-and-time-format-strings.md">Standardowe ciągi formatujące datę i godzinę</related>
        <related type="Article" href="~/docs/standard/base-types/custom-date-and-time-format-strings.md">Niestandardowe ciągi formatujące datę i godzinę</related>
      </Docs>
    </Member>
    <Member MemberName="GetAbbreviatedDayName">
      <MemberSignature Language="C#" Value="public string GetAbbreviatedDayName (DayOfWeek dayofweek);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetAbbreviatedDayName(valuetype System.DayOfWeek dayofweek) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.DateTimeFormatInfo.GetAbbreviatedDayName(System.DayOfWeek)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetAbbreviatedDayName(DayOfWeek dayofweek);" />
      <MemberSignature Language="F#" Value="member this.GetAbbreviatedDayName : DayOfWeek -&gt; string" Usage="dateTimeFormatInfo.GetAbbreviatedDayName dayofweek" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dayofweek" Type="System.DayOfWeek" />
      </Parameters>
      <Docs>
        <param name="dayofweek"><see cref="T:System.DayOfWeek" /> Wartość.</param>
        <summary>Zwraca skróconą nazwę określonego dnia tygodnia w oparciu o kulturę skojarzoną z bieżącym <see cref="T:System.Globalization.DateTimeFormatInfo" /> obiektem.</summary>
        <returns>Określona w skrócie nazwa dnia tygodnia reprezentowanego przez <paramref name="dayofweek" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dla domyślnego obiektu niezmiennej <xref:System.Globalization.DateTimeFormatInfo> ta metoda zwraca ciąg <xref:System.Globalization.GregorianCalendar>z:  
  
|`dayofweek`|Wartość zwracana|  
|-----------------|------------------|  
|Niedziela|N|  
|Poniedziałek|PN|  
|Wtorek|Wtorek|  
|Środa|Środa|  
|Czwartek|Czwartek|  
|Piątek|Pt|  
|Sobota|Sob|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="dayofweek" />nie jest prawidłową <see cref="T:System.DayOfWeek" /> wartością.</exception>
        <altmember cref="T:System.Globalization.CultureInfo" />
        <altmember cref="T:System.Globalization.GregorianCalendar" />
        <altmember cref="P:System.Globalization.DateTimeFormatInfo.AbbreviatedDayNames" />
        <altmember cref="T:System.DayOfWeek" />
      </Docs>
    </Member>
    <Member MemberName="GetAbbreviatedEraName">
      <MemberSignature Language="C#" Value="public string GetAbbreviatedEraName (int era);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetAbbreviatedEraName(int32 era) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.DateTimeFormatInfo.GetAbbreviatedEraName(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAbbreviatedEraName (era As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetAbbreviatedEraName(int era);" />
      <MemberSignature Language="F#" Value="member this.GetAbbreviatedEraName : int -&gt; string" Usage="dateTimeFormatInfo.GetAbbreviatedEraName era" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="era" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="era">Liczba całkowita reprezentująca ERA.</param>
        <summary>Zwraca ciąg zawierający skróconą nazwę podanej ery, jeśli istnieje skrót.</summary>
        <returns>Ciąg zawierający skróconą nazwę podanej ery, jeśli istnieje skrót.  
  
 —lub—  
  
 Ciąg zawierający pełną nazwę ERA, jeśli skrót nie istnieje.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Nazwa era to nazwa, która jest stosowana przez kalendarz do odwoływania się do określonego czasu z ustalonego punktu lub zdarzenia. Na przykład "N.E." lub "0001" to bieżąca ERA w kalendarzu gregoriańskim.  
  
 Prawidłowe wartości dla `era` są wymienione <xref:System.Globalization.Calendar.Eras%2A> we właściwości odpowiedniej klasy pochodnej od <xref:System.Globalization.Calendar>. Na przykład: <xref:System.Globalization.JapaneseCalendar.Eras%2A?displayProperty=nameWithType> wyświetla listę wymazów, które są obsługiwane przez tę implementację.  
  
 <xref:System.Globalization.JapaneseCalendar> W klasie Skrócona nazwa ery jest pierwszym znakiem pełnej nazwy ery. Ten znak jest jednoznakowym skrótem alfabetu łacińskiego lub jednoznakowym skrótem kanji.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="era" />nie reprezentuje prawidłowej ery w kalendarzu określonym we <see cref="P:System.Globalization.DateTimeFormatInfo.Calendar" /> właściwości.</exception>
        <block subset="none" type="usage"><para>Jeśli <see cref="P:System.Globalization.DateTimeFormatInfo.Calendar" /> <see cref="M:System.Globalization.DateTimeFormatInfo.GetAbbreviatedEraName(System.Int32)" /> jest, ale<see cref="P:System.Threading.Thread.CurrentCulture" /> nie jest "zh-TW",,izwracapustyciąg("").<see cref="M:System.Globalization.DateTimeFormatInfo.GetEraName(System.Int32)" /> <see cref="P:System.Globalization.DateTimeFormatInfo.NativeCalendarName" /> <see cref="T:System.Globalization.TaiwanCalendar" /></para></block>
        <altmember cref="T:System.Globalization.JapaneseCalendar" />
        <altmember cref="T:System.Globalization.TaiwanCalendar" />
      </Docs>
    </Member>
    <Member MemberName="GetAbbreviatedMonthName">
      <MemberSignature Language="C#" Value="public string GetAbbreviatedMonthName (int month);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetAbbreviatedMonthName(int32 month) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.DateTimeFormatInfo.GetAbbreviatedMonthName(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAbbreviatedMonthName (month As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetAbbreviatedMonthName(int month);" />
      <MemberSignature Language="F#" Value="member this.GetAbbreviatedMonthName : int -&gt; string" Usage="dateTimeFormatInfo.GetAbbreviatedMonthName month" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="month" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="month">Liczba całkowita z zakresu od 1 do 13 reprezentująca nazwę miesiąca do pobrania.</param>
        <summary>Zwraca skróconą nazwę określonego miesiąca określoną dla kultury w oparciu o kulturę skojarzoną z bieżącym <see cref="T:System.Globalization.DateTimeFormatInfo" /> obiektem.</summary>
        <returns>Skrócona nazwa miesiąca określona dla kultury reprezentowana przez <paramref name="month" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dla domyślnego obiektu niezmiennej <xref:System.Globalization.DateTimeFormatInfo> ta metoda zwraca ciąg <xref:System.Globalization.GregorianCalendar> z obiektu.  
  
|`month`|Wartość zwracana|  
|-------------|------------------|  
|1|Stycznia|  
|2|Lutego|  
|3|Znacz|  
|4|15-04-2004|  
|5|Można|  
|6|Lip|  
|7|Lipca|  
|8|Sie|  
|9|Wrz|  
|10|Ósemkow|  
|11|Lis|  
|12|Grudzień|  
|13|""|  
  
 <xref:System.Globalization.Calendar>obiekty mogą obsługiwać kalendarze z 13 miesiącami. W przypadku kalendarzy 12-miesięczny pusty ciąg jest zawsze zwracany jako nazwa trzynastego miesiąca.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="month" />jest mniejsza niż 1 lub większa niż 13.</exception>
        <altmember cref="T:System.Globalization.Calendar" />
        <altmember cref="T:System.Globalization.CultureInfo" />
        <altmember cref="T:System.Globalization.GregorianCalendar" />
        <altmember cref="P:System.Globalization.DateTimeFormatInfo.AbbreviatedMonthNames" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetAllDateTimePatterns">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Zwraca standardowe wzorce, w których można sformatować wartości daty i godziny.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetAllDateTimePatterns">
      <MemberSignature Language="C#" Value="public string[] GetAllDateTimePatterns ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string[] GetAllDateTimePatterns() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.DateTimeFormatInfo.GetAllDateTimePatterns" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAllDateTimePatterns () As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::String ^&gt; ^ GetAllDateTimePatterns();" />
      <MemberSignature Language="F#" Value="member this.GetAllDateTimePatterns : unit -&gt; string[]" Usage="dateTimeFormatInfo.GetAllDateTimePatterns " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zwraca wszystkie wzorce standardowe, w których można sformatować wartości daty i godziny.</summary>
        <returns>Tablica zawierająca standardowe wzorce, w których można sformatować wartości daty i godziny.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda zwraca tablicę zawierającą wszystkie niestandardowe ciągi formatujące odpowiadające ciągom formatu standardowego. Zobacz [Standardowe ciągi formatujące datę i godzinę](~/docs/standard/base-types/standard-date-and-time-format-strings.md) , aby wyświetlić listę ciągów formatu standardowego.  
  
 Możesz użyć niestandardowych ciągów formatu w tablicy zwracanej przez <xref:System.Globalization.DateTimeFormatInfo.GetAllDateTimePatterns%2A> metodę w operacjach formatowania. Jednak w takim przypadku ciąg reprezentujący wartość daty i godziny zwracany w tej operacji formatowania nie może być zawsze analizowany przez `Parse` metody i. `TryParse` W związku z tym nie można założyć, że ciągi formatu niestandardowego zwracane <xref:System.Globalization.DateTimeFormatInfo.GetAllDateTimePatterns%2A> przez metodę mogą służyć do zaokrąglania wartości daty i godziny. Poniższy przykład ilustruje ten problem. Pobiera <xref:System.Globalization.DateTimeFormatInfo> obiekt, który zawiera informacje o formatowaniu dla kultury Włoch (włoski). Przekazuje każdy ciąg formatu niestandardowego w tablicy zwracanej przez <xref:System.Globalization.DateTimeFormatInfo.GetAllDateTimePatterns> metodę <xref:System.DateTime.ToString%28System.String%29?displayProperty=nameWithType> do metody w celu utworzenia ciągu reprezentującego datę i godzinę. Ten przykład próbuje przeanalizować tę wartość przez wywołanie <xref:System.DateTime.TryParse%28System.String%2CSystem.DateTime%40%29?displayProperty=nameWithType> metody. Jako dane wyjściowe z przykładu pokazują, niektóre niestandardowe ciągi formatujące nie generują wartości daty i godziny, która została pomyślnie przekazana.  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.GetAllDateTimePatterns#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.getalldatetimepatterns/cs/getalldatetimepatternsex1.cs#1)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.GetAllDateTimePatterns#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.getalldatetimepatterns/vb/getalldatetimepatternsex1.vb#1)]  
  
 Aby przeanalizować ciąg reprezentujący datę i godzinę, które mogą być wyrażone w wielu wstępnie zdefiniowanych formatach niestandardowych, wywołaj jedną z następujących metod:  
  
-   <xref:System.DateTime.ParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=nameWithType>  
  
-   <xref:System.DateTimeOffset.ParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=nameWithType>  
  
-   <xref:System.DateTime.TryParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTime%40%29?displayProperty=nameWithType>  
  
-   <xref:System.DateTimeOffset.TryParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTimeOffset%40%29?displayProperty=nameWithType>  
  
 Ciągi formatu niestandardowego w tablicy zwracanej przez <xref:System.Globalization.DateTimeFormatInfo.GetAllDateTimePatterns%2A> metodę są zależne od bieżącego kalendarza kultury, dla <xref:System.Globalization.DateTimeFormatInfo> którego obiekt dostarcza informacje o formatowaniu. W przypadku zmiany kalendarza tablica zwracana przez tę metodę również ulega zmianie.  
  
   
  
## Examples  
 Poniższy przykład wyświetla ciągi formatu daty i godziny dla kultury niezmiennej, a także ciąg wynikowy, który jest tworzony, gdy ten ciąg formatu jest używany do formatowania konkretnej daty.  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.GetAllDateTimePatterns#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.getalldatetimepatterns/cs/getalldatetimepatternsinv.cs#3)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.GetAllDateTimePatterns#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.getalldatetimepatterns/vb/getalldatetimepatternsinv.vb#3)]  
  
 Przykład tworzy wystąpienie <xref:System.Globalization.DateTimeFormatInfo> obiektu, który reprezentuje niezmienną kulturę, <xref:System.Globalization.DateTimeFormatInfo.%23ctor%2A> wywołując Konstruktor. Może również pobrać element <xref:System.Globalization.DateTimeFormatInfo> reprezentujący niezmienną kulturę <xref:System.Globalization.DateTimeFormatInfo.InvariantInfo%2A> z właściwości.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Globalization.DateTimeFormatInfo.SetAllDateTimePatterns(System.String[],System.Char)" />
      </Docs>
    </Member>
    <Member MemberName="GetAllDateTimePatterns">
      <MemberSignature Language="C#" Value="public string[] GetAllDateTimePatterns (char format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string[] GetAllDateTimePatterns(char format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.DateTimeFormatInfo.GetAllDateTimePatterns(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAllDateTimePatterns (format As Char) As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::String ^&gt; ^ GetAllDateTimePatterns(char format);" />
      <MemberSignature Language="F#" Value="member this.GetAllDateTimePatterns : char -&gt; string[]" Usage="dateTimeFormatInfo.GetAllDateTimePatterns format" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.Char" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="format">Ciąg formatu standardowego.</param>
        <summary>Zwraca wszystkie wzorce, w których wartości daty i godziny można sformatować przy użyciu określonego ciągu formatu standardowego.</summary>
        <returns>Tablica zawierająca standardowe wzorce, w których wartości daty i godziny można sformatować przy użyciu określonego ciągu formatu.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda zwraca tablicę zawierającą ciągi formatu niestandardowego, które odpowiadają określonemu ciągowi formatu standardowego. Zobacz [Standardowe ciągi formatujące datę i godzinę](~/docs/standard/base-types/standard-date-and-time-format-strings.md) , aby wyświetlić listę ciągów formatu standardowego.  
  
 Możesz użyć niestandardowych ciągów formatu w tablicy zwracanej przez <xref:System.Globalization.DateTimeFormatInfo.GetAllDateTimePatterns%2A> metodę w operacjach formatowania. Jednak w takim przypadku ciąg reprezentujący wartość daty i godziny zwracany w tej operacji formatowania nie może być zawsze analizowany przez `Parse` metody i. `TryParse` W związku z tym nie można założyć, że ciągi formatu niestandardowego zwracane <xref:System.Globalization.DateTimeFormatInfo.GetAllDateTimePatterns%2A> przez metodę mogą służyć do zaokrąglania wartości daty i godziny. Poniższy przykład ilustruje ten problem. Pobiera <xref:System.Globalization.DateTimeFormatInfo> obiekt, który zawiera informacje o formatowaniu dla kultury Rosji (rosyjski). Wywołuje <xref:System.Globalization.DateTimeFormatInfo.GetAllDateTimePatterns%28System.Char%29> metodę dla każdego standardowego ciągu formatu, a następnie przekazuje każdy ciąg formatu niestandardowego w zwróconej tablicy <xref:System.DateTime.ToString%28System.String%29?displayProperty=nameWithType> do metody w celu utworzenia ciągu reprezentującego datę i godzinę. Ten przykład próbuje przeanalizować tę wartość przez wywołanie <xref:System.DateTime.TryParse%28System.String%2CSystem.DateTime%40%29?displayProperty=nameWithType> metody. Jako dane wyjściowe z przykładu pokazują, niektóre niestandardowe ciągi formatujące nie generują wartości daty i godziny, która została pomyślnie przekazana.  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.GetAllDateTimePatterns#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.getalldatetimepatterns/cs/getalldatetimepatternsex2.cs#2)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.GetAllDateTimePatterns#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.getalldatetimepatterns/vb/getalldatetimepatternsex2.vb#2)]  
  
 Aby przeanalizować ciąg reprezentujący datę i godzinę, które mogą być wyrażone w wielu wstępnie zdefiniowanych formatach niestandardowych, wywołaj jedną z następujących metod:  
  
-   <xref:System.DateTime.ParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=nameWithType>  
  
-   <xref:System.DateTimeOffset.ParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=nameWithType>  
  
-   <xref:System.DateTime.TryParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTime%40%29?displayProperty=nameWithType>  
  
-   <xref:System.DateTimeOffset.TryParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTimeOffset%40%29?displayProperty=nameWithType>  
  
 Ciągi formatu niestandardowego w tablicy zwracanej przez <xref:System.Globalization.DateTimeFormatInfo.GetAllDateTimePatterns%2A> metodę są zależne od bieżącego kalendarza kultury, dla <xref:System.Globalization.DateTimeFormatInfo> którego obiekt dostarcza informacje o formatowaniu. W przypadku zmiany kalendarza tablica zwracana przez tę metodę również ulega zmianie.  
  
   
  
## Examples  
 W poniższym przykładzie przedstawiono wzorce daty i godziny dla bieżącego kalendarza.  
  
 [!code-cpp[Classic DateTimeFormatInfo.GetAllDateTimePatterns Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic DateTimeFormatInfo.GetAllDateTimePatterns Example/CPP/source.cpp#1)]
 [!code-csharp[Classic DateTimeFormatInfo.GetAllDateTimePatterns Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic DateTimeFormatInfo.GetAllDateTimePatterns Example/CS/source.cs#1)]
 [!code-vb[Classic DateTimeFormatInfo.GetAllDateTimePatterns Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic DateTimeFormatInfo.GetAllDateTimePatterns Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="format" />nie jest prawidłowym ciągiem formatu standardowego.</exception>
        <altmember cref="M:System.Globalization.DateTimeFormatInfo.SetAllDateTimePatterns(System.String[],System.Char)" />
      </Docs>
    </Member>
    <Member MemberName="GetDayName">
      <MemberSignature Language="C#" Value="public string GetDayName (DayOfWeek dayofweek);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetDayName(valuetype System.DayOfWeek dayofweek) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.DateTimeFormatInfo.GetDayName(System.DayOfWeek)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetDayName(DayOfWeek dayofweek);" />
      <MemberSignature Language="F#" Value="member this.GetDayName : DayOfWeek -&gt; string" Usage="dateTimeFormatInfo.GetDayName dayofweek" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dayofweek" Type="System.DayOfWeek" />
      </Parameters>
      <Docs>
        <param name="dayofweek"><see cref="T:System.DayOfWeek" /> Wartość.</param>
        <summary>Zwraca pełną nazwę określonego dnia tygodnia w oparciu o kulturę skojarzoną z bieżącym <see cref="T:System.Globalization.DateTimeFormatInfo" /> obiektem.</summary>
        <returns>Pełna nazwa dnia tygodnia reprezentowanego przez <paramref name="dayofweek" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dla domyślnego obiektu niezmiennej <xref:System.Globalization.DateTimeFormatInfo> ta metoda zwraca ciąg <xref:System.Globalization.GregorianCalendar> z obiektu.  
  
|`dayofweek`|Wartość zwracana|  
|-----------------|------------------|  
|Niedziela|Niedziela|  
|Poniedziałek|Poniedziałek|  
|Wtorek|Czwartek|  
|Środa|Środę|  
|Czwartek|Czwartek|  
|Piątek|Ubiegł|  
|Sobota|Sobotę|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="dayofweek" />nie jest prawidłową <see cref="T:System.DayOfWeek" /> wartością.</exception>
        <altmember cref="T:System.Globalization.CultureInfo" />
        <altmember cref="T:System.Globalization.GregorianCalendar" />
        <altmember cref="P:System.Globalization.DateTimeFormatInfo.DayNames" />
        <altmember cref="T:System.DayOfWeek" />
      </Docs>
    </Member>
    <Member MemberName="GetEra">
      <MemberSignature Language="C#" Value="public int GetEra (string eraName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetEra(string eraName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.DateTimeFormatInfo.GetEra(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEra (eraName As String) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetEra(System::String ^ eraName);" />
      <MemberSignature Language="F#" Value="member this.GetEra : string -&gt; int" Usage="dateTimeFormatInfo.GetEra eraName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eraName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eraName">Ciąg zawierający nazwę ERA.</param>
        <summary>Zwraca liczbę całkowitą reprezentującą określoną ERA.</summary>
        <returns>Liczba całkowita reprezentująca ERA, jeśli <paramref name="eraName" /> jest prawidłowa; w przeciwnym razie-1.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Nazwa era to nazwa, która jest stosowana przez kalendarz do odwoływania się do określonego czasu z ustalonego punktu lub zdarzenia. Na przykład "N.E." lub "0001" to bieżąca ERA w kalendarzu gregoriańskim.  
  
 W porównaniu z `eraName` rozróżnianiem wielkości liter, na przykład "n.e." jest odpowiednikiem "n.e.".  
  
 <xref:System.Globalization.DateTimeFormatInfo.GetEra%2A>ignoruje interpunkcję w przypadku skróconych nazw ERA, <xref:System.Globalization.GregorianCalendar> tylko wtedy, <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A?displayProperty=nameWithType> gdy jest wybrana w, a kultura używa "n.e." jako nazwa ERA, czyli "N.E." jest odpowiednikiem "AD".  
  
 <xref:System.Globalization.DateTimeFormatInfo.GetEra%2A>porównuje `eraName` z pełną nazwą ery zwracaną <xref:System.Globalization.DateTimeFormatInfo.GetEraName%2A> przez i ze skróconą nazwą ery zwracaną <xref:System.Globalization.DateTimeFormatInfo.GetAbbreviatedEraName%2A>przez.  

[!INCLUDE[japanese-era-note](~/includes/calendar-era.md)]

## Examples  
 Poniższy przykład pokazuje, że <xref:System.Globalization.DateTimeFormatInfo> ignoruje interpunkcję w nazwie ERA, tylko jeśli kalendarz jest gregoriański, a kultura używa nazwy era "n.e.".  
  
 [!code-cpp[System.Globalization.GregorianCalendar.GetEra#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.GregorianCalendar.GetEra/CPP/gregorian_getera.cpp#1)]
 [!code-csharp[System.Globalization.GregorianCalendar.GetEra#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.GregorianCalendar.GetEra/CS/gregorian_getera.cs#1)]
 [!code-vb[System.Globalization.GregorianCalendar.GetEra#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.GregorianCalendar.GetEra/VB/gregorian_getera.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="eraName" />jest <see langword="null" />.</exception>
        <altmember cref="M:System.Globalization.DateTimeFormatInfo.GetEraName(System.Int32)" />
        <altmember cref="T:System.Globalization.Calendar" />
      </Docs>
    </Member>
    <Member MemberName="GetEraName">
      <MemberSignature Language="C#" Value="public string GetEraName (int era);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetEraName(int32 era) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.DateTimeFormatInfo.GetEraName(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEraName (era As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetEraName(int era);" />
      <MemberSignature Language="F#" Value="member this.GetEraName : int -&gt; string" Usage="dateTimeFormatInfo.GetEraName era" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="era" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="era">Liczba całkowita reprezentująca ERA.</param>
        <summary>Zwraca ciąg zawierający nazwę określonego ery.</summary>
        <returns>Ciąg zawierający nazwę ERA.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Nazwa era to nazwa, która jest stosowana przez kalendarz do odwoływania się do określonego czasu z ustalonego punktu lub zdarzenia. Na przykład "N.E." lub "0001" to bieżąca ERA w kalendarzu gregoriańskim.  
  
 Prawidłowe wartości dla `era` są wymienione <xref:System.Globalization.Calendar.Eras%2A> we właściwości odpowiedniej klasy pochodnej od <xref:System.Globalization.Calendar>. Na przykład: <xref:System.Globalization.JapaneseCalendar.Eras%2A?displayProperty=nameWithType> wyświetla listę wymazów, które są obsługiwane przez tę implementację.  

[!INCLUDE[japanese-era-note](~/includes/calendar-era.md)]
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="era" />nie reprezentuje prawidłowej ery w kalendarzu określonym we <see cref="P:System.Globalization.DateTimeFormatInfo.Calendar" /> właściwości.</exception>
        <block subset="none" type="usage"><para>Jeśli kalendarz jest reprezentowany przez <see cref="T:System.Globalization.TaiwanCalendar" /> , <see cref="P:System.Threading.Thread.CurrentCulture" /> ale nie jest "zh <see cref="P:System.Globalization.DateTimeFormatInfo.NativeCalendarName" />- <see cref="M:System.Globalization.DateTimeFormatInfo.GetEraName(System.Int32)" />TW",,, i <see cref="M:System.Globalization.DateTimeFormatInfo.GetAbbreviatedEraName(System.Int32)" /> zwraca pusty ciąg ("").</para></block>
        <altmember cref="M:System.Globalization.DateTimeFormatInfo.GetEra(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="GetFormat">
      <MemberSignature Language="C#" Value="public object GetFormat (Type formatType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetFormat(class System.Type formatType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.DateTimeFormatInfo.GetFormat(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetFormat (formatType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ GetFormat(Type ^ formatType);" />
      <MemberSignature Language="F#" Value="abstract member GetFormat : Type -&gt; obj&#xA;override this.GetFormat : Type -&gt; obj" Usage="dateTimeFormatInfo.GetFormat formatType" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IFormatProvider.GetFormat(System.Type)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="formatType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="formatType">Typ wymaganej usługi formatowania.</param>
        <summary>Zwraca obiekt określonego typu, który udostępnia usługę formatowania daty i godziny.</summary>
        <returns>Bieżący obiekt, jeśli <paramref name="formatType" /> jest taki sam jak typ bieżącego <see cref="T:System.Globalization.DateTimeFormatInfo" />; w przeciwnym razie <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metoda obsługiwana przez podstawowe typy danych wywołuje tę metodę, gdy bieżący <xref:System.Globalization.DateTimeFormatInfo> <xref:System.IFormatProvider> obiekt jest przekazaniem jako parametr. `Format(String, IFormatProvider)` Ta metoda implementuje <xref:System.IFormatProvider.GetFormat%2A?displayProperty=nameWithType>.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IFormatProvider" />
        <altmember cref="M:System.Globalization.NumberFormatInfo.GetFormat(System.Type)" />
      </Docs>
    </Member>
    <Member MemberName="GetInstance">
      <MemberSignature Language="C#" Value="public static System.Globalization.DateTimeFormatInfo GetInstance (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Globalization.DateTimeFormatInfo GetInstance(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.DateTimeFormatInfo.GetInstance(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetInstance (provider As IFormatProvider) As DateTimeFormatInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Globalization::DateTimeFormatInfo ^ GetInstance(IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="static member GetInstance : IFormatProvider -&gt; System.Globalization.DateTimeFormatInfo" Usage="System.Globalization.DateTimeFormatInfo.GetInstance provider" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Globalization.DateTimeFormatInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><see cref="T:System.IFormatProvider" /> Pobiera<see cref="T:System.Globalization.DateTimeFormatInfo" /> obiekt.  
  
—lub— 
 <see langword="null" />Aby uzyskać <see cref="P:System.Globalization.DateTimeFormatInfo.CurrentInfo" />.</param>
        <summary>Zwraca obiekt skojarzony z określonym <see cref="T:System.IFormatProvider" />. <see cref="T:System.Globalization.DateTimeFormatInfo" /></summary>
        <returns>Obiekt skojarzony z <see cref="T:System.IFormatProvider" />. <see cref="T:System.Globalization.DateTimeFormatInfo" /></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta <xref:System.IFormatProvider.GetFormat%2A?displayProperty=nameWithType> Metoda używa `formatProvider` metody <xref:System.Globalization.DateTimeFormatInfo> używaniaobiektujakoparametru.`Type` Jeśli `formatProvider` jest `null` lub zwraca,`null`ta metoda zwraca <xref:System.Globalization.DateTimeFormatInfo.CurrentInfo%2A>. <xref:System.IFormatProvider.GetFormat%2A?displayProperty=nameWithType>  
  
 Aplikacja może uzyskać <xref:System.Globalization.DateTimeFormatInfo> obiekt dla określonej kultury przy użyciu jednej z następujących metod:  
  
-   <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType> Właściwość.  
  
-   Metoda, gdzie `provider` jest<xref:System.Globalization.CultureInfo>obiektem. <xref:System.Globalization.DateTimeFormatInfo.GetInstance%2A>  
  
 <xref:System.Globalization.DateTimeFormatInfo> Obiekt można utworzyć tylko dla kultury niezmiennej lub dla określonych kultur, a nie dla kultur neutralnych.  
  
 Aby uzyskać więcej informacji na temat niezmiennej kultury, określonych kultur i kultur neutralnych, zobacz <xref:System.Globalization.CultureInfo> opis klasy.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IFormatProvider" />
      </Docs>
    </Member>
    <Member MemberName="GetMonthName">
      <MemberSignature Language="C#" Value="public string GetMonthName (int month);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetMonthName(int32 month) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.DateTimeFormatInfo.GetMonthName(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetMonthName (month As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetMonthName(int month);" />
      <MemberSignature Language="F#" Value="member this.GetMonthName : int -&gt; string" Usage="dateTimeFormatInfo.GetMonthName month" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="month" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="month">Liczba całkowita z zakresu od 1 do 13 reprezentująca nazwę miesiąca do pobrania.</param>
        <summary>Zwraca pełną nazwę określonego miesiąca w oparciu o kulturę skojarzoną z bieżącym <see cref="T:System.Globalization.DateTimeFormatInfo" /> obiektem.</summary>
        <returns>Pełna nazwa miesiąca określona dla kultury reprezentowana przez <paramref name="month" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dla domyślnego obiektu niezmiennej <xref:System.Globalization.DateTimeFormatInfo> ta metoda zwraca ciąg <xref:System.Globalization.GregorianCalendar> z obiektu.  
  
|`month`|Wartość zwracana|  
|-------------|------------------|  
|1|Stycznia|  
|2|Dniem|  
|3|Marcu|  
|4|Kwietnia|  
|5|Można|  
|6|Czerwca|  
|7|Lipca|  
|8|Sierpnia|  
|9|Września|  
|10|Październik|  
|11|Listopada|  
|12|Grudzień|  
|13|""|  
  
 <xref:System.Globalization.Calendar>obiekty mogą obsługiwać kalendarze z 13 miesiącami. W przypadku kalendarzy 12-miesięczny pusty ciąg jest zawsze zwracany jako nazwa trzynastego miesiąca.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="month" />jest mniejsza niż 1 lub większa niż 13.</exception>
        <altmember cref="T:System.Globalization.Calendar" />
        <altmember cref="T:System.Globalization.CultureInfo" />
        <altmember cref="T:System.Globalization.GregorianCalendar" />
        <altmember cref="P:System.Globalization.DateTimeFormatInfo.MonthNames" />
      </Docs>
    </Member>
    <Member MemberName="GetShortestDayName">
      <MemberSignature Language="C#" Value="public string GetShortestDayName (DayOfWeek dayOfWeek);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetShortestDayName(valuetype System.DayOfWeek dayOfWeek) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.DateTimeFormatInfo.GetShortestDayName(System.DayOfWeek)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetShortestDayName(DayOfWeek dayOfWeek);" />
      <MemberSignature Language="F#" Value="member this.GetShortestDayName : DayOfWeek -&gt; string" Usage="dateTimeFormatInfo.GetShortestDayName dayOfWeek" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dayOfWeek" Type="System.DayOfWeek" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="dayOfWeek">Jedna z <see cref="T:System.DayOfWeek" /> wartości.</param>
        <summary>Uzyskuje najkrótszą skróconą nazwę dnia dla określonego dnia tygodnia, która jest skojarzona z bieżącym <see cref="T:System.Globalization.DateTimeFormatInfo" /> obiektem.</summary>
        <returns>Skrócona nazwa tygodnia, która odnosi się do <paramref name="dayOfWeek" /> parametru.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład ilustruje kilka metod i właściwości, które określają wzorce formatu daty i godziny, nazwę kalendarza natywnego oraz pełne i skrócone nazwy miesiąca i dnia.  
  
 [!code-csharp[sys.glob.DTFI1#1](~/samples/snippets/csharp/VS_Snippets_CLR/sys.glob.DTFI1/cs/dtfi1.cs#1)]
 [!code-vb[sys.glob.DTFI1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/sys.glob.DTFI1/vb/dtfi1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="dayOfWeek" />nie jest wartością w <see cref="T:System.DayOfWeek" /> wyliczeniu.</exception>
      </Docs>
    </Member>
    <Member MemberName="InvariantInfo">
      <MemberSignature Language="C#" Value="public static System.Globalization.DateTimeFormatInfo InvariantInfo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Globalization.DateTimeFormatInfo InvariantInfo" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.DateTimeFormatInfo.InvariantInfo" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property InvariantInfo As DateTimeFormatInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Globalization::DateTimeFormatInfo ^ InvariantInfo { System::Globalization::DateTimeFormatInfo ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.InvariantInfo : System.Globalization.DateTimeFormatInfo" Usage="System.Globalization.DateTimeFormatInfo.InvariantInfo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.DateTimeFormatInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera domyślny obiekt tylko <see cref="T:System.Globalization.DateTimeFormatInfo" /> do odczytu, który jest niezależny od kultury (niezmienna).</summary>
        <value>Obiekt tylko do odczytu, który jest niezależny od kultury (niezmienna).</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość nie zmienia się, niezależnie od bieżącej kultury. Z tego względu <xref:System.Globalization.DateTimeFormatInfo> obiekt niezmiennej kultury może służyć do tworzenia spójnych, niezależnych od kultury wyników analizy i formatowania na danych, które są wielokulturowe. Na przykład, jeśli dane daty i godziny z wielu kultur mają być utrwalane w postaci ciągów, można je sformatować przy użyciu <xref:System.Globalization.DateTimeFormatInfo> obiektu niezmiennej kultury i zapisać. Następnie można ją analizować przy użyciu <xref:System.Globalization.DateTimeFormatInfo> obiektu niezmiennej kultury.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Globalization.CultureInfo.InvariantCulture" />
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.DateTimeFormatInfo.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsReadOnly : bool" Usage="System.Globalization.DateTimeFormatInfo.IsReadOnly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość wskazującą, <see cref="T:System.Globalization.DateTimeFormatInfo" /> czy obiekt jest tylko do odczytu.</summary>
        <value><see langword="true" />Jeśli obiekt jest tylko do odczytu; <see langword="false" />w przeciwnym razie. <see cref="T:System.Globalization.DateTimeFormatInfo" /></value>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Globalization.DateTimeFormatInfo.ReadOnly(System.Globalization.DateTimeFormatInfo)" />
      </Docs>
    </Member>
    <Member MemberName="LongDatePattern">
      <MemberSignature Language="C#" Value="public string LongDatePattern { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string LongDatePattern" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.DateTimeFormatInfo.LongDatePattern" />
      <MemberSignature Language="VB.NET" Value="Public Property LongDatePattern As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ LongDatePattern { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.LongDatePattern : string with get, set" Usage="System.Globalization.DateTimeFormatInfo.LongDatePattern" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia ciąg formatu niestandardowego dla wartości daty długiej.</summary>
        <value>Ciąg formatu niestandardowego dla wartości daty długiej.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Właściwość definiuje charakterystyczny dla kultury format ciągów dat, które są zwracane przez wywołania <xref:System.DateTime.ToString%2A?displayProperty=nameWithType> metod i <xref:System.DateTimeOffset.ToString%2A?displayProperty=nameWithType> i przez złożone ciągi formatujące, które mają ciąg formatu standardowego "D". <xref:System.Globalization.DateTimeFormatInfo.LongDatePattern%2A> Poniższy przykład ilustruje relacje między następującymi: ciąg formatu standardowego "D", ciąg formatu niestandardowego zwracany przez <xref:System.Globalization.DateTimeFormatInfo.LongDatePattern%2A> Właściwość oraz reprezentację daty specyficznej dla kultury.  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.LongDatePattern#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.LongDatePattern/CS/longdatepattern1.cs#2)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.LongDatePattern#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.LongDatePattern/VB/longdatepattern1.vb#2)]  
  
 Zobacz [Niestandardowe ciągi formatujące datę i godzinę](~/docs/standard/base-types/custom-date-and-time-format-strings.md) dla indywidualnych niestandardowych specyfikatorów formatu, które mogą być łączone do konstruowania ciągów formatów niestandardowych, takich jak "dddd, dd MMMM yyyy".  
  
 Należy ustawić Separator daty w wzorcu daty długiej na dokładny ciąg zamiast używać symbolu zastępczego separatora daty. Aby na przykład uzyskać wzorzec MM-DD-RRRR, ustaw wzorzec daty długiej na "MM-DD-RRRR".  
  
 Wartość tej właściwości może się zmienić, jeśli kalendarz używany przez kulturę ulegnie zmianie. Na przykład poniższy przykład pokazuje, jak <xref:System.Globalization.DateTimeFormatInfo.LongDatePattern%2A> Właściwość <xref:System.Globalization.CultureInfo> obiektu, który reprezentuje kulturę arabski (Syria) zmienia się, <xref:System.Globalization.Calendar> gdy obiekt używany przez kulturę ulega zmianie.  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.LongDatePattern#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.LongDatePattern/CS/longdatepattern2.cs#3)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.LongDatePattern#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.LongDatePattern/VB/longdatepattern2.vb#3)]  
  
   
  
## Examples  
 Poniższy przykład wyświetla wartość <xref:System.Globalization.DateTimeFormatInfo.LongDatePattern%2A> właściwości dla kilku kultur.  
  
 [!code-cpp[System.Globalization.DateTimeFormatInfo.LongDatePattern#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.LongDatePattern/CPP/dtfi_longdatepattern.cpp#1)]
 [!code-csharp[System.Globalization.DateTimeFormatInfo.LongDatePattern#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.LongDatePattern/CS/dtfi_longdatepattern.cs#1)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.LongDatePattern#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.LongDatePattern/VB/dtfi_longdatepattern.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Właściwość jest ustawiana na <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">Właściwość jest ustawiana i <see cref="T:System.Globalization.DateTimeFormatInfo" /> obiekt jest tylko do odczytu.</exception>
        <related type="Article" href="~/docs/standard/base-types/standard-date-and-time-format-strings.md">Standardowe ciągi formatujące datę i godzinę</related>
        <related type="Article" href="~/docs/standard/base-types/custom-date-and-time-format-strings.md">Niestandardowe ciągi formatujące datę i godzinę</related>
      </Docs>
    </Member>
    <Member MemberName="LongTimePattern">
      <MemberSignature Language="C#" Value="public string LongTimePattern { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string LongTimePattern" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.DateTimeFormatInfo.LongTimePattern" />
      <MemberSignature Language="VB.NET" Value="Public Property LongTimePattern As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ LongTimePattern { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.LongTimePattern : string with get, set" Usage="System.Globalization.DateTimeFormatInfo.LongTimePattern" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia niestandardowy ciąg formatu dla długiej wartości czasu.</summary>
        <value>Wzorzec formatu dla długiej wartości czasu.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Właściwość definiuje charakterystyczny dla kultury format ciągów dat, które są zwracane przez wywołania <xref:System.DateTime.ToString%2A?displayProperty=nameWithType> metod i <xref:System.DateTimeOffset.ToString%2A?displayProperty=nameWithType> i przez złożone ciągi formatujące, które mają ciąg formatu standardowego "T". <xref:System.Globalization.DateTimeFormatInfo.LongTimePattern%2A>  
  
 Zalecamy ustawienie separatora czasowego we wzorcu czasu długiego na dokładny ciąg zamiast używania symbolu zastępczego separatora czasu. Aby na przykład uzyskać wzorzec h-mm-SS, ustaw wzorzec daty długiej na "h-mm-SS".  
  
   
  
## Examples  
 Poniższy przykład wyświetla wartość <xref:System.Globalization.DateTimeFormatInfo.LongTimePattern%2A> dla kilku kultur.  
  
 [!code-cpp[System.Globalization.DateTimeFormatInfo.LongTimePattern#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.LongTimePattern/CPP/dtfi_longtimepattern.cpp#1)]
 [!code-csharp[System.Globalization.DateTimeFormatInfo.LongTimePattern#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.LongTimePattern/CS/dtfi_longtimepattern.cs#1)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.LongTimePattern#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.LongTimePattern/VB/dtfi_longtimepattern.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Właściwość jest ustawiana na <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">Właściwość jest ustawiana i <see cref="T:System.Globalization.DateTimeFormatInfo" /> obiekt jest tylko do odczytu.</exception>
        <related type="Article" href="~/docs/standard/base-types/standard-date-and-time-format-strings.md">Standardowe ciągi formatujące datę i godzinę</related>
        <related type="Article" href="~/docs/standard/base-types/custom-date-and-time-format-strings.md">Niestandardowe ciągi formatujące datę i godzinę</related>
      </Docs>
    </Member>
    <Member MemberName="MonthDayPattern">
      <MemberSignature Language="C#" Value="public string MonthDayPattern { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MonthDayPattern" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.DateTimeFormatInfo.MonthDayPattern" />
      <MemberSignature Language="VB.NET" Value="Public Property MonthDayPattern As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ MonthDayPattern { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.MonthDayPattern : string with get, set" Usage="System.Globalization.DateTimeFormatInfo.MonthDayPattern" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia niestandardowy ciąg formatu dla wartości miesiąca i dnia.</summary>
        <value>Ciąg formatu niestandardowego dla wartości miesiąca i dnia.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Właściwość definiuje charakterystyczny dla kultury format ciągów dat, które są zwracane przez wywołania <xref:System.DateTime.ToString%2A?displayProperty=nameWithType> metod i <xref:System.DateTimeOffset.ToString%2A?displayProperty=nameWithType> i przez ciągi formatu złożonego, które dostarczyły ciągi formatu standardowego "m" i "m". <xref:System.Globalization.DateTimeFormatInfo.MonthDayPattern%2A>  
  
 Ta właściwość jest zależna od tego, czy <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> wartość właściwości zostanie zmieniona.  
  
 Zalecamy ustawienie separatora daty w wzorcu miesiąca i dnia na dokładny ciąg zamiast przy użyciu symbolu zastępczego separatora daty. Aby na przykład uzyskać wzorzec MM-DD, ustaw wzorzec miesiąc i dzień na wartość "MM-DD".  
  
   
  
## Examples  
 Poniższy przykład wyświetla wartość <xref:System.Globalization.DateTimeFormatInfo.MonthDayPattern%2A> dla kilku kultur.  
  
 [!code-cpp[System.Globalization.DateTimeFormatInfo.MonthDayPattern#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.MonthDayPattern/CPP/dtfi_monthdaypattern.cpp#1)]
 [!code-csharp[System.Globalization.DateTimeFormatInfo.MonthDayPattern#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.MonthDayPattern/CS/dtfi_monthdaypattern.cs#1)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.MonthDayPattern#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.MonthDayPattern/VB/dtfi_monthdaypattern.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Właściwość jest ustawiana na <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">Właściwość jest ustawiana i <see cref="T:System.Globalization.DateTimeFormatInfo" /> obiekt jest tylko do odczytu.</exception>
        <related type="Article" href="~/docs/standard/base-types/standard-date-and-time-format-strings.md">Standardowe ciągi formatujące datę i godzinę</related>
        <related type="Article" href="~/docs/standard/base-types/custom-date-and-time-format-strings.md">Niestandardowe ciągi formatujące datę i godzinę</related>
      </Docs>
    </Member>
    <Member MemberName="MonthGenitiveNames">
      <MemberSignature Language="C#" Value="public string[] MonthGenitiveNames { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] MonthGenitiveNames" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.DateTimeFormatInfo.MonthGenitiveNames" />
      <MemberSignature Language="VB.NET" Value="Public Property MonthGenitiveNames As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::String ^&gt; ^ MonthGenitiveNames { cli::array &lt;System::String ^&gt; ^ get(); void set(cli::array &lt;System::String ^&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.MonthGenitiveNames : string[] with get, set" Usage="System.Globalization.DateTimeFormatInfo.MonthGenitiveNames" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia tablicę ciągów nazw miesięcy skojarzonych z bieżącym <see cref="T:System.Globalization.DateTimeFormatInfo" /> obiektem.</summary>
        <value>Tablica ciągów nazw miesięcy.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 W niektórych językach Nazwa miesiąca, która jest częścią daty, jest wyświetlana w genitive przypadku. Na przykład data w języku rosyjskim (Rosja) lub "ru-RU", kultura składa się z numeru dnia i nazwy miesiąca genitive, na przykład 1 Января.  
  
 Gdy ta właściwość jest ustawiona, Tablica musi być Jednowymiarowa i musi zawierać dokładnie 13 elementów. <xref:System.Globalization.Calendar>obiekty zamieścić kalendarze z 13 miesiącami. Pierwszy element (element w indeksie zero) reprezentuje pierwszy miesiąc roku zdefiniowany przez <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> właściwość. W przypadku ustawienia <xref:System.Globalization.DateTimeFormatInfo.MonthGenitiveNames%2A> właściwości należy również <xref:System.Globalization.DateTimeFormatInfo.MonthNames%2A> ustawić właściwość.  
  
   
  
## Examples  
 Poniższy przykład ilustruje kilka metod i właściwości, które określają wzorce formatu daty i godziny, nazwę kalendarza natywnego oraz pełne i skrócone nazwy miesiąca i dnia.  
  
 [!code-csharp[sys.glob.DTFI1#1](~/samples/snippets/csharp/VS_Snippets_CLR/sys.glob.DTFI1/cs/dtfi1.cs#1)]
 [!code-vb[sys.glob.DTFI1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/sys.glob.DTFI1/vb/dtfi1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">W operacji zestawu tablica jest wielowymiarowa lub ma długość, która nie jest dokładnie 13.</exception>
        <exception cref="T:System.ArgumentNullException">W operacji ustawiania tablica lub jeden z jej elementów <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">W operacji ustawiania bieżący <see cref="T:System.Globalization.DateTimeFormatInfo" /> obiekt jest tylko do odczytu.</exception>
        <altmember cref="P:System.Globalization.DateTimeFormatInfo.AbbreviatedMonthGenitiveNames" />
        <altmember cref="P:System.Globalization.DateTimeFormatInfo.MonthNames" />
        <altmember cref="P:System.Globalization.DateTimeFormatInfo.AbbreviatedMonthNames" />
      </Docs>
    </Member>
    <Member MemberName="MonthNames">
      <MemberSignature Language="C#" Value="public string[] MonthNames { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] MonthNames" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.DateTimeFormatInfo.MonthNames" />
      <MemberSignature Language="VB.NET" Value="Public Property MonthNames As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::String ^&gt; ^ MonthNames { cli::array &lt;System::String ^&gt; ^ get(); void set(cli::array &lt;System::String ^&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.MonthNames : string[] with get, set" Usage="System.Globalization.DateTimeFormatInfo.MonthNames" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia jednowymiarową tablicę typu <see cref="T:System.String" /> zawierającej pełne nazwy miesięcy charakterystyczne dla kultury.</summary>
        <value>Jednowymiarowa tablica typu <see cref="T:System.String" /> zawierająca pełne nazwy miesięcy, które są specyficzne dla kultury. W kalendarzu 12-miesięcznym element trzynasty tablicy jest pustym ciągiem. Tablica dla <see cref="P:System.Globalization.DateTimeFormatInfo.InvariantInfo" /> zawiera "Styczeń", "luty", "marzec", "Kwiecień", "maj", "czerwiec", "Lipiec", "sierpień", "wrzesień", "październik", "listopad", "Grudzień" i "".</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Gdy ta właściwość jest ustawiona, Tablica musi być Jednowymiarowa i musi zawierać dokładnie 13 elementów. <xref:System.Globalization.Calendar>obiekty zamieścić kalendarze z 13 miesiącami. Pierwszy element (element w indeksie zero) reprezentuje pierwszy miesiąc roku zdefiniowany przez <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> właściwość.  
  
 W przypadku ustawienia <xref:System.Globalization.DateTimeFormatInfo.MonthNames%2A> właściwości należy również <xref:System.Globalization.DateTimeFormatInfo.MonthGenitiveNames%2A> ustawić właściwość.  
  
 Jeśli wzorzec niestandardowy zawiera wzorzec formatu "MMMM", <xref:System.DateTime.ToString%2A?displayProperty=nameWithType> wyświetlana jest wartość zamiast <xref:System.Globalization.DateTimeFormatInfo.MonthNames%2A> "MMMM" we wzorcu formatu.  
  
 Ta właściwość jest zależna od tego, czy <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> wartość właściwości zostanie zmieniona.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Właściwość jest ustawiana na <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">Właściwość jest ustawiana na tablicę, która jest wielowymiarowa lub ma długość, która nie jest dokładnie 13.</exception>
        <exception cref="T:System.InvalidOperationException">Właściwość jest ustawiana i <see cref="T:System.Globalization.DateTimeFormatInfo" /> obiekt jest tylko do odczytu.</exception>
        <altmember cref="P:System.Globalization.DateTimeFormatInfo.AbbreviatedMonthNames" />
        <altmember cref="P:System.Globalization.DateTimeFormatInfo.MonthGenitiveNames" />
        <altmember cref="M:System.Globalization.DateTimeFormatInfo.GetMonthName(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="NativeCalendarName">
      <MemberSignature Language="C#" Value="public string NativeCalendarName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string NativeCalendarName" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.DateTimeFormatInfo.NativeCalendarName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NativeCalendarName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ NativeCalendarName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.NativeCalendarName : string" Usage="System.Globalization.DateTimeFormatInfo.NativeCalendarName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera natywną nazwę kalendarza skojarzonego z bieżącym <see cref="T:System.Globalization.DateTimeFormatInfo" /> obiektem.</summary>
        <value>Natywna Nazwa kalendarza użyta w kulturze skojarzonej z bieżącym <see cref="T:System.Globalization.DateTimeFormatInfo" /> obiektem, jeśli ta nazwa jest dostępna, lub pusty ciąg (""), jeśli nazwa kalendarza natywnego jest niedostępna.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład ilustruje kilka metod i właściwości, które określają wzorce formatu daty i godziny, nazwę kalendarza natywnego oraz pełne i skrócone nazwy miesiąca i dnia.  
  
 [!code-csharp[sys.glob.DTFI1#1](~/samples/snippets/csharp/VS_Snippets_CLR/sys.glob.DTFI1/cs/dtfi1.cs#1)]
 [!code-vb[sys.glob.DTFI1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/sys.glob.DTFI1/vb/dtfi1.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="usage"><para>Jeśli <see cref="P:System.Globalization.DateTimeFormatInfo.Calendar" /> <see cref="M:System.Globalization.DateTimeFormatInfo.GetAbbreviatedEraName(System.Int32)" /> jest, ale<see cref="P:System.Threading.Thread.CurrentCulture" /> nie jest "zh-TW",,izwracapustyciąg("").<see cref="M:System.Globalization.DateTimeFormatInfo.GetEraName(System.Int32)" /> <see cref="P:System.Globalization.DateTimeFormatInfo.NativeCalendarName" /> <see cref="T:System.Globalization.TaiwanCalendar" /></para></block>
      </Docs>
    </Member>
    <Member MemberName="PMDesignator">
      <MemberSignature Language="C#" Value="public string PMDesignator { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PMDesignator" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.DateTimeFormatInfo.PMDesignator" />
      <MemberSignature Language="VB.NET" Value="Public Property PMDesignator As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ PMDesignator { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.PMDesignator : string with get, set" Usage="System.Globalization.DateTimeFormatInfo.PMDesignator" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia oznaczenie ciągu dla godzin, które są "post meridiem" (po południu).</summary>
        <value>Oznaczenie ciągu dla godzin, które są "post meridiem" (po południu). Wartość domyślna dla <see cref="P:System.Globalization.DateTimeFormatInfo.InvariantInfo" /> to "PM".</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Globalization.DateTimeFormatInfo.PMDesignator%2A> Właściwość jest używana przez wszystkie czasy z 12:00:00 (południe) do 23:59:59.999.  
  
 Jeśli wzorzec niestandardowy zawiera wzorzec formatu "tt", a czas jest po południe, <xref:System.DateTime.ToString%2A?displayProperty=nameWithType> wyświetla wartość zamiast <xref:System.Globalization.DateTimeFormatInfo.PMDesignator%2A> "tt" we wzorcu formatu. Jeśli wzorzec niestandardowy zawiera wzorzec formatu "t", tylko pierwszy znak <xref:System.Globalization.DateTimeFormatInfo.PMDesignator%2A> jest wyświetlany. Twoja aplikacja powinna używać "tt" dla języków, dla których konieczne jest zachowanie rozróżnienia między AM i PM. Przykładem jest język japoński, dla którego oznaczenia AM i PM różnią się w drugim znaku, a nie w pierwszym znaku.  
  
 Dla kultur, które nie używają oznaczenia PM, ta właściwość zwraca pusty ciąg.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Właściwość jest ustawiana na <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">Właściwość jest ustawiana i <see cref="T:System.Globalization.DateTimeFormatInfo" /> obiekt jest tylko do odczytu.</exception>
        <altmember cref="P:System.Globalization.DateTimeFormatInfo.AMDesignator" />
      </Docs>
    </Member>
    <Member MemberName="ReadOnly">
      <MemberSignature Language="C#" Value="public static System.Globalization.DateTimeFormatInfo ReadOnly (System.Globalization.DateTimeFormatInfo dtfi);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Globalization.DateTimeFormatInfo ReadOnly(class System.Globalization.DateTimeFormatInfo dtfi) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.DateTimeFormatInfo.ReadOnly(System.Globalization.DateTimeFormatInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ReadOnly (dtfi As DateTimeFormatInfo) As DateTimeFormatInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Globalization::DateTimeFormatInfo ^ ReadOnly(System::Globalization::DateTimeFormatInfo ^ dtfi);" />
      <MemberSignature Language="F#" Value="static member ReadOnly : System.Globalization.DateTimeFormatInfo -&gt; System.Globalization.DateTimeFormatInfo" Usage="System.Globalization.DateTimeFormatInfo.ReadOnly dtfi" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Globalization.DateTimeFormatInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dtfi" Type="System.Globalization.DateTimeFormatInfo" />
      </Parameters>
      <Docs>
        <param name="dtfi">Obiekt <see cref="T:System.Globalization.DateTimeFormatInfo" /> , który ma być zawijany.</param>
        <summary>Zwraca otokę tylko <see cref="T:System.Globalization.DateTimeFormatInfo" /> do odczytu.</summary>
        <returns>Otoka tylko <see cref="T:System.Globalization.DateTimeFormatInfo" /> do odczytu.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta otoka zapobiega wszelkim `dtfi`modyfikacjom programu.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="dtfi" />jest <see langword="null" />.</exception>
        <altmember cref="M:System.Globalization.DateTimeFormatInfo.GetAllDateTimePatterns(System.Char)" />
      </Docs>
    </Member>
    <Member MemberName="RFC1123Pattern">
      <MemberSignature Language="C#" Value="public string RFC1123Pattern { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string RFC1123Pattern" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.DateTimeFormatInfo.RFC1123Pattern" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RFC1123Pattern As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ RFC1123Pattern { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.RFC1123Pattern : string" Usage="System.Globalization.DateTimeFormatInfo.RFC1123Pattern" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera niestandardowy ciąg formatu dla wartości czasu, która jest oparta na specyfikacji żądania RFC (Internet Engineering Task Force) dla programu Comments (IETF) 1123.</summary>
        <value>Ciąg formatu niestandardowego dla wartości czasu, który jest oparty na specyfikacji IETF RFC 1123.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Właściwość definiuje charakterystyczny dla kultury format ciągów dat, które są zwracane przez wywołania <xref:System.DateTime.ToString%2A?displayProperty=nameWithType> metod i <xref:System.DateTimeOffset.ToString%2A?displayProperty=nameWithType> i przez ciągi formatu złożonego, które mają ciągi formatu "r" i "r". <xref:System.Globalization.DateTimeFormatInfo.RFC1123Pattern%2A>  
  
 Wzorzec RFC1123 odzwierciedla zdefiniowaną Standard, a właściwość jest tylko do odczytu. W związku z tym jest zawsze taka sama, niezależnie od kultury. Ciąg formatu niestandardowego to „ddd, dd MMM yyyy HH':'mm':'ss 'GMT'”.  
  
   
  
## Examples  
 Poniższy przykład wyświetla wartość RFC1123Pattern dla kilku kultur.  
  
 [!code-cpp[System.Globalization.DateTimeFormatInfo.RFC1123Pattern#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.RFC1123Pattern/CPP/dtfi_rfc1123pattern.cpp#1)]
 [!code-csharp[System.Globalization.DateTimeFormatInfo.RFC1123Pattern#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.RFC1123Pattern/CS/dtfi_rfc1123pattern.cs#1)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.RFC1123Pattern#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.RFC1123Pattern/VB/dtfi_rfc1123pattern.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/base-types/standard-date-and-time-format-strings.md">Standardowe ciągi formatujące datę i godzinę</related>
        <related type="Article" href="~/docs/standard/base-types/custom-date-and-time-format-strings.md">Niestandardowe ciągi formatujące datę i godzinę</related>
      </Docs>
    </Member>
    <Member MemberName="SetAllDateTimePatterns">
      <MemberSignature Language="C#" Value="public void SetAllDateTimePatterns (string[] patterns, char format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetAllDateTimePatterns(string[] patterns, char format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.DateTimeFormatInfo.SetAllDateTimePatterns(System.String[],System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetAllDateTimePatterns (patterns As String(), format As Char)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetAllDateTimePatterns(cli::array &lt;System::String ^&gt; ^ patterns, char format);" />
      <MemberSignature Language="F#" Value="member this.SetAllDateTimePatterns : string[] * char -&gt; unit" Usage="dateTimeFormatInfo.SetAllDateTimePatterns (patterns, format)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="patterns" Type="System.String[]" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="format" Type="System.Char" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="patterns">Tablica ciągów formatów niestandardowych.</param>
        <param name="format">Ciąg formatu standardowego skojarzony z ciągami formatu niestandardowego określonym w <paramref name="patterns" /> parametrze.</param>
        <summary>Ustawia niestandardowe ciągi formatujące datę i godzinę odpowiadające określonemu ciągowi formatu standardowego.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Globalization.DateTimeFormatInfo.SetAllDateTimePatterns%2A> Metoda definiuje niestandardowe ciągi formatujące odnoszące się do określonego standardowego ciągu formatu daty i godziny. Jeśli wywołanie metody formatowania daty i godziny obejmuje standardowy ciąg formatu daty i godziny określony przez `format`, metoda używa pierwszego elementu `patterns` w tablicy do definiowania formatu ciągu będącego wynikiem.  
  
> [!WARNING]
>  Metody `Parse` `patterns` i `TryParse` nie wykonują w pełni iteracji wszystkich ciągów podczas analizowania ciągu reprezentującego datę i godzinę. Jeśli potrzebujesz ciągu daty i godziny dla określonych formatów operacji analizowania, należy <xref:System.DateTime.ParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=nameWithType>przekazać tablicę prawidłowych formatów do metody, <xref:System.DateTimeOffset.ParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=nameWithType>, <xref:System.DateTime.TryParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTime%40%29?displayProperty=nameWithType>lub <xref:System.DateTimeOffset.TryParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTimeOffset%40%29?displayProperty=nameWithType> .  
  
 Można zdefiniować niestandardowe ciągi formatujące odnoszące się do "d", "D", "t", "T" i "y" lub "Y" ciągów standardowego formatu daty i godziny. Jeśli wartość `format` jest dowolnego innego ciągu formatu standardowego <xref:System.Globalization.DateTimeFormatInfo.SetAllDateTimePatterns%2A> , metoda zgłasza <xref:System.ArgumentException>.  
  
 Jeśli niestandardowe ciągi formatu daty i godziny zawierają separatory dat, należy jawnie określić separator dat zamiast polegać na metodach analizy lub formatowania, które zastępują specyfikator formatu niestandardowego "/" z określonym separatorem daty. Aby na przykład uzyskać wzorzec MM-DD-RRRR, użyj wzorca "MM-DD-RRRR".  
  
   
  
## Examples  
 Poniższy przykład tworzy wystąpienie <xref:System.Globalization.CultureInfo> obiektu, który reprezentuje kulturę "en-us" (angielski-Stany Zjednoczone) i używa jej do analizowania tablicy ciągów daty i godziny przy użyciu standardowego ciągu formatu "Y". Następnie używa <xref:System.Globalization.DateTimeFormatInfo.SetAllDateTimePatterns%2A> metody do kojarzenia nowego ciągu formatu niestandardowego z ciągiem formatu standardowego "Y", a następnie próbuje przeanalizować tablicę ciągów daty i godziny. Dane wyjściowe z przykładu pokazują, że nowy ciąg formatu niestandardowego jest używany w operacjach analizowania i formatowania.  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.SetAllDateTimePatterns#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.setalldatetimepatterns/cs/setalldatetimepatterns.cs#1)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.SetAllDateTimePatterns#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.setalldatetimepatterns/vb/setalldatetimepatterns.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="patterns" />jest <see langword="null" /> lub tablicą o zerowej długości.  
  
—lub— 
 <paramref name="format" />nie jest prawidłowym ciągiem formatu standardowego lub jest ciągiem formatu standardowego, którego wzorce nie mogą być ustawione.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="patterns" />ma element Array, którego wartość to <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">Ten <see cref="T:System.Globalization.DateTimeFormatInfo" /> obiekt jest tylko do odczytu.</exception>
        <altmember cref="Overload:System.Globalization.DateTimeFormatInfo.GetAllDateTimePatterns" />
        <related type="Article" href="~/docs/standard/base-types/standard-date-and-time-format-strings.md">Standardowe ciągi formatujące datę i godzinę</related>
        <related type="Article" href="~/docs/standard/base-types/custom-date-and-time-format-strings.md">Niestandardowe ciągi formatujące datę i godzinę</related>
      </Docs>
    </Member>
    <Member MemberName="ShortDatePattern">
      <MemberSignature Language="C#" Value="public string ShortDatePattern { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ShortDatePattern" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.DateTimeFormatInfo.ShortDatePattern" />
      <MemberSignature Language="VB.NET" Value="Public Property ShortDatePattern As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ShortDatePattern { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ShortDatePattern : string with get, set" Usage="System.Globalization.DateTimeFormatInfo.ShortDatePattern" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia ciąg formatu niestandardowego dla krótkiej wartości daty.</summary>
        <value>Ciąg formatu niestandardowego dla krótkiej wartości daty.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Właściwość definiuje charakterystyczny dla kultury format ciągów dat, które są zwracane przez wywołania <xref:System.DateTime.ToString%2A?displayProperty=nameWithType> metod i <xref:System.DateTimeOffset.ToString%2A?displayProperty=nameWithType> i przez złożone ciągi formatujące, które mają ciąg formatu standardowego "d". <xref:System.Globalization.DateTimeFormatInfo.ShortDatePattern%2A>  
  
 Ta właściwość jest zależna od tego, czy <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> wartość właściwości zostanie zmieniona.  
  
   
  
## Examples  
 Poniższy przykład wyświetla wartość <xref:System.Globalization.DateTimeFormatInfo.ShortDatePattern%2A> właściwości i wartość daty sformatowanej <xref:System.Globalization.DateTimeFormatInfo.ShortDatePattern%2A> przy użyciu właściwości dla kilku kultur.  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.ShortDatePattern#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.ShortDatePattern/CS/dtfi_shortdatepattern.cs#1)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.ShortDatePattern#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.ShortDatePattern/VB/dtfi_shortdatepattern.vb#1)]  
  
 Poniższy przykład modyfikuje <xref:System.Globalization.DateTimeFormatInfo.ShortDatePattern%2A> Właściwość <xref:System.Globalization.DateTimeFormatInfo> obiektu, który reprezentuje konwencje formatowania kultury angielskiej (Stany Zjednoczone). Wyświetla również wartość daty dwa razy, najpierw aby odzwierciedlić oryginalną <xref:System.Globalization.DateTimeFormatInfo.ShortDatePattern%2A> właściwość, a następnie odzwierciedlić nową wartość właściwości.  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.ShortDatePattern#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.ShortDatePattern/CS/shortdatepattern1.cs#2)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.ShortDatePattern#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.ShortDatePattern/VB/shortdatepattern1.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Właściwość jest ustawiana na <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">Właściwość jest ustawiana i <see cref="T:System.Globalization.DateTimeFormatInfo" /> obiekt jest tylko do odczytu.</exception>
        <related type="Article" href="~/docs/standard/base-types/standard-date-and-time-format-strings.md">Standardowe ciągi formatujące datę i godzinę</related>
        <related type="Article" href="~/docs/standard/base-types/custom-date-and-time-format-strings.md">Niestandardowe ciągi formatujące datę i godzinę</related>
      </Docs>
    </Member>
    <Member MemberName="ShortestDayNames">
      <MemberSignature Language="C#" Value="public string[] ShortestDayNames { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] ShortestDayNames" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.DateTimeFormatInfo.ShortestDayNames" />
      <MemberSignature Language="VB.NET" Value="Public Property ShortestDayNames As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::String ^&gt; ^ ShortestDayNames { cli::array &lt;System::String ^&gt; ^ get(); void set(cli::array &lt;System::String ^&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ShortestDayNames : string[] with get, set" Usage="System.Globalization.DateTimeFormatInfo.ShortestDayNames" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia tablicę ciągów najkrótszych unikatowych nazw skróconych dni skojarzonych z bieżącym <see cref="T:System.Globalization.DateTimeFormatInfo" /> obiektem.</summary>
        <value>Tablica ciągów nazw dni.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład ilustruje kilka metod i właściwości, które określają wzorce formatu daty i godziny, nazwę kalendarza natywnego oraz pełne i skrócone nazwy miesiąca i dnia.  
  
 [!code-csharp[sys.glob.DTFI1#1](~/samples/snippets/csharp/VS_Snippets_CLR/sys.glob.DTFI1/cs/dtfi1.cs#1)]
 [!code-vb[sys.glob.DTFI1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/sys.glob.DTFI1/vb/dtfi1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">W operacji zestawu tablica nie zawiera dokładnie siedmiu elementów.</exception>
        <exception cref="T:System.ArgumentNullException">W operacji ustawiania tablica wartości lub jeden z elementów tablicy wartości to <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">W operacji ustawiania bieżący <see cref="T:System.Globalization.DateTimeFormatInfo" /> obiekt jest tylko do odczytu.</exception>
      </Docs>
    </Member>
    <Member MemberName="ShortTimePattern">
      <MemberSignature Language="C#" Value="public string ShortTimePattern { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ShortTimePattern" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.DateTimeFormatInfo.ShortTimePattern" />
      <MemberSignature Language="VB.NET" Value="Public Property ShortTimePattern As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ShortTimePattern { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ShortTimePattern : string with get, set" Usage="System.Globalization.DateTimeFormatInfo.ShortTimePattern" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia niestandardowy ciąg formatu dla wartości godziny krótkiej.</summary>
        <value>Ciąg formatu niestandardowego dla krótkiej wartości czasu.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Właściwość definiuje charakterystyczny dla kultury format ciągów dat, które są zwracane przez wywołania <xref:System.DateTime.ToString%2A?displayProperty=nameWithType> metod i <xref:System.DateTimeOffset.ToString%2A?displayProperty=nameWithType> i przez złożone ciągi formatujące, które mają ciąg formatu standardowego "t". <xref:System.Globalization.DateTimeFormatInfo.ShortTimePattern%2A>  
  
 Zalecamy ustawienie separatora czasowego we wzorcu czasu krótkiego na dokładny ciąg, a nie przy użyciu symbolu zastępczego separatora czasu. Aby na przykład uzyskać wzorzec h-mm-SS, ustaw wzorzec godziny krótkiej na "h-mm-SS".  
  
   
  
## Examples  
 Poniższy przykład wyświetla wartość <xref:System.Globalization.DateTimeFormatInfo.ShortTimePattern%2A> dla kilku kultur.  
  
 [!code-cpp[System.Globalization.DateTimeFormatInfo.ShortTimePattern#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.ShortTimePattern/CPP/dtfi_shorttimepattern.cpp#1)]
 [!code-csharp[System.Globalization.DateTimeFormatInfo.ShortTimePattern#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.ShortTimePattern/CS/dtfi_shorttimepattern.cs#1)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.ShortTimePattern#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.ShortTimePattern/VB/dtfi_shorttimepattern.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Właściwość jest ustawiana na <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">Właściwość jest ustawiana i <see cref="T:System.Globalization.DateTimeFormatInfo" /> obiekt jest tylko do odczytu.</exception>
        <related type="Article" href="~/docs/standard/base-types/standard-date-and-time-format-strings.md">Standardowe ciągi formatujące datę i godzinę</related>
        <related type="Article" href="~/docs/standard/base-types/custom-date-and-time-format-strings.md">Niestandardowe ciągi formatujące datę i godzinę</related>
      </Docs>
    </Member>
    <Member MemberName="SortableDateTimePattern">
      <MemberSignature Language="C#" Value="public string SortableDateTimePattern { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SortableDateTimePattern" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.DateTimeFormatInfo.SortableDateTimePattern" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SortableDateTimePattern As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SortableDateTimePattern { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SortableDateTimePattern : string" Usage="System.Globalization.DateTimeFormatInfo.SortableDateTimePattern" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera niestandardowy ciąg formatu dla wartości daty i godziny sortowania.</summary>
        <value>Ciąg formatu niestandardowego na potrzeby sortowania wartości daty i godziny.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Właściwość definiuje charakterystyczny dla kultury format ciągów dat, które są zwracane przez wywołania <xref:System.DateTime.ToString%2A?displayProperty=nameWithType> metod i <xref:System.DateTimeOffset.ToString%2A?displayProperty=nameWithType> i przez złożone ciągi formatujące, które dostarczyły ciąg formatu standardowego "s". <xref:System.Globalization.DateTimeFormatInfo.SortableDateTimePattern%2A>  
  
 Ciąg formatu zwracany przez <xref:System.Globalization.DateTimeFormatInfo.SortableDateTimePattern%2A> właściwość odzwierciedla zdefiniowany standard (ISO 8601), a właściwość jest tylko do odczytu. W związku z tym jest zawsze taka sama, niezależnie od kultury. Ciąg formatu niestandardowego to „yyyy'-'MM'-'dd'T'HH':'mm':'ss”.  
  
   
  
## Examples  
 Poniższy przykład wyświetla wartość <xref:System.Globalization.DateTimeFormatInfo.SortableDateTimePattern%2A> dla kilku kultur.  
  
 [!code-cpp[System.Globalization.DateTimeFormatInfo.SortableDateTimePattern#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.SortableDateTimePattern/CPP/dtfi_sortabledatetimepattern.cpp#1)]
 [!code-csharp[System.Globalization.DateTimeFormatInfo.SortableDateTimePattern#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.SortableDateTimePattern/CS/dtfi_sortabledatetimepattern.cs#1)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.SortableDateTimePattern#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.SortableDateTimePattern/VB/dtfi_sortabledatetimepattern.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Globalization.DateTimeFormatInfo.UniversalSortableDateTimePattern" />
        <related type="Article" href="~/docs/standard/base-types/standard-date-and-time-format-strings.md">Standardowe ciągi formatujące datę i godzinę</related>
        <related type="Article" href="~/docs/standard/base-types/custom-date-and-time-format-strings.md">Niestandardowe ciągi formatujące datę i godzinę</related>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.Serialization.ISerializable.GetObjectData">
      <MemberSignature Language="C#" Value="void ISerializable.GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.Serialization.ISerializable.GetObjectData(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.DateTimeFormatInfo.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Sub GetObjectData (info As SerializationInfo, context As StreamingContext) Implements ISerializable.GetObjectData" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.Serialization.ISerializable.GetObjectData(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context) = System::Runtime::Serialization::ISerializable::GetObjectData;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" Index="0" FrameworkAlternate="netframework-1.1" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" Index="1" FrameworkAlternate="netframework-1.1" />
      </Parameters>
      <Docs>
        <param name="info">To be added.</param>
        <param name="context">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TimeSeparator">
      <MemberSignature Language="C#" Value="public string TimeSeparator { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TimeSeparator" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.DateTimeFormatInfo.TimeSeparator" />
      <MemberSignature Language="VB.NET" Value="Public Property TimeSeparator As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ TimeSeparator { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.TimeSeparator : string with get, set" Usage="System.Globalization.DateTimeFormatInfo.TimeSeparator" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia ciąg oddzielający składniki czasu, czyli godzinę, minuty i sekundy.</summary>
        <value>Ciąg oddzielający składniki czasu. Wartość domyślna dla <see cref="P:System.Globalization.DateTimeFormatInfo.InvariantInfo" /> to ":".</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli wzorzec niestandardowy zawiera wzorzec formatu ":", <xref:System.DateTime.ToString%2A?displayProperty=nameWithType> wyświetla wartość zamiast <xref:System.Globalization.DateTimeFormatInfo.TimeSeparator%2A> ":" we wzorcu formatu.  
  
 Separator czasu jest wyprowadzany na podstawie <xref:System.Globalization.DateTimeFormatInfo.ShortTimePattern%2A> właściwości. Zalecamy ustawienie separatora czasu w wzorcach krótkich lub długich czasu na dokładny ciąg, a nie za pomocą symbolu zastępczego separatora czasu. Aby na przykład uzyskać wzorzec h-mm-SS, ustaw wzorzec na wartość "h-mm-SS". To rozwiązanie umożliwia również ustawienie wzorców, takich jak "h'h" mm "SS" (3H 36m 12s), które zawierają wiele typów separatorów. <xref:System.Globalization.DateTimeFormatInfo.TimeSeparator%2A> Właściwość definiuje ciąg, który zastępuje separator czasu (":" niestandardowy specyfikator formatu daty i godziny) w ciągu wynikowym w operacji formatowania. Definiuje również ciąg separatora czasu w operacji analizowania.  
  
   
  
## Examples  
 Poniższy przykład tworzy wystąpienie <xref:System.Globalization.CultureInfo> obiektu dla kultury en-us, zmienia jego separator daty na "." i wyświetla datę przy użyciu ciągów formatu standardowego "t", "t", "f", "f", "g" i "g".  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.TimeSeparator#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.timeseparator/cs/timeseparatorex.cs#1)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.TimeSeparator#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.timeseparator/vb/timeseparatorex.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Właściwość jest ustawiana na <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">Właściwość jest ustawiana i <see cref="T:System.Globalization.DateTimeFormatInfo" /> obiekt jest tylko do odczytu.</exception>
        <altmember cref="P:System.Globalization.DateTimeFormatInfo.DateSeparator" />
        <related type="Article" href="~/docs/standard/base-types/custom-date-and-time-format-strings.md">Niestandardowe ciągi formatujące datę i godzinę</related>
        <related type="Article" href="~/docs/standard/base-types/standard-date-and-time-format-strings.md">Standardowe ciągi formatujące datę i godzinę</related>
      </Docs>
    </Member>
    <Member MemberName="UniversalSortableDateTimePattern">
      <MemberSignature Language="C#" Value="public string UniversalSortableDateTimePattern { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UniversalSortableDateTimePattern" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.DateTimeFormatInfo.UniversalSortableDateTimePattern" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UniversalSortableDateTimePattern As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ UniversalSortableDateTimePattern { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.UniversalSortableDateTimePattern : string" Usage="System.Globalization.DateTimeFormatInfo.UniversalSortableDateTimePattern" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera niestandardowy ciąg formatu dla uniwersalnego, sortowanego ciągu daty i godziny, zgodnie z definicją ISO 8601.</summary>
        <value>Ciąg formatu niestandardowego dla uniwersalnego, do sortowania ciągu daty i godziny.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Właściwość definiuje format ciągów dat, które są zwracane przez wywołania <xref:System.DateTime.ToString%2A?displayProperty=nameWithType> metod i <xref:System.DateTimeOffset.ToString%2A?displayProperty=nameWithType> oraz ciągów formatu złożonego, które są dostarczane z ciągiem formatu standardowego "u". <xref:System.Globalization.DateTimeFormatInfo.UniversalSortableDateTimePattern%2A> Może służyć do wyświetlania dat i godzin w kolejności sortowania przy użyciu uniwersalnego określenia czasu "Z" na końcu. Format jest sortowany, ponieważ używa wiodących zer dla roku, miesiąca, dnia, godziny, minuty i sekundy. Ciąg formatu niestandardowego ("yyyy'-'MM'-'dd HH": "mm": "ss'Z" ") jest taki sam, niezależnie od dostawcy kultury lub formatu.  
  
 Ciąg formatu zwracany przez <xref:System.Globalization.DateTimeFormatInfo.UniversalSortableDateTimePattern%2A> właściwość odzwierciedla zdefiniowaną Standard, a właściwość jest tylko do odczytu. W związku z tym jest zawsze taka sama, niezależnie od kultury. Ciąg formatu niestandardowego to „yyyy'-'MM'-'dd HH':'mm':'ss'Z'”.  
  
   
  
## Examples  
 Poniższy przykład wyświetla wartość <xref:System.Globalization.DateTimeFormatInfo.UniversalSortableDateTimePattern%2A> dla kilku kultur.  
  
 [!code-cpp[System.Globalization.DateTimeFormatInfo.UniversalSortableDateTimePattern#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.UniversalSortableDateTimePattern/CPP/dtfi_universalsortabledatetimepattern.cpp#1)]
 [!code-csharp[System.Globalization.DateTimeFormatInfo.UniversalSortableDateTimePattern#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.UniversalSortableDateTimePattern/CS/dtfi_universalsortabledatetimepattern.cs#1)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.UniversalSortableDateTimePattern#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.UniversalSortableDateTimePattern/VB/dtfi_universalsortabledatetimepattern.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Globalization.DateTimeFormatInfo.SortableDateTimePattern" />
        <related type="Article" href="~/docs/standard/base-types/standard-date-and-time-format-strings.md">Standardowe ciągi formatujące DateTime</related>
        <related type="Article" href="~/docs/standard/base-types/custom-date-and-time-format-strings.md">Niestandardowe ciągi formatujące datę i godzinę</related>
      </Docs>
    </Member>
    <Member MemberName="YearMonthPattern">
      <MemberSignature Language="C#" Value="public string YearMonthPattern { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string YearMonthPattern" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.DateTimeFormatInfo.YearMonthPattern" />
      <MemberSignature Language="VB.NET" Value="Public Property YearMonthPattern As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ YearMonthPattern { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.YearMonthPattern : string with get, set" Usage="System.Globalization.DateTimeFormatInfo.YearMonthPattern" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia niestandardowy ciąg formatu dla wartości roku i miesiąca.</summary>
        <value>Ciąg formatu niestandardowego dla wartości roku i miesiąca.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Właściwość definiuje charakterystyczny dla kultury format ciągów dat, które są zwracane przez wywołania <xref:System.DateTime.ToString%2A?displayProperty=nameWithType> metod i <xref:System.DateTimeOffset.ToString%2A?displayProperty=nameWithType> i przez ciągi formatu złożonego, które są dostarczane z ciągów formatu standardowego "y" i "y". <xref:System.Globalization.DateTimeFormatInfo.YearMonthPattern%2A>  
  
 Ta właściwość jest zależna od tego, czy <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> wartość właściwości zostanie zmieniona.  
  
 Zalecamy ustawienie separatora daty w wzorcu miesiąca roku na dokładny ciąg zamiast przy użyciu symbolu zastępczego separatora daty. Na przykład aby uzyskać wzorzec MM-RRRR, ustaw wzorzec miesiąca rok na wartość "MM-RRRR".  
  
   
  
## Examples  
 Poniższy przykład wyświetla wartość <xref:System.Globalization.DateTimeFormatInfo.YearMonthPattern%2A> dla kilku kultur.  
  
 [!code-cpp[System.Globalization.DateTimeFormatInfo.YearMonthPattern#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.YearMonthPattern/CPP/dtfi_yearmonthpattern.cpp#1)]
 [!code-csharp[System.Globalization.DateTimeFormatInfo.YearMonthPattern#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.YearMonthPattern/CS/dtfi_yearmonthpattern.cs#1)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.YearMonthPattern#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.YearMonthPattern/VB/dtfi_yearmonthpattern.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Właściwość jest ustawiana na <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">Właściwość jest ustawiana i <see cref="T:System.Globalization.DateTimeFormatInfo" /> obiekt jest tylko do odczytu.</exception>
        <related type="Article" href="~/docs/standard/base-types/standard-date-and-time-format-strings.md">Standardowe ciągi formatujące datę i godzinę</related>
        <related type="Article" href="~/docs/standard/base-types/custom-date-and-time-format-strings.md">Niestandardowe ciągi formatujące datę i godzinę</related>
      </Docs>
    </Member>
  </Members>
</Type>
