<Type Name="HijriCalendar" FullName="System.Globalization.HijriCalendar">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="b5d9fd0bf81e9f98cc88ab5e46b5c3bf9da67f4b" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30452760" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class HijriCalendar : System.Globalization.Calendar" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit HijriCalendar extends System.Globalization.Calendar" />
  <TypeSignature Language="DocId" Value="T:System.Globalization.HijriCalendar" />
  <TypeSignature Language="VB.NET" Value="Public Class HijriCalendar&#xA;Inherits Calendar" />
  <TypeSignature Language="C++ CLI" Value="public ref class HijriCalendar : System::Globalization::Calendar" />
  <AssemblyInfo>
    <AssemblyName>System.Globalization.Calendars</AssemblyName>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Globalization.Calendar</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Reprezentuje kalendarza Hijri.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Kalendarza Hijri rozpoznaje jeden era: A.H. (Łaciński "roku Hegirae", co oznacza "roku migracji" w odniesieniu do migracji z Muhammad (PBUH) z Mecca).  
  
> [!NOTE]
>  Aby uzyskać informacje o korzystaniu z <xref:System.Globalization.HijriCalendar> klasy, a druga kalendarza klas w programie .NET Framework, zobacz [Praca z kalendarzami](~/docs/standard/datetime/working-with-calendars.md).  
  
 W cyklu co 30 lat kończy rok, który jest podzielna przez 30, 2, 5., 7, 10, 13, 16, 18, 21, 24th 26 i 29 lat są przestępnego. Typowe roku ma 354 dni i roku przestępnego ma 355 dni.  
  
 Kalendarza Hijri ma 12 miesięcy z 29 do 30 dni:  
  
|GetMonth wartość|Miesiąc|Dni w typowych lat.|Liczba dni w roku leap|  
|--------------------|-----------|--------------------------|------------------------|  
|1|محرم (Muharram)|30|30|  
|2|صفر (Safar)|29|29|  
|3|‏ربيع الاول (Rabi I)|30|30|  
|4|‏ربيع الثاني (Rabi II)|29|29|  
|5|جمادى الاولى (Jumada I)|30|30|  
|6|جمادى الثانية (Jumada II)|29|29|  
|7|رجب (Rajab)|30|30|  
|8|شعبان (Shaban)|29|29|  
|9|رمضان (Ramadan)|30|30|  
|10|شوال (Shawwal)|29|29|  
|11|ذو القعدة (Zulkadah)|30|30|  
|12|ذو الحجة (Zulhijjah)|29|30|  
  
 Ramadan, miesiąc niekarmienie w świecie Muslim oficjalnie początek i koniec zgodnie z dekretem, który jest oparty na obserwacji ów. W związku z tym liczbę dni w Shaban i liczbę dni w Ramadan różnią się.  
  
 Data 1 stycznia, 2001 r. N.E. w kalendarza gregoriańskiego jest w przybliżeniu do szóstego dnia Shawwal w A.H. 1421 roku w kalendarza Hijri.  
  
 Ta implementacja <xref:System.Globalization.HijriCalendar> klasy dopasowuje datę w kalendarzu przez dodanie lub odjęcie wartości od 0 do dwóch dni, aby pomieścić wariancje początek i koniec Ramadan i aby pomieścić różnicę daty krajów i regionów. Czy wartość jest przechowywana w <xref:System.Globalization.HijriCalendar.HijriAdjustment%2A> właściwości. Jeśli <xref:System.Globalization.HijriCalendar.HijriAdjustment%2A> nie jest ustawiona, jawnie, jego wartość jest pochodną ustawienia w części Opcje regionalne i językowe w Panelu sterowania i jest przechowywany w wartości rejestru HKEY_CURRENT_USER\Control Panel\International\AddHijriDate. Jednak te informacje można zmienić podczas trwania <xref:System.AppDomain>. <xref:System.Globalization.HijriCalendar> Klasa nie wykrywa zmian w ustawieniach systemu automatycznie.  
  
 Każdy <xref:System.Globalization.CultureInfo> obsługuje zestaw kalendarzy. <xref:System.Globalization.CultureInfo.Calendar%2A> Właściwość zwraca kalendarz domyślny dla kultury i <xref:System.Globalization.CultureInfo.OptionalCalendars%2A> właściwość zwraca tablicę zawierającą wszystkie kalendarze obsługiwane przez kultury. Aby zmienić kalendarza używanego przez <xref:System.Globalization.CultureInfo>, aplikacji należy ustawić <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> właściwość <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType> na nowy <xref:System.Globalization.Calendar>.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Globalization.Calendar" />
    <altmember cref="P:System.Globalization.CultureInfo.Calendar" />
    <altmember cref="P:System.Globalization.CultureInfo.OptionalCalendars" />
    <altmember cref="T:System.Globalization.UmAlQuraCalendar" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HijriCalendar ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.HijriCalendar.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HijriCalendar();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Globalization.HijriCalendar" /> klasy.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddMonths">
      <MemberSignature Language="C#" Value="public override DateTime AddMonths (DateTime time, int months);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.DateTime AddMonths(valuetype System.DateTime time, int32 months) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.HijriCalendar.AddMonths(System.DateTime,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function AddMonths (time As DateTime, months As Integer) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override DateTime AddMonths(DateTime time, int months);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
        <Parameter Name="months" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="time">
          <see cref="T:System.DateTime" /> Do miesięcy do dodania.</param>
        <param name="months">Liczba miesięcy do dodania.</param>
        <summary>Zwraca <see cref="T:System.DateTime" /> czyli określoną liczbę miesięcy od określonego <see cref="T:System.DateTime" />.</summary>
        <returns>
          <see cref="T:System.DateTime" /> Który wynikiem Dodawanie określoną liczbę miesięcy do określonego <see cref="T:System.DateTime" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Część dnia powstałe w ten sposób <xref:System.DateTime> jest wpływ na wynikowy dzień nie jest prawidłowym dniem w wynikowej miesiąc roku wynikowy. Ostatni dzień prawidłowy wynikowy miesiąc roku wynikowy jest zmieniana. Część roku powstałe w ten sposób <xref:System.DateTime> działa na miesiąc wynikowa znajduje się poza rok określonego <xref:System.DateTime>. Ta implementacja obsługuje tylko bieżącej ery. W związku z tym <xref:System.ArgumentException> jest generowany, jeśli roku wynikowa znajduje się poza ery określonego <xref:System.DateTime>. Część czasu dnia powstałe w ten sposób <xref:System.DateTime> pozostaje taki sam jak określony <xref:System.DateTime>.  
  
 Na przykład w przypadku określonego miesiąca Zulkadah, która ma 30 dni, określony dzień jest 30 dzień tego miesiąca i wartość `months` parametru wynosi 3, wynikowy roku jest jednym więcej niż określony rok, miesiąc wynikowy jest Safar, a wynikowy d Ay jest dnia 29, który jest ostatnim dniem Safar.  
  
 Jeśli wartość `months` parametru jest ujemna, powstałe w ten sposób <xref:System.DateTime> jest starsza niż określony <xref:System.DateTime>.  
  
 <xref:System.DateTime.Kind%2A> Właściwości zwracana <xref:System.DateTime> zawsze wartość to <xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>. Można zachować <xref:System.DateTime.Kind%2A> właściwość `time` parametru przez wywołanie metody <xref:System.DateTime.SpecifyKind%2A?displayProperty=nameWithType> metody, jak przedstawiono na poniższym przykładzie.  
  
 [!code-csharp[System.Globalization.Calendar.AddMethods#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.calendar.addmethods/cs/add1.cs#5)]
 [!code-vb[System.Globalization.Calendar.AddMethods#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.calendar.addmethods/vb/add1.vb#5)]  
  
   
  
## Examples  
 Poniższy przykład kodu wyświetla wartości z kilku składników <xref:System.DateTime> pod względem kalendarza Hijri.  
  
 [!code-cpp[System.Globalization.HijriCalendar_AddGet#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.HijriCalendar_AddGet/CPP/hijricalendar_addget.cpp#1)]
 [!code-csharp[System.Globalization.HijriCalendar_AddGet#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.HijriCalendar_AddGet/CS/hijricalendar_addget.cs#1)]
 [!code-vb[System.Globalization.HijriCalendar_AddGet#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.HijriCalendar_AddGet/VB/hijricalendar_addget.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Powstałe w ten sposób <see cref="T:System.DateTime" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="months" /> jest mniejsza niż-120000.  
  
 —lub—  
  
 <paramref name="months" /> jest większe niż 120000.</exception>
        <altmember cref="T:System.DateTime" />
        <altmember cref="M:System.Globalization.HijriCalendar.AddYears(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddWeeks(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddDays(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddHours(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddMinutes(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddSeconds(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddMilliseconds(System.DateTime,System.Double)" />
      </Docs>
    </Member>
    <Member MemberName="AddYears">
      <MemberSignature Language="C#" Value="public override DateTime AddYears (DateTime time, int years);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.DateTime AddYears(valuetype System.DateTime time, int32 years) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.HijriCalendar.AddYears(System.DateTime,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function AddYears (time As DateTime, years As Integer) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override DateTime AddYears(DateTime time, int years);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
        <Parameter Name="years" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="time">
          <see cref="T:System.DateTime" /> Do lat do dodania.</param>
        <param name="years">Liczba lat do dodania.</param>
        <summary>Zwraca <see cref="T:System.DateTime" /> czyli określoną liczbę lat od określonego <see cref="T:System.DateTime" />.</summary>
        <returns>
          <see cref="T:System.DateTime" /> Który wynikiem Dodawanie określoną liczbę lat do określonego <see cref="T:System.DateTime" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Część dnia powstałe w ten sposób <xref:System.DateTime> jest wpływ na wynikowy dzień nie jest prawidłowym dniem w wynikowej miesiąc roku wynikowy. Ostatni dzień prawidłowy wynikowy miesiąc roku wynikowy jest zmieniana. Część miesiąca powstałe w ten sposób <xref:System.DateTime> pozostaje taki sam jak określony <xref:System.DateTime>. Ta implementacja obsługuje tylko bieżącej ery. W związku z tym <xref:System.ArgumentException> jest generowany, jeśli roku wynikowa znajduje się poza ery określonego <xref:System.DateTime>. Część czasu dnia powstałe w ten sposób <xref:System.DateTime> pozostaje taki sam jak określony <xref:System.DateTime>.  
  
 Na przykład Zulhijjah ma 29 dni, z wyjątkiem podczas przestępnego, gdy posiada 30 dni. Jeśli określona data jest w dniu 30 Zulhijjah w roku przestępnym i wartość `years` 1, Data wynikowy będzie dnia 29 Zulhijjah w następnym roku.  
  
 Jeśli `years` jest ujemna, powstałe w ten sposób <xref:System.DateTime> jest starsza niż określony <xref:System.DateTime>.  
  
 <xref:System.DateTime.Kind%2A> Właściwości zwracana <xref:System.DateTime> zawsze wartość to <xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>. Można zachować <xref:System.DateTime.Kind%2A> właściwość `time` parametru przez wywołanie metody <xref:System.DateTime.SpecifyKind%2A?displayProperty=nameWithType> metody, jak przedstawiono na poniższym przykładzie.  
  
 [!code-csharp[System.Globalization.Calendar.AddMethods#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.calendar.addmethods/cs/add1.cs#8)]
 [!code-vb[System.Globalization.Calendar.AddMethods#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.calendar.addmethods/vb/add1.vb#8)]  
  
   
  
## Examples  
 Poniższy przykład kodu wyświetla wartości z kilku składników <xref:System.DateTime> pod względem kalendarza Hijri.  
  
 [!code-cpp[System.Globalization.HijriCalendar_AddGet#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.HijriCalendar_AddGet/CPP/hijricalendar_addget.cpp#1)]
 [!code-csharp[System.Globalization.HijriCalendar_AddGet#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.HijriCalendar_AddGet/CS/hijricalendar_addget.cs#1)]
 [!code-vb[System.Globalization.HijriCalendar_AddGet#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.HijriCalendar_AddGet/VB/hijricalendar_addget.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Powstałe w ten sposób <see cref="T:System.DateTime" /> jest poza obsługiwanym zakresem.</exception>
        <altmember cref="T:System.DateTime" />
        <altmember cref="M:System.Globalization.HijriCalendar.AddMonths(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddWeeks(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddDays(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddHours(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddMinutes(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddSeconds(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddMilliseconds(System.DateTime,System.Double)" />
      </Docs>
    </Member>
    <Member MemberName="AlgorithmType">
      <MemberSignature Language="C#" Value="public override System.Globalization.CalendarAlgorithmType AlgorithmType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Globalization.CalendarAlgorithmType AlgorithmType" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.HijriCalendar.AlgorithmType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property AlgorithmType As CalendarAlgorithmType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Globalization::CalendarAlgorithmType AlgorithmType { System::Globalization::CalendarAlgorithmType get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Globalization.CalendarAlgorithmType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość wskazującą, czy bieżącego kalendarza jest oparta na słonecznego, księżycowy na podstawie lub obie te grupy.</summary>
        <value>Zawsze zwraca <see cref="F:System.Globalization.CalendarAlgorithmType.LunarCalendar" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 W poniższym przykładzie użyto odbicia do każdego wystąpienia <xref:System.Globalization.Calendar> typu znalezione w programie .NET Framework i wyświetla wartość jego <xref:System.Globalization.Calendar.AlgorithmType%2A> właściwości.  
  
 [!code-csharp[System.Globalization.Calendar.AlgorithmType#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.calendar.algorithmtype/cs/algorithmtype1.cs#1)]
 [!code-vb[System.Globalization.Calendar.AlgorithmType#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.calendar.algorithmtype/vb/algorithmtype1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DaysInYearBeforeMinSupportedYear">
      <MemberSignature Language="C#" Value="protected override int DaysInYearBeforeMinSupportedYear { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 DaysInYearBeforeMinSupportedYear" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.HijriCalendar.DaysInYearBeforeMinSupportedYear" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property DaysInYearBeforeMinSupportedYear As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property int DaysInYearBeforeMinSupportedYear { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera liczbę dni w roku poprzedzającym rok, w którym jest określona przez <see cref="P:System.Globalization.HijriCalendar.MinSupportedDateTime" /> właściwości.</summary>
        <value>Liczba dni w roku poprzedzającym roku określony przez <see cref="P:System.Globalization.HijriCalendar.MinSupportedDateTime" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość zwraca wartość stałą 354.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Eras">
      <MemberSignature Language="C#" Value="public override int[] Eras { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32[] Eras" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.HijriCalendar.Eras" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Eras As Integer()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property cli::array &lt;int&gt; ^ Eras { cli::array &lt;int&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera listę Arial w <see cref="T:System.Globalization.HijriCalendar" />.</summary>
        <value>Tablica liczb całkowitych, które reprezentuje Arial w <see cref="T:System.Globalization.HijriCalendar" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Kalendarza Hijri rozpoznaje jeden era: A.H. (Łaciński "roku Hegirae", co oznacza "roku migracji" w odniesieniu do migracji z Muhammad (PBUH) z Mecca). Ta właściwość zawsze zwraca tablicę z tylko jednego elementu.  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Globalization.Calendar.CurrentEra" />
        <altmember cref="F:System.Globalization.HijriCalendar.HijriEra" />
      </Docs>
    </Member>
    <Member MemberName="GetDayOfMonth">
      <MemberSignature Language="C#" Value="public override int GetDayOfMonth (DateTime time);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetDayOfMonth(valuetype System.DateTime time) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.HijriCalendar.GetDayOfMonth(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetDayOfMonth (time As DateTime) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetDayOfMonth(DateTime time);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="time">
          <see cref="T:System.DateTime" /> Do odczytu.</param>
        <summary>Zwraca dzień miesiąca w określonym <see cref="T:System.DateTime" />.</summary>
        <returns>Liczba całkowita z zakresu od 1 do 30 reprezentującą dzień miesiąca w określonym <see cref="T:System.DateTime" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład kodu wyświetla wartości z kilku składników <xref:System.DateTime> pod względem kalendarza Hijri.  
  
 [!code-cpp[System.Globalization.HijriCalendar_AddGet#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.HijriCalendar_AddGet/CPP/hijricalendar_addget.cpp#1)]
 [!code-csharp[System.Globalization.HijriCalendar_AddGet#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.HijriCalendar_AddGet/CS/hijricalendar_addget.cs#1)]
 [!code-vb[System.Globalization.HijriCalendar_AddGet#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.HijriCalendar_AddGet/VB/hijricalendar_addget.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.DateTime.Day" />
        <altmember cref="M:System.Globalization.HijriCalendar.GetEra(System.DateTime)" />
        <altmember cref="M:System.Globalization.HijriCalendar.GetYear(System.DateTime)" />
        <altmember cref="M:System.Globalization.HijriCalendar.GetMonth(System.DateTime)" />
        <altmember cref="M:System.Globalization.HijriCalendar.GetDayOfYear(System.DateTime)" />
        <altmember cref="M:System.Globalization.HijriCalendar.GetDayOfWeek(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetWeekOfYear(System.DateTime,System.Globalization.CalendarWeekRule,System.DayOfWeek)" />
      </Docs>
    </Member>
    <Member MemberName="GetDayOfWeek">
      <MemberSignature Language="C#" Value="public override DayOfWeek GetDayOfWeek (DateTime time);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.DayOfWeek GetDayOfWeek(valuetype System.DateTime time) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.HijriCalendar.GetDayOfWeek(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetDayOfWeek (time As DateTime) As DayOfWeek" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override DayOfWeek GetDayOfWeek(DateTime time);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DayOfWeek</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="time">
          <see cref="T:System.DateTime" /> Do odczytu.</param>
        <summary>Zwraca dzień tygodnia w określonym <see cref="T:System.DateTime" />.</summary>
        <returns>A <see cref="T:System.DayOfWeek" /> wartość reprezentującą dzień tygodnia w określonym <see cref="T:System.DateTime" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.DayOfWeek> Wartości są następujące:  
  
|Wartość DayOfWeek|co oznacza|  
|---------------------|---------------------|  
|Niedziela|الاحد (Al Ahad)|  
|Poniedziałek|الاثنين (Al Ithnayn)|  
|Wtorek|الثلاثاء (At-Thulaathaa')|  
|Środa|الاربعاء (Al-Arbi'aa')|  
|Czwartek|الخميس (Al-Khamiis)|  
|Piątek|الجمعة (Al Jumu'ah)|  
|Sobota|السبت (jako Sabt)|  
  
   
  
## Examples  
 Poniższy przykład kodu wyświetla wartości z kilku składników <xref:System.DateTime> pod względem kalendarza Hijri.  
  
 [!code-cpp[System.Globalization.HijriCalendar_AddGet#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.HijriCalendar_AddGet/CPP/hijricalendar_addget.cpp#1)]
 [!code-csharp[System.Globalization.HijriCalendar_AddGet#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.HijriCalendar_AddGet/CS/hijricalendar_addget.cs#1)]
 [!code-vb[System.Globalization.HijriCalendar_AddGet#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.HijriCalendar_AddGet/VB/hijricalendar_addget.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.DateTime.DayOfWeek" />
        <altmember cref="T:System.DayOfWeek" />
        <altmember cref="M:System.Globalization.HijriCalendar.GetEra(System.DateTime)" />
        <altmember cref="M:System.Globalization.HijriCalendar.GetYear(System.DateTime)" />
        <altmember cref="M:System.Globalization.HijriCalendar.GetMonth(System.DateTime)" />
        <altmember cref="M:System.Globalization.HijriCalendar.GetDayOfYear(System.DateTime)" />
        <altmember cref="M:System.Globalization.HijriCalendar.GetDayOfMonth(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetWeekOfYear(System.DateTime,System.Globalization.CalendarWeekRule,System.DayOfWeek)" />
      </Docs>
    </Member>
    <Member MemberName="GetDayOfYear">
      <MemberSignature Language="C#" Value="public override int GetDayOfYear (DateTime time);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetDayOfYear(valuetype System.DateTime time) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.HijriCalendar.GetDayOfYear(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetDayOfYear (time As DateTime) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetDayOfYear(DateTime time);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="time">
          <see cref="T:System.DateTime" /> Do odczytu.</param>
        <summary>Zwraca dzień roku w określonym <see cref="T:System.DateTime" />.</summary>
        <returns>Liczba całkowita z zakresu od 1 do 355 reprezentującą dzień roku w określonym <see cref="T:System.DateTime" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dzień roku, jest zdefiniowany jako liczbę dni od pierwszego dnia roku. Na przykład <xref:System.Globalization.HijriCalendar.GetDayOfYear%2A> dla pierwszego dnia miesiąca zwraca wartość 1, a <xref:System.Globalization.HijriCalendar.GetDayOfYear%2A> dla ostatniego dnia w ciągu ostatniego miesiąca zwraca sumę dni w roku, który jest tę samą wartość zwracany przez <xref:System.Globalization.HijriCalendar.GetDaysInYear%2A>.  
  
   
  
## Examples  
 Poniższy przykład kodu wyświetla wartości z kilku składników <xref:System.DateTime> pod względem kalendarza Hijri.  
  
 [!code-cpp[System.Globalization.HijriCalendar_AddGet#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.HijriCalendar_AddGet/CPP/hijricalendar_addget.cpp#1)]
 [!code-csharp[System.Globalization.HijriCalendar_AddGet#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.HijriCalendar_AddGet/CS/hijricalendar_addget.cs#1)]
 [!code-vb[System.Globalization.HijriCalendar_AddGet#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.HijriCalendar_AddGet/VB/hijricalendar_addget.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.DateTime.DayOfYear" />
        <altmember cref="M:System.Globalization.HijriCalendar.GetEra(System.DateTime)" />
        <altmember cref="M:System.Globalization.HijriCalendar.GetYear(System.DateTime)" />
        <altmember cref="M:System.Globalization.HijriCalendar.GetMonth(System.DateTime)" />
        <altmember cref="M:System.Globalization.HijriCalendar.GetDayOfMonth(System.DateTime)" />
        <altmember cref="M:System.Globalization.HijriCalendar.GetDayOfWeek(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetWeekOfYear(System.DateTime,System.Globalization.CalendarWeekRule,System.DayOfWeek)" />
      </Docs>
    </Member>
    <Member MemberName="GetDaysInMonth">
      <MemberSignature Language="C#" Value="public override int GetDaysInMonth (int year, int month, int era);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetDaysInMonth(int32 year, int32 month, int32 era) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.HijriCalendar.GetDaysInMonth(System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetDaysInMonth (year As Integer, month As Integer, era As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetDaysInMonth(int year, int month, int era);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
        <Parameter Name="month" Type="System.Int32" />
        <Parameter Name="era" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year">Liczba całkowita, która reprezentuje rok.</param>
        <param name="month">Liczba całkowita z zakresu od 1 do 12 reprezentująca miesiąc.</param>
        <param name="era">Liczba całkowita, która reprezentuje ery.</param>
        <summary>Zwraca liczbę dni w określonym miesiącu określony rok i ery.</summary>
        <returns>Liczba dni w określonym miesiącu określonego roku w określonym ery.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Na przykład, ta metoda zwraca 29 lub 30 Zulhijjah (`month` = 12), w zależności od tego, czy `year` jest rokiem przestępnym.  
  
   
  
## Examples  
 Poniższy kod przykładowy wywołania `GetDaysInMonth` dla dwunastego miesiąca w każdym z pięciu lat w każdej ery.  
  
 [!code-cpp[System.Globalization.HijriCalendar.GetDaysInMonth#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.HijriCalendar.GetDaysInMonth/CPP/hijricalendar_getdaysinmonth.cpp#1)]
 [!code-csharp[System.Globalization.HijriCalendar.GetDaysInMonth#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.HijriCalendar.GetDaysInMonth/CS/hijricalendar_getdaysinmonth.cs#1)]
 [!code-vb[System.Globalization.HijriCalendar.GetDaysInMonth#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.HijriCalendar.GetDaysInMonth/VB/hijricalendar_getdaysinmonth.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="era" /> jest spoza zakresu obsługiwanego przez ten kalendarz.  
  
 —lub—  
  
 <paramref name="year" /> jest spoza zakresu obsługiwanego przez ten kalendarz.  
  
 —lub—  
  
 <paramref name="month" /> jest spoza zakresu obsługiwanego przez ten kalendarz.</exception>
        <altmember cref="F:System.Globalization.Calendar.CurrentEra" />
        <altmember cref="F:System.Globalization.HijriCalendar.HijriEra" />
        <altmember cref="P:System.Globalization.HijriCalendar.Eras" />
        <altmember cref="M:System.Globalization.HijriCalendar.GetMonthsInYear(System.Int32,System.Int32)" />
        <altmember cref="M:System.Globalization.HijriCalendar.GetDaysInYear(System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetDaysInYear">
      <MemberSignature Language="C#" Value="public override int GetDaysInYear (int year, int era);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetDaysInYear(int32 year, int32 era) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.HijriCalendar.GetDaysInYear(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetDaysInYear (year As Integer, era As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetDaysInYear(int year, int era);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
        <Parameter Name="era" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year">Liczba całkowita, która reprezentuje rok.</param>
        <param name="era">Liczba całkowita, która reprezentuje ery.</param>
        <summary>Zwraca liczbę dni w określony rok i ery.</summary>
        <returns>Liczba dni w roku określonego i ery. Liczba dni jest 354 w typowych roku lub 355 w roku przestępnym.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy kod przykładowy wywołania `GetDaysInYear` 5 lat w każdej ery.  
  
 [!code-cpp[System.Globalization.HijriCalendar.GetDaysInYear#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.HijriCalendar.GetDaysInYear/CPP/hijricalendar_getdaysinyear.cpp#1)]
 [!code-csharp[System.Globalization.HijriCalendar.GetDaysInYear#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.HijriCalendar.GetDaysInYear/CS/hijricalendar_getdaysinyear.cs#1)]
 [!code-vb[System.Globalization.HijriCalendar.GetDaysInYear#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.HijriCalendar.GetDaysInYear/VB/hijricalendar_getdaysinyear.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="year" /> lub <paramref name="era" /> jest spoza zakresu obsługiwanego przez ten kalendarz.</exception>
        <altmember cref="F:System.Globalization.Calendar.CurrentEra" />
        <altmember cref="F:System.Globalization.HijriCalendar.HijriEra" />
        <altmember cref="P:System.Globalization.HijriCalendar.Eras" />
        <altmember cref="M:System.Globalization.HijriCalendar.GetMonthsInYear(System.Int32,System.Int32)" />
        <altmember cref="M:System.Globalization.HijriCalendar.GetDaysInMonth(System.Int32,System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetEra">
      <MemberSignature Language="C#" Value="public override int GetEra (DateTime time);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetEra(valuetype System.DateTime time) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.HijriCalendar.GetEra(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetEra (time As DateTime) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetEra(DateTime time);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="time">
          <see cref="T:System.DateTime" /> Do odczytu.</param>
        <summary>Zwraca określony era <see cref="T:System.DateTime" />.</summary>
        <returns>Liczba całkowita, która reprezentuje ery w określonym <see cref="T:System.DateTime" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Kalendarza Hijri rozpoznaje jeden era: A.H. (Łaciński "roku Hegirae", co oznacza "roku migracji" w odniesieniu do migracji z Muhammad (PBUH) z Mecca).  
  
   
  
## Examples  
 Poniższy przykład kodu wyświetla wartości z kilku składników <xref:System.DateTime> pod względem kalendarza Hijri.  
  
 [!code-cpp[System.Globalization.HijriCalendar_AddGet#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.HijriCalendar_AddGet/CPP/hijricalendar_addget.cpp#1)]
 [!code-csharp[System.Globalization.HijriCalendar_AddGet#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.HijriCalendar_AddGet/CS/hijricalendar_addget.cs#1)]
 [!code-vb[System.Globalization.HijriCalendar_AddGet#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.HijriCalendar_AddGet/VB/hijricalendar_addget.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.DateTime" />
        <altmember cref="F:System.Globalization.Calendar.CurrentEra" />
        <altmember cref="F:System.Globalization.HijriCalendar.HijriEra" />
        <altmember cref="P:System.Globalization.HijriCalendar.Eras" />
        <altmember cref="M:System.Globalization.HijriCalendar.GetYear(System.DateTime)" />
        <altmember cref="M:System.Globalization.HijriCalendar.GetMonth(System.DateTime)" />
        <altmember cref="M:System.Globalization.HijriCalendar.GetDayOfYear(System.DateTime)" />
        <altmember cref="M:System.Globalization.HijriCalendar.GetDayOfMonth(System.DateTime)" />
        <altmember cref="M:System.Globalization.HijriCalendar.GetDayOfWeek(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetWeekOfYear(System.DateTime,System.Globalization.CalendarWeekRule,System.DayOfWeek)" />
        <altmember cref="M:System.Globalization.Calendar.GetHour(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetMinute(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetSecond(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetMilliseconds(System.DateTime)" />
      </Docs>
    </Member>
    <Member MemberName="GetLeapMonth">
      <MemberSignature Language="C#" Value="public override int GetLeapMonth (int year, int era);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetLeapMonth(int32 year, int32 era) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.HijriCalendar.GetLeapMonth(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetLeapMonth (year As Integer, era As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetLeapMonth(int year, int era);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
        <Parameter Name="era" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year">Rok.</param>
        <param name="era">Ery. Określ <see cref="F:System.Globalization.Calendar.CurrentEra" /> lub <see cref="F:System.Globalization.HijriCalendar.HijriEra" />.</param>
        <summary>Oblicza przestępnego miesiąca dla określonego roku i ery.</summary>
        <returns>Zawsze 0 ponieważ <see cref="T:System.Globalization.HijriCalendar" /> typ nie obsługuje pojęcia miesiąca przestępnym.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 W kalendarza, który obsługuje pojęcie miesiąca przestępnym miesiąca przestępnego mogą występować po danym miesiącu lub po wszelkich miesiąc w roku. Na przykład <xref:System.Globalization.EastAsianLunisolarCalendar.GetMonth%2A> metoda zwraca liczbę z zakresu od 1 do 13 wskazującą miesiąca skojarzone z określoną datą. Jeśli między ósmego i dziewiąty miesięcy roku, znajduje się w miesiącu przestępnego <xref:System.Globalization.EastAsianLunisolarCalendar.GetMonth%2A> metoda zwraca 8 ósmego miesiąca, 9 dla przestępnego ósmego miesiąca i 10 dziewiąty miesiąc.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="year" /> jest mniejsza niż rok kalendarza Hijri, 1 lub większa niż rok 9666 r.  
  
 —lub—  
  
 <paramref name="era" /> nie jest <see cref="F:System.Globalization.Calendar.CurrentEra" /> lub <see cref="F:System.Globalization.HijriCalendar.HijriEra" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetMonth">
      <MemberSignature Language="C#" Value="public override int GetMonth (DateTime time);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetMonth(valuetype System.DateTime time) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.HijriCalendar.GetMonth(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetMonth (time As DateTime) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetMonth(DateTime time);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="time">
          <see cref="T:System.DateTime" /> Do odczytu.</param>
        <summary>Zwraca miesiąc w określonym <see cref="T:System.DateTime" />.</summary>
        <returns>Liczba całkowita z zakresu od 1 do 12 reprezentująca miesiąc w określonym <see cref="T:System.DateTime" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład kodu wyświetla wartości z kilku składników <xref:System.DateTime> pod względem kalendarza Hijri.  
  
 [!code-cpp[System.Globalization.HijriCalendar_AddGet#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.HijriCalendar_AddGet/CPP/hijricalendar_addget.cpp#1)]
 [!code-csharp[System.Globalization.HijriCalendar_AddGet#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.HijriCalendar_AddGet/CS/hijricalendar_addget.cs#1)]
 [!code-vb[System.Globalization.HijriCalendar_AddGet#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.HijriCalendar_AddGet/VB/hijricalendar_addget.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.DateTime.Month" />
        <altmember cref="M:System.Globalization.HijriCalendar.GetEra(System.DateTime)" />
        <altmember cref="M:System.Globalization.HijriCalendar.GetYear(System.DateTime)" />
        <altmember cref="M:System.Globalization.HijriCalendar.GetDayOfYear(System.DateTime)" />
        <altmember cref="M:System.Globalization.HijriCalendar.GetDayOfMonth(System.DateTime)" />
        <altmember cref="M:System.Globalization.HijriCalendar.GetDayOfWeek(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetWeekOfYear(System.DateTime,System.Globalization.CalendarWeekRule,System.DayOfWeek)" />
        <altmember cref="M:System.Globalization.Calendar.GetHour(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetMinute(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetSecond(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetMilliseconds(System.DateTime)" />
      </Docs>
    </Member>
    <Member MemberName="GetMonthsInYear">
      <MemberSignature Language="C#" Value="public override int GetMonthsInYear (int year, int era);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetMonthsInYear(int32 year, int32 era) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.HijriCalendar.GetMonthsInYear(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetMonthsInYear (year As Integer, era As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetMonthsInYear(int year, int era);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
        <Parameter Name="era" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year">Liczba całkowita, która reprezentuje rok.</param>
        <param name="era">Liczba całkowita, która reprezentuje ery.</param>
        <summary>Zwraca liczbę miesięcy w określony rok i ery.</summary>
        <returns>Liczba miesięcy w określony rok i ery.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykładowy kod wywołuje metodę GetMonthsInYear 5 lat w każdej ery.  
  
 [!code-cpp[System.Globalization.HijriCalendar.GetMonthsInYear#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.HijriCalendar.GetMonthsInYear/CPP/hijricalendar_getmonthsinyear.cpp#1)]
 [!code-csharp[System.Globalization.HijriCalendar.GetMonthsInYear#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.HijriCalendar.GetMonthsInYear/CS/hijricalendar_getmonthsinyear.cs#1)]
 [!code-vb[System.Globalization.HijriCalendar.GetMonthsInYear#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.HijriCalendar.GetMonthsInYear/VB/hijricalendar_getmonthsinyear.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="era" /> jest spoza zakresu obsługiwanego przez ten kalendarz.  
  
 —lub—  
  
 <paramref name="year" /> jest spoza zakresu obsługiwanego przez ten kalendarz.</exception>
        <altmember cref="F:System.Globalization.Calendar.CurrentEra" />
        <altmember cref="F:System.Globalization.HijriCalendar.HijriEra" />
        <altmember cref="P:System.Globalization.HijriCalendar.Eras" />
        <altmember cref="M:System.Globalization.HijriCalendar.GetDaysInYear(System.Int32,System.Int32)" />
        <altmember cref="M:System.Globalization.HijriCalendar.GetDaysInMonth(System.Int32,System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetYear">
      <MemberSignature Language="C#" Value="public override int GetYear (DateTime time);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetYear(valuetype System.DateTime time) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.HijriCalendar.GetYear(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetYear (time As DateTime) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetYear(DateTime time);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="time">
          <see cref="T:System.DateTime" /> Do odczytu.</param>
        <summary>Zwraca określony rok <see cref="T:System.DateTime" />.</summary>
        <returns>Liczba całkowita, która reprezentuje roku w określonym <see cref="T:System.DateTime" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład kodu wyświetla wartości z kilku składników <xref:System.DateTime> pod względem kalendarza Hijri.  
  
 [!code-cpp[System.Globalization.HijriCalendar_AddGet#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.HijriCalendar_AddGet/CPP/hijricalendar_addget.cpp#1)]
 [!code-csharp[System.Globalization.HijriCalendar_AddGet#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.HijriCalendar_AddGet/CS/hijricalendar_addget.cs#1)]
 [!code-vb[System.Globalization.HijriCalendar_AddGet#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.HijriCalendar_AddGet/VB/hijricalendar_addget.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.DateTime.Year" />
        <altmember cref="M:System.Globalization.HijriCalendar.GetEra(System.DateTime)" />
        <altmember cref="M:System.Globalization.HijriCalendar.GetMonth(System.DateTime)" />
        <altmember cref="M:System.Globalization.HijriCalendar.GetDayOfYear(System.DateTime)" />
        <altmember cref="M:System.Globalization.HijriCalendar.GetDayOfMonth(System.DateTime)" />
        <altmember cref="M:System.Globalization.HijriCalendar.GetDayOfWeek(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetWeekOfYear(System.DateTime,System.Globalization.CalendarWeekRule,System.DayOfWeek)" />
        <altmember cref="M:System.Globalization.Calendar.GetHour(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetMinute(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetSecond(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetMilliseconds(System.DateTime)" />
      </Docs>
    </Member>
    <Member MemberName="HijriAdjustment">
      <MemberSignature Language="C#" Value="public int HijriAdjustment { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 HijriAdjustment" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.HijriCalendar.HijriAdjustment" />
      <MemberSignature Language="VB.NET" Value="Public Property HijriAdjustment As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int HijriAdjustment { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia liczbę dni do dodania lub odjęcia od kalendarza, aby pomieścić wariancje początek i koniec Ramadan i aby pomieścić różnicę daty krajów i regionów.</summary>
        <value>Liczba całkowita od -2 do 2 reprezentujący liczbę dni do dodania lub odjęcia od kalendarza.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta implementacja <xref:System.Globalization.HijriCalendar> klasy dopasowuje datę w kalendarzu przez dodanie lub odjęcie wartości od 0 do dwóch dni, aby pomieścić wariancje początek i koniec Ramadan i aby pomieścić różnicę daty krajów i regionów. Czy wartość jest przechowywana w <xref:System.Globalization.HijriCalendar.HijriAdjustment%2A> właściwości. Jeśli <xref:System.Globalization.HijriCalendar.HijriAdjustment%2A> nie jest ustawiona, jawnie, jego wartość jest pochodną ustawienia w części Opcje regionalne i językowe w Panelu sterowania i jest przechowywany w wartości rejestru HKEY_CURRENT_USER\Control Panel\International\AddHijriDate. Jednak te informacje można zmienić podczas trwania <xref:System.AppDomain>. <xref:System.Globalization.HijriCalendar> Klasa nie wykrywa zmian w ustawieniach systemu automatycznie.  
  
   
  
## Examples  
 Poniższy kod przedstawia przykład sposobu <xref:System.Globalization.HijriCalendar.HijriAdjustment%2A> wpływa na datę.  
  
 [!code-cpp[System.Globalization.HijriCalendar.HijriAdjustment#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.HijriCalendar.HijriAdjustment/CPP/hijriadjustment.cpp#1)]
 [!code-csharp[System.Globalization.HijriCalendar.HijriAdjustment#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.HijriCalendar.HijriAdjustment/CS/hijriadjustment.cs#1)]
 [!code-vb[System.Globalization.HijriCalendar.HijriAdjustment#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.HijriCalendar.HijriAdjustment/VB/hijriadjustment.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Właściwość jest ustawiany na nieprawidłową wartość.</exception>
      </Docs>
    </Member>
    <Member MemberName="HijriEra">
      <MemberSignature Language="C#" Value="public static readonly int HijriEra;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly int32 HijriEra" />
      <MemberSignature Language="DocId" Value="F:System.Globalization.HijriCalendar.HijriEra" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly HijriEra As Integer " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly int HijriEra;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Reprezentuje bieżący ery. To pole jest stałe.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wartość <xref:System.Globalization.HijriCalendar.HijriEra> pola to 1.  
  
 Kalendarza Hijri rozpoznaje jeden era: A.H. (Łaciński "roku Hegirae", co oznacza "roku migracji" w odniesieniu do migracji z Muhammad (PBUH) z Mecca).  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Globalization.Calendar.CurrentEra" />
        <altmember cref="P:System.Globalization.HijriCalendar.Eras" />
      </Docs>
    </Member>
    <Member MemberName="IsLeapDay">
      <MemberSignature Language="C#" Value="public override bool IsLeapDay (int year, int month, int day, int era);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsLeapDay(int32 year, int32 month, int32 day, int32 era) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.HijriCalendar.IsLeapDay(System.Int32,System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function IsLeapDay (year As Integer, month As Integer, day As Integer, era As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool IsLeapDay(int year, int month, int day, int era);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
        <Parameter Name="month" Type="System.Int32" />
        <Parameter Name="day" Type="System.Int32" />
        <Parameter Name="era" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year">Liczba całkowita, która reprezentuje rok.</param>
        <param name="month">Liczba całkowita z zakresu od 1 do 12 reprezentująca miesiąc.</param>
        <param name="day">Liczba całkowita z zakresu od 1 do 30 reprezentującą dzień.</param>
        <param name="era">Liczba całkowita, która reprezentuje ery.</param>
        <summary>Określa, czy określona data jest dniem przestępnym.</summary>
        <returns>
          <see langword="true" /> w przypadku określonego dnia na dzień przestępnego; w przeciwnym razie <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 W cyklu co 30 lat kończy rok, który jest podzielna przez 30, 2, 5., 7, 10, 13, 16, 18, 21, 24th 26 i 29 lat są przestępnego. Typowe roku ma 354 dni i roku przestępnego ma 355 dni.  
  
 Dzień przestępnego jest dzień, w którym występuje tylko w roku przestępnym. W kalendarza Hijri 30 dnia Zulhijjah jest tylko dnia przestępnym.  
  
   
  
## Examples  
 Poniższy kod przykładowy wywołania `IsLeapDay` metodę dla ostatniego dnia miesiąca w drugim (luty), 5 lat w każdej Arial.  
  
 [!code-cpp[System.Globalization.HijriCalendar.IsLeapDay#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.HijriCalendar.IsLeapDay/CPP/hijricalendar_isleapday.cpp#1)]
 [!code-csharp[System.Globalization.HijriCalendar.IsLeapDay#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.HijriCalendar.IsLeapDay/CS/hijricalendar_isleapday.cs#1)]
 [!code-vb[System.Globalization.HijriCalendar.IsLeapDay#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.HijriCalendar.IsLeapDay/VB/hijricalendar_isleapday.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="era" /> jest spoza zakresu obsługiwanego przez ten kalendarz.  
  
 —lub—  
  
 <paramref name="year" /> jest spoza zakresu obsługiwanego przez ten kalendarz.  
  
 —lub—  
  
 <paramref name="month" /> jest spoza zakresu obsługiwanego przez ten kalendarz.  
  
 —lub—  
  
 <paramref name="day" /> jest spoza zakresu obsługiwanego przez ten kalendarz.</exception>
        <altmember cref="F:System.Globalization.Calendar.CurrentEra" />
        <altmember cref="F:System.Globalization.HijriCalendar.HijriEra" />
        <altmember cref="P:System.Globalization.HijriCalendar.Eras" />
        <altmember cref="M:System.Globalization.HijriCalendar.GetMonthsInYear(System.Int32,System.Int32)" />
        <altmember cref="M:System.Globalization.HijriCalendar.GetDaysInMonth(System.Int32,System.Int32,System.Int32)" />
        <altmember cref="M:System.Globalization.HijriCalendar.IsLeapYear(System.Int32,System.Int32)" />
        <altmember cref="M:System.Globalization.HijriCalendar.IsLeapMonth(System.Int32,System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="IsLeapMonth">
      <MemberSignature Language="C#" Value="public override bool IsLeapMonth (int year, int month, int era);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsLeapMonth(int32 year, int32 month, int32 era) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.HijriCalendar.IsLeapMonth(System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function IsLeapMonth (year As Integer, month As Integer, era As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool IsLeapMonth(int year, int month, int era);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
        <Parameter Name="month" Type="System.Int32" />
        <Parameter Name="era" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year">Liczba całkowita, która reprezentuje rok.</param>
        <param name="month">Liczba całkowita z zakresu od 1 do 12 reprezentująca miesiąc.</param>
        <param name="era">Liczba całkowita, która reprezentuje ery.</param>
        <summary>Określa, czy określony miesiąc określony rok i ery jest miesiąc przestępnym.</summary>
        <returns>Ta metoda zawsze zwraca <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 W cyklu co 30 lat kończy rok, który jest podzielna przez 30, 2, 5., 7, 10, 13, 16, 18, 21, 24th 26 i 29 lat są przestępnego. Typowe roku ma 354 dni i roku przestępnego ma 355 dni.  
  
 Miesiąc przestępnego jest całego miesiąca, która występuje tylko w roku przestępnym. Kalendarza Hijri nie ma żadnych miesięcy przestępnym.  
  
   
  
## Examples  
 Poniższy kod przykładowy wywołania `IsLeapMonth` dla wszystkich miesięcy w pięciu lat. w bieżącym ery.  
  
 [!code-cpp[System.Globalization.HijriCalendar.IsLeapMonth#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.HijriCalendar.IsLeapMonth/CPP/hijricalendar_isleapmonth.cpp#1)]
 [!code-csharp[System.Globalization.HijriCalendar.IsLeapMonth#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.HijriCalendar.IsLeapMonth/CS/hijricalendar_isleapmonth.cs#1)]
 [!code-vb[System.Globalization.HijriCalendar.IsLeapMonth#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.HijriCalendar.IsLeapMonth/VB/hijricalendar_isleapmonth.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="era" /> jest spoza zakresu obsługiwanego przez ten kalendarz.  
  
 —lub—  
  
 <paramref name="year" /> jest spoza zakresu obsługiwanego przez ten kalendarz.  
  
 —lub—  
  
 <paramref name="month" /> jest spoza zakresu obsługiwanego przez ten kalendarz.</exception>
        <altmember cref="F:System.Globalization.Calendar.CurrentEra" />
        <altmember cref="F:System.Globalization.HijriCalendar.HijriEra" />
        <altmember cref="P:System.Globalization.HijriCalendar.Eras" />
        <altmember cref="M:System.Globalization.HijriCalendar.GetMonthsInYear(System.Int32,System.Int32)" />
        <altmember cref="M:System.Globalization.HijriCalendar.IsLeapYear(System.Int32,System.Int32)" />
        <altmember cref="M:System.Globalization.HijriCalendar.IsLeapDay(System.Int32,System.Int32,System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="IsLeapYear">
      <MemberSignature Language="C#" Value="public override bool IsLeapYear (int year, int era);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsLeapYear(int32 year, int32 era) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.HijriCalendar.IsLeapYear(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function IsLeapYear (year As Integer, era As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool IsLeapYear(int year, int era);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
        <Parameter Name="era" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year">Liczba całkowita, która reprezentuje rok.</param>
        <param name="era">Liczba całkowita, która reprezentuje ery.</param>
        <summary>Określa, czy określony rok w określonym ery jest rokiem przestępnym.</summary>
        <returns>
          <see langword="true" /> Jeśli określony rok jest rokiem przestępnym; w przeciwnym razie <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 W cyklu co 30 lat kończy rok, który jest podzielna przez 30, 2, 5., 7, 10, 13, 16, 18, 21, 24th 26 i 29 lat są przestępnego. Typowe roku ma 354 dni i roku przestępnego ma 355 dni.  
  
   
  
## Examples  
 Poniższy kod przykładowy wywołania `IsLeapYear` metody 5 lat w każdej Arial.  
  
 [!code-cpp[System.Globalization.HijriCalendar.IsLeapYear#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.HijriCalendar.IsLeapYear/CPP/hijricalendar_isleapyear.cpp#1)]
 [!code-csharp[System.Globalization.HijriCalendar.IsLeapYear#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.HijriCalendar.IsLeapYear/CS/hijricalendar_isleapyear.cs#1)]
 [!code-vb[System.Globalization.HijriCalendar.IsLeapYear#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.HijriCalendar.IsLeapYear/VB/hijricalendar_isleapyear.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="era" /> jest spoza zakresu obsługiwanego przez ten kalendarz.  
  
 —lub—  
  
 <paramref name="year" /> jest spoza zakresu obsługiwanego przez ten kalendarz.</exception>
        <altmember cref="F:System.Globalization.Calendar.CurrentEra" />
        <altmember cref="F:System.Globalization.HijriCalendar.HijriEra" />
        <altmember cref="P:System.Globalization.HijriCalendar.Eras" />
        <altmember cref="M:System.Globalization.HijriCalendar.IsLeapMonth(System.Int32,System.Int32,System.Int32)" />
        <altmember cref="M:System.Globalization.HijriCalendar.IsLeapDay(System.Int32,System.Int32,System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="MaxSupportedDateTime">
      <MemberSignature Language="C#" Value="public override DateTime MaxSupportedDateTime { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime MaxSupportedDateTime" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.HijriCalendar.MaxSupportedDateTime" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property MaxSupportedDateTime As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property DateTime MaxSupportedDateTime { DateTime get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera najnowsze datę i godzinę obsługiwane przez tego kalendarza.</summary>
        <value>Najnowsze datę i godzinę obsługiwane przez <see cref="T:System.Globalization.HijriCalendar" /> typu, który jest odpowiednikiem w ostatnim czasie 31 grudnia 9999 r. w kalendarza gregoriańskiego.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 31 grudnia 9999 r. odpowiada to 3 dnia, miesiąca 4 9666 r. roku w kalendarzu Hijri.  
  
   
  
## Examples  
 Poniższy przykładowy kod pobiera wartość minimalna i maksymalna wartość kalendarza.  
  
 [!code-cpp[System.Globalization.HijriCalendar_MinMax#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.HijriCalendar_MinMax/CPP/hijricalendar_minmax.cpp#1)]
 [!code-csharp[System.Globalization.HijriCalendar_MinMax#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.HijriCalendar_MinMax/CS/hijricalendar_minmax.cs#1)]
 [!code-vb[System.Globalization.HijriCalendar_MinMax#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.HijriCalendar_MinMax/VB/hijricalendar_minmax.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MinSupportedDateTime">
      <MemberSignature Language="C#" Value="public override DateTime MinSupportedDateTime { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime MinSupportedDateTime" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.HijriCalendar.MinSupportedDateTime" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property MinSupportedDateTime As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property DateTime MinSupportedDateTime { DateTime get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera Najwcześniejsza data i godzina obsługiwane przez tego kalendarza.</summary>
        <value>Najwcześniejsza data i godzina obsługiwane przez <see cref="T:System.Globalization.HijriCalendar" /> typu, który jest odpowiednikiem moment początkowy 18 lipca 622 r. N.E. w kalendarza gregoriańskiego.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Microsoft Visual Basic reprezentuje godzinę jako czas określony w dniu minimalna obsługiwana przez <xref:System.DateTime> typu, który jest 1 stycznia 0001 r. Jednak <xref:System.Globalization.HijriCalendar> typ nie obsługuje tego minimalnej daty. W związku z tym jeśli należy wywołać metodę formatowania porę dnia, przy użyciu bieżącego kalendarza, ale nie należy określać specyfikatora formatu, używa formatowania ISO 8601 sortowanie ("s") daty/godziny specyfikator formatu wzorzec zamiast domyślny ogólne ("G") wzorzec daty/godziny specyfikator formatu. Aby uzyskać więcej informacji, zobacz [standardowe ciągi daty i godziny Format](~/docs/standard/base-types/standard-date-and-time-format-strings.md).  
  
   
  
## Examples  
 Poniższy przykładowy kod pobiera wartość minimalna i maksymalna wartość kalendarza.  
  
 [!code-cpp[System.Globalization.HijriCalendar_MinMax#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.HijriCalendar_MinMax/CPP/hijricalendar_minmax.cpp#1)]
 [!code-csharp[System.Globalization.HijriCalendar_MinMax#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.HijriCalendar_MinMax/CS/hijricalendar_minmax.cs#1)]
 [!code-vb[System.Globalization.HijriCalendar_MinMax#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.HijriCalendar_MinMax/VB/hijricalendar_minmax.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToDateTime">
      <MemberSignature Language="C#" Value="public override DateTime ToDateTime (int year, int month, int day, int hour, int minute, int second, int millisecond, int era);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.DateTime ToDateTime(int32 year, int32 month, int32 day, int32 hour, int32 minute, int32 second, int32 millisecond, int32 era) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.HijriCalendar.ToDateTime(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToDateTime (year As Integer, month As Integer, day As Integer, hour As Integer, minute As Integer, second As Integer, millisecond As Integer, era As Integer) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override DateTime ToDateTime(int year, int month, int day, int hour, int minute, int second, int millisecond, int era);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
        <Parameter Name="month" Type="System.Int32" />
        <Parameter Name="day" Type="System.Int32" />
        <Parameter Name="hour" Type="System.Int32" />
        <Parameter Name="minute" Type="System.Int32" />
        <Parameter Name="second" Type="System.Int32" />
        <Parameter Name="millisecond" Type="System.Int32" />
        <Parameter Name="era" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year">Liczba całkowita, która reprezentuje rok.</param>
        <param name="month">Liczba całkowita z zakresu od 1 do 12 reprezentująca miesiąc.</param>
        <param name="day">Liczba całkowita z zakresu od 1 do 30 reprezentującą dzień.</param>
        <param name="hour">Liczba całkowita z przedziału od 0 do 23 reprezentująca godzinę.</param>
        <param name="minute">Liczba całkowita z przedziału od 0 do 59 reprezentująca minutę.</param>
        <param name="second">Liczba całkowita z przedziału od 0 do 59 reprezentującą sekundę.</param>
        <param name="millisecond">Liczba całkowita z przedziału od 0 do 999 reprezentujący milisekundy.</param>
        <param name="era">Liczba całkowita, która reprezentuje ery.</param>
        <summary>Zwraca <see cref="T:System.DateTime" /> która jest równa określonej daty, godziny i ery.</summary>
        <returns>
          <see cref="T:System.DateTime" /> Która jest równa określonej daty i godziny w bieżącym ery.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="era" /> jest spoza zakresu obsługiwanego przez ten kalendarz.  
  
 —lub—  
  
 <paramref name="year" /> jest spoza zakresu obsługiwanego przez ten kalendarz.  
  
 —lub—  
  
 <paramref name="month" /> jest spoza zakresu obsługiwanego przez ten kalendarz.  
  
 —lub—  
  
 <paramref name="day" /> jest spoza zakresu obsługiwanego przez ten kalendarz.  
  
 —lub—  
  
 <paramref name="hour" /> jest mniejsza niż zero lub większą niż 23.  
  
 —lub—  
  
 <paramref name="minute" /> jest mniejsza niż zero lub większa niż 59.  
  
 —lub—  
  
 <paramref name="second" /> jest mniejsza niż zero lub większa niż 59.  
  
 —lub—  
  
 <paramref name="millisecond" /> jest mniejsza niż zero lub większa niż 999.</exception>
        <altmember cref="T:System.DateTime" />
        <altmember cref="F:System.Globalization.Calendar.CurrentEra" />
        <altmember cref="F:System.Globalization.HijriCalendar.HijriEra" />
        <altmember cref="P:System.Globalization.HijriCalendar.Eras" />
        <altmember cref="M:System.Globalization.HijriCalendar.GetMonthsInYear(System.Int32,System.Int32)" />
        <altmember cref="M:System.Globalization.HijriCalendar.GetDaysInMonth(System.Int32,System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="ToFourDigitYear">
      <MemberSignature Language="C#" Value="public override int ToFourDigitYear (int year);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 ToFourDigitYear(int32 year) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.HijriCalendar.ToFourDigitYear(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToFourDigitYear (year As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int ToFourDigitYear(int year);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year">Dwucyfrowym lub czterocyfrowym liczbę całkowitą reprezentującą rok do konwersji.</param>
        <summary>Konwertuje określony rok czterocyfrowy rok przy użyciu <see cref="P:System.Globalization.HijriCalendar.TwoDigitYearMax" /> właściwości w celu określenia odpowiedniego wieku.</summary>
        <returns>Liczba całkowita, która zawiera czterocyfrowe reprezentację <paramref name="year" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Globalization.HijriCalendar.TwoDigitYearMax%2A> jest to ostatni rok w zakresie 100 roku, który może być reprezentowany przez rokiem dwucyfrowym. Wiek jest określany przez wyszukiwanie wyłącznie wystąpienie dwóch cyfr `year` zakresu 100 roku. Na przykład jeśli <xref:System.Globalization.HijriCalendar.TwoDigitYearMax%2A> jest ustawiony na 1429, zakresu 100 roku jest z 1330 1429; w związku z tym, wartość 2-cyfrowy 30 jest interpretowana jako 1330, gdy wartość 2-cyfrowy 29 jest interpretowana jako 1429.  
  
 <xref:System.Globalization.HijriCalendar.ToFourDigitYear%2A> obsługuje rokiem dwucyfrowym lub czterocyfrowy rok. Przekazanie wartości dwucyfrowe (mniej niż 100) powoduje, że metoda można przekonwertować wartości na wartość czterocyfrowe zgodnie z <xref:System.Globalization.HijriCalendar.TwoDigitYearMax%2A> reprezentujący wieku odpowiednią wartość. Jeśli aplikacja udostępnia wartość czterocyfrowy rok, która znajduje się w zakresie obsługiwanych kalendarza do <xref:System.Globalization.HijriCalendar.ToFourDigitYear%2A>, metoda zwraca wartość rzeczywista wartość wejściowa. Jeśli aplikacja udostępnia czterocyfrowe wartość, która jest poza zakresem obsługiwanym kalendarzem lub dostarcza mu wartość ujemną, metoda zgłasza wyjątek.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="year" /> jest spoza zakresu obsługiwanego przez ten kalendarz.</exception>
        <altmember cref="P:System.Globalization.HijriCalendar.TwoDigitYearMax" />
      </Docs>
    </Member>
    <Member MemberName="TwoDigitYearMax">
      <MemberSignature Language="C#" Value="public override int TwoDigitYearMax { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 TwoDigitYearMax" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.HijriCalendar.TwoDigitYearMax" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property TwoDigitYearMax As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int TwoDigitYearMax { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia ostatni rok zakresu 100 roku, który może być reprezentowany przez rok 2-cyfrowy.</summary>
        <value>Ostatni rok zakresu 100 roku, który może być reprezentowany przez rok 2-cyfrowy.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość umożliwia roku 2-cyfrowy do prawidłowo przetłumaczenia na rok 4-cyfrowego. Na przykład jeśli ta właściwość jest ustawiona na 1429, zakresu 100 roku jest z 1330 1429. W związku z tym wartość 2-cyfrowy 30 jest interpretowany jako 1330, gdy wartość 2-cyfrowy 29 jest interpretowana jako 1429.  
  
 Początkowa wartość tej właściwości jest pochodną ustawienia w części Opcje regionalne i językowe w Panelu sterowania. Jednak te informacje można zmienić podczas trwania <xref:System.AppDomain>. <xref:System.Globalization.HijriCalendar> Klasa nie wykrywa zmian w ustawieniach systemu automatycznie.  
  
 Aplikacji powinni ustawić wartość do 99, aby wskazać, że 2 lat mają być pobierane jako literału. Na przykład, jeśli ta właściwość jest ustawiona do 99, 100 roku zakres jest z zakresu od 0 (nie prawidłową wartością dla większości kalendarzy) do 99. W związku z tym wartość 2-cyfrowy 30 jest interpretowana jako 30.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Tego kalendarza jest tylko do odczytu.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">Wartość w operacji set jest mniejsza niż 100 lub większa niż 9666 r.</exception>
        <altmember cref="M:System.Globalization.HijriCalendar.ToFourDigitYear(System.Int32)" />
      </Docs>
    </Member>
  </Members>
</Type>