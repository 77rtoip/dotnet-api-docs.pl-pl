<Type Name="DaylightTime" FullName="System.Globalization.DaylightTime">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="c73815046302481f304d81da5593e974c814ae80" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30452265" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class DaylightTime" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit DaylightTime extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Globalization.DaylightTime" />
  <TypeSignature Language="VB.NET" Value="Public Class DaylightTime" />
  <TypeSignature Language="C++ CLI" Value="public ref class DaylightTime" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Określa okres czasu letniego.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zmiany czasu jest okres w roku, po zaawansowane zegara, zazwyczaj przez godzinę, przeprowadzać godziny rozszerzonej czasu letniego. Na koniec okresu zegar jest ustawiana dla czasu standardowego.  
  
> [!WARNING]
>  <xref:System.Globalization.DaylightTime> Obiektu zwróconego przez <xref:System.TimeZone.GetDaylightChanges%2A?displayProperty=nameWithType> metody rozpoznaje tylko strefę czasową korekty zasady, która jest obecnie efekt i ignoruje wszelkie wcześniejsze reguły korekty dla których system ma informacje. Zamiast tego dotyczy bieżącej regule dopasowania do tyłu w czasie okresy po jego mogły nie zostać obowiązywać. Aby uzyskać informacje o wszystkich reguł korygowania znane dla określonej strefy czasowej, użyj <xref:System.TimeZoneInfo.GetAdjustmentRules%2A?displayProperty=nameWithType> metody.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.TimeZoneInfo" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DaylightTime (DateTime start, DateTime end, TimeSpan delta);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.DateTime start, valuetype System.DateTime end, valuetype System.TimeSpan delta) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.DaylightTime.#ctor(System.DateTime,System.DateTime,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (start As DateTime, end As DateTime, delta As TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DaylightTime(DateTime start, DateTime end, TimeSpan delta);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="start" Type="System.DateTime" />
        <Parameter Name="end" Type="System.DateTime" />
        <Parameter Name="delta" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="start">Obiekt reprezentujący datę i godzinę rozpoczęcia czasu letniego. Wartość musi być według czasu lokalnego.</param>
        <param name="end">Obiekt reprezentujący datę i godzinę zakończenia czasu letniego. Wartość musi być według czasu lokalnego.</param>
        <param name="delta">Obiekt, który reprezentuje różnica między (czas standardowy) i czasu, w znaczniki osi.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Globalization.DaylightTime" /> z datą początkową, zakończenia i informacje różnica czasu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `start` Parametru staje się wartością <xref:System.Globalization.DaylightTime.Start%2A> właściwość nowego obiektu. `end` Parametru staje się wartością <xref:System.Globalization.DaylightTime.End%2A> właściwość nowego obiektu. `delta` Parametru staje się wartością <xref:System.Globalization.DaylightTime.Delta%2A> właściwość nowego obiektu.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.DateTime" />
        <altmember cref="T:System.TimeSpan" />
        <altmember cref="P:System.Globalization.DaylightTime.Start" />
        <altmember cref="P:System.Globalization.DaylightTime.End" />
        <altmember cref="P:System.Globalization.DaylightTime.Delta" />
      </Docs>
    </Member>
    <Member MemberName="Delta">
      <MemberSignature Language="C#" Value="public TimeSpan Delta { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan Delta" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.DaylightTime.Delta" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Delta As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan Delta { TimeSpan get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera przedział czasu, reprezentujący różnica między (czas standardowy) i czasu letniego.</summary>
        <value>Przedział czasu, to jest różnicą między (czas standardowy) i czasu letniego.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość odpowiada <xref:System.TimeZoneInfo.AdjustmentRule.DaylightDelta%2A?displayProperty=nameWithType> właściwości. Ogólnie rzecz biorąc <xref:System.TimeZoneInfo> klasy jest źródłem dokładniejszych informacji na temat dopasowania strefy czasowej niż <xref:System.TimeZone> i <xref:System.Globalization.DaylightTime> klasy.  
  
 Jeśli wartość właściwości jest dodatnia, w momencie rozpoczęcia obowiązywania czasu letniego, czas zegara jest zaawansowane przez czas określony przez tę właściwość. Z końcem okresu obowiązywania czasu letniego czasu zegara ustawiono wstecz przez czas określony przez tę właściwość. Jeśli wartość właściwości jest ujemna, czas zegara jest ustawiana w momencie rozpoczęcia obowiązywania czasu letniego i Zaawansowane na końcu.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Globalization.DaylightTime.Start" />
        <altmember cref="P:System.Globalization.DaylightTime.End" />
        <altmember cref="P:System.TimeZoneInfo.AdjustmentRule.DaylightDelta" />
      </Docs>
    </Member>
    <Member MemberName="End">
      <MemberSignature Language="C#" Value="public DateTime End { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime End" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.DaylightTime.End" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property End As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property DateTime End { DateTime get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera obiekt, który reprezentuje datę i godzinę Uwzględniaj terminu.</summary>
        <value>Obiekt, który reprezentuje datę i godzinę Uwzględniaj terminu. Wartość jest według czasu lokalnego.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość odpowiada <xref:System.TimeZoneInfo.AdjustmentRule.DateEnd%2A?displayProperty=nameWithType> właściwości. Ogólnie rzecz biorąc <xref:System.TimeZoneInfo> klasy jest źródłem dokładniejszych informacji na temat dopasowania strefy czasowej niż <xref:System.TimeZone> i <xref:System.Globalization.DaylightTime> klasy.  
  
 Po zakończeniu okresu Uwzględniaj czasu zegara jest ustawiana dla (czas standardowy).  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.TimeZoneInfo.AdjustmentRule.DateEnd" />
      </Docs>
    </Member>
    <Member MemberName="Start">
      <MemberSignature Language="C#" Value="public DateTime Start { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime Start" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.DaylightTime.Start" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Start As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property DateTime Start { DateTime get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera obiekt reprezentujący datę i godzinę rozpoczęcia Uwzględnij okres czasu.</summary>
        <value>Obiekt reprezentujący datę i godzinę rozpoczęcia Uwzględnij okres czasu. Wartość jest według czasu lokalnego.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość odpowiada <xref:System.TimeZoneInfo.AdjustmentRule.DateStart%2A?displayProperty=nameWithType> właściwości. Ogólnie rzecz biorąc <xref:System.TimeZoneInfo> klasy jest źródłem dokładniejszych informacji na temat dopasowania strefy czasowej niż <xref:System.TimeZone> i <xref:System.Globalization.DaylightTime> klasy.  
  
 Po rozpoczęciu Uwzględniaj okres czasu zegara jest zaawansowane przez ich liczba zdefiniowanych przez <xref:System.Globalization.DaylightTime.Delta%2A> właściwości przeprowadzać godziny rozszerzonej czasu letniego.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.TimeZoneInfo.AdjustmentRule.DateStart" />
      </Docs>
    </Member>
  </Members>
</Type>