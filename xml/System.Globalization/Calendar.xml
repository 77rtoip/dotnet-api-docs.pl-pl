<Type Name="Calendar" FullName="System.Globalization.Calendar">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="c6c87848222b57d33726abbc97284bb74c7a4eb9" />
    <Meta Name="ms.sourcegitcommit" Value="c0c07dbd19cd7017243f9ac36915755f79bc8da6" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="11/27/2018" />
    <Meta Name="ms.locfileid" Value="52361386" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class Calendar : ICloneable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract serializable beforefieldinit Calendar extends System.Object implements class System.ICloneable" />
  <TypeSignature Language="DocId" Value="T:System.Globalization.Calendar" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class Calendar&#xA;Implements ICloneable" />
  <TypeSignature Language="C++ CLI" Value="public ref class Calendar abstract : ICloneable" />
  <TypeSignature Language="F#" Value="type Calendar = class&#xA;    interface ICloneable" />
  <AssemblyInfo>
    <AssemblyName>System.Globalization</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Reprezentuje czas w działy, takich jak tygodnie, miesiące i lata.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Kalendarz dzieli czas na jednostek, takich jak tygodnie, miesiące i lata. Liczbę, długość i rozpoczęcia wydziałów różnią się w każdego kalendarza.  
  
> [!NOTE]
>  Aby dowiedzieć się, jak przy użyciu klas kalendarza w programie .NET Framework, zobacz [Praca z kalendarzami](~/docs/standard/datetime/working-with-calendars.md).  
  
 Wszelkie moment w czasie może być reprezentowany jako zbiór wartości liczbowych przy użyciu określonego kalendarza. Na przykład Równonoc wystąpił u (1999 r., 3, 20, 8, 46, 0, 0.0) w kalendarzu gregoriańskim, czyli marca 20 1999 r. w 8:46:00:0.0. Implementacja <xref:System.Globalization.Calendar> można mapować dowolną datę w zakresie określonym kalendarzu podobny zestaw wartości liczbowych i <xref:System.DateTime> można mapować takie zestawy wartości liczbowych do reprezentacji tekstowej, korzystając z informacji <xref:System.Globalization.Calendar> i <xref:System.Globalization.DateTimeFormatInfo>. Tekstowa reprezentacja mogą być zależne od kultury, na przykład, "8:46 AM AD 1999 z 20 marca" dla kultury en US "lub" niezależnych od kultury, na przykład "1999-03-20T08:46:00" w formacie ISO 8601.  
  
 A <xref:System.Globalization.Calendar> wdrożenia można zdefiniować co najmniej jeden ery. <xref:System.Globalization.Calendar> Klasy identyfikuje ery jako wyliczany liczb całkowitych, gdzie bieżącej ery (<xref:System.Globalization.Calendar.CurrentEra>) ma wartość 0.  
  
 Aby było różnią się w roku kalendarzowym i rzeczywistym czasem ziemi obraca się wokół słońce lub rzeczywisty czas, który księżyca obraca się wokół ziemi, dla roku przestępnego ma różną liczbę dni od standardowego roku kalendarzowego. Każdy <xref:System.Globalization.Calendar> implementacja definiuje przestępnego inaczej.  
  
 W celu zapewnienia spójności pierwszej jednostki w każdym interwale (pierwszy miesiąc, na przykład) jest przypisywana wartość 1.  
  
 <xref:System.Globalization> Przestrzeń nazw obejmuje następujące elementy <xref:System.Globalization.Calendar> implementacji:  
  
-   <xref:System.Globalization.ChineseLunisolarCalendar>  
  
-   <xref:System.Globalization.EastAsianLunisolarCalendar>  
  
-   <xref:System.Globalization.GregorianCalendar>  
  
-   <xref:System.Globalization.HebrewCalendar>  
  
-   <xref:System.Globalization.HijriCalendar>  
  
-   <xref:System.Globalization.JapaneseCalendar>  
  
-   <xref:System.Globalization.JapaneseLunisolarCalendar>  
  
-   <xref:System.Globalization.JulianCalendar>  
  
-   <xref:System.Globalization.KoreanCalendar>  
  
-   <xref:System.Globalization.KoreanLunisolarCalendar>  
  
-   <xref:System.Globalization.PersianCalendar>  
  
-   <xref:System.Globalization.TaiwanCalendar>  
  
-   <xref:System.Globalization.TaiwanLunisolarCalendar>  
  
-   <xref:System.Globalization.ThaiBuddhistCalendar>  
  
-   <xref:System.Globalization.UmAlQuraCalendar>  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje członkowie <xref:System.Globalization.Calendar> klasy.  
  
 [!code-cpp[System.Globalization.Calendar#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.Calendar/CPP/calendar.cpp#1)]
 [!code-csharp[System.Globalization.Calendar#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.Calendar/CS/calendar.cs#1)]
 [!code-vb[System.Globalization.Calendar#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.Calendar/VB/calendar.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.DateTime" />
    <altmember cref="T:System.Globalization.DateTimeFormatInfo" />
    <altmember cref="T:System.Globalization.ChineseLunisolarCalendar" />
    <altmember cref="T:System.Globalization.EastAsianLunisolarCalendar" />
    <altmember cref="T:System.Globalization.GregorianCalendar" />
    <altmember cref="T:System.Globalization.HebrewCalendar" />
    <altmember cref="T:System.Globalization.HijriCalendar" />
    <altmember cref="T:System.Globalization.JapaneseCalendar" />
    <altmember cref="T:System.Globalization.JapaneseLunisolarCalendar" />
    <altmember cref="T:System.Globalization.JulianCalendar" />
    <altmember cref="T:System.Globalization.KoreanCalendar" />
    <altmember cref="T:System.Globalization.KoreanLunisolarCalendar" />
    <altmember cref="T:System.Globalization.PersianCalendar" />
    <altmember cref="T:System.Globalization.TaiwanCalendar" />
    <altmember cref="T:System.Globalization.TaiwanLunisolarCalendar" />
    <altmember cref="T:System.Globalization.ThaiBuddhistCalendar" />
    <altmember cref="T:System.Globalization.UmAlQuraCalendar" />
    <related type="Article" href="~/docs/standard/datetime/working-with-calendars.md">Praca z kalendarzami</related>
    <related type="ExternalDocumentation" href="https://code.msdn.microsoft.com/NET-Framework-4-Calendar-3360a84a">Przykład: Zakres tydzień kalendarza narzędzia</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Calendar ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.Calendar.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; Calendar();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Globalization.Calendar" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 W poniższym przykładzie pokazano członkowie <xref:System.Globalization.Calendar> klasy.  
  
 [!code-cpp[System.Globalization.Calendar#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.Calendar/CPP/calendar.cpp#1)]
 [!code-csharp[System.Globalization.Calendar#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.Calendar/CS/calendar.cs#1)]
 [!code-vb[System.Globalization.Calendar#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.Calendar/VB/calendar.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="usage">
          <para>W [!INCLUDE[net_portable](~/includes/net-portable-md.md)], <see cref="T:System.Globalization.Calendar" /> Konstruktor klasy jest niedostępny, a klasy pochodne <see cref="T:System.Globalization.Calendar" /> nie są publicznie udostępniane. Jeśli chcesz, aby kalendarzu określonego typu, na przykład obiekt kalendarza gregoriańskiego należy pobrać go z <see cref="P:System.Globalization.CultureInfo.Calendar" /> lub <see cref="P:System.Globalization.DateTimeFormatInfo.Calendar" /> właściwości lub <see cref="P:System.Globalization.CultureInfo.OptionalCalendars" /> tablicy właściwości.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="AddDays">
      <MemberSignature Language="C#" Value="public virtual DateTime AddDays (DateTime time, int days);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.DateTime AddDays(valuetype System.DateTime time, int32 days) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.Calendar.AddDays(System.DateTime,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AddDays (time As DateTime, days As Integer) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual DateTime AddDays(DateTime time, int days);" />
      <MemberSignature Language="F#" Value="abstract member AddDays : DateTime * int -&gt; DateTime&#xA;override this.AddDays : DateTime * int -&gt; DateTime" Usage="calendar.AddDays (time, days)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
        <Parameter Name="days" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="time">
          <see cref="T:System.DateTime" /> Do której chcesz dodać dni.</param>
        <param name="days">Liczba dni do dodania.</param>
        <summary>Zwraca <see cref="T:System.DateTime" /> czyli określoną liczbę dni od określonego <see cref="T:System.DateTime" />.</summary>
        <returns>
          <see cref="T:System.DateTime" /> , Wynikiem dodawania określoną liczbę dni do określonego <see cref="T:System.DateTime" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `days` Wartość jest dodawana do określonego <xref:System.DateTime>. Jeśli `days` jest ujemna, wynikowy <xref:System.DateTime> jest starsza niż określona <xref:System.DateTime>.  
  
 Część miesiąca wynikowy <xref:System.DateTime> działa na dzień wynikowa znajduje się poza miesiąca określonego <xref:System.DateTime>. Rok wynikowy <xref:System.DateTime> jest wpływ na wynikowy miesiąca znajduje się poza rok o określonym parametrze <xref:System.DateTime>. Część ery wynikowy <xref:System.DateTime> jest wpływ na wynikowy roku znajduje się poza ery określonego <xref:System.DateTime>. Część pory dnia wynikowy <xref:System.DateTime> pozostaje taka sama jak określony <xref:System.DateTime>.  
  
 <xref:System.DateTime.Kind%2A> Właściwości zwracanego <xref:System.DateTime> zawsze wartość jest równa <xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>. Można zachować <xref:System.DateTime.Kind%2A> właściwość `time` parametrów, wywołując <xref:System.DateTime.SpecifyKind%2A?displayProperty=nameWithType> metody, jak w poniższym przykładzie pokazano.  
  
 [!code-csharp[System.Globalization.Calendar.AddMethods#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.calendar.addmethods/cs/add1.cs#1)]
 [!code-vb[System.Globalization.Calendar.AddMethods#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.calendar.addmethods/vb/add1.vb#1)]  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje członkowie <xref:System.Globalization.Calendar> klasy.  
  
 [!code-cpp[System.Globalization.Calendar#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.Calendar/CPP/calendar.cpp#1)]
 [!code-csharp[System.Globalization.Calendar#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.Calendar/CS/calendar.cs#1)]
 [!code-vb[System.Globalization.Calendar#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.Calendar/VB/calendar.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Wartość wynikowa <see cref="T:System.DateTime" /> jest poza obsługiwanym zakresem tego kalendarza.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="days" /> znajduje się poza obsługiwanym zakresem od <see cref="T:System.DateTime" /> zwracają wartość.</exception>
        <altmember cref="T:System.DateTime" />
        <altmember cref="M:System.Globalization.Calendar.AddYears(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddMonths(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddWeeks(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddHours(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddMinutes(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddSeconds(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddMilliseconds(System.DateTime,System.Double)" />
      </Docs>
    </Member>
    <Member MemberName="AddHours">
      <MemberSignature Language="C#" Value="public virtual DateTime AddHours (DateTime time, int hours);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.DateTime AddHours(valuetype System.DateTime time, int32 hours) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.Calendar.AddHours(System.DateTime,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AddHours (time As DateTime, hours As Integer) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual DateTime AddHours(DateTime time, int hours);" />
      <MemberSignature Language="F#" Value="abstract member AddHours : DateTime * int -&gt; DateTime&#xA;override this.AddHours : DateTime * int -&gt; DateTime" Usage="calendar.AddHours (time, hours)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
        <Parameter Name="hours" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="time">
          <see cref="T:System.DateTime" /> Do której chcesz dodać godzin.</param>
        <param name="hours">Liczba godzin do dodania.</param>
        <summary>Zwraca <see cref="T:System.DateTime" /> czyli określoną liczbę godzin od określonego <see cref="T:System.DateTime" />.</summary>
        <returns>
          <see cref="T:System.DateTime" /> , Wynikiem dodawania określoną liczbę godzin na określonym <see cref="T:System.DateTime" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `hours` Wartość jest dodawana do określonego <xref:System.DateTime>. Jeśli `hours` jest ujemna, wynikowy <xref:System.DateTime> jest starsza niż określona <xref:System.DateTime>.  
  
 Część dnia wynikowy <xref:System.DateTime> dotyczy problem, gdy wynikowy czas poza dzień określonego <xref:System.DateTime>. Część miesiąca wynikowy <xref:System.DateTime> działa na dzień wynikowa znajduje się poza miesiąca określonego <xref:System.DateTime>. Rok wynikowy <xref:System.DateTime> jest wpływ na wynikowy miesiąca znajduje się poza rok o określonym parametrze <xref:System.DateTime>. Część ery wynikowy <xref:System.DateTime> jest wpływ na wynikowy roku znajduje się poza ery określonego <xref:System.DateTime>.  
  
 <xref:System.DateTime.Kind%2A> Właściwości zwracanego <xref:System.DateTime> zawsze wartość jest równa <xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>. Można zachować <xref:System.DateTime.Kind%2A> właściwość `time` parametrów, wywołując <xref:System.DateTime.SpecifyKind%2A?displayProperty=nameWithType> metody, jak w poniższym przykładzie pokazano.  
  
 [!code-csharp[System.Globalization.Calendar.AddMethods#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.calendar.addmethods/cs/add1.cs#2)]
 [!code-vb[System.Globalization.Calendar.AddMethods#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.calendar.addmethods/vb/add1.vb#2)]  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje członkowie <xref:System.Globalization.Calendar> klasy.  
  
 [!code-cpp[System.Globalization.Calendar#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.Calendar/CPP/calendar.cpp#1)]
 [!code-csharp[System.Globalization.Calendar#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.Calendar/CS/calendar.cs#1)]
 [!code-vb[System.Globalization.Calendar#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.Calendar/VB/calendar.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Wartość wynikowa <see cref="T:System.DateTime" /> jest poza obsługiwanym zakresem tego kalendarza.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="hours" /> znajduje się poza obsługiwanym zakresem od <see cref="T:System.DateTime" /> zwracają wartość.</exception>
        <altmember cref="T:System.DateTime" />
        <altmember cref="M:System.Globalization.Calendar.AddYears(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddMonths(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddWeeks(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddDays(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddMinutes(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddSeconds(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddMilliseconds(System.DateTime,System.Double)" />
      </Docs>
    </Member>
    <Member MemberName="AddMilliseconds">
      <MemberSignature Language="C#" Value="public virtual DateTime AddMilliseconds (DateTime time, double milliseconds);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.DateTime AddMilliseconds(valuetype System.DateTime time, float64 milliseconds) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.Calendar.AddMilliseconds(System.DateTime,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AddMilliseconds (time As DateTime, milliseconds As Double) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual DateTime AddMilliseconds(DateTime time, double milliseconds);" />
      <MemberSignature Language="F#" Value="abstract member AddMilliseconds : DateTime * double -&gt; DateTime&#xA;override this.AddMilliseconds : DateTime * double -&gt; DateTime" Usage="calendar.AddMilliseconds (time, milliseconds)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
        <Parameter Name="milliseconds" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="time">
          <see cref="T:System.DateTime" /> Dodać milisekund.</param>
        <param name="milliseconds">Liczba milisekund, które można dodać.</param>
        <summary>Zwraca <see cref="T:System.DateTime" /> czyli określoną liczbę milisekund od określonego <see cref="T:System.DateTime" />.</summary>
        <returns>
          <see cref="T:System.DateTime" /> , Wynikiem dodawania określoną liczbę milisekund do określonego <see cref="T:System.DateTime" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `milliseconds` Wartość jest zaokrąglana do najbliższej liczby całkowitej, zanim zostanie dodany do określonego <xref:System.DateTime>. Jeśli `milliseconds` jest ujemna, wynikowy <xref:System.DateTime> jest starsza niż określona <xref:System.DateTime>.  
  
 Część dnia wynikowy <xref:System.DateTime> dotyczy problem, gdy wynikowy czas poza dzień określonego <xref:System.DateTime>. Część miesiąca wynikowy <xref:System.DateTime> działa na dzień wynikowa znajduje się poza miesiąca określonego <xref:System.DateTime>. Rok wynikowy <xref:System.DateTime> jest wpływ na wynikowy miesiąca znajduje się poza rok o określonym parametrze <xref:System.DateTime>. Część ery wynikowy <xref:System.DateTime> jest wpływ na wynikowy roku znajduje się poza ery określonego <xref:System.DateTime>.  
  
 <xref:System.DateTime.Kind%2A> Właściwości zwracanego <xref:System.DateTime> zawsze wartość jest równa <xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>. Można zachować <xref:System.DateTime.Kind%2A> właściwość `time` parametrów, wywołując <xref:System.DateTime.SpecifyKind%2A?displayProperty=nameWithType> metody, jak w poniższym przykładzie pokazano.  
  
 [!code-csharp[System.Globalization.Calendar.AddMethods#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.calendar.addmethods/cs/add1.cs#3)]
 [!code-vb[System.Globalization.Calendar.AddMethods#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.calendar.addmethods/vb/add1.vb#3)]  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje członkowie <xref:System.Globalization.Calendar> klasy.  
  
 [!code-cpp[System.Globalization.Calendar#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.Calendar/CPP/calendar.cpp#1)]
 [!code-csharp[System.Globalization.Calendar#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.Calendar/CS/calendar.cs#1)]
 [!code-vb[System.Globalization.Calendar#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.Calendar/VB/calendar.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Wartość wynikowa <see cref="T:System.DateTime" /> jest poza obsługiwanym zakresem tego kalendarza.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="milliseconds" /> znajduje się poza obsługiwanym zakresem od <see cref="T:System.DateTime" /> zwracają wartość.</exception>
        <altmember cref="T:System.DateTime" />
        <altmember cref="M:System.Globalization.Calendar.AddYears(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddMonths(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddWeeks(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddDays(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddHours(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddMinutes(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddSeconds(System.DateTime,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="AddMinutes">
      <MemberSignature Language="C#" Value="public virtual DateTime AddMinutes (DateTime time, int minutes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.DateTime AddMinutes(valuetype System.DateTime time, int32 minutes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.Calendar.AddMinutes(System.DateTime,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AddMinutes (time As DateTime, minutes As Integer) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual DateTime AddMinutes(DateTime time, int minutes);" />
      <MemberSignature Language="F#" Value="abstract member AddMinutes : DateTime * int -&gt; DateTime&#xA;override this.AddMinutes : DateTime * int -&gt; DateTime" Usage="calendar.AddMinutes (time, minutes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
        <Parameter Name="minutes" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="time">
          <see cref="T:System.DateTime" /> Do której mają zostać dodane w ciągu kilku minut.</param>
        <param name="minutes">Liczba minut, aby dodać.</param>
        <summary>Zwraca <see cref="T:System.DateTime" /> czyli określoną liczbę minut od określonego <see cref="T:System.DateTime" />.</summary>
        <returns>
          <see cref="T:System.DateTime" /> , Wynikiem dodawania określoną liczbę minut do określonego <see cref="T:System.DateTime" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `minutes` Wartość jest dodawana do określonego <xref:System.DateTime>. Jeśli `minutes` jest ujemna, wynikowy <xref:System.DateTime> jest starsza niż określona <xref:System.DateTime>.  
  
 Część dnia wynikowy <xref:System.DateTime> dotyczy problem, gdy wynikowy czas poza dzień określonego <xref:System.DateTime>. Część miesiąca wynikowy <xref:System.DateTime> działa na dzień wynikowa znajduje się poza miesiąca określonego <xref:System.DateTime>. Rok wynikowy <xref:System.DateTime> jest wpływ na wynikowy miesiąca znajduje się poza rok o określonym parametrze <xref:System.DateTime>. Część ery wynikowy <xref:System.DateTime> jest wpływ na wynikowy roku znajduje się poza ery określonego <xref:System.DateTime>.  
  
 <xref:System.DateTime.Kind%2A> Właściwości zwracanego <xref:System.DateTime> zawsze wartość jest równa <xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>. Można zachować <xref:System.DateTime.Kind%2A> właściwość `time` parametrów, wywołując <xref:System.DateTime.SpecifyKind%2A?displayProperty=nameWithType> metody, jak w poniższym przykładzie pokazano.  
  
 [!code-csharp[System.Globalization.Calendar.AddMethods#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.calendar.addmethods/cs/add1.cs#4)]
 [!code-vb[System.Globalization.Calendar.AddMethods#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.calendar.addmethods/vb/add1.vb#4)]  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje członkowie <xref:System.Globalization.Calendar> klasy.  
  
 [!code-cpp[System.Globalization.Calendar#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.Calendar/CPP/calendar.cpp#1)]
 [!code-csharp[System.Globalization.Calendar#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.Calendar/CS/calendar.cs#1)]
 [!code-vb[System.Globalization.Calendar#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.Calendar/VB/calendar.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Wartość wynikowa <see cref="T:System.DateTime" /> jest poza obsługiwanym zakresem tego kalendarza.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="minutes" /> znajduje się poza obsługiwanym zakresem od <see cref="T:System.DateTime" /> zwracają wartość.</exception>
        <altmember cref="T:System.DateTime" />
        <altmember cref="M:System.Globalization.Calendar.AddYears(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddMonths(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddWeeks(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddDays(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddHours(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddSeconds(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddMilliseconds(System.DateTime,System.Double)" />
      </Docs>
    </Member>
    <Member MemberName="AddMonths">
      <MemberSignature Language="C#" Value="public abstract DateTime AddMonths (DateTime time, int months);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.DateTime AddMonths(valuetype System.DateTime time, int32 months) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.Calendar.AddMonths(System.DateTime,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function AddMonths (time As DateTime, months As Integer) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract DateTime AddMonths(DateTime time, int months);" />
      <MemberSignature Language="F#" Value="abstract member AddMonths : DateTime * int -&gt; DateTime" Usage="calendar.AddMonths (time, months)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
        <Parameter Name="months" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="time">
          <see cref="T:System.DateTime" /> Do której chcesz dodać miesięcy.</param>
        <param name="months">Liczba miesięcy do dodania.</param>
        <summary>Po przesłonięciu w klasie pochodnej zwraca <see cref="T:System.DateTime" /> czyli określoną liczbę miesięcy od określonego <see cref="T:System.DateTime" />.</summary>
        <returns>
          <see cref="T:System.DateTime" /> , Wynikiem dodawania określoną liczbę miesięcy do określonego <see cref="T:System.DateTime" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `months` Wartość jest dodawana do określonego <xref:System.DateTime>. Jeśli `months` jest ujemna, wynikowy <xref:System.DateTime> jest starsza niż określona <xref:System.DateTime>.  
  
 Część dnia wynikowy <xref:System.DateTime> jest wpływ na wynikowy dzień nie jest prawidłowym dniem w wynikowej miesiąca roku wynikowy. Zostanie on zmieniony na ostatni dzień prawidłowe wynikowy miesiąca roku wynikowe. Rok wynikowy <xref:System.DateTime> jest wpływ na wynikowy miesiąca znajduje się poza rok o określonym parametrze <xref:System.DateTime>. Część ery wynikowy <xref:System.DateTime> jest wpływ na wynikowy roku znajduje się poza ery określonego <xref:System.DateTime>. Część pory dnia wynikowy <xref:System.DateTime> pozostaje taka sama jak określony <xref:System.DateTime>.  
  
 Na przykład załóżmy, że bieżący kalendarz ma 12 miesięcy, gdzie czwarta miesiąc ma 30 dni i dziesiąty miesiąc ma 31 dni. Jeśli określonego miesiąca jest dziesiąty miesiąc, określony dzień jest 31 dni tego miesiąca, a wartość `months` parametr to 6, wynikowy rok jest jeden więcej niż określony rok, miesiąc wynikowy czwarty miesiąc, a wynikowy dzień jest 30 dzień, który jest ostatni dzień miesiąca, wynikowe.  
  
 Jeśli wartość `months` parametru jest ujemna, wynikowy <xref:System.DateTime> jest starsza niż określona <xref:System.DateTime>.  
  
 <xref:System.DateTime.Kind%2A> Właściwości zwracanego <xref:System.DateTime> zawsze wartość jest równa <xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>. Można zachować <xref:System.DateTime.Kind%2A> właściwość `time` parametrów, wywołując <xref:System.DateTime.SpecifyKind%2A?displayProperty=nameWithType> metody, jak w poniższym przykładzie pokazano.  
  
 [!code-csharp[System.Globalization.Calendar.AddMethods#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.calendar.addmethods/cs/add1.cs#5)]
 [!code-vb[System.Globalization.Calendar.AddMethods#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.calendar.addmethods/vb/add1.vb#5)]  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje członkowie <xref:System.Globalization.Calendar> klasy.  
  
 [!code-cpp[System.Globalization.Calendar#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.Calendar/CPP/calendar.cpp#1)]
 [!code-csharp[System.Globalization.Calendar#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.Calendar/CS/calendar.cs#1)]
 [!code-vb[System.Globalization.Calendar#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.Calendar/VB/calendar.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Wartość wynikowa <see cref="T:System.DateTime" /> jest poza obsługiwanym zakresem tego kalendarza.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="months" /> znajduje się poza obsługiwanym zakresem od <see cref="T:System.DateTime" /> zwracają wartość.</exception>
        <altmember cref="T:System.DateTime" />
        <altmember cref="M:System.Globalization.Calendar.AddYears(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddWeeks(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddDays(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddHours(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddMinutes(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddSeconds(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddMilliseconds(System.DateTime,System.Double)" />
      </Docs>
    </Member>
    <Member MemberName="AddSeconds">
      <MemberSignature Language="C#" Value="public virtual DateTime AddSeconds (DateTime time, int seconds);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.DateTime AddSeconds(valuetype System.DateTime time, int32 seconds) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.Calendar.AddSeconds(System.DateTime,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AddSeconds (time As DateTime, seconds As Integer) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual DateTime AddSeconds(DateTime time, int seconds);" />
      <MemberSignature Language="F#" Value="abstract member AddSeconds : DateTime * int -&gt; DateTime&#xA;override this.AddSeconds : DateTime * int -&gt; DateTime" Usage="calendar.AddSeconds (time, seconds)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
        <Parameter Name="seconds" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="time">
          <see cref="T:System.DateTime" /> Do której mają zostać dodane w ciągu kilku sekund.</param>
        <param name="seconds">Liczba sekund do dodania.</param>
        <summary>Zwraca <see cref="T:System.DateTime" /> czyli określoną liczbę sekund od określonego <see cref="T:System.DateTime" />.</summary>
        <returns>
          <see cref="T:System.DateTime" /> , Wynikiem dodawania określonej liczby sekund określonej <see cref="T:System.DateTime" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `seconds` Wartość jest dodawana do określonego <xref:System.DateTime>. Jeśli `seconds` jest ujemna, wynikowy <xref:System.DateTime> jest starsza niż określona <xref:System.DateTime>.  
  
 Część dnia wynikowy <xref:System.DateTime> dotyczy problem, gdy wynikowy czas poza dzień określonego <xref:System.DateTime>. Część miesiąca wynikowy <xref:System.DateTime> działa na dzień wynikowa znajduje się poza miesiąca określonego <xref:System.DateTime>. Rok wynikowy <xref:System.DateTime> jest wpływ na wynikowy miesiąca znajduje się poza rok o określonym parametrze <xref:System.DateTime>. Część ery wynikowy <xref:System.DateTime> jest wpływ na wynikowy roku znajduje się poza ery określonego <xref:System.DateTime>.  
  
 <xref:System.DateTime.Kind%2A> Właściwości zwracanego <xref:System.DateTime> zawsze wartość jest równa <xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>. Można zachować <xref:System.DateTime.Kind%2A> właściwość `time` parametrów, wywołując <xref:System.DateTime.SpecifyKind%2A?displayProperty=nameWithType> metody, jak w poniższym przykładzie pokazano.  
  
 [!code-csharp[System.Globalization.Calendar.AddMethods#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.calendar.addmethods/cs/add1.cs#6)]
 [!code-vb[System.Globalization.Calendar.AddMethods#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.calendar.addmethods/vb/add1.vb#6)]  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje członkowie <xref:System.Globalization.Calendar> klasy.  
  
 [!code-cpp[System.Globalization.Calendar#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.Calendar/CPP/calendar.cpp#1)]
 [!code-csharp[System.Globalization.Calendar#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.Calendar/CS/calendar.cs#1)]
 [!code-vb[System.Globalization.Calendar#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.Calendar/VB/calendar.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Wartość wynikowa <see cref="T:System.DateTime" /> jest poza obsługiwanym zakresem tego kalendarza.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="seconds" /> znajduje się poza obsługiwanym zakresem od <see cref="T:System.DateTime" /> zwracają wartość.</exception>
        <altmember cref="T:System.DateTime" />
        <altmember cref="M:System.Globalization.Calendar.AddYears(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddMonths(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddWeeks(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddDays(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddHours(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddMinutes(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddMilliseconds(System.DateTime,System.Double)" />
      </Docs>
    </Member>
    <Member MemberName="AddWeeks">
      <MemberSignature Language="C#" Value="public virtual DateTime AddWeeks (DateTime time, int weeks);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.DateTime AddWeeks(valuetype System.DateTime time, int32 weeks) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.Calendar.AddWeeks(System.DateTime,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AddWeeks (time As DateTime, weeks As Integer) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual DateTime AddWeeks(DateTime time, int weeks);" />
      <MemberSignature Language="F#" Value="abstract member AddWeeks : DateTime * int -&gt; DateTime&#xA;override this.AddWeeks : DateTime * int -&gt; DateTime" Usage="calendar.AddWeeks (time, weeks)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
        <Parameter Name="weeks" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="time">
          <see cref="T:System.DateTime" /> Do której chcesz dodać tygodni.</param>
        <param name="weeks">Liczba tygodni do dodania.</param>
        <summary>Zwraca <see cref="T:System.DateTime" /> czyli określoną liczbę tygodni od określonego <see cref="T:System.DateTime" />.</summary>
        <returns>
          <see cref="T:System.DateTime" /> , Wynikiem dodawania określoną liczbę tygodni do określonego <see cref="T:System.DateTime" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `weeks` Wartość jest dodawana do określonego <xref:System.DateTime>. Jeśli `weeks` jest ujemna, wynikowy <xref:System.DateTime> jest starsza niż określona <xref:System.DateTime>.  
  
 Część miesiąca wynikowy <xref:System.DateTime> działa na dzień wynikowa znajduje się poza miesiąca określonego <xref:System.DateTime>. Rok wynikowy <xref:System.DateTime> jest wpływ na wynikowy miesiąca znajduje się poza rok o określonym parametrze <xref:System.DateTime>. Część ery wynikowy <xref:System.DateTime> jest wpływ na wynikowy roku znajduje się poza ery określonego <xref:System.DateTime>. Część pory dnia wynikowy <xref:System.DateTime> pozostaje taka sama jak określony <xref:System.DateTime>.  
  
 Dla wszystkich klas .NET Framework pochodną <xref:System.Globalization.Calendar> klasy, tydzień jest zdefiniowany jako siedem dni.  
  
 <xref:System.DateTime.Kind%2A> Właściwości zwracanego <xref:System.DateTime> zawsze wartość jest równa <xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>. Można zachować <xref:System.DateTime.Kind%2A> właściwość `time` parametrów, wywołując <xref:System.DateTime.SpecifyKind%2A?displayProperty=nameWithType> metody, jak w poniższym przykładzie pokazano.  
  
 [!code-csharp[System.Globalization.Calendar.AddMethods#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.calendar.addmethods/cs/add1.cs#7)]
 [!code-vb[System.Globalization.Calendar.AddMethods#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.calendar.addmethods/vb/add1.vb#7)]  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje członkowie <xref:System.Globalization.Calendar> klasy.  
  
 [!code-cpp[System.Globalization.Calendar#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.Calendar/CPP/calendar.cpp#1)]
 [!code-csharp[System.Globalization.Calendar#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.Calendar/CS/calendar.cs#1)]
 [!code-vb[System.Globalization.Calendar#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.Calendar/VB/calendar.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Wartość wynikowa <see cref="T:System.DateTime" /> jest poza obsługiwanym zakresem tego kalendarza.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="weeks" /> znajduje się poza obsługiwanym zakresem od <see cref="T:System.DateTime" /> zwracają wartość.</exception>
        <altmember cref="T:System.DateTime" />
        <altmember cref="M:System.Globalization.Calendar.AddYears(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddMonths(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddDays(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddHours(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddMinutes(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddSeconds(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddMilliseconds(System.DateTime,System.Double)" />
      </Docs>
    </Member>
    <Member MemberName="AddYears">
      <MemberSignature Language="C#" Value="public abstract DateTime AddYears (DateTime time, int years);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.DateTime AddYears(valuetype System.DateTime time, int32 years) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.Calendar.AddYears(System.DateTime,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function AddYears (time As DateTime, years As Integer) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract DateTime AddYears(DateTime time, int years);" />
      <MemberSignature Language="F#" Value="abstract member AddYears : DateTime * int -&gt; DateTime" Usage="calendar.AddYears (time, years)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
        <Parameter Name="years" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="time">
          <see cref="T:System.DateTime" /> Do której chcesz dodać lata.</param>
        <param name="years">Liczba lat do dodania.</param>
        <summary>Po przesłonięciu w klasie pochodnej zwraca <see cref="T:System.DateTime" /> czyli określoną liczbę lat od określonego <see cref="T:System.DateTime" />.</summary>
        <returns>
          <see cref="T:System.DateTime" /> , Wynikiem dodawania określoną liczbę lat do określonego <see cref="T:System.DateTime" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `years` Wartość jest dodawana do określonego <xref:System.DateTime>. Jeśli `years` jest ujemna, wynikowy <xref:System.DateTime> jest starsza niż określona <xref:System.DateTime>.  
  
 Część dnia wynikowy <xref:System.DateTime> jest wpływ na wynikowy dzień nie jest prawidłowym dniem w wynikowej miesiąca roku wynikowy. Zostanie on zmieniony na ostatni dzień prawidłowe wynikowy miesiąca roku wynikowe. Część miesiąca wynikowy <xref:System.DateTime> działa na miesiąc wynikowy nie jest prawidłową miesiąca w roku wynikowe. Zostanie on zmieniony z ostatnim miesiącem prawidłowy w wynikowej roku. Część ery wynikowy <xref:System.DateTime> jest wpływ na wynikowy roku znajduje się poza ery określonego <xref:System.DateTime>. Część pory dnia wynikowy <xref:System.DateTime> pozostaje taka sama jak określony <xref:System.DateTime>.  
  
 Na przykład w kalendarzu gregoriańskim, luty ma 28 dni, z wyjątkiem w roku przestępnym gdy ma 29 dni. Jeśli określona data jest dnia 29 lutego w roku przestępnym i wartość `years` wynosi 1, wynikowy data to 28. dnia lutego w następnym roku.  
  
 Jeśli `years` jest ujemna, wynikowy <xref:System.DateTime> jest starsza niż określona <xref:System.DateTime>.  
  
 <xref:System.DateTime.Kind%2A> Właściwości zwracanego <xref:System.DateTime> zawsze wartość jest równa <xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>. Można zachować <xref:System.DateTime.Kind%2A> właściwość `time` parametrów, wywołując <xref:System.DateTime.SpecifyKind%2A?displayProperty=nameWithType> metody, jak w poniższym przykładzie pokazano.  
  
 [!code-csharp[System.Globalization.Calendar.AddMethods#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.calendar.addmethods/cs/add1.cs#8)]
 [!code-vb[System.Globalization.Calendar.AddMethods#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.calendar.addmethods/vb/add1.vb#8)]  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje członkowie <xref:System.Globalization.Calendar> klasy.  
  
 [!code-cpp[System.Globalization.Calendar#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.Calendar/CPP/calendar.cpp#1)]
 [!code-csharp[System.Globalization.Calendar#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.Calendar/CS/calendar.cs#1)]
 [!code-vb[System.Globalization.Calendar#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.Calendar/VB/calendar.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Wartość wynikowa <see cref="T:System.DateTime" /> jest poza obsługiwanym zakresem tego kalendarza.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="years" /> znajduje się poza obsługiwanym zakresem od <see cref="T:System.DateTime" /> zwracają wartość.</exception>
        <altmember cref="T:System.DateTime" />
        <altmember cref="M:System.Globalization.Calendar.AddMonths(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddWeeks(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddDays(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddHours(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddMinutes(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddSeconds(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddMilliseconds(System.DateTime,System.Double)" />
      </Docs>
    </Member>
    <Member MemberName="AlgorithmType">
      <MemberSignature Language="C#" Value="public virtual System.Globalization.CalendarAlgorithmType AlgorithmType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Globalization.CalendarAlgorithmType AlgorithmType" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.Calendar.AlgorithmType" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property AlgorithmType As CalendarAlgorithmType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Globalization::CalendarAlgorithmType AlgorithmType { System::Globalization::CalendarAlgorithmType get(); };" />
      <MemberSignature Language="F#" Value="member this.AlgorithmType : System.Globalization.CalendarAlgorithmType" Usage="System.Globalization.Calendar.AlgorithmType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Globalization.CalendarAlgorithmType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość wskazującą, czy bieżący kalendarz jest oparte na słoneczne, oparte na księżycowy lub jako kombinację obu tych.</summary>
        <value>Jedną z <see cref="T:System.Globalization.CalendarAlgorithmType" /> wartości.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 W poniższym przykładzie użyto odbicia do utworzenia wystąpienia każdej <xref:System.Globalization.Calendar> typ w .NET Framework i wyświetla wartość jego <xref:System.Globalization.Calendar.AlgorithmType%2A> właściwości.  
  
 [!code-csharp[System.Globalization.Calendar.AlgorithmType#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.calendar.algorithmtype/cs/algorithmtype1.cs#1)]
 [!code-vb[System.Globalization.Calendar.AlgorithmType#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.calendar.algorithmtype/vb/algorithmtype1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public virtual object Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.Calendar.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Clone () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ Clone();" />
      <MemberSignature Language="F#" Value="abstract member Clone : unit -&gt; obj&#xA;override this.Clone : unit -&gt; obj" Usage="calendar.Clone " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ICloneable.Clone</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Tworzy nowy obiekt, który jest kopią bieżącego <see cref="T:System.Globalization.Calendar" /> obiektu.</summary>
        <returns>Nowe wystąpienie klasy <see cref="T:System.Object" /> oznacza to wszystkich elementów członkowskich klonowania bieżącego <see cref="T:System.Globalization.Calendar" /> obiektu.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Nowy klon wszystkich elementów członkowskich nie jest tylko do odczytu.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Object.MemberwiseClone" />
      </Docs>
    </Member>
    <Member MemberName="CurrentEra">
      <MemberSignature Language="C#" Value="public const int CurrentEra = 0;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 CurrentEra = (0)" />
      <MemberSignature Language="DocId" Value="F:System.Globalization.Calendar.CurrentEra" />
      <MemberSignature Language="VB.NET" Value="Public Const CurrentEra As Integer  = 0" />
      <MemberSignature Language="C++ CLI" Value="public: int CurrentEra = 0;" />
      <MemberSignature Language="F#" Value="val mutable CurrentEra : int" Usage="System.Globalization.Calendar.CurrentEra" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>Reprezentuje bieżącej ery bieżący kalendarz.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Globalization.Calendar.CurrentEra> Pole reprezentuje indeks bieżącej ery w <xref:System.Globalization.Calendar.Eras%2A> tablicy. Ponieważ ery są ułożone w odwrotnej kolejności (od bieżącej ery do wcześniejszych ery), to pole jest stałą, która ma wartość 0.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Globalization.Calendar.Eras" />
      </Docs>
    </Member>
    <Member MemberName="DaysInYearBeforeMinSupportedYear">
      <MemberSignature Language="C#" Value="protected virtual int DaysInYearBeforeMinSupportedYear { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 DaysInYearBeforeMinSupportedYear" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.Calendar.DaysInYearBeforeMinSupportedYear" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property DaysInYearBeforeMinSupportedYear As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property int DaysInYearBeforeMinSupportedYear { int get(); };" />
      <MemberSignature Language="F#" Value="member this.DaysInYearBeforeMinSupportedYear : int" Usage="System.Globalization.Calendar.DaysInYearBeforeMinSupportedYear" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera liczbę dni w roku poprzedzającym rok, który jest określony przez <see cref="P:System.Globalization.Calendar.MinSupportedDateTime" /> właściwości.</summary>
        <value>Liczba dni w roku poprzedzającym z roku określonego przez <see cref="P:System.Globalization.Calendar.MinSupportedDateTime" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość zwraca wartość stałą 365. Należy pamiętać, że wartość właściwości może być zastąpiona przez klasy pochodne <xref:System.Globalization.Calendar> klasy.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Eras">
      <MemberSignature Language="C#" Value="public abstract int[] Eras { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32[] Eras" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.Calendar.Eras" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Eras As Integer()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property cli::array &lt;int&gt; ^ Eras { cli::array &lt;int&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Eras : int[]" Usage="System.Globalization.Calendar.Eras" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Po przesłonięciu w klasie pochodnej pobiera listę ery w bieżącym kalendarzu.</summary>
        <value>Tablica liczby całkowite reprezentujące ery w bieżącym kalendarzu.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ery znajdują się w odwrotnej kolejności chronologicznej z bieżącej ery jako pierwszy element tablicy i najstarsze ery jako ostatni element tablicy. Na przykład, wartość bieżącej ery w <xref:System.Globalization.JapaneseCalendar> to 4, który jest pierwszy element tablicy.  
  
   
  
## Examples  
 Poniższy przykład kodu wyświetla wartości zawartych w <xref:System.Globalization.JapaneseCalendar.Eras%2A?displayProperty=nameWithType>.  
  
 [!code-cpp[System.Globalization.JapaneseCalendar.Eras#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.JapaneseCalendar.Eras/CPP/yslin_japanesecalendar_eras.cpp#1)]
 [!code-csharp[System.Globalization.JapaneseCalendar.Eras#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.JapaneseCalendar.Eras/CS/yslin_japanesecalendar_eras.cs#1)]
 [!code-vb[System.Globalization.JapaneseCalendar.Eras#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.JapaneseCalendar.Eras/VB/yslin_japanesecalendar_eras.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Globalization.Calendar.CurrentEra" />
      </Docs>
    </Member>
    <Member MemberName="GetDayOfMonth">
      <MemberSignature Language="C#" Value="public abstract int GetDayOfMonth (DateTime time);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetDayOfMonth(valuetype System.DateTime time) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.Calendar.GetDayOfMonth(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetDayOfMonth (time As DateTime) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract int GetDayOfMonth(DateTime time);" />
      <MemberSignature Language="F#" Value="abstract member GetDayOfMonth : DateTime -&gt; int" Usage="calendar.GetDayOfMonth time" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="time">
          <see cref="T:System.DateTime" /> Do odczytu.</param>
        <summary>Po przesłonięciu w klasie pochodnej zwraca dnia miesiąca w określonym <see cref="T:System.DateTime" />.</summary>
        <returns>Dodatnia liczba całkowita reprezentująca dzień miesiąca w <paramref name="time" /> parametru.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład kodu demonstruje członkowie <xref:System.Globalization.Calendar> klasy.  
  
 [!code-cpp[System.Globalization.Calendar#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.Calendar/CPP/calendar.cpp#1)]
 [!code-csharp[System.Globalization.Calendar#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.Calendar/CS/calendar.cs#1)]
 [!code-vb[System.Globalization.Calendar#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.Calendar/VB/calendar.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.DateTime.Day" />
        <altmember cref="M:System.Globalization.Calendar.GetEra(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetYear(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetMonth(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetWeekOfYear(System.DateTime,System.Globalization.CalendarWeekRule,System.DayOfWeek)" />
        <altmember cref="M:System.Globalization.Calendar.GetDayOfYear(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetDayOfWeek(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetHour(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetMinute(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetSecond(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetMilliseconds(System.DateTime)" />
      </Docs>
    </Member>
    <Member MemberName="GetDayOfWeek">
      <MemberSignature Language="C#" Value="public abstract DayOfWeek GetDayOfWeek (DateTime time);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.DayOfWeek GetDayOfWeek(valuetype System.DateTime time) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.Calendar.GetDayOfWeek(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetDayOfWeek (time As DateTime) As DayOfWeek" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract DayOfWeek GetDayOfWeek(DateTime time);" />
      <MemberSignature Language="F#" Value="abstract member GetDayOfWeek : DateTime -&gt; DayOfWeek" Usage="calendar.GetDayOfWeek time" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DayOfWeek</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="time">
          <see cref="T:System.DateTime" /> Do odczytu.</param>
        <summary>Po przesłonięciu w klasie pochodnej Zwraca dzień tygodnia w określonym <see cref="T:System.DateTime" />.</summary>
        <returns>A <see cref="T:System.DayOfWeek" /> wartość reprezentującą dzień tygodnia w <paramref name="time" /> parametru.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.DayOfWeek> Wartości to niedziela, poniedziałek, Wtorek, Środa, czwartek, piątek i sobota.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje członkowie <xref:System.Globalization.Calendar> klasy.  
  
 [!code-cpp[System.Globalization.Calendar#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.Calendar/CPP/calendar.cpp#1)]
 [!code-csharp[System.Globalization.Calendar#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.Calendar/CS/calendar.cs#1)]
 [!code-vb[System.Globalization.Calendar#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.Calendar/VB/calendar.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.DateTime.DayOfWeek" />
        <altmember cref="T:System.DayOfWeek" />
        <altmember cref="M:System.Globalization.Calendar.GetEra(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetYear(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetMonth(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetWeekOfYear(System.DateTime,System.Globalization.CalendarWeekRule,System.DayOfWeek)" />
        <altmember cref="M:System.Globalization.Calendar.GetDayOfYear(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetDayOfMonth(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetHour(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetMinute(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetSecond(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetMilliseconds(System.DateTime)" />
      </Docs>
    </Member>
    <Member MemberName="GetDayOfYear">
      <MemberSignature Language="C#" Value="public abstract int GetDayOfYear (DateTime time);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetDayOfYear(valuetype System.DateTime time) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.Calendar.GetDayOfYear(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetDayOfYear (time As DateTime) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract int GetDayOfYear(DateTime time);" />
      <MemberSignature Language="F#" Value="abstract member GetDayOfYear : DateTime -&gt; int" Usage="calendar.GetDayOfYear time" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="time">
          <see cref="T:System.DateTime" /> Do odczytu.</param>
        <summary>Po przesłonięciu w klasie pochodnej Zwraca dzień roku w określonym <see cref="T:System.DateTime" />.</summary>
        <returns>Dodatnią liczbą całkowitą reprezentującą dzień roku <paramref name="time" /> parametru.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dzień roku jest zdefiniowany jako liczba dni od pierwszego dnia roku. Na przykład w <xref:System.Globalization.GregorianCalendar>, <xref:System.Globalization.Calendar.GetDayOfYear%2A> dla 1 stycznia zwraca 1, a <xref:System.Globalization.Calendar.GetDayOfYear%2A> do 31 grudnia zwraca 365 wspólnej roku lub 366 w roku przestępnym.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje członkowie <xref:System.Globalization.Calendar> klasy.  
  
 [!code-cpp[System.Globalization.Calendar#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.Calendar/CPP/calendar.cpp#1)]
 [!code-csharp[System.Globalization.Calendar#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.Calendar/CS/calendar.cs#1)]
 [!code-vb[System.Globalization.Calendar#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.Calendar/VB/calendar.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.DateTime.DayOfYear" />
        <altmember cref="M:System.Globalization.Calendar.GetEra(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetYear(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetMonth(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetWeekOfYear(System.DateTime,System.Globalization.CalendarWeekRule,System.DayOfWeek)" />
        <altmember cref="M:System.Globalization.Calendar.GetDayOfMonth(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetDayOfWeek(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetHour(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetMinute(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetSecond(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetMilliseconds(System.DateTime)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetDaysInMonth">
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Po przesłonięciu w klasie pochodnej zwraca liczbę dni w danym miesiącu.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetDaysInMonth">
      <MemberSignature Language="C#" Value="public virtual int GetDaysInMonth (int year, int month);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetDaysInMonth(int32 year, int32 month) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.Calendar.GetDaysInMonth(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDaysInMonth (year As Integer, month As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int GetDaysInMonth(int year, int month);" />
      <MemberSignature Language="F#" Value="abstract member GetDaysInMonth : int * int -&gt; int&#xA;override this.GetDaysInMonth : int * int -&gt; int" Usage="calendar.GetDaysInMonth (year, month)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
        <Parameter Name="month" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year">Liczba całkowita, która reprezentuje rok.</param>
        <param name="month">Dodatnia liczba całkowita, która reprezentuje miesiąca.</param>
        <summary>Zwraca liczbę dni w określonym miesiącu i roku bieżącej ery.</summary>
        <returns>Liczba dni w danym miesiącu roku określony w bieżącej ery.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Na przykład w <xref:System.Globalization.GregorianCalendar>, <xref:System.Globalization.Calendar.GetDaysInMonth%2A> dla lutego zwraca 28 w typowych roku lub 29 w roku przestępnym.  
  
   
  
## Examples  
 Poniższy przykład kodu porównuje różne implementacje <xref:System.Globalization.Calendar> klasy.  
  
 [!code-cpp[System.Globalization.Calendar_Compare#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.Calendar_Compare/CPP/calendar_compare.cpp#1)]
 [!code-csharp[System.Globalization.Calendar_Compare#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.Calendar_Compare/CS/calendar_compare.cs#1)]
 [!code-vb[System.Globalization.Calendar_Compare#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.Calendar_Compare/VB/calendar_compare.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="year" /> znajduje się poza zakresem obsługiwanym przez kalendarz.  
  
—lub— 
 <paramref name="month" /> znajduje się poza zakresem obsługiwanym przez kalendarz.</exception>
        <altmember cref="T:System.Globalization.GregorianCalendar" />
        <altmember cref="M:System.Globalization.Calendar.GetMonthsInYear(System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.GetDaysInYear(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetDaysInMonth">
      <MemberSignature Language="C#" Value="public abstract int GetDaysInMonth (int year, int month, int era);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetDaysInMonth(int32 year, int32 month, int32 era) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.Calendar.GetDaysInMonth(System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetDaysInMonth (year As Integer, month As Integer, era As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract int GetDaysInMonth(int year, int month, int era);" />
      <MemberSignature Language="F#" Value="abstract member GetDaysInMonth : int * int * int -&gt; int" Usage="calendar.GetDaysInMonth (year, month, era)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
        <Parameter Name="month" Type="System.Int32" />
        <Parameter Name="era" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year">Liczba całkowita, która reprezentuje rok.</param>
        <param name="month">Dodatnia liczba całkowita, która reprezentuje miesiąca.</param>
        <param name="era">Liczba całkowita, która reprezentuje ery.</param>
        <summary>W przypadku przesłonięcia w klasie pochodnej, zwraca liczbę dni określonego miesiąca, rok i ery.</summary>
        <returns>Liczba dni w danym miesiącu określonego roku w określonym ery.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Na przykład w <xref:System.Globalization.GregorianCalendar>, <xref:System.Globalization.Calendar.GetDaysInMonth%2A> dla lutego zwraca 28 w typowych roku lub 29 w roku przestępnym.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="year" /> znajduje się poza zakresem obsługiwanym przez kalendarz.  
  
—lub— 
 <paramref name="month" /> znajduje się poza zakresem obsługiwanym przez kalendarz.  
  
—lub— 
 <paramref name="era" /> znajduje się poza zakresem obsługiwanym przez kalendarz.</exception>
        <block subset="none" type="overrides">
          <para>Klasy pochodne muszą obsługiwać <see cref="F:System.Globalization.Calendar.CurrentEra" /> kiedy jest przekazywana jako <paramref name="era" /> parametru. Jednym ze sposobów, aby obsługiwać <see cref="F:System.Globalization.Calendar.CurrentEra" /> polega na zastąpieniu wartość przechowywaną w <c>ery [0]</c>, która jest wartością dla bieżącej ery kalendarza.</para>
        </block>
        <altmember cref="T:System.Globalization.GregorianCalendar" />
        <altmember cref="F:System.Globalization.Calendar.CurrentEra" />
        <altmember cref="P:System.Globalization.Calendar.Eras" />
        <altmember cref="M:System.Globalization.Calendar.GetMonthsInYear(System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.GetDaysInYear(System.Int32)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetDaysInYear">
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>W przypadku przesłonięcia w klasie pochodnej, zwraca liczbę dni w roku określony.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetDaysInYear">
      <MemberSignature Language="C#" Value="public virtual int GetDaysInYear (int year);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetDaysInYear(int32 year) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.Calendar.GetDaysInYear(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDaysInYear (year As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int GetDaysInYear(int year);" />
      <MemberSignature Language="F#" Value="abstract member GetDaysInYear : int -&gt; int&#xA;override this.GetDaysInYear : int -&gt; int" Usage="calendar.GetDaysInYear year" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year">Liczba całkowita, która reprezentuje rok.</param>
        <summary>Zwraca liczbę dni w roku określony w bieżącej ery.</summary>
        <returns>Liczba dni w roku określony w bieżącej ery.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Na przykład w <xref:System.Globalization.GregorianCalendar>, <xref:System.Globalization.Calendar.GetDaysInYear%2A> zwraca 365 dla typowych roku lub 366 w roku przestępnym.  
  
   
  
## Examples  
 Poniższy przykład kodu porównuje różne implementacje <xref:System.Globalization.Calendar> klasy.  
  
 [!code-cpp[System.Globalization.Calendar_Compare#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.Calendar_Compare/CPP/calendar_compare.cpp#1)]
 [!code-csharp[System.Globalization.Calendar_Compare#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.Calendar_Compare/CS/calendar_compare.cs#1)]
 [!code-vb[System.Globalization.Calendar_Compare#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.Calendar_Compare/VB/calendar_compare.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="year" /> znajduje się poza zakresem obsługiwanym przez kalendarz.</exception>
        <altmember cref="T:System.Globalization.GregorianCalendar" />
        <altmember cref="M:System.Globalization.Calendar.GetMonthsInYear(System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.GetDaysInMonth(System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetDaysInYear">
      <MemberSignature Language="C#" Value="public abstract int GetDaysInYear (int year, int era);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetDaysInYear(int32 year, int32 era) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.Calendar.GetDaysInYear(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetDaysInYear (year As Integer, era As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract int GetDaysInYear(int year, int era);" />
      <MemberSignature Language="F#" Value="abstract member GetDaysInYear : int * int -&gt; int" Usage="calendar.GetDaysInYear (year, era)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
        <Parameter Name="era" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year">Liczba całkowita, która reprezentuje rok.</param>
        <param name="era">Liczba całkowita, która reprezentuje ery.</param>
        <summary>W przypadku przesłonięcia w klasie pochodnej, zwraca liczbę dni w podanego roku i ery.</summary>
        <returns>Liczba dni w roku określonego w określonym ery.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Na przykład w <xref:System.Globalization.GregorianCalendar>, <xref:System.Globalization.Calendar.GetDaysInYear%2A> zwraca 365 dla typowych roku lub 366 w roku przestępnym.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="year" /> znajduje się poza zakresem obsługiwanym przez kalendarz.  
  
—lub— 
 <paramref name="era" /> znajduje się poza zakresem obsługiwanym przez kalendarz.</exception>
        <block subset="none" type="overrides">
          <para>Klasy pochodne muszą obsługiwać <see cref="F:System.Globalization.Calendar.CurrentEra" /> kiedy jest przekazywana jako <paramref name="era" /> parametru. Jednym ze sposobów, aby obsługiwać <see cref="F:System.Globalization.Calendar.CurrentEra" /> polega na zastąpieniu wartość przechowywaną w <c>ery [0]</c>, która jest wartością dla bieżącej ery kalendarza.</para>
        </block>
        <altmember cref="T:System.Globalization.GregorianCalendar" />
        <altmember cref="F:System.Globalization.Calendar.CurrentEra" />
        <altmember cref="P:System.Globalization.Calendar.Eras" />
        <altmember cref="M:System.Globalization.Calendar.GetMonthsInYear(System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.GetDaysInMonth(System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetEra">
      <MemberSignature Language="C#" Value="public abstract int GetEra (DateTime time);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetEra(valuetype System.DateTime time) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.Calendar.GetEra(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetEra (time As DateTime) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract int GetEra(DateTime time);" />
      <MemberSignature Language="F#" Value="abstract member GetEra : DateTime -&gt; int" Usage="calendar.GetEra time" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="time">
          <see cref="T:System.DateTime" /> Do odczytu.</param>
        <summary>Po przesłonięciu w klasie pochodnej zwraca ery w określonym <see cref="T:System.DateTime" />.</summary>
        <returns>Liczba całkowita, która reprezentuje ery <paramref name="time" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład kodu demonstruje członkowie <xref:System.Globalization.Calendar> klasy.  
  
 [!code-cpp[System.Globalization.Calendar#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.Calendar/CPP/calendar.cpp#1)]
 [!code-csharp[System.Globalization.Calendar#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.Calendar/CS/calendar.cs#1)]
 [!code-vb[System.Globalization.Calendar#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.Calendar/VB/calendar.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.DateTime" />
        <altmember cref="F:System.Globalization.Calendar.CurrentEra" />
        <altmember cref="P:System.Globalization.Calendar.Eras" />
        <altmember cref="M:System.Globalization.Calendar.GetYear(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetMonth(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetWeekOfYear(System.DateTime,System.Globalization.CalendarWeekRule,System.DayOfWeek)" />
        <altmember cref="M:System.Globalization.Calendar.GetDayOfYear(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetDayOfMonth(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetDayOfWeek(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetHour(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetMinute(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetSecond(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetMilliseconds(System.DateTime)" />
      </Docs>
    </Member>
    <Member MemberName="GetHour">
      <MemberSignature Language="C#" Value="public virtual int GetHour (DateTime time);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetHour(valuetype System.DateTime time) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.Calendar.GetHour(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetHour (time As DateTime) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int GetHour(DateTime time);" />
      <MemberSignature Language="F#" Value="abstract member GetHour : DateTime -&gt; int&#xA;override this.GetHour : DateTime -&gt; int" Usage="calendar.GetHour time" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="time">
          <see cref="T:System.DateTime" /> Do odczytu.</param>
        <summary>Zwraca wartość godzin w określonym <see cref="T:System.DateTime" />.</summary>
        <returns>Liczba całkowita z zakresu od 0 do 23 reprezentująca godzinę w <paramref name="time" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład kodu demonstruje członkowie <xref:System.Globalization.Calendar> klasy.  
  
 [!code-cpp[System.Globalization.Calendar#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.Calendar/CPP/calendar.cpp#1)]
 [!code-csharp[System.Globalization.Calendar#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.Calendar/CS/calendar.cs#1)]
 [!code-vb[System.Globalization.Calendar#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.Calendar/VB/calendar.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.DateTime.Hour" />
        <altmember cref="M:System.Globalization.Calendar.GetEra(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetYear(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetMonth(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetWeekOfYear(System.DateTime,System.Globalization.CalendarWeekRule,System.DayOfWeek)" />
        <altmember cref="M:System.Globalization.Calendar.GetDayOfYear(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetDayOfMonth(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetDayOfWeek(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetMinute(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetSecond(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetMilliseconds(System.DateTime)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetLeapMonth">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Oblicza przestępnym miesiąca określonego roku lub rok, jak i ery.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetLeapMonth">
      <MemberSignature Language="C#" Value="public virtual int GetLeapMonth (int year);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetLeapMonth(int32 year) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.Calendar.GetLeapMonth(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetLeapMonth (year As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int GetLeapMonth(int year);" />
      <MemberSignature Language="F#" Value="abstract member GetLeapMonth : int -&gt; int&#xA;override this.GetLeapMonth : int -&gt; int" Usage="calendar.GetLeapMonth year" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year">Rok.</param>
        <summary>Oblicza miesiąca określonego roku przestępnym.</summary>
        <returns>Dodatnia liczba całkowita, która wskazuje miesiąca określonego roku przestępnym.  
  
—lub— 
Zero, jeśli ten kalendarz nie obsługuje miesiąca przestępnym lub <paramref name="year" /> parametru nie reprezentuje w roku przestępnym.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 W kalendarzu, który obsługuje pojęcie miesiąca przestępnym miesiąc przestępnym może wystąpić po upływie danego miesiąca lub po miesiącu w roku. Na przykład <xref:System.Globalization.EastAsianLunisolarCalendar.GetMonth%28System.DateTime%29> metoda zwraca liczbę z zakresu od 1 do 13, wskazującą miesiąca skojarzone z określoną datą. W przypadku miesiąca przestępnym między ósmej i dziewiątego miesiące roku, <xref:System.Globalization.EastAsianLunisolarCalendar.GetMonth%28System.DateTime%29> metoda zwraca 8 ósmego miesiąca 9 na potrzeby przestępnym ósmego miesiąca i 10 dziewiątego miesiąca.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetLeapMonth">
      <MemberSignature Language="C#" Value="public virtual int GetLeapMonth (int year, int era);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetLeapMonth(int32 year, int32 era) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.Calendar.GetLeapMonth(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetLeapMonth (year As Integer, era As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int GetLeapMonth(int year, int era);" />
      <MemberSignature Language="F#" Value="abstract member GetLeapMonth : int * int -&gt; int&#xA;override this.GetLeapMonth : int * int -&gt; int" Usage="calendar.GetLeapMonth (year, era)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
        <Parameter Name="era" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year">Rok.</param>
        <param name="era">Ery.</param>
        <summary>Oblicza przestępnym miesiąca określonego roku i ery.</summary>
        <returns>Dodatnia liczba całkowita, która wskazuje przestępnym miesiąca określonego roku i ery.  
  
—lub— 
Zero, jeśli ten kalendarz nie obsługuje miesiąca przestępnym lub <paramref name="year" /> i <paramref name="era" /> parametrów nie zostanie określona w roku przestępnym.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 W kalendarzu, który obsługuje pojęcie miesiąca przestępnym miesiąc przestępnym może wystąpić po upływie danego miesiąca lub po miesiącu w roku. Na przykład <xref:System.Globalization.EastAsianLunisolarCalendar.GetMonth%28System.DateTime%29> metoda zwraca liczbę z zakresu od 1 do 13, wskazującą miesiąca skojarzone z określoną datą. W przypadku miesiąca przestępnym między ósmej i dziewiątego miesiące roku, <xref:System.Globalization.EastAsianLunisolarCalendar.GetMonth%28System.DateTime%29> metoda zwraca 8 ósmego miesiąca 9 na potrzeby przestępnym ósmego miesiąca i 10 dziewiątego miesiąca.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMilliseconds">
      <MemberSignature Language="C#" Value="public virtual double GetMilliseconds (DateTime time);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 GetMilliseconds(valuetype System.DateTime time) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.Calendar.GetMilliseconds(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetMilliseconds (time As DateTime) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual double GetMilliseconds(DateTime time);" />
      <MemberSignature Language="F#" Value="abstract member GetMilliseconds : DateTime -&gt; double&#xA;override this.GetMilliseconds : DateTime -&gt; double" Usage="calendar.GetMilliseconds time" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="time">
          <see cref="T:System.DateTime" /> Do odczytu.</param>
        <summary>Zwraca wartość milisekund w określonym <see cref="T:System.DateTime" />.</summary>
        <returns>Podwójnej precyzji zmiennoprzecinkową z zakresu od 0 do 999, który reprezentuje milisekund w <paramref name="time" /> parametru.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład kodu demonstruje członkowie <xref:System.Globalization.Calendar> klasy.  
  
 [!code-cpp[System.Globalization.Calendar#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.Calendar/CPP/calendar.cpp#1)]
 [!code-csharp[System.Globalization.Calendar#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.Calendar/CS/calendar.cs#1)]
 [!code-vb[System.Globalization.Calendar#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.Calendar/VB/calendar.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.DateTime.Millisecond" />
        <altmember cref="M:System.Globalization.Calendar.GetEra(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetYear(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetMonth(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetWeekOfYear(System.DateTime,System.Globalization.CalendarWeekRule,System.DayOfWeek)" />
        <altmember cref="M:System.Globalization.Calendar.GetDayOfYear(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetDayOfMonth(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetDayOfWeek(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetHour(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetMinute(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetSecond(System.DateTime)" />
      </Docs>
    </Member>
    <Member MemberName="GetMinute">
      <MemberSignature Language="C#" Value="public virtual int GetMinute (DateTime time);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetMinute(valuetype System.DateTime time) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.Calendar.GetMinute(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetMinute (time As DateTime) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int GetMinute(DateTime time);" />
      <MemberSignature Language="F#" Value="abstract member GetMinute : DateTime -&gt; int&#xA;override this.GetMinute : DateTime -&gt; int" Usage="calendar.GetMinute time" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="time">
          <see cref="T:System.DateTime" /> Do odczytu.</param>
        <summary>Zwraca wartość minut w określonym <see cref="T:System.DateTime" />.</summary>
        <returns>Liczba całkowita z zakresu od 0 do 59 reprezentującą minut w <paramref name="time" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład kodu demonstruje członkowie <xref:System.Globalization.Calendar> klasy.  
  
 [!code-cpp[System.Globalization.Calendar#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.Calendar/CPP/calendar.cpp#1)]
 [!code-csharp[System.Globalization.Calendar#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.Calendar/CS/calendar.cs#1)]
 [!code-vb[System.Globalization.Calendar#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.Calendar/VB/calendar.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.DateTime.Minute" />
        <altmember cref="M:System.Globalization.Calendar.GetEra(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetYear(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetMonth(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetWeekOfYear(System.DateTime,System.Globalization.CalendarWeekRule,System.DayOfWeek)" />
        <altmember cref="M:System.Globalization.Calendar.GetDayOfYear(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetDayOfMonth(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetDayOfWeek(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetHour(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetSecond(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetMilliseconds(System.DateTime)" />
      </Docs>
    </Member>
    <Member MemberName="GetMonth">
      <MemberSignature Language="C#" Value="public abstract int GetMonth (DateTime time);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetMonth(valuetype System.DateTime time) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.Calendar.GetMonth(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetMonth (time As DateTime) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract int GetMonth(DateTime time);" />
      <MemberSignature Language="F#" Value="abstract member GetMonth : DateTime -&gt; int" Usage="calendar.GetMonth time" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="time">
          <see cref="T:System.DateTime" /> Do odczytu.</param>
        <summary>Po przesłonięciu w klasie pochodnej Zwraca miesiąc w określonym <see cref="T:System.DateTime" />.</summary>
        <returns>Dodatnia liczba całkowita reprezentująca miesiąc w <paramref name="time" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Na przykład w <xref:System.Globalization.HebrewCalendar>, <xref:System.Globalization.Calendar.GetMonth%2A> dla Tishrei zwraca 1, a <xref:System.Globalization.Calendar.GetMonth%2A> dla Elul zwraca 12 w typowych roku lub 13 w roku przestępnym.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje członkowie <xref:System.Globalization.Calendar> klasy.  
  
 [!code-cpp[System.Globalization.Calendar#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.Calendar/CPP/calendar.cpp#1)]
 [!code-csharp[System.Globalization.Calendar#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.Calendar/CS/calendar.cs#1)]
 [!code-vb[System.Globalization.Calendar#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.Calendar/VB/calendar.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.DateTime.Month" />
        <altmember cref="M:System.Globalization.Calendar.GetEra(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetYear(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetWeekOfYear(System.DateTime,System.Globalization.CalendarWeekRule,System.DayOfWeek)" />
        <altmember cref="M:System.Globalization.Calendar.GetDayOfYear(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetDayOfMonth(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetDayOfWeek(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetHour(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetMinute(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetSecond(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetMilliseconds(System.DateTime)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetMonthsInYear">
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>W przypadku przesłonięcia w klasie pochodnej, zwraca liczbę miesięcy w określonym roku.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetMonthsInYear">
      <MemberSignature Language="C#" Value="public virtual int GetMonthsInYear (int year);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetMonthsInYear(int32 year) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.Calendar.GetMonthsInYear(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetMonthsInYear (year As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int GetMonthsInYear(int year);" />
      <MemberSignature Language="F#" Value="abstract member GetMonthsInYear : int -&gt; int&#xA;override this.GetMonthsInYear : int -&gt; int" Usage="calendar.GetMonthsInYear year" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year">Liczba całkowita, która reprezentuje rok.</param>
        <summary>Zwraca liczbę miesięcy w roku określony w bieżącej ery.</summary>
        <returns>Liczba miesięcy roku określony w bieżącej ery.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Na przykład w <xref:System.Globalization.HebrewCalendar>, <xref:System.Globalization.Calendar.GetMonthsInYear%2A> zwraca 12 dla typowych roku lub 13 w roku przestępnym.  
  
   
  
## Examples  
 Poniższy przykład kodu porównuje różne implementacje <xref:System.Globalization.Calendar> klasy.  
  
 [!code-cpp[System.Globalization.Calendar_Compare#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.Calendar_Compare/CPP/calendar_compare.cpp#1)]
 [!code-csharp[System.Globalization.Calendar_Compare#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.Calendar_Compare/CS/calendar_compare.cs#1)]
 [!code-vb[System.Globalization.Calendar_Compare#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.Calendar_Compare/VB/calendar_compare.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="year" /> znajduje się poza zakresem obsługiwanym przez kalendarz.</exception>
        <altmember cref="M:System.Globalization.Calendar.GetDaysInYear(System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.GetDaysInMonth(System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetMonthsInYear">
      <MemberSignature Language="C#" Value="public abstract int GetMonthsInYear (int year, int era);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetMonthsInYear(int32 year, int32 era) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.Calendar.GetMonthsInYear(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetMonthsInYear (year As Integer, era As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract int GetMonthsInYear(int year, int era);" />
      <MemberSignature Language="F#" Value="abstract member GetMonthsInYear : int * int -&gt; int" Usage="calendar.GetMonthsInYear (year, era)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
        <Parameter Name="era" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year">Liczba całkowita, która reprezentuje rok.</param>
        <param name="era">Liczba całkowita, która reprezentuje ery.</param>
        <summary>W przypadku przesłonięcia w klasie pochodnej, zwraca liczbę miesięcy określonego roku w określonym ery.</summary>
        <returns>Liczba miesięcy w określonym roku w określonym ery.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Na przykład w <xref:System.Globalization.HebrewCalendar>, <xref:System.Globalization.Calendar.GetMonthsInYear%2A> zwraca 12 dla typowych roku lub 13 w roku przestępnym.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="year" /> znajduje się poza zakresem obsługiwanym przez kalendarz.  
  
—lub— 
 <paramref name="era" /> znajduje się poza zakresem obsługiwanym przez kalendarz.</exception>
        <block subset="none" type="overrides">
          <para>Klasy pochodne muszą obsługiwać <see cref="F:System.Globalization.Calendar.CurrentEra" /> kiedy jest przekazywana jako <paramref name="era" /> parametru. Jednym ze sposobów, aby obsługiwać <see cref="F:System.Globalization.Calendar.CurrentEra" /> polega na zastąpieniu wartość przechowywaną w <c>ery [0]</c>, która jest wartością dla bieżącej ery kalendarza.</para>
        </block>
        <altmember cref="F:System.Globalization.Calendar.CurrentEra" />
        <altmember cref="P:System.Globalization.Calendar.Eras" />
        <altmember cref="M:System.Globalization.Calendar.GetDaysInYear(System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.GetDaysInMonth(System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetSecond">
      <MemberSignature Language="C#" Value="public virtual int GetSecond (DateTime time);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetSecond(valuetype System.DateTime time) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.Calendar.GetSecond(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSecond (time As DateTime) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int GetSecond(DateTime time);" />
      <MemberSignature Language="F#" Value="abstract member GetSecond : DateTime -&gt; int&#xA;override this.GetSecond : DateTime -&gt; int" Usage="calendar.GetSecond time" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="time">
          <see cref="T:System.DateTime" /> Do odczytu.</param>
        <summary>Zwraca wartość sekund w określonym <see cref="T:System.DateTime" />.</summary>
        <returns>Liczba całkowita z zakresu od 0 do 59 reprezentującą sekund w <paramref name="time" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład kodu demonstruje członkowie <xref:System.Globalization.Calendar> klasy.  
  
 [!code-cpp[System.Globalization.Calendar#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.Calendar/CPP/calendar.cpp#1)]
 [!code-csharp[System.Globalization.Calendar#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.Calendar/CS/calendar.cs#1)]
 [!code-vb[System.Globalization.Calendar#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.Calendar/VB/calendar.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.DateTime.Second" />
        <altmember cref="M:System.Globalization.Calendar.GetEra(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetYear(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetMonth(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetWeekOfYear(System.DateTime,System.Globalization.CalendarWeekRule,System.DayOfWeek)" />
        <altmember cref="M:System.Globalization.Calendar.GetDayOfYear(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetDayOfMonth(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetDayOfWeek(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetHour(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetMinute(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetMilliseconds(System.DateTime)" />
      </Docs>
    </Member>
    <Member MemberName="GetWeekOfYear">
      <MemberSignature Language="C#" Value="public virtual int GetWeekOfYear (DateTime time, System.Globalization.CalendarWeekRule rule, DayOfWeek firstDayOfWeek);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetWeekOfYear(valuetype System.DateTime time, valuetype System.Globalization.CalendarWeekRule rule, valuetype System.DayOfWeek firstDayOfWeek) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.Calendar.GetWeekOfYear(System.DateTime,System.Globalization.CalendarWeekRule,System.DayOfWeek)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetWeekOfYear (time As DateTime, rule As CalendarWeekRule, firstDayOfWeek As DayOfWeek) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int GetWeekOfYear(DateTime time, System::Globalization::CalendarWeekRule rule, DayOfWeek firstDayOfWeek);" />
      <MemberSignature Language="F#" Value="abstract member GetWeekOfYear : DateTime * System.Globalization.CalendarWeekRule * DayOfWeek -&gt; int&#xA;override this.GetWeekOfYear : DateTime * System.Globalization.CalendarWeekRule * DayOfWeek -&gt; int" Usage="calendar.GetWeekOfYear (time, rule, firstDayOfWeek)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
        <Parameter Name="rule" Type="System.Globalization.CalendarWeekRule" />
        <Parameter Name="firstDayOfWeek" Type="System.DayOfWeek" />
      </Parameters>
      <Docs>
        <param name="time">Wartość daty i godziny.</param>
        <param name="rule">Wartość wyliczenia, który definiuje tydzień kalendarza.</param>
        <param name="firstDayOfWeek">Wartość wyliczenia, który reprezentuje pierwszy dzień tygodnia.</param>
        <summary>Zwraca tydzień roku, która zawiera datę w określonym <see cref="T:System.DateTime" /> wartość.</summary>
        <returns>Dodatnia liczba całkowita, która reprezentuje tydzień roku, która zawiera datę w <paramref name="time" /> parametru.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda może służyć do określenia liczby tygodni w roku, ustawiając `time` na ostatni dzień roku.  
  
 <xref:System.Globalization.DateTimeFormatInfo> Obiektu dla danej kultury, korzystającą z kalendarza wskazywanym przez <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A?displayProperty=nameWithType> właściwości zawiera następujące wartości specyficzne dla kultury, które mogą służyć do `rule` i `firstDayOfWeek` parametry:  
  
-   <xref:System.Globalization.DateTimeFormatInfo.FirstDayOfWeek%2A?displayProperty=nameWithType> Właściwość zawiera wartość domyślna pierwszy dzień tygodnia, który może służyć do `firstDayOfWeek` parametru.  
  
-   <xref:System.Globalization.DateTimeFormatInfo.CalendarWeekRule%2A?displayProperty=nameWithType> Właściwość zawiera domyślną regułę tydzień kalendarza, który może służyć do `rule` parametru.  
  
 W poniższym przykładzie użyto bieżącej kultury <xref:System.Globalization.DateTimeFormatInfo> obiektu, aby określić, że 1 stycznia 2011 znajduje się w pierwszym tygodniu roku w kalendarzu gregoriańskim.  
  
 [!code-csharp[System.Globalization.Calendar.GetWeekOfYear#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.Calendar.GetWeekOfYear/CS/getweekofyearex1.cs#2)]
 [!code-vb[System.Globalization.Calendar.GetWeekOfYear#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.Calendar.GetWeekOfYear/VB/getweekofyearex1.vb#2)]  
  
 Dla niektórych kalendarzy wywołanie <xref:System.Globalization.Calendar.GetWeekOfYear%2A> metoda zgłasza wyjątek <xref:System.ArgumentOutOfRangeException> dla określonej kombinacji `rule` i `firstDayOfWeek` wartości, nawet jeśli `time` jest późniejsza niż data zwrócona przez ten kalendarz <xref:System.Globalization.Calendar.MinSupportedDateTime%2A> właściwości. W poniższej tabeli wymieniono dotyczy kalendarze, szczególnymi `rule` wartości, a zakres obsługiwanych najwcześniejsze `time` wartości. Określone minimum <xref:System.DateTime> wartość zależy od wartości `firstDayOfWeek` parametru.  
  
|Kalendarz|Wartość CalendarWeekRule|Data gregoriańska (M/dd/rrrr)|Daty w kalendarzu (M/dd/rrrr)|  
|--------------|----------------------------|------------------------------------|--------------------------------------|  
|<xref:System.Globalization.ChineseLunisolarCalendar>|<xref:System.Globalization.CalendarWeekRule.FirstFullWeek>|2/19/1901 do 2/25/1901|1/1/1901 do 1/7/1901|  
|<xref:System.Globalization.ChineseLunisolarCalendar>|<xref:System.Globalization.CalendarWeekRule.FirstFourDayWeek>|2/19/1901 do 22/2/1901|1/01/1901 do 1/04/1901|  
|<xref:System.Globalization.HebrewCalendar>|<xref:System.Globalization.CalendarWeekRule.FirstDay>|9/17/1583|1/01/5344|  
|<xref:System.Globalization.HebrewCalendar>|<xref:System.Globalization.CalendarWeekRule.FirstFullWeek>|9/17/1583 do 9/23/1583|1/01/5344 do 1/07/5344|  
|<xref:System.Globalization.HebrewCalendar>|<xref:System.Globalization.CalendarWeekRule.FirstFourDayWeek>|9/17/1583 do 20/9/1583|1/01/5344 do 1/04/5344|  
|<xref:System.Globalization.HijriCalendar>|<xref:System.Globalization.CalendarWeekRule.FirstFullWeek>|7/18/0622 do 7/24/0622|1/01/0001 do 07/1/0001|  
|<xref:System.Globalization.HijriCalendar>|<xref:System.Globalization.CalendarWeekRule.FirstFourDayWeek>|7/18/0622 do 7/21/0622|1/01/0001 do 04/1/0001|  
|<xref:System.Globalization.JapaneseLunisolarCalendar>|<xref:System.Globalization.CalendarWeekRule.FirstFullWeek>|1/28/1960 do 2/03/1960|1/01/35-07/1/0035|  
|<xref:System.Globalization.JapaneseLunisolarCalendar>|<xref:System.Globalization.CalendarWeekRule.FirstFourDayWeek>|1/28/1960 do 1/31/1960|1/01/0035 do 1/04/0035|  
|<xref:System.Globalization.JulianCalendar>|<xref:System.Globalization.CalendarWeekRule.FirstFullWeek>|1/01/0001 do 05/1/0001|1/03/0001 do 07/1/0001|  
|<xref:System.Globalization.JulianCalendar>|<xref:System.Globalization.CalendarWeekRule.FirstFourDayWeek>|1/01/0001 do 02/1/0001|1/03/0001 do 04/1/0001|  
|<xref:System.Globalization.KoreanLunisolarCalendar>|<xref:System.Globalization.CalendarWeekRule.FirstFullWeek>|2/14/0918 do 2/20/0918|1/01/0918 do 1/07/0918|  
|<xref:System.Globalization.KoreanLunisolarCalendar>|<xref:System.Globalization.CalendarWeekRule.FirstFourDayWeek>|2/14/0918 do 2/17/0918|1/01/0918 do 1/04/0918|  
|<xref:System.Globalization.PersianCalendar>|<xref:System.Globalization.CalendarWeekRule.FirstFullWeek>|21/3/0622 do 3/27/0622|1/01/0001 do 07/1/0001|  
|<xref:System.Globalization.PersianCalendar>|<xref:System.Globalization.CalendarWeekRule.FirstFourDayWeek>|21/3/0622 do 3/24/0622|1/01/0001 do 04/1/0001|  
|<xref:System.Globalization.TaiwanLunisolarCalendar>|<xref:System.Globalization.CalendarWeekRule.FirstFullWeek>|2/18/1912 do 2/24/1912|1/01/0001 do 07/1/0001|  
|<xref:System.Globalization.TaiwanLunisolarCalendar>|<xref:System.Globalization.CalendarWeekRule.FirstFourDayWeek>|2/18/1912 do 21/2/1912|1/01/0001 do 04/1/0001|  
|<xref:System.Globalization.UmAlQuraCalendar>|<xref:System.Globalization.CalendarWeekRule.FirstFullWeek>|4/30/wartości 1900 w celu 5-06-1900|1/01/1318 do 07/1/1318|  
|<xref:System.Globalization.UmAlQuraCalendar>|<xref:System.Globalization.CalendarWeekRule.FirstFourDayWeek>|4/30/wartości 1900 w celu 5-03-1900|1/01/1318 do 1/04/1318|  
  
   
  
## Examples  
 Poniższy kod przedstawia przykład sposobu wynik <xref:System.Globalization.Calendar.GetWeekOfYear%2A> zmienia się zależnie od <xref:System.Globalization.DateTimeFormatInfo.FirstDayOfWeek%2A> i <xref:System.Globalization.CalendarWeekRule> używane. Jeśli określona data jest ostatni dzień tego roku, <xref:System.Globalization.Calendar.GetWeekOfYear%2A> zwraca całkowitą liczbę tygodni w danym roku.  
  
 [!code-cpp[System.Globalization.Calendar.GetWeekOfYear#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.Calendar.GetWeekOfYear/CPP/yslin_calendar_getweekofyear.cpp#1)]
 [!code-csharp[System.Globalization.Calendar.GetWeekOfYear#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.Calendar.GetWeekOfYear/CS/yslin_calendar_getweekofyear.cs#1)]
 [!code-vb[System.Globalization.Calendar.GetWeekOfYear#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.Calendar.GetWeekOfYear/VB/yslin_calendar_getweekofyear.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="time" /> jest starsza niż <see cref="P:System.Globalization.Calendar.MinSupportedDateTime" /> lub późniejsza niż <see cref="P:System.Globalization.Calendar.MaxSupportedDateTime" />.  
  
—lub— 
 <paramref name="firstDayOfWeek" /> nie jest prawidłowym <see cref="T:System.DayOfWeek" /> wartość.  
  
—lub— 
 <paramref name="rule" /> nie jest prawidłowym <see cref="T:System.Globalization.CalendarWeekRule" /> wartość.</exception>
        <altmember cref="T:System.DateTime" />
        <altmember cref="T:System.Globalization.CalendarWeekRule" />
        <altmember cref="T:System.DayOfWeek" />
        <altmember cref="M:System.Globalization.Calendar.GetEra(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetYear(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetMonth(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetDayOfYear(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetDayOfMonth(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetDayOfWeek(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetHour(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetMinute(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetSecond(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetMilliseconds(System.DateTime)" />
      </Docs>
    </Member>
    <Member MemberName="GetYear">
      <MemberSignature Language="C#" Value="public abstract int GetYear (DateTime time);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetYear(valuetype System.DateTime time) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.Calendar.GetYear(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetYear (time As DateTime) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract int GetYear(DateTime time);" />
      <MemberSignature Language="F#" Value="abstract member GetYear : DateTime -&gt; int" Usage="calendar.GetYear time" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="time">
          <see cref="T:System.DateTime" /> Do odczytu.</param>
        <summary>Po przesłonięciu w klasie pochodnej Zwraca rok w określonym <see cref="T:System.DateTime" />.</summary>
        <returns>Liczba całkowita, która reprezentuje rok w <paramref name="time" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład kodu demonstruje członkowie <xref:System.Globalization.Calendar> klasy.  
  
 [!code-cpp[System.Globalization.Calendar#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.Calendar/CPP/calendar.cpp#1)]
 [!code-csharp[System.Globalization.Calendar#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.Calendar/CS/calendar.cs#1)]
 [!code-vb[System.Globalization.Calendar#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.Calendar/VB/calendar.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.DateTime.Year" />
        <altmember cref="M:System.Globalization.Calendar.GetEra(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetMonth(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetWeekOfYear(System.DateTime,System.Globalization.CalendarWeekRule,System.DayOfWeek)" />
        <altmember cref="M:System.Globalization.Calendar.GetDayOfYear(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetDayOfMonth(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetDayOfWeek(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetHour(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetMinute(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetSecond(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetMilliseconds(System.DateTime)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="IsLeapDay">
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>W przypadku przesłonięcia w klasie pochodnej, określa, czy data jest dniem przestępnym.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsLeapDay">
      <MemberSignature Language="C#" Value="public virtual bool IsLeapDay (int year, int month, int day);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsLeapDay(int32 year, int32 month, int32 day) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.Calendar.IsLeapDay(System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IsLeapDay (year As Integer, month As Integer, day As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsLeapDay(int year, int month, int day);" />
      <MemberSignature Language="F#" Value="abstract member IsLeapDay : int * int * int -&gt; bool&#xA;override this.IsLeapDay : int * int * int -&gt; bool" Usage="calendar.IsLeapDay (year, month, day)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
        <Parameter Name="month" Type="System.Int32" />
        <Parameter Name="day" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year">Liczba całkowita, która reprezentuje rok.</param>
        <param name="month">Dodatnia liczba całkowita, która reprezentuje miesiąca.</param>
        <param name="day">Dodatnia liczba całkowita, która reprezentuje dzień.</param>
        <summary>Określa, czy określonej daty w bieżącej erze jest dniem przestępnym.</summary>
        <returns>
          <see langword="true" /> Jeśli określony dzień jest dniem przestępnym; w przeciwnym razie <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby było różnią się w roku kalendarzowym i rzeczywistym czasem ziemi obraca się wokół słońce lub rzeczywisty czas, który księżyca obraca się wokół ziemi, dla roku przestępnego ma różną liczbę dni od standardowego roku kalendarzowego. Każdy <xref:System.Globalization.Calendar> implementacja definiuje przestępnego inaczej.  
  
 Przestępnym dzień to dzień, w którym występuje tylko w roku przestępnym. Na przykład w kalendarzu gregoriańskim dnia 29 lutego jest tylko dnia przestępnym.  
  
   
  
## Examples  
 Poniższy przykład kodu porównuje różne implementacje <xref:System.Globalization.Calendar> klasy.  
  
 [!code-cpp[System.Globalization.Calendar_Compare#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.Calendar_Compare/CPP/calendar_compare.cpp#1)]
 [!code-csharp[System.Globalization.Calendar_Compare#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.Calendar_Compare/CS/calendar_compare.cs#1)]
 [!code-vb[System.Globalization.Calendar_Compare#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.Calendar_Compare/VB/calendar_compare.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="year" /> znajduje się poza zakresem obsługiwanym przez kalendarz.  
  
—lub— 
 <paramref name="month" /> znajduje się poza zakresem obsługiwanym przez kalendarz.  
  
—lub— 
 <paramref name="day" /> znajduje się poza zakresem obsługiwanym przez kalendarz.</exception>
        <altmember cref="M:System.Globalization.Calendar.GetMonthsInYear(System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.GetDaysInMonth(System.Int32,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.IsLeapYear(System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.IsLeapMonth(System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="IsLeapDay">
      <MemberSignature Language="C#" Value="public abstract bool IsLeapDay (int year, int month, int day, int era);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsLeapDay(int32 year, int32 month, int32 day, int32 era) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.Calendar.IsLeapDay(System.Int32,System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function IsLeapDay (year As Integer, month As Integer, day As Integer, era As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool IsLeapDay(int year, int month, int day, int era);" />
      <MemberSignature Language="F#" Value="abstract member IsLeapDay : int * int * int * int -&gt; bool" Usage="calendar.IsLeapDay (year, month, day, era)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
        <Parameter Name="month" Type="System.Int32" />
        <Parameter Name="day" Type="System.Int32" />
        <Parameter Name="era" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year">Liczba całkowita, która reprezentuje rok.</param>
        <param name="month">Dodatnia liczba całkowita, która reprezentuje miesiąca.</param>
        <param name="day">Dodatnia liczba całkowita, która reprezentuje dzień.</param>
        <param name="era">Liczba całkowita, która reprezentuje ery.</param>
        <summary>W przypadku przesłonięcia w klasie pochodnej, określa, czy określonej daty w określonym era jest dniem przestępnym.</summary>
        <returns>
          <see langword="true" /> Jeśli określony dzień jest dniem przestępnym; w przeciwnym razie <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby było różnią się w roku kalendarzowym i rzeczywistym czasem ziemi obraca się wokół słońce lub rzeczywisty czas, który księżyca obraca się wokół ziemi, dla roku przestępnego ma różną liczbę dni od standardowego roku kalendarzowego. Każdy <xref:System.Globalization.Calendar> implementacja definiuje przestępnego inaczej.  
  
 Przestępnym dzień to dzień, w którym występuje tylko w roku przestępnym. Na przykład w kalendarzu gregoriańskim dnia 29 lutego jest tylko dnia przestępnym.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="year" /> znajduje się poza zakresem obsługiwanym przez kalendarz.  
  
—lub— 
 <paramref name="month" /> znajduje się poza zakresem obsługiwanym przez kalendarz.  
  
—lub— 
 <paramref name="day" /> znajduje się poza zakresem obsługiwanym przez kalendarz.  
  
—lub— 
 <paramref name="era" /> znajduje się poza zakresem obsługiwanym przez kalendarz.</exception>
        <block subset="none" type="overrides">
          <para>Klasy pochodne muszą obsługiwać <see cref="F:System.Globalization.Calendar.CurrentEra" /> kiedy jest przekazywana jako <paramref name="era" /> parametru. Jednym ze sposobów, aby obsługiwać <see cref="F:System.Globalization.Calendar.CurrentEra" /> polega na zastąpieniu wartość przechowywaną w <c>ery [0]</c>, która jest wartością dla bieżącej ery kalendarza.</para>
        </block>
        <altmember cref="F:System.Globalization.Calendar.CurrentEra" />
        <altmember cref="P:System.Globalization.Calendar.Eras" />
        <altmember cref="M:System.Globalization.Calendar.GetMonthsInYear(System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.GetDaysInMonth(System.Int32,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.IsLeapYear(System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.IsLeapMonth(System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="IsLeapMonth">
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>W przypadku przesłonięcia w klasie pochodnej, określa, czy miesiąc jest miesiąca przestępnym.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsLeapMonth">
      <MemberSignature Language="C#" Value="public virtual bool IsLeapMonth (int year, int month);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsLeapMonth(int32 year, int32 month) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.Calendar.IsLeapMonth(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IsLeapMonth (year As Integer, month As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsLeapMonth(int year, int month);" />
      <MemberSignature Language="F#" Value="abstract member IsLeapMonth : int * int -&gt; bool&#xA;override this.IsLeapMonth : int * int -&gt; bool" Usage="calendar.IsLeapMonth (year, month)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
        <Parameter Name="month" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year">Liczba całkowita, która reprezentuje rok.</param>
        <param name="month">Dodatnia liczba całkowita, która reprezentuje miesiąca.</param>
        <summary>Określa, czy określonego miesiąca określonego roku w bieżącej ery miesiąca przestępnym.</summary>
        <returns>
          <see langword="true" /> w przypadku określonego miesiąca miesiąca przestępnym; w przeciwnym razie <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby było różnią się w roku kalendarzowym i rzeczywistym czasem ziemi obraca się wokół słońce lub rzeczywisty czas, który księżyca obraca się wokół ziemi, dla roku przestępnego ma różną liczbę dni od standardowego roku kalendarzowego. Każdy <xref:System.Globalization.Calendar> implementacja definiuje przestępnego inaczej.  
  
 Miesiąc przestępnym jest cały miesiąc, który występuje tylko w roku przestępnym. Na przykład Kalendarz hebrajski Adar Beit jest tylko miesiąca przestępnym.  
  
   
  
## Examples  
 Poniższy przykład kodu porównuje różne implementacje <xref:System.Globalization.Calendar> klasy.  
  
 [!code-cpp[System.Globalization.Calendar_Compare#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.Calendar_Compare/CPP/calendar_compare.cpp#1)]
 [!code-csharp[System.Globalization.Calendar_Compare#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.Calendar_Compare/CS/calendar_compare.cs#1)]
 [!code-vb[System.Globalization.Calendar_Compare#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.Calendar_Compare/VB/calendar_compare.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="year" /> znajduje się poza zakresem obsługiwanym przez kalendarz.  
  
—lub— 
 <paramref name="month" /> znajduje się poza zakresem obsługiwanym przez kalendarz.</exception>
        <altmember cref="M:System.Globalization.Calendar.GetMonthsInYear(System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.IsLeapYear(System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.IsLeapDay(System.Int32,System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="IsLeapMonth">
      <MemberSignature Language="C#" Value="public abstract bool IsLeapMonth (int year, int month, int era);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsLeapMonth(int32 year, int32 month, int32 era) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.Calendar.IsLeapMonth(System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function IsLeapMonth (year As Integer, month As Integer, era As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool IsLeapMonth(int year, int month, int era);" />
      <MemberSignature Language="F#" Value="abstract member IsLeapMonth : int * int * int -&gt; bool" Usage="calendar.IsLeapMonth (year, month, era)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
        <Parameter Name="month" Type="System.Int32" />
        <Parameter Name="era" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year">Liczba całkowita, która reprezentuje rok.</param>
        <param name="month">Dodatnia liczba całkowita, która reprezentuje miesiąca.</param>
        <param name="era">Liczba całkowita, która reprezentuje ery.</param>
        <summary>W przypadku przesłonięcia w klasie pochodnej, określa, czy określonego miesiąca określonego roku w określonym era jest miesiąca przestępnym.</summary>
        <returns>
          <see langword="true" /> w przypadku określonego miesiąca miesiąca przestępnym; w przeciwnym razie <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby było różnią się w roku kalendarzowym i rzeczywistym czasem ziemi obraca się wokół słońce lub rzeczywisty czas, który księżyca obraca się wokół ziemi, dla roku przestępnego ma różną liczbę dni od standardowego roku kalendarzowego. Każdy <xref:System.Globalization.Calendar> implementacja definiuje przestępnego inaczej.  
  
 Miesiąc przestępnym jest cały miesiąc, który występuje tylko w roku przestępnym. Na przykład Kalendarz hebrajski Adar Beit jest tylko miesiąca przestępnym.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="year" /> znajduje się poza zakresem obsługiwanym przez kalendarz.  
  
—lub— 
 <paramref name="month" /> znajduje się poza zakresem obsługiwanym przez kalendarz.  
  
—lub— 
 <paramref name="era" /> znajduje się poza zakresem obsługiwanym przez kalendarz.</exception>
        <block subset="none" type="overrides">
          <para>Klasy pochodne muszą obsługiwać <see cref="F:System.Globalization.Calendar.CurrentEra" /> kiedy jest przekazywana jako <paramref name="era" /> parametru. Jednym ze sposobów, aby obsługiwać <see cref="F:System.Globalization.Calendar.CurrentEra" /> polega na zastąpieniu wartość przechowywaną w <c>ery [0]</c>, która jest wartością dla bieżącej ery kalendarza.</para>
        </block>
        <altmember cref="F:System.Globalization.Calendar.CurrentEra" />
        <altmember cref="P:System.Globalization.Calendar.Eras" />
        <altmember cref="M:System.Globalization.Calendar.GetMonthsInYear(System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.IsLeapYear(System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.IsLeapDay(System.Int32,System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="IsLeapYear">
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>W przypadku przesłonięcia w klasie pochodnej, określa, czy rok jest rokiem przestępnym.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsLeapYear">
      <MemberSignature Language="C#" Value="public virtual bool IsLeapYear (int year);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsLeapYear(int32 year) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.Calendar.IsLeapYear(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IsLeapYear (year As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsLeapYear(int year);" />
      <MemberSignature Language="F#" Value="abstract member IsLeapYear : int -&gt; bool&#xA;override this.IsLeapYear : int -&gt; bool" Usage="calendar.IsLeapYear year" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year">Liczba całkowita, która reprezentuje rok.</param>
        <summary>Określa, czy określony rok w bieżącej ery rokiem przestępnym.</summary>
        <returns>
          <see langword="true" /> Jeśli określony rok jest rokiem przestępnym; w przeciwnym razie <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby było różnią się w roku kalendarzowym i rzeczywistym czasem ziemi obraca się wokół słońce lub rzeczywisty czas, który księżyca obraca się wokół ziemi, dla roku przestępnego ma różną liczbę dni od standardowego roku kalendarzowego. Każdy <xref:System.Globalization.Calendar> implementacja definiuje przestępnego inaczej.  
  
   
  
## Examples  
 Poniższy przykład kodu porównuje różne implementacje <xref:System.Globalization.Calendar> klasy.  
  
 [!code-cpp[System.Globalization.Calendar_Compare#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.Calendar_Compare/CPP/calendar_compare.cpp#1)]
 [!code-csharp[System.Globalization.Calendar_Compare#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.Calendar_Compare/CS/calendar_compare.cs#1)]
 [!code-vb[System.Globalization.Calendar_Compare#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.Calendar_Compare/VB/calendar_compare.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="year" /> znajduje się poza zakresem obsługiwanym przez kalendarz.</exception>
        <altmember cref="M:System.Globalization.Calendar.IsLeapMonth(System.Int32,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.IsLeapDay(System.Int32,System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="IsLeapYear">
      <MemberSignature Language="C#" Value="public abstract bool IsLeapYear (int year, int era);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsLeapYear(int32 year, int32 era) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.Calendar.IsLeapYear(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function IsLeapYear (year As Integer, era As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool IsLeapYear(int year, int era);" />
      <MemberSignature Language="F#" Value="abstract member IsLeapYear : int * int -&gt; bool" Usage="calendar.IsLeapYear (year, era)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
        <Parameter Name="era" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year">Liczba całkowita, która reprezentuje rok.</param>
        <param name="era">Liczba całkowita, która reprezentuje ery.</param>
        <summary>W przypadku przesłonięcia w klasie pochodnej, określa, czy określony rok w określonym era jest rokiem przestępnym.</summary>
        <returns>
          <see langword="true" /> Jeśli określony rok jest rokiem przestępnym; w przeciwnym razie <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby było różnią się w roku kalendarzowym i rzeczywistym czasem ziemi obraca się wokół słońce lub rzeczywisty czas, który księżyca obraca się wokół ziemi, dla roku przestępnego ma różną liczbę dni od standardowego roku kalendarzowego. Każdy <xref:System.Globalization.Calendar> implementacja definiuje przestępnego inaczej.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="year" /> znajduje się poza zakresem obsługiwanym przez kalendarz.  
  
—lub— 
 <paramref name="era" /> znajduje się poza zakresem obsługiwanym przez kalendarz.</exception>
        <block subset="none" type="overrides">
          <para>Klasy pochodne muszą obsługiwać <see cref="F:System.Globalization.Calendar.CurrentEra" /> kiedy jest przekazywana jako <paramref name="era" /> parametru. Jednym ze sposobów, aby obsługiwać <see cref="F:System.Globalization.Calendar.CurrentEra" /> polega na zastąpieniu wartość przechowywaną w <c>ery [0]</c>, która jest wartością dla bieżącej ery kalendarza.</para>
        </block>
        <altmember cref="F:System.Globalization.Calendar.CurrentEra" />
        <altmember cref="P:System.Globalization.Calendar.Eras" />
        <altmember cref="M:System.Globalization.Calendar.IsLeapMonth(System.Int32,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.IsLeapDay(System.Int32,System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.Calendar.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsReadOnly : bool" Usage="System.Globalization.Calendar.IsReadOnly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość wskazującą czy to <see cref="T:System.Globalization.Calendar" /> obiekt jest tylko do odczytu.</summary>
        <value>
          <see langword="true" /> Jeśli ten <see cref="T:System.Globalization.Calendar" /> obiekt jest tylko do odczytu; w przeciwnym razie <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxSupportedDateTime">
      <MemberSignature Language="C#" Value="public virtual DateTime MaxSupportedDateTime { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime MaxSupportedDateTime" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.Calendar.MaxSupportedDateTime" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property MaxSupportedDateTime As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property DateTime MaxSupportedDateTime { DateTime get(); };" />
      <MemberSignature Language="F#" Value="member this.MaxSupportedDateTime : DateTime" Usage="System.Globalization.Calendar.MaxSupportedDateTime" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera najnowsze datę i godzinę, obsługiwanych przez to <see cref="T:System.Globalization.Calendar" /> obiektu.</summary>
        <value>Najnowsze daty i godziny, obsługiwany przez ten kalendarz. Wartość domyślna to <see cref="F:System.DateTime.MaxValue" />.</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Globalization.Calendar.MinSupportedDateTime" />
      </Docs>
    </Member>
    <Member MemberName="MinSupportedDateTime">
      <MemberSignature Language="C#" Value="public virtual DateTime MinSupportedDateTime { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime MinSupportedDateTime" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.Calendar.MinSupportedDateTime" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property MinSupportedDateTime As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property DateTime MinSupportedDateTime { DateTime get(); };" />
      <MemberSignature Language="F#" Value="member this.MinSupportedDateTime : DateTime" Usage="System.Globalization.Calendar.MinSupportedDateTime" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera Najwcześniejsza data i godzina, o których obsługiwanych przez to <see cref="T:System.Globalization.Calendar" /> obiektu.</summary>
        <value>Najwcześniejsza data i godzina, obsługiwany przez ten kalendarz. Wartość domyślna to <see cref="F:System.DateTime.MinValue" />.</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Globalization.Calendar.MaxSupportedDateTime" />
      </Docs>
    </Member>
    <Member MemberName="ReadOnly">
      <MemberSignature Language="C#" Value="public static System.Globalization.Calendar ReadOnly (System.Globalization.Calendar calendar);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Globalization.Calendar ReadOnly(class System.Globalization.Calendar calendar) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.Calendar.ReadOnly(System.Globalization.Calendar)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Globalization::Calendar ^ ReadOnly(System::Globalization::Calendar ^ calendar);" />
      <MemberSignature Language="F#" Value="static member ReadOnly : System.Globalization.Calendar -&gt; System.Globalization.Calendar" Usage="System.Globalization.Calendar.ReadOnly calendar" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Globalization.Calendar</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="calendar" Type="System.Globalization.Calendar" />
      </Parameters>
      <Docs>
        <param name="calendar">Element <see cref="T:System.Globalization.Calendar" /> obiektu.</param>
        <summary>Zwraca tylko do odczytu wersję określonego <see cref="T:System.Globalization.Calendar" /> obiektu.</summary>
        <returns>
          <see cref="T:System.Globalization.Calendar" /> Obiekt określony przez <paramref name="calendar" /> parametru, jeśli <paramref name="calendar" /> jest tylko do odczytu.  
  
—lub— 
Tylko do odczytu wszystkich elementów członkowskich klon <see cref="T:System.Globalization.Calendar" /> obiekt określony przez <paramref name="calendar" />, jeśli <paramref name="calendar" /> nie jest tylko do odczytu.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="calendar" /> jest <see langword="null" />.</exception>
        <altmember cref="M:System.Object.MemberwiseClone" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ToDateTime">
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Po przesłonięciu w klasie pochodnej zwraca <see cref="T:System.DateTime" /> który jest skonfigurowany do określonej daty i godziny.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToDateTime">
      <MemberSignature Language="C#" Value="public virtual DateTime ToDateTime (int year, int month, int day, int hour, int minute, int second, int millisecond);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.DateTime ToDateTime(int32 year, int32 month, int32 day, int32 hour, int32 minute, int32 second, int32 millisecond) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.Calendar.ToDateTime(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ToDateTime (year As Integer, month As Integer, day As Integer, hour As Integer, minute As Integer, second As Integer, millisecond As Integer) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual DateTime ToDateTime(int year, int month, int day, int hour, int minute, int second, int millisecond);" />
      <MemberSignature Language="F#" Value="abstract member ToDateTime : int * int * int * int * int * int * int -&gt; DateTime&#xA;override this.ToDateTime : int * int * int * int * int * int * int -&gt; DateTime" Usage="calendar.ToDateTime (year, month, day, hour, minute, second, millisecond)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
        <Parameter Name="month" Type="System.Int32" />
        <Parameter Name="day" Type="System.Int32" />
        <Parameter Name="hour" Type="System.Int32" />
        <Parameter Name="minute" Type="System.Int32" />
        <Parameter Name="second" Type="System.Int32" />
        <Parameter Name="millisecond" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year">Liczba całkowita, która reprezentuje rok.</param>
        <param name="month">Dodatnia liczba całkowita, która reprezentuje miesiąca.</param>
        <param name="day">Dodatnia liczba całkowita, która reprezentuje dzień.</param>
        <param name="hour">Liczba całkowita z zakresu od 0 do 23 reprezentująca godzinę.</param>
        <param name="minute">Liczba całkowita z zakresu od 0 do 59 reprezentująca minutę.</param>
        <param name="second">Liczba całkowita z zakresu od 0 do 59 reprezentującą sekundę.</param>
        <param name="millisecond">Liczba całkowita z zakresu od 0 do 999 reprezentujący milisekund.</param>
        <summary>Zwraca <see cref="T:System.DateTime" /> który jest skonfigurowany do określonej daty i godziny w bieżącej ery.</summary>
        <returns>
          <see cref="T:System.DateTime" /> Który jest skonfigurowany do określonej daty i godziny w bieżącej ery.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="year" /> znajduje się poza zakresem obsługiwanym przez kalendarz.  
  
—lub— 
 <paramref name="month" /> znajduje się poza zakresem obsługiwanym przez kalendarz.  
  
—lub— 
 <paramref name="day" /> znajduje się poza zakresem obsługiwanym przez kalendarz.  
  
—lub— 
 <paramref name="hour" /> jest mniejsza od zera lub większa od 23.  
  
—lub— 
 <paramref name="minute" /> jest mniejsza od zera lub większa niż 59.  
  
—lub— 
 <paramref name="second" /> jest mniejsza od zera lub większa niż 59.  
  
—lub— 
 <paramref name="millisecond" /> jest mniejsza od zera lub większa niż 999.</exception>
        <altmember cref="T:System.DateTime" />
        <altmember cref="M:System.Globalization.Calendar.GetMonthsInYear(System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.GetDaysInMonth(System.Int32,System.Int32)" />
        <related type="ExternalDocumentation" href="https://code.msdn.microsoft.com/NET-Framework-4-Calendar-3360a84a">Przykład: Zakres tydzień kalendarza narzędzia</related>
      </Docs>
    </Member>
    <Member MemberName="ToDateTime">
      <MemberSignature Language="C#" Value="public abstract DateTime ToDateTime (int year, int month, int day, int hour, int minute, int second, int millisecond, int era);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.DateTime ToDateTime(int32 year, int32 month, int32 day, int32 hour, int32 minute, int32 second, int32 millisecond, int32 era) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.Calendar.ToDateTime(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function ToDateTime (year As Integer, month As Integer, day As Integer, hour As Integer, minute As Integer, second As Integer, millisecond As Integer, era As Integer) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract DateTime ToDateTime(int year, int month, int day, int hour, int minute, int second, int millisecond, int era);" />
      <MemberSignature Language="F#" Value="abstract member ToDateTime : int * int * int * int * int * int * int * int -&gt; DateTime" Usage="calendar.ToDateTime (year, month, day, hour, minute, second, millisecond, era)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
        <Parameter Name="month" Type="System.Int32" />
        <Parameter Name="day" Type="System.Int32" />
        <Parameter Name="hour" Type="System.Int32" />
        <Parameter Name="minute" Type="System.Int32" />
        <Parameter Name="second" Type="System.Int32" />
        <Parameter Name="millisecond" Type="System.Int32" />
        <Parameter Name="era" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year">Liczba całkowita, która reprezentuje rok.</param>
        <param name="month">Dodatnia liczba całkowita, która reprezentuje miesiąca.</param>
        <param name="day">Dodatnia liczba całkowita, która reprezentuje dzień.</param>
        <param name="hour">Liczba całkowita z zakresu od 0 do 23 reprezentująca godzinę.</param>
        <param name="minute">Liczba całkowita z zakresu od 0 do 59 reprezentująca minutę.</param>
        <param name="second">Liczba całkowita z zakresu od 0 do 59 reprezentującą sekundę.</param>
        <param name="millisecond">Liczba całkowita z zakresu od 0 do 999 reprezentujący milisekund.</param>
        <param name="era">Liczba całkowita, która reprezentuje ery.</param>
        <summary>Po przesłonięciu w klasie pochodnej zwraca <see cref="T:System.DateTime" /> który jest skonfigurowany do określonej daty i godziny w erze określony.</summary>
        <returns>
          <see cref="T:System.DateTime" /> Który jest skonfigurowany do określonej daty i godziny w bieżącej ery.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Globalization.Calendar.ToDateTime%2A> Metoda jest przydatna, ponieważ umożliwia on konwertowanie dowolną datę w bieżącym kalendarzu na datę w kalendarzu gregoriańskim. Data gregoriańska później można, na przykład porównaniu dat w kalendarzach lub utworzyć odpowiada dacie w kalendarzu określonej.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="year" /> znajduje się poza zakresem obsługiwanym przez kalendarz.  
  
—lub— 
 <paramref name="month" /> znajduje się poza zakresem obsługiwanym przez kalendarz.  
  
—lub— 
 <paramref name="day" /> znajduje się poza zakresem obsługiwanym przez kalendarz.  
  
—lub— 
 <paramref name="hour" /> jest mniejsza od zera lub większa od 23.  
  
—lub— 
 <paramref name="minute" /> jest mniejsza od zera lub większa niż 59.  
  
—lub— 
 <paramref name="second" /> jest mniejsza od zera lub większa niż 59.  
  
—lub— 
 <paramref name="millisecond" /> jest mniejsza od zera lub większa niż 999.  
  
—lub— 
 <paramref name="era" /> znajduje się poza zakresem obsługiwanym przez kalendarz.</exception>
        <block subset="none" type="overrides">
          <para>Klasy pochodne muszą obsługiwać <see cref="F:System.Globalization.Calendar.CurrentEra" /> kiedy jest przekazywana jako <paramref name="era" /> parametru. Jednym ze sposobów, aby obsługiwać <see cref="F:System.Globalization.Calendar.CurrentEra" /> polega na zastąpieniu wartość przechowywaną w pierwszym elemencie <see cref="P:System.Globalization.Calendar.Eras" /> tablicy właściwości, która jest wartością dla bieżącej ery kalendarza.</para>
        </block>
        <altmember cref="T:System.DateTime" />
        <altmember cref="F:System.Globalization.Calendar.CurrentEra" />
        <altmember cref="P:System.Globalization.Calendar.Eras" />
        <altmember cref="M:System.Globalization.Calendar.GetMonthsInYear(System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.GetDaysInMonth(System.Int32,System.Int32)" />
        <related type="ExternalDocumentation" href="https://code.msdn.microsoft.com/NET-Framework-4-Calendar-3360a84a">Przykład: Zakres tydzień kalendarza narzędzia</related>
      </Docs>
    </Member>
    <Member MemberName="ToFourDigitYear">
      <MemberSignature Language="C#" Value="public virtual int ToFourDigitYear (int year);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 ToFourDigitYear(int32 year) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.Calendar.ToFourDigitYear(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ToFourDigitYear (year As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int ToFourDigitYear(int year);" />
      <MemberSignature Language="F#" Value="abstract member ToFourDigitYear : int -&gt; int&#xA;override this.ToFourDigitYear : int -&gt; int" Usage="calendar.ToFourDigitYear year" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year">Dwucyfrowy lub czterech cyfr liczby całkowitej reprezentującej roku do przekonwertowania.</param>
        <summary>Konwertuje określony rok z rokiem czterocyfrowym przy użyciu <see cref="P:System.Globalization.Calendar.TwoDigitYearMax" /> właściwości w celu określenia odpowiedniego wieku.</summary>
        <returns>Liczba całkowita, która zawiera reprezentację czterocyfrowy <paramref name="year" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Globalization.Calendar.TwoDigitYearMax%2A> jest to ostatni rok, w zakresie roku 100, który może być reprezentowany przez rok w postaci dwóch cyfr. Wiek jest określany przez wyszukiwanie jedyny wystąpienia dwóch cyfr `year` w tym zakresie roku 100. Na przykład jeśli <xref:System.Globalization.Calendar.TwoDigitYearMax%2A> jest ustawiony na 2029 zakresie 100 roku ma z 1930 2029. W związku z tym wartość 2-cyfrowy 30 jest interpretowany jako 1930, gdy wartość 2-cyfrowy 29 jest interpretowany jako 2029.  
  
 Jeśli `year` jest większa niż lub równa 100, wartość `year` jest zwracany bez zmian.  
  
 <xref:System.Globalization.Calendar.ToFourDigitYear%2A> obsługuje dwucyfrowy rok lub rok w postaci czterech cyfr. Przekazuje wartość dwucyfrowy rok (mniej niż 100) powoduje, że metoda można przekonwertować wartości na wartość czterech cyfr, zgodnie z opisem w <xref:System.Globalization.Calendar.TwoDigitYearMax%2A> reprezentującą odpowiednie wieku. Jeśli aplikacja dostarcza wartość czterocyfrowy rok, która znajduje się w zakresie obsługiwanych kalendarza do <xref:System.Globalization.Calendar.ToFourDigitYear%2A>, metoda zwraca wartość rzeczywista wartość wejściowa. Jeśli aplikacja dostarcza wartość czterech cyfr, która znajduje się poza zakresem obsługiwanym kalendarzem lub dostarcza mu wartość ujemną, metoda zgłasza wyjątek.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="year" /> znajduje się poza zakresem obsługiwanym przez kalendarz.</exception>
        <altmember cref="P:System.Globalization.Calendar.TwoDigitYearMax" />
      </Docs>
    </Member>
    <Member MemberName="TwoDigitYearMax">
      <MemberSignature Language="C#" Value="public virtual int TwoDigitYearMax { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 TwoDigitYearMax" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.Calendar.TwoDigitYearMax" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property TwoDigitYearMax As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int TwoDigitYearMax { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.TwoDigitYearMax : int with get, set" Usage="System.Globalization.Calendar.TwoDigitYearMax" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia ostatni rok zakresie roku 100, który może być reprezentowany przez rok 2-cyfrowy.</summary>
        <value>Ostatni rok zakresie roku 100, który może być reprezentowany przez rok 2-cyfrowy.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość umożliwia rok 2-cyfrowy do przetłumaczenia prawidłowo na rok 4-cyfrowego. Na przykład jeśli ta właściwość jest ustawiona na 2029, zakres 100 roku jest z 1930 2029. W związku z tym wartość 2-cyfrowy 30 jest interpretowany jako 1930, gdy wartość 2-cyfrowy 29 jest interpretowany jako 2029.  
  
 Początkowa wartość tej właściwości jest tworzony przy użyciu ustawień w części opcji regionalnych i językowych w Panelu sterowania. Jednak te informacje można zmieniać podczas cyklu życia <xref:System.AppDomain>. <xref:System.Globalization.Calendar> Klasy nie wykrywa zmian w ustawieniach systemowych automatycznie. Jeśli kalendarz nie jest obsługiwany w opcjach regionalnych i językowych, początkowa wartość tej właściwości jest wartością domyślną, zdefiniowane przez <xref:System.Globalization.Calendar> klasy.  
  
 Aplikację należy ustawić tę wartość na 99, aby wskazać, czy dosłownego lat 2-cyfrowy. Na przykład, jeśli ta właściwość jest ustawiona do 99 lat dla 100 zakres jest z zakresu od 0 (Nieprawidłowa wartość dla większości kalendarzy) do 99. W związku z tym wartość 2-cyfrowy 30 jest interpretowany jako 30.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Bieżący <see cref="T:System.Globalization.Calendar" /> obiekt jest tylko do odczytu.</exception>
        <altmember cref="M:System.Globalization.Calendar.ToFourDigitYear(System.Int32)" />
      </Docs>
    </Member>
  </Members>
</Type>