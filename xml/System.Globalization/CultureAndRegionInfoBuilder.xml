<Type Name="CultureAndRegionInfoBuilder" FullName="System.Globalization.CultureAndRegionInfoBuilder">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="b83703024424be0b7fdda926527cec730b7ee108" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39731809" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class CultureAndRegionInfoBuilder" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit CultureAndRegionInfoBuilder extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Globalization.CultureAndRegionInfoBuilder" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class CultureAndRegionInfoBuilder" />
  <TypeSignature Language="C++ CLI" Value="public ref class CultureAndRegionInfoBuilder sealed" />
  <TypeSignature Language="F#" Value="type CultureAndRegionInfoBuilder = class" />
  <AssemblyInfo>
    <AssemblyName>sysglobl</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
      <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Definiuje niestandardowe kultury, które są nowe lub na podstawie innego kultury i kraj/region. Kultury niestandardowej można zainstalować na komputerze i następnie używane przez dowolną aplikację, która jest uruchomiona na tym komputerze. Klasa ta nie może być dziedziczona.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Globalization.CultureInfo> Klasa przechowuje informacje specyficzne dla kultury, takie jak język skojarzone, podjęzyk, kraj/region, kalendarza i Konwencji kultury. Ta klasa udostępnia także wystąpienia specyficzne dla kultury <xref:System.Globalization.DateTimeFormatInfo>, <xref:System.Globalization.NumberFormatInfo>, <xref:System.Globalization.CompareInfo>, i <xref:System.Globalization.TextInfo> klasy, które są wymagane operacje specyficzne dla kultury, takie jak wielkości liter, formatowania i analizowania dat i liczb, oraz porównywanie ciągów.  
  
 Domyślnie program .NET Framework obsługuje <xref:System.Globalization.CultureInfo> obiektami, które reprezentują zestaw wstępnie zdefiniowanych kultur. Aby uzyskać listę tych kultur, zobacz [National Language Support (NLS) API Reference](http://go.microsoft.com/fwlink/?LinkId=200048) w Centrum deweloperów Go Global. <xref:System.Globalization.CultureAndRegionInfoBuilder> Klasy pozwala na tworzenie kultury niestandardowej zupełnie nowe lub które zastępuje wstępnie zdefiniowanych kultur.  Kultury niestandardowej jest zainstalowany i zarejestrowany na danym komputerze, staje się nie do odróżnienia od wstępnie zdefiniowanego <xref:System.Globalization.CultureInfo> obiektów, można utworzyć wystąpienia i używane, podobnie jak tych obiektów.  
  
> [!IMPORTANT]
>  Należy pamiętać, że <xref:System.Globalization.CultureAndRegionInfoBuilder> klasa znajduje się w zestawie o nazwie sysglobl.dll. Pomyślnie kompilowania kodu, który używa tego typu wymaga dodawania odwołania do sysglobl.dll.  
  
 Kultury niestandardowej można zarejestrować na komputerze tylko przez użytkownika, który ma prawa administracyjne na tym komputerze. W związku z tym aplikacje zazwyczaj nie tworzenie i instalowanie niestandardowych kultur. Zamiast tego można użyć <xref:System.Globalization.CultureAndRegionInfoBuilder> klasy, aby utworzyć narzędzie specjalnych, które administrator może użyć do tworzenia, instalowanie i rejestrowanie kultury niestandardowej. Po kultury niestandardowej jest zarejestrowany na komputerze, można użyć <xref:System.Globalization.CultureInfo> klasy w aplikacji do tworzenia wystąpień kultury niestandardowej, tak jak w przypadku wstępnie zdefiniowanych kultur.  
  
 W przypadku analizy ciągów daty i godziny, które są generowane dla kultury niestandardowej, należy używać <xref:System.DateTime.ParseExact%2A?displayProperty=nameWithType> lub <xref:System.DateTime.TryParseExact%2A?displayProperty=nameWithType> zamiast metody <xref:System.DateTime.Parse%2A?displayProperty=nameWithType> lub <xref:System.DateTime.TryParse%2A?displayProperty=nameWithType> metodę, aby zwiększyć prawdopodobieństwo, że operacja analizy zostanie wykonane pomyślnie. Ciąg daty i godziny dla kultury niestandardowej może być skomplikowane i w związku z tym trudne do analizowania. <xref:System.DateTime.Parse%2A> i <xref:System.DateTime.TryParse%2A> metody próbuje przeanalizować składni ciągu wzorami kilka niejawnych analizy, które może zakończyć się niepowodzeniem. <xref:System.DateTime.TryParseExact%2A> Metody, z kolei wymaga od aplikacji jawne wyznaczanie wzorców dokładne analizy, które prawdopodobnie powiodą.  
  
## <a name="defining-and-creating-a-custom-culture"></a>Definiowanie i tworzenie kultury niestandardowej  
 Możesz użyć <xref:System.Globalization.CultureAndRegionInfoBuilder> klasy, aby zdefiniować i nazwać kultury niestandardowej. Kultury niestandardowej może być całkowicie nową kulturą, nowe kulturę, której jest oparty na istniejących kultury (czyli kultura wersji zapoznawczych) lub kultury, która zastępuje istniejące kultury .NET Framework. W każdym przypadku podstawowe kroki są takie same:  
  
1.  Utwórz wystąpienie <xref:System.Globalization.CultureAndRegionInfoBuilder> obiektu przez wywołanie jego <xref:System.Globalization.CultureAndRegionInfoBuilder.%23ctor%28System.String%2CSystem.Globalization.CultureAndRegionModifiers%29> konstruktora. Aby zastąpić istniejące kultury, należy przekazać nazwę tej kultury i <xref:System.Globalization.CultureAndRegionModifiers.Replacement?displayProperty=nameWithType> wartość wyliczenia do konstruktora. Aby utworzyć nową kulturą lub wersji zapoznawczych kultury, należy przekazać nazwa kultury unikatowy, a następnie <xref:System.Globalization.CultureAndRegionModifiers.Neutral?displayProperty=nameWithType> lub <xref:System.Globalization.CultureAndRegionModifiers.None?displayProperty=nameWithType> wartość wyliczenia.  
  
    > [!NOTE]
    >  Jeśli używasz <xref:System.Globalization.CultureAndRegionModifiers.Replacement?displayProperty=nameWithType> wartość wyliczenia do utworzenia wystąpienia <xref:System.Globalization.CultureAndRegionInfoBuilder> obiektu <xref:System.Globalization.CultureAndRegionInfoBuilder> właściwości obiektu są wypełniane automatycznie przy użyciu wartości z <xref:System.Globalization.CultureInfo> obiekt ma zostać zastąpione.  
  
2.  Jeśli tworzysz nowy lub wersji zapoznawczych kultury:  
  
    -   Wypełnij <xref:System.Globalization.CultureAndRegionInfoBuilder> właściwości obiektu przez wywołanie metody <xref:System.Globalization.CultureAndRegionInfoBuilder.LoadDataFromCultureInfo%2A> metody i przekazywanie <xref:System.Globalization.CultureInfo> obiektów, których wartości właściwości są podobne do nowego obiektu.  
  
    -   Wypełnij <xref:System.Globalization.CultureAndRegionInfoBuilder> regionalnych właściwości obiektu przez wywołanie metody <xref:System.Globalization.CultureAndRegionInfoBuilder.LoadDataFromRegionInfo%2A> metody i przekazywanie <xref:System.Globalization.RegionInfo> obiekt, który reprezentuje region stosowanej kultury niestandardowej.  
  
3.  Modyfikowanie właściwości <xref:System.Globalization.CultureAndRegionInfoBuilder> obiektu zgodnie z potrzebami.  
  
4.  Jeśli planowane jest rejestrowanie kultury niestandardowej w oddzielnej procedury, należy wywołać <xref:System.Globalization.CultureAndRegionInfoBuilder.Save%2A> metody. Spowoduje to wygenerowanie pliku XML, który można załadować i zarejestrować w procedury instalacyjnej oddzielne kultury niestandardowej.  
  
## <a name="registering-a-custom-culture"></a>Rejestrowanie kultury niestandardowej  
 Jeśli tworzysz aplikację rejestracji dla niestandardowej kultury, która różni się od aplikacji tworząca kultury, należy wywołać <xref:System.Globalization.CultureAndRegionInfoBuilder.CreateFromLdml%2A> metodę, aby załadować pliku XML, który zawiera definicję kultury niestandardowej i tworzyć wystąpienia <xref:System.Globalization.CultureAndRegionInfoBuilder>obiektu. Aby obsłużyć rejestracji, należy wywołać <xref:System.Globalization.CultureAndRegionInfoBuilder.Register%2A> metody. Rejestracja została wykonana pomyślnie aplikacji, która rejestruje kultury niestandardowej musi działać z uprawnieniami administracyjnymi w systemie docelowym; w przeciwnym razie wywołanie <xref:System.Globalization.CultureAndRegionInfoBuilder.Register%2A> zgłasza <xref:System.UnauthorizedAccessException> wyjątku.  
  
> [!WARNING]
>  Kultura danych może się różnić między systemami. Jeśli używasz <xref:System.Globalization.CultureAndRegionInfoBuilder> klasy w celu utworzenia niestandardowej kultury, która jest jednolita w wielu systemach i tworzenia usługi kultury niestandardowej za pomocą załadowania danych z istniejącego <xref:System.Globalization.CultureInfo> i <xref:System.Globalization.RegionInfo> obiektów i dostosowywanie formularza, należy opracować dwa różnych narzędzi. Pierwszy kultury niestandardowej tworzy i zapisuje go do pliku XML. Drugie <xref:System.Globalization.CultureAndRegionInfoBuilder.CreateFromLdml%2A> metodę, aby załadować kultury niestandardowej z pliku XML i zarejestruj go na komputerze docelowym.  
  
 Proces rejestracji wykonuje następujące zadania:  
  
-   Tworzy plik .nlp, który zawiera informacje, która jest zdefiniowana w <xref:System.Globalization.CultureAndRegionInfoBuilder> obiektu.  
  
-   Zapisuje plik .nlp w %windir%\Globalization w katalogu na komputerze docelowym. Dzięki temu ustawienia kultury niestandardowej można utrwalić między sesjami. ( <xref:System.Globalization.CultureAndRegionInfoBuilder> Metoda wymaga uprawnień administracyjnych, ponieważ plik .nlp jest przechowywany w katalogu systemu.)  
  
-   Przygotowuje .NET Framework w celu wyszukiwania dla katalogu systemowego %windir%\Globalization zamiast wewnętrzną pamięć podręczną przy następnym ma żądania utworzenia usługi nowej niestandardowej kultury.  
  
 Po pomyślnym zarejestrowaniu kultury niestandardowej, jest nie do odróżnienia od kultury, które są wstępnie zdefiniowane przez program .NET Framework. Kultury niestandardowej jest dostępna do wywołania <xref:System.Globalization.CultureAndRegionInfoBuilder> metoda usuwa plik .nlp z komputera lokalnego.  
  
## <a name="instantiating-a-custom-culture"></a>Utworzenie wystąpienia kultury niestandardowej  
 Można utworzyć wystąpienia kultury niestandardowej w jednym z następujących sposobów:  
  
-   Za pomocą wywołania <xref:System.Globalization.CultureInfo.%23ctor%2A?displayProperty=nameWithType> konstruktora o nazwie kultury.  
  
-   Przez wywołanie metody <xref:System.Globalization.CultureInfo.CreateSpecificCulture%2A?displayProperty=nameWithType> metodę o nazwie kultury.  
  
-   Przez wywołanie metody <xref:System.Globalization.CultureInfo.GetCultureInfo%2A?displayProperty=nameWithType> metodę o nazwie kultury.  
  
 Ponadto, tablica <xref:System.Globalization.CultureInfo> obiekty, które są zwracane przez <xref:System.Globalization.CultureInfo.GetCultures%2A?displayProperty=nameWithType> metoda zawiera kultury niestandardowej.  
  
   
  
## Examples  
 W poniższym przykładzie zdefiniowano kultury niestandardowej ru US, reprezentujący języka rosyjskiego w Stanach Zjednoczonych. W przykładzie zdefiniowano kultury niestandardowej przez ładowanie ustawień z rosyjski (Rosja) <xref:System.Globalization.CultureInfo> obiektu i Stanach Zjednoczonych <xref:System.Globalization.RegionInfo> obiektu, a następnie ustawia liczbę <xref:System.Globalization.CultureAndRegionInfoBuilder> właściwości. Przykład rejestruje kultury niestandardowej, a następnie tworzy jego wystąpienie i sprawia, że bieżąca kultura wątku.  
  
 [!code-csharp[System.Globalization.CultureAndRegionInfoBuilder.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.cultureandregioninfobuilder.class/cs/car.cs#1)]
 [!code-vb[System.Globalization.CultureAndRegionInfoBuilder.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.cultureandregioninfobuilder.class/vb/car.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CultureAndRegionInfoBuilder (string cultureName, System.Globalization.CultureAndRegionModifiers flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string cultureName, valuetype System.Globalization.CultureAndRegionModifiers flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CultureAndRegionInfoBuilder.#ctor(System.String,System.Globalization.CultureAndRegionModifiers)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (cultureName As String, flags As CultureAndRegionModifiers)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CultureAndRegionInfoBuilder(System::String ^ cultureName, System::Globalization::CultureAndRegionModifiers flags);" />
      <MemberSignature Language="F#" Value="new System.Globalization.CultureAndRegionInfoBuilder : string * System.Globalization.CultureAndRegionModifiers -&gt; System.Globalization.CultureAndRegionInfoBuilder" Usage="new System.Globalization.CultureAndRegionInfoBuilder (cultureName, flags)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>sysglobl</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="cultureName" Type="System.String" />
        <Parameter Name="flags" Type="System.Globalization.CultureAndRegionModifiers" />
      </Parameters>
      <Docs>
        <param name="cultureName">Nazwa kultury.</param>
        <param name="flags">Jedną z <see cref="T:System.Globalization.CultureAndRegionModifiers" /> wartości, które określa, czy nowy <see cref="T:System.Globalization.CultureAndRegionInfoBuilder" /> obiektu to kultura neutralna, zastępuje istniejące kultury i kraju/regionu lub jest nową kulturą.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Globalization.CultureAndRegionInfoBuilder" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `cultureName` Parametr określa nazwę nowej <xref:System.Globalization.CultureAndRegionInfoBuilder> obiektu.  
  
 `flags` Parametr jest używany do <xref:System.Globalization.CultureAndRegionModifiers> wartość określająca, czy nowy <xref:System.Globalization.CultureAndRegionInfoBuilder> obiekt jest nowej niestandardowej kultury lub zastępuje istniejące kultury neutralnej, określonej kultury lub ustawień regionalnych Windows.  
  
 Jeśli `cultureName` parametr określa istniejących kultury .NET Framework, a zarejestrowany niestandardowy kultury lub kultury wygenerowany na podstawie ustawień regionalnych Windows, <xref:System.Globalization.CultureAndRegionInfoBuilder.%23ctor%2A> Konstruktor automatycznie wypełni nowy <xref:System.Globalization.CultureAndRegionInfoBuilder> obiekt z wykorzystaniem kultury i informacje o kraju/regionu.  
  
 Wypełnij nowe <xref:System.Globalization.CultureAndRegionInfoBuilder> obiektu z informacjami o kulturze i kraj/region, wywołując <xref:System.Globalization.CultureAndRegionInfoBuilder.LoadDataFromCultureInfo%2A> i <xref:System.Globalization.CultureAndRegionInfoBuilder.LoadDataFromRegionInfo%2A> metody.  
  
## <a name="custom-culture-names"></a>Nazwy kultury niestandardowej  
 Preferowany format `cultureName` parametr dla nowych, niestandardowych kultura jest "[`prefix`-]`language`[-`region`] [-`suffix`[`…`]]", gdzie `language` składnik jest wymagany i `prefix`, `region`, i `suffix` są składnikami opcjonalnymi. Maksymalna długość każdego składnika to 8 znaków i maksymalna długość całej `cultureName` parametr jest 84 znaków.  
  
 `prefix` Składnik jest identyfikacja Internet Assigned numery Authority (IANA). Określ "i-" lub "I-" dla nazwy kultury, zarejestrowane przez organizację IANA, lub "x-" lub "X-" dla nazwy kultury zarezerwowane do użytku prywatnego. W przeciwnym razie prefiks nie jest wymagana. Aby uzyskać więcej informacji zobacz RFC 4646, "Znaczniki identyfikacji języków."  
  
 `language` Składnika `cultureName` parametr określa małe kodu dwuliterowych pochodną ISO 639-1 i `region` określa wielkie dwuliterowy kod pochodzi od ISO 3166. Na przykład: en US oznacza język angielski jak używany w Stanach Zjednoczonych. Brak `region` składnika oznacza kultury neutralnej.  
  
 A `cultureName` oznacza to taka sama jak nazwa kultury dołączone do programu .NET Framework oznacza kultury zastępowania (override). Wartości, które mogą być przypisane do właściwości kultury zastąpienia są ograniczone. Aby uzyskać więcej informacji na temat tych ograniczeń Zobacz wyjątków dla każdej właściwości.  
  
 Aplikacja używa `suffix` składnika, aby rozróżnić podobne kultur. Na przykład dwóch spółek ABC i XYZ, tworzenie i udostępnianie nowej usługi sieci Web platformy ASP.NET promowanie swoich produktów na różnych rynkach na całym świecie. Strony sieci Web, usługi wyświetlane informacje, takie jak regionalne logo i numer telefonu lokalnego każdej firmy, w zależności od kultury użytkownika. Zawartość specyficzne dla kultury dla każdej strony sieci Web znajduje się w oddzielne pliki zasobów identyfikowane przez nazwę kultury i kwalifikowana przez nazwę firmy.  Na przykład pliki zasobów dla kultury en US i ja-JP, są nazywane ABC-en US, en US-XYZ, ja-JP — ABC i ja-JP — XYZ. Sufiksy "ABC" i "XYZ" Włącz usługę sieci Web użyć tej samej logiki aplikacji, aby wyświetlić różne informacje specyficzne dla danego rynku.  
  
 `suffix` Składników może zawierać podskładników, gdzie każdy podskładnika sterujący jest ujęty w łącznika, a maksymalna długość każdego podskładnika to 8 znaków. Na przykład, jeśli jest "en US honda samochody" `cultureName` parametr, jest "- honda - samochody" `suffix` składnika.  
  
   
  
## Examples  
 Poniższy przykład kodu tworzy niestandardową kulturę z prywatnie używanym prefiksem, a następnie wyświetla listę właściwości zestawu. Pierwsza właściwość pokazuje nazwę kultury.  
  
 [!code-cpp[sys.glob.carib1#1](~/samples/snippets/cpp/VS_Snippets_CLR/sys.glob.carib1/CPP/carib.cpp#1)]
 [!code-csharp[sys.glob.carib1#1](~/samples/snippets/csharp/VS_Snippets_CLR/sys.glob.carib1/CS/carib.cs#1)]
 [!code-vb[sys.glob.carib1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/sys.glob.carib1/VB/carib.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="cultureName" /> jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="cultureName" /> ciąg pusty ("").  
  
—lub— 
 <paramref name="cultureName" /> zawiera znaki inne niż "0" do "9", "a" do "z", "A" do "Z", łącznika (-) lub znaku podkreślenia (_).  
  
—lub— 
 <paramref name="cultureName" /> Zawiera łączniki (-), aby ograniczyć składników, ale co najmniej jeden z <paramref name="prefix" />, <paramref name="language" />, <paramref name="region" />, lub <paramref name="suffix" /> składników jest nieobecny. Oznacza to co najmniej dwa łączniki znajdują się obok siebie.  
  
—lub— 
 <paramref name="cultureName" /> jest dłuższa niż 84 znaków.  
  
—lub— 
 <paramref name="cultureName" /> Zawiera łączniki do ograniczania składników, ale co najmniej jeden ze składników jest dłuższa niż 8 znaków.  
  
—lub— 
 <paramref name="cultureName" /> zawiera wiodących ani końcowych łącznika (-) lub znaku podkreślenia (_).  
  
—lub— 
 <paramref name="cultureName" /> Określa kulturę zastąpienie sortowania zamiast kultury .NET Framework. Na przykład <paramref name="culturenName" /> jest "de-de_phoneb", kultury, która sortuje ciągi znaków, w jakiej występują w książce telefonicznej niemieckim, a nie "de-DE" kultury niemiecki (Niemcy).  
  
—lub— 
 <paramref name="flags" /> zawiera nieprawidłową kombinację <see cref="T:System.Globalization.CultureAndRegionModifiers" /> wartości.  
  
—lub— 
 <paramref name="flags" /> zawiera <see cref="F:System.Globalization.CultureAndRegionModifiers.Replacement" /> lub <see cref="F:System.Globalization.CultureAndRegionModifiers.Neutral" /> i <paramref name="cultureName" /> określa kulturę, której nie ma.  
  
—lub— 
 <paramref name="flags" /> zawiera <see cref="F:System.Globalization.CultureAndRegionModifiers.Replacement" /> i <paramref name="cultureName" /> określa kultury niestandardowej utworzonej przez użytkownika, który nie zastępuje kultury dostarczany z .NET Framework.  
  
—lub— 
 <paramref name="flags" /> zawiera <see cref="F:System.Globalization.CultureAndRegionModifiers.Neutral" /> i <paramref name="cultureName" /> określa kulturę, która nie jest kultury neutralnej.  
  
—lub— 
 <paramref name="flags" /> zawiera <see cref="F:System.Globalization.CultureAndRegionModifiers.Neutral" /> i <paramref name="cultureName" /> określa kultury niestandardowej utworzonej przez użytkownika, który zastępuje określoną kulturę dostarczany z .NET Framework.</exception>
        <altmember cref="T:System.Globalization.CultureTypes" />
        <altmember cref="T:System.Globalization.CultureAndRegionModifiers" />
      </Docs>
    </Member>
    <Member MemberName="AvailableCalendars">
      <MemberSignature Language="C#" Value="public System.Globalization.Calendar[] AvailableCalendars { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Globalization.Calendar[] AvailableCalendars" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureAndRegionInfoBuilder.AvailableCalendars" />
      <MemberSignature Language="VB.NET" Value="Public Property AvailableCalendars As Calendar()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::Globalization::Calendar ^&gt; ^ AvailableCalendars { cli::array &lt;System::Globalization::Calendar ^&gt; ^ get(); void set(cli::array &lt;System::Globalization::Calendar ^&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.AvailableCalendars : System.Globalization.Calendar[] with get, set" Usage="System.Globalization.CultureAndRegionInfoBuilder.AvailableCalendars" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>sysglobl</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.Calendar[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia tablicę kalendarze, które są obsługiwane przez to <see cref="T:System.Globalization.CultureAndRegionInfoBuilder" /> obiektu.</summary>
        <value>Tablica kalendarzy.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Globalization.CultureAndRegionInfoBuilder.AvailableCalendars%2A> Właściwość odpowiada <xref:System.Globalization.CultureInfo.OptionalCalendars%2A> właściwości.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">W operacji zestawu, jest przypisany tablicy <see langword="null" />, lub element tablicy przypisany jest <see langword="null" />.</exception>
        <exception cref="T:System.NotSupportedException">Ta właściwość nie jest obsługiwana dla kultury neutralnej.  
  
—lub— 
W operacji zestawu zawiera tablicę przypisane <see cref="T:System.Globalization.PersianCalendar" />, <see cref="T:System.Globalization.TaiwanLunisolarCalendar" />, <see cref="T:System.Globalization.KoreanLunisolarCalendar" />, <see cref="T:System.Globalization.JapaneseLunisolarCalendar" />, <see cref="T:System.Globalization.ChineseLunisolarCalendar" />, lub <see cref="T:System.Globalization.JulianCalendar" />.  
  
—lub— 
W operacji zestawu przypisane tablica zawiera niestandardowego kalendarza.</exception>
        <altmember cref="P:System.Globalization.CultureAndRegionInfoBuilder.GregorianDateTimeFormat" />
      </Docs>
    </Member>
    <Member MemberName="CompareInfo">
      <MemberSignature Language="C#" Value="public System.Globalization.CompareInfo CompareInfo { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Globalization.CompareInfo CompareInfo" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureAndRegionInfoBuilder.CompareInfo" />
      <MemberSignature Language="VB.NET" Value="Public Property CompareInfo As CompareInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Globalization::CompareInfo ^ CompareInfo { System::Globalization::CompareInfo ^ get(); void set(System::Globalization::CompareInfo ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CompareInfo : System.Globalization.CompareInfo with get, set" Usage="System.Globalization.CultureAndRegionInfoBuilder.CompareInfo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>sysglobl</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.CompareInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia <see cref="T:System.Globalization.CompareInfo" /> obiekt, który definiuje sposób porównywało ciągi dla kultury.</summary>
        <value>
          <see cref="T:System.Globalization.CompareInfo" /> Obiekt, który definiuje sposób porównywało ciągi dla kultury.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Globalization.CultureAndRegionInfoBuilder.CompareInfo%2A?displayProperty=nameWithType> Właściwość odpowiada <xref:System.Globalization.CultureInfo.CompareInfo%2A?displayProperty=nameWithType> właściwości.  
  
 <xref:System.Globalization.TextInfo> i <xref:System.Globalization.CompareInfo> obiekty, które są przypisane do <xref:System.Globalization.CultureAndRegionInfoBuilder.TextInfo%2A> i <xref:System.Globalization.CultureAndRegionInfoBuilder.CompareInfo%2A> obie właściwości obsługują porównywania ciągów jest rozróżniana kultura oraz wielkość liter. <xref:System.Globalization.CompareInfo> Obiekt ma również metody, które obejmują <xref:System.Globalization.CompareOptions> parametr, który obsługuje porównania wrażliwość na ustawienia kulturowe, bez uwzględniania wielkości liter. Te dwie właściwości powinien być przypisany <xref:System.Globalization.TextInfo> i <xref:System.Globalization.CompareInfo> obiekty reprezentujące tych samych ustawień regionalnych.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">W operacji zestawu przypisaną wartością jest <see langword="null" />.</exception>
        <exception cref="T:System.NotSupportedException">Tej kultury niestandardowej jest przesłonięciem wbudowanych kultury.</exception>
        <altmember cref="P:System.Globalization.CultureAndRegionInfoBuilder.TextInfo" />
      </Docs>
    </Member>
    <Member MemberName="ConsoleFallbackUICulture">
      <MemberSignature Language="C#" Value="public System.Globalization.CultureInfo ConsoleFallbackUICulture { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Globalization.CultureInfo ConsoleFallbackUICulture" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureAndRegionInfoBuilder.ConsoleFallbackUICulture" />
      <MemberSignature Language="VB.NET" Value="Public Property ConsoleFallbackUICulture As CultureInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Globalization::CultureInfo ^ ConsoleFallbackUICulture { System::Globalization::CultureInfo ^ get(); void set(System::Globalization::CultureInfo ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ConsoleFallbackUICulture : System.Globalization.CultureInfo with get, set" Usage="System.Globalization.CultureAndRegionInfoBuilder.ConsoleFallbackUICulture" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>sysglobl</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.CultureInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia kulturę interfejsu użytkownika alternatywnych odpowiedni dla aplikacji konsoli po domyślnej kultury interfejsu użytkownika graficzne jest nieodpowiedni.</summary>
        <value>Kultura alternatywne, służący do odczytywania i wyświetlania tekstu na konsoli.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 W ramach operacji get <xref:System.Globalization.CultureAndRegionInfoBuilder.ConsoleFallbackUICulture%2A> właściwość odpowiada <xref:System.Globalization.CultureInfo.GetConsoleFallbackUICulture%2A> metody. Określ `null` w operacji zestawu, aby wskazać, że kultury jest definiowany przez bieżącą <xref:System.Globalization.CultureAndRegionInfoBuilder> obiekt jest kultura interfejsu użytkownika alternatywnych. Jeśli spróbujesz ustawić dla właściwości kultury ma inną kulturę interfejsu użytkownika konsoli rezerwowe, następnie zostanie do niej przypisany tej kultury końcowe "liścia".  
  
 Języki, np. arabski, hebrajski, perski, Urdu i Syryjski opierają się na tekstu dwukierunkowego. Aplikacje Windows, które wykorzystują graficznego interfejsu użytkownika, obsługa języków dwukierunkowych. Aplikacje konsoli, które wykorzystują tekst interfejsu użytkownika konsoli systemu operacyjnego, nie oferuje jednak obsługa dwukierunkowych. W związku z tym jeśli aplikacja konsoli jest zlokalizowana na arabski lub hebrajski, wyświetla tekst nie można go odczytać, na ekranie konsoli.  
  
 Kultura interfejsu użytkownika określa zasoby aplikacji musi obsługiwać dane wejściowe użytkownika i danych wyjściowych i domyślnie jest taka sama jak kultury systemu operacyjnego. Na przykład <xref:System.Globalization.CultureInfo.CurrentUICulture%2A> właściwość zwraca kulturę arabski arabskim systemie operacyjnym. Aplikacja powinna używać <xref:System.Globalization.CultureAndRegionInfoBuilder.ConsoleFallbackUICulture%2A> właściwość służąca do pobierania kultury neutralnej nadające się do interfejsu użytkownika aplikacji konsoli.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">W operacji zestawu, gdy określona kultura nie jest <see langword="null" />, <see cref="P:System.Globalization.CultureAndRegionInfoBuilder.ConsoleFallbackUICulture" /> właściwość określona kultura nie jest taka sama jak określonej kultury.</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateFromLdml">
      <MemberSignature Language="C#" Value="public static System.Globalization.CultureAndRegionInfoBuilder CreateFromLdml (string xmlFileName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Globalization.CultureAndRegionInfoBuilder CreateFromLdml(string xmlFileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CultureAndRegionInfoBuilder.CreateFromLdml(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateFromLdml (xmlFileName As String) As CultureAndRegionInfoBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Globalization::CultureAndRegionInfoBuilder ^ CreateFromLdml(System::String ^ xmlFileName);" />
      <MemberSignature Language="F#" Value="static member CreateFromLdml : string -&gt; System.Globalization.CultureAndRegionInfoBuilder" Usage="System.Globalization.CultureAndRegionInfoBuilder.CreateFromLdml xmlFileName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>sysglobl</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.CultureAndRegionInfoBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xmlFileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="xmlFileName">Nazwa pliku, który zawiera reprezentację XML <see cref="T:System.Globalization.CultureAndRegionInfoBuilder" /> obiektu.</param>
        <summary>Reconstitutes <see cref="T:System.Globalization.CultureAndRegionInfoBuilder" /> obiektu z określonego pliku XML, który zawiera reprezentację obiektu.</summary>
        <returns>Nowy obiekt, który jest odpowiednikiem informacji przechowywanych w <paramref name="xmlFileName" /> parametru.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `xmlFileName` Parametr określa nazwę pliku, który zawiera reprezentację XML <xref:System.Globalization.CultureAndRegionInfoBuilder> obiektu. Format pliku XML nosi nazwę ustawień regionalnych danych Markup Language (LDML) w wersji 1.1. Nowy <xref:System.Globalization.CultureAndRegionInfoBuilder> obiekt jest utworzony i zainicjowany z danymi w `xmlFileName`. <xref:System.Globalization.CultureAndRegionInfoBuilder.Save%2A> Metoda wykonuje działanie odwrotnej <xref:System.Globalization.CultureAndRegionInfoBuilder.CreateFromLdml%2A> metody.  
  
 W pliku LDML właściwości kultury są określane jako elementy podrzędne `<special>` element `<identity>` sekcji. Wartość właściwości jest zazwyczaj określana w elemencie `type` atrybutu. Na przykład poniższy fragment z pliku LDML definiuje nadrzędnego kultury angielskiej kultury neutralnej.  
  
```xml  
<identity>  
   <version number="1.1">ldml version 1.1</version>  
   <generation date="2012-05-16" />  
   <special xmlns:msLocale="http://schemas.microsoft.com/globalization/2004/08/carib/ldml">  
      <!—content removed -->  
      <msLocale:parentName type="en" />  
      <!—content removed -->  
   </special>  
</identity>  
```  
  
 Aby uzyskać więcej informacji na temat standardowych LDML zobacz [35 techniczne # Standard Unicode, "Ustawienia regionalne danych Markup Language (LDML)"](http://go.microsoft.com/fwlink/p/?LinkId=252840) w witrynie sieci Web konsorcjum Unicode.  
  
   
  
## Examples  
 W poniższym przykładzie pokazano <xref:System.Globalization.CultureAndRegionInfoBuilder.Save%2A> i <xref:System.Globalization.CultureAndRegionInfoBuilder.CreateFromLdml%2A> metody.  
  
 [!code-csharp[sys.glob.carib.saveLdml#1](~/samples/snippets/csharp/VS_Snippets_CLR/sys.glob.carib.saveLdml/cs/sl.cs#1)]
 [!code-vb[sys.glob.carib.saveLdml#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/sys.glob.carib.saveLdml/vb/sl.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="xmlFileName" /> jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="xmlFileName" /> jest pustym ciągiem (""), lub nieprawidłowa nazwa pliku lub ścieżki.</exception>
        <exception cref="T:System.Xml.XmlException">Dane w <paramref name="xmlFileName" /> nie jest prawidłowym plikiem XML.  
  
—lub— 
Wystąpił błąd We/Wy podczas uzyskiwania dostępu do <paramref name="xmlFileName" />.</exception>
        <exception cref="T:System.Xml.Schema.XmlSchemaValidationException">Dane w <paramref name="xmlFileName" /> nie jest w prawidłowym formacie LDML.</exception>
        <altmember cref="M:System.Globalization.CultureAndRegionInfoBuilder.Save(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="CultureEnglishName">
      <MemberSignature Language="C#" Value="public string CultureEnglishName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CultureEnglishName" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureAndRegionInfoBuilder.CultureEnglishName" />
      <MemberSignature Language="VB.NET" Value="Public Property CultureEnglishName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CultureEnglishName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CultureEnglishName : string with get, set" Usage="System.Globalization.CultureAndRegionInfoBuilder.CultureEnglishName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>sysglobl</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia nazwę kultury w języku angielskim.</summary>
        <value>Nazwa kultury w języku angielskim.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Globalization.CultureAndRegionInfoBuilder.CultureEnglishName%2A> Właściwość odpowiada <xref:System.Globalization.CultureInfo.EnglishName%2A> właściwości.  
  
 Na przykład, wartość zwracana przez <xref:System.Globalization.CultureAndRegionInfoBuilder.CultureEnglishName%2A> właściwości dla określonej kultury angielski, ponieważ używany w Stanach Zjednoczonych to "Angielski (Stany Zjednoczone)".  
  
 Wartość tej właściwości jest taka sama, niezależnie od wersji językowej architektury .NET Framework.  
  
   
  
## Examples  
 Poniższy przykład kodu tworzy niestandardową kulturę z prywatnie używanym prefiksem, a następnie wyświetla listę właściwości zestawu. Pierwsza właściwość pokazuje nazwę kultury.  
  
 [!code-cpp[sys.glob.carib1#1](~/samples/snippets/cpp/VS_Snippets_CLR/sys.glob.carib1/CPP/carib.cpp#1)]
 [!code-csharp[sys.glob.carib1#1](~/samples/snippets/csharp/VS_Snippets_CLR/sys.glob.carib1/CS/carib.cs#1)]
 [!code-vb[sys.glob.carib1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/sys.glob.carib1/VB/carib.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Wartość w operacji zestawu jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">Długość wartości w operacji zestawu nie należeć do zakresu od 0 do 79 znaków.</exception>
      </Docs>
    </Member>
    <Member MemberName="CultureName">
      <MemberSignature Language="C#" Value="public string CultureName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CultureName" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureAndRegionInfoBuilder.CultureName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CultureName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CultureName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CultureName : string" Usage="System.Globalization.CultureAndRegionInfoBuilder.CultureName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>sysglobl</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera nazwę kultury tworzona.</summary>
        <value>Nazwa kultury bieżącego <see cref="T:System.Globalization.CultureAndRegionInfoBuilder" /> obiektu.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wartość zwracana jest nazwa kultury określonej w <xref:System.Globalization.CultureAndRegionInfoBuilder.%23ctor%2A> konstruktora. Jeśli określona nazwa kultury jest taka sama jak istniejące kultury, z wyjątkiem przypadków, wartość zwracana jest nazwa istniejącej kultury, a nie nazwę określonej kultury.  
  
 <xref:System.Globalization.CultureAndRegionInfoBuilder.CultureName%2A> Właściwość odpowiada <xref:System.Globalization.CultureInfo.Name%2A> właściwości.  
  
   
  
## Examples  
 Poniższy przykład kodu tworzy niestandardową kulturę z prywatnie używanym prefiksem, a następnie wyświetla listę właściwości zestawu. Pierwsza właściwość pokazuje nazwę kultury.  
  
 [!code-cpp[sys.glob.carib1#1](~/samples/snippets/cpp/VS_Snippets_CLR/sys.glob.carib1/CPP/carib.cpp#1)]
 [!code-csharp[sys.glob.carib1#1](~/samples/snippets/csharp/VS_Snippets_CLR/sys.glob.carib1/CS/carib.cs#1)]
 [!code-vb[sys.glob.carib1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/sys.glob.carib1/VB/carib.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CultureNativeName">
      <MemberSignature Language="C#" Value="public string CultureNativeName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CultureNativeName" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureAndRegionInfoBuilder.CultureNativeName" />
      <MemberSignature Language="VB.NET" Value="Public Property CultureNativeName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CultureNativeName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CultureNativeName : string with get, set" Usage="System.Globalization.CultureAndRegionInfoBuilder.CultureNativeName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>sysglobl</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia nazwę kultury w formacie i języku ustawionym kulturę do wyświetlenia.</summary>
        <value>Nazwa kultury w formacie i języku ustawionym kulturę do wyświetlenia.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Globalization.CultureAndRegionInfoBuilder.CultureNativeName%2A> Właściwość odpowiada <xref:System.Globalization.CultureInfo.NativeName%2A> właściwości.  
  
 Wartość tej właściwości jest taka sama, niezależnie od wersji językowej architektury .NET Framework.  
  
 Pełna nazwa kultury może nie wyświetlać się poprawnie, jeśli nie ustawiono poprawnie wyświetlić języka kultury systemu. Na przykład jeśli <xref:System.Globalization.CultureAndRegionInfoBuilder.CultureName%2A> właściwość jest "ja-JP" japoński (Japonia), aby uzyskać <xref:System.Globalization.CultureAndRegionInfoBuilder.CultureNativeName%2A> właściwości nie są wyświetlane poprawnie w systemie, który jest ustawiony na język angielski tylko. Wielojęzyczny systemów operacyjnych, takich jak Windows 2000, wyświetla <xref:System.Globalization.CultureAndRegionInfoBuilder.CultureNativeName%2A> właściwość poprawnie.  
  
   
  
## Examples  
 Poniższy przykład kodu tworzy niestandardową kulturę z prywatnie używanym prefiksem, a następnie wyświetla listę właściwości zestawu. Pierwsza właściwość pokazuje nazwę kultury.  
  
 [!code-cpp[sys.glob.carib1#1](~/samples/snippets/cpp/VS_Snippets_CLR/sys.glob.carib1/CPP/carib.cpp#1)]
 [!code-csharp[sys.glob.carib1#1](~/samples/snippets/csharp/VS_Snippets_CLR/sys.glob.carib1/CS/carib.cs#1)]
 [!code-vb[sys.glob.carib1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/sys.glob.carib1/VB/carib.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Wartość w operacji zestawu jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">Długość wartości w operacji zestawu nie należeć do zakresu od 0 do 79 znaków.</exception>
      </Docs>
    </Member>
    <Member MemberName="CultureTypes">
      <MemberSignature Language="C#" Value="public System.Globalization.CultureTypes CultureTypes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Globalization.CultureTypes CultureTypes" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureAndRegionInfoBuilder.CultureTypes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CultureTypes As CultureTypes" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Globalization::CultureTypes CultureTypes { System::Globalization::CultureTypes get(); };" />
      <MemberSignature Language="F#" Value="member this.CultureTypes : System.Globalization.CultureTypes" Usage="System.Globalization.CultureAndRegionInfoBuilder.CultureTypes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>sysglobl</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.CultureTypes</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera <see cref="T:System.Globalization.CultureTypes" /> wartość, która opisuje kultury, reprezentowane przez bieżącą <see cref="T:System.Globalization.CultureAndRegionInfoBuilder" /> obiektu.</summary>
        <value>Jedną z <see cref="T:System.Globalization.CultureTypes" /> wartości.</value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Globalization.CultureTypes" />
        <altmember cref="P:System.Globalization.CultureInfo.CultureTypes" />
        <altmember cref="M:System.Globalization.CultureInfo.GetCultures(System.Globalization.CultureTypes)" />
      </Docs>
    </Member>
    <Member MemberName="CurrencyEnglishName">
      <MemberSignature Language="C#" Value="public string CurrencyEnglishName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CurrencyEnglishName" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureAndRegionInfoBuilder.CurrencyEnglishName" />
      <MemberSignature Language="VB.NET" Value="Public Property CurrencyEnglishName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CurrencyEnglishName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CurrencyEnglishName : string with get, set" Usage="System.Globalization.CultureAndRegionInfoBuilder.CurrencyEnglishName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>sysglobl</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia nazwę, a w języku angielskim, Waluta używana w kraju/regionie reprezentowany przez bieżącą <see cref="T:System.Globalization.CultureAndRegionInfoBuilder" /> obiektu.</summary>
        <value>Nazwa w języku angielskim, Waluta używana w tym regionie.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Globalization.CultureAndRegionInfoBuilder.CurrencyEnglishName%2A> Właściwość jest równoważna <xref:System.Globalization.RegionInfo.CurrencyEnglishName%2A> właściwości.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Wartość w operacji zestawu jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">Wartość w operacji zestawu to ciąg pusty ("").</exception>
        <exception cref="T:System.NotSupportedException">Bieżący <see cref="T:System.Globalization.CultureAndRegionInfoBuilder" /> obiektu to kultura neutralna.</exception>
      </Docs>
    </Member>
    <Member MemberName="CurrencyNativeName">
      <MemberSignature Language="C#" Value="public string CurrencyNativeName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CurrencyNativeName" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureAndRegionInfoBuilder.CurrencyNativeName" />
      <MemberSignature Language="VB.NET" Value="Public Property CurrencyNativeName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CurrencyNativeName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CurrencyNativeName : string with get, set" Usage="System.Globalization.CultureAndRegionInfoBuilder.CurrencyNativeName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>sysglobl</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia nazwę natywnych Waluta używana w kraju/regionie reprezentowany przez bieżącą <see cref="T:System.Globalization.CultureAndRegionInfoBuilder" /> obiektu.</summary>
        <value>Nazwa waluty używane w kraju/regionie reprezentowany przez bieżącą <see cref="T:System.Globalization.CultureAndRegionInfoBuilder" /> obiektu, sformatowany w języku skojarzone z kodem kraju/regionu ISO 3166 regionu.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Globalization.CultureAndRegionInfoBuilder.CurrencyNativeName%2A> Właściwość jest równoważna <xref:System.Globalization.RegionInfo.CurrencyNativeName%2A> właściwości.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Wartość w operacji zestawu jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">Wartość w operacji zestawu to ciąg pusty ("").</exception>
        <exception cref="T:System.NotSupportedException">Bieżący <see cref="T:System.Globalization.CultureAndRegionInfoBuilder" /> obiektu to kultura neutralna.</exception>
      </Docs>
    </Member>
    <Member MemberName="GeoId">
      <MemberSignature Language="C#" Value="public int GeoId { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 GeoId" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureAndRegionInfoBuilder.GeoId" />
      <MemberSignature Language="VB.NET" Value="Public Property GeoId As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int GeoId { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.GeoId : int with get, set" Usage="System.Globalization.CultureAndRegionInfoBuilder.GeoId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>sysglobl</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia unikatowy numer identyfikacyjny dla regionu geograficznego, kraju, miasta lub lokalizacji.</summary>
        <value>Liczba ze znakiem 32-bitowy, który unikatowo identyfikuje lokalizacji geograficznej.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Globalization.CultureAndRegionInfoBuilder.GeoId%2A> Właściwość odpowiada <xref:System.Globalization.RegionInfo.GeoId%2A> właściwości.  
  
 Aplikacja powinna używać <xref:System.Globalization.CultureAndRegionInfoBuilder.GeoId%2A> właściwości do świadczenia usług specyficzne dla kultury dla klientów. Na przykład <xref:System.Globalization.CultureAndRegionInfoBuilder.GeoId%2A> właściwość może służyć jako klucz do dostępu do rekordu bazy danych, który zawiera szczegółowe informacje na temat region.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">Bieżący <see cref="T:System.Globalization.CultureAndRegionInfoBuilder" /> obiektu definiuje kultury neutralnej.</exception>
      </Docs>
    </Member>
    <Member MemberName="GregorianDateTimeFormat">
      <MemberSignature Language="C#" Value="public System.Globalization.DateTimeFormatInfo GregorianDateTimeFormat { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Globalization.DateTimeFormatInfo GregorianDateTimeFormat" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureAndRegionInfoBuilder.GregorianDateTimeFormat" />
      <MemberSignature Language="VB.NET" Value="Public Property GregorianDateTimeFormat As DateTimeFormatInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Globalization::DateTimeFormatInfo ^ GregorianDateTimeFormat { System::Globalization::DateTimeFormatInfo ^ get(); void set(System::Globalization::DateTimeFormatInfo ^ value); };" />
      <MemberSignature Language="F#" Value="member this.GregorianDateTimeFormat : System.Globalization.DateTimeFormatInfo with get, set" Usage="System.Globalization.CultureAndRegionInfoBuilder.GregorianDateTimeFormat" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>sysglobl</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.DateTimeFormatInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia <see cref="T:System.Globalization.DateTimeFormatInfo" /> obiekt, który definiuje format daty i godziny zgodnie z kalendarza gregoriańskiego.</summary>
        <value>Element <see cref="T:System.Globalization.DateTimeFormatInfo" /> obiektu.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Każdy kulturę, w tym kultury definiowany przez bieżącą <xref:System.Globalization.CultureAndRegionInfoBuilder> obiektu, zawiera zlokalizowane kalendarz gregoriański, który jest skojarzony z <xref:System.Globalization.DateTimeFormatInfo> obiektu. <xref:System.Globalization.DateTimeFormatInfo> Obiektu definiuje, jak będą wyświetlane w aplikacji daty i godziny. <xref:System.Globalization.CultureAndRegionInfoBuilder.GregorianDateTimeFormat%2A> Wartość właściwości jest <xref:System.Globalization.DateTimeFormatInfo> obiekt skojarzony z zlokalizowanych kalendarza gregoriańskiego zwrócony przez <xref:System.Globalization.CultureAndRegionInfoBuilder.AvailableCalendars%2A> właściwości.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Wartość w operacji zestawu jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">Właściwość wartości w operacji zestawu zwrócił nieprawidłową wartość właściwości.</exception>
        <exception cref="T:System.NotSupportedException">Bieżący <see cref="T:System.Globalization.CultureAndRegionInfoBuilder" /> obiektu to kultura neutralna.</exception>
      </Docs>
    </Member>
    <Member MemberName="IetfLanguageTag">
      <MemberSignature Language="C#" Value="public string IetfLanguageTag { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string IetfLanguageTag" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureAndRegionInfoBuilder.IetfLanguageTag" />
      <MemberSignature Language="VB.NET" Value="Public Property IetfLanguageTag As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ IetfLanguageTag { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.IetfLanguageTag : string with get, set" Usage="System.Globalization.CultureAndRegionInfoBuilder.IetfLanguageTag" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>sysglobl</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia nazwę kultury, formatowana zgodnie z RFC 4646 standard "Znaczniki identyfikacji języków."</summary>
        <value>Nazwa kultury jest formatowana zgodnie z RFC 4646.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Globalization.CultureAndRegionInfoBuilder.IetfLanguageTag%2A> Właściwości pobiera lub ustawia nazwę kultury sformatowanej zgodnie z RFC 4646, który może być inna niż nazwa kultury, zwracany przez <xref:System.Globalization.CultureInfo.Name%2A> właściwości. Na przykład nazwy kultury neutralnej dla języka chińskiego tradycyjnego w .NET Framework w wersji 1.0, został "zh-CHT". Z kolei RFC 4646 definiuje nazwę tej kultury jako "zh-HANT". (Należy pamiętać, że w .NET Framework w wersji 4, nazwę wyświetlaną "zh-CHT" to "Chiński (tradycyjny) starszych").  
  
 Nazwa kultury RFC 4646 składa się z kilku składników. Nazwa kultury typowe składa się z identyfikatora języka obowiązkowe, odpowiadającym opcjonalne skryptu i identyfikator opcjonalne kraj/region. Na przykład prawidłową nazwę kultury RFC 4646 dla języka serbski, cyrylica skrypt i region Serbia jest "sr-Cyrl-RS".  
  
 Należy pamiętać, że co najmniej dwóch kultur może mieć tego samego tagu języka IETF.  
  
 Aby uzyskać więcej informacji, zobacz RFC 4646 "Tagi do identyfikacji języków," w [Request For Comments](http://go.microsoft.com/fwlink/?linkid=45286).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">W operacji zestawu, wartość jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">W operacji zestawu długość wartości nie jest z zakresu od 1 do 84 znaków.</exception>
        <exception cref="T:System.ArgumentException">W operacji zestawu składnik o nazwie określonej w wartości jest pusta ani dłuższa niż 8 znaków, a nie znaków alfanumerycznych lub znaki łącznika (-) lub nazwa zawiera znak minusa wiodących ani końcowych.</exception>
        <altmember cref="M:System.Globalization.CultureInfo.GetCultureInfoByIetfLanguageTag(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="IsMetric">
      <MemberSignature Language="C#" Value="public bool IsMetric { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsMetric" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureAndRegionInfoBuilder.IsMetric" />
      <MemberSignature Language="VB.NET" Value="Public Property IsMetric As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsMetric { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsMetric : bool with get, set" Usage="System.Globalization.CultureAndRegionInfoBuilder.IsMetric" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>sysglobl</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy kraj/region korzysta z systemu metryki dla miar.</summary>
        <value>
          <see langword="true" /> Jeśli kraj/region korzysta z systemu metryki do pomiarów; w przeciwnym razie <see langword="false" />.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">Ta operacja jest nieprawidłowa dla kultury neutralnej.</exception>
      </Docs>
    </Member>
    <Member MemberName="ISOCurrencySymbol">
      <MemberSignature Language="C#" Value="public string ISOCurrencySymbol { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ISOCurrencySymbol" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureAndRegionInfoBuilder.ISOCurrencySymbol" />
      <MemberSignature Language="VB.NET" Value="Public Property ISOCurrencySymbol As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ISOCurrencySymbol { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ISOCurrencySymbol : string with get, set" Usage="System.Globalization.CultureAndRegionInfoBuilder.ISOCurrencySymbol" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>sysglobl</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia symbol waluty ISO 4217 3 znakowy skojarzone z kraju/regionu.</summary>
        <value>Symbol waluty ISO 4217 3 znakowy skojarzone z kraju/regionu.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Globalization.CultureAndRegionInfoBuilder.ISOCurrencySymbol%2A> Właściwość odpowiada <xref:System.Globalization.RegionInfo.ISOCurrencySymbol%2A> właściwości.  
  
 Lista symbole waluty ISO 4217 3 znakowy znajduje się w <xref:System.Globalization.RegionInfo> temat poświęcony klasie. Na przykład symbol waluty ISO 4217 dolar amerykański jest "USD".  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">Jest to kultura neutralna.</exception>
        <exception cref="T:System.ArgumentNullException">W operacji zestawu, wartość jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">W operacji zestawu wartość nie jest od 0 do 8 znaków.</exception>
      </Docs>
    </Member>
    <Member MemberName="IsRightToLeft">
      <MemberSignature Language="C#" Value="public bool IsRightToLeft { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsRightToLeft" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureAndRegionInfoBuilder.IsRightToLeft" />
      <MemberSignature Language="VB.NET" Value="Public Property IsRightToLeft As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsRightToLeft { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsRightToLeft : bool with get, set" Usage="System.Globalization.CultureAndRegionInfoBuilder.IsRightToLeft" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>sysglobl</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub Ustawia kierunek dominujący wierszy tekstu w system pisma skojarzone z bieżącym <see cref="T:System.Globalization.CultureAndRegionInfoBuilder" /> obiektu.</summary>
        <value>
          <see langword="true" /> Jeśli dominujący kierunek wierszy tekstu w obecnym systemie pisania od prawej do lewej; w przeciwnym razie <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aplikacja używa <xref:System.Globalization.CultureAndRegionInfoBuilder.IsRightToLeft%2A> właściwości w celu określenia względne położenie kontrolki, takie jak przyciski i przewijania pasków w graficzny interfejs użytkownika.  
  
 Dostęp dominujący kierunku tekstu w utworzone na podstawie bieżącej kultury niestandardowej do <xref:System.Globalization.CultureAndRegionInfoBuilder> obiektu, należy użyć aplikacji <xref:System.Globalization.TextInfo.IsRightToLeft%2A> własności obiektu zwróconego przez <xref:System.Globalization.CultureInfo.TextInfo%2A> właściwości kultury niestandardowej.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="KeyboardLayoutId">
      <MemberSignature Language="C#" Value="public int KeyboardLayoutId { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 KeyboardLayoutId" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureAndRegionInfoBuilder.KeyboardLayoutId" />
      <MemberSignature Language="VB.NET" Value="Public Property KeyboardLayoutId As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int KeyboardLayoutId { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.KeyboardLayoutId : int with get, set" Usage="System.Globalization.CultureAndRegionInfoBuilder.KeyboardLayoutId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>sysglobl</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia identyfikator aktywnych ustawień regionalnych.</summary>
        <value>Liczba ze znakiem 32-bitowy, który określa identyfikator ustawień regionalnych.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Globalization.CultureAndRegionInfoBuilder.KeyboardLayoutId%2A> Właściwość odpowiada <xref:System.Globalization.CultureInfo.KeyboardLayoutId%2A> właściwości.  
  
 Identyfikator ustawień regionalnych był wcześniej nazywany układ klawiatury. Identyfikator może służyć do konwertera mowy na tekst, danych wejściowych Method Editor (IME) lub inne formy wprowadzania danych.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">W operacji zestawu wartość wynosi zero.</exception>
      </Docs>
    </Member>
    <Member MemberName="LCID">
      <MemberSignature Language="C#" Value="public int LCID { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 LCID" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureAndRegionInfoBuilder.LCID" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LCID As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int LCID { int get(); };" />
      <MemberSignature Language="F#" Value="member this.LCID : int" Usage="System.Globalization.CultureAndRegionInfoBuilder.LCID" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>sysglobl</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera identyfikator kultury dla bieżącego <see cref="T:System.Globalization.CultureAndRegionInfoBuilder" /> obiektu.</summary>
        <value>Identyfikator kultury dla bieżącego <see cref="T:System.Globalization.CultureAndRegionInfoBuilder" /> obiektu.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Globalization.CultureAndRegionInfoBuilder.LCID%2A?displayProperty=nameWithType> Właściwość odpowiada <xref:System.Globalization.CultureInfo.LCID%2A?displayProperty=nameWithType> właściwości.  
  
 Aby uzyskać zamienne identyfikator kultury jest mapowany na odpowiedni identyfikator ustawień regionalnych National Language Support (NLS). Kultury niestandardowe zdefiniowane przez użytkownika wartość tej właściwości jest zawsze 0x1000 szesnastkowe.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadDataFromCultureInfo">
      <MemberSignature Language="C#" Value="public void LoadDataFromCultureInfo (System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void LoadDataFromCultureInfo(class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CultureAndRegionInfoBuilder.LoadDataFromCultureInfo(System.Globalization.CultureInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Sub LoadDataFromCultureInfo (culture As CultureInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void LoadDataFromCultureInfo(System::Globalization::CultureInfo ^ culture);" />
      <MemberSignature Language="F#" Value="member this.LoadDataFromCultureInfo : System.Globalization.CultureInfo -&gt; unit" Usage="cultureAndRegionInfoBuilder.LoadDataFromCultureInfo culture" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>sysglobl</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="culture">Obiekt, którego właściwości będą używane.</param>
        <summary>Ustawia właściwości bieżącego <see cref="T:System.Globalization.CultureAndRegionInfoBuilder" /> obiektu za pomocą odpowiednich właściwości określonego <see cref="T:System.Globalization.CultureInfo" /> obiektu.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="culture" /> jest <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="LoadDataFromRegionInfo">
      <MemberSignature Language="C#" Value="public void LoadDataFromRegionInfo (System.Globalization.RegionInfo region);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void LoadDataFromRegionInfo(class System.Globalization.RegionInfo region) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CultureAndRegionInfoBuilder.LoadDataFromRegionInfo(System.Globalization.RegionInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Sub LoadDataFromRegionInfo (region As RegionInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void LoadDataFromRegionInfo(System::Globalization::RegionInfo ^ region);" />
      <MemberSignature Language="F#" Value="member this.LoadDataFromRegionInfo : System.Globalization.RegionInfo -&gt; unit" Usage="cultureAndRegionInfoBuilder.LoadDataFromRegionInfo region" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>sysglobl</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="region" Type="System.Globalization.RegionInfo" />
      </Parameters>
      <Docs>
        <param name="region">Obiekt, którego właściwości będą używane.</param>
        <summary>Ustawia właściwości bieżącego <see cref="T:System.Globalization.CultureAndRegionInfoBuilder" /> obiektu za pomocą odpowiednich właściwości określonego <see cref="T:System.Globalization.RegionInfo" /> obiektu.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="region" /> jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">Nie można ustawić informacji kraj/region, ponieważ bieżący <see cref="T:System.Globalization.CultureAndRegionInfoBuilder" /> obiektu określa kultury neutralnej.</exception>
      </Docs>
    </Member>
    <Member MemberName="NumberFormat">
      <MemberSignature Language="C#" Value="public System.Globalization.NumberFormatInfo NumberFormat { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Globalization.NumberFormatInfo NumberFormat" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureAndRegionInfoBuilder.NumberFormat" />
      <MemberSignature Language="VB.NET" Value="Public Property NumberFormat As NumberFormatInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Globalization::NumberFormatInfo ^ NumberFormat { System::Globalization::NumberFormatInfo ^ get(); void set(System::Globalization::NumberFormatInfo ^ value); };" />
      <MemberSignature Language="F#" Value="member this.NumberFormat : System.Globalization.NumberFormatInfo with get, set" Usage="System.Globalization.CultureAndRegionInfoBuilder.NumberFormat" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>sysglobl</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.NumberFormatInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia <see cref="T:System.Globalization.NumberFormatInfo" /> obiekt, który definiuje kulturalnie odpowiedni format wyświetlania liczby, waluty i wartości procentowej.</summary>
        <value>A <see cref="T:System.Globalization.NumberFormatInfo" /> obiekt, który definiuje kulturalnie odpowiedni format wyświetlania liczby, waluty i wartości procentowej.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Globalization.CultureAndRegionInfoBuilder.NumberFormat%2A> Właściwość odpowiada <xref:System.Globalization.CultureInfo.NumberFormat%2A> właściwości.  
  
 Twoja aplikacja powinna wywołać tę właściwość tylko do określonych kultur.  
  
 <xref:System.Globalization.NumberFormatInfo.PercentDecimalSeparator%2A>, <xref:System.Globalization.NumberFormatInfo.PercentGroupSeparator%2A>, <xref:System.Globalization.NumberFormatInfo.PercentGroupSizes%2A>, I <xref:System.Globalization.NumberFormatInfo.PercentDecimalDigits%2A> właściwości <xref:System.Globalization.CultureAndRegionInfoBuilder.NumberFormat%2A> są ignorowane. Zapisane postaci kultura nie jest zapisywany jawne wartości tych właściwości. Zamiast tego podczas ładowania kultury są zawsze domyślnie <xref:System.Globalization.NumberFormatInfo.NumberDecimalSeparator%2A>, <xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A>, <xref:System.Globalization.NumberFormatInfo.NumberGroupSizes%2A>, i <xref:System.Globalization.NumberFormatInfo.NumberDecimalDigits%2A>, odpowiednio.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Wartość w operacji zestawu jest <see langword="null" />.</exception>
        <exception cref="T:System.NotSupportedException">Ta operacja jest nieprawidłowa dla kultury neutralnej.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">Specyfikacja, liczby, waluty lub procent właściwości dla tej kultury zawiera zbyt wiele znaków lub jest poza zakresem.</exception>
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public System.Globalization.CultureInfo Parent { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Globalization.CultureInfo Parent" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureAndRegionInfoBuilder.Parent" />
      <MemberSignature Language="VB.NET" Value="Public Property Parent As CultureInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Globalization::CultureInfo ^ Parent { System::Globalization::CultureInfo ^ get(); void set(System::Globalization::CultureInfo ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Parent : System.Globalization.CultureInfo with get, set" Usage="System.Globalization.CultureAndRegionInfoBuilder.Parent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>sysglobl</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.CultureInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia <see cref="T:System.Globalization.CultureInfo" /> obiekt, który reprezentuje kulturę nadrzędnej bieżącej kultury niestandardowej.</summary>
        <value>
          <see cref="T:System.Globalization.CultureInfo" /> Obiekt, który reprezentuje kulturę nadrzędnej bieżącej kultury niestandardowej.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Kultura ma hierarchię. Dla wstępnie zdefiniowanych kultur nadrzędnej określonej kultury jest kultury neutralnej i jest elementem nadrzędnym kultury neutralnej <xref:System.Globalization.CultureInfo.InvariantCulture%2A>. Kultura nadrzędna obejmuje tylko zestaw informacje, które są wspólne dla jego elementów podrzędnych.  
  
 Ogólnie zaleca się, że niestandardowych kultur są zgodne z tej hierarchii. Jednak domyślnie <xref:System.Globalization.CultureAndRegionInfoBuilder.Parent%2A> kultury niestandardowej jest <xref:System.Globalization.CultureAndRegionInfoBuilder.Parent%2A> kultury, na którym bazuje. Jeśli aplikacja tworzy kultury za pomocą <xref:System.Globalization.CultureAndRegionInfoBuilder.CultureName%2A> "en US-MyCulture" oparte na "en US", jego element nadrzędny to "en", ponieważ jest to <xref:System.Globalization.CultureAndRegionInfoBuilder.Parent%2A> "en-us". Jeśli aplikacja używa "en US" jako <xref:System.Globalization.CultureAndRegionInfoBuilder.Parent%2A> nowej niestandardowej kultury, musi on ustawiony tej wartości jawnie.  
  
 Jeśli zasoby dla określonej kultury nie są dostępne w systemie, używane są zasoby dla kultury neutralnej. Jeśli zasobów dla kultury neutralnej nie są dostępne, używane są zasoby osadzone w głównym zestawie. Aby uzyskać więcej informacji na temat procesu bazowego zasobu, zobacz [Packaging and Deploying Resources](~/docs/framework/resources/packaging-and-deploying-resources-in-desktop-apps.md).  
  
 Lista kultur, w interfejsie API Windows różni się nieco na liście kultury w programie .NET Framework. Jeśli wymagane jest współdziałanie z Windows, na przykład dzięki platformie wywoływać mechanizmu, aplikacja powinna używać określonej kultury, która jest zdefiniowana w .NET Framework. Zapewnia to spójność równoważne Windows ustawień regionalnych, który jest identyfikowany o takiej samej <xref:System.Globalization.CultureInfo.LCID%2A>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">W operacji zestawu nie można odnaleźć wartość kultury. Ewentualnie przypisaną wartością jest niezarejestrowany kultury niestandardowej.</exception>
        <exception cref="T:System.ArgumentNullException">W operacji zestawu, wartość jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">W operacji zestawu, który przechodzi przez nadrzędne bieżącej kultury, niezmienna kultura nie można znaleźć w ciągu 10 generacje obiektów nadrzędnych.  
  
—lub— 
W operacji zestawu Wykryto odwołanie cykliczne: przypisaną wartością jest elementem nadrzędnym bieżącej kultury niestandardowej.</exception>
      </Docs>
    </Member>
    <Member MemberName="RegionEnglishName">
      <MemberSignature Language="C#" Value="public string RegionEnglishName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string RegionEnglishName" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureAndRegionInfoBuilder.RegionEnglishName" />
      <MemberSignature Language="VB.NET" Value="Public Property RegionEnglishName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ RegionEnglishName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.RegionEnglishName : string with get, set" Usage="System.Globalization.CultureAndRegionInfoBuilder.RegionEnglishName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>sysglobl</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia pełną nazwę kraju/regionu w języku angielskim.</summary>
        <value>Pełna nazwa kraju/regionu w języku angielskim.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Globalization.CultureAndRegionInfoBuilder.RegionEnglishName%2A> Właściwość odpowiada <xref:System.Globalization.RegionInfo.EnglishName%2A> właściwości.  
  
 Na przykład, wartość zwracana przez <xref:System.Globalization.CultureAndRegionInfoBuilder.RegionEnglishName%2A> dla Stanów Zjednoczonych to "United States".  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">Ta operacja jest nieprawidłowa dla kultury neutralnej.</exception>
        <exception cref="T:System.ArgumentNullException">Wartość w operacji zestawu jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">Długość wartości w operacji zestawu nie należeć do zakresu od 0 do 79 znaków.</exception>
      </Docs>
    </Member>
    <Member MemberName="RegionName">
      <MemberSignature Language="C#" Value="public string RegionName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string RegionName" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureAndRegionInfoBuilder.RegionName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RegionName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ RegionName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.RegionName : string" Usage="System.Globalization.CultureAndRegionInfoBuilder.RegionName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>sysglobl</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera nazwę kraj/region dla bieżącego <see cref="T:System.Globalization.CultureAndRegionInfoBuilder" /> obiektu.</summary>
        <value>Nazwa kraju/regionu dla bieżącego <see cref="T:System.Globalization.CultureAndRegionInfoBuilder" /> obiektu.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wartość zwracana jest nazwa kultury określonej w <xref:System.Globalization.CultureAndRegionInfoBuilder.%23ctor%2A> konstruktora. Jeśli określona nazwa kultury jest taka sama jak istniejące kultury, z wyjątkiem przypadków, wartość zwracana jest nazwa istniejącej kultury, a nie nazwę określonej kultury.  
  
 <xref:System.Globalization.CultureAndRegionInfoBuilder.RegionName%2A> Właściwość odpowiada <xref:System.Globalization.RegionInfo.Name%2A> właściwości.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">Ta operacja jest nieprawidłowa dla kultury neutralnej.</exception>
      </Docs>
    </Member>
    <Member MemberName="RegionNativeName">
      <MemberSignature Language="C#" Value="public string RegionNativeName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string RegionNativeName" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureAndRegionInfoBuilder.RegionNativeName" />
      <MemberSignature Language="VB.NET" Value="Public Property RegionNativeName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ RegionNativeName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.RegionNativeName : string with get, set" Usage="System.Globalization.CultureAndRegionInfoBuilder.RegionNativeName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>sysglobl</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia pełną nazwę kraju/regionu znane przez osoby tej kultury niestandardowej.</summary>
        <value>Lokalna nazwa kraju/regionu.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Globalization.CultureAndRegionInfoBuilder.RegionNativeName%2A> Właściwość odpowiada <xref:System.Globalization.RegionInfo.NativeName%2A> właściwości.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">Ta operacja jest nieprawidłowa dla kultury neutralnej.</exception>
        <exception cref="T:System.ArgumentNullException">Wartość w operacji zestawu jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">Długość wartości w operacji zestawu nie należeć do zakresu od 1 do 79 znaków.</exception>
      </Docs>
    </Member>
    <Member MemberName="Register">
      <MemberSignature Language="C#" Value="public void Register ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Register() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CultureAndRegionInfoBuilder.Register" />
      <MemberSignature Language="VB.NET" Value="Public Sub Register ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Register();" />
      <MemberSignature Language="F#" Value="member this.Register : unit -&gt; unit" Usage="cultureAndRegionInfoBuilder.Register " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>sysglobl</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Będzie się powtarzał bieżącego <see cref="T:System.Globalization.CultureAndRegionInfoBuilder" /> obiektu jako kultury niestandardowej na komputerze lokalnym i sprawia, że, które kultury dostępne dla aplikacji. Wymaga uprawnień administracyjnych.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Globalization.CultureAndRegionInfoBuilder.Register%2A> Metoda przechowuje kultury niestandardowej jako plik na komputerze lokalnym w podkatalogu globalizacji w katalogu, który został zwrócony przez Win32 [GetWindowsDirectory](http://go.microsoft.com/fwlink/?LinkId=191561) funkcji. Ten proces jest nazywany rejestrowanie kultury niestandardowej. Po zarejestrowaniu kultury niestandardowej można utworzyć nowej niestandardowej kultury, określając nazwę kultury w <xref:System.Globalization.CultureInfo.%23ctor%2A> konstruktora lub podczas wywoływania <xref:System.Globalization.CultureInfo.CreateSpecificCulture%2A?displayProperty=nameWithType> metody.  
  
 Kultury niestandardowej można usunąć, wywołując <xref:System.Globalization.CultureAndRegionInfoBuilder.Unregister%2A> metody.  
  
   
  
## Examples  
 W poniższym przykładzie pokazano <xref:System.Globalization.CultureAndRegionInfoBuilder.Register%2A> metody.  
  
 [!code-csharp[sys.glob.carib.register#1](~/samples/snippets/csharp/VS_Snippets_CLR/sys.glob.carib.register/CS/persist.cs#1)]
 [!code-vb[sys.glob.carib.register#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/sys.glob.carib.register/VB/persist.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Kultury niestandardowej jest już zarejestrowany.  
  
—lub— 
Bieżący <see cref="T:System.Globalization.CultureAndRegionInfoBuilder" /> obiekt ma właściwość, która musi być ustawiona przed zarejestrowaniem kultury. Musi mieć wszystkie kultury neutralnej lub określonej <see cref="P:System.Globalization.CultureAndRegionInfoBuilder.TextInfo" /> i <see cref="P:System.Globalization.CultureAndRegionInfoBuilder.CompareInfo" /> zestawu. Musi mieć również określonych kultur <see cref="P:System.Globalization.CultureAndRegionInfoBuilder.NumberFormat" />, <see cref="P:System.Globalization.CultureAndRegionInfoBuilder.GregorianDateTimeFormat" />, i <see cref="P:System.Globalization.CultureAndRegionInfoBuilder.AvailableCalendars" /> zestawu.  
  
Ta metoda generuje również <see cref="T:System.InvalidOperationException" /> Jeśli nie zdefiniowano następujące właściwości: 
 <see cref="P:System.Globalization.CultureAndRegionInfoBuilder.CultureEnglishName" /><see cref="P:System.Globalization.CultureAndRegionInfoBuilder.CultureNativeName" /><see cref="P:System.Globalization.CultureAndRegionInfoBuilder.CurrencyEnglishName" /><see cref="P:System.Globalization.CultureAndRegionInfoBuilder.CurrencyNativeName" /><see cref="P:System.Globalization.CultureAndRegionInfoBuilder.ISOCurrencySymbol" /><see cref="P:System.Globalization.CultureAndRegionInfoBuilder.Parent" /><see cref="P:System.Globalization.CultureAndRegionInfoBuilder.RegionEnglishName" /><see cref="P:System.Globalization.CultureAndRegionInfoBuilder.RegionNativeName" /><see cref="P:System.Globalization.CultureAndRegionInfoBuilder.ThreeLetterISOLanguageName" /><see cref="P:System.Globalization.CultureAndRegionInfoBuilder.ThreeLetterISORegionName" /><see cref="P:System.Globalization.CultureAndRegionInfoBuilder.ThreeLetterWindowsLanguageName" /><see cref="P:System.Globalization.CultureAndRegionInfoBuilder.ThreeLetterWindowsRegionName" /><see cref="P:System.Globalization.CultureAndRegionInfoBuilder.TwoLetterISOLanguageName" /><see cref="P:System.Globalization.CultureAndRegionInfoBuilder.TwoLetterISORegionName" /></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">A <see cref="T:System.Globalization.CultureAndRegionInfoBuilder" /> wartości właściwości obiektu przekracza jego maksymalna długość lub wartość.</exception>
        <exception cref="T:System.UnauthorizedAccessException">Użytkownik nie ma uprawnienia administracyjne.</exception>
        <altmember cref="M:System.Globalization.CultureAndRegionInfoBuilder.Unregister(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public void Save (string filename);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Save(string filename) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CultureAndRegionInfoBuilder.Save(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Save (filename As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Save(System::String ^ filename);" />
      <MemberSignature Language="F#" Value="member this.Save : string -&gt; unit" Usage="cultureAndRegionInfoBuilder.Save filename" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>sysglobl</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filename" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="filename">Nazwa pliku zawiera reprezentację XML tej kultury niestandardowej.</param>
        <summary>Zapisuje reprezentację XML bieżącego <see cref="T:System.Globalization.CultureAndRegionInfoBuilder" /> obiektu do określonego pliku.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Globalization.CultureAndRegionInfoBuilder.Save%2A> Metoda zapisuje bieżące <xref:System.Globalization.CultureAndRegionInfoBuilder> obiekt do pliku określonego przez `filename` parametru w formacie XML o nazwie ustawienia regionalne danych Markup Language (LDML) w wersji 1.1. <xref:System.Globalization.CultureAndRegionInfoBuilder.CreateFromLdml%2A> Metoda wykonuje działanie odwrotnej <xref:System.Globalization.CultureAndRegionInfoBuilder.Save%2A> metody.  
  
 Aby uzyskać informacje o formacie pliku LDML zobacz <xref:System.Globalization.CultureAndRegionInfoBuilder.CreateFromLdml%2A> metody. Aby uzyskać informacji na temat standardowych LDML, zobacz [35 techniczne # Standard Unicode, "Ustawienia regionalne danych Markup Language (LDML)"](http://go.microsoft.com/fwlink/p/?LinkId=252840) w witrynie sieci Web konsorcjum Unicode.  
  
   
  
## Examples  
 W poniższym przykładzie pokazano <xref:System.Globalization.CultureAndRegionInfoBuilder.Save%2A> i <xref:System.Globalization.CultureAndRegionInfoBuilder.CreateFromLdml%2A> metody.  
  
 [!code-csharp[sys.glob.carib.saveLdml#1](~/samples/snippets/csharp/VS_Snippets_CLR/sys.glob.carib.saveLdml/cs/sl.cs#1)]
 [!code-vb[sys.glob.carib.saveLdml#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/sys.glob.carib.saveLdml/vb/sl.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="filename" /> jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="filename" /> jest pustym ciągiem ("").</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">Wartość właściwości <see cref="T:System.Globalization.DateTimeFormatInfo" />, <see cref="T:System.Globalization.TextInfo" />, lub <see cref="T:System.Globalization.NumberFormatInfo" /> obiektów znajdujących się w bieżącym <see cref="T:System.Globalization.CultureAndRegionInfoBuilder" /> obiekt jest nieprawidłowy.</exception>
        <altmember cref="M:System.Globalization.CultureAndRegionInfoBuilder.CreateFromLdml(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="TextInfo">
      <MemberSignature Language="C#" Value="public System.Globalization.TextInfo TextInfo { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Globalization.TextInfo TextInfo" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureAndRegionInfoBuilder.TextInfo" />
      <MemberSignature Language="VB.NET" Value="Public Property TextInfo As TextInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Globalization::TextInfo ^ TextInfo { System::Globalization::TextInfo ^ get(); void set(System::Globalization::TextInfo ^ value); };" />
      <MemberSignature Language="F#" Value="member this.TextInfo : System.Globalization.TextInfo with get, set" Usage="System.Globalization.CultureAndRegionInfoBuilder.TextInfo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>sysglobl</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.TextInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia <see cref="T:System.Globalization.TextInfo" /> obiekt, który definiuje system pisma skojarzone z tym kultury niestandardowej.</summary>
        <value>Obiekt, który definiuje system pisma skojarzone z tym kultury niestandardowej.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Globalization.CultureAndRegionInfoBuilder.TextInfo%2A?displayProperty=nameWithType> Właściwość zawiera informacje specyficzne dla kultury, wielkości liter dla ciągów. Odnosi się do <xref:System.Globalization.CultureInfo.TextInfo%2A?displayProperty=nameWithType> właściwości.  
  
 <xref:System.Globalization.TextInfo> i <xref:System.Globalization.CompareInfo> obiekty, które są przypisane do <xref:System.Globalization.CultureAndRegionInfoBuilder.TextInfo%2A> i <xref:System.Globalization.CultureAndRegionInfoBuilder.CompareInfo%2A> obie właściwości obsługują porównywania ciągów jest rozróżniana kultura oraz wielkość liter. <xref:System.Globalization.CompareInfo> Obiekt ma również metody, które obejmują <xref:System.Globalization.CompareOptions> parametr, który obsługuje porównania wrażliwość na ustawienia kulturowe, bez uwzględniania wielkości liter. Te dwie właściwości powinien być przypisany <xref:System.Globalization.TextInfo> i <xref:System.Globalization.CompareInfo> obiekty reprezentujące tych samych ustawień regionalnych.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">Ta operacja nie jest obsługiwana dla zamienne.</exception>
        <exception cref="T:System.ArgumentNullException">Wartość w operacji zestawu jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">Liczba znaków separatora listy mieści się w zakresie od 0 do 3.</exception>
        <altmember cref="P:System.Globalization.CultureAndRegionInfoBuilder.CompareInfo" />
      </Docs>
    </Member>
    <Member MemberName="ThreeLetterISOLanguageName">
      <MemberSignature Language="C#" Value="public string ThreeLetterISOLanguageName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ThreeLetterISOLanguageName" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureAndRegionInfoBuilder.ThreeLetterISOLanguageName" />
      <MemberSignature Language="VB.NET" Value="Public Property ThreeLetterISOLanguageName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ThreeLetterISOLanguageName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ThreeLetterISOLanguageName : string with get, set" Usage="System.Globalization.CultureAndRegionInfoBuilder.ThreeLetterISOLanguageName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>sysglobl</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia plik ISO 639-2 trzyliterowy kod języka tej kultury niestandardowej.</summary>
        <value>ISO 639-2 trzyliterowy kod języka bieżącego <see cref="T:System.Globalization.CultureInfo" /> obiektu.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Globalization.CultureAndRegionInfoBuilder.ThreeLetterISOLanguageName%2A> Właściwość odpowiada <xref:System.Globalization.CultureInfo.ThreeLetterISOLanguageName%2A> właściwości.  
  
 Na przykład — trzyliterowy skrót dla języka angielskiego jest "eng".  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Wartość w operacji zestawu jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">Długość wartości w operacji zestawu nie mieści się w zakresie od 1 do 8 znaków.</exception>
        <exception cref="T:System.ArgumentException">Wartość operacji zestawu zawiera znak, który nie należy do przedziału od „a” do „z”, od „A” do „Z” lub od „0” do „9”.</exception>
      </Docs>
    </Member>
    <Member MemberName="ThreeLetterISORegionName">
      <MemberSignature Language="C#" Value="public string ThreeLetterISORegionName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ThreeLetterISORegionName" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureAndRegionInfoBuilder.ThreeLetterISORegionName" />
      <MemberSignature Language="VB.NET" Value="Public Property ThreeLetterISORegionName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ThreeLetterISORegionName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ThreeLetterISORegionName : string with get, set" Usage="System.Globalization.CultureAndRegionInfoBuilder.ThreeLetterISORegionName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>sysglobl</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia trzyliterowy kod zdefiniowany w ISO 3166 dla kraju/regionu.</summary>
        <value>Kod trzyliterowy zdefiniowane w ISO 3166 dla kraju/regionu.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Globalization.CultureAndRegionInfoBuilder.ThreeLetterISORegionName%2A> Właściwość odpowiada <xref:System.Globalization.RegionInfo.ThreeLetterISORegionName%2A> właściwości.  
  
 <xref:System.Globalization.CultureAndRegionInfoBuilder.ThreeLetterISORegionName%2A> Właściwość zawiera jeden z kodów trzyliterowy zdefiniowane w ISO 3166 dla kraju/regionu. Na przykład trzyliterowy kod dla Stanów Zjednoczonych jest "USA".  
  
 Przypadek nie ma znaczenia. Jednak <xref:System.Globalization.CultureAndRegionInfoBuilder.RegionName%2A>, <xref:System.Globalization.CultureAndRegionInfoBuilder.TwoLetterISORegionName%2A>i <xref:System.Globalization.CultureAndRegionInfoBuilder.ThreeLetterISORegionName%2A> właściwości zawierają odpowiedni kod pisane wielkimi literami.  
  
 Nazwy wstępnie zdefiniowanych kraju/regionu są wymienione w <xref:System.Globalization.RegionInfo> temat poświęcony klasie.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Wartość w operacji zestawu jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">Długość wartości w operacji zestawu nie mieści się w zakresie od 1 do 8 znaków.</exception>
        <exception cref="T:System.ArgumentException">Wartość operacji zestawu zawiera znak, który nie należy do przedziału od „a” do „z”, od „A” do „Z” lub od „0” do „9”.</exception>
      </Docs>
    </Member>
    <Member MemberName="ThreeLetterWindowsLanguageName">
      <MemberSignature Language="C#" Value="public string ThreeLetterWindowsLanguageName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ThreeLetterWindowsLanguageName" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureAndRegionInfoBuilder.ThreeLetterWindowsLanguageName" />
      <MemberSignature Language="VB.NET" Value="Public Property ThreeLetterWindowsLanguageName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ThreeLetterWindowsLanguageName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ThreeLetterWindowsLanguageName : string with get, set" Usage="System.Globalization.CultureAndRegionInfoBuilder.ThreeLetterWindowsLanguageName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>sysglobl</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia trzyliterowy kod języka, zgodnie z definicją w interfejsie API Windows.</summary>
        <value>Trzyliterowy kod języka zgodnie z definicją w interfejsie API Windows.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Globalization.CultureAndRegionInfoBuilder.ThreeLetterWindowsLanguageName%2A> Właściwość odpowiada <xref:System.Globalization.CultureInfo.ThreeLetterWindowsLanguageName%2A> właściwości.  
  
 Ta właściwość zwraca taką samą wartość jak metoda interfejsu API Windows `GetLocaleInfo` wartością LOCALE_SABBREVLANGNAME. Na przykład trzyliterowy kod w języku angielskim (Stany Zjednoczone) zgodnie z definicją w interfejsie API Windows jest "tekst enu".  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Wartość w operacji zestawu jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">Długość wartości w operacji zestawu nie mieści się w zakresie od 1 do 8 znaków.</exception>
        <exception cref="T:System.ArgumentException">Wartość operacji zestawu zawiera znak, który nie należy do przedziału od „a” do „z”, od „A” do „Z” lub od „0” do „9”.</exception>
        <exception cref="T:System.NotSupportedException">W operacji zestawu bieżącej kultury niestandardowej jest kultura zastępczy.</exception>
      </Docs>
    </Member>
    <Member MemberName="ThreeLetterWindowsRegionName">
      <MemberSignature Language="C#" Value="public string ThreeLetterWindowsRegionName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ThreeLetterWindowsRegionName" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureAndRegionInfoBuilder.ThreeLetterWindowsRegionName" />
      <MemberSignature Language="VB.NET" Value="Public Property ThreeLetterWindowsRegionName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ThreeLetterWindowsRegionName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ThreeLetterWindowsRegionName : string with get, set" Usage="System.Globalization.CultureAndRegionInfoBuilder.ThreeLetterWindowsRegionName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>sysglobl</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia trzyliterowy kod przypisany przez Windows kraj/region, reprezentowane przez bieżącą kulturę niestandardowych.</summary>
        <value>Trzyliterowy kod przypisany przez Windows kraju/regionie reprezentowany przez ten <see cref="T:System.Globalization.CultureAndRegionInfoBuilder" /> obiektu.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Globalization.CultureAndRegionInfoBuilder.ThreeLetterWindowsRegionName%2A> Właściwość odpowiada <xref:System.Globalization.RegionInfo.ThreeLetterWindowsRegionName%2A> właściwości.  
  
 Na przykład trzyliterowy kod dla Stanów Zjednoczonych jest "USA".  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Wartość w operacji zestawu jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">Długość wartości w operacji zestawu nie mieści się w zakresie od 1 do 8 znaków.</exception>
        <exception cref="T:System.ArgumentException">Wartość operacji zestawu zawiera znak, który nie należy do przedziału od „a” do „z”, od „A” do „Z” lub od „0” do „9”.</exception>
        <exception cref="T:System.NotSupportedException">W operacji zestawu bieżącej kultury niestandardowej jest kultura zastąpienia lub kultury neutralnej.</exception>
      </Docs>
    </Member>
    <Member MemberName="TwoLetterISOLanguageName">
      <MemberSignature Language="C#" Value="public string TwoLetterISOLanguageName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TwoLetterISOLanguageName" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureAndRegionInfoBuilder.TwoLetterISOLanguageName" />
      <MemberSignature Language="VB.NET" Value="Public Property TwoLetterISOLanguageName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ TwoLetterISOLanguageName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.TwoLetterISOLanguageName : string with get, set" Usage="System.Globalization.CultureAndRegionInfoBuilder.TwoLetterISOLanguageName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>sysglobl</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia kod ISO 639-1 dwuliterowych języka bieżącego <see cref="T:System.Globalization.CultureInfo" /> obiektu.</summary>
        <value>Kod ISO 639-1 dwuliterowych języka bieżącego <see cref="T:System.Globalization.CultureInfo" /> obiektu.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Globalization.CultureAndRegionInfoBuilder.TwoLetterISOLanguageName%2A> Właściwość odpowiada <xref:System.Globalization.CultureInfo.TwoLetterISOLanguageName%2A> właściwości.  
  
 Na przykład dwuliterowy skrót dla języka angielskiego jest "en".  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Wartość w operacji zestawu jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">Długość wartości w operacji zestawu nie mieści się w zakresie od 1 do 8 znaków.</exception>
        <exception cref="T:System.ArgumentException">Wartość operacji zestawu zawiera znak, który nie należy do przedziału od „a” do „z”, od „A” do „Z” lub od „0” do „9”.</exception>
      </Docs>
    </Member>
    <Member MemberName="TwoLetterISORegionName">
      <MemberSignature Language="C#" Value="public string TwoLetterISORegionName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TwoLetterISORegionName" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureAndRegionInfoBuilder.TwoLetterISORegionName" />
      <MemberSignature Language="VB.NET" Value="Public Property TwoLetterISORegionName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ TwoLetterISORegionName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.TwoLetterISORegionName : string with get, set" Usage="System.Globalization.CultureAndRegionInfoBuilder.TwoLetterISORegionName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>sysglobl</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia kod dwuliterowy, zdefiniowany w ISO 3166 dla kraju/regionu.</summary>
        <value>Kod dwuliterowy, zdefiniowany w ISO 3166 dla kraju/regionu.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Globalization.CultureAndRegionInfoBuilder.TwoLetterISORegionName%2A> Właściwość odpowiada <xref:System.Globalization.RegionInfo.TwoLetterISORegionName%2A> właściwości.  
  
 <xref:System.Globalization.CultureAndRegionInfoBuilder.TwoLetterISORegionName%2A> Wartość właściwości jest jeden z kodów dwuliterowy, zdefiniowany w ISO 3166 dla kraju/regionu. Na przykład kod dwuliterowych dla Stanów Zjednoczonych jest "Nam". Wstępnie zdefiniowane <xref:System.Globalization.RegionInfo> nazw są wymienione w <xref:System.Globalization.RegionInfo> temat poświęcony klasie.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Wartość w operacji zestawu jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">Długość wartości w operacji zestawu nie mieści się w zakresie od 1 do 8 znaków.</exception>
        <exception cref="T:System.ArgumentException">Wartość operacji zestawu zawiera znak, który nie należy do przedziału od „a” do „z”, od „A” do „Z” lub od „0” do „9”.</exception>
        <exception cref="T:System.NotSupportedException">W operacji zestawu bieżącej kultury niestandardowej jest kultury neutralnej.</exception>
      </Docs>
    </Member>
    <Member MemberName="Unregister">
      <MemberSignature Language="C#" Value="public static void Unregister (string cultureName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Unregister(string cultureName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CultureAndRegionInfoBuilder.Unregister(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Unregister (cultureName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Unregister(System::String ^ cultureName);" />
      <MemberSignature Language="F#" Value="static member Unregister : string -&gt; unit" Usage="System.Globalization.CultureAndRegionInfoBuilder.Unregister cultureName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>sysglobl</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cultureName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="cultureName">Nazwa kultury niestandardowej do usunięcia.</param>
        <summary>Usuwa kultury niestandardowej z komputera lokalnego.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Globalization.CultureAndRegionInfoBuilder.Unregister%2A> Metoda wykonuje odwrotnej <xref:System.Globalization.CultureAndRegionInfoBuilder.Register%2A> metody. <xref:System.Globalization.CultureAndRegionInfoBuilder.Register%2A> Metoda przechowuje kultury niestandardowej jako plik na komputerze lokalnym w podkatalogu globalizacji katalogu zwracana przez interfejs API Win32 [GetWindowsDirectory](http://go.microsoft.com/fwlink/?LinkId=191561) funkcji. <xref:System.Globalization.CultureAndRegionInfoBuilder.Unregister%2A> Metoda usuwa plik trwałego kultury niestandardowej z komputera. Po usunięciu pliku istniejące wystąpienia kultury niestandardowej w pamięci komputera nadal działać, ale nie można utworzyć nowe wystąpienia kultury niestandardowej.  
  
   
  
## Examples  
 W poniższym przykładzie pokazano <xref:System.Globalization.CultureAndRegionInfoBuilder.Unregister%2A> metody.  
  
 [!code-csharp[sys.glob.carib.unregister#1](~/samples/snippets/csharp/VS_Snippets_CLR/sys.glob.carib.unregister/CS/unregister.cs#1)]
 [!code-vb[sys.glob.carib.unregister#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/sys.glob.carib.unregister/VB/unregister.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <paramref name="cultureName" /> jest nadrzędnym kultury lub kultura interfejsu użytkownika rezerwowego konsoli zależne kultury.</exception>
        <exception cref="T:System.UnauthorizedAccessException">Użytkownik nie ma uprawnienia administracyjne.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="cultureName" /> Określa kulturę, której nie ma.</exception>
        <altmember cref="M:System.Globalization.CultureAndRegionInfoBuilder.Register" />
      </Docs>
    </Member>
  </Members>
</Type>