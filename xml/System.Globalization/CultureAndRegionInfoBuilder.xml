<Type Name="CultureAndRegionInfoBuilder" FullName="System.Globalization.CultureAndRegionInfoBuilder">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="47a073e0bb01fd3db381454b4e60b14276ccc84f" />
    <Meta Name="ms.sourcegitcommit" Value="3907f9a5780957d9c85af2e54c0a5bc2a5bf19ab" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="06/14/2018" />
    <Meta Name="ms.locfileid" Value="34174343" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class CultureAndRegionInfoBuilder" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit CultureAndRegionInfoBuilder extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Globalization.CultureAndRegionInfoBuilder" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class CultureAndRegionInfoBuilder" />
  <TypeSignature Language="C++ CLI" Value="public ref class CultureAndRegionInfoBuilder sealed" />
  <AssemblyInfo>
    <AssemblyName>sysglobl</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Definiuje kulturą niestandardową, które są nowe lub oparte na inną kulturę i kraju/regionu. Kultura niestandardowa można zainstalować na komputerze i następnie używane przez dowolną aplikację, która jest uruchomiona na tym komputerze. Klasa ta nie może być dziedziczona.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Globalization.CultureInfo> Klasa przechowuje informacje specyficzne dla kultury, takie jak skojarzone języka, odmianą języka, kraj/region, kalendarza i konwencje kultury. Ta klasa udostępnia także wystąpień specyficzne dla kultury <xref:System.Globalization.DateTimeFormatInfo>, <xref:System.Globalization.NumberFormatInfo>, <xref:System.Globalization.CompareInfo>, i <xref:System.Globalization.TextInfo> klasy, które są wymagane dla operacji specyficzne dla kultury, takich jak wielkość liter, formatowania i analizowania dat i liczb, i porównywanie ciągów.  
  
 Domyślnie obsługuje programu .NET Framework <xref:System.Globalization.CultureInfo> obiektów, które reprezentują zestaw wstępnie zdefiniowanych kultur. Listę tych kultur, zobacz [dokumentacja interfejsu API National obsługi Language (NLS)](http://go.microsoft.com/fwlink/?LinkId=200048) w Developer Center globalne Go. <xref:System.Globalization.CultureAndRegionInfoBuilder> Klasa umożliwia tworzenie kulturą niestandardową całkowicie nowe lub który zastępuje wstępnie zdefiniowanych kultury.  Kultura niestandardowa jest zainstalowany i zarejestrowany na danym komputerze, staje się można odróżnić od wstępnie zdefiniowanych <xref:System.Globalization.CultureInfo> obiekty i można utworzyć wystąpienia, a używane podobnie jak tych obiektów.  
  
> [!IMPORTANT]
>  Należy pamiętać, że <xref:System.Globalization.CultureAndRegionInfoBuilder> klasa znajduje się w zestawie o nazwie sysglobl.dll. Pomyślnie kompilowanie kodu, który używa tego typu wymaga, aby dodać odwołania do sysglobl.dll.  
  
 Kultura niestandardowa może być zarejestrowane na komputerze tylko przez użytkownika, który ma prawa administracyjne na tym komputerze. W rezultacie aplikacji zwykle nie Utwórz i zainstaluj niestandardowe kultury. Zamiast tego można użyć <xref:System.Globalization.CultureAndRegionInfoBuilder> klasę, aby utworzyć narzędzie specjalnych, które administrator może użyć do tworzenia, zainstaluj i zarejestruj kulturą niestandardową. Po kultura niestandardowa jest zarejestrowana na komputerze, można użyć <xref:System.Globalization.CultureInfo> klasy aplikacji w celu utworzenia wystąpienia o niestandardowej kulturze, tak samo jak dla wstępnie zdefiniowanego kultury.  
  
 Jeśli przeanalizować ciągi daty i czasu, które są generowane dla kulturą niestandardową, należy użyć <xref:System.DateTime.ParseExact%2A?displayProperty=nameWithType> lub <xref:System.DateTime.TryParseExact%2A?displayProperty=nameWithType> zamiast metody <xref:System.DateTime.Parse%2A?displayProperty=nameWithType> lub <xref:System.DateTime.TryParse%2A?displayProperty=nameWithType> metodę, aby zwiększyć prawdopodobieństwo, że operacja analizy zostanie wykonana pomyślnie. Ciąg daty i godziny dla kultury niestandardowej może być skomplikowane i trudne w związku z tym można przeanalizować. <xref:System.DateTime.Parse%2A> i <xref:System.DateTime.TryParse%2A> metody spróbuj przeanalizować ciągu z kilku wzorców niejawne analizy, które może zakończyć się niepowodzeniem. <xref:System.DateTime.TryParseExact%2A> Metoda z kolei wymaga, aby jawnie określić wzorce dokładne analizy, które prawdopodobnie powiodą się aplikacja.  
  
## <a name="defining-and-creating-a-custom-culture"></a>Definiowanie i tworzenie kultury niestandardowej  
 Możesz użyć <xref:System.Globalization.CultureAndRegionInfoBuilder> klasy do definiowania i nazwę kultury niestandardowej. Kultura niestandardowa może być całkowicie nowa kultury, nowe kulturę opartą na istniejącej kultury (to znaczy uzupełniające kultury) lub kultury, który zastępuje istniejące kultury .NET Framework. W każdym przypadku podstawowe kroki są takie same:  
  
1.  Utwórz wystąpienie <xref:System.Globalization.CultureAndRegionInfoBuilder> obiektu przez wywołanie jego <xref:System.Globalization.CultureAndRegionInfoBuilder.%23ctor%28System.String%2CSystem.Globalization.CultureAndRegionModifiers%29> konstruktora. Aby zastąpić istniejącą kultury, przekaż nazwę tej kultury i <xref:System.Globalization.CultureAndRegionModifiers.Replacement?displayProperty=nameWithType> do konstruktora wartości wyliczenia. Aby utworzyć nowy kultury lub kultury uzupełniające, przekaż nazwę kultury unikatowy i albo <xref:System.Globalization.CultureAndRegionModifiers.Neutral?displayProperty=nameWithType> lub <xref:System.Globalization.CultureAndRegionModifiers.None?displayProperty=nameWithType> wartości wyliczenia.  
  
    > [!NOTE]
    >  Jeśli używasz <xref:System.Globalization.CultureAndRegionModifiers.Replacement?displayProperty=nameWithType> wartości wyliczenia można utworzyć wystąpienia <xref:System.Globalization.CultureAndRegionInfoBuilder> obiektu <xref:System.Globalization.CultureAndRegionInfoBuilder> właściwości obiektu są automatycznie wypełniane przy użyciu wartości z <xref:System.Globalization.CultureInfo> obiektów, które mają zostać zastąpione.  
  
2.  W przypadku tworzenia nowych lub uzupełniające kultury:  
  
    -   Wypełnij <xref:System.Globalization.CultureAndRegionInfoBuilder> właściwości obiektu przez wywołanie metody <xref:System.Globalization.CultureAndRegionInfoBuilder.LoadDataFromCultureInfo%2A> — metoda i przekazywanie <xref:System.Globalization.CultureInfo> obiektów, których wartości właściwości są podobne do nowego obiektu.  
  
    -   Wypełnij <xref:System.Globalization.CultureAndRegionInfoBuilder> regionalnych właściwości obiektu przez wywołanie metody <xref:System.Globalization.CultureAndRegionInfoBuilder.LoadDataFromRegionInfo%2A> — metoda i przekazywanie <xref:System.Globalization.RegionInfo> obiekt, który reprezentuje region z kultura niestandardowa.  
  
3.  Modyfikowanie właściwości <xref:System.Globalization.CultureAndRegionInfoBuilder> obiektu w razie potrzeby.  
  
4.  Jeśli planowane jest rejestrowanie kultura niestandardowa w oddzielnej procedury, wywołanie <xref:System.Globalization.CultureAndRegionInfoBuilder.Save%2A> metody. Spowoduje to wygenerowanie pliku XML, który można załadować i zarejestrować się w oddzielnych kultura niestandardowa procedura instalacji.  
  
## <a name="registering-a-custom-culture"></a>Rejestrowanie kultury niestandardowej  
 Jeśli tworzysz aplikację rejestracji dla kulturą niestandardową, która jest niezależna od aplikacji tworzącą kultury, należy wywołać <xref:System.Globalization.CultureAndRegionInfoBuilder.CreateFromLdml%2A> metodę, aby załadować plik XML, który zawiera definicję kultura niestandardowa i utworzenia wystąpienia <xref:System.Globalization.CultureAndRegionInfoBuilder>obiektu. Do obsługi rejestracji, należy wywołać <xref:System.Globalization.CultureAndRegionInfoBuilder.Register%2A> metody. Rejestracja powiodła się aplikacji, która rejestruje kultura niestandardowa musi działać z uprawnieniami administracyjnymi na komputerze docelowym; w przeciwnym razie wywołanie <xref:System.Globalization.CultureAndRegionInfoBuilder.Register%2A> zgłasza <xref:System.UnauthorizedAccessException> wyjątku.  
  
> [!WARNING]
>  Kultury danych może się różnić między systemami. Jeśli używasz <xref:System.Globalization.CultureAndRegionInfoBuilder> klasy w celu utworzenia kulturą niestandardową, której jest jednolita w wielu systemach i tworzysz Twojej kultura niestandardowa przez ładowanie danych z istniejącego <xref:System.Globalization.CultureInfo> i <xref:System.Globalization.RegionInfo> obiektów i dostosowywanie, należy opracować dwa różnych narzędzi. Pierwszy tworzy kultura niestandardowa i zapisuje je w pliku XML. Drugie <xref:System.Globalization.CultureAndRegionInfoBuilder.CreateFromLdml%2A> metody, aby załadować kultura niestandardowa z pliku XML i zarejestrować ją na komputerze docelowym.  
  
 Proces rejestracji wykonuje następujące zadania:  
  
-   Tworzy plik zawierający informacje, który jest zdefiniowany w .nlp <xref:System.Globalization.CultureAndRegionInfoBuilder> obiektu.  
  
-   Zapisuje plik .nlp w katalogu %windir%\Globalization na komputerze docelowym. Dzięki temu ustawienia kultura niestandardowa utrwalić między sesjami. ( <xref:System.Globalization.CultureAndRegionInfoBuilder> Metoda wymaga uprawnień administracyjnych, ponieważ plik .nlp jest przechowywany w katalogu systemowym.)  
  
-   Przygotowuje .NET Framework do wyszukiwania przy następnym katalogu systemu %windir%\Globalization zamiast wewnętrznej pamięci podręcznej jest żądanie utworzenia Twoje nowe kultura niestandardowa.  
  
 Po pomyślnym zarejestrowaniu kulturą niestandardową, jest można odróżnić od kultury, które są wstępnie zdefiniowane przez program .NET Framework. Kultura niestandardowa jest dostępna do wywołania <xref:System.Globalization.CultureAndRegionInfoBuilder> metoda usuwa plik .nlp z komputera lokalnego.  
  
## <a name="instantiating-a-custom-culture"></a>Utworzenie wystąpienia kultury niestandardowej  
 Można utworzyć wystąpienia o niestandardowej kulturze w jednym z następujących sposobów:  
  
-   Wywołując <xref:System.Globalization.CultureInfo.%23ctor%2A?displayProperty=nameWithType> konstruktora o nazwie kultury.  
  
-   Wywołując <xref:System.Globalization.CultureInfo.CreateSpecificCulture%2A?displayProperty=nameWithType> metodę o nazwie kultury.  
  
-   Wywołując <xref:System.Globalization.CultureInfo.GetCultureInfo%2A?displayProperty=nameWithType> metodę o nazwie kultury.  
  
 Ponadto tablica <xref:System.Globalization.CultureInfo> obiektów, które są zwracane przez <xref:System.Globalization.CultureInfo.GetCultures%2A?displayProperty=nameWithType> metoda zawiera kultura niestandardowa.  
  
   
  
## Examples  
 W poniższym przykładzie zdefiniowano kultury niestandardowej ru US, reprezentujący języka rosyjskiego w Stanach Zjednoczonych. W przykładzie zdefiniowano kultura niestandardowa przez ładowanie ustawień z rosyjski (Rosji) <xref:System.Globalization.CultureInfo> obiektu i Stanów Zjednoczonych <xref:System.Globalization.RegionInfo> obiekt, a następnie ustawia liczbę <xref:System.Globalization.CultureAndRegionInfoBuilder> właściwości. Przykład rejestruje kultura niestandardowa, a następnie tworzy go i ułatwia bieżącej kultury wątku.  
  
 [!code-csharp[System.Globalization.CultureAndRegionInfoBuilder.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.cultureandregioninfobuilder.class/cs/car.cs#1)]
 [!code-vb[System.Globalization.CultureAndRegionInfoBuilder.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.cultureandregioninfobuilder.class/vb/car.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CultureAndRegionInfoBuilder (string cultureName, System.Globalization.CultureAndRegionModifiers flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string cultureName, valuetype System.Globalization.CultureAndRegionModifiers flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CultureAndRegionInfoBuilder.#ctor(System.String,System.Globalization.CultureAndRegionModifiers)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (cultureName As String, flags As CultureAndRegionModifiers)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CultureAndRegionInfoBuilder(System::String ^ cultureName, System::Globalization::CultureAndRegionModifiers flags);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>sysglobl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="cultureName" Type="System.String" />
        <Parameter Name="flags" Type="System.Globalization.CultureAndRegionModifiers" />
      </Parameters>
      <Docs>
        <param name="cultureName">Nazwa kultury.</param>
        <param name="flags">Jeden z <see cref="T:System.Globalization.CultureAndRegionModifiers" /> wartości, które określa, czy nowe <see cref="T:System.Globalization.CultureAndRegionInfoBuilder" /> obiektu to kultura neutralna, zastępuje istniejące kultury i kraj/region lub jest nowy kultury.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Globalization.CultureAndRegionInfoBuilder" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `cultureName` Parametr określa nazwę nowej <xref:System.Globalization.CultureAndRegionInfoBuilder> obiektu.  
  
 `flags` Parametr jest używany dla <xref:System.Globalization.CultureAndRegionModifiers> wartość określająca, czy nowe <xref:System.Globalization.CultureAndRegionInfoBuilder> obiektu jest kulturą niestandardową lub zamienia istniejące kultury neutralnej określoną kulturą i ustawienia regionalne systemu Windows.  
  
 Jeśli `cultureName` parametr określa istniejących kultury .NET Framework, niestandardowe zarejestrowanych kultury lub kultury generowane na podstawie ustawień regionalnych systemu Windows, <xref:System.Globalization.CultureAndRegionInfoBuilder.%23ctor%2A> Konstruktor automatycznie wypełni nowe <xref:System.Globalization.CultureAndRegionInfoBuilder> obiektu z kulturą i informacje o kraju/regionu.  
  
 Wypełnij nowe <xref:System.Globalization.CultureAndRegionInfoBuilder> obiekt z informacje kultury i kraj/region, wywołując <xref:System.Globalization.CultureAndRegionInfoBuilder.LoadDataFromCultureInfo%2A> i <xref:System.Globalization.CultureAndRegionInfoBuilder.LoadDataFromRegionInfo%2A> metody.  
  
## <a name="custom-culture-names"></a>Nazwy kultury niestandardowej  
 Preferowany format `cultureName` parametr dla kultury nowy, niestandardowy jest "[`prefix`-]`language`[-`region`] [-`suffix`[`…`]]", gdzie `language` składnik jest wymagany i `prefix`, `region`, i `suffix` składniki są opcjonalne. Maksymalna długość każdej części to 8 znaków, a maksymalna długość całego `cultureName` parametr jest 84 znaków.  
  
 `prefix` Składnik jest identyfikacja Internet Assigned numery Authority (IANA). Określ "i-" lub "I-" dla nazwy kultury zarejestrowane przez organizację IANA, lub "x-" lub "X-" dla nazwy kultury zarezerwowane do użytku osobistego. W przeciwnym razie prefiks nie jest wymagane. Aby uzyskać więcej informacji zobacz RFC 4646, "Znaczniki identyfikacji języków".  
  
 `language` Składnika `cultureName` parametr określa małe kodu dwuliterowych pochodną 639-1, ISO i `region` określa wielkie kod dwuliterowych pochodną normy ISO 3166. Na przykład en US oznacza angielski, ponieważ używany w Stanach Zjednoczonych. Brak `region` składnika oznacza kultury neutralnej.  
  
 A `cultureName` który jest taka sama jak nazwa kultury uwzględnionych w programie .NET Framework oznacza kultury zastąpienia (zastąpienie). Wartości, które można przypisać do właściwości kultury zastąpienia są ograniczone. Aby uzyskać więcej informacji o tych ograniczeniach Zobacz wyjątki dla każdej właściwości.  
  
 Aplikacja używa `suffix` składnik do odróżnienia podobne kultur. Na przykład dwie firmy, ABC i XYZ, tworzenie i udostępnianie nową usługę sieci Web ASP.NET promowanie swoich produktów w różnych rynkach na całym świecie. Strony sieci Web dla usługi wyświetlane informacje, takie jak regionalne logo i numer telefonu lokalnego każda firma, w zależności od kultury użytkownika. Treść specyficzne dla kultury dla każdej strony sieci Web znajduje się w oddzielnych zasobów plików identyfikowane przez nazwę kultury i kwalifikowana przez nazwę firmy.  Na przykład pliki zasobów dla kultury en US i ja-JP noszą en US-ABC, en US-XYZ, ja-JP — ABC i ja-JP-XYZ. Sufiksy "ABC" i "XYZ" Włącz usługę sieci Web na potrzeby wyświetlania różnych informacji określonych w tej samej logiki aplikacji.  
  
 `suffix` Składników może zawierać podskładników, gdzie każdego podskładnika rozdzielana przez łącznik, a maksymalna długość każdej podskładnik to 8 znaków. Na przykład "en US honda samochodów" jest `cultureName` parametru "- honda - samochodów" jest `suffix` składnika.  
  
   
  
## Examples  
 Poniższy przykład kodu tworzy niestandardową kulturę z prywatnie używanym prefiksem, a następnie wyświetla listę właściwości zestawu. Pierwsza właściwość pokazuje nazwę kultury.  
  
 [!code-cpp[sys.glob.carib1#1](~/samples/snippets/cpp/VS_Snippets_CLR/sys.glob.carib1/CPP/carib.cpp#1)]
 [!code-csharp[sys.glob.carib1#1](~/samples/snippets/csharp/VS_Snippets_CLR/sys.glob.carib1/CS/carib.cs#1)]
 [!code-vb[sys.glob.carib1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/sys.glob.carib1/VB/carib.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="cultureName" /> jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="cultureName" /> jest pustym ciągiem ("").  - lub - <paramref name="cultureName" /> zawiera znaki inne niż "0" do "9", "" do "z" i "A" do "Z", łącznika (-) lub podkreślenia (_).  - lub - <paramref name="cultureName" /> zawiera łączniki (-), aby ograniczyć składników, ale co najmniej jeden z <paramref name="prefix" />, <paramref name="language" />, <paramref name="region" />, lub <paramref name="suffix" /> składników jest nieobecny. Oznacza to co najmniej dwa łączniki znajdują się obok siebie.  - lub - <paramref name="cultureName" /> jest dłuższa niż 84 znaków.  - lub - <paramref name="cultureName" /> zawiera łączniki do rozdzielenia składników, ale jeden lub większa liczba instalowanych składników jest dłuższa niż 8 znaków.  - lub - <paramref name="cultureName" /> zawiera początkowe lub końcowe łącznik (-) lub podkreślenia (_).  - lub - <paramref name="cultureName" /> określa kulturę zastępczy sortowanie alternatywne zamiast kultury .NET Framework. Na przykład <paramref name="culturenName" /> jest "de-de_phoneb", kulturę sortuje ciągi pojawiających się w książce telefonicznej niemieckim, a nie "de-DE" kultury niemiecki (Niemcy).  - lub - <paramref name="flags" /> zawiera nieprawidłową kombinację <see cref="T:System.Globalization.CultureAndRegionModifiers" /> wartości.  - lub - <paramref name="flags" /> zawiera <see cref="F:System.Globalization.CultureAndRegionModifiers.Replacement" /> lub <see cref="F:System.Globalization.CultureAndRegionModifiers.Neutral" /> i <paramref name="cultureName" /> określa kulturę, które nie zostało odnalezione.  - lub - <paramref name="flags" /> zawiera <see cref="F:System.Globalization.CultureAndRegionModifiers.Replacement" /> i <paramref name="cultureName" /> określa utworzonych przez użytkownika kulturą niestandardową, której nie zastępuje kultury wysłane z programu .NET Framework.  - lub - <paramref name="flags" /> zawiera <see cref="F:System.Globalization.CultureAndRegionModifiers.Neutral" /> i <paramref name="cultureName" /> określa kulturę, która nie jest kultury neutralnej.  - lub - <paramref name="flags" /> zawiera <see cref="F:System.Globalization.CultureAndRegionModifiers.Neutral" /> i <paramref name="cultureName" /> określa utworzonych przez użytkownika kulturą niestandardową, która zastępuje określoną kulturę wysłane z programu .NET Framework.</exception>
        <altmember cref="T:System.Globalization.CultureTypes" />
        <altmember cref="T:System.Globalization.CultureAndRegionModifiers" />
      </Docs>
    </Member>
    <Member MemberName="AvailableCalendars">
      <MemberSignature Language="C#" Value="public System.Globalization.Calendar[] AvailableCalendars { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Globalization.Calendar[] AvailableCalendars" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureAndRegionInfoBuilder.AvailableCalendars" />
      <MemberSignature Language="VB.NET" Value="Public Property AvailableCalendars As Calendar()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::Globalization::Calendar ^&gt; ^ AvailableCalendars { cli::array &lt;System::Globalization::Calendar ^&gt; ^ get(); void set(cli::array &lt;System::Globalization::Calendar ^&gt; ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>sysglobl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.Calendar[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia tablicę kalendarzy, które są obsługiwane przez to <see cref="T:System.Globalization.CultureAndRegionInfoBuilder" /> obiektu.</summary>
        <value>Tablica kalendarzy.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Globalization.CultureAndRegionInfoBuilder.AvailableCalendars%2A> Właściwość odpowiada <xref:System.Globalization.CultureInfo.OptionalCalendars%2A> właściwości.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">W ramach operacji zestawu jest przypisany tablicy <see langword="null" />, lub element tablicy przypisany jest <see langword="null" />.</exception>
        <exception cref="T:System.NotSupportedException">Ta właściwość nie jest obsługiwana dla kultury neutralnej.  w ramach operacji set przypisanej tablica zawiera - lub - <see cref="T:System.Globalization.PersianCalendar" />, <see cref="T:System.Globalization.TaiwanLunisolarCalendar" />, <see cref="T:System.Globalization.KoreanLunisolarCalendar" />, <see cref="T:System.Globalization.JapaneseLunisolarCalendar" />, <see cref="T:System.Globalization.ChineseLunisolarCalendar" />, lub <see cref="T:System.Globalization.JulianCalendar" />.  - lub - w ramach operacji set przypisanej tablica zawiera niestandardowego kalendarza.</exception>
        <altmember cref="P:System.Globalization.CultureAndRegionInfoBuilder.GregorianDateTimeFormat" />
      </Docs>
    </Member>
    <Member MemberName="CompareInfo">
      <MemberSignature Language="C#" Value="public System.Globalization.CompareInfo CompareInfo { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Globalization.CompareInfo CompareInfo" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureAndRegionInfoBuilder.CompareInfo" />
      <MemberSignature Language="VB.NET" Value="Public Property CompareInfo As CompareInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Globalization::CompareInfo ^ CompareInfo { System::Globalization::CompareInfo ^ get(); void set(System::Globalization::CompareInfo ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>sysglobl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.CompareInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia <see cref="T:System.Globalization.CompareInfo" /> obiektu, który definiuje sposób porównywania ciągów dla kultury.</summary>
        <value>
          <see cref="T:System.Globalization.CompareInfo" /> Obiektu, który definiuje sposób porównywania ciągów dla kultury.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Globalization.CultureAndRegionInfoBuilder.CompareInfo%2A?displayProperty=nameWithType> Właściwość odpowiada <xref:System.Globalization.CultureInfo.CompareInfo%2A?displayProperty=nameWithType> właściwości.  
  
 <xref:System.Globalization.TextInfo> i <xref:System.Globalization.CompareInfo> obiektów, które są przypisane do <xref:System.Globalization.CultureAndRegionInfoBuilder.TextInfo%2A> i <xref:System.Globalization.CultureAndRegionInfoBuilder.CompareInfo%2A> właściwości zarówno obsługują porównywania ciągów z uwzględnieniem kultury i z uwzględnieniem wielkości liter. <xref:System.Globalization.CompareInfo> Obiekt ma również metody, które obejmują <xref:System.Globalization.CompareOptions> parametr, który obsługuje porównania z uwzględnieniem kultury, bez uwzględniania wielkości liter. Te dwie właściwości powinien być przypisany <xref:System.Globalization.TextInfo> i <xref:System.Globalization.CompareInfo> obiektów, które reprezentują tych samych ustawień regionalnych.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">W operacji set jest przypisaną wartość <see langword="null" />.</exception>
        <exception cref="T:System.NotSupportedException">To kultura niestandardowa jest zastępująca wbudowaną kulturę.</exception>
        <altmember cref="P:System.Globalization.CultureAndRegionInfoBuilder.TextInfo" />
      </Docs>
    </Member>
    <Member MemberName="ConsoleFallbackUICulture">
      <MemberSignature Language="C#" Value="public System.Globalization.CultureInfo ConsoleFallbackUICulture { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Globalization.CultureInfo ConsoleFallbackUICulture" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureAndRegionInfoBuilder.ConsoleFallbackUICulture" />
      <MemberSignature Language="VB.NET" Value="Public Property ConsoleFallbackUICulture As CultureInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Globalization::CultureInfo ^ ConsoleFallbackUICulture { System::Globalization::CultureInfo ^ get(); void set(System::Globalization::CultureInfo ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>sysglobl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.CultureInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia kulturę interfejsu użytkownika alternatywnych odpowiedni dla aplikacji konsoli po domyślną kulturę interfejsu graficznego użytkownika jest nieodpowiedni.</summary>
        <value>Kultura alternatywne, używany do odczytu i wyświetlanie tekstu w konsoli.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 W ramach operacji get <xref:System.Globalization.CultureAndRegionInfoBuilder.ConsoleFallbackUICulture%2A> właściwość odpowiada <xref:System.Globalization.CultureInfo.GetConsoleFallbackUICulture%2A> metody. Określ `null` w operacji set, aby wskazać, że kultura zdefiniowane przez bieżącą <xref:System.Globalization.CultureAndRegionInfoBuilder> obiekt jest kultura interfejsu użytkownika alternatywnych. Jeśli spróbujesz ustawić właściwość do kultury, który z kolei ma inną kulturę interfejsu użytkownika konsoli powrotu następnie zostanie do niej przypisany tej kultury końcowe "liścia".  
  
 Języków, takich jak arabskiego, hebrajskiego i perski, Urdu oraz Syryjski są oparte na tekstu dwukierunkowego. Aplikacje systemu Windows, które wykorzystują graficznego interfejsu użytkownika, obsługa języków dwukierunkowych. Aplikacje konsoli, które wykorzystują tekst interfejs użytkownika konsoli systemu operacyjnego, nie zapewniają jednak obsługa dwukierunkowych. W związku z tym jeśli aplikacja konsoli jest zlokalizowana na język arabski lub hebrajski, wyświetla tekst nie można go odczytać, na ekranie konsoli.  
  
 Kultura interfejsu użytkownika określa zasoby, aplikacja musi obsługiwać użytkowników w danych wejściowych i wyjściowych i domyślnie jest taka sama jak kultury systemu operacyjnego. Na przykład <xref:System.Globalization.CultureInfo.CurrentUICulture%2A> właściwość zwraca kulturę Arabic Arabic systemu operacyjnego. Należy użyć aplikacji <xref:System.Globalization.CultureAndRegionInfoBuilder.ConsoleFallbackUICulture%2A> właściwości do pobrania kultury neutralnej nadające się do interfejsu użytkownika aplikacji konsoli.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">W operacji set, gdy określona kultura nie jest <see langword="null" />, <see cref="P:System.Globalization.CultureAndRegionInfoBuilder.ConsoleFallbackUICulture" /> właściwość określona kultura nie jest taka sama jak określona kultura.</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateFromLdml">
      <MemberSignature Language="C#" Value="public static System.Globalization.CultureAndRegionInfoBuilder CreateFromLdml (string xmlFileName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Globalization.CultureAndRegionInfoBuilder CreateFromLdml(string xmlFileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CultureAndRegionInfoBuilder.CreateFromLdml(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateFromLdml (xmlFileName As String) As CultureAndRegionInfoBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Globalization::CultureAndRegionInfoBuilder ^ CreateFromLdml(System::String ^ xmlFileName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>sysglobl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.CultureAndRegionInfoBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xmlFileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="xmlFileName">Nazwę pliku, który zawiera reprezentację XML <see cref="T:System.Globalization.CultureAndRegionInfoBuilder" /> obiektu.</param>
        <summary>Reconstitutes <see cref="T:System.Globalization.CultureAndRegionInfoBuilder" /> obiektu z określonego pliku XML zawierającego reprezentacji obiektu.</summary>
        <returns>Nowy obiekt, który jest odpowiednikiem informacji przechowywanych w <paramref name="xmlFileName" /> parametru.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `xmlFileName` Parametr określa nazwę pliku, który zawiera reprezentację XML <xref:System.Globalization.CultureAndRegionInfoBuilder> obiektu. Format pliku XML jest nazywany ustawień regionalnych danych Markup Language (LDML) w wersji 1.1. Nowy <xref:System.Globalization.CultureAndRegionInfoBuilder> obiekt jest tworzony i inicjowany z danymi w `xmlFileName`. <xref:System.Globalization.CultureAndRegionInfoBuilder.Save%2A> Metoda wykonuje działania odwrotnej <xref:System.Globalization.CultureAndRegionInfoBuilder.CreateFromLdml%2A> metody.  
  
 W pliku LDML właściwości kultury są określane jako elementy podrzędne `<special>` element `<identity>` sekcji. Wartość właściwości jest zazwyczaj określana przez dany element `type` atrybutu. Na przykład poniższy fragment pliku LDML definiuje kultury nadrzędnego jako kultury neutralnej angielskiej wersji językowej.  
  
```xml  
<identity>  
   <version number="1.1">ldml version 1.1</version>  
   <generation date="2012-05-16" />  
   <special xmlns:msLocale="http://schemas.microsoft.com/globalization/2004/08/carib/ldml">  
      <!—content removed -->  
      <msLocale:parentName type="en" />  
      <!—content removed -->  
   </special>  
</identity>  
```  
  
 Aby uzyskać więcej informacji na temat standardowych LDML zobacz [Unicode techniczne standardowe 35, "ustawień regionalnych danych Markup Language (LDML)"](http://go.microsoft.com/fwlink/p/?LinkId=252840) w witrynie sieci Web konsorcjum Unicode.  
  
   
  
## Examples  
 W poniższym przykładzie pokazano <xref:System.Globalization.CultureAndRegionInfoBuilder.Save%2A> i <xref:System.Globalization.CultureAndRegionInfoBuilder.CreateFromLdml%2A> metody.  
  
 [!code-csharp[sys.glob.carib.saveLdml#1](~/samples/snippets/csharp/VS_Snippets_CLR/sys.glob.carib.saveLdml/cs/sl.cs#1)]
 [!code-vb[sys.glob.carib.saveLdml#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/sys.glob.carib.saveLdml/vb/sl.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="xmlFileName" /> jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="xmlFileName" /> to ciąg pusty (""), lub nieprawidłowa nazwa pliku lub ścieżki.</exception>
        <exception cref="T:System.Xml.XmlException">Dane w <paramref name="xmlFileName" /> nie jest prawidłowym plikiem XML.  Wystąpił błąd We/Wy podczas uzyskiwania dostępu do - lub - <paramref name="xmlFileName" />.</exception>
        <exception cref="T:System.Xml.Schema.XmlSchemaValidationException">Dane w <paramref name="xmlFileName" /> nie jest w prawidłowym formacie LDML.</exception>
        <altmember cref="M:System.Globalization.CultureAndRegionInfoBuilder.Save(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="CultureEnglishName">
      <MemberSignature Language="C#" Value="public string CultureEnglishName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CultureEnglishName" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureAndRegionInfoBuilder.CultureEnglishName" />
      <MemberSignature Language="VB.NET" Value="Public Property CultureEnglishName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CultureEnglishName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>sysglobl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia nazwę kultury w języku angielskim.</summary>
        <value>Nazwa kultury w języku angielskim.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Globalization.CultureAndRegionInfoBuilder.CultureEnglishName%2A> Właściwość odpowiada <xref:System.Globalization.CultureInfo.EnglishName%2A> właściwości.  
  
 Na przykład, wartość zwracana <xref:System.Globalization.CultureAndRegionInfoBuilder.CultureEnglishName%2A> właściwość określoną kulturę angielski, ponieważ używany w Stanach Zjednoczonych jest "Angielski (Stany Zjednoczone)".  
  
 Wartość tej właściwości jest taka sama, niezależnie od wersji językowej architektury .NET Framework.  
  
   
  
## Examples  
 Poniższy przykład kodu tworzy niestandardową kulturę z prywatnie używanym prefiksem, a następnie wyświetla listę właściwości zestawu. Pierwsza właściwość pokazuje nazwę kultury.  
  
 [!code-cpp[sys.glob.carib1#1](~/samples/snippets/cpp/VS_Snippets_CLR/sys.glob.carib1/CPP/carib.cpp#1)]
 [!code-csharp[sys.glob.carib1#1](~/samples/snippets/csharp/VS_Snippets_CLR/sys.glob.carib1/CS/carib.cs#1)]
 [!code-vb[sys.glob.carib1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/sys.glob.carib1/VB/carib.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Wartość w operacji set jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">Długość wartości w operacji set nie należeć do zakresu od 0 do 79 znaków.</exception>
      </Docs>
    </Member>
    <Member MemberName="CultureName">
      <MemberSignature Language="C#" Value="public string CultureName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CultureName" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureAndRegionInfoBuilder.CultureName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CultureName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CultureName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>sysglobl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera nazwę kultury tworzona.</summary>
        <value>Nazwa kultury bieżącej <see cref="T:System.Globalization.CultureAndRegionInfoBuilder" /> obiektu.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wartość zwracana jest nazwa kultury określone w <xref:System.Globalization.CultureAndRegionInfoBuilder.%23ctor%2A> konstruktora. Jeśli określona nazwa kultury jest taka sama jak istniejące kultury, z wyjątkiem przypadków, wartość zwracana jest nazwa istniejącej kultury nie określona nazwa kultury.  
  
 <xref:System.Globalization.CultureAndRegionInfoBuilder.CultureName%2A> Właściwość odpowiada <xref:System.Globalization.CultureInfo.Name%2A> właściwości.  
  
   
  
## Examples  
 Poniższy przykład kodu tworzy niestandardową kulturę z prywatnie używanym prefiksem, a następnie wyświetla listę właściwości zestawu. Pierwsza właściwość pokazuje nazwę kultury.  
  
 [!code-cpp[sys.glob.carib1#1](~/samples/snippets/cpp/VS_Snippets_CLR/sys.glob.carib1/CPP/carib.cpp#1)]
 [!code-csharp[sys.glob.carib1#1](~/samples/snippets/csharp/VS_Snippets_CLR/sys.glob.carib1/CS/carib.cs#1)]
 [!code-vb[sys.glob.carib1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/sys.glob.carib1/VB/carib.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CultureNativeName">
      <MemberSignature Language="C#" Value="public string CultureNativeName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CultureNativeName" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureAndRegionInfoBuilder.CultureNativeName" />
      <MemberSignature Language="VB.NET" Value="Public Property CultureNativeName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CultureNativeName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>sysglobl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia nazwę kultury w formacie, a język ustawiony kultura do wyświetlenia.</summary>
        <value>Nazwa kultury w formacie, a język ustawiony kultura do wyświetlenia.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Globalization.CultureAndRegionInfoBuilder.CultureNativeName%2A> Właściwość odpowiada <xref:System.Globalization.CultureInfo.NativeName%2A> właściwości.  
  
 Wartość tej właściwości jest taka sama, niezależnie od wersji językowej architektury .NET Framework.  
  
 Pełna nazwa kultury może nie wyświetlać się poprawnie, jeśli w systemie nie skonfigurowano do poprawnego wyświetlania języka kultury. Na przykład jeśli <xref:System.Globalization.CultureAndRegionInfoBuilder.CultureName%2A> "ja-JP" dla języka japońskiego (Japonia), jest właściwość <xref:System.Globalization.CultureAndRegionInfoBuilder.CultureNativeName%2A> właściwości nie są wyświetlane poprawnie w systemie, który jest ustawiona tylko język angielski. Obsługa wielu języków systemów operacyjnych, takich jak Windows 2000, wyświetla <xref:System.Globalization.CultureAndRegionInfoBuilder.CultureNativeName%2A> właściwości poprawnie.  
  
   
  
## Examples  
 Poniższy przykład kodu tworzy niestandardową kulturę z prywatnie używanym prefiksem, a następnie wyświetla listę właściwości zestawu. Pierwsza właściwość pokazuje nazwę kultury.  
  
 [!code-cpp[sys.glob.carib1#1](~/samples/snippets/cpp/VS_Snippets_CLR/sys.glob.carib1/CPP/carib.cpp#1)]
 [!code-csharp[sys.glob.carib1#1](~/samples/snippets/csharp/VS_Snippets_CLR/sys.glob.carib1/CS/carib.cs#1)]
 [!code-vb[sys.glob.carib1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/sys.glob.carib1/VB/carib.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Wartość w operacji set jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">Długość wartości w operacji set nie należeć do zakresu od 0 do 79 znaków.</exception>
      </Docs>
    </Member>
    <Member MemberName="CultureTypes">
      <MemberSignature Language="C#" Value="public System.Globalization.CultureTypes CultureTypes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Globalization.CultureTypes CultureTypes" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureAndRegionInfoBuilder.CultureTypes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CultureTypes As CultureTypes" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Globalization::CultureTypes CultureTypes { System::Globalization::CultureTypes get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>sysglobl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.CultureTypes</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera <see cref="T:System.Globalization.CultureTypes" /> wartość, która opisuje kultury reprezentowany przez bieżący <see cref="T:System.Globalization.CultureAndRegionInfoBuilder" /> obiektu.</summary>
        <value>Jeden z <see cref="T:System.Globalization.CultureTypes" /> wartości.</value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Globalization.CultureTypes" />
        <altmember cref="P:System.Globalization.CultureInfo.CultureTypes" />
        <altmember cref="M:System.Globalization.CultureInfo.GetCultures(System.Globalization.CultureTypes)" />
      </Docs>
    </Member>
    <Member MemberName="CurrencyEnglishName">
      <MemberSignature Language="C#" Value="public string CurrencyEnglishName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CurrencyEnglishName" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureAndRegionInfoBuilder.CurrencyEnglishName" />
      <MemberSignature Language="VB.NET" Value="Public Property CurrencyEnglishName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CurrencyEnglishName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>sysglobl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia nazwę, a w języku angielskim, to waluta stosowana w kraju/regionie reprezentowany przez bieżący <see cref="T:System.Globalization.CultureAndRegionInfoBuilder" /> obiektu.</summary>
        <value>Nazwa w języku angielskim, to waluta stosowana w regionie.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Globalization.CultureAndRegionInfoBuilder.CurrencyEnglishName%2A> Właściwości jest odpowiednikiem <xref:System.Globalization.RegionInfo.CurrencyEnglishName%2A> właściwości.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Wartość w operacji set jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">Wartość w operacji set jest pustym ciągiem ("").</exception>
        <exception cref="T:System.NotSupportedException">Bieżący <see cref="T:System.Globalization.CultureAndRegionInfoBuilder" /> obiektu to kultura neutralna.</exception>
      </Docs>
    </Member>
    <Member MemberName="CurrencyNativeName">
      <MemberSignature Language="C#" Value="public string CurrencyNativeName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CurrencyNativeName" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureAndRegionInfoBuilder.CurrencyNativeName" />
      <MemberSignature Language="VB.NET" Value="Public Property CurrencyNativeName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CurrencyNativeName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>sysglobl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia natywnego nazwa to waluta stosowana w kraju/regionie reprezentowany przez bieżący <see cref="T:System.Globalization.CultureAndRegionInfoBuilder" /> obiektu.</summary>
        <value>Nazwa to waluta stosowana w kraju/regionie reprezentowany przez bieżący <see cref="T:System.Globalization.CultureAndRegionInfoBuilder" /> obiektu sformatowany w języku skojarzone z kod kraju/regionu normy ISO 3166 regionu.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Globalization.CultureAndRegionInfoBuilder.CurrencyNativeName%2A> Właściwości jest odpowiednikiem <xref:System.Globalization.RegionInfo.CurrencyNativeName%2A> właściwości.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Wartość w operacji set jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">Wartość w operacji set jest pustym ciągiem ("").</exception>
        <exception cref="T:System.NotSupportedException">Bieżący <see cref="T:System.Globalization.CultureAndRegionInfoBuilder" /> obiektu to kultura neutralna.</exception>
      </Docs>
    </Member>
    <Member MemberName="GeoId">
      <MemberSignature Language="C#" Value="public int GeoId { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 GeoId" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureAndRegionInfoBuilder.GeoId" />
      <MemberSignature Language="VB.NET" Value="Public Property GeoId As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int GeoId { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>sysglobl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia unikatowy numer identyfikacyjny dla regionu geograficznego, kraj, miasta lub lokalizacji.</summary>
        <value>Numer podpisem 32-bitowy, w który unikatowo identyfikuje lokalizacji geograficznej.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Globalization.CultureAndRegionInfoBuilder.GeoId%2A> Właściwość odpowiada <xref:System.Globalization.RegionInfo.GeoId%2A> właściwości.  
  
 Należy użyć aplikacji <xref:System.Globalization.CultureAndRegionInfoBuilder.GeoId%2A> właściwości do świadczenia usług specyficzne dla kultury dla klientów. Na przykład <xref:System.Globalization.CultureAndRegionInfoBuilder.GeoId%2A> właściwości może służyć jako klucza do rekordu bazy danych, który zawiera szczegółowe informacje na temat regionu.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">Bieżący <see cref="T:System.Globalization.CultureAndRegionInfoBuilder" /> kultury neutralnej definiuje obiekt.</exception>
      </Docs>
    </Member>
    <Member MemberName="GregorianDateTimeFormat">
      <MemberSignature Language="C#" Value="public System.Globalization.DateTimeFormatInfo GregorianDateTimeFormat { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Globalization.DateTimeFormatInfo GregorianDateTimeFormat" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureAndRegionInfoBuilder.GregorianDateTimeFormat" />
      <MemberSignature Language="VB.NET" Value="Public Property GregorianDateTimeFormat As DateTimeFormatInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Globalization::DateTimeFormatInfo ^ GregorianDateTimeFormat { System::Globalization::DateTimeFormatInfo ^ get(); void set(System::Globalization::DateTimeFormatInfo ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>sysglobl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.DateTimeFormatInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia <see cref="T:System.Globalization.DateTimeFormatInfo" /> obiektu, który definiuje format daty i godziny zgodnie z kalendarza gregoriańskiego.</summary>
        <value>A <see cref="T:System.Globalization.DateTimeFormatInfo" /> obiektu.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Każdy kultury, włącznie z kulturą zdefiniowane przez bieżącą <xref:System.Globalization.CultureAndRegionInfoBuilder> obiektów, zawiera zlokalizowane kalendarza gregoriańskiego, z którym skojarzony jest <xref:System.Globalization.DateTimeFormatInfo> obiektu. <xref:System.Globalization.DateTimeFormatInfo> Obiekt definiuje sposób będą wyświetlane w aplikacji daty i godziny. <xref:System.Globalization.CultureAndRegionInfoBuilder.GregorianDateTimeFormat%2A> Wartość właściwości jest <xref:System.Globalization.DateTimeFormatInfo> obiekt skojarzony z zlokalizowanych kalendarza gregoriańskiego zwrócony przez <xref:System.Globalization.CultureAndRegionInfoBuilder.AvailableCalendars%2A> właściwości.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Wartość w operacji set jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">Właściwość wartości w operacji set zwrócił nieprawidłową wartość właściwości.</exception>
        <exception cref="T:System.NotSupportedException">Bieżący <see cref="T:System.Globalization.CultureAndRegionInfoBuilder" /> obiektu to kultura neutralna.</exception>
      </Docs>
    </Member>
    <Member MemberName="IetfLanguageTag">
      <MemberSignature Language="C#" Value="public string IetfLanguageTag { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string IetfLanguageTag" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureAndRegionInfoBuilder.IetfLanguageTag" />
      <MemberSignature Language="VB.NET" Value="Public Property IetfLanguageTag As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ IetfLanguageTag { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>sysglobl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia nazwę kultury sformatowana zgodnie z RFC 4646 standard "Znaczniki identyfikacji języków".</summary>
        <value>Nazwa kultury sformatowany zgodnie z RFC 4646.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Globalization.CultureAndRegionInfoBuilder.IetfLanguageTag%2A> Właściwości pobiera lub ustawia nazwę kultury sformatowana zgodnie z RFC 4646, który może być inna niż nazwa kultury zwrócony przez <xref:System.Globalization.CultureInfo.Name%2A> właściwości. Na przykład nazwy kultury neutralnej dla języka chińskiego tradycyjnego w programie .NET Framework w wersji 1.0, został "zh-CHT". Z kolei RFC 4646 definiuje tę nazwę kultury jako "zh-HANT". (Należy pamiętać, że w programie .NET Framework w wersji 4, nazwa wyświetlana "zh-CHT" jest "Chiński (tradycyjny) starszych").  
  
 Nazwa kultury RFC 4646 składa się z kilku składników. Typowa nazwa składa się z identyfikatora języka obowiązkowe, identyfikator skryptu opcjonalne i identyfikator opcjonalne kraju lub regionu. Nieprawidłowa nazwa kultury RFC 4646 serbski język, cyrylicy skryptu i region Serbii jest na przykład "sr-Cyrl-r".  
  
 Należy zauważyć, że co najmniej dwa kultur można znacznik języka IETF.  
  
 Aby uzyskać więcej informacji, zobacz RFC 4646 "Tagi do identyfikacji języków," na [Request For Comments](http://go.microsoft.com/fwlink/?linkid=45286).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">W operacji set, wartość jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">W ramach operacji set długość wartości nie jest z zakresu od 1 do 84 znaków.</exception>
        <exception cref="T:System.ArgumentException">W ramach operacji set składnik nazwy określonej w wartości jest pusta lub dłuższa niż 8 znaków, a nie znaki alfanumeryczne lub łącznik (-) lub nazwa zawiera łącznik wiodących lub końcowych.</exception>
        <altmember cref="M:System.Globalization.CultureInfo.GetCultureInfoByIetfLanguageTag(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="IsMetric">
      <MemberSignature Language="C#" Value="public bool IsMetric { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsMetric" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureAndRegionInfoBuilder.IsMetric" />
      <MemberSignature Language="VB.NET" Value="Public Property IsMetric As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsMetric { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>sysglobl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy kraj/region korzysta z systemu metryki dla pomiarów.</summary>
        <value>
          <see langword="true" /> Jeśli kraj/region korzysta z systemu metryki dla pomiarów; w przeciwnym razie <see langword="false" />.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">Ta operacja jest nieprawidłowa dla kultury neutralnej.</exception>
      </Docs>
    </Member>
    <Member MemberName="ISOCurrencySymbol">
      <MemberSignature Language="C#" Value="public string ISOCurrencySymbol { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ISOCurrencySymbol" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureAndRegionInfoBuilder.ISOCurrencySymbol" />
      <MemberSignature Language="VB.NET" Value="Public Property ISOCurrencySymbol As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ISOCurrencySymbol { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>sysglobl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia skojarzone z kraj/region symbol waluty ISO 4217 trzy znaki.</summary>
        <value>Symbol waluty ISO 4217 trzy znaki skojarzone z kraju/regionu.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Globalization.CultureAndRegionInfoBuilder.ISOCurrencySymbol%2A> Właściwość odpowiada <xref:System.Globalization.RegionInfo.ISOCurrencySymbol%2A> właściwości.  
  
 Lista symboli waluty ISO 4217 trzy znaki znajduje się w <xref:System.Globalization.RegionInfo> klasy tematu. Na przykład symbol waluty ISO 4217 dolara amerykańskiego jest "USD".  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">Jest to kultura neutralna.</exception>
        <exception cref="T:System.ArgumentNullException">W operacji set, wartość jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">W ramach operacji set wartość nie jest od 0 do 8 znaków.</exception>
      </Docs>
    </Member>
    <Member MemberName="IsRightToLeft">
      <MemberSignature Language="C#" Value="public bool IsRightToLeft { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsRightToLeft" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureAndRegionInfoBuilder.IsRightToLeft" />
      <MemberSignature Language="VB.NET" Value="Public Property IsRightToLeft As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsRightToLeft { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>sysglobl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub Ustawia kierunek dominujący wierszy tekstu w system pisma skojarzone z bieżącym <see cref="T:System.Globalization.CultureAndRegionInfoBuilder" /> obiektu.</summary>
        <value>
          <see langword="true" /> w przypadku dominujący kierunek wierszy tekstu w bieżącym systemie pisania od prawej do lewej; w przeciwnym razie <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aplikacja używa <xref:System.Globalization.CultureAndRegionInfoBuilder.IsRightToLeft%2A> pasków właściwość, aby określić względne położenie formanty, takie jak przyciski i przewijania w graficznym interfejsie użytkownika.  
  
 Dominujący kierunek tekstu w kulturą niestandardową utworzone na podstawie bieżącego dostępu do <xref:System.Globalization.CultureAndRegionInfoBuilder> obiektu, należy użyć aplikacji <xref:System.Globalization.TextInfo.IsRightToLeft%2A> właściwości obiektu zwróconego przez <xref:System.Globalization.CultureInfo.TextInfo%2A> właściwości kultura niestandardowa.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="KeyboardLayoutId">
      <MemberSignature Language="C#" Value="public int KeyboardLayoutId { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 KeyboardLayoutId" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureAndRegionInfoBuilder.KeyboardLayoutId" />
      <MemberSignature Language="VB.NET" Value="Public Property KeyboardLayoutId As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int KeyboardLayoutId { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>sysglobl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia identyfikator ustawień regionalnych aktywne.</summary>
        <value>Liczbą podpisem 32-bitowego, która określa identyfikator ustawień regionalnych.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Globalization.CultureAndRegionInfoBuilder.KeyboardLayoutId%2A> Właściwość odpowiada <xref:System.Globalization.CultureInfo.KeyboardLayoutId%2A> właściwości.  
  
 Identyfikator ustawień regionalnych wcześniej wywołano układu klawiatury. Identyfikator może służyć do konwertera mowy na tekst, wejściowych Method Editor (IME) lub inne formy wprowadzania.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">W ramach operacji set wartość wynosi zero.</exception>
      </Docs>
    </Member>
    <Member MemberName="LCID">
      <MemberSignature Language="C#" Value="public int LCID { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 LCID" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureAndRegionInfoBuilder.LCID" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LCID As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int LCID { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>sysglobl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera identyfikator kultury dla bieżącego <see cref="T:System.Globalization.CultureAndRegionInfoBuilder" /> obiektu.</summary>
        <value>Identyfikator kultury dla bieżącego <see cref="T:System.Globalization.CultureAndRegionInfoBuilder" /> obiektu.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Globalization.CultureAndRegionInfoBuilder.LCID%2A?displayProperty=nameWithType> Właściwość odpowiada <xref:System.Globalization.CultureInfo.LCID%2A?displayProperty=nameWithType> właściwości.  
  
 Dla kultury zastępczy identyfikator kultury jest mapowany na odpowiedni identyfikator ustawień regionalnych National obsługi Language (NLS). Kultury niestandardowe zdefiniowane przez użytkownika wartość tej właściwości jest zawsze 0x1000 szesnastkową.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadDataFromCultureInfo">
      <MemberSignature Language="C#" Value="public void LoadDataFromCultureInfo (System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void LoadDataFromCultureInfo(class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CultureAndRegionInfoBuilder.LoadDataFromCultureInfo(System.Globalization.CultureInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Sub LoadDataFromCultureInfo (culture As CultureInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void LoadDataFromCultureInfo(System::Globalization::CultureInfo ^ culture);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>sysglobl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="culture">Obiekt, którego właściwości będą używane.</param>
        <summary>Ustawia właściwości bieżącego <see cref="T:System.Globalization.CultureAndRegionInfoBuilder" /> odpowiednie właściwości określonego obiektu <see cref="T:System.Globalization.CultureInfo" /> obiektu.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="culture" /> jest <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="LoadDataFromRegionInfo">
      <MemberSignature Language="C#" Value="public void LoadDataFromRegionInfo (System.Globalization.RegionInfo region);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void LoadDataFromRegionInfo(class System.Globalization.RegionInfo region) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CultureAndRegionInfoBuilder.LoadDataFromRegionInfo(System.Globalization.RegionInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Sub LoadDataFromRegionInfo (region As RegionInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void LoadDataFromRegionInfo(System::Globalization::RegionInfo ^ region);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>sysglobl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="region" Type="System.Globalization.RegionInfo" />
      </Parameters>
      <Docs>
        <param name="region">Obiekt, którego właściwości będą używane.</param>
        <summary>Ustawia właściwości bieżącego <see cref="T:System.Globalization.CultureAndRegionInfoBuilder" /> odpowiednie właściwości określonego obiektu <see cref="T:System.Globalization.RegionInfo" /> obiektu.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="region" /> jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">Nie można ustawić informacji kraj/region, ponieważ bieżący <see cref="T:System.Globalization.CultureAndRegionInfoBuilder" /> obiektu określa kulturę neutralną.</exception>
      </Docs>
    </Member>
    <Member MemberName="NumberFormat">
      <MemberSignature Language="C#" Value="public System.Globalization.NumberFormatInfo NumberFormat { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Globalization.NumberFormatInfo NumberFormat" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureAndRegionInfoBuilder.NumberFormat" />
      <MemberSignature Language="VB.NET" Value="Public Property NumberFormat As NumberFormatInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Globalization::NumberFormatInfo ^ NumberFormat { System::Globalization::NumberFormatInfo ^ get(); void set(System::Globalization::NumberFormatInfo ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>sysglobl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.NumberFormatInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia <see cref="T:System.Globalization.NumberFormatInfo" /> obiektu, który definiuje kulturalnie odpowiedni format wyświetlania liczb, waluty i procent.</summary>
        <value>A <see cref="T:System.Globalization.NumberFormatInfo" /> obiektu, który definiuje kulturalnie odpowiedni format wyświetlania liczb, waluty i procent.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Globalization.CultureAndRegionInfoBuilder.NumberFormat%2A> Właściwość odpowiada <xref:System.Globalization.CultureInfo.NumberFormat%2A> właściwości.  
  
 Aplikacja powinna wywoływać tej właściwości, tylko dla określonej kultury.  
  
 <xref:System.Globalization.NumberFormatInfo.PercentDecimalSeparator%2A>, <xref:System.Globalization.NumberFormatInfo.PercentGroupSeparator%2A>, <xref:System.Globalization.NumberFormatInfo.PercentGroupSizes%2A>, I <xref:System.Globalization.NumberFormatInfo.PercentDecimalDigits%2A> właściwości <xref:System.Globalization.CultureAndRegionInfoBuilder.NumberFormat%2A> są ignorowane. Zapisane formularza kultury nie powoduje zapisania jawne wartości tych właściwości. Zamiast tego podczas ładowania kultury one zawsze domyślnie <xref:System.Globalization.NumberFormatInfo.NumberDecimalSeparator%2A>, <xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A>, <xref:System.Globalization.NumberFormatInfo.NumberGroupSizes%2A>, i <xref:System.Globalization.NumberFormatInfo.NumberDecimalDigits%2A>odpowiednio.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Wartość w operacji set jest <see langword="null" />.</exception>
        <exception cref="T:System.NotSupportedException">Ta operacja jest nieprawidłowa dla kultury neutralnej.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">W specyfikacji liczby, walutowych lub procent właściwości dla tej kultury zawiera zbyt dużo cyfr lub jest poza zakresem.</exception>
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public System.Globalization.CultureInfo Parent { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Globalization.CultureInfo Parent" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureAndRegionInfoBuilder.Parent" />
      <MemberSignature Language="VB.NET" Value="Public Property Parent As CultureInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Globalization::CultureInfo ^ Parent { System::Globalization::CultureInfo ^ get(); void set(System::Globalization::CultureInfo ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>sysglobl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.CultureInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia <see cref="T:System.Globalization.CultureInfo" /> obiekt, który reprezentuje Kultura nadrzędna bieżącej kultury niestandardowej.</summary>
        <value>
          <see cref="T:System.Globalization.CultureInfo" /> Obiekt, który reprezentuje Kultura nadrzędna bieżącej kultury niestandardowej.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Kultury ma hierarchię. Dla wstępnie zdefiniowanego kultur nadrzędnego określoną kulturę to kultura neutralna i jest elementem nadrzędnym kultury neutralnej <xref:System.Globalization.CultureInfo.InvariantCulture%2A>. Kultura nadrzędna obejmuje tylko zestaw informacje, które są wspólne dla jego elementów podrzędnych.  
  
 Ogólnie zaleca się zgodności niestandardowe kultury z tej hierarchii. Jednak domyślnie <xref:System.Globalization.CultureAndRegionInfoBuilder.Parent%2A> jest kulturą niestandardową <xref:System.Globalization.CultureAndRegionInfoBuilder.Parent%2A> kultury, na którym jest oparty. Jeśli aplikacja tworzy kultury z <xref:System.Globalization.CultureAndRegionInfoBuilder.CultureName%2A> "en US-MyCulture" oparte na "pl pl", jego element nadrzędny to "en", ponieważ jest to <xref:System.Globalization.CultureAndRegionInfoBuilder.Parent%2A> "en-us". Jeśli aplikacja używa "en US" jako <xref:System.Globalization.CultureAndRegionInfoBuilder.Parent%2A> nowe kultury niestandardowej, należy ustawić wartość jawnie.  
  
 Jeśli zasobów dla określonej kultury nie są dostępne w systemie, używane są zasoby dla kultury neutralnej. Jeśli zasoby dla kultury neutralnej nie są dostępne, są używane zasoby osadzone w zestawie głównym. Aby uzyskać więcej informacji o procesie rezerwowy zasobów, zobacz [pakowanie i wdrażanie zasobów](~/docs/framework/resources/packaging-and-deploying-resources-in-desktop-apps.md).  
  
 Lista kultur interfejsu API systemu Windows jest nieco inne niż lista kultur w programie .NET Framework. Jeśli wymagane jest współdziałanie z systemem Windows, na przykład za pośrednictwem platformy wywołanie mechanizmu, określoną kulturę, która jest zdefiniowana w programie .NET Framework powinny być używane w aplikacji. Zapewnia to spójność z równoważną ustawienia regionalne systemu Windows, który jest identyfikowany o takim samym <xref:System.Globalization.CultureInfo.LCID%2A>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">W operacji set nie można odnaleźć wartości kultury. Ewentualnie przypisaną wartość jest wyrejestrować kultury niestandardowej.</exception>
        <exception cref="T:System.ArgumentNullException">W operacji set, wartość jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">Niezmienna kultura wprowadzoną operację, który przechodzi przez elementy nadrzędne bieżącej kultury, nie można znaleźć w ciągu 10 generacje obiektów nadrzędnych.  w ramach operacji set Wykryto odwołanie cykliczne - lub -: przypisaną wartość jest elementem nadrzędnym bieżącego kultura niestandardowa.</exception>
      </Docs>
    </Member>
    <Member MemberName="RegionEnglishName">
      <MemberSignature Language="C#" Value="public string RegionEnglishName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string RegionEnglishName" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureAndRegionInfoBuilder.RegionEnglishName" />
      <MemberSignature Language="VB.NET" Value="Public Property RegionEnglishName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ RegionEnglishName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>sysglobl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia pełną nazwę kraju/regionu w języku angielskim.</summary>
        <value>Pełna nazwa kraju/regionu w języku angielskim.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Globalization.CultureAndRegionInfoBuilder.RegionEnglishName%2A> Właściwość odpowiada <xref:System.Globalization.RegionInfo.EnglishName%2A> właściwości.  
  
 Na przykład, wartość zwracana <xref:System.Globalization.CultureAndRegionInfoBuilder.RegionEnglishName%2A> dla Stanów Zjednoczonych jest "Stanów Zjednoczonych".  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">Ta operacja jest nieprawidłowa dla kultury neutralnej.</exception>
        <exception cref="T:System.ArgumentNullException">Wartość w operacji set jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">Długość wartości w operacji set nie należeć do zakresu od 0 do 79 znaków.</exception>
      </Docs>
    </Member>
    <Member MemberName="RegionName">
      <MemberSignature Language="C#" Value="public string RegionName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string RegionName" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureAndRegionInfoBuilder.RegionName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RegionName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ RegionName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>sysglobl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera nazwę kraju/regionu dla bieżącego <see cref="T:System.Globalization.CultureAndRegionInfoBuilder" /> obiektu.</summary>
        <value>Nazwa kraju/regionu dla bieżącego <see cref="T:System.Globalization.CultureAndRegionInfoBuilder" /> obiektu.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wartość zwracana jest nazwa kultury określone w <xref:System.Globalization.CultureAndRegionInfoBuilder.%23ctor%2A> konstruktora. Jeśli określona nazwa kultury jest taka sama jak istniejące kultury, z wyjątkiem przypadków, wartość zwracana jest nazwa istniejącej kultury nie określona nazwa kultury.  
  
 <xref:System.Globalization.CultureAndRegionInfoBuilder.RegionName%2A> Właściwość odpowiada <xref:System.Globalization.RegionInfo.Name%2A> właściwości.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">Ta operacja jest nieprawidłowa dla kultury neutralnej.</exception>
      </Docs>
    </Member>
    <Member MemberName="RegionNativeName">
      <MemberSignature Language="C#" Value="public string RegionNativeName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string RegionNativeName" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureAndRegionInfoBuilder.RegionNativeName" />
      <MemberSignature Language="VB.NET" Value="Public Property RegionNativeName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ RegionNativeName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>sysglobl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia pełną nazwę kraju/regionu znany przez osoby to kultura niestandardowa.</summary>
        <value>Lokalna nazwa kraju/regionu.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Globalization.CultureAndRegionInfoBuilder.RegionNativeName%2A> Właściwość odpowiada <xref:System.Globalization.RegionInfo.NativeName%2A> właściwości.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">Ta operacja jest nieprawidłowa dla kultury neutralnej.</exception>
        <exception cref="T:System.ArgumentNullException">Wartość w operacji set jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">Długość wartości w operacji set nie należeć do zakresu od 1 do 79 znaków.</exception>
      </Docs>
    </Member>
    <Member MemberName="Register">
      <MemberSignature Language="C#" Value="public void Register ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Register() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CultureAndRegionInfoBuilder.Register" />
      <MemberSignature Language="VB.NET" Value="Public Sub Register ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Register();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>sysglobl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Będzie się powtarzał bieżącego <see cref="T:System.Globalization.CultureAndRegionInfoBuilder" /> obiektu jako kulturą niestandardową na komputerze lokalnym i umożliwia, które kultury dostępne dla aplikacji. Wymaga uprawnień administratora.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Globalization.CultureAndRegionInfoBuilder.Register%2A> Metody przechowuje kulturą niestandardową jako plik na komputerze lokalnym, w podkatalogu globalizacji katalogu zwrócony przez Win32 [GetWindowsDirectory](http://go.microsoft.com/fwlink/?LinkId=191561) funkcji. Ten proces jest nazywany rejestrowanie kultura niestandardowa. Po zarejestrowaniu kultura niestandardowa kulturą niestandardową można tworzyć, określając nazwę kultury w <xref:System.Globalization.CultureInfo.%23ctor%2A> konstruktora lub podczas wywoływania metody <xref:System.Globalization.CultureInfo.CreateSpecificCulture%2A?displayProperty=nameWithType> metody.  
  
 Kultura niestandardowa można usunąć przez wywołanie metody <xref:System.Globalization.CultureAndRegionInfoBuilder.Unregister%2A> metody.  
  
   
  
## Examples  
 W poniższym przykładzie pokazano <xref:System.Globalization.CultureAndRegionInfoBuilder.Register%2A> metody.  
  
 [!code-csharp[sys.glob.carib.register#1](~/samples/snippets/csharp/VS_Snippets_CLR/sys.glob.carib.register/CS/persist.cs#1)]
 [!code-vb[sys.glob.carib.register#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/sys.glob.carib.register/VB/persist.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Kultura niestandardowa jest już zarejestrowany.  - lub - bieżącego <see cref="T:System.Globalization.CultureAndRegionInfoBuilder" /> obiekt ma właściwość, która musi być ustawiona przed zarejestrowaniem kultury. Kultury, Neutralna lub właściwe, musi mieć <see cref="P:System.Globalization.CultureAndRegionInfoBuilder.TextInfo" /> i <see cref="P:System.Globalization.CultureAndRegionInfoBuilder.CompareInfo" /> ustawiony. Określone kultury musi mieć również <see cref="P:System.Globalization.CultureAndRegionInfoBuilder.NumberFormat" />, <see cref="P:System.Globalization.CultureAndRegionInfoBuilder.GregorianDateTimeFormat" />, i <see cref="P:System.Globalization.CultureAndRegionInfoBuilder.AvailableCalendars" /> ustawiony.  Ta metoda również zwraca <see cref="T:System.InvalidOperationException" /> Jeśli nie zdefiniowano następujące właściwości:  <see cref="P:System.Globalization.CultureAndRegionInfoBuilder.CultureEnglishName" /><see cref="P:System.Globalization.CultureAndRegionInfoBuilder.CultureNativeName" /><see cref="P:System.Globalization.CultureAndRegionInfoBuilder.CurrencyEnglishName" /><see cref="P:System.Globalization.CultureAndRegionInfoBuilder.CurrencyNativeName" /><see cref="P:System.Globalization.CultureAndRegionInfoBuilder.ISOCurrencySymbol" /><see cref="P:System.Globalization.CultureAndRegionInfoBuilder.Parent" /><see cref="P:System.Globalization.CultureAndRegionInfoBuilder.RegionEnglishName" /><see cref="P:System.Globalization.CultureAndRegionInfoBuilder.RegionNativeName" /><see cref="P:System.Globalization.CultureAndRegionInfoBuilder.ThreeLetterISOLanguageName" /><see cref="P:System.Globalization.CultureAndRegionInfoBuilder.ThreeLetterISORegionName" /><see cref="P:System.Globalization.CultureAndRegionInfoBuilder.ThreeLetterWindowsLanguageName" /><see cref="P:System.Globalization.CultureAndRegionInfoBuilder.ThreeLetterWindowsRegionName" /><see cref="P:System.Globalization.CultureAndRegionInfoBuilder.TwoLetterISOLanguageName" /><see cref="P:System.Globalization.CultureAndRegionInfoBuilder.TwoLetterISORegionName" /></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">A <see cref="T:System.Globalization.CultureAndRegionInfoBuilder" /> przekracza wartość właściwości obiektu jego maksymalna długość lub wartość.</exception>
        <exception cref="T:System.UnauthorizedAccessException">Użytkownik nie ma uprawnień administracyjnych.</exception>
        <altmember cref="M:System.Globalization.CultureAndRegionInfoBuilder.Unregister(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public void Save (string filename);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Save(string filename) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CultureAndRegionInfoBuilder.Save(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Save (filename As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Save(System::String ^ filename);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>sysglobl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filename" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="filename">Nazwa pliku zawiera reprezentację XML to kultura niestandardowa.</param>
        <summary>Zapisuje reprezentację XML bieżącego <see cref="T:System.Globalization.CultureAndRegionInfoBuilder" /> obiekt do określonego pliku.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Globalization.CultureAndRegionInfoBuilder.Save%2A> Metoda zapisuje bieżące <xref:System.Globalization.CultureAndRegionInfoBuilder> obiekt do pliku określonego przez `filename` parametr w formacie XML o nazwie ustawień regionalnych danych Markup Language (LDML) w wersji 1.1. <xref:System.Globalization.CultureAndRegionInfoBuilder.CreateFromLdml%2A> Metoda wykonuje działania odwrotnej <xref:System.Globalization.CultureAndRegionInfoBuilder.Save%2A> metody.  
  
 Aby uzyskać informacje o formacie pliku LDML, zobacz <xref:System.Globalization.CultureAndRegionInfoBuilder.CreateFromLdml%2A> metody. Informacje dotyczące standardu LDML, zobacz [Unicode techniczne standardowe 35, "ustawień regionalnych danych Markup Language (LDML)"](http://go.microsoft.com/fwlink/p/?LinkId=252840) w witrynie sieci Web konsorcjum Unicode.  
  
   
  
## Examples  
 W poniższym przykładzie pokazano <xref:System.Globalization.CultureAndRegionInfoBuilder.Save%2A> i <xref:System.Globalization.CultureAndRegionInfoBuilder.CreateFromLdml%2A> metody.  
  
 [!code-csharp[sys.glob.carib.saveLdml#1](~/samples/snippets/csharp/VS_Snippets_CLR/sys.glob.carib.saveLdml/cs/sl.cs#1)]
 [!code-vb[sys.glob.carib.saveLdml#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/sys.glob.carib.saveLdml/vb/sl.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="filename" /> jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="filename" /> to ciąg pusty ("").</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">Wartość właściwości <see cref="T:System.Globalization.DateTimeFormatInfo" />, <see cref="T:System.Globalization.TextInfo" />, lub <see cref="T:System.Globalization.NumberFormatInfo" /> obiektów zawartych w bieżącym <see cref="T:System.Globalization.CultureAndRegionInfoBuilder" /> obiektu jest nieprawidłowy.</exception>
        <altmember cref="M:System.Globalization.CultureAndRegionInfoBuilder.CreateFromLdml(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="TextInfo">
      <MemberSignature Language="C#" Value="public System.Globalization.TextInfo TextInfo { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Globalization.TextInfo TextInfo" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureAndRegionInfoBuilder.TextInfo" />
      <MemberSignature Language="VB.NET" Value="Public Property TextInfo As TextInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Globalization::TextInfo ^ TextInfo { System::Globalization::TextInfo ^ get(); void set(System::Globalization::TextInfo ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>sysglobl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.TextInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia <see cref="T:System.Globalization.TextInfo" /> obiektu, który definiuje system pisma skojarzone z tym kultura niestandardowa.</summary>
        <value>Obiekt, który definiuje system pisma skojarzone z tym kultura niestandardowa.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Globalization.CultureAndRegionInfoBuilder.TextInfo%2A?displayProperty=nameWithType> Właściwość zawiera informacje specyficzne dla kultury, wielkości liter dla ciągów. Odpowiadający mu <xref:System.Globalization.CultureInfo.TextInfo%2A?displayProperty=nameWithType> właściwości.  
  
 <xref:System.Globalization.TextInfo> i <xref:System.Globalization.CompareInfo> obiektów, które są przypisane do <xref:System.Globalization.CultureAndRegionInfoBuilder.TextInfo%2A> i <xref:System.Globalization.CultureAndRegionInfoBuilder.CompareInfo%2A> właściwości zarówno obsługują porównywania ciągów z uwzględnieniem kultury i z uwzględnieniem wielkości liter. <xref:System.Globalization.CompareInfo> Obiekt ma również metody, które obejmują <xref:System.Globalization.CompareOptions> parametr, który obsługuje porównania z uwzględnieniem kultury, bez uwzględniania wielkości liter. Te dwie właściwości powinien być przypisany <xref:System.Globalization.TextInfo> i <xref:System.Globalization.CompareInfo> obiektów, które reprezentują tych samych ustawień regionalnych.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">Ta operacja nie jest obsługiwana dla zastąpienia kultur.</exception>
        <exception cref="T:System.ArgumentNullException">Wartość w operacji set jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">Liczba znaków separatora listy nie należeć do zakresu od 0 do 3.</exception>
        <altmember cref="P:System.Globalization.CultureAndRegionInfoBuilder.CompareInfo" />
      </Docs>
    </Member>
    <Member MemberName="ThreeLetterISOLanguageName">
      <MemberSignature Language="C#" Value="public string ThreeLetterISOLanguageName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ThreeLetterISOLanguageName" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureAndRegionInfoBuilder.ThreeLetterISOLanguageName" />
      <MemberSignature Language="VB.NET" Value="Public Property ThreeLetterISOLanguageName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ThreeLetterISOLanguageName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>sysglobl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia ISO 639 2 trzyliterowy kod języka to kultura niestandardowa.</summary>
        <value>ISO 639 2 trzyliterowy kod języka bieżącego <see cref="T:System.Globalization.CultureInfo" /> obiektu.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Globalization.CultureAndRegionInfoBuilder.ThreeLetterISOLanguageName%2A> Właściwość odpowiada <xref:System.Globalization.CultureInfo.ThreeLetterISOLanguageName%2A> właściwości.  
  
 Na przykład skrót trzyliterowy dla języka angielskiego jest "eng".  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Wartość w operacji set jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">Długość wartości w operacji zestawu nie mieści się w zakresie od 1 do 8 znaków.</exception>
        <exception cref="T:System.ArgumentException">Wartość operacji zestawu zawiera znak, który nie należy do przedziału od „a” do „z”, od „A” do „Z” lub od „0” do „9”.</exception>
      </Docs>
    </Member>
    <Member MemberName="ThreeLetterISORegionName">
      <MemberSignature Language="C#" Value="public string ThreeLetterISORegionName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ThreeLetterISORegionName" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureAndRegionInfoBuilder.ThreeLetterISORegionName" />
      <MemberSignature Language="VB.NET" Value="Public Property ThreeLetterISORegionName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ThreeLetterISORegionName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>sysglobl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia trzyliterowy kod zdefiniowany w normy ISO 3166 w kraju/regionie.</summary>
        <value>Trzyliterowy kod zdefiniowany w normy ISO 3166 w kraju/regionie.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Globalization.CultureAndRegionInfoBuilder.ThreeLetterISORegionName%2A> Właściwość odpowiada <xref:System.Globalization.RegionInfo.ThreeLetterISORegionName%2A> właściwości.  
  
 <xref:System.Globalization.CultureAndRegionInfoBuilder.ThreeLetterISORegionName%2A> Właściwość zawiera jeden z kodów trzyliterowy zdefiniowane w normy ISO 3166 w kraju/regionie. Na przykład trzyliterowy kod dla Stanów Zjednoczonych to "USA".  
  
 Case nie ma znaczenia. Jednak <xref:System.Globalization.CultureAndRegionInfoBuilder.RegionName%2A>, <xref:System.Globalization.CultureAndRegionInfoBuilder.TwoLetterISORegionName%2A>i <xref:System.Globalization.CultureAndRegionInfoBuilder.ThreeLetterISORegionName%2A> właściwości zawierają odpowiedni kod pisane wielkimi literami.  
  
 Nazwy wstępnie zdefiniowanych kraj/region są wymienione w <xref:System.Globalization.RegionInfo> klasy tematu.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Wartość w operacji set jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">Długość wartości w operacji zestawu nie mieści się w zakresie od 1 do 8 znaków.</exception>
        <exception cref="T:System.ArgumentException">Wartość operacji zestawu zawiera znak, który nie należy do przedziału od „a” do „z”, od „A” do „Z” lub od „0” do „9”.</exception>
      </Docs>
    </Member>
    <Member MemberName="ThreeLetterWindowsLanguageName">
      <MemberSignature Language="C#" Value="public string ThreeLetterWindowsLanguageName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ThreeLetterWindowsLanguageName" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureAndRegionInfoBuilder.ThreeLetterWindowsLanguageName" />
      <MemberSignature Language="VB.NET" Value="Public Property ThreeLetterWindowsLanguageName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ThreeLetterWindowsLanguageName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>sysglobl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia trzyliterowy kod języka, zgodnie z definicją w interfejsie API systemu Windows.</summary>
        <value>Trzyliterowy kod języka zgodnie z definicją w interfejsie API systemu Windows.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Globalization.CultureAndRegionInfoBuilder.ThreeLetterWindowsLanguageName%2A> Właściwość odpowiada <xref:System.Globalization.CultureInfo.ThreeLetterWindowsLanguageName%2A> właściwości.  
  
 Ta właściwość zwraca taką samą wartość jak metoda interfejsu API systemu Windows `GetLocaleInfo` o wartości LOCALE_SABBREVLANGNAME. Na przykład trzyliterowy kod w języku angielskim (Stany Zjednoczone) zgodnie z definicją w interfejsie API systemu Windows jest "enu".  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Wartość w operacji set jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">Długość wartości w operacji zestawu nie mieści się w zakresie od 1 do 8 znaków.</exception>
        <exception cref="T:System.ArgumentException">Wartość operacji zestawu zawiera znak, który nie należy do przedziału od „a” do „z”, od „A” do „Z” lub od „0” do „9”.</exception>
        <exception cref="T:System.NotSupportedException">W ramach operacji set Bieżąca kultura niestandardowa jest kultury zastąpienia.</exception>
      </Docs>
    </Member>
    <Member MemberName="ThreeLetterWindowsRegionName">
      <MemberSignature Language="C#" Value="public string ThreeLetterWindowsRegionName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ThreeLetterWindowsRegionName" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureAndRegionInfoBuilder.ThreeLetterWindowsRegionName" />
      <MemberSignature Language="VB.NET" Value="Public Property ThreeLetterWindowsRegionName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ThreeLetterWindowsRegionName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>sysglobl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia trzyliterowy kod przypisane przez system Windows do kraj/region, reprezentowany przez bieżącej kultury niestandardowej.</summary>
        <value>Przypisany przez system Windows kraj/region, reprezentowany przez ten kod trzyliterowy <see cref="T:System.Globalization.CultureAndRegionInfoBuilder" /> obiektu.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Globalization.CultureAndRegionInfoBuilder.ThreeLetterWindowsRegionName%2A> Właściwość odpowiada <xref:System.Globalization.RegionInfo.ThreeLetterWindowsRegionName%2A> właściwości.  
  
 Na przykład trzyliterowy kod dla Stanów Zjednoczonych to "USA".  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Wartość w operacji set jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">Długość wartości w operacji zestawu nie mieści się w zakresie od 1 do 8 znaków.</exception>
        <exception cref="T:System.ArgumentException">Wartość operacji zestawu zawiera znak, który nie należy do przedziału od „a” do „z”, od „A” do „Z” lub od „0” do „9”.</exception>
        <exception cref="T:System.NotSupportedException">W ramach operacji set Bieżąca kultura niestandardowa jest zastąpienie kultury lub kultury neutralnej.</exception>
      </Docs>
    </Member>
    <Member MemberName="TwoLetterISOLanguageName">
      <MemberSignature Language="C#" Value="public string TwoLetterISOLanguageName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TwoLetterISOLanguageName" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureAndRegionInfoBuilder.TwoLetterISOLanguageName" />
      <MemberSignature Language="VB.NET" Value="Public Property TwoLetterISOLanguageName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ TwoLetterISOLanguageName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>sysglobl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia kod ISO 639 1 dwuliterowych dla bieżącego języka <see cref="T:System.Globalization.CultureInfo" /> obiektu.</summary>
        <value>Kod ISO 639 1 dwuliterowych dla bieżącego języka <see cref="T:System.Globalization.CultureInfo" /> obiektu.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Globalization.CultureAndRegionInfoBuilder.TwoLetterISOLanguageName%2A> Właściwość odpowiada <xref:System.Globalization.CultureInfo.TwoLetterISOLanguageName%2A> właściwości.  
  
 Skrót dwuliterowych dla języka angielskiego jest na przykład "en".  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Wartość w operacji set jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">Długość wartości w operacji zestawu nie mieści się w zakresie od 1 do 8 znaków.</exception>
        <exception cref="T:System.ArgumentException">Wartość operacji zestawu zawiera znak, który nie należy do przedziału od „a” do „z”, od „A” do „Z” lub od „0” do „9”.</exception>
      </Docs>
    </Member>
    <Member MemberName="TwoLetterISORegionName">
      <MemberSignature Language="C#" Value="public string TwoLetterISORegionName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TwoLetterISORegionName" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureAndRegionInfoBuilder.TwoLetterISORegionName" />
      <MemberSignature Language="VB.NET" Value="Public Property TwoLetterISORegionName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ TwoLetterISORegionName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>sysglobl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia kod dwuliterowych zdefiniowane w normy ISO 3166 w kraju/regionie.</summary>
        <value>Kod dwuliterowych zdefiniowany w normy ISO 3166 w kraju/regionie.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Globalization.CultureAndRegionInfoBuilder.TwoLetterISORegionName%2A> Właściwość odpowiada <xref:System.Globalization.RegionInfo.TwoLetterISORegionName%2A> właściwości.  
  
 <xref:System.Globalization.CultureAndRegionInfoBuilder.TwoLetterISORegionName%2A> Wartość właściwości jest jednym z kodów dwuliterowych zdefiniowane w normy ISO 3166 w kraju/regionie. Na przykład kod dwuliterowych Stanów Zjednoczonych jest "My". Wstępnie zdefiniowane <xref:System.Globalization.RegionInfo> nazwy są wymienione w <xref:System.Globalization.RegionInfo> klasy tematu.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Wartość w operacji set jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">Długość wartości w operacji zestawu nie mieści się w zakresie od 1 do 8 znaków.</exception>
        <exception cref="T:System.ArgumentException">Wartość operacji zestawu zawiera znak, który nie należy do przedziału od „a” do „z”, od „A” do „Z” lub od „0” do „9”.</exception>
        <exception cref="T:System.NotSupportedException">W ramach operacji set bieżącej kultury niestandardowej to kultura neutralna.</exception>
      </Docs>
    </Member>
    <Member MemberName="Unregister">
      <MemberSignature Language="C#" Value="public static void Unregister (string cultureName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Unregister(string cultureName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CultureAndRegionInfoBuilder.Unregister(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Unregister (cultureName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Unregister(System::String ^ cultureName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>sysglobl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cultureName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="cultureName">Nazwa kultury niestandardowej do usunięcia.</param>
        <summary>Usuwa kultura niestandardowa z komputera lokalnego.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Globalization.CultureAndRegionInfoBuilder.Unregister%2A> Metoda wykonuje odwrotnej <xref:System.Globalization.CultureAndRegionInfoBuilder.Register%2A> metody. <xref:System.Globalization.CultureAndRegionInfoBuilder.Register%2A> Metody przechowuje kulturą niestandardową jako plik na komputerze lokalnym, w podkatalogu globalizacji katalogu zwracane przez interfejs API Win32 [GetWindowsDirectory](http://go.microsoft.com/fwlink/?LinkId=191561) funkcji. <xref:System.Globalization.CultureAndRegionInfoBuilder.Unregister%2A> Metoda usuwa plik trwałego kultura niestandardowa z komputera. Po usunięciu pliku istniejących wystąpień kultura niestandardowa w pamięci komputera nadal działać, ale nie można utworzyć nowego wystąpienia o niestandardowej kulturze.  
  
   
  
## Examples  
 W poniższym przykładzie pokazano <xref:System.Globalization.CultureAndRegionInfoBuilder.Unregister%2A> metody.  
  
 [!code-csharp[sys.glob.carib.unregister#1](~/samples/snippets/csharp/VS_Snippets_CLR/sys.glob.carib.unregister/CS/unregister.cs#1)]
 [!code-vb[sys.glob.carib.unregister#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/sys.glob.carib.unregister/VB/unregister.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <paramref name="cultureName" /> jest to Kultura nadrzędna lub kultura interfejsu użytkownika rezerwowy konsoli zależnych kultury.</exception>
        <exception cref="T:System.UnauthorizedAccessException">Użytkownik nie ma uprawnień administracyjnych.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="cultureName" /> Określa kulturę, które nie zostało odnalezione.</exception>
        <altmember cref="M:System.Globalization.CultureAndRegionInfoBuilder.Register" />
      </Docs>
    </Member>
  </Members>
</Type>