<Type Name="CultureAndRegionInfoBuilder" FullName="System.Globalization.CultureAndRegionInfoBuilder">
  <Metadata><Meta Name="ms.openlocfilehash" Value="ec7b908565bf24cf1e51005dbc8f3c659d890cda" /><Meta Name="ms.sourcegitcommit" Value="08fc3691deb7adaf0dfd751b9d9d0b23a3d3a7b8" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/12/2019" /><Meta Name="ms.locfileid" Value="67244363" /></Metadata><TypeSignature Language="C#" Value="public sealed class CultureAndRegionInfoBuilder" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit CultureAndRegionInfoBuilder extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Globalization.CultureAndRegionInfoBuilder" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class CultureAndRegionInfoBuilder" />
  <TypeSignature Language="C++ CLI" Value="public ref class CultureAndRegionInfoBuilder sealed" />
  <TypeSignature Language="F#" Value="type CultureAndRegionInfoBuilder = class" />
  <AssemblyInfo>
    <AssemblyName>sysglobl</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Definiuje kulturę niestandardową, która jest nowa lub oparta na innej kulturze i kraju/regionie. Niestandardowa kultura może być zainstalowana na komputerze, a następnie używana przez dowolną aplikację działającą na tym komputerze. Klasa ta nie może być dziedziczona.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Globalization.CultureInfo> Klasa zawiera informacje specyficzne dla kultury, takie jak skojarzony język, podjęzyk, kraj/region, kalendarz i kultury kulturowe. Ta klasa <xref:System.Globalization.DateTimeFormatInfo>udostępnia również wystąpienia specyficzne dla kultury klas, <xref:System.Globalization.NumberFormatInfo>, <xref:System.Globalization.CompareInfo>, i <xref:System.Globalization.TextInfo> , które są wymagane dla operacji specyficznych dla kultury, takich jak wielkość liter, formatowanie i analizowanie dat i liczb oraz Porównywanie ciągów.  
  
 Domyślnie .NET Framework obsługuje <xref:System.Globalization.CultureInfo> obiekty, które reprezentują wstępnie zdefiniowany zestaw kultur. Aby zapoznać się z listą kultur dostępnych w systemach Windows, zobacz kolumnę **tag języka** na [liście nazw języków/regionów obsługiwanych przez system Windows](https://docs.microsoft.com/openspecs/windows_protocols/ms-lcid/a9eac961-e77d-41a6-90a5-ce1a8b0cdb9c). Nazwy kultur są zgodne ze standardem zdefiniowanym przez [BCP 47](https://tools.ietf.org/html/bcp47). <xref:System.Globalization.CultureAndRegionInfoBuilder> Klasa pozwala utworzyć niestandardową kulturę, która jest zupełnie nowa lub która zastępuje wstępnie zdefiniowaną kulturę.  Gdy Kultura niestandardowa jest zainstalowana i zarejestrowana na określonym komputerze, stanie się nierozróżniana ze <xref:System.Globalization.CultureInfo> wstępnie zdefiniowanych obiektów i może być używana w taki sam sposób jak w przypadku tych obiektów.  
  
> [!IMPORTANT]
>  Należy zauważyć, <xref:System.Globalization.CultureAndRegionInfoBuilder> że Klasa znajduje się w zestawie o nazwie sysglobl. dll. Pomyślnie skompilowano kod używający tego typu wymaga dodania odwołania do sysglobl. dll.  
  
 Niestandardowa kultura może być zarejestrowana na komputerze tylko przez użytkownika, który ma uprawnienia administracyjne na tym komputerze. W związku z tym aplikacje zwykle nie tworzą i nie instalują kultur niestandardowych. Zamiast tego można użyć <xref:System.Globalization.CultureAndRegionInfoBuilder> klasy, aby utworzyć specjalne narzędzie, za pomocą którego administrator może utworzyć, zainstalować i zarejestrować kulturę niestandardową. Po zarejestrowaniu kultury niestandardowej na komputerze można użyć <xref:System.Globalization.CultureInfo> klasy w aplikacji, aby utworzyć wystąpienia niestandardowej kultury tak samo jak w przypadku wstępnie zdefiniowanej kultury.  
  
 W przypadku analizowania ciągów daty i godziny wygenerowanych dla kultury <xref:System.DateTime.ParseExact%2A?displayProperty=nameWithType> niestandardowej należy użyć metody lub <xref:System.DateTime.TryParseExact%2A?displayProperty=nameWithType> zamiast <xref:System.DateTime.Parse%2A?displayProperty=nameWithType> metody lub <xref:System.DateTime.TryParse%2A?displayProperty=nameWithType> , aby zwiększyć prawdopodobieństwo pomyślnego wykonania operacji analizy. Ciąg daty i godziny dla niestandardowej kultury może być skomplikowany i dlatego trudno go przeanalizować. Metody <xref:System.DateTime.Parse%2A> i<xref:System.DateTime.TryParse%2A> próbują analizować ciąg za pomocą kilku niejawnych wzorców analizy, co może zakończyć się niepowodzeniem. W przeciwieństwie do metody, wymaga, aby aplikacja jawnie wyznaczyła co najmniej jeden wzorzec analizy, który może się powieść. <xref:System.DateTime.TryParseExact%2A>  
  
## <a name="defining-and-creating-a-custom-culture"></a>Definiowanie i tworzenie kultury niestandardowej  
 Użyj <xref:System.Globalization.CultureAndRegionInfoBuilder> klasy, aby zdefiniować i nazwać kulturę niestandardową. Niestandardowa kultura może być zupełnie nową kulturą, nową kulturą opartą na istniejącej kulturze (czyli kulturą uzupełniającą) lub kulturą zastępującą istniejącą kulturę .NET Framework. W każdym przypadku podstawowe kroki są takie same:  
  
1.  <xref:System.Globalization.CultureAndRegionInfoBuilder.%23ctor%28System.String%2CSystem.Globalization.CultureAndRegionModifiers%29> Tworzenie wystąpienia <xref:System.Globalization.CultureAndRegionInfoBuilder> obiektu przez wywołanie jego konstruktora. Aby zastąpić istniejącą kulturę, należy przekazać jej nazwę i <xref:System.Globalization.CultureAndRegionModifiers.Replacement?displayProperty=nameWithType> wartość wyliczenia do konstruktora. Aby utworzyć nową kulturę lub kulturę uzupełniającą, należy przekazać unikatową nazwę kultury i <xref:System.Globalization.CultureAndRegionModifiers.Neutral?displayProperty=nameWithType> <xref:System.Globalization.CultureAndRegionModifiers.None?displayProperty=nameWithType> albo wartość wyliczenia.  
  
    > [!NOTE]
    >  Jeśli używasz <xref:System.Globalization.CultureAndRegionModifiers.Replacement?displayProperty=nameWithType> wartości wyliczenia do tworzenia <xref:System.Globalization.CultureAndRegionInfoBuilder> wystąpienia obiektu, <xref:System.Globalization.CultureInfo> właściwości <xref:System.Globalization.CultureAndRegionInfoBuilder> obiektu są automatycznie wypełniane wartościami z obiektu, który ma zostać zastąpiony.  
  
2.  Jeśli tworzysz nową lub uzupełniającą kulturę:  
  
    -   Wypełnij właściwości <xref:System.Globalization.CultureAndRegionInfoBuilder.LoadDataFromCultureInfo%2A>obiektuprzez wywołanie metody i przekazanie <xref:System.Globalization.CultureInfo> obiektu, którego wartości właściwości są podobne do nowego obiektu. <xref:System.Globalization.CultureAndRegionInfoBuilder>  
  
    -   Wypełnij właściwości regionalne <xref:System.Globalization.CultureAndRegionInfoBuilder.LoadDataFromRegionInfo%2A> <xref:System.Globalization.RegionInfo> obiektu przez wywołanie metody i przekazanie obiektu, który reprezentuje region kultury niestandardowej. <xref:System.Globalization.CultureAndRegionInfoBuilder>  
  
3.  Zmodyfikuj właściwości <xref:System.Globalization.CultureAndRegionInfoBuilder> obiektu w razie potrzeby.  
  
4.  Jeśli planujesz zarejestrować kulturę niestandardową w oddzielnej procedurze, wywołaj <xref:System.Globalization.CultureAndRegionInfoBuilder.Save%2A> metodę. Spowoduje to wygenerowanie pliku XML, który można załadować i zarejestrować w oddzielnej procedurze instalacji kultury niestandardowej.  
  
## <a name="registering-a-custom-culture"></a>Rejestrowanie kultury niestandardowej  
 Jeśli tworzysz aplikację do rejestracji dla niestandardowej kultury, która jest oddzielona od aplikacji tworzącej kulturę, należy wywołać <xref:System.Globalization.CultureAndRegionInfoBuilder.CreateFromLdml%2A> metodę w celu załadowania pliku XML, który zawiera definicję kultury niestandardowej i utworzyć wystąpienie <xref:System.Globalization.CultureAndRegionInfoBuilder>obiekt. Aby obsłużyć rejestrację, <xref:System.Globalization.CultureAndRegionInfoBuilder.Register%2A> Wywołaj metodę. Aby rejestracja zakończyła się pomyślnie, aplikacja rejestrująca kulturę niestandardową musi być uruchomiona z uprawnieniami administracyjnymi w systemie docelowym. w przeciwnym razie wywołanie <xref:System.Globalization.CultureAndRegionInfoBuilder.Register%2A> <xref:System.UnauthorizedAccessException> zgłasza wyjątek.  
  
> [!WARNING]
>  Dane kultury mogą się różnić między systemami. Jeśli używasz <xref:System.Globalization.CultureAndRegionInfoBuilder> klasy do tworzenia niestandardowej kultury, która jest jednorodna w wielu systemach i tworzysz kulturę niestandardową przez załadowanie danych z <xref:System.Globalization.CultureInfo> istniejących <xref:System.Globalization.RegionInfo> obiektów i ich dostosowanie, należy opracować dwa różne narzędzia. Najpierw tworzy kulturę niestandardową i zapisuje ją w pliku XML. Druga używa <xref:System.Globalization.CultureAndRegionInfoBuilder.CreateFromLdml%2A> metody do ładowania niestandardowej kultury z pliku XML i rejestrowania na komputerze docelowym.  
  
 Proces rejestracji wykonuje następujące zadania:  
  
-   Tworzy plik. NLP, który zawiera informacje zdefiniowane w <xref:System.Globalization.CultureAndRegionInfoBuilder> obiekcie.  
  
-   Przechowuje plik. NLP w katalogu systemowym%windir%\Globalization na komputerze docelowym. Dzięki temu ustawienia kultury niestandardowej mogą pozostać między sesjami. <xref:System.Globalization.CultureAndRegionInfoBuilder> (Metoda wymaga uprawnień administracyjnych, ponieważ plik. NLP jest przechowywany w katalogu systemowym).  
  
-   Przygotowuje .NET Framework, aby przeszukać katalog systemu%windir%\Globalization zamiast wewnętrznej pamięci podręcznej przy następnym zażądaniu utworzenia nowej kultury niestandardowej.  
  
 Po pomyślnym zarejestrowaniu kultury niestandardowej nie można jej odróżnić od kultur, które są wstępnie zdefiniowane przez .NET Framework. Niestandardowa kultura jest dostępna do momentu, <xref:System.Globalization.CultureAndRegionInfoBuilder> gdy wywołanie metody usunie plik. NLP z komputera lokalnego.  
  
## <a name="instantiating-a-custom-culture"></a>Utworzenie wystąpienia kultury niestandardowej  
 Wystąpienie niestandardowej kultury można utworzyć w jeden z następujących sposobów:  
  
-   <xref:System.Globalization.CultureInfo.%23ctor%2A?displayProperty=nameWithType> Wywołując Konstruktor przy użyciu nazwy kultury.  
  
-   Przez wywołanie <xref:System.Globalization.CultureInfo.CreateSpecificCulture%2A?displayProperty=nameWithType> metody z nazwą kultury.  
  
-   Przez wywołanie <xref:System.Globalization.CultureInfo.GetCultureInfo%2A?displayProperty=nameWithType> metody z nazwą kultury.  
  
 Ponadto tablica <xref:System.Globalization.CultureInfo> obiektów zwracana <xref:System.Globalization.CultureInfo.GetCultures%2A?displayProperty=nameWithType> przez metodę zawiera kulturę niestandardową.  
  
   
  
## Examples  
 W poniższym przykładzie zdefiniowano niestandardową kulturę ru-US, która reprezentuje język rosyjski w Stany Zjednoczone. W przykładzie zdefiniowano kulturę niestandardową przez załadowanie ustawień z obiektu <xref:System.Globalization.CultureInfo> rosyjski (Rosja) <xref:System.Globalization.RegionInfo> i obiektu USA, a <xref:System.Globalization.CultureAndRegionInfoBuilder> następnie ustawienie liczby właściwości. Przykład rejestruje kulturę niestandardową, a następnie tworzy jej wystąpienie i czyni ją bieżącą kulturą wątku.  
  
 [!code-csharp[System.Globalization.CultureAndRegionInfoBuilder.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.cultureandregioninfobuilder.class/cs/car.cs#1)]
 [!code-vb[System.Globalization.CultureAndRegionInfoBuilder.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.cultureandregioninfobuilder.class/vb/car.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CultureAndRegionInfoBuilder (string cultureName, System.Globalization.CultureAndRegionModifiers flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string cultureName, valuetype System.Globalization.CultureAndRegionModifiers flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CultureAndRegionInfoBuilder.#ctor(System.String,System.Globalization.CultureAndRegionModifiers)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (cultureName As String, flags As CultureAndRegionModifiers)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CultureAndRegionInfoBuilder(System::String ^ cultureName, System::Globalization::CultureAndRegionModifiers flags);" />
      <MemberSignature Language="F#" Value="new System.Globalization.CultureAndRegionInfoBuilder : string * System.Globalization.CultureAndRegionModifiers -&gt; System.Globalization.CultureAndRegionInfoBuilder" Usage="new System.Globalization.CultureAndRegionInfoBuilder (cultureName, flags)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>sysglobl</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="cultureName" Type="System.String" />
        <Parameter Name="flags" Type="System.Globalization.CultureAndRegionModifiers" />
      </Parameters>
      <Docs>
        <param name="cultureName">Nazwa kultury.</param>
        <param name="flags">Jedna z <see cref="T:System.Globalization.CultureAndRegionModifiers" /> wartości określająca, czy nowy <see cref="T:System.Globalization.CultureAndRegionInfoBuilder" /> obiekt jest kulturą neutralną, zastępuje istniejącą kulturę i kraj/region, czy też jest nową kulturą.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Globalization.CultureAndRegionInfoBuilder" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Parametr określa nazwę nowego <xref:System.Globalization.CultureAndRegionInfoBuilder> obiektu. `cultureName`  
  
 Parametr jest używany <xref:System.Globalization.CultureAndRegionModifiers> dla wartości określającej, czy nowy <xref:System.Globalization.CultureAndRegionInfoBuilder> obiekt jest nową kulturą niestandardową, czy też zastępuje istniejącą kulturę neutralną, określoną kulturę lub ustawienia regionalne systemu Windows. `flags`  
  
 Jeśli parametr określa istniejącą kulturę .NET Framework, zarejestrowaną kulturę niestandardową lub kulturę wygenerowaną z ustawień regionalnych <xref:System.Globalization.CultureAndRegionInfoBuilder.%23ctor%2A> systemu Windows, Konstruktor automatycznie wypełni <xref:System.Globalization.CultureAndRegionInfoBuilder> nowy obiekt kulturą i `cultureName` Informacje o kraju/regionie.  
  
 Wypełnij nowy <xref:System.Globalization.CultureAndRegionInfoBuilder> obiekt informacjami o kulturze i kraju/regionie, <xref:System.Globalization.CultureAndRegionInfoBuilder.LoadDataFromCultureInfo%2A> wywołując metody i <xref:System.Globalization.CultureAndRegionInfoBuilder.LoadDataFromRegionInfo%2A> .  
  
## <a name="custom-culture-names"></a>Nazwy kultury niestandardowej  
 `cultureName` Preferowany format parametru dla nowej, niestandardowej kultury to "[`…``prefix`-]`language`[-`region`] [-`suffix`[]]", gdzie `language` składnik jest wymagany i `prefix`, `region` i`suffix` składniki są opcjonalne. Maksymalna długość każdego składnika to 8 znaków, a maksymalna długość całego `cultureName` parametru to 84 znaków.  
  
 `prefix` Składnik to identyfikacja organizacji IANA (Internet Assigned Numbers Authority). Określ "i-" lub "I-" nazw kultur zarejestrowanych w organizacji IANA lub "x-" lub "X-" dla nazw kultur zarezerwowanych do użytku prywatnego. W przeciwnym razie prefiks nie jest wymagany. Aby uzyskać więcej informacji, zobacz RFC 4646, "Tagi do identyfikacji języków".  
  
 Składnik parametru określa dwuliterowy kod pochodzący z ISO 639-1 i `region` określa dwuliterowy kod pochodzący z ISO 3166. `cultureName` `language` Na przykład en-US oznacza język angielski jako mówiony w Stany Zjednoczone. Brak `region` składnika oznacza kulturę neutralną.  
  
 `cultureName` Jest to taka sama jak nazwa kultury zawartej w .NET Framework oznacza kulturę zastępującą (zastąpienie). Wartości, które można przypisać do właściwości kultury zastępczej, są ograniczone. Aby uzyskać więcej informacji o takich ograniczeniach, zobacz wyjątki dla każdej właściwości.  
  
 Aplikacja używa `suffix` składnika do rozróżniania podobnych kultur. Na przykład dwie firmy, ABC i XYZ, tworzą i udostępniają nową usługę sieci Web ASP.NET w celu promowania ich produktów na różnych rynkach na całym świecie. Na stronach sieci Web usługi są wyświetlane informacje, takie jak logo regionalne i numer telefonu dla każdej firmy, w zależności od kultury użytkownika. Zawartość specyficzna dla kultury dla każdej strony sieci Web znajduje się w oddzielnych plikach zasobów identyfikowanych przez nazwę kultury i kwalifikowana według nazwy firmy.  Na przykład pliki zasobów dla kultur en-US i ja-JP mają nazwę en-US-ABC, en-US-XYZ, ja-JP-ABC i ja-JP-XYZ. Sufiksy "ABC" i "XYZ" umożliwiają usłudze sieci Web używanie tej samej logiki aplikacji do wyświetlania różnych informacji specyficznych dla rynku.  
  
 `suffix` Składnik może składać się z podskładników, gdzie każdy podskładnik jest rozdzielony łącznikiem, a maksymalna długość każdego podskładniku to 8 znaków. Jeśli na przykład "en-us-Honda-samochodów" jest `cultureName` parametrem, `suffix` jest to składnik.  
  
   
  
## Examples  
 Poniższy przykład kodu tworzy niestandardową kulturę z prywatnie używanym prefiksem, a następnie wyświetla listę właściwości zestawu. Pierwsza właściwość pokazuje nazwę kultury.  
  
 [!code-cpp[sys.glob.carib1#1](~/samples/snippets/cpp/VS_Snippets_CLR/sys.glob.carib1/CPP/carib.cpp#1)]
 [!code-csharp[sys.glob.carib1#1](~/samples/snippets/csharp/VS_Snippets_CLR/sys.glob.carib1/CS/carib.cs#1)]
 [!code-vb[sys.glob.carib1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/sys.glob.carib1/VB/carib.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="cultureName" />jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="cultureName" />jest ciągiem pustym ("").  
  
—lub— 
 <paramref name="cultureName" />zawiera znaki inne niż od "0" do "9", "a" do "z", "A" do "Z", łącznik (-) lub podkreślenia (_).  
  
—lub— 
 <paramref name="cultureName" />zawiera łączniki (-), aby rozdzielić składniki, ale brak co najmniej <paramref name="prefix" />jednego <paramref name="language" />składnika <paramref name="region" />,, <paramref name="suffix" /> lub. Oznacza to, że dwa lub więcej łączników przylegają do siebie.  
  
—lub— 
 <paramref name="cultureName" />jest dłuższa niż 84 znaków.  
  
—lub— 
 <paramref name="cultureName" />zawiera łączniki do rozdzielania składników, ale co najmniej jeden składnik ma więcej niż 8 znaków.  
  
—lub— 
 <paramref name="cultureName" />zawiera Łącznik wiodący lub końcowy (-) lub znak podkreślenia (_).  
  
—lub— 
 <paramref name="cultureName" />Określa alternatywną kulturę zastępczą sortowania zamiast kultury .NET Framework. Na przykład, <paramref name="culturenName" /> to "de-de_phoneb", kultura, która sortuje ciągi, tak jak pojawiają się w niemieckiej książce telefonicznej, a nie "de-de", kultura niemiecki (Niemcy).  
  
—lub— 
 <paramref name="flags" />zawiera nieprawidłową kombinację <see cref="T:System.Globalization.CultureAndRegionModifiers" /> wartości.  
  
—lub— 
 <paramref name="flags" />zawiera <see cref="F:System.Globalization.CultureAndRegionModifiers.Replacement" /> lub <see cref="F:System.Globalization.CultureAndRegionModifiers.Neutral" /> i<paramref name="cultureName" /> określa kulturę, która nie została znaleziona.  
  
—lub— 
 <paramref name="flags" />zawiera <see cref="F:System.Globalization.CultureAndRegionModifiers.Replacement" /> i<paramref name="cultureName" /> określa niestandardową kulturę utworzoną przez użytkownika, która nie zastępuje kultury dostarczonej z .NET Framework.  
  
—lub— 
 <paramref name="flags" />zawiera <see cref="F:System.Globalization.CultureAndRegionModifiers.Neutral" /> i<paramref name="cultureName" /> określa kulturę, która nie jest kulturą neutralną.  
  
—lub— 
 <paramref name="flags" />zawiera <see cref="F:System.Globalization.CultureAndRegionModifiers.Neutral" /> i<paramref name="cultureName" /> określa niestandardową kulturę utworzoną przez użytkownika, która zastępuje określoną kulturę dostarczoną z .NET Framework.</exception>
        <altmember cref="T:System.Globalization.CultureTypes" />
        <altmember cref="T:System.Globalization.CultureAndRegionModifiers" />
      </Docs>
    </Member>
    <Member MemberName="AvailableCalendars">
      <MemberSignature Language="C#" Value="public System.Globalization.Calendar[] AvailableCalendars { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Globalization.Calendar[] AvailableCalendars" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureAndRegionInfoBuilder.AvailableCalendars" />
      <MemberSignature Language="VB.NET" Value="Public Property AvailableCalendars As Calendar()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::Globalization::Calendar ^&gt; ^ AvailableCalendars { cli::array &lt;System::Globalization::Calendar ^&gt; ^ get(); void set(cli::array &lt;System::Globalization::Calendar ^&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.AvailableCalendars : System.Globalization.Calendar[] with get, set" Usage="System.Globalization.CultureAndRegionInfoBuilder.AvailableCalendars" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>sysglobl</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.Calendar[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia tablicę kalendarzy, które są obsługiwane przez <see cref="T:System.Globalization.CultureAndRegionInfoBuilder" /> ten obiekt.</summary>
        <value>Tablica kalendarzy.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Globalization.CultureAndRegionInfoBuilder.AvailableCalendars%2A> Właściwość odpowiada<xref:System.Globalization.CultureInfo.OptionalCalendars%2A> właściwości.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">W operacji ustawiania, przypisana tablica jest <see langword="null" />lub element przypisanej tablicy to. <see langword="null" /></exception>
        <exception cref="T:System.NotSupportedException">Ta właściwość nie jest obsługiwana w przypadku kultur neutralnych.  
  
—lub— 
W operacji <see cref="T:System.Globalization.PersianCalendar" />ustawiania, przypisana tablica zawiera, <see cref="T:System.Globalization.TaiwanLunisolarCalendar" />, <see cref="T:System.Globalization.KoreanLunisolarCalendar" />, <see cref="T:System.Globalization.JapaneseLunisolarCalendar" /> <see cref="T:System.Globalization.ChineseLunisolarCalendar" />, lub <see cref="T:System.Globalization.JulianCalendar" />.  
  
—lub— 
W operacji ustawiania przypisana tablica zawiera kalendarz niestandardowy.</exception>
        <altmember cref="P:System.Globalization.CultureAndRegionInfoBuilder.GregorianDateTimeFormat" />
      </Docs>
    </Member>
    <Member MemberName="CompareInfo">
      <MemberSignature Language="C#" Value="public System.Globalization.CompareInfo CompareInfo { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Globalization.CompareInfo CompareInfo" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureAndRegionInfoBuilder.CompareInfo" />
      <MemberSignature Language="VB.NET" Value="Public Property CompareInfo As CompareInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Globalization::CompareInfo ^ CompareInfo { System::Globalization::CompareInfo ^ get(); void set(System::Globalization::CompareInfo ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CompareInfo : System.Globalization.CompareInfo with get, set" Usage="System.Globalization.CultureAndRegionInfoBuilder.CompareInfo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>sysglobl</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.CompareInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia <see cref="T:System.Globalization.CompareInfo" /> obiekt, który definiuje sposób porównywania ciągów dla kultury.</summary>
        <value><see cref="T:System.Globalization.CompareInfo" /> Obiekt, który definiuje sposób porównywania ciągów dla kultury.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Globalization.CultureAndRegionInfoBuilder.CompareInfo%2A?displayProperty=nameWithType> Właściwość odpowiada<xref:System.Globalization.CultureInfo.CompareInfo%2A?displayProperty=nameWithType> właściwości.  
  
 Obiekty <xref:System.Globalization.TextInfo> <xref:System.Globalization.CultureAndRegionInfoBuilder.CompareInfo%2A> i <xref:System.Globalization.CompareInfo>,które są przypisane do właściwości iobsługująporównywaniezuwzględnieniemwielkościlitericiągów.<xref:System.Globalization.CultureAndRegionInfoBuilder.TextInfo%2A> Obiekt ma również metody, które <xref:System.Globalization.CompareOptions> zawierają parametr, który obsługuje uwzględnianie kulturowe, bez uwzględniania wielkości liter. <xref:System.Globalization.CompareInfo> Te dwie właściwości powinny być przypisane <xref:System.Globalization.TextInfo> i <xref:System.Globalization.CompareInfo> obiekty, które reprezentują te same ustawienia regionalne.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">W ramach operacji ustawiania przypisana wartość to <see langword="null" />.</exception>
        <exception cref="T:System.NotSupportedException">Ta niestandardowa kultura jest przesłonięciem wbudowanej kultury.</exception>
        <altmember cref="P:System.Globalization.CultureAndRegionInfoBuilder.TextInfo" />
      </Docs>
    </Member>
    <Member MemberName="ConsoleFallbackUICulture">
      <MemberSignature Language="C#" Value="public System.Globalization.CultureInfo ConsoleFallbackUICulture { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Globalization.CultureInfo ConsoleFallbackUICulture" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureAndRegionInfoBuilder.ConsoleFallbackUICulture" />
      <MemberSignature Language="VB.NET" Value="Public Property ConsoleFallbackUICulture As CultureInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Globalization::CultureInfo ^ ConsoleFallbackUICulture { System::Globalization::CultureInfo ^ get(); void set(System::Globalization::CultureInfo ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ConsoleFallbackUICulture : System.Globalization.CultureInfo with get, set" Usage="System.Globalization.CultureAndRegionInfoBuilder.ConsoleFallbackUICulture" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>sysglobl</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.CultureInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia alternatywną kulturę interfejsu użytkownika odpowiednią dla aplikacji konsolowych, gdy domyślna kultura graficznego interfejsu użytkownika jest nieodpowiedni.</summary>
        <value>Alternatywna kultura, która jest używana do odczytywania i wyświetlania tekstu w konsoli.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 W operacji <xref:System.Globalization.CultureAndRegionInfoBuilder.ConsoleFallbackUICulture%2A> Get właściwość odpowiada <xref:System.Globalization.CultureInfo.GetConsoleFallbackUICulture%2A> metodzie. Określ `null` w operacji zestawu, aby wskazać, że kultura zdefiniowana przez bieżący <xref:System.Globalization.CultureAndRegionInfoBuilder> obiekt jest alternatywną kulturą interfejsu użytkownika. Jeśli spróbujesz ustawić właściwość na kulturę, która sama ma inną rezerwową kulturę interfejsu użytkownika konsoli, zostanie ona przypisana do ostatecznej kultury "liścia".  
  
 Języki takie jak arabski, hebrajski, perski, urdu i syryjskie są oparte na tekście dwukierunkowym. Aplikacje systemu Windows, które wykorzystują graficzny interfejs użytkownika, obsługują Języki dwukierunkowe. Jednak aplikacje konsolowe, które korzystają z interfejsu użytkownika tekstu konsoli systemu operacyjnego, nie zapewniają obsługi dwukierunkowej. W związku z tym, jeśli aplikacja konsolowa jest zlokalizowana na arabski lub hebrajski, na ekranie konsoli jest wyświetlany tekst nieczytelny.  
  
 Kultura interfejsu użytkownika określa zasoby wymagane przez aplikację do obsługi danych wejściowych i wyjściowych użytkownika. domyślnie jest to taka sama jak kultura systemu operacyjnego. Na przykład <xref:System.Globalization.CultureInfo.CurrentUICulture%2A> Właściwość zwraca kulturę arabską dla arabskiej systemu operacyjnego. Aplikacja powinna używać <xref:System.Globalization.CultureAndRegionInfoBuilder.ConsoleFallbackUICulture%2A> właściwości, aby pobrać neutralną kulturę odpowiednią dla interfejsu użytkownika aplikacji konsolowej.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">W operacji zestawu <see langword="null" /> <see cref="P:System.Globalization.CultureAndRegionInfoBuilder.ConsoleFallbackUICulture" /> , w której określona kultura nie jest, właściwość określonej kultury nie jest taka sama jak określona kultura.</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateFromLdml">
      <MemberSignature Language="C#" Value="public static System.Globalization.CultureAndRegionInfoBuilder CreateFromLdml (string xmlFileName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Globalization.CultureAndRegionInfoBuilder CreateFromLdml(string xmlFileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CultureAndRegionInfoBuilder.CreateFromLdml(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateFromLdml (xmlFileName As String) As CultureAndRegionInfoBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Globalization::CultureAndRegionInfoBuilder ^ CreateFromLdml(System::String ^ xmlFileName);" />
      <MemberSignature Language="F#" Value="static member CreateFromLdml : string -&gt; System.Globalization.CultureAndRegionInfoBuilder" Usage="System.Globalization.CultureAndRegionInfoBuilder.CreateFromLdml xmlFileName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>sysglobl</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.CultureAndRegionInfoBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xmlFileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="xmlFileName">Nazwa pliku, który zawiera reprezentację <see cref="T:System.Globalization.CultureAndRegionInfoBuilder" /> obiektu w formacie XML.</param>
        <summary>Odtworzy <see cref="T:System.Globalization.CultureAndRegionInfoBuilder" /> obiekt z określonego pliku XML, który zawiera reprezentację obiektu.</summary>
        <returns>Nowy obiekt, który jest równoważny z informacjami przechowywanymi w <paramref name="xmlFileName" /> parametrze.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Parametr określa nazwę pliku, który zawiera reprezentację <xref:System.Globalization.CultureAndRegionInfoBuilder> obiektu w formacie XML. `xmlFileName` Format pliku XML nosi nazwę local data Markup Language (LDML) w wersji 1,1. Nowy <xref:System.Globalization.CultureAndRegionInfoBuilder> obiekt zostanie utworzony i zainicjowany przy użyciu danych w `xmlFileName`. Metoda wykonuje operację <xref:System.Globalization.CultureAndRegionInfoBuilder.CreateFromLdml%2A> odwrotną metody. <xref:System.Globalization.CultureAndRegionInfoBuilder.Save%2A>  
  
 W pliku LDML właściwości kultury są określane jako elementy `<special>` podrzędne elementu `<identity>` w sekcji. Wartość właściwości jest zazwyczaj określana przez `type` atrybut elementu. Na przykład poniższy fragment z pliku LDML definiuje element nadrzędny kultury jako kulturę neutralną w języku angielskim.  
  
```xml  
<identity>  
   <version number="1.1">ldml version 1.1</version>  
   <generation date="2012-05-16" />  
   <special xmlns:msLocale="http://schemas.microsoft.com/globalization/2004/08/carib/ldml">  
      <!-content removed -->  
      <msLocale:parentName type="en" />  
      <!-content removed -->  
   </special>  
</identity>  
```  
  
 Aby uzyskać więcej informacji na temat standardu LDML, zobacz [standard Unicode Technical #35, "local data Markup Language (LDML)"](https://go.microsoft.com/fwlink/p/?LinkId=252840) w witrynie internetowej konsorcjum Unicode.  
  
   
  
## Examples  
 Poniższy przykład ilustruje <xref:System.Globalization.CultureAndRegionInfoBuilder.Save%2A> metody i <xref:System.Globalization.CultureAndRegionInfoBuilder.CreateFromLdml%2A> .  
  
 [!code-csharp[sys.glob.carib.saveLdml#1](~/samples/snippets/csharp/VS_Snippets_CLR/sys.glob.carib.saveLdml/cs/sl.cs#1)]
 [!code-vb[sys.glob.carib.saveLdml#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/sys.glob.carib.saveLdml/vb/sl.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="xmlFileName" />jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="xmlFileName" />jest pustym ciągiem ("") lub nieprawidłową nazwą pliku lub ścieżki.</exception>
        <exception cref="T:System.Xml.XmlException">Dane w programie <paramref name="xmlFileName" /> nie są w prawidłowym formacie XML.  
  
—lub— 
Wystąpił błąd we/wy podczas uzyskiwania <paramref name="xmlFileName" />dostępu do programu.</exception>
        <exception cref="T:System.Xml.Schema.XmlSchemaValidationException">Dane w <paramref name="xmlFileName" /> nie są w prawidłowym formacie LDML.</exception>
        <altmember cref="M:System.Globalization.CultureAndRegionInfoBuilder.Save(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="CultureEnglishName">
      <MemberSignature Language="C#" Value="public string CultureEnglishName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CultureEnglishName" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureAndRegionInfoBuilder.CultureEnglishName" />
      <MemberSignature Language="VB.NET" Value="Public Property CultureEnglishName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CultureEnglishName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CultureEnglishName : string with get, set" Usage="System.Globalization.CultureAndRegionInfoBuilder.CultureEnglishName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>sysglobl</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia nazwę kultury w języku angielskim.</summary>
        <value>Nazwa kultury w języku angielskim.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Globalization.CultureAndRegionInfoBuilder.CultureEnglishName%2A> Właściwość odpowiada<xref:System.Globalization.CultureInfo.EnglishName%2A> właściwości.  
  
 Na przykład wartość <xref:System.Globalization.CultureAndRegionInfoBuilder.CultureEnglishName%2A> zwrócona przez właściwość w języku angielskim określonej kultury jako wymawiana w Stany Zjednoczone to "angielski (Stany Zjednoczone)".  
  
 Wartość tej właściwości jest taka sama, niezależnie od wersji językowej architektury .NET Framework.  
  
   
  
## Examples  
 Poniższy przykład kodu tworzy niestandardową kulturę z prywatnie używanym prefiksem, a następnie wyświetla listę właściwości zestawu. Pierwsza właściwość pokazuje nazwę kultury.  
  
 [!code-cpp[sys.glob.carib1#1](~/samples/snippets/cpp/VS_Snippets_CLR/sys.glob.carib1/CPP/carib.cpp#1)]
 [!code-csharp[sys.glob.carib1#1](~/samples/snippets/csharp/VS_Snippets_CLR/sys.glob.carib1/CS/carib.cs#1)]
 [!code-vb[sys.glob.carib1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/sys.glob.carib1/VB/carib.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Wartość w operacji zestawu wynosi <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">Długość wartości w operacji zestawu nie należy do przedziału od 0 do 79 znaków.</exception>
      </Docs>
    </Member>
    <Member MemberName="CultureName">
      <MemberSignature Language="C#" Value="public string CultureName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CultureName" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureAndRegionInfoBuilder.CultureName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CultureName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CultureName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CultureName : string" Usage="System.Globalization.CultureAndRegionInfoBuilder.CultureName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>sysglobl</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera nazwę tworzonej kultury.</summary>
        <value>Nazwa kultury bieżącego <see cref="T:System.Globalization.CultureAndRegionInfoBuilder" /> obiektu.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wartość zwracana jest nazwą kultury określonej w <xref:System.Globalization.CultureAndRegionInfoBuilder.%23ctor%2A> konstruktorze. Jeśli określona nazwa kultury jest taka sama jak istniejąca kultura, z wyjątkiem przypadku, wartością zwracaną jest Nazwa istniejącej kultury, a nie określona nazwa kultury.  
  
 <xref:System.Globalization.CultureAndRegionInfoBuilder.CultureName%2A> Właściwość odpowiada<xref:System.Globalization.CultureInfo.Name%2A> właściwości.  
  
   
  
## Examples  
 Poniższy przykład kodu tworzy niestandardową kulturę z prywatnie używanym prefiksem, a następnie wyświetla listę właściwości zestawu. Pierwsza właściwość pokazuje nazwę kultury.  
  
 [!code-cpp[sys.glob.carib1#1](~/samples/snippets/cpp/VS_Snippets_CLR/sys.glob.carib1/CPP/carib.cpp#1)]
 [!code-csharp[sys.glob.carib1#1](~/samples/snippets/csharp/VS_Snippets_CLR/sys.glob.carib1/CS/carib.cs#1)]
 [!code-vb[sys.glob.carib1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/sys.glob.carib1/VB/carib.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CultureNativeName">
      <MemberSignature Language="C#" Value="public string CultureNativeName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CultureNativeName" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureAndRegionInfoBuilder.CultureNativeName" />
      <MemberSignature Language="VB.NET" Value="Public Property CultureNativeName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CultureNativeName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CultureNativeName : string with get, set" Usage="System.Globalization.CultureAndRegionInfoBuilder.CultureNativeName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>sysglobl</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia nazwę kultury w formacie i języku, który ma być wyświetlany w kulturze.</summary>
        <value>Nazwa kultury w formacie i języku, w którym jest ustawiana kultura.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Globalization.CultureAndRegionInfoBuilder.CultureNativeName%2A> Właściwość odpowiada<xref:System.Globalization.CultureInfo.NativeName%2A> właściwości.  
  
 Wartość tej właściwości jest taka sama, niezależnie od wersji językowej architektury .NET Framework.  
  
 Pełna nazwa kultury może nie być wyświetlana poprawnie, jeśli system nie jest ustawiony do prawidłowego wyświetlania języka kultury. Na przykład, jeśli <xref:System.Globalization.CultureAndRegionInfoBuilder.CultureName%2A> właściwość jest "ja-JP" dla japońskiego (Japonia) <xref:System.Globalization.CultureAndRegionInfoBuilder.CultureNativeName%2A> , właściwość nie jest wyświetlana prawidłowo w systemie, który jest ustawiony tylko w języku angielskim. Jednak wielojęzyczne systemy operacyjne, takie jak Windows 2000, wyświetlają <xref:System.Globalization.CultureAndRegionInfoBuilder.CultureNativeName%2A> Właściwość poprawnie.  
  
   
  
## Examples  
 Poniższy przykład kodu tworzy niestandardową kulturę z prywatnie używanym prefiksem, a następnie wyświetla listę właściwości zestawu. Pierwsza właściwość pokazuje nazwę kultury.  
  
 [!code-cpp[sys.glob.carib1#1](~/samples/snippets/cpp/VS_Snippets_CLR/sys.glob.carib1/CPP/carib.cpp#1)]
 [!code-csharp[sys.glob.carib1#1](~/samples/snippets/csharp/VS_Snippets_CLR/sys.glob.carib1/CS/carib.cs#1)]
 [!code-vb[sys.glob.carib1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/sys.glob.carib1/VB/carib.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Wartość w operacji zestawu wynosi <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">Długość wartości w operacji zestawu nie należy do przedziału od 0 do 79 znaków.</exception>
      </Docs>
    </Member>
    <Member MemberName="CultureTypes">
      <MemberSignature Language="C#" Value="public System.Globalization.CultureTypes CultureTypes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Globalization.CultureTypes CultureTypes" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureAndRegionInfoBuilder.CultureTypes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CultureTypes As CultureTypes" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Globalization::CultureTypes CultureTypes { System::Globalization::CultureTypes get(); };" />
      <MemberSignature Language="F#" Value="member this.CultureTypes : System.Globalization.CultureTypes" Usage="System.Globalization.CultureAndRegionInfoBuilder.CultureTypes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>sysglobl</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.CultureTypes</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość opisującą kulturę reprezentowaną przez bieżący <see cref="T:System.Globalization.CultureAndRegionInfoBuilder" /> obiekt. <see cref="T:System.Globalization.CultureTypes" /></summary>
        <value>Jedna z <see cref="T:System.Globalization.CultureTypes" /> wartości.</value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Globalization.CultureTypes" />
        <altmember cref="P:System.Globalization.CultureInfo.CultureTypes" />
        <altmember cref="M:System.Globalization.CultureInfo.GetCultures(System.Globalization.CultureTypes)" />
      </Docs>
    </Member>
    <Member MemberName="CurrencyEnglishName">
      <MemberSignature Language="C#" Value="public string CurrencyEnglishName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CurrencyEnglishName" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureAndRegionInfoBuilder.CurrencyEnglishName" />
      <MemberSignature Language="VB.NET" Value="Public Property CurrencyEnglishName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CurrencyEnglishName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CurrencyEnglishName : string with get, set" Usage="System.Globalization.CultureAndRegionInfoBuilder.CurrencyEnglishName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>sysglobl</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia nazwę w języku angielskim waluty używanej w kraju/regionie reprezentowanego przez bieżący <see cref="T:System.Globalization.CultureAndRegionInfoBuilder" /> obiekt.</summary>
        <value>Nazwa (w języku angielskim) waluty używanej w regionie.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Właściwość jest równoważna <xref:System.Globalization.RegionInfo.CurrencyEnglishName%2A> z właściwością. <xref:System.Globalization.CultureAndRegionInfoBuilder.CurrencyEnglishName%2A>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Wartość w operacji zestawu wynosi <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">Wartość w operacji zestawu jest ciągiem pustym ("").</exception>
        <exception cref="T:System.NotSupportedException">Bieżący <see cref="T:System.Globalization.CultureAndRegionInfoBuilder" /> obiekt jest kulturą neutralną.</exception>
      </Docs>
    </Member>
    <Member MemberName="CurrencyNativeName">
      <MemberSignature Language="C#" Value="public string CurrencyNativeName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CurrencyNativeName" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureAndRegionInfoBuilder.CurrencyNativeName" />
      <MemberSignature Language="VB.NET" Value="Public Property CurrencyNativeName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CurrencyNativeName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CurrencyNativeName : string with get, set" Usage="System.Globalization.CultureAndRegionInfoBuilder.CurrencyNativeName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>sysglobl</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia natywną nazwę waluty używanej w kraju/regionie reprezentowanej przez bieżący <see cref="T:System.Globalization.CultureAndRegionInfoBuilder" /> obiekt.</summary>
        <value>Nazwa waluty użyta w kraju/regionie reprezentowanej przez bieżący <see cref="T:System.Globalization.CultureAndRegionInfoBuilder" /> obiekt, sformatowana w języku skojarzonym z kodem kraju/regionu ISO 3166 regionu.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Właściwość jest równoważna <xref:System.Globalization.RegionInfo.CurrencyNativeName%2A> z właściwością. <xref:System.Globalization.CultureAndRegionInfoBuilder.CurrencyNativeName%2A>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Wartość w operacji zestawu wynosi <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">Wartość w operacji zestawu jest ciągiem pustym ("").</exception>
        <exception cref="T:System.NotSupportedException">Bieżący <see cref="T:System.Globalization.CultureAndRegionInfoBuilder" /> obiekt jest kulturą neutralną.</exception>
      </Docs>
    </Member>
    <Member MemberName="GeoId">
      <MemberSignature Language="C#" Value="public int GeoId { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 GeoId" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureAndRegionInfoBuilder.GeoId" />
      <MemberSignature Language="VB.NET" Value="Public Property GeoId As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int GeoId { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.GeoId : int with get, set" Usage="System.Globalization.CultureAndRegionInfoBuilder.GeoId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>sysglobl</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia unikatowy numer identyfikacyjny regionu geograficznego, kraju, miasta lub lokalizacji.</summary>
        <value>32-bitowy numer ze znakiem, który jednoznacznie identyfikuje lokalizację geograficzną.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Globalization.CultureAndRegionInfoBuilder.GeoId%2A> Właściwość odpowiada<xref:System.Globalization.RegionInfo.GeoId%2A> właściwości.  
  
 Aplikacja powinna używać <xref:System.Globalization.CultureAndRegionInfoBuilder.GeoId%2A> właściwości, aby zapewnić klientom usługi specyficzne dla kultury. Na przykład <xref:System.Globalization.CultureAndRegionInfoBuilder.GeoId%2A> właściwość może służyć jako klucz do uzyskiwania dostępu do rekordu bazy danych, który zawiera określone informacje o regionie.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">Bieżący <see cref="T:System.Globalization.CultureAndRegionInfoBuilder" /> obiekt definiuje kulturę neutralną.</exception>
      </Docs>
    </Member>
    <Member MemberName="GregorianDateTimeFormat">
      <MemberSignature Language="C#" Value="public System.Globalization.DateTimeFormatInfo GregorianDateTimeFormat { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Globalization.DateTimeFormatInfo GregorianDateTimeFormat" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureAndRegionInfoBuilder.GregorianDateTimeFormat" />
      <MemberSignature Language="VB.NET" Value="Public Property GregorianDateTimeFormat As DateTimeFormatInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Globalization::DateTimeFormatInfo ^ GregorianDateTimeFormat { System::Globalization::DateTimeFormatInfo ^ get(); void set(System::Globalization::DateTimeFormatInfo ^ value); };" />
      <MemberSignature Language="F#" Value="member this.GregorianDateTimeFormat : System.Globalization.DateTimeFormatInfo with get, set" Usage="System.Globalization.CultureAndRegionInfoBuilder.GregorianDateTimeFormat" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>sysglobl</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.DateTimeFormatInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia <see cref="T:System.Globalization.DateTimeFormatInfo" /> obiekt, który definiuje format dat i godzin zgodnie z kalendarzem gregoriańskim.</summary>
        <value>Element <see cref="T:System.Globalization.DateTimeFormatInfo" /> obiektu.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Każda kultura, w tym kultura zdefiniowana przez bieżący <xref:System.Globalization.CultureAndRegionInfoBuilder> obiekt, zawiera zlokalizowany kalendarz gregoriański, który jest skojarzony <xref:System.Globalization.DateTimeFormatInfo> z obiektem. <xref:System.Globalization.DateTimeFormatInfo> Obiekt definiuje sposób wyświetlania dat i godzin w aplikacji. Wartość właściwości jest obiektem skojarzonym z pierwszym zlokalizowanym kalendarzem <xref:System.Globalization.CultureAndRegionInfoBuilder.AvailableCalendars%2A> gregoriańskim zwracanym przez właściwość. <xref:System.Globalization.DateTimeFormatInfo> <xref:System.Globalization.CultureAndRegionInfoBuilder.GregorianDateTimeFormat%2A>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Wartość w operacji zestawu wynosi <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">Właściwość wartości w operacji zestawu zwróciła nieprawidłową wartość właściwości.</exception>
        <exception cref="T:System.NotSupportedException">Bieżący <see cref="T:System.Globalization.CultureAndRegionInfoBuilder" /> obiekt jest kulturą neutralną.</exception>
      </Docs>
    </Member>
    <Member MemberName="IetfLanguageTag">
      <MemberSignature Language="C#" Value="public string IetfLanguageTag { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string IetfLanguageTag" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureAndRegionInfoBuilder.IetfLanguageTag" />
      <MemberSignature Language="VB.NET" Value="Public Property IetfLanguageTag As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ IetfLanguageTag { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.IetfLanguageTag : string with get, set" Usage="System.Globalization.CultureAndRegionInfoBuilder.IetfLanguageTag" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>sysglobl</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia nazwę kultury sformatowaną zgodnie ze standardem RFC 4646 "Tagi do identyfikacji języków".</summary>
        <value>Nazwa kultury sformatowana zgodnie ze standardem RFC 4646.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Właściwość pobiera lub ustawia nazwę kultury sformatowaną zgodnie ze specyfikacją RFC 4646, która może różnić się od nazwy kultury zwracanej <xref:System.Globalization.CultureInfo.Name%2A> przez właściwość. <xref:System.Globalization.CultureAndRegionInfoBuilder.IetfLanguageTag%2A> Na przykład w .NET Framework w wersji 1,0, neutralna nazwa kultury dla tradycyjnego języka chińskiego była "zh-CHT". W przeciwieństwie do RFC 4646 definiuje tę nazwę kultury jako "zh-HANT". (Należy pamiętać, że w .NET Framework w wersji 4, nazwa wyświetlana dla "zh-CHT" to "chiński (tradycyjny) starsze".)  
  
 Nazwa kultury RFC 4646 składa się z kilku składników. Typowa nazwa kultury składa się z obowiązkowego identyfikatora języka, opcjonalnego identyfikatora skryptu i opcjonalnego identyfikatora kraju/regionu. Na przykład prawidłowa nazwa kultury RFC 4646 dla języka serbskiego, skrypt cyrylicy i region Serbii to "SR-Cyrl-RS".  
  
 Należy zauważyć, że co najmniej dwie kultury mogą mieć ten sam tag języka IETF.  
  
 Aby uzyskać więcej informacji, zobacz RFC 4646, "Tagi do identyfikacji języków" w [Request for Comments](https://go.microsoft.com/fwlink/?linkid=45286).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">W operacji ustawiania wartość to <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">W operacji ustawionej długość wartości nie przekracza od 1 do 84 znaków.</exception>
        <exception cref="T:System.ArgumentException">W operacji zestawu składnik nazwy określony w wartości jest pusty lub dłuższy niż 8 znaków, a nie znak alfanumeryczny ani łącznik (-) lub nazwa zawiera Łącznik wiodący lub końcowy.</exception>
        <altmember cref="M:System.Globalization.CultureInfo.GetCultureInfoByIetfLanguageTag(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="IsMetric">
      <MemberSignature Language="C#" Value="public bool IsMetric { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsMetric" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureAndRegionInfoBuilder.IsMetric" />
      <MemberSignature Language="VB.NET" Value="Public Property IsMetric As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsMetric { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsMetric : bool with get, set" Usage="System.Globalization.CultureAndRegionInfoBuilder.IsMetric" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>sysglobl</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy kraj/region używa systemu metryki do pomiarów.</summary>
        <value><see langword="true" />Jeśli kraj/region używa systemu metryki do pomiarów; w przeciwnym razie. <see langword="false" /></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">Ta operacja jest nieprawidłowa dla kultury neutralnej.</exception>
      </Docs>
    </Member>
    <Member MemberName="ISOCurrencySymbol">
      <MemberSignature Language="C#" Value="public string ISOCurrencySymbol { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ISOCurrencySymbol" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureAndRegionInfoBuilder.ISOCurrencySymbol" />
      <MemberSignature Language="VB.NET" Value="Public Property ISOCurrencySymbol As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ISOCurrencySymbol { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ISOCurrencySymbol : string with get, set" Usage="System.Globalization.CultureAndRegionInfoBuilder.ISOCurrencySymbol" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>sysglobl</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia symbol waluty ISO 4217, który jest skojarzony z krajem/regionem.</summary>
        <value>3-znakowy symbol ISO 4217 waluty skojarzony z krajem/regionem.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Globalization.CultureAndRegionInfoBuilder.ISOCurrencySymbol%2A> Właściwość odpowiada<xref:System.Globalization.RegionInfo.ISOCurrencySymbol%2A> właściwości.  
  
 Lista symboli ISO 4217 z trzema znakami jest dostępna w <xref:System.Globalization.RegionInfo> temacie klasy. Na przykład symbol ISO 4217 waluty dla dolara Stany Zjednoczone to "USD".  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">Jest to neutralna kultura.</exception>
        <exception cref="T:System.ArgumentNullException">W operacji ustawiania wartość to <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">W operacji ustawiania wartość nie przekracza od 0 do 8 znaków.</exception>
      </Docs>
    </Member>
    <Member MemberName="IsRightToLeft">
      <MemberSignature Language="C#" Value="public bool IsRightToLeft { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsRightToLeft" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureAndRegionInfoBuilder.IsRightToLeft" />
      <MemberSignature Language="VB.NET" Value="Public Property IsRightToLeft As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsRightToLeft { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsRightToLeft : bool with get, set" Usage="System.Globalization.CultureAndRegionInfoBuilder.IsRightToLeft" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>sysglobl</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia dominujący kierunek wierszy tekstu w systemie pisania skojarzonym z bieżącym <see cref="T:System.Globalization.CultureAndRegionInfoBuilder" /> obiektem.</summary>
        <value><see langword="true" />Jeśli dominujący kierunek wierszy tekstu w bieżącym systemie pisania to od prawej do lewej; w przeciwnym razie. <see langword="false" /></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aplikacja używa <xref:System.Globalization.CultureAndRegionInfoBuilder.IsRightToLeft%2A> właściwości, aby określić względne położenie formantów, takich jak przyciski i paski przewijania w graficznym interfejsie użytkownika.  
  
 Aby uzyskać dostęp do dominującego kierunku tekstu w niestandardowej kulturze utworzonej <xref:System.Globalization.CultureAndRegionInfoBuilder> na podstawie bieżącego obiektu, aplikacja powinna <xref:System.Globalization.TextInfo.IsRightToLeft%2A> używać właściwości obiektu zwróconego przez <xref:System.Globalization.CultureInfo.TextInfo%2A> właściwość kultury niestandardowej.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="KeyboardLayoutId">
      <MemberSignature Language="C#" Value="public int KeyboardLayoutId { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 KeyboardLayoutId" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureAndRegionInfoBuilder.KeyboardLayoutId" />
      <MemberSignature Language="VB.NET" Value="Public Property KeyboardLayoutId As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int KeyboardLayoutId { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.KeyboardLayoutId : int with get, set" Usage="System.Globalization.CultureAndRegionInfoBuilder.KeyboardLayoutId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>sysglobl</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia identyfikator aktywnego wejściowej ustawień regionalnych.</summary>
        <value>32-bitowy numer podpisany, który określa identyfikator ustawień regionalnych wprowadzania.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Globalization.CultureAndRegionInfoBuilder.KeyboardLayoutId%2A> Właściwość odpowiada<xref:System.Globalization.CultureInfo.KeyboardLayoutId%2A> właściwości.  
  
 Identyfikator ustawień regionalnych danych wejściowych był wcześniej nazywany układem klawiatury. Identyfikatora można użyć dla konwertera mowy na tekst, edytora IME (Input Method Editor) lub dowolnej innej formy danych wejściowych.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">W operacji ustawiania wartość jest równa zero.</exception>
      </Docs>
    </Member>
    <Member MemberName="LCID">
      <MemberSignature Language="C#" Value="public int LCID { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 LCID" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureAndRegionInfoBuilder.LCID" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LCID As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int LCID { int get(); };" />
      <MemberSignature Language="F#" Value="member this.LCID : int" Usage="System.Globalization.CultureAndRegionInfoBuilder.LCID" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>sysglobl</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera identyfikator kultury dla bieżącego <see cref="T:System.Globalization.CultureAndRegionInfoBuilder" /> obiektu.</summary>
        <value>Identyfikator kultury dla bieżącego <see cref="T:System.Globalization.CultureAndRegionInfoBuilder" /> obiektu.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Globalization.CultureAndRegionInfoBuilder.LCID%2A?displayProperty=nameWithType> Właściwość odpowiada<xref:System.Globalization.CultureInfo.LCID%2A?displayProperty=nameWithType> właściwości.  
  
 W przypadku kultur zastępczych identyfikator kultury jest mapowany na odpowiedni identyfikator ustawień regionalnych (NLS) w języku narodowym. Dla kultur niestandardowych zdefiniowanych przez użytkownika wartość tej właściwości jest zawsze szesnastkowa 0x1000.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadDataFromCultureInfo">
      <MemberSignature Language="C#" Value="public void LoadDataFromCultureInfo (System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void LoadDataFromCultureInfo(class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CultureAndRegionInfoBuilder.LoadDataFromCultureInfo(System.Globalization.CultureInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Sub LoadDataFromCultureInfo (culture As CultureInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void LoadDataFromCultureInfo(System::Globalization::CultureInfo ^ culture);" />
      <MemberSignature Language="F#" Value="member this.LoadDataFromCultureInfo : System.Globalization.CultureInfo -&gt; unit" Usage="cultureAndRegionInfoBuilder.LoadDataFromCultureInfo culture" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>sysglobl</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="culture">Obiekt, którego właściwości zostaną użyte.</param>
        <summary>Ustawia właściwości bieżącego <see cref="T:System.Globalization.CultureAndRegionInfoBuilder" /> obiektu za pomocą odpowiednich właściwości określonego <see cref="T:System.Globalization.CultureInfo" /> obiektu.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="culture" />jest <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="LoadDataFromRegionInfo">
      <MemberSignature Language="C#" Value="public void LoadDataFromRegionInfo (System.Globalization.RegionInfo region);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void LoadDataFromRegionInfo(class System.Globalization.RegionInfo region) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CultureAndRegionInfoBuilder.LoadDataFromRegionInfo(System.Globalization.RegionInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Sub LoadDataFromRegionInfo (region As RegionInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void LoadDataFromRegionInfo(System::Globalization::RegionInfo ^ region);" />
      <MemberSignature Language="F#" Value="member this.LoadDataFromRegionInfo : System.Globalization.RegionInfo -&gt; unit" Usage="cultureAndRegionInfoBuilder.LoadDataFromRegionInfo region" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>sysglobl</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="region" Type="System.Globalization.RegionInfo" />
      </Parameters>
      <Docs>
        <param name="region">Obiekt, którego właściwości zostaną użyte.</param>
        <summary>Ustawia właściwości bieżącego <see cref="T:System.Globalization.CultureAndRegionInfoBuilder" /> obiektu za pomocą odpowiednich właściwości określonego <see cref="T:System.Globalization.RegionInfo" /> obiektu.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="region" />jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">Nie można ustawić informacji o kraju/regionie, ponieważ <see cref="T:System.Globalization.CultureAndRegionInfoBuilder" /> bieżący obiekt Określa kulturę neutralną.</exception>
      </Docs>
    </Member>
    <Member MemberName="NumberFormat">
      <MemberSignature Language="C#" Value="public System.Globalization.NumberFormatInfo NumberFormat { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Globalization.NumberFormatInfo NumberFormat" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureAndRegionInfoBuilder.NumberFormat" />
      <MemberSignature Language="VB.NET" Value="Public Property NumberFormat As NumberFormatInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Globalization::NumberFormatInfo ^ NumberFormat { System::Globalization::NumberFormatInfo ^ get(); void set(System::Globalization::NumberFormatInfo ^ value); };" />
      <MemberSignature Language="F#" Value="member this.NumberFormat : System.Globalization.NumberFormatInfo with get, set" Usage="System.Globalization.CultureAndRegionInfoBuilder.NumberFormat" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>sysglobl</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.NumberFormatInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia <see cref="T:System.Globalization.NumberFormatInfo" /> obiekt, który definiuje kulturowo odpowiedni format wyświetlania liczb, waluty i wartości procentowej.</summary>
        <value><see cref="T:System.Globalization.NumberFormatInfo" /> Obiekt, który definiuje kulturowo odpowiedni format wyświetlania liczb, waluty i wartości procentowej.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Globalization.CultureAndRegionInfoBuilder.NumberFormat%2A> Właściwość odpowiada<xref:System.Globalization.CultureInfo.NumberFormat%2A> właściwości.  
  
 Aplikacja powinna wywołać tę właściwość tylko dla określonych kultur.  
  
 <xref:System.Globalization.NumberFormatInfo.PercentDecimalSeparator%2A>Właściwości, <xref:System.Globalization.NumberFormatInfo.PercentGroupSeparator%2A> ,<xref:System.Globalization.NumberFormatInfo.PercentGroupSizes%2A>i sąignorowane<xref:System.Globalization.NumberFormatInfo.PercentDecimalDigits%2A> . <xref:System.Globalization.CultureAndRegionInfoBuilder.NumberFormat%2A> Zapisana forma kultury nie zapisuje jawnych wartości dla tych właściwości. Zamiast tego <xref:System.Globalization.NumberFormatInfo.NumberDecimalSeparator%2A>po załadowaniu kultury zawsze domyślnie są to <xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A>,, <xref:System.Globalization.NumberFormatInfo.NumberGroupSizes%2A>, i <xref:System.Globalization.NumberFormatInfo.NumberDecimalDigits%2A>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Wartość w operacji zestawu wynosi <see langword="null" />.</exception>
        <exception cref="T:System.NotSupportedException">Ta operacja jest nieprawidłowa dla kultury neutralnej.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">Specyfikacja dla właściwości Number, Currency lub PERCENT dla tej kultury zawiera zbyt wiele cyfr lub jest poza zakresem.</exception>
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public System.Globalization.CultureInfo Parent { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Globalization.CultureInfo Parent" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureAndRegionInfoBuilder.Parent" />
      <MemberSignature Language="VB.NET" Value="Public Property Parent As CultureInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Globalization::CultureInfo ^ Parent { System::Globalization::CultureInfo ^ get(); void set(System::Globalization::CultureInfo ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Parent : System.Globalization.CultureInfo with get, set" Usage="System.Globalization.CultureAndRegionInfoBuilder.Parent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>sysglobl</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.CultureInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia <see cref="T:System.Globalization.CultureInfo" /> obiekt, który reprezentuje kulturę nadrzędną bieżącej kultury niestandardowej.</summary>
        <value><see cref="T:System.Globalization.CultureInfo" /> Obiekt, który reprezentuje kulturę nadrzędną bieżącej kultury niestandardowej.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Kultury mają hierarchię. Dla wstępnie zdefiniowanych kultur, obiekt nadrzędny określonej kultury jest kulturą neutralną, a obiekt nadrzędny kultury neutralnej jest <xref:System.Globalization.CultureInfo.InvariantCulture%2A>. Kultura nadrzędna obejmuje tylko zestaw informacji wspólnych między jego elementami podrzędnymi.  
  
 Ogólnie zalecane jest, aby kultury niestandardowe były zgodne z tą hierarchią. Jednak domyślnie <xref:System.Globalization.CultureAndRegionInfoBuilder.Parent%2A> Kultura niestandardowa <xref:System.Globalization.CultureAndRegionInfoBuilder.Parent%2A> jest kulturą, na której bazuje. Jeśli aplikacja tworzy kulturę z <xref:System.Globalization.CultureAndRegionInfoBuilder.CultureName%2A> "en-us-Culture" na podstawie "en-us", jej elementem nadrzędnym jest "en", ponieważ <xref:System.Globalization.CultureAndRegionInfoBuilder.Parent%2A> jest to "pl-US". Jeśli aplikacja używa "pl-US" jako <xref:System.Globalization.CultureAndRegionInfoBuilder.Parent%2A> nowej kultury niestandardowej, należy ustawić tę wartość jawnie.  
  
 Jeśli zasoby dla określonej kultury nie są dostępne w systemie, używane są zasoby dla kultury neutralnej. Jeśli zasoby dla kultury neutralnej nie są dostępne, używane są zasoby osadzone w zestawie głównym. Aby uzyskać więcej informacji na temat procesu powrotu zasobu, zobacz [pakowanie i wdrażanie zasobów](~/docs/framework/resources/packaging-and-deploying-resources-in-desktop-apps.md).  
  
 Lista kultur w interfejsie API systemu Windows różni się nieco od listy kultur w .NET Framework. Jeśli wymagane jest współdziałanie z systemem Windows, na przykład za pomocą mechanizmu wywołania platformy, aplikacja powinna używać określonej kultury zdefiniowanej w .NET Framework. Zapewnia to spójność z równoważnymi ustawieniami regionalnymi systemu Windows, które są <xref:System.Globalization.CultureInfo.LCID%2A>identyfikowane w taki sam sposób.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">W operacji zestawu nie można znaleźć wartości kultury. Prawdopodobnie przypisana wartość jest niezazarejestrowaną kulturą niestandardową.</exception>
        <exception cref="T:System.ArgumentNullException">W operacji ustawiania wartość to <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">W operacji zestawu, która przechodzi przez elementy nadrzędne bieżącej kultury, nie można znaleźć niezmiennej kultury w ciągu 10 pokoleń elementów nadrzędnych.  
  
 —lub—  
  
 W operacji zestawu wykryto odwołanie cykliczne: przypisana wartość jest elementem nadrzędnym bieżącej kultury niestandardowej.</exception>
      </Docs>
    </Member>
    <Member MemberName="RegionEnglishName">
      <MemberSignature Language="C#" Value="public string RegionEnglishName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string RegionEnglishName" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureAndRegionInfoBuilder.RegionEnglishName" />
      <MemberSignature Language="VB.NET" Value="Public Property RegionEnglishName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ RegionEnglishName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.RegionEnglishName : string with get, set" Usage="System.Globalization.CultureAndRegionInfoBuilder.RegionEnglishName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>sysglobl</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia pełną nazwę kraju/regionu w języku angielskim.</summary>
        <value>Pełna nazwa kraju/regionu w języku angielskim.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Globalization.CultureAndRegionInfoBuilder.RegionEnglishName%2A> Właściwość odpowiada<xref:System.Globalization.RegionInfo.EnglishName%2A> właściwości.  
  
 Na przykład wartością <xref:System.Globalization.CultureAndRegionInfoBuilder.RegionEnglishName%2A> zwracaną dla Stany Zjednoczone jest "Stany Zjednoczone".  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">Ta operacja jest nieprawidłowa dla kultury neutralnej.</exception>
        <exception cref="T:System.ArgumentNullException">Wartość w operacji zestawu wynosi <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">Długość wartości w operacji zestawu nie należy do przedziału od 0 do 79 znaków.</exception>
      </Docs>
    </Member>
    <Member MemberName="RegionName">
      <MemberSignature Language="C#" Value="public string RegionName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string RegionName" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureAndRegionInfoBuilder.RegionName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RegionName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ RegionName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.RegionName : string" Usage="System.Globalization.CultureAndRegionInfoBuilder.RegionName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>sysglobl</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera nazwę kraju/regionu dla bieżącego <see cref="T:System.Globalization.CultureAndRegionInfoBuilder" /> obiektu.</summary>
        <value>Nazwa kraju/regionu bieżącego <see cref="T:System.Globalization.CultureAndRegionInfoBuilder" /> obiektu.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wartość zwracana jest nazwą kultury określonej w <xref:System.Globalization.CultureAndRegionInfoBuilder.%23ctor%2A> konstruktorze. Jeśli określona nazwa kultury jest taka sama jak istniejąca kultura, z wyjątkiem przypadku, wartością zwracaną jest Nazwa istniejącej kultury, a nie określona nazwa kultury.  
  
 <xref:System.Globalization.CultureAndRegionInfoBuilder.RegionName%2A> Właściwość odpowiada<xref:System.Globalization.RegionInfo.Name%2A> właściwości.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">Ta operacja jest nieprawidłowa dla kultury neutralnej.</exception>
      </Docs>
    </Member>
    <Member MemberName="RegionNativeName">
      <MemberSignature Language="C#" Value="public string RegionNativeName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string RegionNativeName" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureAndRegionInfoBuilder.RegionNativeName" />
      <MemberSignature Language="VB.NET" Value="Public Property RegionNativeName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ RegionNativeName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.RegionNativeName : string with get, set" Usage="System.Globalization.CultureAndRegionInfoBuilder.RegionNativeName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>sysglobl</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia pełną nazwę kraju/regionu, która jest znana przez osoby tej niestandardowej kultury.</summary>
        <value>Nazwa lokalna kraju/regionu.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Globalization.CultureAndRegionInfoBuilder.RegionNativeName%2A> Właściwość odpowiada<xref:System.Globalization.RegionInfo.NativeName%2A> właściwości.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">Ta operacja jest nieprawidłowa dla kultury neutralnej.</exception>
        <exception cref="T:System.ArgumentNullException">Wartość w operacji zestawu wynosi <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">Długość wartości w operacji zestawu nie należy do zakresu od 1 do 79 znaków.</exception>
      </Docs>
    </Member>
    <Member MemberName="Register">
      <MemberSignature Language="C#" Value="public void Register ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Register() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CultureAndRegionInfoBuilder.Register" />
      <MemberSignature Language="VB.NET" Value="Public Sub Register ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Register();" />
      <MemberSignature Language="F#" Value="member this.Register : unit -&gt; unit" Usage="cultureAndRegionInfoBuilder.Register " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>sysglobl</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Utrwala bieżący <see cref="T:System.Globalization.CultureAndRegionInfoBuilder" /> obiekt jako kulturę niestandardową na komputerze lokalnym i sprawia, że ta kultura jest dostępna dla aplikacji. Wymaga uprawnień administracyjnych.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metoda przechowuje niestandardową kulturę jako plik na komputerze lokalnym w podkatalogu globalizacji katalogu zwróconego przez funkcję Win32 [GetWindowsDirectory.](https://go.microsoft.com/fwlink/?LinkId=191561) <xref:System.Globalization.CultureAndRegionInfoBuilder.Register%2A> Ten proces jest nazywany zarejestrowaniem kultury niestandardowej. Po zarejestrowaniu kultury niestandardowej można utworzyć nową kulturę niestandardową, określając nazwę kultury w <xref:System.Globalization.CultureInfo.%23ctor%2A> konstruktorze lub podczas <xref:System.Globalization.CultureInfo.CreateSpecificCulture%2A?displayProperty=nameWithType> wywoływania metody.  
  
 Niestandardową kulturę można usunąć, wywołując <xref:System.Globalization.CultureAndRegionInfoBuilder.Unregister%2A> metodę.  
  
   
  
## Examples  
 Poniższy przykład demonstruje <xref:System.Globalization.CultureAndRegionInfoBuilder.Register%2A> metodę.  
  
 [!code-csharp[sys.glob.carib.register#1](~/samples/snippets/csharp/VS_Snippets_CLR/sys.glob.carib.register/CS/persist.cs#1)]
 [!code-vb[sys.glob.carib.register#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/sys.glob.carib.register/VB/persist.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Niestandardowa kultura jest już zarejestrowana.  
  
—lub— 
Bieżący <see cref="T:System.Globalization.CultureAndRegionInfoBuilder" /> obiekt ma właściwość, która musi zostać ustawiona przed zarejestrowaniem kultury. Wszystkie kultury, neutralne lub specyficzne, muszą mieć <see cref="P:System.Globalization.CultureAndRegionInfoBuilder.TextInfo" /> i <see cref="P:System.Globalization.CultureAndRegionInfoBuilder.CompareInfo" /> ustawić. Określone kultury muszą mieć <see cref="P:System.Globalization.CultureAndRegionInfoBuilder.NumberFormat" />również, <see cref="P:System.Globalization.CultureAndRegionInfoBuilder.GregorianDateTimeFormat" />i <see cref="P:System.Globalization.CultureAndRegionInfoBuilder.AvailableCalendars" /> ustawić.  
  
Ta metoda zgłasza <see cref="T:System.InvalidOperationException" /> również, czy nie są zdefiniowane następujące właściwości: 
 <see cref="P:System.Globalization.CultureAndRegionInfoBuilder.CultureEnglishName" /><see cref="P:System.Globalization.CultureAndRegionInfoBuilder.CultureNativeName" /><see cref="P:System.Globalization.CultureAndRegionInfoBuilder.CurrencyEnglishName" /><see cref="P:System.Globalization.CultureAndRegionInfoBuilder.CurrencyNativeName" /><see cref="P:System.Globalization.CultureAndRegionInfoBuilder.ISOCurrencySymbol" /><see cref="P:System.Globalization.CultureAndRegionInfoBuilder.Parent" /><see cref="P:System.Globalization.CultureAndRegionInfoBuilder.RegionEnglishName" /><see cref="P:System.Globalization.CultureAndRegionInfoBuilder.RegionNativeName" /><see cref="P:System.Globalization.CultureAndRegionInfoBuilder.ThreeLetterISOLanguageName" /><see cref="P:System.Globalization.CultureAndRegionInfoBuilder.ThreeLetterISORegionName" /><see cref="P:System.Globalization.CultureAndRegionInfoBuilder.ThreeLetterWindowsLanguageName" /><see cref="P:System.Globalization.CultureAndRegionInfoBuilder.ThreeLetterWindowsRegionName" /><see cref="P:System.Globalization.CultureAndRegionInfoBuilder.TwoLetterISOLanguageName" /><see cref="P:System.Globalization.CultureAndRegionInfoBuilder.TwoLetterISORegionName" /></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">Wartość <see cref="T:System.Globalization.CultureAndRegionInfoBuilder" /> właściwości obiektu przekracza jej maksymalną długość lub wartość.</exception>
        <exception cref="T:System.UnauthorizedAccessException">Użytkownik nie ma uprawnień administracyjnych.</exception>
        <altmember cref="M:System.Globalization.CultureAndRegionInfoBuilder.Unregister(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public void Save (string filename);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Save(string filename) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CultureAndRegionInfoBuilder.Save(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Save (filename As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Save(System::String ^ filename);" />
      <MemberSignature Language="F#" Value="member this.Save : string -&gt; unit" Usage="cultureAndRegionInfoBuilder.Save filename" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>sysglobl</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filename" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="filename">Nazwa pliku, który zawiera reprezentację XML tej niestandardowej kultury.</param>
        <summary>Zapisuje reprezentację XML bieżącego <see cref="T:System.Globalization.CultureAndRegionInfoBuilder" /> obiektu do określonego pliku.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metoda zapisuje bieżący <xref:System.Globalization.CultureAndRegionInfoBuilder> obiekt do pliku określonego przez `filename` parametr w formacie XML o nazwie local data Markup Language (LDML) w wersji 1,1. <xref:System.Globalization.CultureAndRegionInfoBuilder.Save%2A> Metoda wykonuje operację <xref:System.Globalization.CultureAndRegionInfoBuilder.Save%2A> odwrotną metody. <xref:System.Globalization.CultureAndRegionInfoBuilder.CreateFromLdml%2A>  
  
 Aby uzyskać informacje o formacie pliku LDML, zobacz <xref:System.Globalization.CultureAndRegionInfoBuilder.CreateFromLdml%2A> metodę. Aby uzyskać informacje na temat standardu LDML, zobacz [standard Unicode Technical #35, "local data Markup Language (LDML)"](https://go.microsoft.com/fwlink/p/?LinkId=252840) w witrynie internetowej konsorcjum Unicode.  
  
   
  
## Examples  
 Poniższy przykład ilustruje <xref:System.Globalization.CultureAndRegionInfoBuilder.Save%2A> metody i <xref:System.Globalization.CultureAndRegionInfoBuilder.CreateFromLdml%2A> .  
  
 [!code-csharp[sys.glob.carib.saveLdml#1](~/samples/snippets/csharp/VS_Snippets_CLR/sys.glob.carib.saveLdml/cs/sl.cs#1)]
 [!code-vb[sys.glob.carib.saveLdml#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/sys.glob.carib.saveLdml/vb/sl.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="filename" />jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="filename" />jest pustym ciągiem ("").</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">Wartość właściwości <see cref="T:System.Globalization.DateTimeFormatInfo" /> <see cref="T:System.Globalization.CultureAndRegionInfoBuilder" /> , <see cref="T:System.Globalization.TextInfo" /> lub<see cref="T:System.Globalization.NumberFormatInfo" /> obiektu zawartego w bieżącym obiekcie jest nieprawidłowa.</exception>
        <altmember cref="M:System.Globalization.CultureAndRegionInfoBuilder.CreateFromLdml(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="TextInfo">
      <MemberSignature Language="C#" Value="public System.Globalization.TextInfo TextInfo { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Globalization.TextInfo TextInfo" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureAndRegionInfoBuilder.TextInfo" />
      <MemberSignature Language="VB.NET" Value="Public Property TextInfo As TextInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Globalization::TextInfo ^ TextInfo { System::Globalization::TextInfo ^ get(); void set(System::Globalization::TextInfo ^ value); };" />
      <MemberSignature Language="F#" Value="member this.TextInfo : System.Globalization.TextInfo with get, set" Usage="System.Globalization.CultureAndRegionInfoBuilder.TextInfo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>sysglobl</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.TextInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia <see cref="T:System.Globalization.TextInfo" /> obiekt, który definiuje system pisania skojarzony z tą kulturą niestandardową.</summary>
        <value>Obiekt, który definiuje system pisania skojarzony z tą kulturą niestandardową.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Globalization.CultureAndRegionInfoBuilder.TextInfo%2A?displayProperty=nameWithType> Właściwość zawiera informacje o wielkości charakterystycznej dla kultury dla ciągów. Odpowiada <xref:System.Globalization.CultureInfo.TextInfo%2A?displayProperty=nameWithType> właściwości.  
  
 Obiekty <xref:System.Globalization.TextInfo> <xref:System.Globalization.CultureAndRegionInfoBuilder.CompareInfo%2A> i <xref:System.Globalization.CompareInfo>,które są przypisane do właściwości iobsługująporównywaniezuwzględnieniemwielkościlitericiągów.<xref:System.Globalization.CultureAndRegionInfoBuilder.TextInfo%2A> Obiekt ma również metody, które <xref:System.Globalization.CompareOptions> zawierają parametr, który obsługuje uwzględnianie kulturowe, bez uwzględniania wielkości liter. <xref:System.Globalization.CompareInfo> Te dwie właściwości powinny być przypisane <xref:System.Globalization.TextInfo> i <xref:System.Globalization.CompareInfo> obiekty, które reprezentują te same ustawienia regionalne.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">Ta operacja nie jest obsługiwana w przypadku kultur zastępczych.</exception>
        <exception cref="T:System.ArgumentNullException">Wartość w operacji zestawu wynosi <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">Liczba znaków w separatorze listy nie należy do zakresu od 0 do 3.</exception>
        <altmember cref="P:System.Globalization.CultureAndRegionInfoBuilder.CompareInfo" />
      </Docs>
    </Member>
    <Member MemberName="ThreeLetterISOLanguageName">
      <MemberSignature Language="C#" Value="public string ThreeLetterISOLanguageName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ThreeLetterISOLanguageName" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureAndRegionInfoBuilder.ThreeLetterISOLanguageName" />
      <MemberSignature Language="VB.NET" Value="Public Property ThreeLetterISOLanguageName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ThreeLetterISOLanguageName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ThreeLetterISOLanguageName : string with get, set" Usage="System.Globalization.CultureAndRegionInfoBuilder.ThreeLetterISOLanguageName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>sysglobl</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia trzyliterowy kod ISO 639-2 dla języka tej kultury niestandardowej.</summary>
        <value>Trzyliterowy kod ISO 639-2 dla języka bieżącego <see cref="T:System.Globalization.CultureInfo" /> obiektu.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Globalization.CultureAndRegionInfoBuilder.ThreeLetterISOLanguageName%2A> Właściwość odpowiada<xref:System.Globalization.CultureInfo.ThreeLetterISOLanguageName%2A> właściwości.  
  
 Na przykład trzy litery skrótu dla języka angielskiego to "aparatu".  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Wartość w operacji zestawu wynosi <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">Długość wartości w operacji zestawu nie mieści się w zakresie od 1 do 8 znaków.</exception>
        <exception cref="T:System.ArgumentException">Wartość operacji zestawu zawiera znak, który nie należy do przedziału od „a” do „z”, od „A” do „Z” lub od „0” do „9”.</exception>
      </Docs>
    </Member>
    <Member MemberName="ThreeLetterISORegionName">
      <MemberSignature Language="C#" Value="public string ThreeLetterISORegionName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ThreeLetterISORegionName" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureAndRegionInfoBuilder.ThreeLetterISORegionName" />
      <MemberSignature Language="VB.NET" Value="Public Property ThreeLetterISORegionName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ThreeLetterISORegionName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ThreeLetterISORegionName : string with get, set" Usage="System.Globalization.CultureAndRegionInfoBuilder.ThreeLetterISORegionName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>sysglobl</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia trzyliterowy kod zdefiniowany w ISO 3166 dla kraju/regionu.</summary>
        <value>Kod trzech liter zdefiniowany w ISO 3166 dla kraju/regionu.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Globalization.CultureAndRegionInfoBuilder.ThreeLetterISORegionName%2A> Właściwość odpowiada<xref:System.Globalization.RegionInfo.ThreeLetterISORegionName%2A> właściwości.  
  
 <xref:System.Globalization.CultureAndRegionInfoBuilder.ThreeLetterISORegionName%2A> Właściwość zawiera jeden z trzech kodów zdefiniowanych w ISO 3166 dla kraju/regionu. Na przykład, trzy litery kodu dla Stany Zjednoczone to "USA".  
  
 Wielkość liter nie jest istotna. <xref:System.Globalization.CultureAndRegionInfoBuilder.RegionName%2A>Jednak, <xref:System.Globalization.CultureAndRegionInfoBuilder.TwoLetterISORegionName%2A>i właściwościzawierająodpowiednikodwWielkiejlitery.<xref:System.Globalization.CultureAndRegionInfoBuilder.ThreeLetterISORegionName%2A>  
  
 Nazwy wstępnie zdefiniowanych krajów/regionów są wymienione w <xref:System.Globalization.RegionInfo> temacie klasy.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Wartość w operacji zestawu wynosi <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">Długość wartości w operacji zestawu nie mieści się w zakresie od 1 do 8 znaków.</exception>
        <exception cref="T:System.ArgumentException">Wartość operacji zestawu zawiera znak, który nie należy do przedziału od „a” do „z”, od „A” do „Z” lub od „0” do „9”.</exception>
      </Docs>
    </Member>
    <Member MemberName="ThreeLetterWindowsLanguageName">
      <MemberSignature Language="C#" Value="public string ThreeLetterWindowsLanguageName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ThreeLetterWindowsLanguageName" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureAndRegionInfoBuilder.ThreeLetterWindowsLanguageName" />
      <MemberSignature Language="VB.NET" Value="Public Property ThreeLetterWindowsLanguageName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ThreeLetterWindowsLanguageName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ThreeLetterWindowsLanguageName : string with get, set" Usage="System.Globalization.CultureAndRegionInfoBuilder.ThreeLetterWindowsLanguageName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>sysglobl</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia trzyliterowy kod dla języka zgodnie z definicją w interfejsie API systemu Windows.</summary>
        <value>Trzyliterowy kod języka zgodnie z definicją w interfejsie API systemu Windows.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Globalization.CultureAndRegionInfoBuilder.ThreeLetterWindowsLanguageName%2A> Właściwość odpowiada<xref:System.Globalization.CultureInfo.ThreeLetterWindowsLanguageName%2A> właściwości.  
  
 Ta właściwość zwraca tę samą wartość, co Metoda `GetLocaleInfo` interfejsu API systemu Windows z wartością LOCALE_SABBREVLANGNAME. Przykładowy kod w języku angielskim (Stany Zjednoczone) zdefiniowany w interfejsie API systemu Windows to "PLK".  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Wartość w operacji zestawu wynosi <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">Długość wartości w operacji zestawu nie mieści się w zakresie od 1 do 8 znaków.</exception>
        <exception cref="T:System.ArgumentException">Wartość operacji zestawu zawiera znak, który nie należy do przedziału od „a” do „z”, od „A” do „Z” lub od „0” do „9”.</exception>
        <exception cref="T:System.NotSupportedException">W operacji zestawu bieżąca kultura niestandardowa jest kulturą zastępczą.</exception>
      </Docs>
    </Member>
    <Member MemberName="ThreeLetterWindowsRegionName">
      <MemberSignature Language="C#" Value="public string ThreeLetterWindowsRegionName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ThreeLetterWindowsRegionName" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureAndRegionInfoBuilder.ThreeLetterWindowsRegionName" />
      <MemberSignature Language="VB.NET" Value="Public Property ThreeLetterWindowsRegionName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ThreeLetterWindowsRegionName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ThreeLetterWindowsRegionName : string with get, set" Usage="System.Globalization.CultureAndRegionInfoBuilder.ThreeLetterWindowsRegionName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>sysglobl</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia trzyliterowy kod przypisany przez system Windows do kraju/regionu reprezentowanego przez bieżącą kulturę niestandardową.</summary>
        <value>Trzyliterowy kod przypisany przez system Windows do kraju/regionu reprezentowanego przez ten <see cref="T:System.Globalization.CultureAndRegionInfoBuilder" /> obiekt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Globalization.CultureAndRegionInfoBuilder.ThreeLetterWindowsRegionName%2A> Właściwość odpowiada<xref:System.Globalization.RegionInfo.ThreeLetterWindowsRegionName%2A> właściwości.  
  
 Na przykład, trzy litery kodu dla Stany Zjednoczone to "USA".  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Wartość w operacji zestawu wynosi <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">Długość wartości w operacji zestawu nie mieści się w zakresie od 1 do 8 znaków.</exception>
        <exception cref="T:System.ArgumentException">Wartość operacji zestawu zawiera znak, który nie należy do przedziału od „a” do „z”, od „A” do „Z” lub od „0” do „9”.</exception>
        <exception cref="T:System.NotSupportedException">W operacji zestawu bieżąca kultura niestandardowa jest kulturą zastępczą lub kulturą neutralną.</exception>
      </Docs>
    </Member>
    <Member MemberName="TwoLetterISOLanguageName">
      <MemberSignature Language="C#" Value="public string TwoLetterISOLanguageName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TwoLetterISOLanguageName" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureAndRegionInfoBuilder.TwoLetterISOLanguageName" />
      <MemberSignature Language="VB.NET" Value="Public Property TwoLetterISOLanguageName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ TwoLetterISOLanguageName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.TwoLetterISOLanguageName : string with get, set" Usage="System.Globalization.CultureAndRegionInfoBuilder.TwoLetterISOLanguageName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>sysglobl</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia dwuliterowy kod ISO 639-1 dla języka bieżącego <see cref="T:System.Globalization.CultureInfo" /> obiektu.</summary>
        <value>Dwuliterowy kod ISO 639-1 dla języka bieżącego <see cref="T:System.Globalization.CultureInfo" /> obiektu.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Globalization.CultureAndRegionInfoBuilder.TwoLetterISOLanguageName%2A> Właściwość odpowiada<xref:System.Globalization.CultureInfo.TwoLetterISOLanguageName%2A> właściwości.  
  
 Na przykład dwuliterowy skrót dla języka angielskiego to "en".  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Wartość w operacji zestawu wynosi <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">Długość wartości w operacji zestawu nie mieści się w zakresie od 1 do 8 znaków.</exception>
        <exception cref="T:System.ArgumentException">Wartość operacji zestawu zawiera znak, który nie należy do przedziału od „a” do „z”, od „A” do „Z” lub od „0” do „9”.</exception>
      </Docs>
    </Member>
    <Member MemberName="TwoLetterISORegionName">
      <MemberSignature Language="C#" Value="public string TwoLetterISORegionName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TwoLetterISORegionName" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureAndRegionInfoBuilder.TwoLetterISORegionName" />
      <MemberSignature Language="VB.NET" Value="Public Property TwoLetterISORegionName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ TwoLetterISORegionName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.TwoLetterISORegionName : string with get, set" Usage="System.Globalization.CultureAndRegionInfoBuilder.TwoLetterISORegionName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>sysglobl</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia dwuliterowy kod zdefiniowany w ISO 3166 dla kraju/regionu.</summary>
        <value>Dwuliterowy kod zdefiniowany w ISO 3166 dla kraju/regionu.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Globalization.CultureAndRegionInfoBuilder.TwoLetterISORegionName%2A> Właściwość odpowiada<xref:System.Globalization.RegionInfo.TwoLetterISORegionName%2A> właściwości.  
  
 Wartość <xref:System.Globalization.CultureAndRegionInfoBuilder.TwoLetterISORegionName%2A> właściwości jest jednym z kodów dwuliterowych zdefiniowanych w ISO 3166 dla kraju/regionu. Na przykład dwuliterowy kod dla Stany Zjednoczone to "US". Wstępnie zdefiniowane <xref:System.Globalization.RegionInfo> nazwy są wymienione <xref:System.Globalization.RegionInfo> w temacie klasy.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Wartość w operacji zestawu wynosi <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">Długość wartości w operacji zestawu nie mieści się w zakresie od 1 do 8 znaków.</exception>
        <exception cref="T:System.ArgumentException">Wartość operacji zestawu zawiera znak, który nie należy do przedziału od „a” do „z”, od „A” do „Z” lub od „0” do „9”.</exception>
        <exception cref="T:System.NotSupportedException">W operacji ustawiania bieżąca kultura niestandardowa jest kulturą neutralną.</exception>
      </Docs>
    </Member>
    <Member MemberName="Unregister">
      <MemberSignature Language="C#" Value="public static void Unregister (string cultureName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Unregister(string cultureName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CultureAndRegionInfoBuilder.Unregister(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Unregister (cultureName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Unregister(System::String ^ cultureName);" />
      <MemberSignature Language="F#" Value="static member Unregister : string -&gt; unit" Usage="System.Globalization.CultureAndRegionInfoBuilder.Unregister cultureName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>sysglobl</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cultureName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="cultureName">Nazwa kultury niestandardowej do usunięcia.</param>
        <summary>Usuwa kulturę niestandardową z komputera lokalnego.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metoda wykonuje odwrotność <xref:System.Globalization.CultureAndRegionInfoBuilder.Register%2A>metody. <xref:System.Globalization.CultureAndRegionInfoBuilder.Unregister%2A> Metoda przechowuje niestandardową kulturę jako plik na komputerze lokalnym w podkatalogu globalizacji katalogu zwróconego przez funkcję Windows API [GetWindowsDirectory.](https://go.microsoft.com/fwlink/?LinkId=191561) <xref:System.Globalization.CultureAndRegionInfoBuilder.Register%2A> <xref:System.Globalization.CultureAndRegionInfoBuilder.Unregister%2A> Metoda usuwa utrwalony plik kultury niestandardowej z komputera. Po usunięciu pliku istniejące wystąpienia niestandardowej kultury w pamięci komputera nadal działają, ale nie można utworzyć nowych wystąpień kultury niestandardowej.  
  
   
  
## Examples  
 Poniższy przykład demonstruje <xref:System.Globalization.CultureAndRegionInfoBuilder.Unregister%2A> metodę.  
  
 [!code-csharp[sys.glob.carib.unregister#1](~/samples/snippets/csharp/VS_Snippets_CLR/sys.glob.carib.unregister/CS/unregister.cs#1)]
 [!code-vb[sys.glob.carib.unregister#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/sys.glob.carib.unregister/VB/unregister.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><paramref name="cultureName" />jest kulturą nadrzędną lub konsolą rezerwowego interfejsu użytkownika kultury zależnej.</exception>
        <exception cref="T:System.UnauthorizedAccessException">Użytkownik nie ma uprawnień administracyjnych.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="cultureName" />Określa kulturę, która nie została znaleziona.</exception>
        <altmember cref="M:System.Globalization.CultureAndRegionInfoBuilder.Register" />
      </Docs>
    </Member>
  </Members>
</Type>