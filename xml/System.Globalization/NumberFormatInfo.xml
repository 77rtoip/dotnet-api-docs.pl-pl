<Type Name="NumberFormatInfo" FullName="System.Globalization.NumberFormatInfo">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="113d3fbbda0876b5fbfe1ccb056490af1cbef7f9" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30455817" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class NumberFormatInfo : ICloneable, IFormatProvider" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit NumberFormatInfo extends System.Object implements class System.ICloneable, class System.IFormatProvider" />
  <TypeSignature Language="DocId" Value="T:System.Globalization.NumberFormatInfo" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class NumberFormatInfo&#xA;Implements ICloneable, IFormatProvider" />
  <TypeSignature Language="C++ CLI" Value="public ref class NumberFormatInfo sealed : ICloneable, IFormatProvider" />
  <AssemblyInfo>
    <AssemblyName>System.Globalization</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IFormatProvider</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Zawiera informacje specyficzne dla kultury dla formatowania ani do analizowania wartości liczbowych.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Globalization.NumberFormatInfo> Klasy zawiera informacje specyficzne dla kultury, który jest używany podczas formatowania i przeanalizować wartości liczbowych. Informacje te obejmują symbol waluty, Dziesiętny symbol separatora grupy i symbole oznaki dodatnie i ujemne.  
  
-   [Utworzenie wystąpienia obiektu NumberFormatInfo](#Instantiating)  
  
    -   [Dla bieżącej kultury](#Instantiating_Current)  
  
    -   [Dla Niezmienna kultura](#Instantiating_Invariant)  
  
    -   [Dla określonej kultury](#Instantiating_Specific)  
  
    -   [Neutralne kultury](#Instantiating_Neutral)  
  
-   [NumberFormatInfo i danych dynamicznych](#dynamic)  
  
-   [IFormatProvider, NumberFormatInfo i formatowanie](#formatProvider)  
  
-   [Ciągi formatujące i NumberFormatInfo właściwości](#properties)  
  
-   [Modyfikowanie właściwości NumberFormatInfo](#modifying)  
  
    -   [Modyfikowanie symbol waluty i wzorzec](#currency)  
  
    -   [Formatowanie krajowego numeru identyfikacyjnego](#id)  
  
-   [Analizowanie ciągów liczbowych](#parsing)  
  
    -   [Analizowanie ciągów użytkownika](#ParseUser)  
  
    -   [Serializacja i Deserializacja danych numerycznych](#ParseSerial)  
  
<a name="Instantiating"></a>   
## <a name="instantiating-a-numberformatinfo-object"></a>Utworzenie wystąpienia obiektu NumberFormatInfo  
 Można utworzyć wystąpienia <xref:System.Globalization.NumberFormatInfo> obiekt, który reprezentuje Konwencji formatowania bieżącej kultury, niezmienna kultura, określonej kultury lub kultury neutralnej.  
  
<a name="Instantiating_Current"></a>   
## <a name="instantiating-a-numberformatinfo-object-for-the-current-culture"></a>Utworzenie wystąpienia obiektu NumberFormatInfo dla bieżącej kultury  
 Można utworzyć wystąpienia <xref:System.Globalization.NumberFormatInfo> obiektu dla bieżącej kultury wątku w jednym z następujących sposobów. W każdym przypadku zwróconego <xref:System.Globalization.NumberFormatInfo> obiekt jest tylko do odczytu.  
  
-   Pobierając <xref:System.Globalization.CultureInfo> obiekt, który reprezentuje bieżącej kultury wątku z <xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=nameWithType> właściwości i pobierania <xref:System.Globalization.CultureInfo> obiekt z jego <xref:System.Globalization.CultureInfo.NumberFormat%2A?displayProperty=nameWithType> właściwości.  
  
-   Pobierając <xref:System.Globalization.NumberFormatInfo> obiektu zwróconego przez `static` (`Shared` w języku Visual Basic) <xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A> właściwości.  
  
-   Wywołując <xref:System.Globalization.NumberFormatInfo.GetInstance%2A> metody z <xref:System.Globalization.CultureInfo> obiekt, który reprezentuje bieżącej kultury.  
  
 W poniższym przykładzie użyto te trzy sposoby tworzenia <xref:System.Globalization.NumberFormatInfo> obiekty reprezentujące Konwencji formatowania bieżącej kultury. Również pobiera wartość <xref:System.Globalization.NumberFormatInfo.IsReadOnly%2A> właściwości, aby zilustrować, że każdy obiekt jest tylko do odczytu.  
  
 [!code-csharp[System.Globalization.NumberFormatInfo.Class.Instantiate#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.numberformatinfo.class.instantiate/cs/instantiate1.cs#1)]
 [!code-vb[System.Globalization.NumberFormatInfo.Class.Instantiate#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.numberformatinfo.class.instantiate/vb/instantiate1.vb#1)]  
  
 Możesz utworzyć zapisywalny <xref:System.Globalization.NumberFormatInfo> obiekt, który reprezentuje konwencje bieżącej kultury wątku w jednym z następujących sposobów:  
  
-   Pobierając <xref:System.Globalization.NumberFormatInfo> obiektu w dowolnej z metod przedstawiono w poprzednim przykładzie kodu i wywoływania <xref:System.Globalization.NumberFormatInfo.Clone%2A> metody w zwróconym <xref:System.Globalization.NumberFormatInfo> obiektu. Spowoduje to utworzenie kopii oryginalnej <xref:System.Globalization.NumberFormatInfo> obiektu, z wyjątkiem jego <xref:System.Globalization.NumberFormatInfo.IsReadOnly%2A> jest właściwość `false`.  
  
-   Wywołując <xref:System.Globalization.CultureInfo.CreateSpecificCulture%2A?displayProperty=nameWithType> metodę w celu utworzenia <xref:System.Globalization.CultureInfo> obiekt, który reprezentuje bieżącej kultury, a następnie użyć jego <xref:System.Globalization.CultureInfo.NumberFormat%2A?displayProperty=nameWithType> właściwości do pobrania <xref:System.Globalization.NumberFormatInfo> obiektu.  
  
 Poniższy przykład przedstawia sposobów tworzenia wystąpienia <xref:System.Globalization.NumberFormatInfo> obiektu i wyświetla wartość jego <xref:System.Globalization.NumberFormatInfo.IsReadOnly%2A> właściwości, aby zilustrować, że obiekt nie jest tylko do odczytu.  
  
 [!code-csharp[System.Globalization.NumberFormatInfo.Class.Instantiate#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.numberformatinfo.class.instantiate/cs/instantiate2.cs#2)]
 [!code-vb[System.Globalization.NumberFormatInfo.Class.Instantiate#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.numberformatinfo.class.instantiate/vb/instantiate2.vb#2)]  
  
 Należy zauważyć, że system operacyjny Windows pozwala użytkownikowi na przesłanianie niektórych <xref:System.Globalization.NumberFormatInfo> wartości właściwości używane w liczbowych formatowania ani do analizowania operacji za pomocą **Region i język** w Panelu sterowania. Na przykład użytkownik, którego kultury jest angielski (Stany Zjednoczone) wybrać wyświetlanie wartości waluty jako 1.1 USD zamiast domyślnej $1.1. <xref:System.Globalization.NumberFormatInfo> Obiektów pobrać w sposób omówionych wcześniej wszystkich odzwierciedlają te zastąpienia użytkownika. Jeśli jest to niepożądane, można utworzyć <xref:System.Globalization.NumberFormatInfo> obiekt, który nie odzwierciedla zastąpienia użytkownika (i który jest również odczytu/zapisu, a nie tylko do odczytu) przez wywołanie metody <xref:System.Globalization.CultureInfo.%23ctor%28System.String%2CSystem.Boolean%29?displayProperty=nameWithType> Konstruktor i podanie wartości `false` dla `useUserOverride` argument. W poniższym przykładzie przedstawiono ilustracja dla systemu, których bieżącej kultury jest angielski (Stany Zjednoczone) i którego symbol waluty została zmieniona z domyślnego $ do USD.  
  
 [!code-csharp[System.Globalization.NumberFormatInfo.Class.Instantiate#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.numberformatinfo.class.instantiate/cs/instantiate3.cs#3)]
 [!code-vb[System.Globalization.NumberFormatInfo.Class.Instantiate#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.numberformatinfo.class.instantiate/vb/instantiate3.vb#3)]  
  
 Jeśli <xref:System.Globalization.CultureInfo.UseUserOverride%2A?displayProperty=nameWithType> właściwość jest ustawiona na `true`, właściwości <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType>, <xref:System.Globalization.CultureInfo.NumberFormat%2A?displayProperty=nameWithType>, i <xref:System.Globalization.CultureInfo.TextInfo%2A?displayProperty=nameWithType> również są pobierane z ustawień użytkownika. Jeśli ustawienia użytkownika są niezgodne z kulturą skojarzone z <xref:System.Globalization.CultureInfo> obiektu (na przykład, jeśli wybranego kalendarza nie jest jednym z kalendarzy posortowane według <xref:System.Globalization.CultureInfo.OptionalCalendars%2A> właściwości), są wyniki metody i wartości właściwości Niezdefiniowana.  
  
<a name="Instantiating_Invariant"></a>   
## <a name="instantiating-a-numberformatinfo-object-for-the-invariant-culture"></a>Utworzenie wystąpienia obiektu NumberFormatInfo dla niezmiennej kultury  
 Niezmienna kultura reprezentuje kulturę, w której nie uwzględnia się ustawień kulturowych. Jest on oparty na języku angielskim, ale nie na żadnych szczególnych anglojęzycznego kraju/regionu. Mimo że dane określone kultury może być dynamiczny i można zmienić w celu uwzględnienia nowych Konwencji kultury lub preferencje użytkownika, danych Niezmienna kultura nie zmienia się. A <xref:System.Globalization.NumberFormatInfo> obiekt, który reprezentuje Konwencji formatowania z kulturą niezmienną mogą służyć do formatowania operacje, w wyniku których ciągów nie powinny zmieniać przez kultury.  
  
 Można utworzyć wystąpienia <xref:System.Globalization.NumberFormatInfo> obiekt, który reprezentuje Konwencji formatowania kultury invariant w następujący sposób:  
  
-   Pobierając zaletą <xref:System.Globalization.NumberFormatInfo.InvariantInfo%2A> właściwości. Zwrócona <xref:System.Globalization.NumberFormatInfo> obiekt jest tylko do odczytu.  
  
-   Pobierając zaletą <xref:System.Globalization.CultureInfo.NumberFormat%2A?displayProperty=nameWithType> właściwość z <xref:System.Globalization.CultureInfo> obiektu, który jest zwracany przez <xref:System.Globalization.CultureInfo.InvariantCulture%2A?displayProperty=nameWithType> właściwości. Zwrócona <xref:System.Globalization.NumberFormatInfo> obiekt jest tylko do odczytu.  
  
-   Wywołując bez parametrów <xref:System.Globalization.NumberFormatInfo.%23ctor%2A> konstruktora klasy. Zwrócona <xref:System.Globalization.NumberFormatInfo> obiekt jest odczytu/zapisu.  
  
 W poniższym przykładzie użyto każdej z tych metod można utworzyć wystąpienia <xref:System.Globalization.NumberFormatInfo> obiekt, który reprezentuje Niezmienna kultura. Następnie wskazuje, czy obiekt jest tylko do odczytu  
  
 [!code-csharp[System.Globalization.NumberFormatInfo.Class.Instantiate#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.numberformatinfo.class.instantiate/cs/instantiate4.cs#4)]
 [!code-vb[System.Globalization.NumberFormatInfo.Class.Instantiate#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.numberformatinfo.class.instantiate/vb/instantiate4.vb#4)]  
  
<a name="Instantiating_Specific"></a>   
## <a name="instantiating-a-numberformatinfo-object-for-a-specific-culture"></a>Utworzenie wystąpienia obiektu NumberFormatInfo dla określonej kultury  
 Określoną kulturę reprezentuje język, który jest używany w określonym kraju/regionu. Na przykład en US jest określoną kulturą, reprezentujący języka angielskiego używany w Stanach Zjednoczonych i en-CA jest określoną kulturę, który reprezentuje język angielski, używany w Kanady. Można utworzyć wystąpienia <xref:System.Globalization.NumberFormatInfo> obiekt, który reprezentuje Konwencji formatowania określonej kultury w następujący sposób:  
  
-   Wywołując <xref:System.Globalization.CultureInfo.GetCultureInfo%28System.String%29?displayProperty=nameWithType> — metoda i pobierania wartość zwracana <xref:System.Globalization.CultureInfo> obiektu <xref:System.Globalization.CultureInfo.NumberFormat%2A> właściwości. Zwrócona <xref:System.Globalization.NumberFormatInfo> obiekt jest tylko do odczytu.  
  
-   Przez przekazanie <xref:System.Globalization.CultureInfo> obiekt, który reprezentuje kultura których <xref:System.Globalization.NumberFormatInfo> obiekt ma zostać pobrane do statycznego <xref:System.Globalization.NumberFormatInfo.GetInstance%2A> metody. Zwrócona <xref:System.Globalization.NumberFormatInfo> obiekt jest odczytu/zapisu.  
  
-   Wywołując <xref:System.Globalization.CultureInfo.CreateSpecificCulture%2A?displayProperty=nameWithType> — metoda i pobierania wartość zwracana <xref:System.Globalization.CultureInfo> obiektu <xref:System.Globalization.CultureInfo.NumberFormat%2A> właściwości. Zwrócona <xref:System.Globalization.NumberFormatInfo> obiekt jest odczytu/zapisu.  
  
-   Wywołując jedną z <xref:System.Globalization.CultureInfo.%23ctor%2A?displayProperty=nameWithType> klasy konstruktory i pobierania wartość zwracana <xref:System.Globalization.CultureInfo> obiektu <xref:System.Globalization.CultureInfo.NumberFormat%2A> właściwości. Zwrócona <xref:System.Globalization.NumberFormatInfo> obiekt jest odczytu/zapisu.  
  
 W poniższym przykładzie użyto te cztery metody tworzenia <xref:System.Globalization.NumberFormatInfo> obiektów, które odzwierciedla Konwencji formatowania kultury indonezyjski (Indonezja). Wskazuje także, czy każdy obiekt jest tylko do odczytu.  
  
 [!code-csharp[System.Globalization.NumberFormatInfo.Class.Instantiate#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.numberformatinfo.class.instantiate/cs/instantiate5.cs#5)]
 [!code-vb[System.Globalization.NumberFormatInfo.Class.Instantiate#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.numberformatinfo.class.instantiate/vb/instantiate5.vb#5)]  
  
<a name="Instantiating_Neutral"></a>   
## <a name="instantiating-a-numberformatinfo-object-for-a-neutral-culture"></a>Utworzenie wystąpienia obiektu NumberFormatInfo dla kultury neutralnej  
 Określa kulturę neutralną reprezentuje kultury lub język, która jest niezależna od kraju/regionu. Zwykle jest on nadrzędny co najmniej jednego określonego kultur. Na przykład fr jest kultury neutralnej dla języka francuskiego i element nadrzędny, fr-FR kultury. Możesz utworzyć <xref:System.Globalization.NumberFormatInfo> obiekt, który reprezentuje Konwencji formatowania kultury neutralnej w taki sam sposób, który utworzono <xref:System.Globalization.NumberFormatInfo> obiekt, który reprezentuje Konwencji formatowania określonej kultury.  
  
> [!NOTE]
>  W [!INCLUDE[net_v35_short](~/includes/net-v35-short-md.md)] i wcześniejsze wersje próby pobrania <xref:System.Globalization.NumberFormatInfo> zwraca obiekt, który odzwierciedla Konwencji formatowania kultury neutralnej <xref:System.NotSupportedException> wyjątku.  
  
 Jednak ponieważ jest niezależna od określonego kraju/regionu, kultury neutralnej brakuje formatowania informacje specyficzne dla kultury. Zamiast wypełnianie <xref:System.Globalization.NumberFormatInfo> obiekt z ogólnym wartości, zwraca programu .NET Framework <xref:System.Globalization.NumberFormatInfo> obiektu odzwierciedlający formatowania konwencjach określonej kultury, który jest elementem podrzędnym kultury neutralnej. Na przykład <xref:System.Globalization.NumberFormatInfo> obiektu dla kultury neutralnej en odzwierciedla Konwencji formatowania kultury en US i <xref:System.Globalization.NumberFormatInfo> obiekt kultury fr odzwierciedla Konwencji formatowania, fr-FR kultury.  
  
 Kodu podobne do poniższych umożliwia ustalić, które określoną kulturę Konwencji formatowania reprezentuje każdego kultury neutralnej.  
  
 [!code-csharp[System.Globalization.NumberFormatInfo.Class.Instantiate#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.numberformatinfo.class.instantiate/cs/instantiate6c.cs#6)]
 [!code-vb[System.Globalization.NumberFormatInfo.Class.Instantiate#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.numberformatinfo.class.instantiate/vb/instantiate6c.vb#6)]  
  
<a name="dynamic"></a>   
## <a name="numberformatinfo-and-dynamic-data"></a>NumberFormatInfo i dane dynamiczne  
 Formatowanie wartości numerycznych udostępniane przez dane specyficzne dla kultury <xref:System.Globalization.NumberFormatInfo> klasy jest dynamiczny, podobnie jak kultury danych dostarczonych przez <xref:System.Globalization.CultureInfo> klasy. Nie należy wprowadzać żadnych założenia dotyczące stabilności wartości <xref:System.Globalization.NumberFormatInfo> obiektów, które są skojarzone z określonego <xref:System.Globalization.CultureInfo> obiektów. Tylko dane dostarczone przez Niezmienna kultura i jego skojarzony <xref:System.Globalization.NumberFormatInfo> obiektu jest stabilna. Innych danych można zmienić między sesjami aplikacji lub nawet w ramach jednej sesji, z następujących powodów:  
  
-   **Aktualizacje systemu.** Wiele języków preferencje, takie jak symbol waluty lub formaty walutowe zmiany w czasie. W takim przypadku usługa Windows Update obejmuje zmiany <xref:System.Globalization.NumberFormatInfo> wartości właściwości dla określonej kultury.  
  
-   **Zastąpienie kultur.** <xref:System.Globalization.CultureAndRegionInfoBuilder> Klasa może być używana, aby zamienić dane istniejące kultury.  
  
-   **Kaskadowe zmiany wartości właściwości.** Liczba powiązanych właściwości można zmienić w czasie wykonywania, co z kolei powoduje, że <xref:System.Globalization.NumberFormatInfo> dane, aby zmienić. Na przykład bieżącej kultury można zmienić programowo lub przez akcję użytkownika. W takim przypadku <xref:System.Globalization.NumberFormatInfo> obiektu zwróconego przez <xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A> zmiany właściwości do obiektu skojarzone z bieżącej kultury.  
  
-   **Preferencje użytkownika.** Użytkownicy aplikacji mogą zastąpić niektóre wartości skojarzone z bieżącego ustawienia kulturowego systemu za pośrednictwem Opcje regionalne i językowe w Panelu sterowania. Użytkownicy mogą na przykład wybrać inny symbol waluty lub symbol różnych separator dziesiętny. Jeśli <xref:System.Globalization.CultureInfo.UseUserOverride%2A?displayProperty=nameWithType> właściwość jest ustawiona na `true` (wartość domyślna), właściwości <xref:System.Globalization.NumberFormatInfo> obiektu również są pobierane z ustawień użytkownika.  
  
 Począwszy od programu .NET Framework 2.0, wszystkie właściwości użytkownika do przesłonięcia <xref:System.Globalization.NumberFormatInfo> obiektu są inicjowane po utworzeniu obiektu. Istnieje ryzyko wystąpienia niespójności, ponieważ żaden obiekt tworzenie ani proces zastąpienie użytkownika jest atomic i odpowiednie wartości może się zmieniać podczas tworzenia obiektu. Jednak problemy powodujące te niespójności powinny być bardzo rzadko.  
  
 Można kontrolować, czy zastąpienia użytkownika zostaną odzwierciedlone w <xref:System.Globalization.NumberFormatInfo> obiektów, które reprezentują tego samego kultury bieżącej kultury wątku. W poniższej tabeli przedstawiono sposoby, w którym <xref:System.Globalization.NumberFormatInfo> obiekt mogą być pobierane i wskazuje, czy obiekt wynikowy odzwierciedla zastąpienia użytkownika.  
  
|Źródłowy obiekt CultureInfo i NumberFormatInfo|Odzwierciedla zastąpienia użytkownika|  
|-------------------------------------------------------|-----------------------------|  
|`CultureInfo.CurrentCulture.NumberFormat` Właściwość|Tak|  
|<xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A?displayProperty=nameWithType> Właściwość|Tak|  
|<xref:System.Globalization.CultureInfo.CreateSpecificCulture%2A?displayProperty=nameWithType> — Metoda|Tak|  
|<xref:System.Globalization.CultureInfo.GetCultureInfo%2A?displayProperty=nameWithType> — Metoda|Nie|  
|<xref:System.Globalization.CultureInfo.%23ctor%28System.String%29> Konstruktor|Tak|  
|<xref:System.Globalization.CultureInfo.%23ctor%28System.String%2CSystem.Boolean%29?displayProperty=nameWithType> Konstruktor|Zależy od wartości `useUserOverride` parametru|  
  
 Jeśli jest przekonujący powód nie, powinien przestrzegać zastąpienia użytkownika korzystając z <xref:System.Globalization.NumberFormatInfo> obiektu w aplikacjach klienckich sformatowanie i analizować dane wprowadzone przez użytkownika lub, aby wyświetlić dane liczbowe. Dla serwera aplikacji lub aplikacji instalacji nienadzorowanej należy nie przestrzega zastąpienia użytkownika. Jednak jeśli używasz <xref:System.Globalization.NumberFormatInfo> obiektu albo jawnie lub niejawnie do utrwalenia danych liczbowych w postaci ciągu, należy albo użyj <xref:System.Globalization.NumberFormatInfo> należy określić obiekt, który odzwierciedla Konwencji formatowania Niezmienna kultura, lub ciąg niestandardowego formatu liczbowego używanego niezależnie od kultury.  
  
<a name="formatProvider"></a>   
## <a name="iformatprovider-numberformatinfo-and-numeric-formatting"></a>IFormatProvider, NumberformatInfo i formatowanie liczbowe  
 A <xref:System.Globalization.NumberFormatInfo> obiektu jest używana jawnie lub niejawnie liczbowe wszystkich operacji formatowania. Obejmują one wywołania do następujących metod:  
  
-   Wszystkie liczbowe formatowania metod, takich jak <xref:System.Int32.ToString%2A?displayProperty=nameWithType>, <xref:System.Double.ToString%2A?displayProperty=nameWithType>, i <xref:System.Convert.ToString%28System.Int32%29?displayProperty=nameWithType>.  
  
-   Główne złożone formatowanie metody <xref:System.String.Format%2A?displayProperty=nameWithType>.  
  
-   Inne złożone formatowanie metod, takich jak <xref:System.Console.WriteLine%28System.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType> i <xref:System.Text.StringBuilder.AppendFormat%28System.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType>.  
  
 Wszystkie operacje formatowanie liczbowe należy korzystać z <xref:System.IFormatProvider> implementacji. <xref:System.IFormatProvider> Interfejs zawiera jedną metodę <xref:System.IFormatProvider.GetFormat%28System.Type%29>. Jest to metoda wywołania zwrotnego, który jest przekazywany <xref:System.Type> obiekt, który reprezentuje typ potrzebnych do udostępniania informacji formatowania. Metoda jest odpowiedzialny za zwrócenie wystąpienie tego typu lub `null`, jeśli nie można udostępnić wystąpienia typu. .NET Framework zapewnia dwa <xref:System.IFormatProvider> implementacje formatowania liczb:  
  
-   <xref:System.Globalization.CultureInfo> Klasy, która reprezentuje określoną kulturę (lub określonego języka w danym kraju lub regionie). W liczbową operacji formatowania <xref:System.Globalization.CultureInfo.GetFormat%2A?displayProperty=nameWithType> metoda zwraca <xref:System.Globalization.NumberFormatInfo> obiekt skojarzony z jego <xref:System.Globalization.CultureInfo.NumberFormat%2A?displayProperty=nameWithType> właściwości.  
  
-   <xref:System.Globalization.NumberFormatInfo> Klasy, która dostarcza informacji na temat Konwencji formatowania jego skojarzony kultury. <xref:System.Globalization.NumberFormatInfo.GetFormat%2A?displayProperty=nameWithType> Metoda zwraca wystąpienia samej siebie.  
  
 Jeśli <xref:System.IFormatProvider> implementacji nie podano do formatowania metody jawnie, <xref:System.Globalization.CultureInfo> obiektu zwróconego przez <xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=nameWithType> jest używana właściwość, która reprezentuje bieżącej kultury wątku.  
  
 Poniższy przykład przedstawia relacje między <xref:System.IFormatProvider> interfejsu i <xref:System.Globalization.NumberFormatInfo> klasy w operacji formatowania, definiując własne <xref:System.IFormatProvider> implementacji. Jego <xref:System.IFormatProvider.GetFormat%2A> metoda Wyświetla nazwę typu obiektu zażądał operacji formatowania. Jeśli żądanie jest interfejs <xref:System.Globalization.NumberFormatInfo> obiektu, ta metoda zapewnia <xref:System.Globalization.NumberFormatInfo> obiektu dla bieżącej kultury wątku. Jako dane wyjściowe w przykładzie pokazano <xref:System.Decimal.ToString%28System.IFormatProvider%29?displayProperty=nameWithType> metod żądań <xref:System.Globalization.NumberFormatInfo> obiekt, aby podać informacje dotyczące formatowania, podczas gdy <xref:System.String.Format%28System.IFormatProvider%2CSystem.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType> metod żądań <xref:System.Globalization.NumberFormatInfo> i <xref:System.Globalization.DateTimeFormatInfo> obiektów, a także <xref:System.ICustomFormatter> Implementacja.  
  
 [!code-csharp[System.Globalization.NumberFormatInfo.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.numberformatinfo.class/cs/formatprovider1.cs#1)]
 [!code-vb[System.Globalization.NumberFormatInfo.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.numberformatinfo.class/vb/formatprovider1.vb#1)]  
  
 Jeśli <xref:System.IFormatProvider> implementacji nie został jawnie podany w liczbową formatowania wywołania metody, wywołania metody `CultureInfo.CurrentCulture.GetFormat` metody, która zwraca <xref:System.Globalization.NumberFormatInfo> obiekt, który odpowiada bieżącej kultury wątku.  
  
<a name="properties"></a>   
## <a name="format-strings-and-numberformatinfo-properties"></a>Ciągi formatów i właściwości NumberFormatInfo  
 Każda operacja formatowania używa standard lub ciąg niestandardowego formatu liczbowego do generowania wyników ciągu z liczbą. W niektórych przypadkach użycie ciągu formatu, aby wygenerować ciąg wyniku jest jawne, jak w poniższym przykładzie. Ten kod wywołuje <xref:System.Decimal.ToString%28System.IFormatProvider%29?displayProperty=nameWithType> metodę, aby przekonwertować <xref:System.Decimal> wartość liczby reprezentacje inny ciąg przy użyciu konwencji formatowania kultury en US.  
  
 [!code-csharp[System.Globalization.NumberFormatInfo.Class#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.numberformatinfo.class/cs/properties1.cs#2)]
 [!code-vb[System.Globalization.NumberFormatInfo.Class#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.numberformatinfo.class/vb/properties1.vb#2)]  
  
 W pozostałych przypadkach użycia ciągu formatu jest niejawnie. Na przykład w przypadku wywołania metody następujące domyślne lub bez parametrów <xref:System.Decimal.ToString?displayProperty=nameWithType> metody, wartość <xref:System.Decimal> wystąpienia jest formatowany przy użyciu ogólnych specyfikator formatu ("G") i konwencje związane z bieżącej kultury, w tym przypadku jest kultura en US.  
  
 [!code-csharp[System.Globalization.NumberFormatInfo.Class#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.numberformatinfo.class/cs/properties2.cs#3)]
 [!code-vb[System.Globalization.NumberFormatInfo.Class#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.numberformatinfo.class/vb/properties2.vb#3)]  
  
 Każdy ciąg formatu liczbowego standardowe korzysta z co najmniej jednego <xref:System.Globalization.NumberFormatInfo> właściwości do określenia, czy wzorzec symbole używane w ciągu wynik. Podobnie każda niestandardowego formatu liczbowego specyfikator z wyjątkiem "0" i "#" wstawić symbole w ciągu wynik, który są definiowane przez <xref:System.Globalization.NumberFormatInfo> właściwości. W poniższej tabeli wymieniono standardowego i niestandardowego formatu liczbowego Specyfikatory i skojarzone z nimi <xref:System.Globalization.NumberFormatInfo> właściwości.  Aby zmienić wygląd ciąg wyniku dla określonej kultury, zobacz [NumberFormatInfo modyfikowanie właściwości](#modifying) sekcji. Zobacz szczegółowe informacje dotyczące korzystania z tych format Specyfikatory, [standardowe ciągi formatu liczbowego](~/docs/standard/base-types/standard-numeric-format-strings.md) i [niestandardowe ciągi formatów liczbowych](~/docs/standard/base-types/custom-numeric-format-strings.md).  
  
|Specyfikator formatu|Właściwości|  
|----------------------|---------------------------|  
|"C" lub "c" (specyfikator formatu Waluta)|<xref:System.Globalization.NumberFormatInfo.CurrencyDecimalDigits%2A>, aby zdefiniować domyślną liczbę cyfr ułamkowych.<br /><br /> <xref:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator%2A>, aby zdefiniować symbol separator dziesiętny.<br /><br /> <xref:System.Globalization.NumberFormatInfo.CurrencyGroupSeparator%2A>, aby zdefiniować grupę lub tysięcy separatora.<br /><br /> <xref:System.Globalization.NumberFormatInfo.CurrencyGroupSizes%2A>, aby zdefiniować rozmiary integralną grup.<br /><br /> <xref:System.Globalization.NumberFormatInfo.CurrencyNegativePattern%2A>, aby zdefiniować wzorzec ujemnych wartości waluty.<br /><br /> <xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A>, aby zdefiniować wzorzec dodatnich wartości waluty.<br /><br /> <xref:System.Globalization.NumberFormatInfo.CurrencySymbol%2A>, aby zdefiniować symbol waluty.<br /><br /> <xref:System.Globalization.NumberFormatInfo.NegativeSign%2A>, aby zdefiniować symbolu wartości ujemnej.|  
|"D" lub "d" (specyfikator formatu dziesiętnego)|<xref:System.Globalization.NumberFormatInfo.NegativeSign%2A>, aby zdefiniować symbolu wartości ujemnej.|  
|"E" lub "e" (specyfikator formatu wykładniczej lub naukowych)|<xref:System.Globalization.NumberFormatInfo.NegativeSign%2A>, aby zdefiniować symbolu wartości ujemnej w mantysa i wykładnik.<br /><br /> <xref:System.Globalization.NumberFormatInfo.NumberDecimalSeparator%2A>, aby zdefiniować symbol separator dziesiętny.<br /><br /> <xref:System.Globalization.NumberFormatInfo.PositiveSign%2A>, aby zdefiniować symbol znaku dodatnią wykładnika.|  
|"F" lub "f" (specyfikator formatu stałoprzecinkowe)|<xref:System.Globalization.NumberFormatInfo.NegativeSign%2A>, aby zdefiniować symbolu wartości ujemnej.<br /><br /> <xref:System.Globalization.NumberFormatInfo.NumberDecimalDigits%2A>, aby zdefiniować domyślną liczbę cyfr ułamkowych.<br /><br /> <xref:System.Globalization.NumberFormatInfo.NumberDecimalSeparator%2A>, aby zdefiniować symbol separator dziesiętny.|  
|"G" lub "g" (specyfikator formatu Ogólne)|<xref:System.Globalization.NumberFormatInfo.NegativeSign%2A>, aby zdefiniować symbolu wartości ujemnej.<br /><br /> <xref:System.Globalization.NumberFormatInfo.NumberDecimalSeparator%2A>, aby zdefiniować symbol separator dziesiętny.<br /><br /> <xref:System.Globalization.NumberFormatInfo.PositiveSign%2A>, aby zdefiniować symbol dodatnią logowania dla ciągów wynikowych w notacji wykładniczej.|  
|"N" lub "n" (numer specyfikator formatu)|<xref:System.Globalization.NumberFormatInfo.NegativeSign%2A>, aby zdefiniować symbolu wartości ujemnej.<br /><br /> <xref:System.Globalization.NumberFormatInfo.NumberDecimalDigits%2A>, aby zdefiniować domyślną liczbę cyfr ułamkowych.<br /><br /> <xref:System.Globalization.NumberFormatInfo.NumberDecimalSeparator%2A>, aby zdefiniować symbol separator dziesiętny.<br /><br /> <xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A>, aby zdefiniować grupę symbol separatora (w tysiącach).<br /><br /> <xref:System.Globalization.NumberFormatInfo.NumberGroupSizes%2A>, aby określić liczbę miejsc po przecinku integralną w grupie.<br /><br /> <xref:System.Globalization.NumberFormatInfo.NumberNegativePattern%2A>, aby zdefiniować format wartości ujemnych.|  
|"P" lub "p" (specyfikator formatu %)|<xref:System.Globalization.NumberFormatInfo.NegativeSign%2A>, aby zdefiniować symbolu wartości ujemnej.<br /><br /> <xref:System.Globalization.NumberFormatInfo.PercentDecimalDigits%2A>, aby zdefiniować domyślną liczbę cyfr ułamkowych.<br /><br /> <xref:System.Globalization.NumberFormatInfo.PercentDecimalSeparator%2A>, aby zdefiniować symbol separator dziesiętny.<br /><br /> <xref:System.Globalization.NumberFormatInfo.PercentGroupSeparator%2A>, aby zdefiniować symbol separatora grupy.<br /><br /> <xref:System.Globalization.NumberFormatInfo.PercentGroupSizes%2A>, aby określić liczbę miejsc po przecinku integralną w grupie.<br /><br /> <xref:System.Globalization.NumberFormatInfo.PercentNegativePattern%2A>, do definiowania umieszczania symbol procentu i ujemną symbolu wartości ujemnej.<br /><br /> <xref:System.Globalization.NumberFormatInfo.PercentPositivePattern%2A>, aby zdefiniować położenie symbol procentu dla wartości dodatnie.<br /><br /> <xref:System.Globalization.NumberFormatInfo.PercentSymbol%2A>, aby zdefiniować symbol procentu.|  
|"R" lub "r" (specyfikator formatu obustronne)|<xref:System.Globalization.NumberFormatInfo.NegativeSign%2A>, aby zdefiniować symbolu wartości ujemnej.<br /><br /> <xref:System.Globalization.NumberFormatInfo.NumberDecimalSeparator%2A>, aby zdefiniować symbol separator dziesiętny.<br /><br /> <xref:System.Globalization.NumberFormatInfo.PositiveSign%2A>, aby zdefiniować symbol dodatnią znaku w wykładniku.|  
|"X" i "x" (specyfikator w formacie szesnastkowym)|Brak.|  
|"." (specyfikator formatu niestandardowego dziesiętnym)|<xref:System.Globalization.NumberFormatInfo.NumberDecimalSeparator%2A>, aby zdefiniować symbol separator dziesiętny.|  
|"," (specyfikator formatu niestandardowego separatora grupy)|<xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A>, aby zdefiniować symbol separatora grupy (w tysiącach).|  
|"%" (specyfikator formatu niestandardowego symbol zastępczy wartości procentowej)|<xref:System.Globalization.NumberFormatInfo.PercentSymbol%2A>, aby zdefiniować symbol procentu.|  
|"‰" (na specyfikator formatu niestandardowego symbolu zastępczego mille)|<xref:System.Globalization.NumberFormatInfo.PerMilleSymbol%2A>, aby zdefiniować na mille symbolu.|  
|"E" (specyfikator formatu niestandardowego notacji wykładniczej)|<xref:System.Globalization.NumberFormatInfo.NegativeSign%2A>, aby zdefiniować symbolu wartości ujemnej w mantysa i wykładnik.<br /><br /> <xref:System.Globalization.NumberFormatInfo.PositiveSign%2A>, aby zdefiniować symbol znaku dodatnią wykładnika.|  
  
 Należy pamiętać, że <xref:System.Globalization.NumberFormatInfo> klasa zawiera <xref:System.Globalization.NumberFormatInfo.NativeDigits%2A> właściwość, która określa 10 podstawowych cyfr używana przez określoną kulturę. Jednak właściwość nie jest używany w formatowaniu operacji; tylko podstawowe alfabetu łacińskiego cyfry od 0 (U + 0030) do 9 (U + 0039) są używane w ciągu wynik. Ponadto dla <xref:System.Single> i <xref:System.Double> wartości `NaN`, `PositiveInfinity`, i `NegativeInfinity`, ciąg wyniku składa się wyłącznie z symboli zdefiniowanych przez <xref:System.Globalization.NumberFormatInfo.NaNSymbol%2A>, <xref:System.Globalization.NumberFormatInfo.PositiveInfinitySymbol%2A>, i <xref:System.Globalization.NumberFormatInfo.NegativeInfinitySymbol%2A> właściwości , odpowiednio.  
  
<a name="modifying"></a>   
## <a name="modifying-numberformatinfo-properties"></a>Modyfikowanie właściwości NumberFormatInfo  
 Można zmodyfikować właściwości <xref:System.Globalization.NumberFormatInfo> obiekt, aby dostosować ciąg wyniku wygenerowane w liczbową operacji formatowania. W tym celu:  
  
1.  Utwórz kopię odczytu/zapisu <xref:System.Globalization.NumberFormatInfo> obiektu, którego Konwencji formatowania chcesz zmodyfikować. Aby uzyskać więcej informacji, zobacz [tworzenia wystąpienia obiektu NumberFormatInfo](#Instantiating) sekcji.  
  
2.  Zmodyfikuj właściwości lub właściwości, które są używane do tworzenia ciąg oczekiwany wynik. Aby uzyskać informacje na temat używania metod sposób formatowania <xref:System.Globalization.NumberFormatInfo> właściwości, aby zdefiniować ciągów wynikowych, zobacz [formatowanie ciągów i właściwości NumberFormatInfo](#properties) sekcji.  
  
3.  Użyj niestandardowego <xref:System.Globalization.NumberFormatInfo> obiekt jako <xref:System.IFormatProvider> argument w wywołaniach metod formatowania.  
  
> [!NOTE]
>  Zamiast dynamicznie zmodyfikowanie wartości właściwości kultury przy każdym uruchomieniu aplikacji, możesz użyć <xref:System.Globalization.CultureAndRegionInfoBuilder> klasy do definiowania kulturą niestandardową (kultury mający unikatową nazwę i który uzupełnia istniejące kultur) lub zastępczy kultura (taki, który jest używany zamiast określoną kulturę).  
  
 Kilka przykładów można znaleźć w poniższych sekcjach.  
  
<a name="currency"></a>   
### <a name="modifying-the-currency-symbol-and-pattern"></a>Modyfikowanie symbolu waluty i wzoru  
 Poniższy przykład modyfikuje <xref:System.Globalization.NumberFormatInfo> obiekt czy reprezentujący Konwencji formatowania kultury en US. Przypisuje symbol waluty ISO 4217 <xref:System.Globalization.NumberFormatInfo.CurrencySymbol%2A> właściwości i definiuje wzorca dla wartości waluty składający się z symbol waluty, następuje spacja i wartość liczbową.  
  
 [!code-csharp[System.Globalization.NumberFormatInfo.Customize#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.numberformatinfo.customize/cs/customize_currency1.cs#1)]
 [!code-vb[System.Globalization.NumberFormatInfo.Customize#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.numberformatinfo.customize/vb/customize_currency1.vb#1)]  
  
<a name="id"></a>   
### <a name="formatting-a-national-identification-number"></a>Formatowanie krajowego numeru identyfikacyjnego  
 Wiele numery identyfikacyjne national składa się wyłącznie z cyfr i dlatego łatwo może być sformatowany przez modyfikowanie właściwości <xref:System.Globalization.NumberFormatInfo> obiektu. Na przykład numer ubezpieczenia społecznego w USA składa się z 9 cyfr ułożone w następujący sposób: `XXX-XX-XXXX`. W poniższym przykładzie założono, że numery ubezpieczenia społecznego są przechowywane jako liczby całkowitej wartości oraz formatuje je odpowiednio.  
  
 [!code-csharp[System.Globalization.NumberFormatInfo.Customize#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.numberformatinfo.customize/cs/customize_ssn1.cs#2)]
 [!code-vb[System.Globalization.NumberFormatInfo.Customize#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.numberformatinfo.customize/vb/customize_ssn1.vb#2)]  
  
<a name="parsing"></a>   
## <a name="parsing-numeric-strings"></a>Analizowanie ciągów numerycznych  
 Podczas analizowania polega na konwertowaniu reprezentację ciągu liczbę na liczbę. Każdy typ liczbowy w programie .NET Framework zawiera dwa przeciążonej metody analizy: `Parse` i `TryParse`. `Parse` Metoda konwertuje ciąg na liczbę i zgłasza wyjątek, jeśli konwersja nie powiedzie się. `TryParse` Metoda konwertuje ciąg na liczbę, przypisuje numer `out` argument i zwraca <xref:System.Boolean> wartość, która wskazuje, czy konwersja powiodła się.  
  
 Podczas analizowania metody jawnie lub niejawnie używać <xref:System.Globalization.NumberStyles> wartość wyliczenia w celu ustalenia, jakie elementy style (na przykład separatorów grup, separator dziesiętny lub symbol waluty) może być obecny w ciągu w przypadku analizy operacja powiodła się. Jeśli <xref:System.Globalization.NumberStyles> wartość nie zostanie podany w wywołaniu metody, wartość domyślna to <xref:System.Globalization.NumberStyles> wartość, która obejmuje <xref:System.Globalization.NumberStyles.Float> i <xref:System.Globalization.NumberStyles.AllowThousands> flagi, które określa, czy analizowany ciąg może zawierać symboli grupy, separator dziesiętny, znaku minus, i spacji lub może być reprezentację liczby w notacji wykładniczej.  
  
 Podczas analizowania metody również jawnie lub niejawnie używać <xref:System.Globalization.NumberFormatInfo> obiekt, który definiuje określone symbole i wzorce, które mogą wystąpić w ciągu do przeanalizowania. Jeśli <xref:System.Globalization.NumberFormatInfo> obiektu jest niedostępny, wartość domyślna to <xref:System.Globalization.NumberFormatInfo> dla bieżącej kultury wątku. Aby uzyskać więcej informacji na temat analizowania wyświetlić poszczególne metody analizy, takich jak <xref:System.Int16.Parse%28System.String%29?displayProperty=nameWithType>, <xref:System.Int32.Parse%28System.String%2CSystem.Globalization.NumberStyles%29?displayProperty=nameWithType>, <xref:System.Int64.Parse%28System.String%2CSystem.IFormatProvider%29?displayProperty=nameWithType>, <xref:System.Decimal.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=nameWithType>, <xref:System.Double.TryParse%28System.String%2CSystem.Double%40%29?displayProperty=nameWithType>, i <xref:System.Numerics.BigInteger.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Numerics.BigInteger%40%29?displayProperty=nameWithType>.  
  
 Poniższy przykład przedstawia rodzaj zależne od kultury analizowanie ciągów. Próbuje przeanalizować składni ciągu, który zawiera tysięcy separatorów przy użyciu konwencji en US, fr-FR i niezmiennej kultur. Ciąg, który zawiera przecinka jako separatora grupy i okres jako separator dziesiętny nie może przeanalizować w kultury fr-FR, a ciąg z white space jako separator grupy i przecinka jako separatora dziesiętnego nie można przeanalizować en US i kultury invariant.  
  
 [!code-csharp[System.Globalization.NumberFormatInfo.Class#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.numberformatinfo.class/cs/parse1.cs#4)]
 [!code-vb[System.Globalization.NumberFormatInfo.Class#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.numberformatinfo.class/vb/parse1.vb#4)]  
  
 Podczas analizowania zazwyczaj występuje w dwóch kontekstów:  
  
-   Jako operacja, która służy do konwertowania danych wejściowych użytkownika na wartość liczbową.  
  
-   Jako operacja, której celem jest wartość liczbowa; przesyłania danych oznacza to, że do deserializacji wartość numeryczną, która wcześniej została wykonana serializacja jako ciąg.  
  
 W poniższych sekcjach omówiono te dwie operacje bardziej szczegółowo.  
  
<a name="ParseUser"></a>   
### <a name="parsing-user-strings"></a>Analiza ciągów użytkownika  
 Gdy są analizowanie ciągów liczbowych wprowadzane przez użytkownika, należy zawsze wystąpienia <xref:System.Globalization.NumberFormatInfo> obiektu odzwierciedlający kultury ustawień użytkownika. Aby uzyskać informacje o sposobie tworzenia wystąpienia <xref:System.Globalization.NumberFormatInfo> obiektu odzwierciedlający dostosowania użytkownika, zobacz [NumberFormatInfo i danych dynamicznych](#dynamic) sekcji.  
  
 Poniższy przykład przedstawia różnicę między analizy operacja, która odzwierciedla kultury ustawień użytkownika i jedną, która nie. W takim przypadku domyślną kulturę systemu jest en US, ale ma zdefiniowany przez użytkownika "," jako separator dziesiętny i "." jako separatora grupy w Panelu sterowania **Region i język**. Zwykle te symbole są wycofywane w domyślną kulturę en US. Gdy użytkownik wprowadza ciąg, który odzwierciedla ustawienia użytkownika i ten ciąg jest analizowana przez <xref:System.Globalization.NumberFormatInfo> obiektu odzwierciedlający ustawień użytkownika (zastąpień) podczas analizowania operacja zwraca prawidłowego wyniku. Jednak gdy przeanalizowany ciąg przez <xref:System.Globalization.NumberFormatInfo> obiektu odzwierciedlający standardowe en US ustawienia kultury, symbol przecinkami separatora grupy błędów i zwraca niepoprawny wynik.  
  
 [!code-csharp[System.Globalization.NumberFormatInfo.Class#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.numberformatinfo.class/cs/parseuser1.cs#5)]
 [!code-vb[System.Globalization.NumberFormatInfo.Class#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.numberformatinfo.class/vb/parseuser1.vb#5)]  
  
<a name="ParseSerial"></a>   
### <a name="serializing-and-deserializing-numeric-data"></a>Serializacja i deserializacja danych liczbowych  
 Gdy dane liczbowe jest serializowany w formacie ciągu i później deserializacji i przeanalizować, ciągi powinny generowane i analizować za pomocą Konwencji Niezmienna kultura. Operacje formatowania i analizy nigdy nie powinien odzwierciedlać konwencje określoną kulturę. Jeśli używane są ustawienia specyficzne dla kultury, przenośność danych jest ograniczone; może być zdeserializowany pomyślnie tylko w wątku, którego ustawienia specyficzne dla kultury są identyczne z wątku, w którym została wykonana serializacja. W niektórych przypadkach oznacza to, że dane nie może nawet być pomyślnie zdeserializowany, w tym samym systemie, na którym została wykonana serializacja.  
  
 Poniższy przykład pokazuje, co może się zdarzyć, gdy naruszenia tej zasady. Wartości zmiennoprzecinkowych w tablicy są konwertowane na ciągów, gdy bieżący wątek używa ustawienia specyficzne dla kultury kultury en US. Dane następnie jest analizowana przez wątek, który korzysta z ustawień specyficzne dla kultury kultury en-GB. W takim przypadku chociaż każdej operacji analizy zakończy się powodzeniem, danych nie jest wyrównana pomyślnie i uszkodzenie danych. W innych przypadkach może zakończyć się niepowodzeniem podczas analizowania operacji i <xref:System.FormatException> może zostać zgłoszony wyjątek.  
  
 [!code-csharp[System.Globalization.NumberFormatInfo.Class#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.numberformatinfo.class/cs/parsepersisted.cs#6)]
 [!code-vb[System.Globalization.NumberFormatInfo.Class#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.numberformatinfo.class/vb/parsepersisted.vb#6)]  
  
   
  
## Examples  
 Poniższy przykład przedstawia sposób pobrać <xref:System.Globalization.NumberFormatInfo> obiektu odpowiadającego <xref:System.Globalization.CultureInfo> obiektu i obiekt pobrane do liczby zapytań formatowania informacje dla określonej kultury.  
  
 [!code-cpp[NumberFormatInfo#1](~/samples/snippets/cpp/VS_Snippets_CLR/NumberFormatInfo/cpp/NumberFormatInfo.cpp#1)]
 [!code-csharp[NumberFormatInfo#1](~/samples/snippets/csharp/VS_Snippets_CLR/NumberFormatInfo/CS/NumberFormatInfo.cs#1)]
 [!code-vb[NumberFormatInfo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/NumberFormatInfo/vb/numberformatinfo.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Globalization.CultureInfo" />
    <altmember cref="T:System.IFormatProvider" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NumberFormatInfo ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.NumberFormatInfo.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; NumberFormatInfo();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie zapisywalny <see cref="T:System.Globalization.NumberFormatInfo" /> klasy, który jest niezależny od kultury (niezmiennej).</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli aplikacja wymaga formatowania zdefiniowane przez użytkownika można zmodyfikować właściwości nowego wystąpienia.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public object Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.NumberFormatInfo.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Function Clone () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ Clone();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ICloneable.Clone</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Tworzy kopię pobieżną <see cref="T:System.Globalization.NumberFormatInfo" /> obiektu.</summary>
        <returns>Nowy obiekt skopiowane z oryginalnego <see cref="T:System.Globalization.NumberFormatInfo" /> obiektu.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Klon jest zapisywalny nawet wtedy, gdy oryginalne <xref:System.Globalization.NumberFormatInfo> obiekt jest tylko do odczytu. W związku z tym można modyfikować właściwości klonu wzorami zdefiniowane przez użytkownika.  
  
 Kopia pobieżna obiektu jest kopię tylko obiekt. Jeśli obiekt zawiera odwołania do innych obiektów, kopię pobieżną nie utworzy kopie określono obiektów. Go będzie odwoływać się do oryginalnych obiektów zamiast tego. Z drugiej strony głęboką kopię obiektu tworzy kopię obiektu i kopie wszystkich bezpośrednio lub pośrednio odwołuje się ten obiekt. W przypadku liczby <xref:System.Globalization.NumberFormatInfo> obiekt kopia pobieżna jest wystarczająca dla wszystkich właściwości wystąpienia, kopiowanie, ponieważ wszystkie właściwości, które zwracają obiekt odwołania są `static` (`Shared` w języku Visual Basic).  
  
   
  
## Examples  
 W poniższym przykładzie użyto <xref:System.Globalization.NumberFormatInfo.Clone%2A> metodę w celu utworzenia kopii odczytu/zapisu <xref:System.Globalization.NumberFormatInfo> obiekt, który reprezentuje Formatowanie konwencje bieżącej kultury wątku liczbowe.  
  
 [!code-csharp[System.Globalization.NumberFormatInfo.IsReadOnly#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.numberformatinfo.isreadonly/cs/isreadonly1.cs#1)]
 [!code-vb[System.Globalization.NumberFormatInfo.IsReadOnly#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.numberformatinfo.isreadonly/vb/isreadonly1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Globalization.NumberFormatInfo.IsReadOnly" />
        <altmember cref="M:System.Globalization.NumberFormatInfo.ReadOnly(System.Globalization.NumberFormatInfo)" />
      </Docs>
    </Member>
    <Member MemberName="CurrencyDecimalDigits">
      <MemberSignature Language="C#" Value="public int CurrencyDecimalDigits { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CurrencyDecimalDigits" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.NumberFormatInfo.CurrencyDecimalDigits" />
      <MemberSignature Language="VB.NET" Value="Public Property CurrencyDecimalDigits As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int CurrencyDecimalDigits { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia liczbę miejsc dziesiętnych do użycia w wartości waluty.</summary>
        <value>Liczba miejsc dziesiętnych do użycia w wartości waluty. Wartość domyślna dla <see cref="P:System.Globalization.NumberFormatInfo.InvariantInfo" /> 2.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Globalization.NumberFormatInfo.CurrencyDecimalDigits%2A> Właściwość jest używana z ciągiem "C" formatem bez Specyfikator dokładności, w operacji formatowanie liczbowe. Definiuje domyślną liczbę cyfr ułamkowych występujących po separatorze dziesiętnym. Ta wartość jest wyłączona, jeśli jest używany przez Specyfikator dokładności. Aby uzyskać więcej informacji, zobacz [standardowe ciągi formatu liczbowego](~/docs/standard/base-types/standard-numeric-format-strings.md).  
  
   
  
## Examples  
 Poniższy przykład ilustruje efekt zmiany <xref:System.Globalization.NumberFormatInfo.CurrencyDecimalDigits%2A> właściwości.  
  
 [!code-cpp[CurrencyDecimalDigits#1](~/samples/snippets/cpp/VS_Snippets_CLR/CurrencyDecimalDigits/CPP/currencydecimaldigits.cpp#1)]
 [!code-csharp[CurrencyDecimalDigits#1](~/samples/snippets/csharp/VS_Snippets_CLR/CurrencyDecimalDigits/CS/currencydecimaldigits.cs#1)]
 [!code-vb[CurrencyDecimalDigits#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CurrencyDecimalDigits/VB/currencydecimaldigits.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Właściwość jest ustawiany na wartość, która jest mniejsza niż 0 lub większą niż 99.</exception>
        <exception cref="T:System.InvalidOperationException">Ustawiono właściwość i <see cref="T:System.Globalization.NumberFormatInfo" /> obiekt jest tylko do odczytu.</exception>
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencyGroupSeparator" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencyGroupSizes" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencySymbol" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencyNegativePattern" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencyPositivePattern" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.NumberDecimalDigits" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentDecimalDigits" />
      </Docs>
    </Member>
    <Member MemberName="CurrencyDecimalSeparator">
      <MemberSignature Language="C#" Value="public string CurrencyDecimalSeparator { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CurrencyDecimalSeparator" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator" />
      <MemberSignature Language="VB.NET" Value="Public Property CurrencyDecimalSeparator As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CurrencyDecimalSeparator { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia ciąg używany jako separator dziesiętny w wartości waluty.</summary>
        <value>Ciąg używany jako separator dziesiętny w wartości waluty. Wartość domyślna dla <see cref="P:System.Globalization.NumberFormatInfo.InvariantInfo" /> jest ".".</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Początkowa wartość tej właściwości jest pochodną ustawienia w **Region i język** w Panelu sterowania.  
  
 <xref:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator%2A> Właściwość jest używana z ciągiem formatem "C" Aby zdefiniować symbol oddzielający całkowitych z cyfr ułamkowych. Aby uzyskać więcej informacji, zobacz [standardowe ciągi formatu liczbowego](~/docs/standard/base-types/standard-numeric-format-strings.md).  
  
   
  
## Examples  
 Poniższy przykład ilustruje efekt zmiany <xref:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator%2A> właściwości.  
  
 [!code-cpp[CurrencyDecimalSeparator#1](~/samples/snippets/cpp/VS_Snippets_CLR/CurrencyDecimalSeparator/CPP/currencydecimalseparator.cpp#1)]
 [!code-csharp[CurrencyDecimalSeparator#1](~/samples/snippets/csharp/VS_Snippets_CLR/CurrencyDecimalSeparator/CS/currencydecimalseparator.cs#1)]
 [!code-vb[CurrencyDecimalSeparator#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CurrencyDecimalSeparator/VB/currencydecimalseparator.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Ustawianie właściwości <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">Ustawiono właściwość i <see cref="T:System.Globalization.NumberFormatInfo" /> obiekt jest tylko do odczytu.</exception>
        <exception cref="T:System.ArgumentException">Właściwość jest ustawiany na pusty ciąg.</exception>
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencyDecimalDigits" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencyGroupSeparator" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencyGroupSizes" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencySymbol" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencyNegativePattern" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencyPositivePattern" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.NumberDecimalSeparator" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentDecimalSeparator" />
      </Docs>
    </Member>
    <Member MemberName="CurrencyGroupSeparator">
      <MemberSignature Language="C#" Value="public string CurrencyGroupSeparator { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CurrencyGroupSeparator" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.NumberFormatInfo.CurrencyGroupSeparator" />
      <MemberSignature Language="VB.NET" Value="Public Property CurrencyGroupSeparator As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CurrencyGroupSeparator { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia ciąg, która oddziela grup cyfr w lewą stronę przecinka w wartości waluty.</summary>
        <value>Ciąg, który rozdziela grup cyfr w lewą stronę przecinka w wartości waluty. Wartość domyślna dla <see cref="P:System.Globalization.NumberFormatInfo.InvariantInfo" /> jest ",".</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Początkowa wartość tej właściwości jest pochodną ustawienia w **regionalne i językowe** w Panelu sterowania.  
  
 <xref:System.Globalization.NumberFormatInfo.CurrencyGroupSeparator%2A> Właściwość jest używana z ciągiem formatem "C" do definiowania symbol oddzielający grup integralną cyfr. Aby uzyskać więcej informacji, zobacz [standardowe ciągi formatu liczbowego](~/docs/standard/base-types/standard-numeric-format-strings.md).  
  
   
  
## Examples  
 Poniższy przykład ilustruje efekt zmiany <xref:System.Globalization.NumberFormatInfo.CurrencyGroupSeparator%2A> właściwości.  
  
 [!code-cpp[CurrencyGroupSeparator#1](~/samples/snippets/cpp/VS_Snippets_CLR/CurrencyGroupSeparator/CPP/currencygroupseparator.cpp#1)]
 [!code-csharp[CurrencyGroupSeparator#1](~/samples/snippets/csharp/VS_Snippets_CLR/CurrencyGroupSeparator/CS/currencygroupseparator.cs#1)]
 [!code-vb[CurrencyGroupSeparator#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CurrencyGroupSeparator/VB/currencygroupseparator.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Ustawianie właściwości <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">Ustawiono właściwość i <see cref="T:System.Globalization.NumberFormatInfo" /> obiekt jest tylko do odczytu.</exception>
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencyDecimalDigits" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencyGroupSizes" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencySymbol" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencyNegativePattern" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencyPositivePattern" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.NumberGroupSeparator" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentGroupSeparator" />
      </Docs>
    </Member>
    <Member MemberName="CurrencyGroupSizes">
      <MemberSignature Language="C#" Value="public int[] CurrencyGroupSizes { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32[] CurrencyGroupSizes" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.NumberFormatInfo.CurrencyGroupSizes" />
      <MemberSignature Language="VB.NET" Value="Public Property CurrencyGroupSizes As Integer()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;int&gt; ^ CurrencyGroupSizes { cli::array &lt;int&gt; ^ get(); void set(cli::array &lt;int&gt; ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia liczbę miejsc po przecinku w każdej grupie, do lewej strony przecinka w wartości waluty.</summary>
        <value>Liczba cyfr w każdej grupie, do lewej strony przecinka w wartości waluty. Wartość domyślna dla <see cref="P:System.Globalization.NumberFormatInfo.InvariantInfo" /> jest tablicą jednowymiarową z tylko jednego elementu, która jest ustawiona na 3.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Globalization.NumberFormatInfo.CurrencyGroupSizes%2A> Właściwość jest używana z ciągiem formatem "C" Aby zdefiniować liczbę cyfr, które pojawiają się w grupach integralną. Aby uzyskać więcej informacji, zobacz [standardowe ciągi formatu liczbowego](~/docs/standard/base-types/standard-numeric-format-strings.md). Każdy element tablicy jednowymiarowej tablicy musi być liczbą całkowitą z zakresu od 1 do 9. Ostatni element może mieć wartości 0.  
  
 Pierwszy element macierzy definiuje liczbę elementów w grupie najmniej znaczący cyfr natychmiast po lewej stronie <xref:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator%2A>. Każdy element kolejnych odwołuje się do następnej grupy znaczących cyfr w lewą stronę poprzedniej grupy. Jeśli jest ostatnim elemencie tablicy nie 0 pozostałych znaków są pogrupowane na podstawie w ostatnim elemencie tablicy. Jeśli ostatni element ma wartość 0, nie są grupowane pozostałych znaków.  
  
 Na przykład jeśli tablica zawiera {3, 4, 5}, cyfry są grupowane podobne do "55,55555,55555,55555,4444,333.00$". Jeśli tablica zawiera {3, 4, 0}, cyfry są grupowane podobne do "55555555555555555,4444,333.00$".  
  
   
  
## Examples  
 Poniższy przykład ilustruje efekt zmiany <xref:System.Globalization.NumberFormatInfo.CurrencyGroupSizes%2A> właściwości.  
  
 [!code-cpp[CurrencyGroupSizes#1](~/samples/snippets/cpp/VS_Snippets_CLR/CurrencyGroupSizes/CPP/currencygroupsizes.cpp#1)]
 [!code-csharp[CurrencyGroupSizes#1](~/samples/snippets/csharp/VS_Snippets_CLR/CurrencyGroupSizes/CS/currencygroupsizes.cs#1)]
 [!code-vb[CurrencyGroupSizes#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CurrencyGroupSizes/VB/currencygroupsizes.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Ustawianie właściwości <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">Ustawiono właściwość i Tablica zawiera wpis, który jest mniejszy niż 0 lub większą niż 9.  
  
 —lub—  
  
 Ustawiono właściwość i Tablica zawiera wpis, niż ostatni wpis, który jest równa 0.</exception>
        <exception cref="T:System.InvalidOperationException">Ustawiono właściwość i <see cref="T:System.Globalization.NumberFormatInfo" /> obiekt jest tylko do odczytu.</exception>
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencyDecimalDigits" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencyGroupSeparator" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencySymbol" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencyNegativePattern" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencyPositivePattern" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.NumberGroupSizes" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentGroupSizes" />
      </Docs>
    </Member>
    <Member MemberName="CurrencyNegativePattern">
      <MemberSignature Language="C#" Value="public int CurrencyNegativePattern { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CurrencyNegativePattern" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.NumberFormatInfo.CurrencyNegativePattern" />
      <MemberSignature Language="VB.NET" Value="Public Property CurrencyNegativePattern As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int CurrencyNegativePattern { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wzorzec formatu ujemnych wartości waluty.</summary>
        <value>Wzorzec formatu ujemnych wartości waluty. Wartość domyślna dla <see cref="P:System.Globalization.NumberFormatInfo.InvariantInfo" /> ma wartość 0, który reprezentuje "($n)", gdzie jest "$" <see cref="P:System.Globalization.NumberFormatInfo.CurrencySymbol" /> i <paramref name="n" /> jest liczbą.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Globalization.NumberFormatInfo.CurrencyNegativePattern%2A> Właściwość jest używana z ciągiem formatem "C" Aby zdefiniować wzorzec ujemnych wartości waluty. Aby uzyskać więcej informacji, zobacz [standardowe ciągi formatu liczbowego](~/docs/standard/base-types/standard-numeric-format-strings.md). Ta właściwość posiada jedną z wartości w tabeli poniżej. Symbol "$" jest <xref:System.Globalization.NumberFormatInfo.CurrencySymbol%2A>, symbol "-" jest <xref:System.Globalization.NumberFormatInfo.NegativeSign%2A>, i `n` jest liczbą.  
  
|Wartość|Wzór skojarzony|  
|-----------|------------------------|  
|0|($n)|  
|1|-$n|  
|2|$-n|  
|3|$n-|  
|4|(n$)|  
|5|$ - n|  
|6|n-$|  
|7|$ n-|  
|8|$ - n|  
|9|-$ n|  
|10|$ n-|  
|11|$ n-|  
|12|$ - n|  
|13|n - $|  
|14|($ n)|  
|15|(n $)|  
  
   
  
## Examples  
 W poniższym przykładzie przedstawiono sposób <xref:System.Globalization.NumberFormatInfo.CurrencyNegativePattern%2A> właściwość definiuje format ujemnych wartości waluty.  Pobiera ona wszystkie określone kultury, które są zdefiniowane na komputerze-hoście, a następnie wyświetli poszczególnych kultur <xref:System.Globalization.NumberFormatInfo.CurrencyNegativePattern%2A> wartość właściwości, jego skojarzony wzorca i numer sformatowane jako wartość walutową.  
  
 [!code-csharp[System.Globalization.NumberFormatInfo.CurrencyNegativePattern#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.numberformatinfo.currencynegativepattern/cs/currencynegativepattern1.cs#1)]
 [!code-vb[System.Globalization.NumberFormatInfo.CurrencyNegativePattern#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.numberformatinfo.currencynegativepattern/vb/currencynegativepattern1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Właściwość jest ustawiany na wartość, która jest mniejsza niż 0 lub większą niż 15.</exception>
        <exception cref="T:System.InvalidOperationException">Ustawiono właściwość i <see cref="T:System.Globalization.NumberFormatInfo" /> obiekt jest tylko do odczytu.</exception>
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencyDecimalDigits" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencyGroupSeparator" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencyGroupSizes" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencySymbol" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencyPositivePattern" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.NumberNegativePattern" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentNegativePattern" />
      </Docs>
    </Member>
    <Member MemberName="CurrencyPositivePattern">
      <MemberSignature Language="C#" Value="public int CurrencyPositivePattern { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CurrencyPositivePattern" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.NumberFormatInfo.CurrencyPositivePattern" />
      <MemberSignature Language="VB.NET" Value="Public Property CurrencyPositivePattern As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int CurrencyPositivePattern { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wzorzec formatu dodatnich wartości waluty.</summary>
        <value>Wzorzec formatu dodatnich wartości waluty. Wartość domyślna dla <see cref="P:System.Globalization.NumberFormatInfo.InvariantInfo" /> ma wartość 0, który reprezentuje "$n", gdzie jest "$" <see cref="P:System.Globalization.NumberFormatInfo.CurrencySymbol" /> i <paramref name="n" /> jest liczbą.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A> Właściwość jest używana z ciągiem formatem "C" Aby zdefiniować wzorzec dodatnich wartości waluty. Aby uzyskać więcej informacji, zobacz [standardowe ciągi formatu liczbowego](~/docs/standard/base-types/standard-numeric-format-strings.md). Ta właściwość posiada jedną z wartości w tabeli poniżej. Symbol "$" jest <xref:System.Globalization.NumberFormatInfo.CurrencySymbol%2A> i `n` jest liczbą.  
  
|Wartość|Wzór skojarzony|  
|-----------|------------------------|  
|0|$n|  
|1|n$|  
|2|$ n|  
|3|n $|  
  
 Pamiętaj, że wzorzec nie obsługują znak dodatni.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Właściwość jest ustawiany na wartość, która jest mniejsza niż 0 lub większy niż 3.</exception>
        <exception cref="T:System.InvalidOperationException">Ustawiono właściwość i <see cref="T:System.Globalization.NumberFormatInfo" /> obiekt jest tylko do odczytu.</exception>
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencyDecimalDigits" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencyGroupSeparator" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencyGroupSizes" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencySymbol" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencyNegativePattern" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentPositivePattern" />
      </Docs>
    </Member>
    <Member MemberName="CurrencySymbol">
      <MemberSignature Language="C#" Value="public string CurrencySymbol { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CurrencySymbol" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.NumberFormatInfo.CurrencySymbol" />
      <MemberSignature Language="VB.NET" Value="Public Property CurrencySymbol As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CurrencySymbol { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia ciąg, który ma być używana jako symbol waluty.</summary>
        <value>Ciąg, który ma być używana jako symbol waluty. Wartość domyślna dla <see cref="P:System.Globalization.NumberFormatInfo.InvariantInfo" /> jest "¤".</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ciąg znaków przypisany do <xref:System.Globalization.NumberFormatInfo.CurrencySymbol%2A> właściwości jest uwzględniona w parametrach wynik, gdy wartość liczbowa jest sformatowany w systemie "C" [ciągu standardowego formatu liczbowego](~/docs/standard/base-types/standard-numeric-format-strings.md).  
  
   
  
## Examples  
 Poniższy przykład wyświetla symbol waluty dla bieżącej kultury i ciągu standardowego formatu liczbowego "C" jest używany do formatowania wartości waluty.  
  
 [!code-csharp[System.Globalization.NumberFormatInfo.CurrencySymbol#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.numberformatinfo.currencysymbol/cs/currencysymbolex1.cs#1)]
 [!code-vb[System.Globalization.NumberFormatInfo.CurrencySymbol#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.numberformatinfo.currencysymbol/vb/currencysymbolex1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Ustawianie właściwości <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">Ustawiono właściwość i <see cref="T:System.Globalization.NumberFormatInfo" /> obiekt jest tylko do odczytu.</exception>
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencyDecimalDigits" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencyGroupSeparator" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencyGroupSizes" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencyNegativePattern" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencyPositivePattern" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.NaNSymbol" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentSymbol" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.PerMilleSymbol" />
      </Docs>
    </Member>
    <Member MemberName="CurrentInfo">
      <MemberSignature Language="C#" Value="public static System.Globalization.NumberFormatInfo CurrentInfo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Globalization.NumberFormatInfo CurrentInfo" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.NumberFormatInfo.CurrentInfo" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property CurrentInfo As NumberFormatInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Globalization::NumberFormatInfo ^ CurrentInfo { System::Globalization::NumberFormatInfo ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.NumberFormatInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera tylko do odczytu <see cref="T:System.Globalization.NumberFormatInfo" /> które formatuje wartości oparte na bieżącej kultury.</summary>
        <value>Tylko do odczytu <see cref="T:System.Globalization.NumberFormatInfo" /> oparte na kulturę bieżącego wątku.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Trwa pobieranie <xref:System.Globalization.NumberFormatInfo> obiekt z <xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A> właściwości jest odpowiednikiem pobierania <xref:System.Globalization.NumberFormatInfo> obiekt z `CultureInfo.CurrentCulture.NumberFormat` właściwości.  
  
   
  
## Examples  
 W poniższym przykładzie pokazano, że obiekty zwrócone przez <xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A> i `CultureInfo.CurrentCulture.NumberFormat` właściwości są identyczne. Następnie używa odbicia do wyświetlania wartości właściwości <xref:System.Globalization.NumberFormatInfo> obiektu zwróconego przez <xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A> właściwości w systemie, w których bieżącej kultury jest en US.  
  
 [!code-csharp[System.Globalization.NumberFormatInfo.CurrentInfo#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.numberformatinfo.currentinfo/cs/currentinfo1.cs#1)]
 [!code-vb[System.Globalization.NumberFormatInfo.CurrentInfo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.numberformatinfo.currentinfo/vb/currentinfo1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Globalization.CultureInfo" />
        <altmember cref="P:System.Globalization.CultureInfo.NumberFormat" />
      </Docs>
    </Member>
    <Member MemberName="DigitSubstitution">
      <MemberSignature Language="C#" Value="public System.Globalization.DigitShapes DigitSubstitution { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Globalization.DigitShapes DigitSubstitution" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.NumberFormatInfo.DigitSubstitution" />
      <MemberSignature Language="VB.NET" Value="Public Property DigitSubstitution As DigitShapes" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Globalization::DigitShapes DigitSubstitution { System::Globalization::DigitShapes get(); void set(System::Globalization::DigitShapes value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Globalization.DigitShapes</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość określającą sposób graficzny interfejs użytkownika wyświetla kształtu cyfrę.</summary>
        <value>Jedna z wartości wyliczenia, które określa kształt cyfrę specyficzne dla kultury.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <xref:System.Globalization.NumberFormatInfo.DigitSubstitution%2A> Właściwość jest zarezerwowana do użytku w przyszłości. Obecnie nie jest używany na potrzeby analizy lub formatowania operacje dla bieżącego <xref:System.Globalization.NumberFormatInfo> obiektu.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Bieżący <see cref="T:System.Globalization.NumberFormatInfo" /> obiekt jest tylko do odczytu.</exception>
        <exception cref="T:System.ArgumentException">Wartość w operacji set nie jest prawidłową <see cref="T:System.Globalization.DigitShapes" /> wartość.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetFormat">
      <MemberSignature Language="C#" Value="public object GetFormat (Type formatType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetFormat(class System.Type formatType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.NumberFormatInfo.GetFormat(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetFormat (formatType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ GetFormat(Type ^ formatType);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IFormatProvider.GetFormat(System.Type)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="formatType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="formatType">
          <see cref="T:System.Type" /> Wymaganego formatowania usługi.</param>
        <summary>Pobiera obiekt określonego typu, który udostępnia usługę formatowania liczb.</summary>
        <returns>Bieżący <see cref="T:System.Globalization.NumberFormatInfo" />, jeśli <paramref name="formatType" /> jest taki sam jak typ bieżącego <see cref="T:System.Globalization.NumberFormatInfo" />; w przeciwnym razie <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `Format(String, IFormatProvider)` Metod obsługiwanych przez podstawowe typy danych wywołania tej metody podczas bieżącej <xref:System.Globalization.NumberFormatInfo> jest przekazywany jako <xref:System.IFormatProvider> parametru. Ta metoda implementuje <xref:System.IFormatProvider.GetFormat%2A?displayProperty=nameWithType>.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IFormatProvider" />
        <altmember cref="M:System.Globalization.DateTimeFormatInfo.GetFormat(System.Type)" />
      </Docs>
    </Member>
    <Member MemberName="GetInstance">
      <MemberSignature Language="C#" Value="public static System.Globalization.NumberFormatInfo GetInstance (IFormatProvider formatProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Globalization.NumberFormatInfo GetInstance(class System.IFormatProvider formatProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.NumberFormatInfo.GetInstance(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetInstance (formatProvider As IFormatProvider) As NumberFormatInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Globalization::NumberFormatInfo ^ GetInstance(IFormatProvider ^ formatProvider);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.NumberFormatInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="formatProvider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="formatProvider">
          <see cref="T:System.IFormatProvider" /> Używany do pobierania <see cref="T:System.Globalization.NumberFormatInfo" />.  
  
 —lub—  
  
 <see langword="null" /> Aby uzyskać <see cref="P:System.Globalization.NumberFormatInfo.CurrentInfo" />.</param>
        <summary>Pobiera <see cref="T:System.Globalization.NumberFormatInfo" /> skojarzonego z określonym <see cref="T:System.IFormatProvider" />.</summary>
        <returns>
          <see cref="T:System.Globalization.NumberFormatInfo" /> Skojarzonego z określonym <see cref="T:System.IFormatProvider" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda używa <xref:System.IFormatProvider.GetFormat%2A?displayProperty=nameWithType> metody `formatProvider` przy użyciu <xref:System.Globalization.NumberFormatInfo> jako parametr typu. Jeśli `formatProvider` jest `null` lub, jeśli <xref:System.IFormatProvider.GetFormat%2A?displayProperty=nameWithType> zwraca `null`, ta metoda zwraca <xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A>.  
  
 Aplikacja pobiera <xref:System.Globalization.NumberFormatInfo> obiektu dla określonej kultury przy użyciu jednej z następujących metod:  
  
-   Za pomocą <xref:System.Globalization.CultureInfo.NumberFormat%2A?displayProperty=nameWithType> właściwości.  
  
-   Za pomocą <xref:System.Globalization.NumberFormatInfo.GetInstance%2A> metody gdzie `provider` jest <xref:System.Globalization.CultureInfo>.  
  
 A <xref:System.Globalization.NumberFormatInfo> obiekt jest tworzony tylko w przypadku Niezmienna kultura lub dla określonej kultury, a nie dla kultury neutralnej. Aby uzyskać więcej informacji na temat Niezmienna kultura, określone kultury i neutralne kultury, zobacz <xref:System.Globalization.CultureInfo> klasy.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IFormatProvider" />
      </Docs>
    </Member>
    <Member MemberName="InvariantInfo">
      <MemberSignature Language="C#" Value="public static System.Globalization.NumberFormatInfo InvariantInfo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Globalization.NumberFormatInfo InvariantInfo" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.NumberFormatInfo.InvariantInfo" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property InvariantInfo As NumberFormatInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Globalization::NumberFormatInfo ^ InvariantInfo { System::Globalization::NumberFormatInfo ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.NumberFormatInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera tylko do odczytu <see cref="T:System.Globalization.NumberFormatInfo" /> obiekt, który jest niezależny od kultury (niezmiennej).</summary>
        <value>Obiekt tylko do odczytu, który jest niezależny od kultury (niezmiennego).</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 To <xref:System.Globalization.NumberFormatInfo> nie powoduje zmiany obiektu zwróconego przez tę właściwość, niezależnie od bieżącej kultury. Reprezentuje Konwencji formatowania z kulturą niezmienną jest kulturą skojarzone z języka angielskiego, ale nie z dowolnym kraju/regionu. Niezmienna kultura jest używany w formatowaniu operacje, które są niezależne od kultury lub który utworzyć ciągów wynikowych odpowiednią do wyświetlania przez wiele kultur.  
  
   
  
## Examples  
 W poniższym przykładzie przedstawiono domyślne wartości właściwości <xref:System.Globalization.NumberFormatInfo.InvariantInfo%2A>.  
  
 [!code-cpp[System.Globalization.NumberFormatInfo.InvariantInfo#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.NumberFormatInfo.InvariantInfo/CPP/invariantinfo.cpp#1)]
 [!code-csharp[System.Globalization.NumberFormatInfo.InvariantInfo#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.NumberFormatInfo.InvariantInfo/CS/invariantinfo.cs#1)]
 [!code-vb[System.Globalization.NumberFormatInfo.InvariantInfo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.NumberFormatInfo.InvariantInfo/VB/invariantinfo.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.NumberFormatInfo.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsReadOnly { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość wskazującą, czy to <see cref="T:System.Globalization.NumberFormatInfo" /> obiekt jest tylko do odczytu.</summary>
        <value>
          <see langword="true" /> Jeśli <see cref="T:System.Globalization.NumberFormatInfo" /> jest tylko do odczytu; w przeciwnym razie <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Podjęto próbę przypisania do właściwości tylko do odczytu <xref:System.Globalization.NumberFormatInfo> powoduje, że <xref:System.InvalidOperationException>.  
  
 Możesz wywołać <xref:System.Globalization.NumberFormatInfo.Clone%2A> metodę w celu utworzenia odczytu/zapisu <xref:System.Globalization.NumberFormatInfo> obiektu z obiektu tylko do odczytu, jak pokazano w poniższym przykładzie.  
  
 [!code-csharp[System.Globalization.NumberFormatInfo.IsReadOnly#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.numberformatinfo.isreadonly/cs/isreadonly1.cs#1)]
 [!code-vb[System.Globalization.NumberFormatInfo.IsReadOnly#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.numberformatinfo.isreadonly/vb/isreadonly1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Globalization.NumberFormatInfo.ReadOnly(System.Globalization.NumberFormatInfo)" />
      </Docs>
    </Member>
    <Member MemberName="NaNSymbol">
      <MemberSignature Language="C#" Value="public string NaNSymbol { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string NaNSymbol" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.NumberFormatInfo.NaNSymbol" />
      <MemberSignature Language="VB.NET" Value="Public Property NaNSymbol As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ NaNSymbol { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia ciąg reprezentujący wartość IEEE NaN (nieliczbową).</summary>
        <value>Ciąg reprezentujący wartość IEEE NaN (nieliczbową). Wartość domyślna dla <see cref="P:System.Globalization.NumberFormatInfo.InvariantInfo" /> jest "NaN".</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby uzyskać więcej informacji o wartości NaN, zobacz <xref:System.Double> lub <xref:System.Single>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Ustawianie właściwości <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">Ustawiono właściwość i <see cref="T:System.Globalization.NumberFormatInfo" /> obiekt jest tylko do odczytu.</exception>
        <altmember cref="P:System.Globalization.NumberFormatInfo.PositiveInfinitySymbol" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.NegativeInfinitySymbol" />
      </Docs>
    </Member>
    <Member MemberName="NativeDigits">
      <MemberSignature Language="C#" Value="public string[] NativeDigits { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] NativeDigits" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.NumberFormatInfo.NativeDigits" />
      <MemberSignature Language="VB.NET" Value="Public Property NativeDigits As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::String ^&gt; ^ NativeDigits { cli::array &lt;System::String ^&gt; ^ get(); void set(cli::array &lt;System::String ^&gt; ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia odpowiednikiem Western cyfry od 0 do 9 cyfr natywnej tablicy ciągów.</summary>
        <value>Tablica ciągu, która zawiera natywny odpowiednikiem Western cyfry od 0 do 9. Wartość domyślna to tablicy o elementów "0", "1", "2", "3", "4", "5", "6", "7", "8" i "9".</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  Zestaw znaków, który jest określony przez <xref:System.Globalization.NumberFormatInfo.NativeDigits%2A> właściwość nie ma wpływu na analizowanie lub operacji formatowania. Tylko podstawowe alfabetu łacińskiego cyfry od 0 (U + 0030) do 9 (U + 0039) są używane podczas formatowania lub analizowania wartości daty i godziny lub wartości liczbowe.  
  
   
  
## Examples  
 W poniższym przykładzie pokazano <xref:System.Globalization.NumberFormatInfo.NativeDigits%2A> właściwości.  
  
 [!code-cpp[sys.glob.NFI.nativeDigits#1](~/samples/snippets/cpp/VS_Snippets_CLR/sys.glob.NFI.nativeDigits/cpp/nd.cpp#1)]
 [!code-csharp[sys.glob.NFI.nativeDigits#1](~/samples/snippets/csharp/VS_Snippets_CLR/sys.glob.NFI.nativeDigits/cs/nd.cs#1)]
 [!code-vb[sys.glob.NFI.nativeDigits#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/sys.glob.NFI.nativeDigits/vb/nd.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Bieżący <see cref="T:System.Globalization.NumberFormatInfo" /> obiekt jest tylko do odczytu.</exception>
        <exception cref="T:System.ArgumentNullException">W operacji set, wartość jest <see langword="null" />.  
  
 —lub—  
  
 W ramach operacji zestawu jest element tablicy wartości <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">W ramach operacji set tablicy wartości nie zawiera 10 elementów.  
  
 —lub—  
  
 W ramach operacji set element tablicy wartości nie zawiera pojedyncze <see cref="T:System.Char" /> obiektu dysków lub para <see cref="T:System.Char" /> obiektów wchodzących w skład para zastępcza.  
  
 —lub—  
  
 W ramach operacji set element tablicy wartości nie jest liczba cyfr, zgodnie z definicją w [Unicode Standard](http://go.microsoft.com/fwlink/?linkid=37123). Oznacza to, że wartości określonej w elemencie tablicy nie ma Unicode <see langword="Number, Decimal Digit" /> wartości kategorii Ogólne (Nd).  
  
 —lub—  
  
 W ramach operacji set wartość liczbową elementu w tablicy wartości nie odpowiada położenie elementu w tablicy. Oznacza to, że element pod indeksem 0, który jest pierwszym elementem tablicy, nie ma wartość liczbową 0 lub element pod indeksem 1 ma wartość liczbową 1.</exception>
        <altmember cref="T:System.Globalization.DigitShapes" />
      </Docs>
    </Member>
    <Member MemberName="NegativeInfinitySymbol">
      <MemberSignature Language="C#" Value="public string NegativeInfinitySymbol { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string NegativeInfinitySymbol" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.NumberFormatInfo.NegativeInfinitySymbol" />
      <MemberSignature Language="VB.NET" Value="Public Property NegativeInfinitySymbol As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ NegativeInfinitySymbol { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia ciąg, który reprezentuje nieskończoności ujemnej.</summary>
        <value>Ciąg, który reprezentuje nieskończoności ujemnej. Wartość domyślna dla <see cref="P:System.Globalization.NumberFormatInfo.InvariantInfo" /> jest "— wartości Infinity".</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby uzyskać więcej informacji dotyczących nieskończoności ujemnej, zobacz <xref:System.Double> lub <xref:System.Single>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Ustawianie właściwości <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">Ustawiono właściwość i <see cref="T:System.Globalization.NumberFormatInfo" /> obiekt jest tylko do odczytu.</exception>
        <altmember cref="P:System.Globalization.NumberFormatInfo.PositiveInfinitySymbol" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.NaNSymbol" />
      </Docs>
    </Member>
    <Member MemberName="NegativeSign">
      <MemberSignature Language="C#" Value="public string NegativeSign { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string NegativeSign" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.NumberFormatInfo.NegativeSign" />
      <MemberSignature Language="VB.NET" Value="Public Property NegativeSign As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ NegativeSign { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia ciąg, który oznacza, że skojarzona liczba jest ujemna.</summary>
        <value>Ciąg, który oznacza, że skojarzona liczba jest ujemna. Wartość domyślna dla <see cref="P:System.Globalization.NumberFormatInfo.InvariantInfo" /> jest "-".</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość jest używana zarówno formatowanie i analizowania operacji. Aby uzyskać więcej informacji, użyj jej w operacji formatowania, zobacz [standardowe ciągi formatu liczbowego](~/docs/standard/base-types/standard-numeric-format-strings.md) i [niestandardowe ciągi formatów liczbowych](~/docs/standard/base-types/custom-numeric-format-strings.md) tematów.  
  
   
  
## Examples  
 Poniższy przykład tworzy odczytu i zapisu <xref:System.Globalization.CultureInfo> obiekt, który reprezentuje Niezmienna kultura i przypisuje znak NADKREŚLENIA (U + 203E) do jego <xref:System.Globalization.NumberFormatInfo.NegativeSign%2A> właściwości. Następnie używa to <xref:System.Globalization.CultureInfo> obiekt do formatu tablicę ujemnej liczby zmiennoprzecinkowe.  
  
 [!code-csharp[System.Globalization.NumberFormatInfo.NegativeSign#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.numberformatinfo.negativesign/cs/negativesign1.cs#1)]
 [!code-vb[System.Globalization.NumberFormatInfo.NegativeSign#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.numberformatinfo.negativesign/vb/negativesign1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Ustawianie właściwości <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">Ustawiono właściwość i <see cref="T:System.Globalization.NumberFormatInfo" /> obiekt jest tylko do odczytu.</exception>
        <altmember cref="P:System.Globalization.NumberFormatInfo.PositiveSign" />
      </Docs>
    </Member>
    <Member MemberName="NumberDecimalDigits">
      <MemberSignature Language="C#" Value="public int NumberDecimalDigits { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 NumberDecimalDigits" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.NumberFormatInfo.NumberDecimalDigits" />
      <MemberSignature Language="VB.NET" Value="Public Property NumberDecimalDigits As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int NumberDecimalDigits { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia liczbę miejsc dziesiętnych do użycia w wartości liczbowych.</summary>
        <value>Liczba miejsc dziesiętnych do użycia w wartości liczbowych. Wartość domyślna dla <see cref="P:System.Globalization.NumberFormatInfo.InvariantInfo" /> 2.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Globalization.NumberFormatInfo.NumberDecimalDigits%2A> Właściwość jest używana z ciągami formatem "F" i "N" bez Specyfikator dokładności, w operacji formatowanie liczbowe. Definiuje domyślną liczbę cyfr ułamkowych występujących po separatorze dziesiętnym. Ta wartość jest wyłączona, jeśli jest używany przez Specyfikator dokładności. Aby uzyskać więcej informacji, zobacz [standardowe ciągi formatu liczbowego](~/docs/standard/base-types/standard-numeric-format-strings.md).  
  
   
  
## Examples  
 Poniższy przykład ilustruje efekt zmiany <xref:System.Globalization.NumberFormatInfo.NumberDecimalDigits%2A> właściwości.  
  
 [!code-cpp[NumberDecimalDigits#1](~/samples/snippets/cpp/VS_Snippets_CLR/NumberDecimalDigits/CPP/numberdecimaldigits.cpp#1)]
 [!code-csharp[NumberDecimalDigits#1](~/samples/snippets/csharp/VS_Snippets_CLR/NumberDecimalDigits/CS/numberdecimaldigits.cs#1)]
 [!code-vb[NumberDecimalDigits#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/NumberDecimalDigits/VB/numberdecimaldigits.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Właściwość jest ustawiany na wartość, która jest mniejsza niż 0 lub większą niż 99.</exception>
        <exception cref="T:System.InvalidOperationException">Ustawiono właściwość i <see cref="T:System.Globalization.NumberFormatInfo" /> obiekt jest tylko do odczytu.</exception>
        <altmember cref="P:System.Globalization.NumberFormatInfo.NumberDecimalSeparator" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.NumberGroupSeparator" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.NumberGroupSizes" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.NaNSymbol" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.NumberNegativePattern" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencyDecimalDigits" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentDecimalDigits" />
      </Docs>
    </Member>
    <Member MemberName="NumberDecimalSeparator">
      <MemberSignature Language="C#" Value="public string NumberDecimalSeparator { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string NumberDecimalSeparator" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.NumberFormatInfo.NumberDecimalSeparator" />
      <MemberSignature Language="VB.NET" Value="Public Property NumberDecimalSeparator As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ NumberDecimalSeparator { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia ciąg używany jako separator dziesiętny w wartości liczbowych.</summary>
        <value>Ciąg używany jako separator dziesiętny w wartości liczbowych. Wartość domyślna dla <see cref="P:System.Globalization.NumberFormatInfo.InvariantInfo" /> jest ".".</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Globalization.NumberFormatInfo.NumberDecimalSeparator%2A> Właściwość jest używana z ciągami standardowy format "E", "F", "G", "N" i "R" Aby zdefiniować symbol oddzielający całkowitych z cyfr ułamkowych. Aby uzyskać więcej informacji, zobacz [standardowe ciągi formatu liczbowego](~/docs/standard/base-types/standard-numeric-format-strings.md).  
  
 Początkowa wartość tej właściwości jest pochodną ustawienia w **Region i język** w Panelu sterowania.  
  
   
  
## Examples  
 Poniższy przykład ilustruje efekt zmiany <xref:System.Globalization.NumberFormatInfo.NumberDecimalSeparator%2A> właściwości.  
  
 [!code-cpp[NumberDecimalSeparator#1](~/samples/snippets/cpp/VS_Snippets_CLR/NumberDecimalSeparator/CPP/numberdecimalseparator.cpp#1)]
 [!code-csharp[NumberDecimalSeparator#1](~/samples/snippets/csharp/VS_Snippets_CLR/NumberDecimalSeparator/CS/numberdecimalseparator.cs#1)]
 [!code-vb[NumberDecimalSeparator#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/NumberDecimalSeparator/VB/numberdecimalseparator.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Ustawianie właściwości <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">Ustawiono właściwość i <see cref="T:System.Globalization.NumberFormatInfo" /> obiekt jest tylko do odczytu.</exception>
        <exception cref="T:System.ArgumentException">Właściwość jest ustawiany na pusty ciąg.</exception>
        <altmember cref="P:System.Globalization.NumberFormatInfo.NumberDecimalDigits" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.NumberGroupSeparator" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.NumberGroupSizes" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.NaNSymbol" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.NumberNegativePattern" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentDecimalSeparator" />
      </Docs>
    </Member>
    <Member MemberName="NumberGroupSeparator">
      <MemberSignature Language="C#" Value="public string NumberGroupSeparator { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string NumberGroupSeparator" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.NumberFormatInfo.NumberGroupSeparator" />
      <MemberSignature Language="VB.NET" Value="Public Property NumberGroupSeparator As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ NumberGroupSeparator { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia ciąg, która oddziela grup cyfr w lewą stronę przecinka w wartości liczbowych.</summary>
        <value>Ciąg, który rozdziela grup cyfr w lewą stronę przecinka w wartości liczbowych. Wartość domyślna dla <see cref="P:System.Globalization.NumberFormatInfo.InvariantInfo" /> jest ",".</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A> Właściwość jest używana z ciągiem "N" formatem do definiowania symbol oddzielający grup integralną cyfr. Aby uzyskać więcej informacji, zobacz [standardowe ciągi formatu liczbowego](~/docs/standard/base-types/standard-numeric-format-strings.md).  
  
 Początkowa wartość tej właściwości jest pochodną ustawienia w **Region i język** w Panelu sterowania.  
  
   
  
## Examples  
 Poniższy przykład ilustruje efekt zmiany <xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A> właściwości.  
  
 [!code-cpp[NumberGroupSeparator#1](~/samples/snippets/cpp/VS_Snippets_CLR/NumberGroupSeparator/CPP/numbergroupseparator.cpp#1)]
 [!code-csharp[NumberGroupSeparator#1](~/samples/snippets/csharp/VS_Snippets_CLR/NumberGroupSeparator/CS/numbergroupseparator.cs#1)]
 [!code-vb[NumberGroupSeparator#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/NumberGroupSeparator/VB/numbergroupseparator.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Ustawianie właściwości <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">Ustawiono właściwość i <see cref="T:System.Globalization.NumberFormatInfo" /> obiekt jest tylko do odczytu.</exception>
        <altmember cref="P:System.Globalization.NumberFormatInfo.NumberDecimalDigits" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.NumberDecimalSeparator" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.NumberGroupSizes" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.NaNSymbol" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.NumberNegativePattern" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencyGroupSeparator" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentGroupSeparator" />
      </Docs>
    </Member>
    <Member MemberName="NumberGroupSizes">
      <MemberSignature Language="C#" Value="public int[] NumberGroupSizes { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32[] NumberGroupSizes" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.NumberFormatInfo.NumberGroupSizes" />
      <MemberSignature Language="VB.NET" Value="Public Property NumberGroupSizes As Integer()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;int&gt; ^ NumberGroupSizes { cli::array &lt;int&gt; ^ get(); void set(cli::array &lt;int&gt; ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia liczbę miejsc po przecinku w każdej grupie, do lewej strony przecinka w wartości liczbowych.</summary>
        <value>Liczba cyfr w każdej grupie, do lewej strony przecinka w wartości liczbowych. Wartość domyślna dla <see cref="P:System.Globalization.NumberFormatInfo.InvariantInfo" /> jest tablicą jednowymiarową z tylko jednego elementu, która jest ustawiona na 3.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wartość <xref:System.Globalization.NumberFormatInfo.NumberGroupSizes%2A> właściwość ma wpływ na wynik wartości liczbowe, które są sformatowane przy użyciu "N". Niestandardowe liczbowe formatowania ciągu lub innych standardowych formatujące są używane ciągi, wartość <xref:System.Globalization.NumberFormatInfo.NumberGroupSizes%2A> właściwość jest ignorowana.  
  
 Każdy element tablicy jednowymiarowej tablicy musi być liczbą całkowitą z zakresu od 1 do 9. Ostatni element może mieć wartości 0.  
  
 Pierwszy element macierzy definiuje liczbę elementów w grupie najmniej znaczący cyfr natychmiast po lewej stronie <xref:System.Globalization.NumberFormatInfo.NumberDecimalSeparator%2A>. Każdy element kolejnych odwołuje się do następnej grupy znaczących cyfr w lewą stronę poprzedniej grupy. Jeśli jest ostatnim elemencie tablicy nie 0 pozostałych znaków są pogrupowane na podstawie w ostatnim elemencie tablicy. Jeśli ostatni element ma wartość 0, nie są grupowane pozostałych znaków.  
  
 Na przykład jeśli tablica zawiera {3, 4, 5}, cyfry są grupowane podobne do "55,55555,55555,55555,4444,333.00". Jeśli tablica zawiera {3, 4, 0}, cyfry są grupowane podobne do "55555555555555555,4444,333.00".  
  
   
  
## Examples  
 Poniższy przykład ilustruje efekt zmiany <xref:System.Globalization.NumberFormatInfo.NumberGroupSizes%2A> właściwości.  
  
 [!code-cpp[NumberGroupSizes#1](~/samples/snippets/cpp/VS_Snippets_CLR/NumberGroupSizes/CPP/numbergroupsizes.cpp#1)]
 [!code-csharp[NumberGroupSizes#1](~/samples/snippets/csharp/VS_Snippets_CLR/NumberGroupSizes/CS/numbergroupsizes.cs#1)]
 [!code-vb[NumberGroupSizes#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/NumberGroupSizes/VB/numbergroupsizes.vb#1)]  
  
 Poniższy przykład wyświetla wartość przy użyciu różnych <xref:System.Globalization.NumberFormatInfo.NumberGroupSizes%2A> tablic.  
  
 [!code-cpp[Classic NumberFormatInfo.NumberGroupSizes Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic NumberFormatInfo.NumberGroupSizes Example/CPP/source.cpp#1)]
 [!code-csharp[Classic NumberFormatInfo.NumberGroupSizes Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic NumberFormatInfo.NumberGroupSizes Example/CS/source.cs#1)]
 [!code-vb[Classic NumberFormatInfo.NumberGroupSizes Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic NumberFormatInfo.NumberGroupSizes Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Ustawianie właściwości <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">Ustawiono właściwość i Tablica zawiera wpis, który jest mniejszy niż 0 lub większą niż 9.  
  
 —lub—  
  
 Ustawiono właściwość i Tablica zawiera wpis, niż ostatni wpis, który jest równa 0.</exception>
        <exception cref="T:System.InvalidOperationException">Ustawiono właściwość i <see cref="T:System.Globalization.NumberFormatInfo" /> obiekt jest tylko do odczytu.</exception>
        <altmember cref="P:System.Globalization.NumberFormatInfo.NumberDecimalDigits" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.NumberDecimalSeparator" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.NumberGroupSeparator" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.NaNSymbol" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.NumberNegativePattern" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencyGroupSizes" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentGroupSizes" />
      </Docs>
    </Member>
    <Member MemberName="NumberNegativePattern">
      <MemberSignature Language="C#" Value="public int NumberNegativePattern { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 NumberNegativePattern" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.NumberFormatInfo.NumberNegativePattern" />
      <MemberSignature Language="VB.NET" Value="Public Property NumberNegativePattern As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int NumberNegativePattern { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wzorzec formatu ujemne wartości liczbowych.</summary>
        <value>Wzorzec formatu liczbowego wartości ujemnych.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Globalization.NumberFormatInfo.NumberNegativePattern%2A> Właściwość definiuje format wartości ujemnych sformatowane przy użyciu ciągu standardowego formatu liczbowego "N". Ta właściwość posiada jedną z wartości w tabeli poniżej. Symbol "-" jest <xref:System.Globalization.NumberFormatInfo.NegativeSign%2A> i `n` jest liczbą.  
  
|Wartość|Wzór skojarzony|  
|-----------|------------------------|  
|0|(n)|  
|1|-n|  
|2|-n|  
|3|n-|  
|4|n -|  
  
 Wartość domyślna dla Niezmienna kultura zwrócony przez <xref:System.Globalization.NumberFormatInfo.InvariantInfo%2A> właściwość ma wartość 1, który reprezentuje "-n", gdzie *n* jest liczbą.  
  
   
  
## Examples  
 W poniższym przykładzie przedstawiono wartość przy użyciu różnych <xref:System.Globalization.NumberFormatInfo.NumberNegativePattern%2A> wzorców.  
  
 [!code-cpp[Classic NumberFormatInfo.NumberNegativePattern Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic NumberFormatInfo.NumberNegativePattern Example/CPP/source.cpp#1)]
 [!code-csharp[Classic NumberFormatInfo.NumberNegativePattern Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic NumberFormatInfo.NumberNegativePattern Example/CS/source.cs#1)]
 [!code-vb[Classic NumberFormatInfo.NumberNegativePattern Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic NumberFormatInfo.NumberNegativePattern Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Właściwość jest ustawiany na wartość, która jest mniejsza niż 0 lub większą niż 4.</exception>
        <exception cref="T:System.InvalidOperationException">Ustawiono właściwość i <see cref="T:System.Globalization.NumberFormatInfo" /> obiekt jest tylko do odczytu.</exception>
        <altmember cref="P:System.Globalization.NumberFormatInfo.NumberDecimalDigits" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.NumberDecimalSeparator" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.NumberGroupSeparator" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.NumberGroupSizes" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.NaNSymbol" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencyNegativePattern" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentNegativePattern" />
      </Docs>
    </Member>
    <Member MemberName="PercentDecimalDigits">
      <MemberSignature Language="C#" Value="public int PercentDecimalDigits { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 PercentDecimalDigits" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.NumberFormatInfo.PercentDecimalDigits" />
      <MemberSignature Language="VB.NET" Value="Public Property PercentDecimalDigits As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int PercentDecimalDigits { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia liczbę miejsc dziesiętnych do użycia w wartości procentowe.</summary>
        <value>Liczba miejsc dziesiętnych do użycia w wartości procentowe. Wartość domyślna dla <see cref="P:System.Globalization.NumberFormatInfo.InvariantInfo" /> 2.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Globalization.NumberFormatInfo.PercentDecimalDigits%2A> Właściwość jest używana z ciągiem "P" formatem bez Specyfikator dokładności, w operacji formatowanie liczbowe. Definiuje domyślną liczbę cyfr ułamkowych występujących po separatorze dziesiętnym. Ta wartość jest wyłączona, jeśli jest używany przez Specyfikator dokładności. Aby uzyskać więcej informacji, zobacz [standardowe ciągi formatu liczbowego](~/docs/standard/base-types/standard-numeric-format-strings.md).  
  
   
  
## Examples  
 Poniższy przykład ilustruje efekt zmiany <xref:System.Globalization.NumberFormatInfo.PercentDecimalDigits%2A> właściwości.  
  
 [!code-cpp[PercentDecimalDigits#1](~/samples/snippets/cpp/VS_Snippets_CLR/PercentDecimalDigits/CPP/percentdecimaldigits.cpp#1)]
 [!code-csharp[PercentDecimalDigits#1](~/samples/snippets/csharp/VS_Snippets_CLR/PercentDecimalDigits/CS/percentdecimaldigits.cs#1)]
 [!code-vb[PercentDecimalDigits#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/PercentDecimalDigits/VB/percentdecimaldigits.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Właściwość jest ustawiany na wartość, która jest mniejsza niż 0 lub większą niż 99.</exception>
        <exception cref="T:System.InvalidOperationException">Ustawiono właściwość i <see cref="T:System.Globalization.NumberFormatInfo" /> obiekt jest tylko do odczytu.</exception>
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentDecimalSeparator" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentGroupSeparator" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentGroupSizes" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentSymbol" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentNegativePattern" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentPositivePattern" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencyDecimalDigits" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.NumberDecimalDigits" />
      </Docs>
    </Member>
    <Member MemberName="PercentDecimalSeparator">
      <MemberSignature Language="C#" Value="public string PercentDecimalSeparator { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PercentDecimalSeparator" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.NumberFormatInfo.PercentDecimalSeparator" />
      <MemberSignature Language="VB.NET" Value="Public Property PercentDecimalSeparator As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ PercentDecimalSeparator { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia ciąg używany jako separator dziesiętny w wartości procentowe.</summary>
        <value>Ciąg używany jako separator dziesiętny w wartości procentowe. Wartość domyślna dla <see cref="P:System.Globalization.NumberFormatInfo.InvariantInfo" /> jest ".".</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Globalization.NumberFormatInfo.PercentDecimalSeparator%2A> Właściwość jest używana z ciągiem formatem "P" Aby zdefiniować symbol oddzielający całkowitych z cyfr ułamkowych. Aby uzyskać więcej informacji, zobacz [standardowe ciągi formatu liczbowego](~/docs/standard/base-types/standard-numeric-format-strings.md).  
  
   
  
## Examples  
 Poniższy przykład ilustruje efekt zmiany <xref:System.Globalization.NumberFormatInfo.PercentDecimalSeparator%2A> właściwości.  
  
 [!code-cpp[PercentDecimalSeparator#1](~/samples/snippets/cpp/VS_Snippets_CLR/PercentDecimalSeparator/CPP/percentdecimalseparator.cpp#1)]
 [!code-csharp[PercentDecimalSeparator#1](~/samples/snippets/csharp/VS_Snippets_CLR/PercentDecimalSeparator/CS/percentdecimalseparator.cs#1)]
 [!code-vb[PercentDecimalSeparator#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/PercentDecimalSeparator/VB/percentdecimalseparator.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Ustawianie właściwości <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">Ustawiono właściwość i <see cref="T:System.Globalization.NumberFormatInfo" /> obiekt jest tylko do odczytu.</exception>
        <exception cref="T:System.ArgumentException">Właściwość jest ustawiany na pusty ciąg.</exception>
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentDecimalDigits" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentGroupSeparator" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentGroupSizes" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentSymbol" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentNegativePattern" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentPositivePattern" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.NumberDecimalSeparator" />
      </Docs>
    </Member>
    <Member MemberName="PercentGroupSeparator">
      <MemberSignature Language="C#" Value="public string PercentGroupSeparator { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PercentGroupSeparator" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.NumberFormatInfo.PercentGroupSeparator" />
      <MemberSignature Language="VB.NET" Value="Public Property PercentGroupSeparator As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ PercentGroupSeparator { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia ciąg, która oddziela grup cyfr w lewą stronę przecinka w wartości procentowe.</summary>
        <value>Ciąg, który rozdziela grup cyfr w lewą stronę przecinka w wartości procentowe. Wartość domyślna dla <see cref="P:System.Globalization.NumberFormatInfo.InvariantInfo" /> jest ",".</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Globalization.NumberFormatInfo.PercentGroupSeparator%2A> Właściwość jest używana z ciągiem formatem "P" Aby zdefiniować symboli, która oddziela grup liczb całkowitych. Aby uzyskać więcej informacji, zobacz [standardowe ciągi formatu liczbowego](~/docs/standard/base-types/standard-numeric-format-strings.md).  
  
   
  
## Examples  
 Poniższy przykład ilustruje efekt zmiany <xref:System.Globalization.NumberFormatInfo.PercentGroupSeparator%2A> właściwości.  
  
 [!code-cpp[PercentGroupSeparator#1](~/samples/snippets/cpp/VS_Snippets_CLR/PercentGroupSeparator/CPP/percentgroupseparator.cpp#1)]
 [!code-csharp[PercentGroupSeparator#1](~/samples/snippets/csharp/VS_Snippets_CLR/PercentGroupSeparator/CS/percentgroupseparator.cs#1)]
 [!code-vb[PercentGroupSeparator#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/PercentGroupSeparator/VB/percentgroupseparator.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Ustawianie właściwości <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">Ustawiono właściwość i <see cref="T:System.Globalization.NumberFormatInfo" /> obiekt jest tylko do odczytu.</exception>
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentDecimalDigits" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentDecimalSeparator" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentGroupSizes" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentSymbol" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentNegativePattern" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentPositivePattern" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencyGroupSeparator" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.NumberGroupSeparator" />
      </Docs>
    </Member>
    <Member MemberName="PercentGroupSizes">
      <MemberSignature Language="C#" Value="public int[] PercentGroupSizes { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32[] PercentGroupSizes" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.NumberFormatInfo.PercentGroupSizes" />
      <MemberSignature Language="VB.NET" Value="Public Property PercentGroupSizes As Integer()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;int&gt; ^ PercentGroupSizes { cli::array &lt;int&gt; ^ get(); void set(cli::array &lt;int&gt; ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia liczbę miejsc po przecinku w każdej grupie, do lewej strony przecinka w wartości procentowe.</summary>
        <value>Liczba cyfr w każdej grupie, do lewej strony przecinka w wartości procentowe. Wartość domyślna dla <see cref="P:System.Globalization.NumberFormatInfo.InvariantInfo" /> jest tablicą jednowymiarową z tylko jednego elementu, która jest ustawiona na 3.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Globalization.NumberFormatInfo.PercentGroupSizes%2A> Właściwość jest używana z ciągiem formatem "P" Aby zdefiniować liczbę cyfr, które pojawiają się w grupach integralną. Aby uzyskać więcej informacji, zobacz [standardowe ciągi formatu liczbowego](~/docs/standard/base-types/standard-numeric-format-strings.md). Każdy element tablicy jednowymiarowej tablicy musi być liczbą całkowitą z zakresu od 1 do 9. Ostatni element może mieć wartości 0.  
  
 Pierwszy element macierzy definiuje liczbę elementów w grupie najmniej znaczący cyfr natychmiast po lewej stronie <xref:System.Globalization.NumberFormatInfo.PercentDecimalSeparator%2A>. Każdy element kolejnych odwołuje się do następnej grupy znaczących cyfr w lewą stronę poprzedniej grupy. Jeśli jest ostatnim elemencie tablicy nie 0 pozostałych znaków są pogrupowane na podstawie w ostatnim elemencie tablicy. Jeśli ostatni element ma wartość 0, nie są grupowane pozostałych znaków.  
  
 Na przykład, jeśli tablica zawiera {3, 4, 5}, grupowania cyfr podobne do "55,55555,55555,55555,4444,333.00%". Jeśli tablica zawiera {3, 4, 0}, grupowania cyfr podobne do "55555555555555555,4444,333.00%".  
  
   
  
## Examples  
 Poniższy przykład ilustruje efekt zmiany <xref:System.Globalization.NumberFormatInfo.PercentGroupSizes%2A> właściwości.  
  
 [!code-cpp[PercentGroupSizes#1](~/samples/snippets/cpp/VS_Snippets_CLR/PercentGroupSizes/CPP/percentgroupsizes.cpp#1)]
 [!code-csharp[PercentGroupSizes#1](~/samples/snippets/csharp/VS_Snippets_CLR/PercentGroupSizes/CS/percentgroupsizes.cs#1)]
 [!code-vb[PercentGroupSizes#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/PercentGroupSizes/VB/percentgroupsizes.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Ustawianie właściwości <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">Ustawiono właściwość i Tablica zawiera wpis, który jest mniejszy niż 0 lub większą niż 9.  
  
 —lub—  
  
 Ustawiono właściwość i Tablica zawiera wpis, niż ostatni wpis, który jest równa 0.</exception>
        <exception cref="T:System.InvalidOperationException">Ustawiono właściwość i <see cref="T:System.Globalization.NumberFormatInfo" /> obiekt jest tylko do odczytu.</exception>
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentDecimalDigits" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentDecimalSeparator" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentGroupSeparator" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentSymbol" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentNegativePattern" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentPositivePattern" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencyGroupSizes" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.NumberGroupSizes" />
      </Docs>
    </Member>
    <Member MemberName="PercentNegativePattern">
      <MemberSignature Language="C#" Value="public int PercentNegativePattern { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 PercentNegativePattern" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.NumberFormatInfo.PercentNegativePattern" />
      <MemberSignature Language="VB.NET" Value="Public Property PercentNegativePattern As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int PercentNegativePattern { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wzorzec formatu dla % wartości ujemnych.</summary>
        <value>Wzorzec formatu ujemne wartości procentowe. Wartość domyślna dla <see cref="P:System.Globalization.NumberFormatInfo.InvariantInfo" /> ma wartość 0, który reprezentuje "— n %", gdzie jest "%" <see cref="P:System.Globalization.NumberFormatInfo.PercentSymbol" /> i <paramref name="n" /> jest liczbą.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Globalization.NumberFormatInfo.PercentNegativePattern%2A> Właściwość jest używana z ciągiem "P" formatem do definiowania wzorzec wartości ujemnej wartości procentowej. Aby uzyskać więcej informacji, zobacz [standardowe ciągi formatu liczbowego](~/docs/standard/base-types/standard-numeric-format-strings.md). Ta właściwość posiada jedną z wartości w tabeli poniżej. Symbol "%" jest <xref:System.Globalization.NumberFormatInfo.PercentSymbol%2A>, symbol "-" jest <xref:System.Globalization.NumberFormatInfo.NegativeSign%2A>, i `n` jest liczbą. Wartości 3-11 zostały wprowadzone w programie .NET Framework 2.0 i nie może być używany w starszych wersjach.  
  
|Wartość|Wzór skojarzony|  
|-----------|------------------------|  
|0|% - n|  
|1|-n%|  
|2|-%n|  
|3|%-n|  
|4|%n-|  
|5|n-%|  
|6|n%-|  
|7|-% n|  
|8|n %-|  
|9|% n-|  
|10|% - n|  
|11|n %|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Właściwość jest ustawiany na wartość, która jest mniejsza niż 0 lub większą niż 11.</exception>
        <exception cref="T:System.InvalidOperationException">Ustawiono właściwość i <see cref="T:System.Globalization.NumberFormatInfo" /> obiekt jest tylko do odczytu.</exception>
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentDecimalDigits" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentDecimalSeparator" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentGroupSeparator" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentGroupSizes" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentSymbol" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentPositivePattern" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencyNegativePattern" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.NumberNegativePattern" />
      </Docs>
    </Member>
    <Member MemberName="PercentPositivePattern">
      <MemberSignature Language="C#" Value="public int PercentPositivePattern { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 PercentPositivePattern" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.NumberFormatInfo.PercentPositivePattern" />
      <MemberSignature Language="VB.NET" Value="Public Property PercentPositivePattern As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int PercentPositivePattern { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wzorzec formatu dla % wartości dodatnie.</summary>
        <value>Wzorzec formatu procent wartości dodatnie. Wartość domyślna dla <see cref="P:System.Globalization.NumberFormatInfo.InvariantInfo" /> jest 0, co stanowi "n %", gdzie "%" jest <see cref="P:System.Globalization.NumberFormatInfo.PercentSymbol" /> i <paramref name="n" /> jest liczbą.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Globalization.NumberFormatInfo.PercentPositivePattern%2A> Właściwość jest używana z ciągiem formatem "P" Aby zdefiniować wzorzec wartości procentowe dodatnią. Aby uzyskać więcej informacji, zobacz [standardowe ciągi formatu liczbowego](~/docs/standard/base-types/standard-numeric-format-strings.md). Ta właściwość posiada jedną z wartości w tabeli poniżej. Symbol "%" jest <xref:System.Globalization.NumberFormatInfo.PercentSymbol%2A> i `n` jest liczbą.  
  
|Wartość|Wzór skojarzony|  
|-----------|------------------------|  
|0|n %|  
|1|n%|  
|2|%n|  
|3|% n|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Właściwość jest ustawiany na wartość, która jest mniejsza niż 0 lub większy niż 3.</exception>
        <exception cref="T:System.InvalidOperationException">Ustawiono właściwość i <see cref="T:System.Globalization.NumberFormatInfo" /> obiekt jest tylko do odczytu.</exception>
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentDecimalDigits" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentDecimalSeparator" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentGroupSeparator" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentGroupSizes" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentSymbol" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentNegativePattern" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencyPositivePattern" />
      </Docs>
    </Member>
    <Member MemberName="PercentSymbol">
      <MemberSignature Language="C#" Value="public string PercentSymbol { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PercentSymbol" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.NumberFormatInfo.PercentSymbol" />
      <MemberSignature Language="VB.NET" Value="Public Property PercentSymbol As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ PercentSymbol { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia ciąg, który ma być używana jako symbol procentu.</summary>
        <value>Ciąg, który ma być używana jako symbol procentu. Wartość domyślna dla <see cref="P:System.Globalization.NumberFormatInfo.InvariantInfo" /> to "%".</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ciąg znaków przypisany do <xref:System.Globalization.NumberFormatInfo.PercentSymbol%2A> właściwość jest uwzględniona w parametrach wynik podczas formatowania wartości numerycznej "P" lub ciąg formatu, który zawiera "%".  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Ustawianie właściwości <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">Ustawiono właściwość i <see cref="T:System.Globalization.NumberFormatInfo" /> obiekt jest tylko do odczytu.</exception>
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentDecimalDigits" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentDecimalSeparator" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentGroupSeparator" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentGroupSizes" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentNegativePattern" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentPositivePattern" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencySymbol" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.NaNSymbol" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.PerMilleSymbol" />
      </Docs>
    </Member>
    <Member MemberName="PerMilleSymbol">
      <MemberSignature Language="C#" Value="public string PerMilleSymbol { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PerMilleSymbol" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.NumberFormatInfo.PerMilleSymbol" />
      <MemberSignature Language="VB.NET" Value="Public Property PerMilleSymbol As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ PerMilleSymbol { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia ciąg, który ma być używana jako na mille symbolu.</summary>
        <value>Ciąg do użycia jako na mille symbolu. Wartość domyślna dla <see cref="P:System.Globalization.NumberFormatInfo.InvariantInfo" /> jest znak "‰", czyli Unicode U + 2030.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ciąg znaków przypisany do <xref:System.Globalization.NumberFormatInfo.PerMilleSymbol%2A> właściwość jest uwzględniona w parametrach wynik podczas formatowania wartości numerycznej zawierające ciąg formatu, który zawiera "‰".  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Ustawianie właściwości <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">Ustawiono właściwość i <see cref="T:System.Globalization.NumberFormatInfo" /> obiekt jest tylko do odczytu.</exception>
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencySymbol" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.NaNSymbol" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentSymbol" />
      </Docs>
    </Member>
    <Member MemberName="PositiveInfinitySymbol">
      <MemberSignature Language="C#" Value="public string PositiveInfinitySymbol { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PositiveInfinitySymbol" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.NumberFormatInfo.PositiveInfinitySymbol" />
      <MemberSignature Language="VB.NET" Value="Public Property PositiveInfinitySymbol As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ PositiveInfinitySymbol { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia ciąg, który reprezentuje nieskończoności dodatniej.</summary>
        <value>Ciąg, który reprezentuje nieskończoności dodatniej. Wartość domyślna dla <see cref="P:System.Globalization.NumberFormatInfo.InvariantInfo" /> jest "Nieskończoność".</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby uzyskać więcej informacji dotyczących nieskończoności dodatniej, zobacz <xref:System.Double> lub <xref:System.Single>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Ustawianie właściwości <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">Ustawiono właściwość i <see cref="T:System.Globalization.NumberFormatInfo" /> obiekt jest tylko do odczytu.</exception>
        <altmember cref="P:System.Globalization.NumberFormatInfo.NegativeInfinitySymbol" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.NaNSymbol" />
      </Docs>
    </Member>
    <Member MemberName="PositiveSign">
      <MemberSignature Language="C#" Value="public string PositiveSign { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PositiveSign" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.NumberFormatInfo.PositiveSign" />
      <MemberSignature Language="VB.NET" Value="Public Property PositiveSign As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ PositiveSign { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia ciąg, który oznacza, że skojarzona liczba jest dodatnia.</summary>
        <value>Ciąg, który oznacza, że skojarzona liczba jest dodatnia. Wartość domyślna dla <see cref="P:System.Globalization.NumberFormatInfo.InvariantInfo" /> jest "+".</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość jest używana tylko w przypadku analizowanie ciągów liczbowych, nie do formatowania.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">W ramach operacji set wartość do przypisania jest <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">Ustawiono właściwość i <see cref="T:System.Globalization.NumberFormatInfo" /> obiekt jest tylko do odczytu.</exception>
        <altmember cref="P:System.Globalization.NumberFormatInfo.NegativeSign" />
      </Docs>
    </Member>
    <Member MemberName="ReadOnly">
      <MemberSignature Language="C#" Value="public static System.Globalization.NumberFormatInfo ReadOnly (System.Globalization.NumberFormatInfo nfi);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Globalization.NumberFormatInfo ReadOnly(class System.Globalization.NumberFormatInfo nfi) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.NumberFormatInfo.ReadOnly(System.Globalization.NumberFormatInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ReadOnly (nfi As NumberFormatInfo) As NumberFormatInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Globalization::NumberFormatInfo ^ ReadOnly(System::Globalization::NumberFormatInfo ^ nfi);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.NumberFormatInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nfi" Type="System.Globalization.NumberFormatInfo" />
      </Parameters>
      <Docs>
        <param name="nfi">
          <see cref="T:System.Globalization.NumberFormatInfo" /> Do zakodowania.</param>
        <summary>Zwraca tylko do odczytu <see cref="T:System.Globalization.NumberFormatInfo" /> otoki.</summary>
        <returns>Tylko do odczytu <see cref="T:System.Globalization.NumberFormatInfo" /> otokę <paramref name="nfi" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Tej otoki uniemożliwia wszelkie modyfikacje `nfi`.  
  
 Podjęto próbę przypisania do właściwości tylko do odczytu <xref:System.Globalization.NumberFormatInfo> powoduje, że <xref:System.InvalidOperationException>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="nfi" /> jest <see langword="null" />.</exception>
        <altmember cref="P:System.Globalization.NumberFormatInfo.IsReadOnly" />
      </Docs>
    </Member>
  </Members>
</Type>