<Type Name="NumberFormatInfo" FullName="System.Globalization.NumberFormatInfo">
  <Metadata><Meta Name="ms.openlocfilehash" Value="54c1d78889ff491ef8d8e7f64180acf300731477" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69357372" /></Metadata><TypeSignature Language="C#" Value="public sealed class NumberFormatInfo : ICloneable, IFormatProvider" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit NumberFormatInfo extends System.Object implements class System.ICloneable, class System.IFormatProvider" />
  <TypeSignature Language="DocId" Value="T:System.Globalization.NumberFormatInfo" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class NumberFormatInfo&#xA;Implements ICloneable, IFormatProvider" />
  <TypeSignature Language="C++ CLI" Value="public ref class NumberFormatInfo sealed : ICloneable, IFormatProvider" />
  <TypeSignature Language="F#" Value="type NumberFormatInfo = class&#xA;    interface ICloneable&#xA;    interface IFormatProvider" />
  <AssemblyInfo>
    <AssemblyName>System.Globalization</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IFormatProvider</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Zawiera informacje specyficzne dla kultury do formatowania i analizowania wartości numerycznych.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Globalization.NumberFormatInfo> Klasa zawiera informacje specyficzne dla kultury, które są używane podczas formatowania i analizowania wartości numerycznych. Te informacje obejmują symbol waluty, symbol dziesiętny, symbol separatora grupy oraz symbole dla znaków dodatnich i ujemnych.  
  
-   [Tworzenie wystąpienia obiektu NumberFormatInfo](#Instantiating)  
  
    -   [Dla bieżącej kultury](#Instantiating_Current)  
  
    -   [Dla niezmiennej kultury](#Instantiating_Invariant)  
  
    -   [Dla określonej kultury](#Instantiating_Specific)  
  
    -   [Dla kultury neutralnej](#Instantiating_Neutral)  
  
-   [NumberFormatInfo i dane dynamiczne](#dynamic)  
  
-   [IFormatProvider, NumberFormatInfo i formatowanie numeryczne](#formatProvider)  
  
-   [Ciągi formatowania i właściwości NumberFormatInfo](#properties)  
  
-   [Modyfikowanie właściwości NumberFormatInfo](#modifying)  
  
    -   [Modyfikowanie symbolu waluty i wzorca](#currency)  
  
    -   [Formatowanie Narodowego numeru identyfikacyjnego](#id)  
  
-   [Analizowanie ciągów liczbowych](#parsing)  
  
    -   [Analizowanie ciągów użytkownika](#ParseUser)  
  
    -   [Serializowanie i deserializacja danych liczbowych](#ParseSerial)  
  
<a name="Instantiating"></a>   
## <a name="instantiating-a-numberformatinfo-object"></a>Utworzenie wystąpienia obiektu NumberFormatInfo  
 Można utworzyć wystąpienie <xref:System.Globalization.NumberFormatInfo> obiektu, który reprezentuje konwencje formatowania bieżącej kultury, niezmienną kulturę, określoną kulturę lub neutralną kulturę.  
  
<a name="Instantiating_Current"></a>   
## <a name="instantiating-a-numberformatinfo-object-for-the-current-culture"></a>Utworzenie wystąpienia obiektu NumberFormatInfo dla bieżącej kultury  
 Można utworzyć wystąpienie <xref:System.Globalization.NumberFormatInfo> obiektu dla bieżącej kultury wątku w dowolny z następujących sposobów. W każdym przypadku zwracany <xref:System.Globalization.NumberFormatInfo> obiekt jest tylko do odczytu.  
  
-   Pobierając <xref:System.Globalization.CultureInfo> obiekt reprezentujący bieżącą kulturę wątku <xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=nameWithType> z <xref:System.Globalization.CultureInfo> właściwości i pobierając obiekt z jego <xref:System.Globalization.CultureInfo.NumberFormat%2A?displayProperty=nameWithType> właściwości.  
  
-   Pobierając <xref:System.Globalization.NumberFormatInfo> obiekt zwrócony `static` przez właściwość (`Shared` w Visual Basic) <xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A> .  
  
-   Przez wywołanie <xref:System.Globalization.NumberFormatInfo.GetInstance%2A> metody <xref:System.Globalization.CultureInfo> z obiektem, który reprezentuje bieżącą kulturę.  
  
 W poniższym przykładzie są używane trzy sposoby tworzenia <xref:System.Globalization.NumberFormatInfo> obiektów, które reprezentują konwencje formatowania bieżącej kultury. Pobiera również wartość <xref:System.Globalization.NumberFormatInfo.IsReadOnly%2A> właściwości, aby zilustrować, że każdy obiekt jest tylko do odczytu.  
  
 [!code-csharp[System.Globalization.NumberFormatInfo.Class.Instantiate#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.numberformatinfo.class.instantiate/cs/instantiate1.cs#1)]
 [!code-vb[System.Globalization.NumberFormatInfo.Class.Instantiate#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.numberformatinfo.class.instantiate/vb/instantiate1.vb#1)]  
  
 Można utworzyć zapisywalny <xref:System.Globalization.NumberFormatInfo> obiekt, który reprezentuje konwencje bieżącej kultury wątku w dowolny z następujących sposobów:  
  
-   Pobierając <xref:System.Globalization.NumberFormatInfo> obiekt na dowolnym ze sposobów przedstawionym w poprzednim przykładzie kodu i <xref:System.Globalization.NumberFormatInfo.Clone%2A> wywołując metodę na zwracanym <xref:System.Globalization.NumberFormatInfo> obiekcie. Spowoduje to utworzenie kopii oryginalnego <xref:System.Globalization.NumberFormatInfo> obiektu, z tą różnicą, że jej `false` <xref:System.Globalization.NumberFormatInfo.IsReadOnly%2A> właściwość jest.  
  
-   Wywołując <xref:System.Globalization.CultureInfo.CreateSpecificCulture%2A?displayProperty=nameWithType> metodę, aby <xref:System.Globalization.CultureInfo> utworzyć obiekt, który reprezentuje bieżącą kulturę, a następnie użyć <xref:System.Globalization.NumberFormatInfo> jej <xref:System.Globalization.CultureInfo.NumberFormat%2A?displayProperty=nameWithType> właściwości do pobrania obiektu.  
  
 Poniższy przykład ilustruje te dwa sposoby tworzenia wystąpienia <xref:System.Globalization.NumberFormatInfo> obiektu i wyświetla wartość jego <xref:System.Globalization.NumberFormatInfo.IsReadOnly%2A> właściwości, aby zilustrować, że obiekt nie jest tylko do odczytu.  
  
 [!code-csharp[System.Globalization.NumberFormatInfo.Class.Instantiate#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.numberformatinfo.class.instantiate/cs/instantiate2.cs#2)]
 [!code-vb[System.Globalization.NumberFormatInfo.Class.Instantiate#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.numberformatinfo.class.instantiate/vb/instantiate2.vb#2)]  
  
 Należy pamiętać, że system operacyjny Windows zezwala użytkownikowi na przesłonięcie niektórych <xref:System.Globalization.NumberFormatInfo> wartości właściwości używanych w operacjach formatowania liczbowego i analizowania w **obszarze region i element języka** w panelu sterowania. Na przykład użytkownik, którego kultura jest w języku angielskim (Stany Zjednoczone), może wyświetlić wartości walutowe jako 1,1 USD zamiast domyślnie $1,1. <xref:System.Globalization.NumberFormatInfo> Obiekty pobrane w opisanych wcześniej metodach odzwierciedlają te zastąpienia użytkownika. Jeśli jest to niepożądane, można <xref:System.Globalization.NumberFormatInfo> utworzyć obiekt, który nie odzwierciedla zastąpień użytkownika (i ma również odczyt/zapis, a nie tylko do odczytu) przez <xref:System.Globalization.CultureInfo.%23ctor%28System.String%2CSystem.Boolean%29?displayProperty=nameWithType> wywołanie konstruktora i `false` dostarczenie wartości dla `useUserOverride` argument. Poniższy przykład przedstawia ilustrację dla systemu, którego bieżącą kulturą jest angielski (Stany Zjednoczone) i dla którego symbol waluty został zmieniony z wartości domyślnej $ na USD.  
  
 [!code-csharp[System.Globalization.NumberFormatInfo.Class.Instantiate#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.numberformatinfo.class.instantiate/cs/instantiate3.cs#3)]
 [!code-vb[System.Globalization.NumberFormatInfo.Class.Instantiate#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.numberformatinfo.class.instantiate/vb/instantiate3.vb#3)]  
  
 `true` <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType> <xref:System.Globalization.CultureInfo.NumberFormat%2A?displayProperty=nameWithType>Jeśli właściwość jest ustawiona na, właściwości, i <xref:System.Globalization.CultureInfo.TextInfo%2A?displayProperty=nameWithType> są również pobierane z ustawień użytkownika. <xref:System.Globalization.CultureInfo.UseUserOverride%2A?displayProperty=nameWithType> Jeśli ustawienia użytkownika są niezgodne z kulturą skojarzoną z <xref:System.Globalization.CultureInfo> obiektem (na przykład jeśli wybrany kalendarz nie jest jednym z kalendarzy wymienionych <xref:System.Globalization.CultureInfo.OptionalCalendars%2A> przez właściwość), wyniki metod i wartości właściwości są definicji.  
  
<a name="Instantiating_Invariant"></a>   
## <a name="instantiating-a-numberformatinfo-object-for-the-invariant-culture"></a>Utworzenie wystąpienia obiektu NumberFormatInfo dla niezmiennej kultury  
 Niezmienna kultura reprezentuje kulturę, w której nie uwzględnia się ustawień kulturowych. Jest on oparty na języku angielskim, ale nie w żadnym konkretnym kraju/regionie mówiącym w języku angielskim. Chociaż dane określonych kultur mogą być dynamiczne i mogą ulec zmianie, aby odzwierciedlały nowe konwencje kulturalne lub Preferencje użytkownika, dane niezmiennej kultury nie zmieniają się. <xref:System.Globalization.NumberFormatInfo> Obiekt, który reprezentuje konwencje formatowania kultury niezmiennej, może służyć do formatowania operacji, w których ciągi wynikowe nie powinny się różnić w zależności od kultury.  
  
 Można utworzyć wystąpienie <xref:System.Globalization.NumberFormatInfo> obiektu, który reprezentuje konwencje formatowania niezmiennej kultury w następujący sposób:  
  
-   Pobierając wartość <xref:System.Globalization.NumberFormatInfo.InvariantInfo%2A> właściwości. Zwrócony <xref:System.Globalization.NumberFormatInfo> obiekt jest tylko do odczytu.  
  
-   Pobierając wartość <xref:System.Globalization.CultureInfo.NumberFormat%2A?displayProperty=nameWithType> właściwości <xref:System.Globalization.CultureInfo> z obiektu <xref:System.Globalization.CultureInfo.InvariantCulture%2A?displayProperty=nameWithType> , który jest zwracany przez właściwość. Zwrócony <xref:System.Globalization.NumberFormatInfo> obiekt jest tylko do odczytu.  
  
-   Wywołując Konstruktor <xref:System.Globalization.NumberFormatInfo.%23ctor%2A> klasy bez parametrów. Zwrócony <xref:System.Globalization.NumberFormatInfo> obiekt jest do odczytu/zapisu.  
  
 Poniższy przykład używa każdej z tych metod, aby utworzyć wystąpienie <xref:System.Globalization.NumberFormatInfo> obiektu, który reprezentuje niezmienną kulturę. Następnie wskazuje, czy obiekt jest tylko do odczytu,  
  
 [!code-csharp[System.Globalization.NumberFormatInfo.Class.Instantiate#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.numberformatinfo.class.instantiate/cs/instantiate4.cs#4)]
 [!code-vb[System.Globalization.NumberFormatInfo.Class.Instantiate#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.numberformatinfo.class.instantiate/vb/instantiate4.vb#4)]  
  
<a name="Instantiating_Specific"></a>   
## <a name="instantiating-a-numberformatinfo-object-for-a-specific-culture"></a>Utworzenie wystąpienia obiektu NumberFormatInfo dla określonej kultury  
 Określona kultura reprezentuje język, który jest mówiony w określonym kraju/regionie. Na przykład, en-US to określona kultura, która reprezentuje język angielski, który jest mówiony w Stany Zjednoczone, a en-CA to określona kultura, która reprezentuje język angielski w Kanadzie. Można utworzyć wystąpienie <xref:System.Globalization.NumberFormatInfo> obiektu, który reprezentuje konwencje formatowania określonej kultury w następujący sposób:  
  
-   Wywołując <xref:System.Globalization.CultureInfo.GetCultureInfo%28System.String%29?displayProperty=nameWithType> metodę i pobierając wartość <xref:System.Globalization.CultureInfo.NumberFormat%2A> właściwości zwracanego <xref:System.Globalization.CultureInfo> obiektu. Zwrócony <xref:System.Globalization.NumberFormatInfo> obiekt jest tylko do odczytu.  
  
-   Przekazując <xref:System.Globalization.CultureInfo> obiekt, który reprezentuje kulturę, której <xref:System.Globalization.NumberFormatInfo> obiekt ma zostać pobrany do metody statycznej <xref:System.Globalization.NumberFormatInfo.GetInstance%2A> . Zwrócony <xref:System.Globalization.NumberFormatInfo> obiekt jest do odczytu/zapisu.  
  
-   Wywołując <xref:System.Globalization.CultureInfo.CreateSpecificCulture%2A?displayProperty=nameWithType> metodę i pobierając wartość <xref:System.Globalization.CultureInfo.NumberFormat%2A> właściwości zwracanego <xref:System.Globalization.CultureInfo> obiektu. Zwrócony <xref:System.Globalization.NumberFormatInfo> obiekt jest do odczytu/zapisu.  
  
-   Wywołując jeden z <xref:System.Globalization.CultureInfo.%23ctor%2A?displayProperty=nameWithType> konstruktorów klas i pobierając wartość <xref:System.Globalization.CultureInfo.NumberFormat%2A> właściwości zwracanego <xref:System.Globalization.CultureInfo> obiektu. Zwrócony <xref:System.Globalization.NumberFormatInfo> obiekt jest do odczytu/zapisu.  
  
 W poniższym przykładzie są używane te cztery sposoby, aby <xref:System.Globalization.NumberFormatInfo> utworzyć obiekt, który odzwierciedla konwencje formatowania kultury indonezyjskiej (Indonezja). Wskazuje również, czy każdy obiekt jest tylko do odczytu.  
  
 [!code-csharp[System.Globalization.NumberFormatInfo.Class.Instantiate#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.numberformatinfo.class.instantiate/cs/instantiate5.cs#5)]
 [!code-vb[System.Globalization.NumberFormatInfo.Class.Instantiate#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.numberformatinfo.class.instantiate/vb/instantiate5.vb#5)]  
  
<a name="Instantiating_Neutral"></a>   
## <a name="instantiating-a-numberformatinfo-object-for-a-neutral-culture"></a>Utworzenie wystąpienia obiektu NumberFormatInfo dla kultury neutralnej  
 Neutralna kultura reprezentuje kulturę lub język, który jest niezależny od kraju/regionu. Zwykle jest elementem nadrzędnym jednej lub kilku określonych kultur. Na przykład fr jest neutralną kulturą dla języka francuskiego i elementem nadrzędnym kultury fr-FR. Tworzysz obiekt, który reprezentuje konwencje formatowania kultury neutralnej w taki sam sposób, jak <xref:System.Globalization.NumberFormatInfo> utworzysz obiekt, który reprezentuje konwencje formatowania określonej kultury. <xref:System.Globalization.NumberFormatInfo>  
  
> [!NOTE]
>  W programie <xref:System.Globalization.NumberFormatInfo> <xref:System.NotSupportedException> i starszych wersjach próba pobrania obiektu, który odzwierciedla konwencje formatowania kultury neutralnej zgłasza wyjątek. [!INCLUDE[net_v35_short](~/includes/net-v35-short-md.md)]  
  
 Jednak ponieważ jest ona niezależna od określonego kraju/regionu, kultura neutralna nie ma informacji o formatowaniu specyficznych dla kultury. Zamiast wypełniania <xref:System.Globalization.NumberFormatInfo> obiektu za pomocą wartości ogólnych, .NET Framework <xref:System.Globalization.NumberFormatInfo> zwraca obiekt, który odzwierciedla konwencje formatowania określonej kultury, która jest elementem podrzędnym kultury neutralnej. Na przykład <xref:System.Globalization.NumberFormatInfo> obiekt neutralnej kultury jest odzwierciedla konwencje formatowania kultury en-us, <xref:System.Globalization.NumberFormatInfo> a obiekt kultury fr odzwierciedla konwencje formatowania kultury fr-fr.  
  
 Można użyć kodu takiego jak następujące, aby określić, które konwencje formatowania określonych kultur reprezentują każdą neutralną kulturę.  
  
 [!code-csharp[System.Globalization.NumberFormatInfo.Class.Instantiate#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.numberformatinfo.class.instantiate/cs/instantiate6c.cs#6)]
 [!code-vb[System.Globalization.NumberFormatInfo.Class.Instantiate#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.numberformatinfo.class.instantiate/vb/instantiate6c.vb#6)]  
  
<a name="dynamic"></a>   
## <a name="numberformatinfo-and-dynamic-data"></a>NumberFormatInfo i dane dynamiczne  
 Dane specyficzne dla kultury do formatowania wartości liczbowych dostarczonych przez <xref:System.Globalization.NumberFormatInfo> klasę są dynamiczne, podobnie jak dane kulturowe dostarczone <xref:System.Globalization.CultureInfo> przez klasę. Nie należy wprowadzać żadnych założeń dotyczących trwałości wartości dla <xref:System.Globalization.NumberFormatInfo> obiektów, które są skojarzone z konkretnymi <xref:System.Globalization.CultureInfo> obiektami. Tylko dane dostarczone przez niezmienną kulturę i jej skojarzony <xref:System.Globalization.NumberFormatInfo> obiekt są stabilne. Inne dane mogą ulec zmianie między sesjami aplikacji, a nawet w ramach jednej sesji, z następujących powodów:  
  
-   **Aktualizacje systemu.** Preferencje kulturowe, takie jak symbol waluty lub formaty walut, zmieniają się w miarę upływu czasu. W takim przypadku Windows Update obejmuje zmiany <xref:System.Globalization.NumberFormatInfo> wartości właściwości dla określonej kultury.  
  
-   **Kultury zamienne.** <xref:System.Globalization.CultureAndRegionInfoBuilder> Klasa może służyć do zastępowania danych istniejącej kultury.  
  
-   **Kaskadowe zmiany wartości właściwości.** Wiele właściwości związanych z kulturą może ulec zmianie w czasie wykonywania, co z kolei powoduje <xref:System.Globalization.NumberFormatInfo> zmianę danych. Na przykład bieżącą kulturę można zmienić programowo lub za pomocą akcji użytkownika. W takim <xref:System.Globalization.NumberFormatInfo> przypadku obiekt zwrócony <xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A> przez właściwość zmieni się na obiekt skojarzony z bieżącą kulturą.  
  
-   **Preferencje użytkownika.** Użytkownicy Twojej aplikacji mogą zastąpić niektóre wartości skojarzone z bieżącą kulturą systemu za pomocą opcji region i język w panelu sterowania. Na przykład użytkownicy mogą wybrać inny symbol waluty lub inny symbol separatora dziesiętnego. Jeśli właściwość jest ustawiona na `true` (wartość domyślna) <xref:System.Globalization.NumberFormatInfo> , właściwości obiektu są również pobierane z ustawień użytkownika. <xref:System.Globalization.CultureInfo.UseUserOverride%2A?displayProperty=nameWithType>  
  
 Począwszy od .NET Framework 2,0, wszystkie właściwości, które <xref:System.Globalization.NumberFormatInfo> można wypróbować obiektu są inicjowane podczas tworzenia obiektu. Nadal istnieje możliwość niespójności, ponieważ nie można utworzyć obiektu ani proces przesłaniania użytkownika jest niepodzielny, a odpowiednie wartości mogą ulec zmianie podczas tworzenia obiektu. Niespójności te powinny jednak być wyjątkowo rzadkie.  
  
 Można kontrolować, czy zastąpienia użytkowników są odzwierciedlone <xref:System.Globalization.NumberFormatInfo> w obiektach, które reprezentują tę samą kulturę co bieżąca kultura wątku. Poniższa tabela zawiera listę sposobów, w których <xref:System.Globalization.NumberFormatInfo> można pobrać obiekt i wskazuje, czy obiekt wyniku odzwierciedla zastąpień użytkownika.  
  
|Źródło obiektu CultureInfo i NumberFormatInfo|Odzwierciedla zastąpienia użytkownika|  
|-------------------------------------------------------|-----------------------------|  
|`CultureInfo.CurrentCulture.NumberFormat`wartość|Tak|  
|<xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A?displayProperty=nameWithType>wartość|Tak|  
|<xref:System.Globalization.CultureInfo.CreateSpecificCulture%2A?displayProperty=nameWithType>Method|Tak|  
|<xref:System.Globalization.CultureInfo.GetCultureInfo%2A?displayProperty=nameWithType>Method|Nie|  
|<xref:System.Globalization.CultureInfo.%23ctor%28System.String%29>konstruktora|Tak|  
|<xref:System.Globalization.CultureInfo.%23ctor%28System.String%2CSystem.Boolean%29?displayProperty=nameWithType>konstruktora|Zależy od wartości `useUserOverride` parametru|  
  
 O ile nie istnieje istotny powód, aby to zrobić, należy przestrzegać zastąpień użytkownika podczas korzystania <xref:System.Globalization.NumberFormatInfo> z obiektu w aplikacjach klienckich do formatowania i analizowania danych wejściowych użytkownika lub wyświetlania liczb. W przypadku aplikacji serwerowych lub aplikacji nienadzorowanych nie należy uwzględniać zastąpień użytkownika. Jeśli jednak używasz <xref:System.Globalization.NumberFormatInfo> obiektu jawnie lub niejawnie do utrwalania danych liczbowych w postaci ciągów, należy <xref:System.Globalization.NumberFormatInfo> użyć obiektu, który odzwierciedla konwencje formatowania kultury niezmiennej, lub należy określić niestandardowy ciąg formatu liczbowego, który będzie używany bez względu na kulturę.  
  
<a name="formatProvider"></a>   
## <a name="iformatprovider-numberformatinfo-and-numeric-formatting"></a>IFormatProvider, NumberformatInfo i formatowanie liczbowe  
 <xref:System.Globalization.NumberFormatInfo> Obiekt jest używany niejawnie lub jawnie we wszystkich operacjach formatowania liczbowego. Obejmują one wywołania następujących metod:  
  
-   Wszystkie metody formatowania liczbowego, takie <xref:System.Int32.ToString%2A?displayProperty=nameWithType>jak <xref:System.Double.ToString%2A?displayProperty=nameWithType>,, <xref:System.Convert.ToString%28System.Int32%29?displayProperty=nameWithType>i.  
  
-   Główna Metoda formatowania złożonego, <xref:System.String.Format%2A?displayProperty=nameWithType>.  
  
-   Inne metody formatowania złożonego, takie <xref:System.Console.WriteLine%28System.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType> jak <xref:System.Text.StringBuilder.AppendFormat%28System.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType>i.  
  
 Wszystkie operacje formatowania liczbowego wykorzystują <xref:System.IFormatProvider> implementację. Interfejs zawiera jedną metodę, <xref:System.IFormatProvider.GetFormat%28System.Type%29>. <xref:System.IFormatProvider> Jest to metoda wywołania zwrotnego, która <xref:System.Type> przekazuje obiekt, który reprezentuje typ wymagany do zapewnienia informacji o formatowaniu. Metoda jest odpowiedzialna za zwracanie wystąpienia tego typu lub `null`, jeśli nie może dostarczyć wystąpienia typu. .NET Framework udostępnia dwie <xref:System.IFormatProvider> implementacje dla numerów formatowania:  
  
-   <xref:System.Globalization.CultureInfo> Klasa, która reprezentuje określoną kulturę (lub konkretny język w określonym kraju/regionie). W operacji <xref:System.Globalization.CultureInfo.GetFormat%2A?displayProperty=nameWithType> formatowania liczbowego Metoda <xref:System.Globalization.NumberFormatInfo> zwraca obiekt skojarzony z jego <xref:System.Globalization.CultureInfo.NumberFormat%2A?displayProperty=nameWithType> właściwością.  
  
-   <xref:System.Globalization.NumberFormatInfo> Klasa, która zawiera informacje na temat Konwencji formatowania powiązanej kultury. <xref:System.Globalization.NumberFormatInfo.GetFormat%2A?displayProperty=nameWithType> Metoda zwraca wystąpienie samego siebie.  
  
 Jeśli implementacja nie zostanie przekazana do metody formatowania jawnie <xref:System.Globalization.CultureInfo> , używany jest obiekt zwracany przez <xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=nameWithType> właściwość, która reprezentuje bieżącą kulturę wątku. <xref:System.IFormatProvider>  
  
 Poniższy przykład ilustruje relację między <xref:System.IFormatProvider> interfejsem <xref:System.Globalization.NumberFormatInfo> i klasą w operacjach formatowania, definiując implementację <xref:System.IFormatProvider> niestandardową. Jego <xref:System.IFormatProvider.GetFormat%2A> Metoda Wyświetla nazwę typu obiektu żądanego przez operację formatowania. Jeśli interfejs żąda <xref:System.Globalization.NumberFormatInfo> obiektu, ta metoda <xref:System.Globalization.NumberFormatInfo> zapewnia obiekt dla bieżącej kultury wątku. <xref:System.Decimal.ToString%28System.IFormatProvider%29?displayProperty=nameWithType> Jak wynika z przykładu, Metoda <xref:System.Globalization.NumberFormatInfo> żąda obiektu, aby dostarczyć informacji o <xref:System.String.Format%28System.IFormatProvider%2CSystem.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType> formatowaniu, podczas gdy <xref:System.ICustomFormatter> Metoda żąda <xref:System.Globalization.NumberFormatInfo> i obiektów <xref:System.Globalization.DateTimeFormatInfo> , a także realizacji.  
  
 [!code-csharp[System.Globalization.NumberFormatInfo.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.numberformatinfo.class/cs/formatprovider1.cs#1)]
 [!code-vb[System.Globalization.NumberFormatInfo.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.numberformatinfo.class/vb/formatprovider1.vb#1)]  
  
 Jeśli implementacja nie jest jawnie podana w wywołaniu metody formatowania liczbowego, Metoda `CultureInfo.CurrentCulture.GetFormat` wywołuje <xref:System.Globalization.NumberFormatInfo> metodę, która zwraca obiekt, który odpowiada bieżącej kulturze wątku. <xref:System.IFormatProvider>  
  
<a name="properties"></a>   
## <a name="format-strings-and-numberformatinfo-properties"></a>Ciągi formatów i właściwości NumberFormatInfo  
 Każda operacja formatowania używa standardowego lub niestandardowego ciągu formatu liczbowego do utworzenia ciągu wynikowego z liczby. W niektórych przypadkach użycie ciągu formatu do utworzenia ciągu wynikowego jest jawne, jak w poniższym przykładzie. Ten kod wywołuje <xref:System.Decimal.ToString%28System.IFormatProvider%29?displayProperty=nameWithType> metodę w celu <xref:System.Decimal> przekonwertowania wartości na liczbę różnych reprezentacji ciągu przy użyciu Konwencji formatowania kultury en-us.  
  
 [!code-csharp[System.Globalization.NumberFormatInfo.Class#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.numberformatinfo.class/cs/properties1.cs#2)]
 [!code-vb[System.Globalization.NumberFormatInfo.Class#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.numberformatinfo.class/vb/properties1.vb#2)]  
  
 W innych przypadkach użycie ciągu formatu jest niejawne. Na przykład w następującej metodzie wywołania <xref:System.Decimal.ToString?displayProperty=nameWithType> metody domyślnej lub bezparametrowej wartość <xref:System.Decimal> wystąpienia jest formatowana przy użyciu specyfikatora formatu ogólnego ("G") i Konwencji bieżącej kultury, która w tym przypadku jest Kultura en-US.  
  
 [!code-csharp[System.Globalization.NumberFormatInfo.Class#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.numberformatinfo.class/cs/properties2.cs#3)]
 [!code-vb[System.Globalization.NumberFormatInfo.Class#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.numberformatinfo.class/vb/properties2.vb#3)]  
  
 Każdy ciąg standardowego formatu liczbowego używa co najmniej <xref:System.Globalization.NumberFormatInfo> jednej właściwości do określenia wzorca lub symboli używanych w ciągu wynikowym. Podobnie, każdy niestandardowy specyfikator formatu liczbowego z wyjątkiem "0" i "#" Wstawianie symboli w ciągu wynikowym zdefiniowanym przez <xref:System.Globalization.NumberFormatInfo> właściwości. Poniższa tabela zawiera listę standardowych i niestandardowych specyfikatorów formatu liczbowego i skojarzonych <xref:System.Globalization.NumberFormatInfo> z nimi właściwości.  Aby zmienić wygląd ciągu wynikowego dla określonej kultury, zobacz sekcję [Modyfikowanie właściwości NumberFormatInfo](#modifying) . Aby uzyskać szczegółowe informacje o używaniu tych specyfikatorów formatu, zobacz [Standardowe ciągi formatujące](~/docs/standard/base-types/standard-numeric-format-strings.md) i [ciągi formatów liczb niestandardowych](~/docs/standard/base-types/custom-numeric-format-strings.md).  
  
|Specyfikator formatu|Skojarzone właściwości|  
|----------------------|---------------------------|  
|"C" lub "c" (specyfikator formatu waluty)|<xref:System.Globalization.NumberFormatInfo.CurrencyDecimalDigits%2A>, aby zdefiniować domyślną liczbę cyfr ułamkowych.<br /><br /> <xref:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator%2A>, aby zdefiniować symbol separatora dziesiętnego.<br /><br /> <xref:System.Globalization.NumberFormatInfo.CurrencyGroupSeparator%2A>, aby zdefiniować separator grup lub tysięcy.<br /><br /> <xref:System.Globalization.NumberFormatInfo.CurrencyGroupSizes%2A>, aby zdefiniować rozmiary grup całkowitych.<br /><br /> <xref:System.Globalization.NumberFormatInfo.CurrencyNegativePattern%2A>, aby zdefiniować wzorzec ujemnych wartości walutowych.<br /><br /> <xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A>, aby zdefiniować wzorzec wartości dodatnich walut.<br /><br /> <xref:System.Globalization.NumberFormatInfo.CurrencySymbol%2A>, aby zdefiniować symbol waluty.<br /><br /> <xref:System.Globalization.NumberFormatInfo.NegativeSign%2A>, aby zdefiniować symbol znaku minus.|  
|"D" lub "d" (specyfikator formatu dziesiętnego)|<xref:System.Globalization.NumberFormatInfo.NegativeSign%2A>, aby zdefiniować symbol znaku minus.|  
|"E" lub "e" (specyfikator formatu wykładniczego lub naukowego)|<xref:System.Globalization.NumberFormatInfo.NegativeSign%2A>, aby zdefiniować symbol znaku minus w mantysy i wykładnik.<br /><br /> <xref:System.Globalization.NumberFormatInfo.NumberDecimalSeparator%2A>, aby zdefiniować symbol separatora dziesiętnego.<br /><br /> <xref:System.Globalization.NumberFormatInfo.PositiveSign%2A>, aby zdefiniować symbol znaku pozytywnego w wykładniku.|  
|"F" lub "f" (specyfikator formatu stałego)|<xref:System.Globalization.NumberFormatInfo.NegativeSign%2A>, aby zdefiniować symbol znaku minus.<br /><br /> <xref:System.Globalization.NumberFormatInfo.NumberDecimalDigits%2A>, aby zdefiniować domyślną liczbę cyfr ułamkowych.<br /><br /> <xref:System.Globalization.NumberFormatInfo.NumberDecimalSeparator%2A>, aby zdefiniować symbol separatora dziesiętnego.|  
|"G" lub "g" (specyfikator formatu ogólnego)|<xref:System.Globalization.NumberFormatInfo.NegativeSign%2A>, aby zdefiniować symbol znaku minus.<br /><br /> <xref:System.Globalization.NumberFormatInfo.NumberDecimalSeparator%2A>, aby zdefiniować symbol separatora dziesiętnego.<br /><br /> <xref:System.Globalization.NumberFormatInfo.PositiveSign%2A>, aby zdefiniować symbol znaku pozytywnego dla ciągów wynikowych w formacie wykładniczym.|  
|"N" lub "n" (specyfikator formatu liczb)|<xref:System.Globalization.NumberFormatInfo.NegativeSign%2A>, aby zdefiniować symbol znaku minus.<br /><br /> <xref:System.Globalization.NumberFormatInfo.NumberDecimalDigits%2A>, aby zdefiniować domyślną liczbę cyfr ułamkowych.<br /><br /> <xref:System.Globalization.NumberFormatInfo.NumberDecimalSeparator%2A>, aby zdefiniować symbol separatora dziesiętnego.<br /><br /> <xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A>, aby zdefiniować symbol separatora grupy (tysiące).<br /><br /> <xref:System.Globalization.NumberFormatInfo.NumberGroupSizes%2A>, aby zdefiniować liczbę cyfr całkowitych w grupie.<br /><br /> <xref:System.Globalization.NumberFormatInfo.NumberNegativePattern%2A>, aby zdefiniować format wartości ujemnych.|  
|"P" lub "p" (specyfikator formatu procentowego)|<xref:System.Globalization.NumberFormatInfo.NegativeSign%2A>, aby zdefiniować symbol znaku minus.<br /><br /> <xref:System.Globalization.NumberFormatInfo.PercentDecimalDigits%2A>, aby zdefiniować domyślną liczbę cyfr ułamkowych.<br /><br /> <xref:System.Globalization.NumberFormatInfo.PercentDecimalSeparator%2A>, aby zdefiniować symbol separatora dziesiętnego.<br /><br /> <xref:System.Globalization.NumberFormatInfo.PercentGroupSeparator%2A>, aby zdefiniować symbol separatora grupy.<br /><br /> <xref:System.Globalization.NumberFormatInfo.PercentGroupSizes%2A>, aby zdefiniować liczbę cyfr całkowitych w grupie.<br /><br /> <xref:System.Globalization.NumberFormatInfo.PercentNegativePattern%2A>, aby zdefiniować położenie symbolu procentu i znaku minus dla wartości ujemnych.<br /><br /> <xref:System.Globalization.NumberFormatInfo.PercentPositivePattern%2A>, aby zdefiniować położenie symbolu procentu dla wartości dodatnich.<br /><br /> <xref:System.Globalization.NumberFormatInfo.PercentSymbol%2A>, aby zdefiniować symbol procentu.|  
|"R" lub "r" (specyfikator formatu Round-rejs)|<xref:System.Globalization.NumberFormatInfo.NegativeSign%2A>, aby zdefiniować symbol znaku minus.<br /><br /> <xref:System.Globalization.NumberFormatInfo.NumberDecimalSeparator%2A>, aby zdefiniować symbol separatora dziesiętnego.<br /><br /> <xref:System.Globalization.NumberFormatInfo.PositiveSign%2A>, aby zdefiniować symbol znaku pozytywnego w wykładniku.|  
|"X" lub "x" (specyfikator formatu szesnastkowego)|Brak.|  
|"." (specyfikator formatu niestandardowego dziesiętnego)|<xref:System.Globalization.NumberFormatInfo.NumberDecimalSeparator%2A>, aby zdefiniować symbol separatora dziesiętnego.|  
|"," (specyfikator formatu niestandardowego separatora grup)|<xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A>, aby zdefiniować symbol separatora grupy (tysiące).|  
|"%" (procentowy specyfikator formatu niestandardowego)|<xref:System.Globalization.NumberFormatInfo.PercentSymbol%2A>, aby zdefiniować symbol procentu.|  
|"‰" (na Mille symbol zastępczy niestandardowego specyfikatora formatu)|<xref:System.Globalization.NumberFormatInfo.PerMilleSymbol%2A>, aby zdefiniować symbol na Mille.|  
|"E" (specyfikator formatu niestandardowego notacji wykładniczej)|<xref:System.Globalization.NumberFormatInfo.NegativeSign%2A>, aby zdefiniować symbol znaku minus w mantysy i wykładnik.<br /><br /> <xref:System.Globalization.NumberFormatInfo.PositiveSign%2A>, aby zdefiniować symbol znaku pozytywnego w wykładniku.|  
  
 Należy zauważyć, <xref:System.Globalization.NumberFormatInfo> że Klasa <xref:System.Globalization.NumberFormatInfo.NativeDigits%2A> zawiera właściwość, która określa podstawowe 10 cyfr używanych przez określoną kulturę. Jednak właściwość nie jest używana w operacjach formatowania; w ciągu wynikowym są używane tylko podstawowe cyfry łacińskie 0 (U + 0030) do 9 (U + 0039). Dodatkowo <xref:System.Single> , dla i <xref:System.Double> wartości `NaN` <xref:System.Globalization.NumberFormatInfo.NaNSymbol%2A> <xref:System.Globalization.NumberFormatInfo.PositiveInfinitySymbol%2A> <xref:System.Globalization.NumberFormatInfo.NegativeInfinitySymbol%2A> , `PositiveInfinity`i ,ciągwynikowyskładasięwyłączniezsymboli`NegativeInfinity`zdefiniowanych przez, i właściwości piwo.  
  
<a name="modifying"></a>   
## <a name="modifying-numberformatinfo-properties"></a>Modyfikowanie właściwości NumberFormatInfo  
 Właściwości <xref:System.Globalization.NumberFormatInfo> obiektu można modyfikować, aby dostosować ciąg wynikowy w operacji formatowania liczbowego. W tym celu:  
  
1.  Utwórz kopię <xref:System.Globalization.NumberFormatInfo> obiektu do odczytu/zapisu, którego konwencje formatowania chcesz zmodyfikować. Aby uzyskać więcej informacji, zobacz sekcję [Tworzenie wystąpienia obiektu NumberFormatInfo](#Instantiating) .  
  
2.  Zmodyfikuj właściwość lub właściwości, które są używane do generowania żądanego ciągu wynikowego. Aby uzyskać informacje na temat sposobu, <xref:System.Globalization.NumberFormatInfo> w jaki metody formatowania używają właściwości do definiowania ciągów wynikowych, zobacz sekcję [Format Strings i właściwości NumberFormatInfo](#properties) .  
  
3.  Użyj obiektu niestandardowego <xref:System.Globalization.NumberFormatInfo> <xref:System.IFormatProvider> jako argumentu w wywołaniach metod formatowania.  
  
> [!NOTE]
>  Zamiast dynamicznie modyfikować wartości właściwości kultury za każdym razem, gdy aplikacja jest uruchomiona, można użyć <xref:System.Globalization.CultureAndRegionInfoBuilder> klasy, aby zdefiniować niestandardową kulturę (kulturę, która ma unikatową nazwę i która uzupełnia istniejące kultury) lub zastąpić kultura (używana zamiast określonej kultury).  
  
 W poniższych sekcjach przedstawiono kilka przykładów.  
  
<a name="currency"></a>   
### <a name="modifying-the-currency-symbol-and-pattern"></a>Modyfikowanie symbolu waluty i wzoru  
 Poniższy przykład modyfikuje <xref:System.Globalization.NumberFormatInfo> obiekt, który reprezentuje konwencje formatowania kultury en-us. Przypisuje symbol waluty ISO-4217 do <xref:System.Globalization.NumberFormatInfo.CurrencySymbol%2A> właściwości i definiuje wzorzec dla wartości walutowych, która składa się z symbolu waluty, po którym następuje spacja i wartość liczbowa.  
  
 [!code-csharp[System.Globalization.NumberFormatInfo.Customize#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.numberformatinfo.customize/cs/customize_currency1.cs#1)]
 [!code-vb[System.Globalization.NumberFormatInfo.Customize#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.numberformatinfo.customize/vb/customize_currency1.vb#1)]  
  
<a name="id"></a>   
### <a name="formatting-a-national-identification-number"></a>Formatowanie krajowego numeru identyfikacyjnego  
 Wiele krajowych numerów identyfikacyjnych składa się wyłącznie z cyfr i dlatego można je łatwo sformatować, modyfikując <xref:System.Globalization.NumberFormatInfo> właściwości obiektu. Na przykład numer ubezpieczenia społecznego w Stany Zjednoczone składa się z 9 cyfr uporządkowanych w następujący sposób `XXX-XX-XXXX`:. W poniższym przykładzie przyjęto założenie, że numery ubezpieczenia społecznego są przechowywane jako wartości całkowite i odpowiednio sformatowane.  
  
 [!code-csharp[System.Globalization.NumberFormatInfo.Customize#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.numberformatinfo.customize/cs/customize_ssn1.cs#2)]
 [!code-vb[System.Globalization.NumberFormatInfo.Customize#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.numberformatinfo.customize/vb/customize_ssn1.vb#2)]  
  
<a name="parsing"></a>   
## <a name="parsing-numeric-strings"></a>Analizowanie ciągów numerycznych  
 Analizowanie obejmuje przekonwertowanie ciągu reprezentującego liczbę na liczbę. Każdy typ liczbowy w .NET Framework obejmuje dwie przeciążone metody analizy: `Parse` i `TryParse`. `Parse` Metoda konwertuje ciąg na liczbę i zgłasza wyjątek, jeśli konwersja nie powiedzie się. Metoda konwertuje ciąg na liczbę, przypisuje liczbę `out` do <xref:System.Boolean> argumentu i zwraca wartość wskazującą, czy konwersja powiodła się. `TryParse`  
  
 Metody analizy niejawnie lub jawnie wykorzystują <xref:System.Globalization.NumberStyles> wartość wyliczenia, aby określić, jakie elementy stylu (takie jak separatory grup, separator dziesiętny lub symbol waluty) mogą być obecne w ciągu, jeśli operacja analizowania ma się powieść. Jeśli wartość nie jest podana w wywołaniu metody, wartością domyślną <xref:System.Globalization.NumberStyles> jest wartość, która zawiera <xref:System.Globalization.NumberStyles.Float> flagi i <xref:System.Globalization.NumberStyles.AllowThousands> , które określa, że przeanalizowany ciąg może zawierać symbole grup, separator dziesiętny, znak ujemny, <xref:System.Globalization.NumberStyles> i znaki odstępu, lub może to być ciąg reprezentujący liczby w notacji wykładniczej.  
  
 Metody analizy również niejawnie lub jawnie używają <xref:System.Globalization.NumberFormatInfo> obiektu, który definiuje określone symbole i wzorce, które mogą wystąpić w ciągu do przeanalizowania. Jeśli obiekt nie jest podany, wartością domyślną <xref:System.Globalization.NumberFormatInfo> jest dla bieżącej kultury wątku. <xref:System.Globalization.NumberFormatInfo> Aby uzyskać więcej informacji na temat analizy, zobacz poszczególne metody analizy, takie <xref:System.Int16.Parse%28System.String%29?displayProperty=nameWithType>jak <xref:System.Int32.Parse%28System.String%2CSystem.Globalization.NumberStyles%29?displayProperty=nameWithType> <xref:System.Int64.Parse%28System.String%2CSystem.IFormatProvider%29?displayProperty=nameWithType>, <xref:System.Decimal.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=nameWithType> <xref:System.Double.TryParse%28System.String%2CSystem.Double%40%29?displayProperty=nameWithType>,,, i <xref:System.Numerics.BigInteger.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Numerics.BigInteger%40%29?displayProperty=nameWithType>.  
  
 Poniższy przykład ilustruje kulturową naturę ciągów analizy. Próbuje przeanalizować ciąg, który zawiera separatory tysięcy przy użyciu konwencji en-US, fr-FR i niezmiennej kultur. Ciąg, który zawiera przecinek jako separator grupy i kropka jako separator dziesiętny, nie może zostać przeanalizowany w kulturze fr-FR, a ciąg z białym znakiem jako separator grupy i przecinek jako separator dziesiętny nie może zostać przeanalizowany w kulturach en-US i niezmienna.  
  
 [!code-csharp[System.Globalization.NumberFormatInfo.Class#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.numberformatinfo.class/cs/parse1.cs#4)]
 [!code-vb[System.Globalization.NumberFormatInfo.Class#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.numberformatinfo.class/vb/parse1.vb#4)]  
  
 Analizowanie zazwyczaj odbywa się w dwóch kontekstach:  
  
-   Jako operacja zaprojektowana w celu przekonwertowania danych wejściowych użytkownika na wartość liczbową.  
  
-   Jako operacja, która jest przeznaczona do przeprowadzenia rundy wartości liczbowej; oznacza to, że w celu deserializacji wartości liczbowej, która została wcześniej zserializowana jako ciąg.  
  
 W poniższych sekcjach szczegółowo omówiono te dwie operacje.  
  
<a name="ParseUser"></a>   
### <a name="parsing-user-strings"></a>Analiza ciągów użytkownika  
 Podczas analizowania ciągów liczbowych wprowadzonych przez użytkownika należy zawsze utworzyć wystąpienie <xref:System.Globalization.NumberFormatInfo> obiektu, który odzwierciedla ustawienia kulturowe użytkownika. Informacje o sposobie tworzenia wystąpienia <xref:System.Globalization.NumberFormatInfo> obiektu, który odzwierciedla dostosowania użytkowników, można znaleźć w sekcji [NumberFormatInfo i dane dynamiczne](#dynamic) .  
  
 Poniższy przykład ilustruje różnicę między operacją analizowania, która odzwierciedla ustawienia kulturowe użytkownika i takie, które nie. W tym przypadku domyślna kultura systemowa to en-US, ale użytkownik zdefiniował "," jako symbol dziesiętny i "." jako separator grupy w panelu sterowania, **regionie i języku**. Zwykle te symbole są odwrócone w domyślnej kulturze en-US. Gdy użytkownik wprowadza ciąg, który odzwierciedla ustawienia użytkownika, a ciąg jest analizowany przez <xref:System.Globalization.NumberFormatInfo> obiekt, który również odzwierciedla ustawienia użytkownika (przesłonięcia), operacja analizowania zwraca prawidłowy wynik. Jeśli jednak ciąg jest analizowany przez <xref:System.Globalization.NumberFormatInfo> obiekt, który odzwierciedla standardowe ustawienia kulturowe en-us, błędnie symbol przecinka dla separatora grupy i zwraca nieprawidłowy wynik.  
  
 [!code-csharp[System.Globalization.NumberFormatInfo.Class#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.numberformatinfo.class/cs/parseuser1.cs#5)]
 [!code-vb[System.Globalization.NumberFormatInfo.Class#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.numberformatinfo.class/vb/parseuser1.vb#5)]  
  
<a name="ParseSerial"></a>   
### <a name="serializing-and-deserializing-numeric-data"></a>Serializacja i deserializacja danych liczbowych  
 Gdy dane liczbowe są serializowane w formacie ciągu i później deserializowane i przeanalizowane, ciągi powinny być generowane i analizowane przy użyciu konwencji niezmiennej kultury. Operacje formatowania i analizowania nigdy nie powinny odzwierciedlać Konwencji określonej kultury. Jeśli są używane ustawienia specyficzne dla kultury, przenośność danych jest ściśle ograniczona; można go pomyślnie deserializować tylko w wątku, którego ustawienia specyficzne dla kultury są takie same jak w wątku, w którym został on Zserializowany. W niektórych przypadkach oznacza to, że nie można nawet pomyślnie przeprowadzić deserializacji danych w tym samym systemie, w którym został on Zserializowany.  
  
 Poniższy przykład ilustruje, co może się zdarzyć, gdy ta zasada zostanie naruszona. Wartości zmiennoprzecinkowe w tablicy są konwertowane na ciągi, gdy bieżący wątek używa ustawień kultury en-US. Dane są następnie analizowane przez wątek, który używa ustawień specyficznych dla kultury o kulturze en-GB. W takim przypadku, mimo że każda operacja analizy powiedzie się, dane nie przejdzie pomyślnie i uszkodzenie danych. W innych przypadkach operacja analizowania może zakończyć się niepowodzeniem i <xref:System.FormatException> może zostać zgłoszony wyjątek.  
  
 [!code-csharp[System.Globalization.NumberFormatInfo.Class#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.numberformatinfo.class/cs/parsepersisted.cs#6)]
 [!code-vb[System.Globalization.NumberFormatInfo.Class#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.numberformatinfo.class/vb/parsepersisted.vb#6)]  
  
   
  
## Examples  
 Poniższy przykład pokazuje, jak pobrać <xref:System.Globalization.NumberFormatInfo> obiekt dla odpowiadającego <xref:System.Globalization.CultureInfo> obiektu i użyć pobranego obiektu do wykonywania zapytań dotyczących formatowania liczb dla danej kultury.  
  
 [!code-cpp[NumberFormatInfo#1](~/samples/snippets/cpp/VS_Snippets_CLR/NumberFormatInfo/cpp/NumberFormatInfo.cpp#1)]
 [!code-csharp[NumberFormatInfo#1](~/samples/snippets/csharp/VS_Snippets_CLR/NumberFormatInfo/CS/NumberFormatInfo.cs#1)]
 [!code-vb[NumberFormatInfo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/NumberFormatInfo/vb/numberformatinfo.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Globalization.CultureInfo" />
    <altmember cref="T:System.IFormatProvider" />
    <related type="Article" href="~/docs/standard/base-types/custom-numeric-format-strings.md">Niestandardowe ciągi formatujące liczby</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NumberFormatInfo ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.NumberFormatInfo.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; NumberFormatInfo();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe, zapisywalne wystąpienie <see cref="T:System.Globalization.NumberFormatInfo" /> klasy, która jest niezależna od kultury (niezmienna).</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Właściwości nowego wystąpienia można modyfikować, jeśli aplikacja wymaga formatowania zdefiniowanego przez użytkownika.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public object Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.NumberFormatInfo.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Function Clone () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ Clone();" />
      <MemberSignature Language="F#" Value="abstract member Clone : unit -&gt; obj&#xA;override this.Clone : unit -&gt; obj" Usage="numberFormatInfo.Clone " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ICloneable.Clone</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Tworzy skróconą kopię <see cref="T:System.Globalization.NumberFormatInfo" /> obiektu.</summary>
        <returns>Nowy obiekt skopiowany z oryginalnego <see cref="T:System.Globalization.NumberFormatInfo" /> obiektu.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Klon jest zapisywalny, nawet jeśli oryginalny <xref:System.Globalization.NumberFormatInfo> obiekt jest tylko do odczytu. W związku z tym właściwości klonu można modyfikować za pomocą wzorców zdefiniowanych przez użytkownika.  
  
 Płytki kopia obiektu jest kopią tylko obiektu. Jeśli obiekt zawiera odwołania do innych obiektów, płytki kopia nie będzie tworzyć kopii określonych obiektów. W zamian zostanie odwołująca się do oryginalnych obiektów. Z drugiej strony, szczegółowa kopia obiektu tworzy kopię obiektu i kopię wszystkiego bezpośrednio lub pośrednio, do którego odwołuje się ten obiekt. W przypadku <xref:System.Globalization.NumberFormatInfo> obiektu, kopia płytki jest wystarczająca do kopiowania wszystkich właściwości wystąpienia, ponieważ wszystkie właściwości, które zwracają odwołania do obiektów, są `static` (`Shared` w Visual Basic).  
  
   
  
## Examples  
 W poniższym przykładzie zastosowano <xref:System.Globalization.NumberFormatInfo.Clone%2A> metodę, aby utworzyć kopię <xref:System.Globalization.NumberFormatInfo> obiektu do odczytu/zapisu, który reprezentuje konwencje formatowania liczbowego kultury bieżącego wątku.  
  
 [!code-csharp[System.Globalization.NumberFormatInfo.IsReadOnly#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.numberformatinfo.isreadonly/cs/isreadonly1.cs#1)]
 [!code-vb[System.Globalization.NumberFormatInfo.IsReadOnly#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.numberformatinfo.isreadonly/vb/isreadonly1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Globalization.NumberFormatInfo.IsReadOnly" />
        <altmember cref="M:System.Globalization.NumberFormatInfo.ReadOnly(System.Globalization.NumberFormatInfo)" />
      </Docs>
    </Member>
    <Member MemberName="CurrencyDecimalDigits">
      <MemberSignature Language="C#" Value="public int CurrencyDecimalDigits { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CurrencyDecimalDigits" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.NumberFormatInfo.CurrencyDecimalDigits" />
      <MemberSignature Language="VB.NET" Value="Public Property CurrencyDecimalDigits As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int CurrencyDecimalDigits { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.CurrencyDecimalDigits : int with get, set" Usage="System.Globalization.NumberFormatInfo.CurrencyDecimalDigits" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia liczbę miejsc dziesiętnych, które mają być używane w wartościach walutowych.</summary>
        <value>Liczba miejsc dziesiętnych do użycia w wartościach walutowych. Wartość domyślna dla <see cref="P:System.Globalization.NumberFormatInfo.InvariantInfo" /> wynosi 2.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Globalization.NumberFormatInfo.CurrencyDecimalDigits%2A> Właściwość jest używana z ciągiem formatu standardowego "C" bez specyfikatora dokładności w operacjach formatowania liczbowego. Definiuje domyślną liczbę cyfr ułamkowych, które pojawiają się po separatorze dziesiętnym. Ta wartość jest zastępowana, jeśli jest używany specyfikator dokładności. Aby uzyskać więcej informacji, zobacz [Standardowe ciągi formatujące](~/docs/standard/base-types/standard-numeric-format-strings.md)liczby.  
  
   
  
## Examples  
 Poniższy przykład ilustruje efekt zmiany <xref:System.Globalization.NumberFormatInfo.CurrencyDecimalDigits%2A> właściwości.  
  
 [!code-cpp[CurrencyDecimalDigits#1](~/samples/snippets/cpp/VS_Snippets_CLR/CurrencyDecimalDigits/CPP/currencydecimaldigits.cpp#1)]
 [!code-csharp[CurrencyDecimalDigits#1](~/samples/snippets/csharp/VS_Snippets_CLR/CurrencyDecimalDigits/CS/currencydecimaldigits.cs#1)]
 [!code-vb[CurrencyDecimalDigits#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CurrencyDecimalDigits/VB/currencydecimaldigits.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Właściwość jest ustawiana na wartość, która jest mniejsza od 0 lub większa niż 99.</exception>
        <exception cref="T:System.InvalidOperationException">Właściwość jest ustawiana i <see cref="T:System.Globalization.NumberFormatInfo" /> obiekt jest tylko do odczytu.</exception>
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencyGroupSeparator" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencyGroupSizes" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencySymbol" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencyNegativePattern" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencyPositivePattern" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.NumberDecimalDigits" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentDecimalDigits" />
      </Docs>
    </Member>
    <Member MemberName="CurrencyDecimalSeparator">
      <MemberSignature Language="C#" Value="public string CurrencyDecimalSeparator { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CurrencyDecimalSeparator" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator" />
      <MemberSignature Language="VB.NET" Value="Public Property CurrencyDecimalSeparator As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CurrencyDecimalSeparator { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CurrencyDecimalSeparator : string with get, set" Usage="System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia ciąg, który ma być używany jako separator dziesiętny w wartościach walutowych.</summary>
        <value>Ciąg, który ma być używany jako separator dziesiętny w wartościach walutowych. Wartość domyślna dla <see cref="P:System.Globalization.NumberFormatInfo.InvariantInfo" /> to ".".</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Początkowa wartość tej właściwości pochodzi od ustawień w **regionie i** w pozycji język w panelu sterowania.  
  
 <xref:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator%2A> Właściwość jest używana z ciągiem formatu standardowego "C", aby zdefiniować symbol oddzielający całkę od cyfr ułamkowych. Aby uzyskać więcej informacji, zobacz [Standardowe ciągi formatujące](~/docs/standard/base-types/standard-numeric-format-strings.md)liczby.  
  
   
  
## Examples  
 Poniższy przykład ilustruje efekt zmiany <xref:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator%2A> właściwości.  
  
 [!code-cpp[CurrencyDecimalSeparator#1](~/samples/snippets/cpp/VS_Snippets_CLR/CurrencyDecimalSeparator/CPP/currencydecimalseparator.cpp#1)]
 [!code-csharp[CurrencyDecimalSeparator#1](~/samples/snippets/csharp/VS_Snippets_CLR/CurrencyDecimalSeparator/CS/currencydecimalseparator.cs#1)]
 [!code-vb[CurrencyDecimalSeparator#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CurrencyDecimalSeparator/VB/currencydecimalseparator.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Właściwość jest ustawiana na <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">Właściwość jest ustawiana i <see cref="T:System.Globalization.NumberFormatInfo" /> obiekt jest tylko do odczytu.</exception>
        <exception cref="T:System.ArgumentException">Właściwość jest ustawiana na pusty ciąg.</exception>
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencyDecimalDigits" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencyGroupSeparator" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencyGroupSizes" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencySymbol" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencyNegativePattern" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencyPositivePattern" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.NumberDecimalSeparator" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentDecimalSeparator" />
      </Docs>
    </Member>
    <Member MemberName="CurrencyGroupSeparator">
      <MemberSignature Language="C#" Value="public string CurrencyGroupSeparator { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CurrencyGroupSeparator" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.NumberFormatInfo.CurrencyGroupSeparator" />
      <MemberSignature Language="VB.NET" Value="Public Property CurrencyGroupSeparator As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CurrencyGroupSeparator { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CurrencyGroupSeparator : string with get, set" Usage="System.Globalization.NumberFormatInfo.CurrencyGroupSeparator" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia ciąg oddzielający grupy cyfr z lewej strony dziesiętnej wartości w walutach.</summary>
        <value>Ciąg oddzielający grupy cyfr z lewej strony dziesiętnej w wartościach walutowych. Wartość domyślna dla <see cref="P:System.Globalization.NumberFormatInfo.InvariantInfo" /> to ",".</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Początkowa wartość tej właściwości pochodzi od ustawień w pozycji **regionalne i języka** w panelu sterowania.  
  
 <xref:System.Globalization.NumberFormatInfo.CurrencyGroupSeparator%2A> Właściwość jest używana z ciągiem formatu standardowego "C", aby zdefiniować symbol oddzielający grupy cyfr całkowitych. Aby uzyskać więcej informacji, zobacz [Standardowe ciągi formatujące](~/docs/standard/base-types/standard-numeric-format-strings.md)liczby.  
  
   
  
## Examples  
 Poniższy przykład ilustruje efekt zmiany <xref:System.Globalization.NumberFormatInfo.CurrencyGroupSeparator%2A> właściwości.  
  
 [!code-cpp[CurrencyGroupSeparator#1](~/samples/snippets/cpp/VS_Snippets_CLR/CurrencyGroupSeparator/CPP/currencygroupseparator.cpp#1)]
 [!code-csharp[CurrencyGroupSeparator#1](~/samples/snippets/csharp/VS_Snippets_CLR/CurrencyGroupSeparator/CS/currencygroupseparator.cs#1)]
 [!code-vb[CurrencyGroupSeparator#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CurrencyGroupSeparator/VB/currencygroupseparator.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Właściwość jest ustawiana na <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">Właściwość jest ustawiana i <see cref="T:System.Globalization.NumberFormatInfo" /> obiekt jest tylko do odczytu.</exception>
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencyDecimalDigits" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencyGroupSizes" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencySymbol" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencyNegativePattern" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencyPositivePattern" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.NumberGroupSeparator" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentGroupSeparator" />
      </Docs>
    </Member>
    <Member MemberName="CurrencyGroupSizes">
      <MemberSignature Language="C#" Value="public int[] CurrencyGroupSizes { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32[] CurrencyGroupSizes" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.NumberFormatInfo.CurrencyGroupSizes" />
      <MemberSignature Language="VB.NET" Value="Public Property CurrencyGroupSizes As Integer()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;int&gt; ^ CurrencyGroupSizes { cli::array &lt;int&gt; ^ get(); void set(cli::array &lt;int&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CurrencyGroupSizes : int[] with get, set" Usage="System.Globalization.NumberFormatInfo.CurrencyGroupSizes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia liczbę cyfr w każdej grupie na lewo od liczby dziesiętnej w wartościach walutowych.</summary>
        <value>Liczba cyfr w każdej grupie z lewej strony dziesiętnej wartości walutowych. Wartość domyślna dla <see cref="P:System.Globalization.NumberFormatInfo.InvariantInfo" /> jest tablicą jednowymiarową z tylko jednym elementem, która jest ustawiona na 3.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Globalization.NumberFormatInfo.CurrencyGroupSizes%2A> Właściwość jest używana z ciągiem formatu standardowego "C", aby zdefiniować liczbę cyfr, które pojawiają się w grupach całkowitych. Aby uzyskać więcej informacji, zobacz [Standardowe ciągi formatujące](~/docs/standard/base-types/standard-numeric-format-strings.md)liczby. Każdy element w tablicy jednowymiarowej musi być liczbą całkowitą z przedziału od 1 do 9. Ostatni element może mieć wartość 0.  
  
 Pierwszy element tablicy definiuje liczbę elementów w najmniej znaczącej grupie cyfr bezpośrednio po lewej stronie <xref:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator%2A>. Każdy kolejny element odnosi się do następnej znaczącej grupy cyfr z lewej strony poprzedniej grupy. Jeśli ostatni element tablicy nie jest równy 0, pozostałe cyfry są pogrupowane na podstawie ostatniego elementu tablicy. Jeśli ostatni element ma wartość 0, pozostałe cyfry nie są zgrupowane.  
  
 Na przykład, jeśli tablica zawiera {3, 4, 5}, cyfry są pogrupowane podobnie do "$ 55, 55555, 55555, 55555, 4444, 333.00". Jeśli tablica zawiera wartości {3, 4, 0}, cyfry są grupowane podobnie jak "$ 55555555555555555, 4444, 333.00".  
  
   
  
## Examples  
 Poniższy przykład ilustruje efekt zmiany <xref:System.Globalization.NumberFormatInfo.CurrencyGroupSizes%2A> właściwości.  
  
 [!code-cpp[CurrencyGroupSizes#1](~/samples/snippets/cpp/VS_Snippets_CLR/CurrencyGroupSizes/CPP/currencygroupsizes.cpp#1)]
 [!code-csharp[CurrencyGroupSizes#1](~/samples/snippets/csharp/VS_Snippets_CLR/CurrencyGroupSizes/CS/currencygroupsizes.cs#1)]
 [!code-vb[CurrencyGroupSizes#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CurrencyGroupSizes/VB/currencygroupsizes.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Właściwość jest ustawiana na <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">Właściwość jest ustawiana i tablica zawiera wpis, który jest mniejszy niż 0 lub większy niż 9.  
  
 —lub—  
  
 Właściwość jest ustawiana i tablica zawiera wpis, inny niż ostatni wpis, ustawiony na wartość 0.</exception>
        <exception cref="T:System.InvalidOperationException">Właściwość jest ustawiana i <see cref="T:System.Globalization.NumberFormatInfo" /> obiekt jest tylko do odczytu.</exception>
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencyDecimalDigits" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencyGroupSeparator" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencySymbol" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencyNegativePattern" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencyPositivePattern" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.NumberGroupSizes" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentGroupSizes" />
      </Docs>
    </Member>
    <Member MemberName="CurrencyNegativePattern">
      <MemberSignature Language="C#" Value="public int CurrencyNegativePattern { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CurrencyNegativePattern" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.NumberFormatInfo.CurrencyNegativePattern" />
      <MemberSignature Language="VB.NET" Value="Public Property CurrencyNegativePattern As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int CurrencyNegativePattern { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.CurrencyNegativePattern : int with get, set" Usage="System.Globalization.NumberFormatInfo.CurrencyNegativePattern" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wzorzec formatu dla ujemnych wartości walutowych.</summary>
        <value>Wzorzec formatu dla ujemnych wartości walutowych. Wartością domyślną <see cref="P:System.Globalization.NumberFormatInfo.InvariantInfo" /> jest 0, która reprezentuje wartość "($n)", gdzie "$" <see cref="P:System.Globalization.NumberFormatInfo.CurrencySymbol" /> jest <paramref name="n" /> liczbą.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Globalization.NumberFormatInfo.CurrencyNegativePattern%2A> Właściwość jest używana z ciągiem formatu standardowego "C", aby zdefiniować wzorzec ujemnych wartości walutowych. Aby uzyskać więcej informacji, zobacz [Standardowe ciągi formatujące](~/docs/standard/base-types/standard-numeric-format-strings.md)liczby. Ta właściwość posiada jedną z wartości w tabeli poniżej. Symbol "$" jest <xref:System.Globalization.NumberFormatInfo.CurrencySymbol%2A>, symbol "-" <xref:System.Globalization.NumberFormatInfo.NegativeSign%2A>jest, i `n` jest liczbą.  
  
|Wartość|Wzór skojarzony|  
|-----------|------------------------|  
|0|($n)|  
|1|-$n|  
|2|$-n|  
|3|$n —|  
|4|(n $)|  
|5|-n $|  
|6|n-$|  
|7|n $-|  
|8|-n $|  
|9|-$ n|  
|10|n $-|  
|11|$ n-|  
|12|$-n|  
|13|n-$|  
|14|($ n)|  
|15|(n $)|  
  
   
  
## Examples  
 Poniższy przykład pokazuje, jak <xref:System.Globalization.NumberFormatInfo.CurrencyNegativePattern%2A> Właściwość definiuje format ujemnych wartości walutowych.  Pobiera wszystkie określone kultury, które są zdefiniowane na komputerze hosta i wyświetla wartość <xref:System.Globalization.NumberFormatInfo.CurrencyNegativePattern%2A> właściwości każdej kultury, skojarzony z nim wzorzec oraz liczbę sformatowaną jako wartość walutową.  
  
 [!code-csharp[System.Globalization.NumberFormatInfo.CurrencyNegativePattern#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.numberformatinfo.currencynegativepattern/cs/currencynegativepattern1.cs#1)]
 [!code-vb[System.Globalization.NumberFormatInfo.CurrencyNegativePattern#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.numberformatinfo.currencynegativepattern/vb/currencynegativepattern1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Właściwość jest ustawiana na wartość, która jest mniejsza od 0 lub większa niż 15.</exception>
        <exception cref="T:System.InvalidOperationException">Właściwość jest ustawiana i <see cref="T:System.Globalization.NumberFormatInfo" /> obiekt jest tylko do odczytu.</exception>
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencyDecimalDigits" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencyGroupSeparator" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencyGroupSizes" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencySymbol" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencyPositivePattern" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.NumberNegativePattern" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentNegativePattern" />
      </Docs>
    </Member>
    <Member MemberName="CurrencyPositivePattern">
      <MemberSignature Language="C#" Value="public int CurrencyPositivePattern { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CurrencyPositivePattern" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.NumberFormatInfo.CurrencyPositivePattern" />
      <MemberSignature Language="VB.NET" Value="Public Property CurrencyPositivePattern As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int CurrencyPositivePattern { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.CurrencyPositivePattern : int with get, set" Usage="System.Globalization.NumberFormatInfo.CurrencyPositivePattern" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wzorzec formatu dla dodatnich wartości walutowych.</summary>
        <value>Wzorzec formatu dla dodatnich wartości walutowych. Wartością domyślną <see cref="P:System.Globalization.NumberFormatInfo.InvariantInfo" /> jest 0, która reprezentuje wartość "$n", gdzie "$" <see cref="P:System.Globalization.NumberFormatInfo.CurrencySymbol" /> jest <paramref name="n" /> liczbą.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A> Właściwość jest używana z ciągiem formatu standardowego "C", aby zdefiniować wzorzec wartości dodatnich walut. Aby uzyskać więcej informacji, zobacz [Standardowe ciągi formatujące](~/docs/standard/base-types/standard-numeric-format-strings.md)liczby. Ta właściwość posiada jedną z wartości w tabeli poniżej. Symbol "$" jest <xref:System.Globalization.NumberFormatInfo.CurrencySymbol%2A> i `n` jest liczbą.  
  
|Wartość|Wzór skojarzony|  
|-----------|------------------------|  
|0|$n|  
|1|n $|  
|2|$ n|  
|3|n $|  
  
 Należy zauważyć, że wzorzec nie obsługuje znaku dodatniego.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Właściwość jest ustawiana na wartość, która jest mniejsza od 0 lub większa niż 3.</exception>
        <exception cref="T:System.InvalidOperationException">Właściwość jest ustawiana i <see cref="T:System.Globalization.NumberFormatInfo" /> obiekt jest tylko do odczytu.</exception>
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencyDecimalDigits" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencyGroupSeparator" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencyGroupSizes" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencySymbol" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencyNegativePattern" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentPositivePattern" />
      </Docs>
    </Member>
    <Member MemberName="CurrencySymbol">
      <MemberSignature Language="C#" Value="public string CurrencySymbol { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CurrencySymbol" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.NumberFormatInfo.CurrencySymbol" />
      <MemberSignature Language="VB.NET" Value="Public Property CurrencySymbol As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CurrencySymbol { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CurrencySymbol : string with get, set" Usage="System.Globalization.NumberFormatInfo.CurrencySymbol" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia ciąg, który ma być używany jako symbol waluty.</summary>
        <value>Ciąg, który ma być używany jako symbol waluty. Wartość domyślna dla <see cref="P:System.Globalization.NumberFormatInfo.InvariantInfo" /> to "¤".</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ciąg przypisany do <xref:System.Globalization.NumberFormatInfo.CurrencySymbol%2A> właściwości zostanie uwzględniony w ciągu wynikowym, gdy wartość liczbowa jest formatowana przy użyciu [standardowego ciągu formatu liczbowego](~/docs/standard/base-types/standard-numeric-format-strings.md)"C".  
  
   
  
## Examples  
 Poniższy przykład wyświetla symbol waluty bieżącej kultury i używa standardowego ciągu formatu numerycznego "C" do formatowania wartości walutowej.  
  
 [!code-csharp[System.Globalization.NumberFormatInfo.CurrencySymbol#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.numberformatinfo.currencysymbol/cs/currencysymbolex1.cs#1)]
 [!code-vb[System.Globalization.NumberFormatInfo.CurrencySymbol#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.numberformatinfo.currencysymbol/vb/currencysymbolex1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Właściwość jest ustawiana na <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">Właściwość jest ustawiana i <see cref="T:System.Globalization.NumberFormatInfo" /> obiekt jest tylko do odczytu.</exception>
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencyDecimalDigits" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencyGroupSeparator" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencyGroupSizes" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencyNegativePattern" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencyPositivePattern" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.NaNSymbol" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentSymbol" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.PerMilleSymbol" />
      </Docs>
    </Member>
    <Member MemberName="CurrentInfo">
      <MemberSignature Language="C#" Value="public static System.Globalization.NumberFormatInfo CurrentInfo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Globalization.NumberFormatInfo CurrentInfo" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.NumberFormatInfo.CurrentInfo" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property CurrentInfo As NumberFormatInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Globalization::NumberFormatInfo ^ CurrentInfo { System::Globalization::NumberFormatInfo ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CurrentInfo : System.Globalization.NumberFormatInfo" Usage="System.Globalization.NumberFormatInfo.CurrentInfo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Globalization.NumberFormatInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość tylko <see cref="T:System.Globalization.NumberFormatInfo" /> do odczytu, która formatuje wartości w oparciu o bieżącą kulturę.</summary>
        <value>Tylko <see cref="T:System.Globalization.NumberFormatInfo" /> do odczytu na podstawie kultury bieżącego wątku.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Pobieranie obiektu z właściwości jest równoznaczne z `CultureInfo.CurrentCulture.NumberFormat` pobraniem obiektuzwłaściwości.<xref:System.Globalization.NumberFormatInfo> <xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A> <xref:System.Globalization.NumberFormatInfo>  
  
   
  
## Examples  
 Poniższy przykład pokazuje, że obiekty zwracane przez <xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A> i `CultureInfo.CurrentCulture.NumberFormat` właściwości są identyczne. Następnie używa odbicia w celu wyświetlenia wartości <xref:System.Globalization.NumberFormatInfo> właściwości obiektu zwróconego <xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A> przez właściwość w systemie, którego bieżącą kulturą jest en-us.  
  
 [!code-csharp[System.Globalization.NumberFormatInfo.CurrentInfo#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.numberformatinfo.currentinfo/cs/currentinfo1.cs#1)]
 [!code-vb[System.Globalization.NumberFormatInfo.CurrentInfo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.numberformatinfo.currentinfo/vb/currentinfo1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Globalization.CultureInfo" />
        <altmember cref="P:System.Globalization.CultureInfo.NumberFormat" />
      </Docs>
    </Member>
    <Member MemberName="DigitSubstitution">
      <MemberSignature Language="C#" Value="public System.Globalization.DigitShapes DigitSubstitution { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Globalization.DigitShapes DigitSubstitution" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.NumberFormatInfo.DigitSubstitution" />
      <MemberSignature Language="VB.NET" Value="Public Property DigitSubstitution As DigitShapes" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Globalization::DigitShapes DigitSubstitution { System::Globalization::DigitShapes get(); void set(System::Globalization::DigitShapes value); };" />
      <MemberSignature Language="F#" Value="member this.DigitSubstitution : System.Globalization.DigitShapes with get, set" Usage="System.Globalization.NumberFormatInfo.DigitSubstitution" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Globalization.DigitShapes</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość określającą sposób wyświetlania kształtu cyfry w graficznym interfejsie użytkownika.</summary>
        <value>Jedna z wartości wyliczenia, która określa kształt cyfr specyficzny dla kultury.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <xref:System.Globalization.NumberFormatInfo.DigitSubstitution%2A> Właściwość jest zarezerwowana do użytku w przyszłości. Obecnie nie jest on używany podczas analizy ani operacji formatowania dla bieżącego <xref:System.Globalization.NumberFormatInfo> obiektu.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Bieżący <see cref="T:System.Globalization.NumberFormatInfo" /> obiekt jest tylko do odczytu.</exception>
        <exception cref="T:System.ArgumentException">Wartość w operacji zestawu nie jest prawidłową <see cref="T:System.Globalization.DigitShapes" /> wartością.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetFormat">
      <MemberSignature Language="C#" Value="public object GetFormat (Type formatType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetFormat(class System.Type formatType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.NumberFormatInfo.GetFormat(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetFormat (formatType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ GetFormat(Type ^ formatType);" />
      <MemberSignature Language="F#" Value="abstract member GetFormat : Type -&gt; obj&#xA;override this.GetFormat : Type -&gt; obj" Usage="numberFormatInfo.GetFormat formatType" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IFormatProvider.GetFormat(System.Type)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="formatType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="formatType"><see cref="T:System.Type" /> Wymagana usługa formatowania.</param>
        <summary>Pobiera obiekt określonego typu, który udostępnia usługę formatowania liczb.</summary>
        <returns>Bieżąca <see cref="T:System.Globalization.NumberFormatInfo" />, jeśli <paramref name="formatType" /> jest taka sama jak typ bieżącego <see cref="T:System.Globalization.NumberFormatInfo" />; w przeciwnym razie <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metody obsługiwane przez podstawowe typy danych wywołują tę metodę, gdy bieżąca <xref:System.Globalization.NumberFormatInfo> jest przenoszona jako <xref:System.IFormatProvider> parametr. `Format(String, IFormatProvider)` Ta metoda implementuje <xref:System.IFormatProvider.GetFormat%2A?displayProperty=nameWithType>.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IFormatProvider" />
        <altmember cref="M:System.Globalization.DateTimeFormatInfo.GetFormat(System.Type)" />
      </Docs>
    </Member>
    <Member MemberName="GetInstance">
      <MemberSignature Language="C#" Value="public static System.Globalization.NumberFormatInfo GetInstance (IFormatProvider formatProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Globalization.NumberFormatInfo GetInstance(class System.IFormatProvider formatProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.NumberFormatInfo.GetInstance(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetInstance (formatProvider As IFormatProvider) As NumberFormatInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Globalization::NumberFormatInfo ^ GetInstance(IFormatProvider ^ formatProvider);" />
      <MemberSignature Language="F#" Value="static member GetInstance : IFormatProvider -&gt; System.Globalization.NumberFormatInfo" Usage="System.Globalization.NumberFormatInfo.GetInstance formatProvider" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Globalization.NumberFormatInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="formatProvider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="formatProvider"><see cref="T:System.IFormatProvider" /> Używane do <see cref="T:System.Globalization.NumberFormatInfo" />uzyskania.  
  
—lub— 
 <see langword="null" />Aby uzyskać <see cref="P:System.Globalization.NumberFormatInfo.CurrentInfo" />.</param>
        <summary>Pobiera skojarzenie skojarzone z określonym <see cref="T:System.IFormatProvider" />. <see cref="T:System.Globalization.NumberFormatInfo" /></summary>
        <returns><see cref="T:System.Globalization.NumberFormatInfo" /> Skojarzonego z określonym <see cref="T:System.IFormatProvider" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda używa <xref:System.IFormatProvider.GetFormat%2A?displayProperty=nameWithType> `formatProvider` metody używania <xref:System.Globalization.NumberFormatInfo> jako parametru typu. Jeśli `formatProvider` jest `null` lub zwraca,`null`ta metoda zwraca <xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A>. <xref:System.IFormatProvider.GetFormat%2A?displayProperty=nameWithType>  
  
 Aplikacja pobiera <xref:System.Globalization.NumberFormatInfo> obiekt dla określonej kultury przy użyciu jednej z następujących metod:  
  
-   Za pomocą <xref:System.Globalization.CultureInfo.NumberFormat%2A?displayProperty=nameWithType> właściwości.  
  
-   Za pomocą `provider`metodygdzie is <xref:System.Globalization.CultureInfo>. <xref:System.Globalization.NumberFormatInfo.GetInstance%2A>  
  
 <xref:System.Globalization.NumberFormatInfo> Obiekt jest tworzony tylko dla kultury niezmiennej lub dla określonych kultur, a nie dla kultur neutralnych. Aby uzyskać więcej informacji na temat niezmiennej kultury, określonych kultur i kultur neutralnych, zobacz <xref:System.Globalization.CultureInfo> Klasa.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IFormatProvider" />
      </Docs>
    </Member>
    <Member MemberName="InvariantInfo">
      <MemberSignature Language="C#" Value="public static System.Globalization.NumberFormatInfo InvariantInfo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Globalization.NumberFormatInfo InvariantInfo" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.NumberFormatInfo.InvariantInfo" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property InvariantInfo As NumberFormatInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Globalization::NumberFormatInfo ^ InvariantInfo { System::Globalization::NumberFormatInfo ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.InvariantInfo : System.Globalization.NumberFormatInfo" Usage="System.Globalization.NumberFormatInfo.InvariantInfo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.NumberFormatInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera obiekt tylko <see cref="T:System.Globalization.NumberFormatInfo" /> do odczytu, który jest niezależny od kultury (niezmienna).</summary>
        <value>Obiekt tylko do odczytu, który jest niezależny od kultury (niezmienna).</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten <xref:System.Globalization.NumberFormatInfo> obiekt zwrócony przez tę właściwość nie zmienia się, niezależnie od bieżącej kultury. Reprezentuje konwencje formatowania kultury niezmiennej, która jest kulturą skojarzoną z językiem angielskim, ale nie z żadnym krajem/regionem. Niezmienna kultura jest używana w operacjach formatowania, które są niezależne od kultury lub które tworzą ciągi wynikowe, które są odpowiednie do wyświetlania w wielu kulturach.  
  
   
  
## Examples  
 Poniższy przykład wyświetla domyślne wartości <xref:System.Globalization.NumberFormatInfo.InvariantInfo%2A>właściwości.  
  
 [!code-cpp[System.Globalization.NumberFormatInfo.InvariantInfo#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.NumberFormatInfo.InvariantInfo/CPP/invariantinfo.cpp#1)]
 [!code-csharp[System.Globalization.NumberFormatInfo.InvariantInfo#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.NumberFormatInfo.InvariantInfo/CS/invariantinfo.cs#1)]
 [!code-vb[System.Globalization.NumberFormatInfo.InvariantInfo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.NumberFormatInfo.InvariantInfo/VB/invariantinfo.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.NumberFormatInfo.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsReadOnly : bool" Usage="System.Globalization.NumberFormatInfo.IsReadOnly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość wskazującą, czy ten <see cref="T:System.Globalization.NumberFormatInfo" /> obiekt jest tylko do odczytu.</summary>
        <value><see langword="true" />Jeśli jest <see cref="T:System.Globalization.NumberFormatInfo" /> tylko do odczytu; <see langword="false" />w przeciwnym razie.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Próba wykonania przypisania do właściwości tylko <xref:System.Globalization.NumberFormatInfo> do odczytu powoduje wystąpienie elementu. <xref:System.InvalidOperationException>  
  
 Możesz wywołać metodę, <xref:System.Globalization.NumberFormatInfo.Clone%2A> aby utworzyć obiekt odczytu/zapisu <xref:System.Globalization.NumberFormatInfo> z obiektu tylko do odczytu, jak pokazano w poniższym przykładzie.  
  
 [!code-csharp[System.Globalization.NumberFormatInfo.IsReadOnly#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.numberformatinfo.isreadonly/cs/isreadonly1.cs#1)]
 [!code-vb[System.Globalization.NumberFormatInfo.IsReadOnly#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.numberformatinfo.isreadonly/vb/isreadonly1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Globalization.NumberFormatInfo.ReadOnly(System.Globalization.NumberFormatInfo)" />
      </Docs>
    </Member>
    <Member MemberName="NaNSymbol">
      <MemberSignature Language="C#" Value="public string NaNSymbol { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string NaNSymbol" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.NumberFormatInfo.NaNSymbol" />
      <MemberSignature Language="VB.NET" Value="Public Property NaNSymbol As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ NaNSymbol { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.NaNSymbol : string with get, set" Usage="System.Globalization.NumberFormatInfo.NaNSymbol" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia ciąg, który reprezentuje wartość IEEE NaN (nie jest liczbą).</summary>
        <value>Ciąg, który reprezentuje wartość IEEE NaN (nie jest liczbą). Wartość domyślna <see cref="P:System.Globalization.NumberFormatInfo.InvariantInfo" /> to "NaN".</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby uzyskać więcej informacji na temat wartości NaN <xref:System.Double> , <xref:System.Single>Zobacz lub.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Właściwość jest ustawiana na <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">Właściwość jest ustawiana i <see cref="T:System.Globalization.NumberFormatInfo" /> obiekt jest tylko do odczytu.</exception>
        <altmember cref="P:System.Globalization.NumberFormatInfo.PositiveInfinitySymbol" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.NegativeInfinitySymbol" />
      </Docs>
    </Member>
    <Member MemberName="NativeDigits">
      <MemberSignature Language="C#" Value="public string[] NativeDigits { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] NativeDigits" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.NumberFormatInfo.NativeDigits" />
      <MemberSignature Language="VB.NET" Value="Public Property NativeDigits As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::String ^&gt; ^ NativeDigits { cli::array &lt;System::String ^&gt; ^ get(); void set(cli::array &lt;System::String ^&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.NativeDigits : string[] with get, set" Usage="System.Globalization.NumberFormatInfo.NativeDigits" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia tablicę ciągów cyfr natywnych odpowiadających cyfrom zachodnim od 0 do 9.</summary>
        <value>Tablica ciągów zawierająca natywny odpowiednik cyfr zachodnich od 0 do 9. Wartość domyślna to tablica z elementami "0", "1", "2", "3", "4", "5", "6", "7", "8" i "9".</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  Zestaw znaków określony przez <xref:System.Globalization.NumberFormatInfo.NativeDigits%2A> właściwość nie ma wpływu na operacje analizowania ani formatowania. Podczas formatowania lub analizowania wartości numerycznych lub wartości daty i godziny używane są tylko podstawowe cyfry łacińskie 0 (U + 0030) do 9 (U + 0039).  
  
   
  
## Examples  
 Poniższy przykład demonstruje <xref:System.Globalization.NumberFormatInfo.NativeDigits%2A> właściwość.  
  
 [!code-cpp[sys.glob.NFI.nativeDigits#1](~/samples/snippets/cpp/VS_Snippets_CLR/sys.glob.NFI.nativeDigits/cpp/nd.cpp#1)]
 [!code-csharp[sys.glob.NFI.nativeDigits#1](~/samples/snippets/csharp/VS_Snippets_CLR/sys.glob.NFI.nativeDigits/cs/nd.cs#1)]
 [!code-vb[sys.glob.NFI.nativeDigits#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/sys.glob.NFI.nativeDigits/vb/nd.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Bieżący <see cref="T:System.Globalization.NumberFormatInfo" /> obiekt jest tylko do odczytu.</exception>
        <exception cref="T:System.ArgumentNullException">W operacji ustawiania wartość to <see langword="null" />.  
  
—lub— 
W operacji zestawu element tablicy wartości jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">W operacji ustawiania tablica wartości nie zawiera 10 elementów.  
  
—lub— 
W operacji ustawiania element tablicy wartości nie zawiera pojedynczego <see cref="T:System.Char" /> obiektu ani <see cref="T:System.Char" /> pary obiektów wchodzących w skład pary zastępczej.  
  
—lub— 
W operacji ustawiania element tablicy wartości nie jest cyfrą określoną przez [standard Unicode](https://go.microsoft.com/fwlink/?linkid=37123). Oznacza to, że cyfra w elemencie Array nie ma ogólnej wartości kategorii <see langword="Number, Decimal Digit" /> Unicode (ND).  
  
—lub— 
W operacji ustawiania wartość numeryczna elementu w tablicy wartości nie odpowiada pozycji elementu w tablicy. Oznacza to, że element pod indeksem 0, który jest pierwszym elementem tablicy, nie ma wartości liczbowej 0 lub element o indeksie 1 nie ma wartości liczbowej 1.</exception>
        <altmember cref="T:System.Globalization.DigitShapes" />
      </Docs>
    </Member>
    <Member MemberName="NegativeInfinitySymbol">
      <MemberSignature Language="C#" Value="public string NegativeInfinitySymbol { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string NegativeInfinitySymbol" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.NumberFormatInfo.NegativeInfinitySymbol" />
      <MemberSignature Language="VB.NET" Value="Public Property NegativeInfinitySymbol As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ NegativeInfinitySymbol { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.NegativeInfinitySymbol : string with get, set" Usage="System.Globalization.NumberFormatInfo.NegativeInfinitySymbol" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia ciąg, który reprezentuje nieskończoność ujemną.</summary>
        <value>Ciąg, który reprezentuje nieskończoność ujemną. Wartość domyślna dla <see cref="P:System.Globalization.NumberFormatInfo.InvariantInfo" /> to "-nieskończoność".</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby uzyskać więcej informacji na temat nieskończoności <xref:System.Double> ujemnej, zobacz lub <xref:System.Single>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Właściwość jest ustawiana na <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">Właściwość jest ustawiana i <see cref="T:System.Globalization.NumberFormatInfo" /> obiekt jest tylko do odczytu.</exception>
        <altmember cref="P:System.Globalization.NumberFormatInfo.PositiveInfinitySymbol" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.NaNSymbol" />
      </Docs>
    </Member>
    <Member MemberName="NegativeSign">
      <MemberSignature Language="C#" Value="public string NegativeSign { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string NegativeSign" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.NumberFormatInfo.NegativeSign" />
      <MemberSignature Language="VB.NET" Value="Public Property NegativeSign As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ NegativeSign { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.NegativeSign : string with get, set" Usage="System.Globalization.NumberFormatInfo.NegativeSign" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia ciąg, który oznacza, że skojarzona liczba jest ujemna.</summary>
        <value>Ciąg, który oznacza, że skojarzona liczba jest ujemna. Wartość domyślna dla <see cref="P:System.Globalization.NumberFormatInfo.InvariantInfo" /> to "-".</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość jest używana w operacjach formatowania i analizowania. Aby uzyskać więcej informacji na temat użycia w operacjach formatowania, zobacz temat [Standardowe ciągi formatujące liczbowe](~/docs/standard/base-types/standard-numeric-format-strings.md) i [Niestandardowe ciągi formatujące liczby](~/docs/standard/base-types/custom-numeric-format-strings.md) .  
  
   
  
## Examples  
 Poniższy przykład tworzy wystąpienie obiektu do odczytu i zapisu <xref:System.Globalization.CultureInfo> , który reprezentuje niezmienną kulturę i przypisuje znak NADKREŚLENIA (U + 203E) do jego <xref:System.Globalization.NumberFormatInfo.NegativeSign%2A> właściwości. Następnie używa tego <xref:System.Globalization.CultureInfo> obiektu do formatowania tablicy ujemnych liczb zmiennoprzecinkowych.  
  
 [!code-csharp[System.Globalization.NumberFormatInfo.NegativeSign#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.numberformatinfo.negativesign/cs/negativesign1.cs#1)]
 [!code-vb[System.Globalization.NumberFormatInfo.NegativeSign#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.numberformatinfo.negativesign/vb/negativesign1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Właściwość jest ustawiana na <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">Właściwość jest ustawiana i <see cref="T:System.Globalization.NumberFormatInfo" /> obiekt jest tylko do odczytu.</exception>
        <altmember cref="P:System.Globalization.NumberFormatInfo.PositiveSign" />
      </Docs>
    </Member>
    <Member MemberName="NumberDecimalDigits">
      <MemberSignature Language="C#" Value="public int NumberDecimalDigits { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 NumberDecimalDigits" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.NumberFormatInfo.NumberDecimalDigits" />
      <MemberSignature Language="VB.NET" Value="Public Property NumberDecimalDigits As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int NumberDecimalDigits { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.NumberDecimalDigits : int with get, set" Usage="System.Globalization.NumberFormatInfo.NumberDecimalDigits" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia liczbę miejsc dziesiętnych, które mają być używane w wartościach liczbowych.</summary>
        <value>Liczba miejsc dziesiętnych do użycia w wartościach liczbowych. Wartość domyślna dla <see cref="P:System.Globalization.NumberFormatInfo.InvariantInfo" /> wynosi 2.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Globalization.NumberFormatInfo.NumberDecimalDigits%2A> Właściwość jest używana z ciągami formatu standardowego "F" i "N" bez specyfikatora dokładności w operacjach formatowania liczbowego. Definiuje domyślną liczbę cyfr ułamkowych, które pojawiają się po separatorze dziesiętnym. Ta wartość jest zastępowana, jeśli jest używany specyfikator dokładności. Aby uzyskać więcej informacji, zobacz [Standardowe ciągi formatujące](~/docs/standard/base-types/standard-numeric-format-strings.md)liczby.  
  
   
  
## Examples  
 Poniższy przykład ilustruje efekt zmiany <xref:System.Globalization.NumberFormatInfo.NumberDecimalDigits%2A> właściwości.  
  
 [!code-cpp[NumberDecimalDigits#1](~/samples/snippets/cpp/VS_Snippets_CLR/NumberDecimalDigits/CPP/numberdecimaldigits.cpp#1)]
 [!code-csharp[NumberDecimalDigits#1](~/samples/snippets/csharp/VS_Snippets_CLR/NumberDecimalDigits/CS/numberdecimaldigits.cs#1)]
 [!code-vb[NumberDecimalDigits#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/NumberDecimalDigits/VB/numberdecimaldigits.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Właściwość jest ustawiana na wartość, która jest mniejsza od 0 lub większa niż 99.</exception>
        <exception cref="T:System.InvalidOperationException">Właściwość jest ustawiana i <see cref="T:System.Globalization.NumberFormatInfo" /> obiekt jest tylko do odczytu.</exception>
        <altmember cref="P:System.Globalization.NumberFormatInfo.NumberDecimalSeparator" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.NumberGroupSeparator" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.NumberGroupSizes" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.NaNSymbol" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.NumberNegativePattern" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencyDecimalDigits" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentDecimalDigits" />
      </Docs>
    </Member>
    <Member MemberName="NumberDecimalSeparator">
      <MemberSignature Language="C#" Value="public string NumberDecimalSeparator { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string NumberDecimalSeparator" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.NumberFormatInfo.NumberDecimalSeparator" />
      <MemberSignature Language="VB.NET" Value="Public Property NumberDecimalSeparator As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ NumberDecimalSeparator { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.NumberDecimalSeparator : string with get, set" Usage="System.Globalization.NumberFormatInfo.NumberDecimalSeparator" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia ciąg, który ma być używany jako separator dziesiętny w wartościach liczbowych.</summary>
        <value>Ciąg, który ma być używany jako separator dziesiętny w wartościach liczbowych. Wartość domyślna dla <see cref="P:System.Globalization.NumberFormatInfo.InvariantInfo" /> to ".".</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Globalization.NumberFormatInfo.NumberDecimalSeparator%2A> Właściwość jest używana z ciągami "E", "F", "G", "N" i "R" w formacie standardowym, aby zdefiniować symbol oddzielający integralność od cyfr ułamkowych. Aby uzyskać więcej informacji, zobacz [Standardowe ciągi formatujące](~/docs/standard/base-types/standard-numeric-format-strings.md)liczby.  
  
 Początkowa wartość tej właściwości pochodzi od ustawień w **regionie i** w pozycji język w panelu sterowania.  
  
   
  
## Examples  
 Poniższy przykład ilustruje efekt zmiany <xref:System.Globalization.NumberFormatInfo.NumberDecimalSeparator%2A> właściwości.  
  
 [!code-cpp[NumberDecimalSeparator#1](~/samples/snippets/cpp/VS_Snippets_CLR/NumberDecimalSeparator/CPP/numberdecimalseparator.cpp#1)]
 [!code-csharp[NumberDecimalSeparator#1](~/samples/snippets/csharp/VS_Snippets_CLR/NumberDecimalSeparator/CS/numberdecimalseparator.cs#1)]
 [!code-vb[NumberDecimalSeparator#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/NumberDecimalSeparator/VB/numberdecimalseparator.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Właściwość jest ustawiana na <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">Właściwość jest ustawiana i <see cref="T:System.Globalization.NumberFormatInfo" /> obiekt jest tylko do odczytu.</exception>
        <exception cref="T:System.ArgumentException">Właściwość jest ustawiana na pusty ciąg.</exception>
        <altmember cref="P:System.Globalization.NumberFormatInfo.NumberDecimalDigits" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.NumberGroupSeparator" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.NumberGroupSizes" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.NaNSymbol" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.NumberNegativePattern" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentDecimalSeparator" />
      </Docs>
    </Member>
    <Member MemberName="NumberGroupSeparator">
      <MemberSignature Language="C#" Value="public string NumberGroupSeparator { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string NumberGroupSeparator" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.NumberFormatInfo.NumberGroupSeparator" />
      <MemberSignature Language="VB.NET" Value="Public Property NumberGroupSeparator As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ NumberGroupSeparator { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.NumberGroupSeparator : string with get, set" Usage="System.Globalization.NumberFormatInfo.NumberGroupSeparator" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia ciąg oddzielający grupy cyfr po lewej stronie dziesiętnej wartości liczbowych.</summary>
        <value>Ciąg oddzielający grupy cyfr z lewej strony dziesiętnej wartości liczbowych. Wartość domyślna dla <see cref="P:System.Globalization.NumberFormatInfo.InvariantInfo" /> to ",".</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A> Właściwość jest używana z ciągiem formatu standardowego "N", aby zdefiniować symbol oddzielający grupy cyfr całkowitych. Aby uzyskać więcej informacji, zobacz [Standardowe ciągi formatujące](~/docs/standard/base-types/standard-numeric-format-strings.md)liczby.  
  
 Początkowa wartość tej właściwości pochodzi od ustawień w **regionie i** w pozycji język w panelu sterowania.  
  
   
  
## Examples  
 Poniższy przykład ilustruje efekt zmiany <xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A> właściwości.  
  
 [!code-cpp[NumberGroupSeparator#1](~/samples/snippets/cpp/VS_Snippets_CLR/NumberGroupSeparator/CPP/numbergroupseparator.cpp#1)]
 [!code-csharp[NumberGroupSeparator#1](~/samples/snippets/csharp/VS_Snippets_CLR/NumberGroupSeparator/CS/numbergroupseparator.cs#1)]
 [!code-vb[NumberGroupSeparator#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/NumberGroupSeparator/VB/numbergroupseparator.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Właściwość jest ustawiana na <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">Właściwość jest ustawiana i <see cref="T:System.Globalization.NumberFormatInfo" /> obiekt jest tylko do odczytu.</exception>
        <altmember cref="P:System.Globalization.NumberFormatInfo.NumberDecimalDigits" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.NumberDecimalSeparator" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.NumberGroupSizes" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.NaNSymbol" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.NumberNegativePattern" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencyGroupSeparator" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentGroupSeparator" />
      </Docs>
    </Member>
    <Member MemberName="NumberGroupSizes">
      <MemberSignature Language="C#" Value="public int[] NumberGroupSizes { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32[] NumberGroupSizes" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.NumberFormatInfo.NumberGroupSizes" />
      <MemberSignature Language="VB.NET" Value="Public Property NumberGroupSizes As Integer()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;int&gt; ^ NumberGroupSizes { cli::array &lt;int&gt; ^ get(); void set(cli::array &lt;int&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.NumberGroupSizes : int[] with get, set" Usage="System.Globalization.NumberFormatInfo.NumberGroupSizes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia liczbę cyfr w każdej grupie na lewo od dziesiętnej wartości liczbowej.</summary>
        <value>Liczba cyfr w każdej grupie z lewej strony dziesiętnej w wartościach liczbowych. Wartość domyślna dla <see cref="P:System.Globalization.NumberFormatInfo.InvariantInfo" /> jest tablicą jednowymiarową z tylko jednym elementem, która jest ustawiona na 3.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wartość <xref:System.Globalization.NumberFormatInfo.NumberGroupSizes%2A> właściwości ma wpływ na wynik wartości liczbowych, które są formatowane przy użyciu "N". Jeśli użyto niestandardowego ciągu formatu liczbowego lub innych standardowych ciągów formatu liczbowego, wartość <xref:System.Globalization.NumberFormatInfo.NumberGroupSizes%2A> właściwości jest ignorowana.  
  
 Każdy element w tablicy jednowymiarowej musi być liczbą całkowitą z przedziału od 1 do 9. Ostatni element może mieć wartość 0.  
  
 Pierwszy element tablicy definiuje liczbę elementów w najmniej znaczącej grupie cyfr bezpośrednio po lewej stronie <xref:System.Globalization.NumberFormatInfo.NumberDecimalSeparator%2A>. Każdy kolejny element odnosi się do następnej znaczącej grupy cyfr z lewej strony poprzedniej grupy. Jeśli ostatni element tablicy nie jest równy 0, pozostałe cyfry są pogrupowane na podstawie ostatniego elementu tablicy. Jeśli ostatni element ma wartość 0, pozostałe cyfry nie są zgrupowane.  
  
 Na przykład, jeśli tablica zawiera {3, 4, 5}, cyfry są pogrupowane podobne do "55, 55555, 55555, 55555, 4444, 333.00". Jeśli tablica zawiera wartości {3, 4, 0}, cyfry są grupowane podobnie jak "55555555555555555, 4444, 333.00".  
  
   
  
## Examples  
 Poniższy przykład ilustruje efekt zmiany <xref:System.Globalization.NumberFormatInfo.NumberGroupSizes%2A> właściwości.  
  
 [!code-cpp[NumberGroupSizes#1](~/samples/snippets/cpp/VS_Snippets_CLR/NumberGroupSizes/CPP/numbergroupsizes.cpp#1)]
 [!code-csharp[NumberGroupSizes#1](~/samples/snippets/csharp/VS_Snippets_CLR/NumberGroupSizes/CS/numbergroupsizes.cs#1)]
 [!code-vb[NumberGroupSizes#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/NumberGroupSizes/VB/numbergroupsizes.vb#1)]  
  
 Poniższy przykład drukuje wartość przy użyciu różnych <xref:System.Globalization.NumberFormatInfo.NumberGroupSizes%2A> tablic.  
  
 [!code-cpp[Classic NumberFormatInfo.NumberGroupSizes Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic NumberFormatInfo.NumberGroupSizes Example/CPP/source.cpp#1)]
 [!code-csharp[Classic NumberFormatInfo.NumberGroupSizes Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic NumberFormatInfo.NumberGroupSizes Example/CS/source.cs#1)]
 [!code-vb[Classic NumberFormatInfo.NumberGroupSizes Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic NumberFormatInfo.NumberGroupSizes Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Właściwość jest ustawiana na <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">Właściwość jest ustawiana i tablica zawiera wpis, który jest mniejszy niż 0 lub większy niż 9.  
  
 —lub—  
  
 Właściwość jest ustawiana i tablica zawiera wpis, inny niż ostatni wpis, ustawiony na wartość 0.</exception>
        <exception cref="T:System.InvalidOperationException">Właściwość jest ustawiana i <see cref="T:System.Globalization.NumberFormatInfo" /> obiekt jest tylko do odczytu.</exception>
        <altmember cref="P:System.Globalization.NumberFormatInfo.NumberDecimalDigits" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.NumberDecimalSeparator" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.NumberGroupSeparator" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.NaNSymbol" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.NumberNegativePattern" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencyGroupSizes" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentGroupSizes" />
      </Docs>
    </Member>
    <Member MemberName="NumberNegativePattern">
      <MemberSignature Language="C#" Value="public int NumberNegativePattern { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 NumberNegativePattern" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.NumberFormatInfo.NumberNegativePattern" />
      <MemberSignature Language="VB.NET" Value="Public Property NumberNegativePattern As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int NumberNegativePattern { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.NumberNegativePattern : int with get, set" Usage="System.Globalization.NumberFormatInfo.NumberNegativePattern" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wzorzec formatu dla ujemnych wartości liczbowych.</summary>
        <value>Wzorzec formatu dla ujemnych wartości liczbowych.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Globalization.NumberFormatInfo.NumberNegativePattern%2A> Właściwość definiuje format wartości ujemnych sformatowanych przy użyciu standardowego ciągu formatu liczbowego "N". Ta właściwość posiada jedną z wartości w tabeli poniżej. Symbol "-" to <xref:System.Globalization.NumberFormatInfo.NegativeSign%2A> i `n` jest liczbą.  
  
|Wartość|Wzór skojarzony|  
|-----------|------------------------|  
|0|(n)|  
|1|-n|  
|2|-n|  
|3|n-|  
|4|n -|  
  
 Wartością domyślną dla niezmiennej kultury zwracaną przez <xref:System.Globalization.NumberFormatInfo.InvariantInfo%2A> właściwość jest 1, która reprezentuje literę "-n", gdzie *n* jest liczbą.  
  
   
  
## Examples  
 Poniższy przykład wyświetla wartość przy użyciu różnych <xref:System.Globalization.NumberFormatInfo.NumberNegativePattern%2A> wzorców.  
  
 [!code-cpp[Classic NumberFormatInfo.NumberNegativePattern Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic NumberFormatInfo.NumberNegativePattern Example/CPP/source.cpp#1)]
 [!code-csharp[Classic NumberFormatInfo.NumberNegativePattern Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic NumberFormatInfo.NumberNegativePattern Example/CS/source.cs#1)]
 [!code-vb[Classic NumberFormatInfo.NumberNegativePattern Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic NumberFormatInfo.NumberNegativePattern Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Właściwość jest ustawiana na wartość, która jest mniejsza od 0 lub większa niż 4.</exception>
        <exception cref="T:System.InvalidOperationException">Właściwość jest ustawiana i <see cref="T:System.Globalization.NumberFormatInfo" /> obiekt jest tylko do odczytu.</exception>
        <altmember cref="P:System.Globalization.NumberFormatInfo.NumberDecimalDigits" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.NumberDecimalSeparator" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.NumberGroupSeparator" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.NumberGroupSizes" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.NaNSymbol" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencyNegativePattern" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentNegativePattern" />
      </Docs>
    </Member>
    <Member MemberName="PercentDecimalDigits">
      <MemberSignature Language="C#" Value="public int PercentDecimalDigits { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 PercentDecimalDigits" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.NumberFormatInfo.PercentDecimalDigits" />
      <MemberSignature Language="VB.NET" Value="Public Property PercentDecimalDigits As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int PercentDecimalDigits { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.PercentDecimalDigits : int with get, set" Usage="System.Globalization.NumberFormatInfo.PercentDecimalDigits" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia liczbę miejsc dziesiętnych, które mają być używane w wartościach procentowych.</summary>
        <value>Liczba miejsc dziesiętnych do użycia w wartościach procentowych. Wartość domyślna dla <see cref="P:System.Globalization.NumberFormatInfo.InvariantInfo" /> wynosi 2.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Globalization.NumberFormatInfo.PercentDecimalDigits%2A> Właściwość jest używana z ciągiem formatu standardowego "P" bez specyfikatora dokładności w operacjach formatowania liczbowego. Definiuje domyślną liczbę cyfr ułamkowych, które pojawiają się po separatorze dziesiętnym. Ta wartość jest zastępowana, jeśli jest używany specyfikator dokładności. Aby uzyskać więcej informacji, zobacz [Standardowe ciągi formatujące](~/docs/standard/base-types/standard-numeric-format-strings.md)liczby.  
  
   
  
## Examples  
 Poniższy przykład ilustruje efekt zmiany <xref:System.Globalization.NumberFormatInfo.PercentDecimalDigits%2A> właściwości.  
  
 [!code-cpp[PercentDecimalDigits#1](~/samples/snippets/cpp/VS_Snippets_CLR/PercentDecimalDigits/CPP/percentdecimaldigits.cpp#1)]
 [!code-csharp[PercentDecimalDigits#1](~/samples/snippets/csharp/VS_Snippets_CLR/PercentDecimalDigits/CS/percentdecimaldigits.cs#1)]
 [!code-vb[PercentDecimalDigits#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/PercentDecimalDigits/VB/percentdecimaldigits.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Właściwość jest ustawiana na wartość, która jest mniejsza od 0 lub większa niż 99.</exception>
        <exception cref="T:System.InvalidOperationException">Właściwość jest ustawiana i <see cref="T:System.Globalization.NumberFormatInfo" /> obiekt jest tylko do odczytu.</exception>
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentDecimalSeparator" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentGroupSeparator" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentGroupSizes" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentSymbol" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentNegativePattern" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentPositivePattern" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencyDecimalDigits" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.NumberDecimalDigits" />
      </Docs>
    </Member>
    <Member MemberName="PercentDecimalSeparator">
      <MemberSignature Language="C#" Value="public string PercentDecimalSeparator { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PercentDecimalSeparator" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.NumberFormatInfo.PercentDecimalSeparator" />
      <MemberSignature Language="VB.NET" Value="Public Property PercentDecimalSeparator As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ PercentDecimalSeparator { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.PercentDecimalSeparator : string with get, set" Usage="System.Globalization.NumberFormatInfo.PercentDecimalSeparator" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia ciąg, który ma być używany jako separator dziesiętny w wartościach procentowych.</summary>
        <value>Ciąg, który ma być używany jako separator dziesiętny w wartościach procentowych. Wartość domyślna dla <see cref="P:System.Globalization.NumberFormatInfo.InvariantInfo" /> to ".".</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Globalization.NumberFormatInfo.PercentDecimalSeparator%2A> Właściwość jest używana z ciągiem formatu standardowego "P", aby zdefiniować symbol oddzielający całkę od cyfr ułamkowych. Aby uzyskać więcej informacji, zobacz [Standardowe ciągi formatujące](~/docs/standard/base-types/standard-numeric-format-strings.md)liczby.  
  
   
  
## Examples  
 Poniższy przykład ilustruje efekt zmiany <xref:System.Globalization.NumberFormatInfo.PercentDecimalSeparator%2A> właściwości.  
  
 [!code-cpp[PercentDecimalSeparator#1](~/samples/snippets/cpp/VS_Snippets_CLR/PercentDecimalSeparator/CPP/percentdecimalseparator.cpp#1)]
 [!code-csharp[PercentDecimalSeparator#1](~/samples/snippets/csharp/VS_Snippets_CLR/PercentDecimalSeparator/CS/percentdecimalseparator.cs#1)]
 [!code-vb[PercentDecimalSeparator#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/PercentDecimalSeparator/VB/percentdecimalseparator.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Właściwość jest ustawiana na <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">Właściwość jest ustawiana i <see cref="T:System.Globalization.NumberFormatInfo" /> obiekt jest tylko do odczytu.</exception>
        <exception cref="T:System.ArgumentException">Właściwość jest ustawiana na pusty ciąg.</exception>
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentDecimalDigits" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentGroupSeparator" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentGroupSizes" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentSymbol" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentNegativePattern" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentPositivePattern" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.NumberDecimalSeparator" />
      </Docs>
    </Member>
    <Member MemberName="PercentGroupSeparator">
      <MemberSignature Language="C#" Value="public string PercentGroupSeparator { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PercentGroupSeparator" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.NumberFormatInfo.PercentGroupSeparator" />
      <MemberSignature Language="VB.NET" Value="Public Property PercentGroupSeparator As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ PercentGroupSeparator { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.PercentGroupSeparator : string with get, set" Usage="System.Globalization.NumberFormatInfo.PercentGroupSeparator" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia ciąg oddzielający grupy cyfr z lewej strony dziesiętnej wartości procentowej.</summary>
        <value>Ciąg oddzielający grupy cyfr z lewej strony dziesiętnej wartości procentowej. Wartość domyślna dla <see cref="P:System.Globalization.NumberFormatInfo.InvariantInfo" /> to ",".</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Globalization.NumberFormatInfo.PercentGroupSeparator%2A> Właściwość jest używana z ciągiem formatu standardowego "P", aby zdefiniować symbol oddzielający grupy liczb całkowitych. Aby uzyskać więcej informacji, zobacz [Standardowe ciągi formatujące](~/docs/standard/base-types/standard-numeric-format-strings.md)liczby.  
  
   
  
## Examples  
 Poniższy przykład ilustruje efekt zmiany <xref:System.Globalization.NumberFormatInfo.PercentGroupSeparator%2A> właściwości.  
  
 [!code-cpp[PercentGroupSeparator#1](~/samples/snippets/cpp/VS_Snippets_CLR/PercentGroupSeparator/CPP/percentgroupseparator.cpp#1)]
 [!code-csharp[PercentGroupSeparator#1](~/samples/snippets/csharp/VS_Snippets_CLR/PercentGroupSeparator/CS/percentgroupseparator.cs#1)]
 [!code-vb[PercentGroupSeparator#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/PercentGroupSeparator/VB/percentgroupseparator.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Właściwość jest ustawiana na <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">Właściwość jest ustawiana i <see cref="T:System.Globalization.NumberFormatInfo" /> obiekt jest tylko do odczytu.</exception>
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentDecimalDigits" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentDecimalSeparator" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentGroupSizes" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentSymbol" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentNegativePattern" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentPositivePattern" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencyGroupSeparator" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.NumberGroupSeparator" />
      </Docs>
    </Member>
    <Member MemberName="PercentGroupSizes">
      <MemberSignature Language="C#" Value="public int[] PercentGroupSizes { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32[] PercentGroupSizes" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.NumberFormatInfo.PercentGroupSizes" />
      <MemberSignature Language="VB.NET" Value="Public Property PercentGroupSizes As Integer()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;int&gt; ^ PercentGroupSizes { cli::array &lt;int&gt; ^ get(); void set(cli::array &lt;int&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.PercentGroupSizes : int[] with get, set" Usage="System.Globalization.NumberFormatInfo.PercentGroupSizes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia liczbę cyfr w każdej grupie z lewej strony dziesiętnej wartości procentowej.</summary>
        <value>Liczba cyfr w każdej grupie po lewej stronie dziesiętnej wartości procentowej. Wartość domyślna dla <see cref="P:System.Globalization.NumberFormatInfo.InvariantInfo" /> jest tablicą jednowymiarową z tylko jednym elementem, która jest ustawiona na 3.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Globalization.NumberFormatInfo.PercentGroupSizes%2A> Właściwość jest używana z ciągiem formatu standardowego "P", aby zdefiniować liczbę cyfr, które pojawiają się w grupach całkowitych. Aby uzyskać więcej informacji, zobacz [Standardowe ciągi formatujące](~/docs/standard/base-types/standard-numeric-format-strings.md)liczby. Każdy element w tablicy jednowymiarowej musi być liczbą całkowitą z przedziału od 1 do 9. Ostatni element może mieć wartość 0.  
  
 Pierwszy element tablicy definiuje liczbę elementów w najmniej znaczącej grupie cyfr bezpośrednio po lewej stronie <xref:System.Globalization.NumberFormatInfo.PercentDecimalSeparator%2A>. Każdy kolejny element odnosi się do następnej znaczącej grupy cyfr z lewej strony poprzedniej grupy. Jeśli ostatni element tablicy nie jest równy 0, pozostałe cyfry są pogrupowane na podstawie ostatniego elementu tablicy. Jeśli ostatni element ma wartość 0, pozostałe cyfry nie są zgrupowane.  
  
 Na przykład, jeśli tablica zawiera {3, 4, 5}, cyfry są pogrupowane podobne do "55, 55555, 55555, 55555, 4444, 333.00%". Jeśli tablica zawiera wartości {3, 4, 0}, cyfry są grupowane podobnie jak "55555555555555555, 4444, 333.00%".  
  
   
  
## Examples  
 Poniższy przykład ilustruje efekt zmiany <xref:System.Globalization.NumberFormatInfo.PercentGroupSizes%2A> właściwości.  
  
 [!code-cpp[PercentGroupSizes#1](~/samples/snippets/cpp/VS_Snippets_CLR/PercentGroupSizes/CPP/percentgroupsizes.cpp#1)]
 [!code-csharp[PercentGroupSizes#1](~/samples/snippets/csharp/VS_Snippets_CLR/PercentGroupSizes/CS/percentgroupsizes.cs#1)]
 [!code-vb[PercentGroupSizes#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/PercentGroupSizes/VB/percentgroupsizes.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Właściwość jest ustawiana na <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">Właściwość jest ustawiana i tablica zawiera wpis, który jest mniejszy niż 0 lub większy niż 9.  
  
 —lub—  
  
 Właściwość jest ustawiana i tablica zawiera wpis, inny niż ostatni wpis, ustawiony na wartość 0.</exception>
        <exception cref="T:System.InvalidOperationException">Właściwość jest ustawiana i <see cref="T:System.Globalization.NumberFormatInfo" /> obiekt jest tylko do odczytu.</exception>
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentDecimalDigits" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentDecimalSeparator" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentGroupSeparator" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentSymbol" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentNegativePattern" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentPositivePattern" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencyGroupSizes" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.NumberGroupSizes" />
      </Docs>
    </Member>
    <Member MemberName="PercentNegativePattern">
      <MemberSignature Language="C#" Value="public int PercentNegativePattern { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 PercentNegativePattern" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.NumberFormatInfo.PercentNegativePattern" />
      <MemberSignature Language="VB.NET" Value="Public Property PercentNegativePattern As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int PercentNegativePattern { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.PercentNegativePattern : int with get, set" Usage="System.Globalization.NumberFormatInfo.PercentNegativePattern" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wzorzec formatu dla ujemnych wartości procentowych.</summary>
        <value>Wzorzec formatu dla ujemnych wartości procentowych. Wartością domyślną <see cref="P:System.Globalization.NumberFormatInfo.InvariantInfo" /> jest 0, która reprezentuje wartość "-n%", gdzie "%" <see cref="P:System.Globalization.NumberFormatInfo.PercentSymbol" /> jest <paramref name="n" /> liczbą.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Globalization.NumberFormatInfo.PercentNegativePattern%2A> Właściwość jest używana z ciągiem formatu standardowego "P", aby zdefiniować wzorzec ujemnych wartości procentowych. Aby uzyskać więcej informacji, zobacz [Standardowe ciągi formatujące](~/docs/standard/base-types/standard-numeric-format-strings.md)liczby. Ta właściwość posiada jedną z wartości w tabeli poniżej. Symbol "%" jest <xref:System.Globalization.NumberFormatInfo.PercentSymbol%2A>, symbol "-" <xref:System.Globalization.NumberFormatInfo.NegativeSign%2A>jest, i `n` jest liczbą. Wartości 3-11 zostały wprowadzone w .NET Framework 2,0 i nie mogą być używane we wcześniejszych wersjach.  
  
|Wartość|Wzór skojarzony|  
|-----------|------------------------|  
|0|Azotan|  
|1|Azotan|  
|2|-%n|  
|3|%-n|  
|4|%n-|  
|5|n-%|  
|6|n%-|  
|7|-% n|  
|8|n%-|  
|9|Azotan|  
|10|%-n|  
|11|n-%|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Właściwość jest ustawiana na wartość, która jest mniejsza od 0 lub większa niż 11.</exception>
        <exception cref="T:System.InvalidOperationException">Właściwość jest ustawiana i <see cref="T:System.Globalization.NumberFormatInfo" /> obiekt jest tylko do odczytu.</exception>
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentDecimalDigits" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentDecimalSeparator" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentGroupSeparator" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentGroupSizes" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentSymbol" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentPositivePattern" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencyNegativePattern" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.NumberNegativePattern" />
      </Docs>
    </Member>
    <Member MemberName="PercentPositivePattern">
      <MemberSignature Language="C#" Value="public int PercentPositivePattern { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 PercentPositivePattern" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.NumberFormatInfo.PercentPositivePattern" />
      <MemberSignature Language="VB.NET" Value="Public Property PercentPositivePattern As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int PercentPositivePattern { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.PercentPositivePattern : int with get, set" Usage="System.Globalization.NumberFormatInfo.PercentPositivePattern" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wzorzec formatu dla dodatnich wartości procentowych.</summary>
        <value>Wzorzec formatu dla dodatnich wartości procentowych. Wartością domyślną <see cref="P:System.Globalization.NumberFormatInfo.InvariantInfo" /> jest 0, która reprezentuje wartość "n%", gdzie "%" <see cref="P:System.Globalization.NumberFormatInfo.PercentSymbol" /> jest <paramref name="n" /> liczbą.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Globalization.NumberFormatInfo.PercentPositivePattern%2A> Właściwość jest używana z ciągiem formatu standardowego "P" w celu zdefiniowania wzorca wartości procentowych. Aby uzyskać więcej informacji, zobacz [Standardowe ciągi formatujące](~/docs/standard/base-types/standard-numeric-format-strings.md)liczby. Ta właściwość posiada jedną z wartości w tabeli poniżej. Symbol "%" jest <xref:System.Globalization.NumberFormatInfo.PercentSymbol%2A> `n` liczbą.  
  
|Wartość|Wzór skojarzony|  
|-----------|------------------------|  
|0|n %|  
|1|n%|  
|2|%n|  
|3|% n|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Właściwość jest ustawiana na wartość, która jest mniejsza od 0 lub większa niż 3.</exception>
        <exception cref="T:System.InvalidOperationException">Właściwość jest ustawiana i <see cref="T:System.Globalization.NumberFormatInfo" /> obiekt jest tylko do odczytu.</exception>
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentDecimalDigits" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentDecimalSeparator" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentGroupSeparator" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentGroupSizes" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentSymbol" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentNegativePattern" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencyPositivePattern" />
      </Docs>
    </Member>
    <Member MemberName="PercentSymbol">
      <MemberSignature Language="C#" Value="public string PercentSymbol { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PercentSymbol" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.NumberFormatInfo.PercentSymbol" />
      <MemberSignature Language="VB.NET" Value="Public Property PercentSymbol As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ PercentSymbol { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.PercentSymbol : string with get, set" Usage="System.Globalization.NumberFormatInfo.PercentSymbol" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia ciąg, który ma być używany jako symbol procentu.</summary>
        <value>Ciąg, który ma być używany jako symbol procentu. Wartość domyślna dla <see cref="P:System.Globalization.NumberFormatInfo.InvariantInfo" /> to "%".</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ciąg przypisany do <xref:System.Globalization.NumberFormatInfo.PercentSymbol%2A> właściwości zostanie uwzględniony w ciągu wynikowym, gdy wartość liczbowa jest formatowana przy użyciu "P" lub z ciągiem formatu zawierającym "%".  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Właściwość jest ustawiana na <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">Właściwość jest ustawiana i <see cref="T:System.Globalization.NumberFormatInfo" /> obiekt jest tylko do odczytu.</exception>
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentDecimalDigits" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentDecimalSeparator" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentGroupSeparator" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentGroupSizes" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentNegativePattern" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentPositivePattern" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencySymbol" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.NaNSymbol" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.PerMilleSymbol" />
      </Docs>
    </Member>
    <Member MemberName="PerMilleSymbol">
      <MemberSignature Language="C#" Value="public string PerMilleSymbol { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PerMilleSymbol" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.NumberFormatInfo.PerMilleSymbol" />
      <MemberSignature Language="VB.NET" Value="Public Property PerMilleSymbol As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ PerMilleSymbol { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.PerMilleSymbol : string with get, set" Usage="System.Globalization.NumberFormatInfo.PerMilleSymbol" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia ciąg, który ma być używany jako symbol Mille.</summary>
        <value>Ciąg, który ma być używany jako symbol na Mille. Wartością domyślną <see cref="P:System.Globalization.NumberFormatInfo.InvariantInfo" /> jest "‰", która jest znakiem Unicode U + 2030.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ciąg przypisany do <xref:System.Globalization.NumberFormatInfo.PerMilleSymbol%2A> właściwości zostanie uwzględniony w ciągu wynikowym, gdy wartość liczbowa jest formatowana przy użyciu ciągu formatu zawierającego "‰".  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Właściwość jest ustawiana na <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">Właściwość jest ustawiana i <see cref="T:System.Globalization.NumberFormatInfo" /> obiekt jest tylko do odczytu.</exception>
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencySymbol" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.NaNSymbol" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentSymbol" />
      </Docs>
    </Member>
    <Member MemberName="PositiveInfinitySymbol">
      <MemberSignature Language="C#" Value="public string PositiveInfinitySymbol { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PositiveInfinitySymbol" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.NumberFormatInfo.PositiveInfinitySymbol" />
      <MemberSignature Language="VB.NET" Value="Public Property PositiveInfinitySymbol As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ PositiveInfinitySymbol { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.PositiveInfinitySymbol : string with get, set" Usage="System.Globalization.NumberFormatInfo.PositiveInfinitySymbol" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia ciąg, który reprezentuje nieskończoność dodatnią.</summary>
        <value>Ciąg, który reprezentuje nieskończoność dodatnią. Wartość domyślna dla <see cref="P:System.Globalization.NumberFormatInfo.InvariantInfo" /> to "nieskończoność".</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby uzyskać więcej informacji na temat nieskończoności <xref:System.Double> dodatniej, zobacz lub <xref:System.Single>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Właściwość jest ustawiana na <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">Właściwość jest ustawiana i <see cref="T:System.Globalization.NumberFormatInfo" /> obiekt jest tylko do odczytu.</exception>
        <altmember cref="P:System.Globalization.NumberFormatInfo.NegativeInfinitySymbol" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.NaNSymbol" />
      </Docs>
    </Member>
    <Member MemberName="PositiveSign">
      <MemberSignature Language="C#" Value="public string PositiveSign { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PositiveSign" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.NumberFormatInfo.PositiveSign" />
      <MemberSignature Language="VB.NET" Value="Public Property PositiveSign As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ PositiveSign { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.PositiveSign : string with get, set" Usage="System.Globalization.NumberFormatInfo.PositiveSign" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia ciąg, który oznacza, że skojarzona liczba jest dodatnia.</summary>
        <value>Ciąg, który oznacza, że skojarzona liczba jest dodatnia. Wartość domyślna dla <see cref="P:System.Globalization.NumberFormatInfo.InvariantInfo" /> to "+".</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość jest używana tylko do analizowania ciągów liczbowych, a nie do formatowania.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">W operacji ustawiania wartość, która ma zostać przypisana, <see langword="null" />to.</exception>
        <exception cref="T:System.InvalidOperationException">Właściwość jest ustawiana i <see cref="T:System.Globalization.NumberFormatInfo" /> obiekt jest tylko do odczytu.</exception>
        <altmember cref="P:System.Globalization.NumberFormatInfo.NegativeSign" />
      </Docs>
    </Member>
    <Member MemberName="ReadOnly">
      <MemberSignature Language="C#" Value="public static System.Globalization.NumberFormatInfo ReadOnly (System.Globalization.NumberFormatInfo nfi);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Globalization.NumberFormatInfo ReadOnly(class System.Globalization.NumberFormatInfo nfi) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.NumberFormatInfo.ReadOnly(System.Globalization.NumberFormatInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ReadOnly (nfi As NumberFormatInfo) As NumberFormatInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Globalization::NumberFormatInfo ^ ReadOnly(System::Globalization::NumberFormatInfo ^ nfi);" />
      <MemberSignature Language="F#" Value="static member ReadOnly : System.Globalization.NumberFormatInfo -&gt; System.Globalization.NumberFormatInfo" Usage="System.Globalization.NumberFormatInfo.ReadOnly nfi" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Globalization.NumberFormatInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nfi" Type="System.Globalization.NumberFormatInfo" />
      </Parameters>
      <Docs>
        <param name="nfi"><see cref="T:System.Globalization.NumberFormatInfo" /> Do zawijania.</param>
        <summary>Zwraca otokę tylko <see cref="T:System.Globalization.NumberFormatInfo" /> do odczytu.</summary>
        <returns>Otoka w trybie <see cref="T:System.Globalization.NumberFormatInfo" /> tylko do odczytu. <paramref name="nfi" /></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta otoka zapobiega wszelkim `nfi`modyfikacjom programu.  
  
 Próba wykonania przypisania do właściwości tylko <xref:System.Globalization.NumberFormatInfo> do odczytu powoduje wystąpienie elementu. <xref:System.InvalidOperationException>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="nfi" />jest <see langword="null" />.</exception>
        <altmember cref="P:System.Globalization.NumberFormatInfo.IsReadOnly" />
      </Docs>
    </Member>
  </Members>
</Type>
