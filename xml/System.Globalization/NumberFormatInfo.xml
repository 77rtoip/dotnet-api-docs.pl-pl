<Type Name="NumberFormatInfo" FullName="System.Globalization.NumberFormatInfo">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="9c6b8e777d0ede00a3069a4258600d8f466fc2d1" />
    <Meta Name="ms.sourcegitcommit" Value="84c54c0c7d64827a5637d1f05e74e1f0598606a1" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="08/27/2018" />
    <Meta Name="ms.locfileid" Value="42984337" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class NumberFormatInfo : ICloneable, IFormatProvider" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit NumberFormatInfo extends System.Object implements class System.ICloneable, class System.IFormatProvider" />
  <TypeSignature Language="DocId" Value="T:System.Globalization.NumberFormatInfo" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class NumberFormatInfo&#xA;Implements ICloneable, IFormatProvider" />
  <TypeSignature Language="C++ CLI" Value="public ref class NumberFormatInfo sealed : ICloneable, IFormatProvider" />
  <TypeSignature Language="F#" Value="type NumberFormatInfo = class&#xA;    interface ICloneable&#xA;    interface IFormatProvider" />
  <AssemblyInfo>
    <AssemblyName>System.Globalization</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IFormatProvider</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Specyficzne dla kultury informacje dotyczące formatowania i analizowania wartości liczbowych.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Globalization.NumberFormatInfo> Klasa zawiera informacje specyficzne dla kultury, która jest używana podczas formatowania i analizowania wartości liczbowych. Informacje te obejmują symbol waluty, symbol dziesiętny, symbol separatora grupy i symboli dla znaków pozytywnych i negatywnych.  
  
-   [Utworzenie wystąpienia obiektu NumberFormatInfo](#Instantiating)  
  
    -   [Dla bieżącej kultury](#Instantiating_Current)  
  
    -   [Dla niezmiennej kultury](#Instantiating_Invariant)  
  
    -   [Dla określonej kultury](#Instantiating_Specific)  
  
    -   [Dla kultury neutralnej](#Instantiating_Neutral)  
  
-   [NumberFormatInfo i dane dynamiczne](#dynamic)  
  
-   [IFormatProvider, NumberFormatInfo i formatowanie liczbowe](#formatProvider)  
  
-   [Ciągi formatów i właściwości NumberFormatInfo](#properties)  
  
-   [Modyfikowanie właściwości NumberFormatInfo](#modifying)  
  
    -   [Modyfikowanie symbolu waluty i wzoru](#currency)  
  
    -   [Formatowanie krajowego numeru identyfikacyjnego](#id)  
  
-   [Analizowanie ciągów liczbowych](#parsing)  
  
    -   [Analiza ciągów użytkownika](#ParseUser)  
  
    -   [Serializacja i Deserializacja danych liczbowych](#ParseSerial)  
  
<a name="Instantiating"></a>   
## <a name="instantiating-a-numberformatinfo-object"></a>Utworzenie wystąpienia obiektu NumberFormatInfo  
 Można utworzyć wystąpienie <xref:System.Globalization.NumberFormatInfo> obiekt, który reprezentuje konwencje formatowania bieżącej kultury niezmiennej kultury, określonej kultury i kultury neutralnej.  
  
<a name="Instantiating_Current"></a>   
## <a name="instantiating-a-numberformatinfo-object-for-the-current-culture"></a>Utworzenie wystąpienia obiektu NumberFormatInfo dla bieżącej kultury  
 Można utworzyć wystąpienie <xref:System.Globalization.NumberFormatInfo> obiektu dla bieżącej kultury wątku w dowolnym z następujących sposobów. W każdym przypadku zwracanego <xref:System.Globalization.NumberFormatInfo> obiekt jest tylko do odczytu.  
  
-   Pobierając <xref:System.Globalization.CultureInfo> obiekt, który reprezentuje bieżącą kulturę wątku z <xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=nameWithType> właściwości i pobierania <xref:System.Globalization.CultureInfo> obiekt z jego <xref:System.Globalization.CultureInfo.NumberFormat%2A?displayProperty=nameWithType> właściwości.  
  
-   Pobierając <xref:System.Globalization.NumberFormatInfo> obiektu zwróconego przez `static` (`Shared` w języku Visual Basic) <xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A> właściwości.  
  
-   Przez wywołanie metody <xref:System.Globalization.NumberFormatInfo.GetInstance%2A> metody z <xref:System.Globalization.CultureInfo> obiekt, który reprezentuje bieżącą kulturę.  
  
 W poniższym przykładzie użyto te trzy sposoby tworzenia <xref:System.Globalization.NumberFormatInfo> obiekty reprezentujące konwencje formatowania bieżącej kultury. Pobiera również wartość <xref:System.Globalization.NumberFormatInfo.IsReadOnly%2A> właściwości, aby zilustrować, że każdy obiekt jest tylko do odczytu.  
  
 [!code-csharp[System.Globalization.NumberFormatInfo.Class.Instantiate#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.numberformatinfo.class.instantiate/cs/instantiate1.cs#1)]
 [!code-vb[System.Globalization.NumberFormatInfo.Class.Instantiate#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.numberformatinfo.class.instantiate/vb/instantiate1.vb#1)]  
  
 Możesz utworzyć zapisywalnego <xref:System.Globalization.NumberFormatInfo> obiekt, który reprezentuje konwencje bieżącej kultury wątku w dowolnym z następujących sposobów:  
  
-   Pobierając <xref:System.Globalization.NumberFormatInfo> obiektu sposoby pokazano w poprzednim przykładzie kodu i wywoływania <xref:System.Globalization.NumberFormatInfo.Clone%2A> zwracanego metody <xref:System.Globalization.NumberFormatInfo> obiektu. Spowoduje to utworzenie kopię oryginału <xref:System.Globalization.NumberFormatInfo> obiektu, chyba że jego <xref:System.Globalization.NumberFormatInfo.IsReadOnly%2A> właściwość `false`.  
  
-   Przez wywołanie metody <xref:System.Globalization.CultureInfo.CreateSpecificCulture%2A?displayProperty=nameWithType> metodę w celu utworzenia <xref:System.Globalization.CultureInfo> obiekt, który reprezentuje bieżącą kulturę, a następnie użyć jej <xref:System.Globalization.CultureInfo.NumberFormat%2A?displayProperty=nameWithType> właściwość służąca do pobierania <xref:System.Globalization.NumberFormatInfo> obiektu.  
  
 Poniższy przykład ilustruje te dwa sposoby tworzenia wystąpienia <xref:System.Globalization.NumberFormatInfo> obiektu, a następnie wyświetla wartość jego <xref:System.Globalization.NumberFormatInfo.IsReadOnly%2A> właściwości, aby zilustrować, że obiekt nie jest tylko do odczytu.  
  
 [!code-csharp[System.Globalization.NumberFormatInfo.Class.Instantiate#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.numberformatinfo.class.instantiate/cs/instantiate2.cs#2)]
 [!code-vb[System.Globalization.NumberFormatInfo.Class.Instantiate#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.numberformatinfo.class.instantiate/vb/instantiate2.vb#2)]  
  
 Należy zauważyć, że system operacyjny Windows pozwala użytkownikowi zastąpić niektóre <xref:System.Globalization.NumberFormatInfo> wartości właściwości używane w liczbowych formatowania i analizowania operacji za pomocą **Region i język** w Panelu sterowania. Na przykład wybrać użytkownika, którego kultura jest angielski (Stany Zjednoczone) do wyświetlania wartości waluty USD 1.1 zamiast domyślnego $1.1. <xref:System.Globalization.NumberFormatInfo> Obiektów, pobrać w sposób omówionych wcześniej wszystkie odzwierciedlać te zastąpienia użytkownika. Jeśli jest to niepożądane, możesz utworzyć <xref:System.Globalization.NumberFormatInfo> obiektu, który nie będzie odzwierciedlał napisanie użytkownika (, a ponadto odczytu/zapisu, a nie tylko do odczytu) przez wywołanie metody <xref:System.Globalization.CultureInfo.%23ctor%28System.String%2CSystem.Boolean%29?displayProperty=nameWithType> Konstruktor i podanie wartości `false` dla `useUserOverride` argument. W poniższym przykładzie przedstawiono ilustracja dla systemu, którego bieżącą kulturą jest angielski (Stany Zjednoczone) i którego symbol waluty została zmieniona z domyślnego $ do USD.  
  
 [!code-csharp[System.Globalization.NumberFormatInfo.Class.Instantiate#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.numberformatinfo.class.instantiate/cs/instantiate3.cs#3)]
 [!code-vb[System.Globalization.NumberFormatInfo.Class.Instantiate#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.numberformatinfo.class.instantiate/vb/instantiate3.vb#3)]  
  
 Jeśli <xref:System.Globalization.CultureInfo.UseUserOverride%2A?displayProperty=nameWithType> właściwość jest ustawiona na `true`, właściwości <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType>, <xref:System.Globalization.CultureInfo.NumberFormat%2A?displayProperty=nameWithType>, i <xref:System.Globalization.CultureInfo.TextInfo%2A?displayProperty=nameWithType> są również pobierane z ustawień użytkownika. Jeśli ustawienia użytkownika są niezgodne z kulturą skojarzoną z <xref:System.Globalization.CultureInfo> obiektu (na przykład, jeśli wybrany kalendarz nie jest jednym z kalendarzy rozbiciu <xref:System.Globalization.CultureInfo.OptionalCalendars%2A> właściwości), wyniki metod i wartości właściwości nie zdefiniowano.  
  
<a name="Instantiating_Invariant"></a>   
## <a name="instantiating-a-numberformatinfo-object-for-the-invariant-culture"></a>Utworzenie wystąpienia obiektu NumberFormatInfo dla niezmiennej kultury  
 Niezmienna kultura reprezentuje kulturę, w której nie uwzględnia się ustawień kulturowych. Jest ona oparta na język angielski, ale nie na dowolnym określonym anglojęzycznego kraju/regionie. Mimo że danych określonych kultur może być dynamiczny i można zmieniać, aby odzwierciedlić nowe konwencje kultury lub preferencje użytkownika, danych o niezmiennej kultury nie zmienia się. A <xref:System.Globalization.NumberFormatInfo> obiekt, który reprezentuje konwencje formatowania niezmiennej kultury może służyć do formatowania operacje, w wyniku której parametry nie powinny zmieniać przez kulturę.  
  
 Można utworzyć wystąpienie <xref:System.Globalization.NumberFormatInfo> obiekt, który reprezentuje konwencje formatowania niezmiennej kultury w następujący sposób:  
  
-   Poprzez pobranie wartości <xref:System.Globalization.NumberFormatInfo.InvariantInfo%2A> właściwości. Zwrócony <xref:System.Globalization.NumberFormatInfo> obiekt jest tylko do odczytu.  
  
-   Poprzez pobranie wartości <xref:System.Globalization.CultureInfo.NumberFormat%2A?displayProperty=nameWithType> właściwość <xref:System.Globalization.CultureInfo> obiektu, który jest zwracany przez <xref:System.Globalization.CultureInfo.InvariantCulture%2A?displayProperty=nameWithType> właściwości. Zwrócony <xref:System.Globalization.NumberFormatInfo> obiekt jest tylko do odczytu.  
  
-   Przez wywołanie metody bez parametrów <xref:System.Globalization.NumberFormatInfo.%23ctor%2A> konstruktora klasy. Zwrócony <xref:System.Globalization.NumberFormatInfo> obiektu jest do odczytu/zapisu.  
  
 W poniższym przykładzie użyto, każda z tych metod do utworzenia wystąpienia <xref:System.Globalization.NumberFormatInfo> obiekt, który reprezentuje niezmienną kulturę. Następnie wskazuje, czy obiekt jest tylko do odczytu  
  
 [!code-csharp[System.Globalization.NumberFormatInfo.Class.Instantiate#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.numberformatinfo.class.instantiate/cs/instantiate4.cs#4)]
 [!code-vb[System.Globalization.NumberFormatInfo.Class.Instantiate#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.numberformatinfo.class.instantiate/vb/instantiate4.vb#4)]  
  
<a name="Instantiating_Specific"></a>   
## <a name="instantiating-a-numberformatinfo-object-for-a-specific-culture"></a>Utworzenie wystąpienia obiektu NumberFormatInfo dla określonej kultury  
 Określonej kultury reprezentuje język, który jest używany w danym kraju/regionie. Na przykład en US jest określoną kulturę, która reprezentuje język angielski, używany w Stanach Zjednoczonych i en-urząd certyfikacji jest określoną kulturę, która reprezentuje język angielski, używany w Kanadzie. Można utworzyć wystąpienie <xref:System.Globalization.NumberFormatInfo> obiekt, który reprezentuje konwencje formatowania określonej kultury w następujący sposób:  
  
-   Przez wywołanie metody <xref:System.Globalization.CultureInfo.GetCultureInfo%28System.String%29?displayProperty=nameWithType> metody i pobieranie wartości zwracanej <xref:System.Globalization.CultureInfo> obiektu <xref:System.Globalization.CultureInfo.NumberFormat%2A> właściwości. Zwrócony <xref:System.Globalization.NumberFormatInfo> obiekt jest tylko do odczytu.  
  
-   Przez przekazanie <xref:System.Globalization.CultureInfo> obiekt, który reprezentuje kulturę, której <xref:System.Globalization.NumberFormatInfo> obiekt ma zostać pobrane statycznej <xref:System.Globalization.NumberFormatInfo.GetInstance%2A> metody. Zwrócony <xref:System.Globalization.NumberFormatInfo> obiektu jest do odczytu/zapisu.  
  
-   Przez wywołanie metody <xref:System.Globalization.CultureInfo.CreateSpecificCulture%2A?displayProperty=nameWithType> metody i pobieranie wartości zwracanej <xref:System.Globalization.CultureInfo> obiektu <xref:System.Globalization.CultureInfo.NumberFormat%2A> właściwości. Zwrócony <xref:System.Globalization.NumberFormatInfo> obiektu jest do odczytu/zapisu.  
  
-   Przez wywołanie jednej z <xref:System.Globalization.CultureInfo.%23ctor%2A?displayProperty=nameWithType> klasy konstruktorów i pobieranie wartości zwracanej <xref:System.Globalization.CultureInfo> obiektu <xref:System.Globalization.CultureInfo.NumberFormat%2A> właściwości. Zwrócony <xref:System.Globalization.NumberFormatInfo> obiektu jest do odczytu/zapisu.  
  
 W poniższym przykładzie użyto tych czterech sposobów tworzenia <xref:System.Globalization.NumberFormatInfo> obiekt, który odzwierciedla konwencje formatowania kultury indonezyjski (Indonezja). Wskazuje także, czy każdy obiekt jest tylko do odczytu.  
  
 [!code-csharp[System.Globalization.NumberFormatInfo.Class.Instantiate#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.numberformatinfo.class.instantiate/cs/instantiate5.cs#5)]
 [!code-vb[System.Globalization.NumberFormatInfo.Class.Instantiate#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.numberformatinfo.class.instantiate/vb/instantiate5.vb#5)]  
  
<a name="Instantiating_Neutral"></a>   
## <a name="instantiating-a-numberformatinfo-object-for-a-neutral-culture"></a>Utworzenie wystąpienia obiektu NumberFormatInfo dla kultury neutralnej  
 Kultury neutralnej reprezentuje kultury lub języka, który jest niezależny od kraju/regionu. Zwykle jest elementem nadrzędnym jeden lub więcej określonych kultur. Na przykład fr jest kultury neutralnej dla języka francuskiego i element nadrzędny kultury fr-FR. Możesz utworzyć <xref:System.Globalization.NumberFormatInfo> obiekt, który reprezentuje konwencje formatowania kultury neutralnej w taki sam sposób, którą tworzysz <xref:System.Globalization.NumberFormatInfo> obiekt, który reprezentuje konwencje formatowania określonej kultury.  
  
> [!NOTE]
>  W [!INCLUDE[net_v35_short](~/includes/net-v35-short-md.md)] i wcześniejszymi wersjami, próby pobrania <xref:System.Globalization.NumberFormatInfo> wyrzuca obiekt, który odzwierciedla konwencje formatowania kultury neutralnej <xref:System.NotSupportedException> wyjątku.  
  
 Jednak ponieważ jest ono niezależne od określonego kraju/regionu, kultury neutralnej nie posiada informacje o formatowaniu specyficzne dla kultury. Zamiast wypełnianie <xref:System.Globalization.NumberFormatInfo> obiekt z ogólnych wartości, zwraca programu .NET Framework <xref:System.Globalization.NumberFormatInfo> obiekt, który odzwierciedla konwencje formatowania określonej kultury, która jest elementem podrzędnym kultury neutralnej. Na przykład <xref:System.Globalization.NumberFormatInfo> obiektu dla kultury neutralnej en odzwierciedla konwencje formatowania kultury en US i <xref:System.Globalization.NumberFormatInfo> obiektu dla kultury fr odzwierciedla konwencje formatowania kultury fr-FR.  
  
 Aby określić, które określonej kultury konwencje formatowania reprezentuje każdej kultury neutralnej, można użyć kodu, jak pokazano poniżej.  
  
 [!code-csharp[System.Globalization.NumberFormatInfo.Class.Instantiate#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.numberformatinfo.class.instantiate/cs/instantiate6c.cs#6)]
 [!code-vb[System.Globalization.NumberFormatInfo.Class.Instantiate#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.numberformatinfo.class.instantiate/vb/instantiate6c.vb#6)]  
  
<a name="dynamic"></a>   
## <a name="numberformatinfo-and-dynamic-data"></a>NumberFormatInfo i dane dynamiczne  
 Formatowanie wartości numerycznych, dostarczone przez dane specyficzne dla kultury <xref:System.Globalization.NumberFormatInfo> klasa jest dynamiczny, podobnie jak dane dotyczące kultury, dostarczone przez <xref:System.Globalization.CultureInfo> klasy. Nie należy czynić żadnych założeń o stabilności wartości dla <xref:System.Globalization.NumberFormatInfo> obiekty, które są skojarzone z określonego <xref:System.Globalization.CultureInfo> obiektów. Tylko dane dostarczane przez niezmiennej kultury i związanych z nią <xref:System.Globalization.NumberFormatInfo> obiektu jest stabilna. Zmienić inne dane między sesjami aplikacji lub nawet w ramach jednej sesji z następujących powodów:  
  
-   **Aktualizacje systemu.** Zmień preferencje kultury, takich jak symbol waluty lub formaty waluty z wartościami wraz z upływem czasu. W takiej sytuacji aktualizacja Windows obejmuje zmiany <xref:System.Globalization.NumberFormatInfo> wartości właściwości dla określonej kultury.  
  
-   **Zamienne.** <xref:System.Globalization.CultureAndRegionInfoBuilder> Klasa może być używana, aby zamienić dane istniejące kultury.  
  
-   **Kaskadowe zmiany wartości właściwości.** Wiele właściwości związane z kulturą można zmieniać w czasie wykonywania, co z kolei powoduje, że <xref:System.Globalization.NumberFormatInfo> dane, aby zmienić. Na przykład bieżąca kultura można zmienić programowo lub za pomocą akcji przez użytkownika. W takim przypadku <xref:System.Globalization.NumberFormatInfo> obiektu zwróconego przez <xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A> zmienia właściwość do obiektu, który został skojarzony z bieżącą kulturą.  
  
-   **Preferencje użytkownika.** Użytkownicy aplikacji mogą zastąpić niektóre wartości skojarzone z bieżącą kulturą systemu za pośrednictwem Opcje regionalne i językowe w Panelu sterowania. Na przykład użytkownicy mogą używać innego symbolu waluty lub symbol separatora dziesiętnego w innej. Jeśli <xref:System.Globalization.CultureInfo.UseUserOverride%2A?displayProperty=nameWithType> właściwość jest ustawiona na `true` (wartość domyślna), właściwości <xref:System.Globalization.NumberFormatInfo> obiektu są również pobierane z ustawień użytkownika.  
  
 Począwszy od programu .NET Framework 2.0, wszystkich użytkowników do przesłonięcia właściwości <xref:System.Globalization.NumberFormatInfo> obiektu są inicjowane, gdy obiekt jest tworzony. Istnieje możliwość niespójności, ponieważ żaden obiekt tworzenie ani proces zastąpienie użytkownika jest atomic i odpowiednie wartości mogą ulec zmianie podczas tworzenia obiektu. Jednak problemy powodujące te niespójności powinny być bardzo rzadko.  
  
 Można kontrolować, czy użytkownik zastąpienia są odzwierciedlane w <xref:System.Globalization.NumberFormatInfo> obiektami, które reprezentują tę samą kulturę co bieżąca kultura wątku. W poniższej tabeli przedstawiono sposoby, w którym <xref:System.Globalization.NumberFormatInfo> obiekt mogą być pobierane i wskazuje, czy wynikowy obiekt odzwierciedla napisanie użytkownika.  
  
|Źródłowy obiekt CultureInfo i NumberFormatInfo|Odzwierciedla napisanie użytkownika|  
|-------------------------------------------------------|-----------------------------|  
|`CultureInfo.CurrentCulture.NumberFormat` Właściwość|Tak|  
|<xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A?displayProperty=nameWithType> Właściwość|Tak|  
|<xref:System.Globalization.CultureInfo.CreateSpecificCulture%2A?displayProperty=nameWithType> — Metoda|Tak|  
|<xref:System.Globalization.CultureInfo.GetCultureInfo%2A?displayProperty=nameWithType> — Metoda|Nie|  
|<xref:System.Globalization.CultureInfo.%23ctor%28System.String%29> Konstruktor|Tak|  
|<xref:System.Globalization.CultureInfo.%23ctor%28System.String%2CSystem.Boolean%29?displayProperty=nameWithType> Konstruktor|Zależy od wartości `useUserOverride` parametru|  
  
 Chyba że istnieje istotny powód, aby robić, należy przestrzegać napisanie użytkownika, gdy używasz <xref:System.Globalization.NumberFormatInfo> obiektu w aplikacjach klienckich do formatowania i analizowania danych wejściowych użytkownika lub, aby wyświetlić dane liczbowe. Dla aplikacji serwera lub nienadzorowanej aplikacji nie należy przestrzegać napisanie użytkownika. Jednak jeśli używasz <xref:System.Globalization.NumberFormatInfo> obiektu albo jawnie lub niejawnie do utrwalenia danych liczbowych w postaci ciągu, należy użyć <xref:System.Globalization.NumberFormatInfo> należy określić obiekt, który odzwierciedla konwencje formatowania kultury niezmiennej, lub ciąg niestandardowego formatu liczb, którego używasz, niezależnie od kultury.  
  
<a name="formatProvider"></a>   
## <a name="iformatprovider-numberformatinfo-and-numeric-formatting"></a>IFormatProvider, NumberformatInfo i formatowanie liczbowe  
 A <xref:System.Globalization.NumberFormatInfo> obiekt jest używany jawnie lub niejawnie liczbowe wszystkich operacjach formatowania. Obejmują one wywołania następujących metod:  
  
-   Wszystkie liczbowe formatowanie metod, takich jak <xref:System.Int32.ToString%2A?displayProperty=nameWithType>, <xref:System.Double.ToString%2A?displayProperty=nameWithType>, i <xref:System.Convert.ToString%28System.Int32%29?displayProperty=nameWithType>.  
  
-   Główne metodę formatowania złożonego, <xref:System.String.Format%2A?displayProperty=nameWithType>.  
  
-   Inne złożone formatowanie metod, takich jak <xref:System.Console.WriteLine%28System.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType> i <xref:System.Text.StringBuilder.AppendFormat%28System.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType>.  
  
 Wprowadź wszystkich operacji formatowania liczbowego użytkowania <xref:System.IFormatProvider> implementacji. <xref:System.IFormatProvider> Interfejs zawiera jedną metodę <xref:System.IFormatProvider.GetFormat%28System.Type%29>. Jest to metoda wywołania zwrotnego, który jest przekazywany <xref:System.Type> obiekt, który reprezentuje typ niezbędnej do zapewnienia informacji o formatowaniu. Metoda jest odpowiedzialna za zwrócenie wystąpienie tego typu lub `null`, jeśli wystąpienie tego typu nie może dostarczyć. Program .NET Framework zawiera dwa <xref:System.IFormatProvider> niedotyczące formatowanie liczb:  
  
-   <xref:System.Globalization.CultureInfo> Klasy, która reprezentuje określoną kulturę (lub określonym językiem w programie określonego kraju/regionu). Wartość numeryczną operacji formatowania <xref:System.Globalization.CultureInfo.GetFormat%2A?displayProperty=nameWithType> metoda zwraca <xref:System.Globalization.NumberFormatInfo> obiekt skojarzony z jego <xref:System.Globalization.CultureInfo.NumberFormat%2A?displayProperty=nameWithType> właściwości.  
  
-   <xref:System.Globalization.NumberFormatInfo> Klasy, która dostarcza informacji na temat Konwencji formatowania jego skojarzony kultury. <xref:System.Globalization.NumberFormatInfo.GetFormat%2A?displayProperty=nameWithType> Metoda zwraca instancję samego siebie.  
  
 Jeśli <xref:System.IFormatProvider> wdrożenia nie zostanie podany do metody formatowania jawnie <xref:System.Globalization.CultureInfo> obiektu zwróconego przez <xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=nameWithType> właściwość, która reprezentuje bieżącą kulturę wątku jest używana.  
  
 W poniższym przykładzie pokazano relację między <xref:System.IFormatProvider> interfejsu i <xref:System.Globalization.NumberFormatInfo> klasy w operacjach formatowania przez zdefiniowanie niestandardowego <xref:System.IFormatProvider> implementacji. Jego <xref:System.IFormatProvider.GetFormat%2A> metoda Wyświetla nazwę typu obiektu, żądane przez operację formatowania. Jeśli interfejs żąda <xref:System.Globalization.NumberFormatInfo> obiektu, ta metoda zapewnia <xref:System.Globalization.NumberFormatInfo> obiektu dla bieżącej kultury wątku. Jako dane wyjściowe w przykładzie pokazano <xref:System.Decimal.ToString%28System.IFormatProvider%29?displayProperty=nameWithType> metod żądań <xref:System.Globalization.NumberFormatInfo> obiektu, aby zapewnić informacje o formatowaniu, natomiast <xref:System.String.Format%28System.IFormatProvider%2CSystem.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType> metod żądań <xref:System.Globalization.NumberFormatInfo> i <xref:System.Globalization.DateTimeFormatInfo> obiektów, a także <xref:System.ICustomFormatter> Implementacja.  
  
 [!code-csharp[System.Globalization.NumberFormatInfo.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.numberformatinfo.class/cs/formatprovider1.cs#1)]
 [!code-vb[System.Globalization.NumberFormatInfo.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.numberformatinfo.class/vb/formatprovider1.vb#1)]  
  
 Jeśli <xref:System.IFormatProvider> implementacji nie została jawnie podana w liczbową wywołania metody, wywołań metod formatowania `CultureInfo.CurrentCulture.GetFormat` metody, która zwraca <xref:System.Globalization.NumberFormatInfo> obiekt, który odpowiada bieżącej kultury wątku.  
  
<a name="properties"></a>   
## <a name="format-strings-and-numberformatinfo-properties"></a>Ciągi formatów i właściwości NumberFormatInfo  
 Każda operacja formatowania używa standardowym lub niestandardowym ciągiem formatu liczbowego w celu wygenerowania ciąg wynikowy z liczbą. W niektórych przypadkach użycie ciągu formatowania, aby utworzyć ciąg wynikowy jest jawne, jak w poniższym przykładzie. Ten kod wywołuje <xref:System.Decimal.ToString%28System.IFormatProvider%29?displayProperty=nameWithType> metodę, aby przekonwertować <xref:System.Decimal> wartości na liczbę różnych ciągów reprezentujących przy użyciu konwencji formatowania kultury en US.  
  
 [!code-csharp[System.Globalization.NumberFormatInfo.Class#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.numberformatinfo.class/cs/properties1.cs#2)]
 [!code-vb[System.Globalization.NumberFormatInfo.Class#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.numberformatinfo.class/vb/properties1.vb#2)]  
  
 W innych przypadkach korzystanie z ciągiem formatu jest niejawne. Na przykład w następujących wywołania metody bez parametrów lub domyślny <xref:System.Decimal.ToString?displayProperty=nameWithType> metody, wartość <xref:System.Decimal> wystąpienie jest sformatowana przy użyciu specyfikatora formatu ogólnego ("G") i Konwencji bieżącej kultury, czyli w tym przypadku kultura en US.  
  
 [!code-csharp[System.Globalization.NumberFormatInfo.Class#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.numberformatinfo.class/cs/properties2.cs#3)]
 [!code-vb[System.Globalization.NumberFormatInfo.Class#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.numberformatinfo.class/vb/properties2.vb#3)]  
  
 Każdy ciąg standardowego formatu liczb używa co najmniej jeden <xref:System.Globalization.NumberFormatInfo> właściwości w celu określenia wzorca lub symbole używane w ciągu wynikowym. Podobnie, każdy niestandardowy specyfikator formatu liczbowego z wyjątkiem "0" i "#" wstawić symbole w ciągu wynikowym, które są zdefiniowane przez <xref:System.Globalization.NumberFormatInfo> właściwości. W poniższej tabeli wymieniono standardowych i niestandardowych specyfikatorów formatu liczbowego i ich skojarzone <xref:System.Globalization.NumberFormatInfo> właściwości.  Aby zmienić wygląd ciągu wynikowego dla danej kultury, zobacz [właściwości NumberFormatInfo modyfikowanie](#modifying) sekcji. Aby uzyskać szczegółowe informacje dotyczące korzystania z tych specyfikatory formatu, zobacz [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md) i [Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md).  
  
|Specyfikator formatu|Skojarzonych z nimi właściwości|  
|----------------------|---------------------------|  
|"C" lub "c" (specyfikator formatu waluty)|<xref:System.Globalization.NumberFormatInfo.CurrencyDecimalDigits%2A>, aby zdefiniować domyślną liczbę cyfr dziesiętnych.<br /><br /> <xref:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator%2A>, aby zdefiniować symbol separatora dziesiętnego.<br /><br /> <xref:System.Globalization.NumberFormatInfo.CurrencyGroupSeparator%2A>, aby zdefiniować grupy lub tysiące separatora.<br /><br /> <xref:System.Globalization.NumberFormatInfo.CurrencyGroupSizes%2A>, aby zdefiniować rozmiary grup całkowitoliczbowy.<br /><br /> <xref:System.Globalization.NumberFormatInfo.CurrencyNegativePattern%2A>, aby zdefiniować wzorzec ujemnych wartości waluty.<br /><br /> <xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A>, do definiowania wzorzec dodatnich wartości waluty.<br /><br /> <xref:System.Globalization.NumberFormatInfo.CurrencySymbol%2A>, aby zdefiniować symbol waluty.<br /><br /> <xref:System.Globalization.NumberFormatInfo.NegativeSign%2A>, aby zdefiniować symbol znaku ujemnego.|  
|"D" lub "d" (specyfikator formatu dziesiętnego)|<xref:System.Globalization.NumberFormatInfo.NegativeSign%2A>, aby zdefiniować symbol znaku ujemnego.|  
|"E" lub "e" (specyfikator formatu wykładniczego i naukowych)|<xref:System.Globalization.NumberFormatInfo.NegativeSign%2A>, aby zdefiniować symbol znaku ujemnego w mantysy i wykładnika.<br /><br /> <xref:System.Globalization.NumberFormatInfo.NumberDecimalSeparator%2A>, aby zdefiniować symbol separatora dziesiętnego.<br /><br /> <xref:System.Globalization.NumberFormatInfo.PositiveSign%2A>, aby zdefiniować symbol znaku dodatniego wykładnika.|  
|"F" lub "f" (specyfikator formatu stałoprzecinkowego)|<xref:System.Globalization.NumberFormatInfo.NegativeSign%2A>, aby zdefiniować symbol znaku ujemnego.<br /><br /> <xref:System.Globalization.NumberFormatInfo.NumberDecimalDigits%2A>, aby zdefiniować domyślną liczbę cyfr dziesiętnych.<br /><br /> <xref:System.Globalization.NumberFormatInfo.NumberDecimalSeparator%2A>, aby zdefiniować symbol separatora dziesiętnego.|  
|"G" lub "g" (specyfikator formatu ogólnego)|<xref:System.Globalization.NumberFormatInfo.NegativeSign%2A>, aby zdefiniować symbol znaku ujemnego.<br /><br /> <xref:System.Globalization.NumberFormatInfo.NumberDecimalSeparator%2A>, aby zdefiniować symbol separatora dziesiętnego.<br /><br /> <xref:System.Globalization.NumberFormatInfo.PositiveSign%2A>, aby zdefiniować symbol znaku dodatniego ciągi wynikowe w notacji wykładniczej.|  
|"N" lub "n" (specyfikatora formatu liczby)|<xref:System.Globalization.NumberFormatInfo.NegativeSign%2A>, aby zdefiniować symbol znaku ujemnego.<br /><br /> <xref:System.Globalization.NumberFormatInfo.NumberDecimalDigits%2A>, aby zdefiniować domyślną liczbę cyfr dziesiętnych.<br /><br /> <xref:System.Globalization.NumberFormatInfo.NumberDecimalSeparator%2A>, aby zdefiniować symbol separatora dziesiętnego.<br /><br /> <xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A>, aby zdefiniować symbol separatora (w tysiącach) grupy.<br /><br /> <xref:System.Globalization.NumberFormatInfo.NumberGroupSizes%2A>, aby zdefiniować liczbę cyfr liczby całkowitej w grupie.<br /><br /> <xref:System.Globalization.NumberFormatInfo.NumberNegativePattern%2A>, aby zdefiniować format wartości ujemnych.|  
|"P" lub "p" (specyfikator formatu procent)|<xref:System.Globalization.NumberFormatInfo.NegativeSign%2A>, aby zdefiniować symbol znaku ujemnego.<br /><br /> <xref:System.Globalization.NumberFormatInfo.PercentDecimalDigits%2A>, aby zdefiniować domyślną liczbę cyfr dziesiętnych.<br /><br /> <xref:System.Globalization.NumberFormatInfo.PercentDecimalSeparator%2A>, aby zdefiniować symbol separatora dziesiętnego.<br /><br /> <xref:System.Globalization.NumberFormatInfo.PercentGroupSeparator%2A>, aby zdefiniować symbol separatora grupy.<br /><br /> <xref:System.Globalization.NumberFormatInfo.PercentGroupSizes%2A>, aby zdefiniować liczbę cyfr liczby całkowitej w grupie.<br /><br /> <xref:System.Globalization.NumberFormatInfo.PercentNegativePattern%2A>, aby zdefiniować położenie symbol procentu i symbolu wartości ujemnej dla wartości ujemnych.<br /><br /> <xref:System.Globalization.NumberFormatInfo.PercentPositivePattern%2A>, aby zdefiniować położenie symbolu procentu dla wartości dodatnich.<br /><br /> <xref:System.Globalization.NumberFormatInfo.PercentSymbol%2A>, aby zdefiniować symbol procentu.|  
|"R" lub "r" (specyfikator formatu obustronne)|<xref:System.Globalization.NumberFormatInfo.NegativeSign%2A>, aby zdefiniować symbol znaku ujemnego.<br /><br /> <xref:System.Globalization.NumberFormatInfo.NumberDecimalSeparator%2A>, aby zdefiniować symbol separatora dziesiętnego.<br /><br /> <xref:System.Globalization.NumberFormatInfo.PositiveSign%2A>, aby zdefiniować symbol znaku dodatniego w wykładnik potęgi.|  
|"X" lub "x" (specyfikator w formacie szesnastkowym)|Brak.|  
|"." (specyfikator formatu niestandardowego punktu dziesiętnego)|<xref:System.Globalization.NumberFormatInfo.NumberDecimalSeparator%2A>, aby zdefiniować symbol separatora dziesiętnego.|  
|"," (specyfikator formatu niestandardowego separatora grup)|<xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A>, aby zdefiniować symbol separatora grupy (w tysiącach).|  
|"%" (specyfikator formatu niestandardowego symbol zastępczy wartości procentowej)|<xref:System.Globalization.NumberFormatInfo.PercentSymbol%2A>, aby zdefiniować symbol procentu.|  
|"‰" (na specyfikator formatu niestandardowego symbolu zastępczego promila)|<xref:System.Globalization.NumberFormatInfo.PerMilleSymbol%2A>, aby zdefiniować symbol promila.|  
|"E" (specyfikator formatu niestandardowego notacji wykładniczej)|<xref:System.Globalization.NumberFormatInfo.NegativeSign%2A>, aby zdefiniować symbol znaku ujemnego w mantysy i wykładnika.<br /><br /> <xref:System.Globalization.NumberFormatInfo.PositiveSign%2A>, aby zdefiniować symbol znaku dodatniego wykładnika.|  
  
 Należy pamiętać, że <xref:System.Globalization.NumberFormatInfo> klasa zawiera <xref:System.Globalization.NumberFormatInfo.NativeDigits%2A> właściwość, która określa, 10 podstawowych cyfr używana przez określoną kulturę. Jednak właściwość nie jest używana w operacji formatowania tylko Łaciński podstawowy cyfr od 0 (U + 0030) do 9 (U + 0039) są używane w ciągu wynikowym. Ponadto, aby uzyskać <xref:System.Single> i <xref:System.Double> wartości `NaN`, `PositiveInfinity`, i `NegativeInfinity`, ciąg wynikowy, który składa się wyłącznie z symbole zdefiniowane przez <xref:System.Globalization.NumberFormatInfo.NaNSymbol%2A>, <xref:System.Globalization.NumberFormatInfo.PositiveInfinitySymbol%2A>, i <xref:System.Globalization.NumberFormatInfo.NegativeInfinitySymbol%2A> właściwości , odpowiednio.  
  
<a name="modifying"></a>   
## <a name="modifying-numberformatinfo-properties"></a>Modyfikowanie właściwości NumberFormatInfo  
 Można zmodyfikować właściwości <xref:System.Globalization.NumberFormatInfo> obiekt, aby dostosować ciąg wynikowy utworzony w liczbową operacji formatowania. W tym celu:  
  
1.  Utwórz kopię odczytu/zapisu <xref:System.Globalization.NumberFormatInfo> obiektu, której konwencje formatowania, którą chcesz zmodyfikować. Aby uzyskać więcej informacji, zobacz [utworzenie wystąpienia obiektu NumberFormatInfo](#Instantiating) sekcji.  
  
2.  Zmodyfikuj właściwości lub właściwości, które są używane do tworzenia ciągu pożądanych efektów. Aby uzyskać informacje na temat formatowania sposób używania metody <xref:System.Globalization.NumberFormatInfo> Zobacz właściwości, aby zdefiniować ciągi wynikowe [formatowanie ciągów i właściwości NumberFormatInfo](#properties) sekcji.  
  
3.  Użyj niestandardowego <xref:System.Globalization.NumberFormatInfo> obiektu jako <xref:System.IFormatProvider> argument w wywołaniach do metod formatowania.  
  
> [!NOTE]
>  Zamiast dynamiczne modyfikowanie wartości właściwości kultury za każdym razem, jest uruchamiana aplikacja, możesz użyć <xref:System.Globalization.CultureAndRegionInfoBuilder> klasy, aby zdefiniować kultury niestandardowej (kultury, ma unikatową nazwę i które uzupełniają istniejące kultur) lub mogą zastąpić kultura (taki, który jest używany zamiast określonej kultury).  
  
 Kilka przykładów można znaleźć w poniższych sekcjach.  
  
<a name="currency"></a>   
### <a name="modifying-the-currency-symbol-and-pattern"></a>Modyfikowanie symbolu waluty i wzoru  
 Poniższy przykład modyfikuje <xref:System.Globalization.NumberFormatInfo> obiekt, który reprezentuje konwencje formatowania kultury en US. Przypisuje symbol waluty ISO 4217 <xref:System.Globalization.NumberFormatInfo.CurrencySymbol%2A> właściwości i definiuje wzorzec dla wartości waluty, który składa się z symbolu waluty, następuje spacja i wartością liczbową.  
  
 [!code-csharp[System.Globalization.NumberFormatInfo.Customize#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.numberformatinfo.customize/cs/customize_currency1.cs#1)]
 [!code-vb[System.Globalization.NumberFormatInfo.Customize#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.numberformatinfo.customize/vb/customize_currency1.vb#1)]  
  
<a name="id"></a>   
### <a name="formatting-a-national-identification-number"></a>Formatowanie krajowego numeru identyfikacyjnego  
 Wiele narodowe numery identyfikacyjne składać się wyłącznie z cyfr i dlatego można łatwo formatować, modyfikując właściwości <xref:System.Globalization.NumberFormatInfo> obiektu. Na przykład numer ubezpieczenia społecznego w Stanach Zjednoczonych składa się z 9 cyfr ułożone w następujący sposób: `XXX-XX-XXXX`. W poniższym przykładzie założono, że numery ubezpieczenia społecznego są przechowywane jako liczby całkowitej wartości oraz formatuje je, odpowiednio.  
  
 [!code-csharp[System.Globalization.NumberFormatInfo.Customize#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.numberformatinfo.customize/cs/customize_ssn1.cs#2)]
 [!code-vb[System.Globalization.NumberFormatInfo.Customize#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.numberformatinfo.customize/vb/customize_ssn1.vb#2)]  
  
<a name="parsing"></a>   
## <a name="parsing-numeric-strings"></a>Analizowanie ciągów numerycznych  
 Podczas analizowania polega na konwersji ciąg reprezentujący liczbę na liczbę. Każdego typu liczbowego w programie .NET Framework zawiera dwa przeciążonych metod analizowania: `Parse` i `TryParse`. `Parse` Metoda konwertuje ciąg na liczbę i zgłasza wyjątek, jeśli konwersja nie powiedzie się. `TryParse` Metoda konwertuje ciąg na liczbę, przypisuje numer do `out` argument i zwraca <xref:System.Boolean> wartość, która wskazuje, czy konwersja powiodła się.  
  
 Podczas analizowania metody jawnie lub niejawenie używają <xref:System.Globalization.NumberStyles> wartości wyliczenia, aby ustalić, jakie elementy stylu (takie jak separatory grup i separator dziesiętny, symbol waluty) może być obecne w ciągu, jeśli operacja analizy się powiodła się. Jeśli <xref:System.Globalization.NumberStyles> wartość nie zostanie podana w wywołaniu metody, wartość domyślna to <xref:System.Globalization.NumberStyles> wartość, która obejmuje <xref:System.Globalization.NumberStyles.Float> i <xref:System.Globalization.NumberStyles.AllowThousands> flagi, które określa, że przeanalizowany ciąg może zawierać symbole grupy, separator dziesiętny, znaku minus, i znaki odstępu lub może być reprezentację liczby w zapisie wykładniczym.  
  
 Podczas analizowania metody, dodatkowo niejawnie lub jawnie za pomocą <xref:System.Globalization.NumberFormatInfo> obiekt, który definiuje określone symbole i wzorce, które mogą wystąpić w ciągu, który ma być analizowany. Jeśli <xref:System.Globalization.NumberFormatInfo> obiekt nie zostanie podany, wartość domyślna to <xref:System.Globalization.NumberFormatInfo> dla bieżącej kultury wątku. Aby uzyskać więcej informacji na temat analizy, zobacz poszczególne metody analizy, takie jak <xref:System.Int16.Parse%28System.String%29?displayProperty=nameWithType>, <xref:System.Int32.Parse%28System.String%2CSystem.Globalization.NumberStyles%29?displayProperty=nameWithType>, <xref:System.Int64.Parse%28System.String%2CSystem.IFormatProvider%29?displayProperty=nameWithType>, <xref:System.Decimal.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=nameWithType>, <xref:System.Double.TryParse%28System.String%2CSystem.Double%40%29?displayProperty=nameWithType>, i <xref:System.Numerics.BigInteger.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Numerics.BigInteger%40%29?displayProperty=nameWithType>.  
  
 Poniższy przykład ilustruje rodzaj wrażliwość na ustawienia kulturowe analizowanie ciągów. Próbuje przeanalizować składni ciągu, który zawiera tysiące separatory przy użyciu konwencji en US, fr-FR i niezmiennej kultury. Ciąg, który zawiera przecinek jako separator grup i okres jako separatora dziesiętnego nie można przeanalizować w kultury fr-FR, a następnie ciąg z white space jako separator grup i przecinka jako separatora dziesiętnego kończy się niepowodzeniem do analizowania w en US i niezmiennej kultury.  
  
 [!code-csharp[System.Globalization.NumberFormatInfo.Class#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.numberformatinfo.class/cs/parse1.cs#4)]
 [!code-vb[System.Globalization.NumberFormatInfo.Class#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.numberformatinfo.class/vb/parse1.vb#4)]  
  
 Podczas analizowania zwykle odbywa się w dwóch kontekstów:  
  
-   Jako operacja, która jest przeznaczony do konwertowania danych wejściowych użytkownika na wartość liczbową.  
  
-   Jako operacja, która została zaprojektowana Aby obustronnie konwertować wartość liczbową; oznacza to do deserializacji wartość liczbowa, która została wcześniej zserializowanym w formacie ciągu.  
  
 W poniższych sekcjach omówiono te dwie operacje bardziej szczegółowo.  
  
<a name="ParseUser"></a>   
### <a name="parsing-user-strings"></a>Analiza ciągów użytkownika  
 Gdy są analizowanie ciągów liczbowych wprowadzane przez użytkownika, należy zawsze wystąpienia <xref:System.Globalization.NumberFormatInfo> obiekt, który odzwierciedla ustawienia kultury użytkownika. Aby uzyskać informacje dotyczące tworzenia wystąpienia <xref:System.Globalization.NumberFormatInfo> obiekt, który odzwierciedla modyfikacje użytkownika, zobacz [NumberFormatInfo i dane dynamiczne](#dynamic) sekcji.  
  
 Poniższy przykład ilustruje różnicę między operacji analizowania, która odzwierciedla ustawienia kultury użytkownika oraz jedną, która nie ma. W tym przypadku domyślnej kultury systemu jest en US, ale ma zdefiniowany przez użytkownika "," jako separator dziesiętny i "." jako separator grup, w Panelu sterowania **Region i język**. Zazwyczaj te symbole zostały cofnięte w domyślnej kultury en US. Gdy użytkownik wpisuje ciąg, który odzwierciedla ustawienia użytkownika, a ten ciąg jest analizowany przy <xref:System.Globalization.NumberFormatInfo> obiektu odzwierciedlający ustawienia użytkownika (zastąpień), operacja analizowania zwraca odpowiedni wynik. Jednak, jeśli ciąg jest analizowany przy <xref:System.Globalization.NumberFormatInfo> obiekt, który odzwierciedla ustawienia kultury en US standard, pomyłki symbol separatora grupy przecinkami i zwraca niepoprawny wynik.  
  
 [!code-csharp[System.Globalization.NumberFormatInfo.Class#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.numberformatinfo.class/cs/parseuser1.cs#5)]
 [!code-vb[System.Globalization.NumberFormatInfo.Class#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.numberformatinfo.class/vb/parseuser1.vb#5)]  
  
<a name="ParseSerial"></a>   
### <a name="serializing-and-deserializing-numeric-data"></a>Serializacja i deserializacja danych liczbowych  
 Gdy dane liczbowe jest serializowany w formacie ciągu i później wykonać deserializacji i przeanalizować, ciągi powinien być wygenerowany i analizowane za pomocą Konwencji niezmiennej kultury. Operacji formatowania i analizy powinno nigdy nie odzwierciedlają konwencje określonej kultury. Jeśli używane są ustawienia specyficzne dla kultury, przenośność danych jest ściśle ograniczona. może być pomyślnie zdeserializowany tylko w wątku, którego ustawienia specyficzne dla kultury są identyczne z tymi wątku, na którym został wydany. W niektórych przypadkach oznacza to, że dane nie mogą jeszcze być pomyślnie zdeserializowany, w tym samym systemie, na którym został wydany.  
  
 W poniższym przykładzie pokazano, co może się zdarzyć, gdy zasada ta jest naruszona. Zmiennoprzecinkowe wartości w tablicy są konwertowane na ciągi, gdy bieżący wątek używa ustawienia specyficzne dla kultury kultury en US. Dane, następnie jest analizowany przez wątek, który korzysta z ustawień specyficznych dla kultury kultury en-GB. W tym przypadku mimo że każda operacja analizy się powiedzie, dane nie ma dwustronnej konwersji pomyślnie i nastąpi uszkodzenie danych. W innych przypadkach może się nie powieść operacji analizowania i <xref:System.FormatException> zgłoszony wyjątek.  
  
 [!code-csharp[System.Globalization.NumberFormatInfo.Class#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.numberformatinfo.class/cs/parsepersisted.cs#6)]
 [!code-vb[System.Globalization.NumberFormatInfo.Class#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.numberformatinfo.class/vb/parsepersisted.vb#6)]  
  
   
  
## Examples  
 Poniższy przykład pokazuje, jak pobrać <xref:System.Globalization.NumberFormatInfo> obiekt odpowiadający <xref:System.Globalization.CultureInfo> obiektu, a następnie użyj pobrano obiekt do zapytania numeru formatowania informacje dotyczące określonej kultury.  
  
 [!code-cpp[NumberFormatInfo#1](~/samples/snippets/cpp/VS_Snippets_CLR/NumberFormatInfo/cpp/NumberFormatInfo.cpp#1)]
 [!code-csharp[NumberFormatInfo#1](~/samples/snippets/csharp/VS_Snippets_CLR/NumberFormatInfo/CS/NumberFormatInfo.cs#1)]
 [!code-vb[NumberFormatInfo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/NumberFormatInfo/vb/numberformatinfo.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Globalization.CultureInfo" />
    <altmember cref="T:System.IFormatProvider" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NumberFormatInfo ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.NumberFormatInfo.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; NumberFormatInfo();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie zapisywalny <see cref="T:System.Globalization.NumberFormatInfo" /> klasy, czyli niezależny od kultury (niezmiennej).</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli aplikacja wymaga formatowania zdefiniowanego przez użytkownika można zmodyfikować właściwości nowego wystąpienia.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public object Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.NumberFormatInfo.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Function Clone () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ Clone();" />
      <MemberSignature Language="F#" Value="abstract member Clone : unit -&gt; obj&#xA;override this.Clone : unit -&gt; obj" Usage="numberFormatInfo.Clone " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ICloneable.Clone</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Tworzy kopię pobieżną <see cref="T:System.Globalization.NumberFormatInfo" /> obiektu.</summary>
        <returns>Nowy obiekt skopiowane z oryginalnym <see cref="T:System.Globalization.NumberFormatInfo" /> obiektu.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Klon jest zapisywalny nawet wtedy, gdy oryginalny <xref:System.Globalization.NumberFormatInfo> obiekt jest tylko do odczytu. W związku z tym można zmodyfikować właściwości klonu wzorami zdefiniowanych przez użytkownika.  
  
 Płytką kopię obiektu jest kopią tylko obiekt. Jeśli obiekt zawiera odwołania do innych obiektów, płytka kopia nie utworzy kopii obiektów, do którego się odwołuje. Jej będzie odnosił się do obiektów, oryginalnym zamiast tego. Z drugiej strony głęboką kopię obiektu tworzy kopię obiektu i kopii wszystkich bezpośrednio lub pośrednio odwołuje się ten obiekt. W przypadku właściwości <xref:System.Globalization.NumberFormatInfo> obiektu, wykonywana jest płytka kopia jest wystarczająca dla wszystkich właściwości wystąpienia, kopiowanie, ponieważ wszystkie właściwości, które zwracają odwołania do obiektu są `static` (`Shared` w języku Visual Basic).  
  
   
  
## Examples  
 W poniższym przykładzie użyto <xref:System.Globalization.NumberFormatInfo.Clone%2A> metodę, aby utworzyć kopię odczytu/zapisu <xref:System.Globalization.NumberFormatInfo> obiekt, który reprezentuje wartość numeryczną formatowania Konwencji bieżącej kultury wątku.  
  
 [!code-csharp[System.Globalization.NumberFormatInfo.IsReadOnly#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.numberformatinfo.isreadonly/cs/isreadonly1.cs#1)]
 [!code-vb[System.Globalization.NumberFormatInfo.IsReadOnly#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.numberformatinfo.isreadonly/vb/isreadonly1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Globalization.NumberFormatInfo.IsReadOnly" />
        <altmember cref="M:System.Globalization.NumberFormatInfo.ReadOnly(System.Globalization.NumberFormatInfo)" />
      </Docs>
    </Member>
    <Member MemberName="CurrencyDecimalDigits">
      <MemberSignature Language="C#" Value="public int CurrencyDecimalDigits { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CurrencyDecimalDigits" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.NumberFormatInfo.CurrencyDecimalDigits" />
      <MemberSignature Language="VB.NET" Value="Public Property CurrencyDecimalDigits As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int CurrencyDecimalDigits { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.CurrencyDecimalDigits : int with get, set" Usage="System.Globalization.NumberFormatInfo.CurrencyDecimalDigits" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia liczbę miejsc dziesiętnych, do użycia w wartości waluty.</summary>
        <value>Liczba miejsc dziesiętnych w wartości waluty. Wartość domyślna dla <see cref="P:System.Globalization.NumberFormatInfo.InvariantInfo" /> wynosi 2.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Globalization.NumberFormatInfo.CurrencyDecimalDigits%2A> Właściwość jest używana przy użyciu ciągu formatu standardowego "C" bez specyfikatora dokładności w operacjach formatowania liczbowego. Definiuje domyślną liczbę cyfr ułamkowych, które pojawiają się po separatorze dziesiętnym. Ta wartość zostanie zastąpiona Jeżeli Specyfikator dokładności jest używana. Aby uzyskać więcej informacji, zobacz [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md).  
  
   
  
## Examples  
 Poniższy przykład ilustruje efekt zmiany <xref:System.Globalization.NumberFormatInfo.CurrencyDecimalDigits%2A> właściwości.  
  
 [!code-cpp[CurrencyDecimalDigits#1](~/samples/snippets/cpp/VS_Snippets_CLR/CurrencyDecimalDigits/CPP/currencydecimaldigits.cpp#1)]
 [!code-csharp[CurrencyDecimalDigits#1](~/samples/snippets/csharp/VS_Snippets_CLR/CurrencyDecimalDigits/CS/currencydecimaldigits.cs#1)]
 [!code-vb[CurrencyDecimalDigits#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CurrencyDecimalDigits/VB/currencydecimaldigits.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Właściwość jest ustawiany na wartość, która jest mniejsza niż 0 lub większa niż 99.</exception>
        <exception cref="T:System.InvalidOperationException">Ustawiono właściwość i <see cref="T:System.Globalization.NumberFormatInfo" /> obiekt jest tylko do odczytu.</exception>
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencyGroupSeparator" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencyGroupSizes" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencySymbol" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencyNegativePattern" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencyPositivePattern" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.NumberDecimalDigits" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentDecimalDigits" />
      </Docs>
    </Member>
    <Member MemberName="CurrencyDecimalSeparator">
      <MemberSignature Language="C#" Value="public string CurrencyDecimalSeparator { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CurrencyDecimalSeparator" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator" />
      <MemberSignature Language="VB.NET" Value="Public Property CurrencyDecimalSeparator As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CurrencyDecimalSeparator { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CurrencyDecimalSeparator : string with get, set" Usage="System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia ciąg używany jako separator dziesiętny w wartości waluty.</summary>
        <value>Ciąg do użycia jako separatora dziesiętnego w wartości waluty. Wartość domyślna dla <see cref="P:System.Globalization.NumberFormatInfo.InvariantInfo" /> jest ".".</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Początkowa wartość tej właściwości jest tworzony na podstawie ustawień w **Region i język** w Panelu sterowania.  
  
 <xref:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator%2A> Właściwość jest używana przy użyciu ciągu formatu standardowego "C", aby zdefiniować symbol oddzielający całkowite od cyfr dziesiętnych. Aby uzyskać więcej informacji, zobacz [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md).  
  
   
  
## Examples  
 Poniższy przykład ilustruje efekt zmiany <xref:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator%2A> właściwości.  
  
 [!code-cpp[CurrencyDecimalSeparator#1](~/samples/snippets/cpp/VS_Snippets_CLR/CurrencyDecimalSeparator/CPP/currencydecimalseparator.cpp#1)]
 [!code-csharp[CurrencyDecimalSeparator#1](~/samples/snippets/csharp/VS_Snippets_CLR/CurrencyDecimalSeparator/CS/currencydecimalseparator.cs#1)]
 [!code-vb[CurrencyDecimalSeparator#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CurrencyDecimalSeparator/VB/currencydecimalseparator.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Właściwość jest ustawiana na <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">Ustawiono właściwość i <see cref="T:System.Globalization.NumberFormatInfo" /> obiekt jest tylko do odczytu.</exception>
        <exception cref="T:System.ArgumentException">Właściwość jest ustawiany na pusty ciąg.</exception>
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencyDecimalDigits" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencyGroupSeparator" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencyGroupSizes" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencySymbol" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencyNegativePattern" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencyPositivePattern" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.NumberDecimalSeparator" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentDecimalSeparator" />
      </Docs>
    </Member>
    <Member MemberName="CurrencyGroupSeparator">
      <MemberSignature Language="C#" Value="public string CurrencyGroupSeparator { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CurrencyGroupSeparator" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.NumberFormatInfo.CurrencyGroupSeparator" />
      <MemberSignature Language="VB.NET" Value="Public Property CurrencyGroupSeparator As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CurrencyGroupSeparator { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CurrencyGroupSeparator : string with get, set" Usage="System.Globalization.NumberFormatInfo.CurrencyGroupSeparator" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia ciąg oddzielający grupy cyfr z lewej strony separatora dziesiętnego w wartości waluty.</summary>
        <value>Ciąg, który oddziela grup cyfr na lewo od separatora dziesiętnego w wartości waluty. Wartość domyślna dla <see cref="P:System.Globalization.NumberFormatInfo.InvariantInfo" /> jest ",".</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Początkowa wartość tej właściwości jest tworzony na podstawie ustawień w **regionalne i językowe** w Panelu sterowania.  
  
 <xref:System.Globalization.NumberFormatInfo.CurrencyGroupSeparator%2A> Właściwość jest używana przy użyciu ciągu formatu standardowego "C", aby zdefiniować symbol, który oddziela grup cyfr liczby całkowitej. Aby uzyskać więcej informacji, zobacz [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md).  
  
   
  
## Examples  
 Poniższy przykład ilustruje efekt zmiany <xref:System.Globalization.NumberFormatInfo.CurrencyGroupSeparator%2A> właściwości.  
  
 [!code-cpp[CurrencyGroupSeparator#1](~/samples/snippets/cpp/VS_Snippets_CLR/CurrencyGroupSeparator/CPP/currencygroupseparator.cpp#1)]
 [!code-csharp[CurrencyGroupSeparator#1](~/samples/snippets/csharp/VS_Snippets_CLR/CurrencyGroupSeparator/CS/currencygroupseparator.cs#1)]
 [!code-vb[CurrencyGroupSeparator#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CurrencyGroupSeparator/VB/currencygroupseparator.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Właściwość jest ustawiana na <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">Ustawiono właściwość i <see cref="T:System.Globalization.NumberFormatInfo" /> obiekt jest tylko do odczytu.</exception>
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencyDecimalDigits" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencyGroupSizes" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencySymbol" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencyNegativePattern" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencyPositivePattern" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.NumberGroupSeparator" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentGroupSeparator" />
      </Docs>
    </Member>
    <Member MemberName="CurrencyGroupSizes">
      <MemberSignature Language="C#" Value="public int[] CurrencyGroupSizes { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32[] CurrencyGroupSizes" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.NumberFormatInfo.CurrencyGroupSizes" />
      <MemberSignature Language="VB.NET" Value="Public Property CurrencyGroupSizes As Integer()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;int&gt; ^ CurrencyGroupSizes { cli::array &lt;int&gt; ^ get(); void set(cli::array &lt;int&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CurrencyGroupSizes : int[] with get, set" Usage="System.Globalization.NumberFormatInfo.CurrencyGroupSizes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia liczbę cyfr w każdej grupie na lewo od separatora dziesiętnego w wartości waluty.</summary>
        <value>Liczba cyfr w każdej grupie na lewo od separatora dziesiętnego w wartości waluty. Wartość domyślna dla <see cref="P:System.Globalization.NumberFormatInfo.InvariantInfo" /> to Jednowymiarowa tablica tylko jeden element, który jest ustawiony na 3.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Globalization.NumberFormatInfo.CurrencyGroupSizes%2A> Właściwość jest używana przy użyciu ciągu formatu standardowego "C", aby zdefiniować liczbę cyfr, które pojawiają się w grup całkowitoliczbowy. Aby uzyskać więcej informacji, zobacz [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md). Każdy element w tablicy jednowymiarowej musi być liczbą całkowitą z zakresu od 1 do 9. Ostatni element może być 0.  
  
 Pierwszy element tablicy definiuje liczbę elementów w grupie najmniej znaczący cyfr od razu po lewej stronie <xref:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator%2A>. Każdego kolejnego elementu odnosi się do następnej grupy znaczących cyfr na lewo od poprzedniej grupy. W przypadku ostatniego elementu w tablicy nie 0, pozostałe cyfry są grupowane zależnie od ostatniego elementu w tablicy. Jeśli wartość ostatniego elementu wynosi 0, nie są zgrupowani pozostałe cyfry.  
  
 Na przykład jeśli tablica zawiera {3, 4, 5}, liczba cyfr są grupowane podobne do "55,55555,55555,55555,4444,333.00$". Jeśli tablica zawiera {3, 4, 0}, liczba cyfr są grupowane podobne do "55555555555555555,4444,333.00$".  
  
   
  
## Examples  
 Poniższy przykład ilustruje efekt zmiany <xref:System.Globalization.NumberFormatInfo.CurrencyGroupSizes%2A> właściwości.  
  
 [!code-cpp[CurrencyGroupSizes#1](~/samples/snippets/cpp/VS_Snippets_CLR/CurrencyGroupSizes/CPP/currencygroupsizes.cpp#1)]
 [!code-csharp[CurrencyGroupSizes#1](~/samples/snippets/csharp/VS_Snippets_CLR/CurrencyGroupSizes/CS/currencygroupsizes.cs#1)]
 [!code-vb[CurrencyGroupSizes#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CurrencyGroupSizes/VB/currencygroupsizes.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Właściwość jest ustawiana na <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">Ustawiono właściwość i Tablica zawiera wpis, który jest mniejszy niż 0 lub większa niż 9.  
  
—lub— 
Ustawiono właściwość i Tablica zawiera wpis, niż ostatni wpis, który jest ustawiony na 0.</exception>
        <exception cref="T:System.InvalidOperationException">Ustawiono właściwość i <see cref="T:System.Globalization.NumberFormatInfo" /> obiekt jest tylko do odczytu.</exception>
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencyDecimalDigits" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencyGroupSeparator" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencySymbol" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencyNegativePattern" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencyPositivePattern" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.NumberGroupSizes" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentGroupSizes" />
      </Docs>
    </Member>
    <Member MemberName="CurrencyNegativePattern">
      <MemberSignature Language="C#" Value="public int CurrencyNegativePattern { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CurrencyNegativePattern" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.NumberFormatInfo.CurrencyNegativePattern" />
      <MemberSignature Language="VB.NET" Value="Public Property CurrencyNegativePattern As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int CurrencyNegativePattern { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.CurrencyNegativePattern : int with get, set" Usage="System.Globalization.NumberFormatInfo.CurrencyNegativePattern" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wzorzec formatu wartości waluty z wartościami ujemnymi.</summary>
        <value>Wzorzec formatu wartości waluty z wartościami ujemnymi. Wartość domyślna dla <see cref="P:System.Globalization.NumberFormatInfo.InvariantInfo" /> ma wartość 0, który reprezentuje "($n)", gdzie jest "$" <see cref="P:System.Globalization.NumberFormatInfo.CurrencySymbol" /> i <paramref name="n" /> jest liczbą.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Globalization.NumberFormatInfo.CurrencyNegativePattern%2A> Jest używana przy użyciu ciągu formatu standardowego "C" Aby zdefiniować wzorzec ujemnych wartości waluty. Aby uzyskać więcej informacji, zobacz [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md). Ta właściwość posiada jedną z wartości w tabeli poniżej. Symbol "$" jest <xref:System.Globalization.NumberFormatInfo.CurrencySymbol%2A>, symbol "-" jest <xref:System.Globalization.NumberFormatInfo.NegativeSign%2A>, i `n` jest liczbą.  
  
|Wartość|Wzór skojarzony|  
|-----------|------------------------|  
|0|($n)|  
|1|-$n|  
|2|$-n|  
|3|$n-|  
|4|(n$)|  
|5|$ - n|  
|6|n$|  
|7|n-|  
|8|$ - n|  
|9|-$ n|  
|10|n-|  
|11|$ n-|  
|12|$ - n|  
|13|n - $|  
|14|($ n)|  
|15|(n $)|  
  
   
  
## Examples  
 W poniższym przykładzie pokazano sposób, w jaki <xref:System.Globalization.NumberFormatInfo.CurrencyNegativePattern%2A> właściwość definiuje format wartości waluty z wartościami ujemnymi.  Pobiera wszystkich określonych kultur, które są zdefiniowane na komputerze-hoście, a następnie wyświetli każda kultura <xref:System.Globalization.NumberFormatInfo.CurrencyNegativePattern%2A> wartości właściwości, jego wzór skojarzony i numer sformatowane jako wartość waluty.  
  
 [!code-csharp[System.Globalization.NumberFormatInfo.CurrencyNegativePattern#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.numberformatinfo.currencynegativepattern/cs/currencynegativepattern1.cs#1)]
 [!code-vb[System.Globalization.NumberFormatInfo.CurrencyNegativePattern#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.numberformatinfo.currencynegativepattern/vb/currencynegativepattern1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Właściwość jest ustawiany na wartość, która jest mniejsza niż 0 lub większa niż 15.</exception>
        <exception cref="T:System.InvalidOperationException">Ustawiono właściwość i <see cref="T:System.Globalization.NumberFormatInfo" /> obiekt jest tylko do odczytu.</exception>
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencyDecimalDigits" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencyGroupSeparator" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencyGroupSizes" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencySymbol" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencyPositivePattern" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.NumberNegativePattern" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentNegativePattern" />
      </Docs>
    </Member>
    <Member MemberName="CurrencyPositivePattern">
      <MemberSignature Language="C#" Value="public int CurrencyPositivePattern { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CurrencyPositivePattern" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.NumberFormatInfo.CurrencyPositivePattern" />
      <MemberSignature Language="VB.NET" Value="Public Property CurrencyPositivePattern As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int CurrencyPositivePattern { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.CurrencyPositivePattern : int with get, set" Usage="System.Globalization.NumberFormatInfo.CurrencyPositivePattern" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wzorzec formatu dla liczb dodatnich wartości.</summary>
        <value>Wzorzec formatu dla liczb dodatnich wartości. Wartość domyślna dla <see cref="P:System.Globalization.NumberFormatInfo.InvariantInfo" /> jest 0, co oznacza "$n", gdzie "$" <see cref="P:System.Globalization.NumberFormatInfo.CurrencySymbol" /> i <paramref name="n" /> jest liczbą.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A> Jest używana przy użyciu ciągu formatu standardowego "C" Aby zdefiniować wzorzec dodatnich wartości waluty. Aby uzyskać więcej informacji, zobacz [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md). Ta właściwość posiada jedną z wartości w tabeli poniżej. Symbol "$" jest <xref:System.Globalization.NumberFormatInfo.CurrencySymbol%2A> i `n` jest liczbą.  
  
|Wartość|Wzór skojarzony|  
|-----------|------------------------|  
|0|$n|  
|1|n$|  
|2|$ n|  
|3|n $|  
  
 Należy pamiętać, że wzorzec nie obsługuje znak wartości dodatnich.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Właściwość jest ustawiany na wartość, która jest mniejsza niż 0 lub większy niż 3.</exception>
        <exception cref="T:System.InvalidOperationException">Ustawiono właściwość i <see cref="T:System.Globalization.NumberFormatInfo" /> obiekt jest tylko do odczytu.</exception>
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencyDecimalDigits" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencyGroupSeparator" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencyGroupSizes" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencySymbol" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencyNegativePattern" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentPositivePattern" />
      </Docs>
    </Member>
    <Member MemberName="CurrencySymbol">
      <MemberSignature Language="C#" Value="public string CurrencySymbol { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CurrencySymbol" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.NumberFormatInfo.CurrencySymbol" />
      <MemberSignature Language="VB.NET" Value="Public Property CurrencySymbol As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CurrencySymbol { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CurrencySymbol : string with get, set" Usage="System.Globalization.NumberFormatInfo.CurrencySymbol" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia ciąg jest do wykorzystania jako symbol waluty.</summary>
        <value>Ciąg do użycia jako symbol waluty. Wartość domyślna dla <see cref="P:System.Globalization.NumberFormatInfo.InvariantInfo" /> jest "¤".</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ciąg znaków, przypisany do <xref:System.Globalization.NumberFormatInfo.CurrencySymbol%2A> właściwość znajduje się w ciągu wynikowym, gdy wartość liczbowa jest formatowana przy użyciu języka "C" [standardowy Ciąg formatujący](~/docs/standard/base-types/standard-numeric-format-strings.md).  
  
   
  
## Examples  
 Poniższy przykład zawiera symbol waluty bieżącej kultury i ciąg standardowego formatu liczb "C" jest używany do formatowania wartości waluty.  
  
 [!code-csharp[System.Globalization.NumberFormatInfo.CurrencySymbol#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.numberformatinfo.currencysymbol/cs/currencysymbolex1.cs#1)]
 [!code-vb[System.Globalization.NumberFormatInfo.CurrencySymbol#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.numberformatinfo.currencysymbol/vb/currencysymbolex1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Właściwość jest ustawiana na <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">Ustawiono właściwość i <see cref="T:System.Globalization.NumberFormatInfo" /> obiekt jest tylko do odczytu.</exception>
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencyDecimalDigits" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencyGroupSeparator" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencyGroupSizes" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencyNegativePattern" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencyPositivePattern" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.NaNSymbol" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentSymbol" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.PerMilleSymbol" />
      </Docs>
    </Member>
    <Member MemberName="CurrentInfo">
      <MemberSignature Language="C#" Value="public static System.Globalization.NumberFormatInfo CurrentInfo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Globalization.NumberFormatInfo CurrentInfo" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.NumberFormatInfo.CurrentInfo" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property CurrentInfo As NumberFormatInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Globalization::NumberFormatInfo ^ CurrentInfo { System::Globalization::NumberFormatInfo ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CurrentInfo : System.Globalization.NumberFormatInfo" Usage="System.Globalization.NumberFormatInfo.CurrentInfo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Globalization.NumberFormatInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera tylko do odczytu <see cref="T:System.Globalization.NumberFormatInfo" /> , formatuje wartości na podstawie bieżącej kultury.</summary>
        <value>Tylko do odczytu <see cref="T:System.Globalization.NumberFormatInfo" /> na podstawie kultury bieżącego wątku.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Trwa pobieranie <xref:System.Globalization.NumberFormatInfo> obiektu z <xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A> właściwość jest równoważna pobierania <xref:System.Globalization.NumberFormatInfo> obiektu z `CultureInfo.CurrentCulture.NumberFormat` właściwości.  
  
   
  
## Examples  
 Poniższy przykład pokazuje, że obiekty zwrócone przez <xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A> i `CultureInfo.CurrentCulture.NumberFormat` właściwości są identyczne. Następnie używa odbicia do wyświetlania wartości właściwości <xref:System.Globalization.NumberFormatInfo> obiektu zwróconego przez <xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A> właściwości w systemie, którego bieżącą kulturą jest en US.  
  
 [!code-csharp[System.Globalization.NumberFormatInfo.CurrentInfo#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.numberformatinfo.currentinfo/cs/currentinfo1.cs#1)]
 [!code-vb[System.Globalization.NumberFormatInfo.CurrentInfo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.numberformatinfo.currentinfo/vb/currentinfo1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Globalization.CultureInfo" />
        <altmember cref="P:System.Globalization.CultureInfo.NumberFormat" />
      </Docs>
    </Member>
    <Member MemberName="DigitSubstitution">
      <MemberSignature Language="C#" Value="public System.Globalization.DigitShapes DigitSubstitution { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Globalization.DigitShapes DigitSubstitution" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.NumberFormatInfo.DigitSubstitution" />
      <MemberSignature Language="VB.NET" Value="Public Property DigitSubstitution As DigitShapes" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Globalization::DigitShapes DigitSubstitution { System::Globalization::DigitShapes get(); void set(System::Globalization::DigitShapes value); };" />
      <MemberSignature Language="F#" Value="member this.DigitSubstitution : System.Globalization.DigitShapes with get, set" Usage="System.Globalization.NumberFormatInfo.DigitSubstitution" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Globalization.DigitShapes</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość określającą sposób wyświetlania kształt cyfrę w graficznym interfejsie użytkownika.</summary>
        <value>Jedna z wartości wyliczenia, które określa kształt cyfrę specyficzne dla kultury.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <xref:System.Globalization.NumberFormatInfo.DigitSubstitution%2A> Właściwość jest zarezerwowana do użytku w przyszłości. Obecnie nie jest używany na potrzeby analizy lub formatowanie operacji dla bieżącego <xref:System.Globalization.NumberFormatInfo> obiektu.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Bieżący <see cref="T:System.Globalization.NumberFormatInfo" /> obiekt jest tylko do odczytu.</exception>
        <exception cref="T:System.ArgumentException">Wartość w operacji zestawu nie jest prawidłową <see cref="T:System.Globalization.DigitShapes" /> wartość.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetFormat">
      <MemberSignature Language="C#" Value="public object GetFormat (Type formatType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetFormat(class System.Type formatType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.NumberFormatInfo.GetFormat(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetFormat (formatType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ GetFormat(Type ^ formatType);" />
      <MemberSignature Language="F#" Value="abstract member GetFormat : Type -&gt; obj&#xA;override this.GetFormat : Type -&gt; obj" Usage="numberFormatInfo.GetFormat formatType" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IFormatProvider.GetFormat(System.Type)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="formatType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="formatType">
          <see cref="T:System.Type" /> Wymaganego formatowanie usługi.</param>
        <summary>Pobiera obiekt określonego typu, która udostępnia usługę numeru formatowania.</summary>
        <returns>Bieżący <see cref="T:System.Globalization.NumberFormatInfo" />, jeśli <paramref name="formatType" /> jest taki sam jak typ bieżącego elementu <see cref="T:System.Globalization.NumberFormatInfo" />; w przeciwnym razie <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `Format(String, IFormatProvider)` Metod obsługiwanych przez podstawowe typy danych wywołać tę metodę podczas bieżącej <xref:System.Globalization.NumberFormatInfo> jest przekazywany jako <xref:System.IFormatProvider> parametru. Ta metoda implementuje <xref:System.IFormatProvider.GetFormat%2A?displayProperty=nameWithType>.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IFormatProvider" />
        <altmember cref="M:System.Globalization.DateTimeFormatInfo.GetFormat(System.Type)" />
      </Docs>
    </Member>
    <Member MemberName="GetInstance">
      <MemberSignature Language="C#" Value="public static System.Globalization.NumberFormatInfo GetInstance (IFormatProvider formatProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Globalization.NumberFormatInfo GetInstance(class System.IFormatProvider formatProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.NumberFormatInfo.GetInstance(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetInstance (formatProvider As IFormatProvider) As NumberFormatInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Globalization::NumberFormatInfo ^ GetInstance(IFormatProvider ^ formatProvider);" />
      <MemberSignature Language="F#" Value="static member GetInstance : IFormatProvider -&gt; System.Globalization.NumberFormatInfo" Usage="System.Globalization.NumberFormatInfo.GetInstance formatProvider" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Globalization.NumberFormatInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="formatProvider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="formatProvider">
          <see cref="T:System.IFormatProvider" /> Użyte do uzyskania <see cref="T:System.Globalization.NumberFormatInfo" />.  
  
—lub— 
 <see langword="null" /> Aby uzyskać <see cref="P:System.Globalization.NumberFormatInfo.CurrentInfo" />.</param>
        <summary>Pobiera <see cref="T:System.Globalization.NumberFormatInfo" /> skojarzonego z określonym <see cref="T:System.IFormatProvider" />.</summary>
        <returns>
          <see cref="T:System.Globalization.NumberFormatInfo" /> Skojarzonego z określonym <see cref="T:System.IFormatProvider" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda używa <xref:System.IFormatProvider.GetFormat%2A?displayProperty=nameWithType> metody `formatProvider` przy użyciu <xref:System.Globalization.NumberFormatInfo> jako parametr typu. Jeśli `formatProvider` jest `null` lub jeśli <xref:System.IFormatProvider.GetFormat%2A?displayProperty=nameWithType> zwraca `null`, Metoda ta zwraca <xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A>.  
  
 Aplikacja pobiera <xref:System.Globalization.NumberFormatInfo> obiektu dla określonej kultury przy użyciu jednej z następujących metod:  
  
-   Za pomocą <xref:System.Globalization.CultureInfo.NumberFormat%2A?displayProperty=nameWithType> właściwości.  
  
-   Za pomocą <xref:System.Globalization.NumberFormatInfo.GetInstance%2A> metoda gdzie `provider` jest <xref:System.Globalization.CultureInfo>.  
  
 A <xref:System.Globalization.NumberFormatInfo> obiekt zostanie utworzony tylko dla niezmiennej kultury lub dla określonych kultur, a nie dla kultury neutralnej. Aby uzyskać więcej informacji dotyczących niezmiennej kultury określonej kultury i kultury neutralnej, zobacz <xref:System.Globalization.CultureInfo> klasy.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IFormatProvider" />
      </Docs>
    </Member>
    <Member MemberName="InvariantInfo">
      <MemberSignature Language="C#" Value="public static System.Globalization.NumberFormatInfo InvariantInfo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Globalization.NumberFormatInfo InvariantInfo" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.NumberFormatInfo.InvariantInfo" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property InvariantInfo As NumberFormatInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Globalization::NumberFormatInfo ^ InvariantInfo { System::Globalization::NumberFormatInfo ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.InvariantInfo : System.Globalization.NumberFormatInfo" Usage="System.Globalization.NumberFormatInfo.InvariantInfo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.NumberFormatInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera tylko do odczytu <see cref="T:System.Globalization.NumberFormatInfo" /> obiekt niezależnych od kultury (niezmiennej).</summary>
        <value>Obiekt tylko do odczytu, który jest niezależny od kultury (niezmiennego).</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 To <xref:System.Globalization.NumberFormatInfo> obiektu zwróconego przez tę właściwość nie zmienia się, niezależnie od bieżącej kultury. Reprezentuje konwencje formatowania niezmiennej kultury, czyli kultury skojarzonej z języka angielskiego, ale nie z jakiegokolwiek kraju/regionu. W operacjach, które są niezależne od kultury lub ciągi wynikowe odpowiednią do wyświetlania, tworzenia różnych kultur wielu formatowania jest używana kultura niezmienna.  
  
   
  
## Examples  
 Poniższy przykład wyświetla domyślne wartości właściwości <xref:System.Globalization.NumberFormatInfo.InvariantInfo%2A>.  
  
 [!code-cpp[System.Globalization.NumberFormatInfo.InvariantInfo#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.NumberFormatInfo.InvariantInfo/CPP/invariantinfo.cpp#1)]
 [!code-csharp[System.Globalization.NumberFormatInfo.InvariantInfo#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.NumberFormatInfo.InvariantInfo/CS/invariantinfo.cs#1)]
 [!code-vb[System.Globalization.NumberFormatInfo.InvariantInfo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.NumberFormatInfo.InvariantInfo/VB/invariantinfo.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.NumberFormatInfo.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsReadOnly : bool" Usage="System.Globalization.NumberFormatInfo.IsReadOnly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość wskazującą, czy to <see cref="T:System.Globalization.NumberFormatInfo" /> obiekt jest tylko do odczytu.</summary>
        <value>
          <see langword="true" /> Jeśli <see cref="T:System.Globalization.NumberFormatInfo" /> jest tylko do odczytu; w przeciwnym razie <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Podjęto próbę przypisania do właściwości tylko do odczytu <xref:System.Globalization.NumberFormatInfo> powoduje, że <xref:System.InvalidOperationException>.  
  
 Możesz wywołać <xref:System.Globalization.NumberFormatInfo.Clone%2A> metodę w celu utworzenia odczytu/zapisu <xref:System.Globalization.NumberFormatInfo> obiektu z obiektu tylko do odczytu, tak jak pokazano w poniższym przykładzie.  
  
 [!code-csharp[System.Globalization.NumberFormatInfo.IsReadOnly#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.numberformatinfo.isreadonly/cs/isreadonly1.cs#1)]
 [!code-vb[System.Globalization.NumberFormatInfo.IsReadOnly#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.numberformatinfo.isreadonly/vb/isreadonly1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Globalization.NumberFormatInfo.ReadOnly(System.Globalization.NumberFormatInfo)" />
      </Docs>
    </Member>
    <Member MemberName="NaNSymbol">
      <MemberSignature Language="C#" Value="public string NaNSymbol { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string NaNSymbol" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.NumberFormatInfo.NaNSymbol" />
      <MemberSignature Language="VB.NET" Value="Public Property NaNSymbol As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ NaNSymbol { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.NaNSymbol : string with get, set" Usage="System.Globalization.NumberFormatInfo.NaNSymbol" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia ciąg, który reprezentuje wartość IEEE NaN (nieliczbową).</summary>
        <value>Ciąg, który reprezentuje wartość IEEE NaN (nieliczbową). Wartość domyślna dla <see cref="P:System.Globalization.NumberFormatInfo.InvariantInfo" /> jest "NaN".</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby uzyskać więcej informacji na temat wartości NaN, zobacz <xref:System.Double> lub <xref:System.Single>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Właściwość jest ustawiana na <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">Ustawiono właściwość i <see cref="T:System.Globalization.NumberFormatInfo" /> obiekt jest tylko do odczytu.</exception>
        <altmember cref="P:System.Globalization.NumberFormatInfo.PositiveInfinitySymbol" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.NegativeInfinitySymbol" />
      </Docs>
    </Member>
    <Member MemberName="NativeDigits">
      <MemberSignature Language="C#" Value="public string[] NativeDigits { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] NativeDigits" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.NumberFormatInfo.NativeDigits" />
      <MemberSignature Language="VB.NET" Value="Public Property NativeDigits As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::String ^&gt; ^ NativeDigits { cli::array &lt;System::String ^&gt; ^ get(); void set(cli::array &lt;System::String ^&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.NativeDigits : string[] with get, set" Usage="System.Globalization.NumberFormatInfo.NativeDigits" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia ciąg tablicę cyfr macierzystych odpowiednikiem Western cyfr od 0 do 9.</summary>
        <value>Tablica ciągu, który zawiera natywny wielokrotność Western cyfr od 0 do 9. Wartość domyślna to tablica zawieranie elementów "0", "1", "2", "3", "4", "5", "6", "7", "8" i "9".</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  Zestaw znaków, który jest określony przez <xref:System.Globalization.NumberFormatInfo.NativeDigits%2A> właściwość nie ma wpływu na analizowanie lub operacji formatowania. Tylko Łaciński podstawowy cyfr od 0 (U + 0030) do 9 (U + 0039) są używane podczas formatowania lub analizowania wartości numerycznych lub wartości daty i godziny.  
  
   
  
## Examples  
 W poniższym przykładzie pokazano <xref:System.Globalization.NumberFormatInfo.NativeDigits%2A> właściwości.  
  
 [!code-cpp[sys.glob.NFI.nativeDigits#1](~/samples/snippets/cpp/VS_Snippets_CLR/sys.glob.NFI.nativeDigits/cpp/nd.cpp#1)]
 [!code-csharp[sys.glob.NFI.nativeDigits#1](~/samples/snippets/csharp/VS_Snippets_CLR/sys.glob.NFI.nativeDigits/cs/nd.cs#1)]
 [!code-vb[sys.glob.NFI.nativeDigits#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/sys.glob.NFI.nativeDigits/vb/nd.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Bieżący <see cref="T:System.Globalization.NumberFormatInfo" /> obiekt jest tylko do odczytu.</exception>
        <exception cref="T:System.ArgumentNullException">W operacji zestawu, wartość jest <see langword="null" />.  
  
—lub— 
W operacji zestawu, jest element tablicy wartości <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">W operacji zestawu tablicy wartości nie zawiera 10 elementów.  
  
—lub— 
W operacji zestawu, element tablicy wartości nie zawiera może to być pojedynczy <see cref="T:System.Char" /> obiektu lub para <see cref="T:System.Char" /> obiektów, które składają się para zastępcza.  
  
—lub— 
W operacji zestawu, element tablicy wartości nie jest liczba cyfr, zgodnie z definicją [standardu Unicode](http://go.microsoft.com/fwlink/?linkid=37123). Oznacza to, że wartości określonej w elemencie tablicy nie ma Unicode <see langword="Number, Decimal Digit" /> wartości kategorii Ogólne (Nd).  
  
—lub— 
W operacji zestawu wartość liczbową z elementu w tablicy wartości nie odpowiada pozycja elementu w tablicy. Oznacza to, że element pod indeksem 0, który jest pierwszy element tablicy, nie może zostać liczbową wartość 0 lub element pod indeksem 1 nie może zostać liczbową wartość 1.</exception>
        <altmember cref="T:System.Globalization.DigitShapes" />
      </Docs>
    </Member>
    <Member MemberName="NegativeInfinitySymbol">
      <MemberSignature Language="C#" Value="public string NegativeInfinitySymbol { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string NegativeInfinitySymbol" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.NumberFormatInfo.NegativeInfinitySymbol" />
      <MemberSignature Language="VB.NET" Value="Public Property NegativeInfinitySymbol As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ NegativeInfinitySymbol { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.NegativeInfinitySymbol : string with get, set" Usage="System.Globalization.NumberFormatInfo.NegativeInfinitySymbol" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia ciąg, który reprezentuje ujemna nieskończoność.</summary>
        <value>Ciąg, który reprezentuje ujemna nieskończoność. Wartość domyślna dla <see cref="P:System.Globalization.NumberFormatInfo.InvariantInfo" /> jest "-nieskończoności".</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby uzyskać więcej informacji na temat ujemna nieskończoność, zobacz <xref:System.Double> lub <xref:System.Single>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Właściwość jest ustawiana na <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">Ustawiono właściwość i <see cref="T:System.Globalization.NumberFormatInfo" /> obiekt jest tylko do odczytu.</exception>
        <altmember cref="P:System.Globalization.NumberFormatInfo.PositiveInfinitySymbol" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.NaNSymbol" />
      </Docs>
    </Member>
    <Member MemberName="NegativeSign">
      <MemberSignature Language="C#" Value="public string NegativeSign { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string NegativeSign" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.NumberFormatInfo.NegativeSign" />
      <MemberSignature Language="VB.NET" Value="Public Property NegativeSign As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ NegativeSign { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.NegativeSign : string with get, set" Usage="System.Globalization.NumberFormatInfo.NegativeSign" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia ciąg, który oznacza, że skojarzone liczba jest ujemna.</summary>
        <value>Ciąg, który oznacza, że skojarzone liczba jest ujemna. Wartość domyślna dla <see cref="P:System.Globalization.NumberFormatInfo.InvariantInfo" /> jest "-".</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość jest używana w operacji analizowania i formatowanie. Aby uzyskać więcej informacji na temat jej użycia w operacjach formatowania, zobacz [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md) i [Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md) tematów.  
  
   
  
## Examples  
 Poniższy przykład tworzy wystąpienie odczytu i zapisu <xref:System.Globalization.CultureInfo> obiekt, który reprezentuje niezmienną kulturę, a następnie przypisuje znak NADKREŚLENIA (U + 203E) do jego <xref:System.Globalization.NumberFormatInfo.NegativeSign%2A> właściwości. Następnie używa tego <xref:System.Globalization.CultureInfo> obiekt do sformatowania tablicę ujemnych liczb zmiennoprzecinkowych.  
  
 [!code-csharp[System.Globalization.NumberFormatInfo.NegativeSign#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.numberformatinfo.negativesign/cs/negativesign1.cs#1)]
 [!code-vb[System.Globalization.NumberFormatInfo.NegativeSign#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.numberformatinfo.negativesign/vb/negativesign1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Właściwość jest ustawiana na <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">Ustawiono właściwość i <see cref="T:System.Globalization.NumberFormatInfo" /> obiekt jest tylko do odczytu.</exception>
        <altmember cref="P:System.Globalization.NumberFormatInfo.PositiveSign" />
      </Docs>
    </Member>
    <Member MemberName="NumberDecimalDigits">
      <MemberSignature Language="C#" Value="public int NumberDecimalDigits { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 NumberDecimalDigits" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.NumberFormatInfo.NumberDecimalDigits" />
      <MemberSignature Language="VB.NET" Value="Public Property NumberDecimalDigits As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int NumberDecimalDigits { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.NumberDecimalDigits : int with get, set" Usage="System.Globalization.NumberFormatInfo.NumberDecimalDigits" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia liczbę miejsc dziesiętnych, do użycia w wartości liczbowych.</summary>
        <value>Liczba miejsc dziesiętnych w wartości liczbowych. Wartość domyślna dla <see cref="P:System.Globalization.NumberFormatInfo.InvariantInfo" /> wynosi 2.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Globalization.NumberFormatInfo.NumberDecimalDigits%2A> Właściwość jest używana z ciągami formatu standardowego "F" i "N" bez specyfikatora dokładności w operacjach formatowania liczbowego. Definiuje domyślną liczbę cyfr ułamkowych, które pojawiają się po separatorze dziesiętnym. Ta wartość zostanie zastąpiona Jeżeli Specyfikator dokładności jest używana. Aby uzyskać więcej informacji, zobacz [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md).  
  
   
  
## Examples  
 Poniższy przykład ilustruje efekt zmiany <xref:System.Globalization.NumberFormatInfo.NumberDecimalDigits%2A> właściwości.  
  
 [!code-cpp[NumberDecimalDigits#1](~/samples/snippets/cpp/VS_Snippets_CLR/NumberDecimalDigits/CPP/numberdecimaldigits.cpp#1)]
 [!code-csharp[NumberDecimalDigits#1](~/samples/snippets/csharp/VS_Snippets_CLR/NumberDecimalDigits/CS/numberdecimaldigits.cs#1)]
 [!code-vb[NumberDecimalDigits#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/NumberDecimalDigits/VB/numberdecimaldigits.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Właściwość jest ustawiany na wartość, która jest mniejsza niż 0 lub większa niż 99.</exception>
        <exception cref="T:System.InvalidOperationException">Ustawiono właściwość i <see cref="T:System.Globalization.NumberFormatInfo" /> obiekt jest tylko do odczytu.</exception>
        <altmember cref="P:System.Globalization.NumberFormatInfo.NumberDecimalSeparator" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.NumberGroupSeparator" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.NumberGroupSizes" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.NaNSymbol" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.NumberNegativePattern" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencyDecimalDigits" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentDecimalDigits" />
      </Docs>
    </Member>
    <Member MemberName="NumberDecimalSeparator">
      <MemberSignature Language="C#" Value="public string NumberDecimalSeparator { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string NumberDecimalSeparator" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.NumberFormatInfo.NumberDecimalSeparator" />
      <MemberSignature Language="VB.NET" Value="Public Property NumberDecimalSeparator As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ NumberDecimalSeparator { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.NumberDecimalSeparator : string with get, set" Usage="System.Globalization.NumberFormatInfo.NumberDecimalSeparator" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia ciąg używany jako separator dziesiętny wartości liczbowe.</summary>
        <value>Ciąg używany jako separator dziesiętny wartości liczbowe. Wartość domyślna dla <see cref="P:System.Globalization.NumberFormatInfo.InvariantInfo" /> jest ".".</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Globalization.NumberFormatInfo.NumberDecimalSeparator%2A> Właściwość jest używana z ciągami formatu standardowego "E", "F", "G", "N" i "R", aby zdefiniować symbol oddzielający całkowite od cyfr dziesiętnych. Aby uzyskać więcej informacji, zobacz [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md).  
  
 Początkowa wartość tej właściwości jest tworzony na podstawie ustawień w **Region i język** w Panelu sterowania.  
  
   
  
## Examples  
 Poniższy przykład ilustruje efekt zmiany <xref:System.Globalization.NumberFormatInfo.NumberDecimalSeparator%2A> właściwości.  
  
 [!code-cpp[NumberDecimalSeparator#1](~/samples/snippets/cpp/VS_Snippets_CLR/NumberDecimalSeparator/CPP/numberdecimalseparator.cpp#1)]
 [!code-csharp[NumberDecimalSeparator#1](~/samples/snippets/csharp/VS_Snippets_CLR/NumberDecimalSeparator/CS/numberdecimalseparator.cs#1)]
 [!code-vb[NumberDecimalSeparator#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/NumberDecimalSeparator/VB/numberdecimalseparator.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Właściwość jest ustawiana na <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">Ustawiono właściwość i <see cref="T:System.Globalization.NumberFormatInfo" /> obiekt jest tylko do odczytu.</exception>
        <exception cref="T:System.ArgumentException">Właściwość jest ustawiany na pusty ciąg.</exception>
        <altmember cref="P:System.Globalization.NumberFormatInfo.NumberDecimalDigits" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.NumberGroupSeparator" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.NumberGroupSizes" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.NaNSymbol" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.NumberNegativePattern" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentDecimalSeparator" />
      </Docs>
    </Member>
    <Member MemberName="NumberGroupSeparator">
      <MemberSignature Language="C#" Value="public string NumberGroupSeparator { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string NumberGroupSeparator" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.NumberFormatInfo.NumberGroupSeparator" />
      <MemberSignature Language="VB.NET" Value="Public Property NumberGroupSeparator As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ NumberGroupSeparator { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.NumberGroupSeparator : string with get, set" Usage="System.Globalization.NumberFormatInfo.NumberGroupSeparator" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia ciąg oddzielający grupy cyfr z lewej strony separatora dziesiętnego w wartości liczbowych.</summary>
        <value>Ciąg, który oddziela grup cyfr na lewo od separatora dziesiętnego w wartości liczbowych. Wartość domyślna dla <see cref="P:System.Globalization.NumberFormatInfo.InvariantInfo" /> jest ",".</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A> Właściwość jest używana przy użyciu ciągu formatu standardowego "N", aby zdefiniować symbol, który oddziela grup cyfr liczby całkowitej. Aby uzyskać więcej informacji, zobacz [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md).  
  
 Początkowa wartość tej właściwości jest tworzony na podstawie ustawień w **Region i język** w Panelu sterowania.  
  
   
  
## Examples  
 Poniższy przykład ilustruje efekt zmiany <xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A> właściwości.  
  
 [!code-cpp[NumberGroupSeparator#1](~/samples/snippets/cpp/VS_Snippets_CLR/NumberGroupSeparator/CPP/numbergroupseparator.cpp#1)]
 [!code-csharp[NumberGroupSeparator#1](~/samples/snippets/csharp/VS_Snippets_CLR/NumberGroupSeparator/CS/numbergroupseparator.cs#1)]
 [!code-vb[NumberGroupSeparator#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/NumberGroupSeparator/VB/numbergroupseparator.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Właściwość jest ustawiana na <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">Ustawiono właściwość i <see cref="T:System.Globalization.NumberFormatInfo" /> obiekt jest tylko do odczytu.</exception>
        <altmember cref="P:System.Globalization.NumberFormatInfo.NumberDecimalDigits" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.NumberDecimalSeparator" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.NumberGroupSizes" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.NaNSymbol" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.NumberNegativePattern" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencyGroupSeparator" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentGroupSeparator" />
      </Docs>
    </Member>
    <Member MemberName="NumberGroupSizes">
      <MemberSignature Language="C#" Value="public int[] NumberGroupSizes { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32[] NumberGroupSizes" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.NumberFormatInfo.NumberGroupSizes" />
      <MemberSignature Language="VB.NET" Value="Public Property NumberGroupSizes As Integer()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;int&gt; ^ NumberGroupSizes { cli::array &lt;int&gt; ^ get(); void set(cli::array &lt;int&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.NumberGroupSizes : int[] with get, set" Usage="System.Globalization.NumberFormatInfo.NumberGroupSizes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia liczbę cyfr w każdej grupie na lewo od separatora dziesiętnego w wartości liczbowych.</summary>
        <value>Liczba cyfr w każdej grupie na lewo od separatora dziesiętnego w wartości liczbowych. Wartość domyślna dla <see cref="P:System.Globalization.NumberFormatInfo.InvariantInfo" /> to Jednowymiarowa tablica tylko jeden element, który jest ustawiony na 3.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wartość <xref:System.Globalization.NumberFormatInfo.NumberGroupSizes%2A> właściwość ma wpływ na wynik wartości liczbowe, które są formatowane przy użyciu "N". Jeśli liczbowe niestandardowe formatowanie ciągu lub innych standardowego formatu liczb są używane ciągi, wartości <xref:System.Globalization.NumberFormatInfo.NumberGroupSizes%2A> właściwość jest ignorowana.  
  
 Każdy element w tablicy jednowymiarowej musi być liczbą całkowitą z zakresu od 1 do 9. Ostatni element może być 0.  
  
 Pierwszy element tablicy definiuje liczbę elementów w grupie najmniej znaczący cyfr od razu po lewej stronie <xref:System.Globalization.NumberFormatInfo.NumberDecimalSeparator%2A>. Każdego kolejnego elementu odnosi się do następnej grupy znaczących cyfr na lewo od poprzedniej grupy. W przypadku ostatniego elementu w tablicy nie 0, pozostałe cyfry są grupowane zależnie od ostatniego elementu w tablicy. Jeśli wartość ostatniego elementu wynosi 0, nie są zgrupowani pozostałe cyfry.  
  
 Na przykład jeśli tablica zawiera {3, 4, 5}, liczba cyfr są grupowane podobne do "55,55555,55555,55555,4444,333.00". Jeśli tablica zawiera {3, 4, 0}, liczba cyfr są grupowane podobne do "55555555555555555,4444,333.00".  
  
   
  
## Examples  
 Poniższy przykład ilustruje efekt zmiany <xref:System.Globalization.NumberFormatInfo.NumberGroupSizes%2A> właściwości.  
  
 [!code-cpp[NumberGroupSizes#1](~/samples/snippets/cpp/VS_Snippets_CLR/NumberGroupSizes/CPP/numbergroupsizes.cpp#1)]
 [!code-csharp[NumberGroupSizes#1](~/samples/snippets/csharp/VS_Snippets_CLR/NumberGroupSizes/CS/numbergroupsizes.cs#1)]
 [!code-vb[NumberGroupSizes#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/NumberGroupSizes/VB/numbergroupsizes.vb#1)]  
  
 Poniższy przykład drukuje wartość przy użyciu różnych <xref:System.Globalization.NumberFormatInfo.NumberGroupSizes%2A> tablic.  
  
 [!code-cpp[Classic NumberFormatInfo.NumberGroupSizes Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic NumberFormatInfo.NumberGroupSizes Example/CPP/source.cpp#1)]
 [!code-csharp[Classic NumberFormatInfo.NumberGroupSizes Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic NumberFormatInfo.NumberGroupSizes Example/CS/source.cs#1)]
 [!code-vb[Classic NumberFormatInfo.NumberGroupSizes Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic NumberFormatInfo.NumberGroupSizes Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Właściwość jest ustawiana na <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">Ustawiono właściwość i Tablica zawiera wpis, który jest mniejszy niż 0 lub większa niż 9.  
  
—lub— 
Ustawiono właściwość i Tablica zawiera wpis, niż ostatni wpis, który jest ustawiony na 0.</exception>
        <exception cref="T:System.InvalidOperationException">Ustawiono właściwość i <see cref="T:System.Globalization.NumberFormatInfo" /> obiekt jest tylko do odczytu.</exception>
        <altmember cref="P:System.Globalization.NumberFormatInfo.NumberDecimalDigits" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.NumberDecimalSeparator" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.NumberGroupSeparator" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.NaNSymbol" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.NumberNegativePattern" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencyGroupSizes" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentGroupSizes" />
      </Docs>
    </Member>
    <Member MemberName="NumberNegativePattern">
      <MemberSignature Language="C#" Value="public int NumberNegativePattern { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 NumberNegativePattern" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.NumberFormatInfo.NumberNegativePattern" />
      <MemberSignature Language="VB.NET" Value="Public Property NumberNegativePattern As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int NumberNegativePattern { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.NumberNegativePattern : int with get, set" Usage="System.Globalization.NumberFormatInfo.NumberNegativePattern" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wzorzec formatu dla wartości ujemnych liczbowych.</summary>
        <value>Wzorzec formatu ujemne wartości liczbowych.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Globalization.NumberFormatInfo.NumberNegativePattern%2A> Właściwość definiuje format wartości ujemnych, sformatowany ciąg standardowego formatu liczb "N". Ta właściwość posiada jedną z wartości w tabeli poniżej. Symbol "-" jest <xref:System.Globalization.NumberFormatInfo.NegativeSign%2A> i `n` jest liczbą.  
  
|Wartość|Wzór skojarzony|  
|-----------|------------------------|  
|0|(n)|  
|1|-n|  
|2|-n|  
|3|n-|  
|4|n -|  
  
 Wartością domyślną kulturą niezmienną zwróconą przez <xref:System.Globalization.NumberFormatInfo.InvariantInfo%2A> właściwości wynosi 1, który reprezentuje "-n", gdzie *n* jest liczbą.  
  
   
  
## Examples  
 Poniższy przykład wyświetla wartość przy użyciu różnych <xref:System.Globalization.NumberFormatInfo.NumberNegativePattern%2A> wzorców.  
  
 [!code-cpp[Classic NumberFormatInfo.NumberNegativePattern Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic NumberFormatInfo.NumberNegativePattern Example/CPP/source.cpp#1)]
 [!code-csharp[Classic NumberFormatInfo.NumberNegativePattern Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic NumberFormatInfo.NumberNegativePattern Example/CS/source.cs#1)]
 [!code-vb[Classic NumberFormatInfo.NumberNegativePattern Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic NumberFormatInfo.NumberNegativePattern Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Właściwość jest ustawiany na wartość, która jest mniejsza niż 0 lub większy niż 4.</exception>
        <exception cref="T:System.InvalidOperationException">Ustawiono właściwość i <see cref="T:System.Globalization.NumberFormatInfo" /> obiekt jest tylko do odczytu.</exception>
        <altmember cref="P:System.Globalization.NumberFormatInfo.NumberDecimalDigits" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.NumberDecimalSeparator" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.NumberGroupSeparator" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.NumberGroupSizes" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.NaNSymbol" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencyNegativePattern" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentNegativePattern" />
      </Docs>
    </Member>
    <Member MemberName="PercentDecimalDigits">
      <MemberSignature Language="C#" Value="public int PercentDecimalDigits { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 PercentDecimalDigits" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.NumberFormatInfo.PercentDecimalDigits" />
      <MemberSignature Language="VB.NET" Value="Public Property PercentDecimalDigits As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int PercentDecimalDigits { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.PercentDecimalDigits : int with get, set" Usage="System.Globalization.NumberFormatInfo.PercentDecimalDigits" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia liczbę miejsc dziesiętnych, do użycia w wartości procentowe.</summary>
        <value>Liczba miejsc dziesiętnych w wartości procentowe. Wartość domyślna dla <see cref="P:System.Globalization.NumberFormatInfo.InvariantInfo" /> wynosi 2.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Globalization.NumberFormatInfo.PercentDecimalDigits%2A> Właściwość jest używana przy użyciu ciągu formatu standardowego "P" bez specyfikatora dokładności w operacjach formatowania liczbowego. Definiuje domyślną liczbę cyfr ułamkowych, które pojawiają się po separatorze dziesiętnym. Ta wartość zostanie zastąpiona Jeżeli Specyfikator dokładności jest używana. Aby uzyskać więcej informacji, zobacz [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md).  
  
   
  
## Examples  
 Poniższy przykład ilustruje efekt zmiany <xref:System.Globalization.NumberFormatInfo.PercentDecimalDigits%2A> właściwości.  
  
 [!code-cpp[PercentDecimalDigits#1](~/samples/snippets/cpp/VS_Snippets_CLR/PercentDecimalDigits/CPP/percentdecimaldigits.cpp#1)]
 [!code-csharp[PercentDecimalDigits#1](~/samples/snippets/csharp/VS_Snippets_CLR/PercentDecimalDigits/CS/percentdecimaldigits.cs#1)]
 [!code-vb[PercentDecimalDigits#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/PercentDecimalDigits/VB/percentdecimaldigits.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Właściwość jest ustawiany na wartość, która jest mniejsza niż 0 lub większa niż 99.</exception>
        <exception cref="T:System.InvalidOperationException">Ustawiono właściwość i <see cref="T:System.Globalization.NumberFormatInfo" /> obiekt jest tylko do odczytu.</exception>
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentDecimalSeparator" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentGroupSeparator" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentGroupSizes" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentSymbol" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentNegativePattern" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentPositivePattern" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencyDecimalDigits" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.NumberDecimalDigits" />
      </Docs>
    </Member>
    <Member MemberName="PercentDecimalSeparator">
      <MemberSignature Language="C#" Value="public string PercentDecimalSeparator { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PercentDecimalSeparator" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.NumberFormatInfo.PercentDecimalSeparator" />
      <MemberSignature Language="VB.NET" Value="Public Property PercentDecimalSeparator As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ PercentDecimalSeparator { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.PercentDecimalSeparator : string with get, set" Usage="System.Globalization.NumberFormatInfo.PercentDecimalSeparator" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia ciąg używany jako separator dziesiętny w wartości procentowe.</summary>
        <value>Ciąg do użycia jako separatora dziesiętnego w wartości procentowe. Wartość domyślna dla <see cref="P:System.Globalization.NumberFormatInfo.InvariantInfo" /> jest ".".</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Globalization.NumberFormatInfo.PercentDecimalSeparator%2A> Właściwość jest używana przy użyciu ciągu formatu standardowego "P", aby zdefiniować symbol oddzielający całkowite od cyfr dziesiętnych. Aby uzyskać więcej informacji, zobacz [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md).  
  
   
  
## Examples  
 Poniższy przykład ilustruje efekt zmiany <xref:System.Globalization.NumberFormatInfo.PercentDecimalSeparator%2A> właściwości.  
  
 [!code-cpp[PercentDecimalSeparator#1](~/samples/snippets/cpp/VS_Snippets_CLR/PercentDecimalSeparator/CPP/percentdecimalseparator.cpp#1)]
 [!code-csharp[PercentDecimalSeparator#1](~/samples/snippets/csharp/VS_Snippets_CLR/PercentDecimalSeparator/CS/percentdecimalseparator.cs#1)]
 [!code-vb[PercentDecimalSeparator#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/PercentDecimalSeparator/VB/percentdecimalseparator.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Właściwość jest ustawiana na <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">Ustawiono właściwość i <see cref="T:System.Globalization.NumberFormatInfo" /> obiekt jest tylko do odczytu.</exception>
        <exception cref="T:System.ArgumentException">Właściwość jest ustawiany na pusty ciąg.</exception>
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentDecimalDigits" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentGroupSeparator" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentGroupSizes" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentSymbol" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentNegativePattern" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentPositivePattern" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.NumberDecimalSeparator" />
      </Docs>
    </Member>
    <Member MemberName="PercentGroupSeparator">
      <MemberSignature Language="C#" Value="public string PercentGroupSeparator { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PercentGroupSeparator" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.NumberFormatInfo.PercentGroupSeparator" />
      <MemberSignature Language="VB.NET" Value="Public Property PercentGroupSeparator As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ PercentGroupSeparator { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.PercentGroupSeparator : string with get, set" Usage="System.Globalization.NumberFormatInfo.PercentGroupSeparator" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia ciąg oddzielający grupy cyfr z lewej strony separatora dziesiętnego w wartości procentowe.</summary>
        <value>Ciąg, który oddziela grup cyfr na lewo od separatora dziesiętnego w wartości procentowe. Wartość domyślna dla <see cref="P:System.Globalization.NumberFormatInfo.InvariantInfo" /> jest ",".</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Globalization.NumberFormatInfo.PercentGroupSeparator%2A> Właściwość jest używana przy użyciu ciągu formatu standardowego "P", aby zdefiniować symbol oddzielający grupy liczb całkowitych. Aby uzyskać więcej informacji, zobacz [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md).  
  
   
  
## Examples  
 Poniższy przykład ilustruje efekt zmiany <xref:System.Globalization.NumberFormatInfo.PercentGroupSeparator%2A> właściwości.  
  
 [!code-cpp[PercentGroupSeparator#1](~/samples/snippets/cpp/VS_Snippets_CLR/PercentGroupSeparator/CPP/percentgroupseparator.cpp#1)]
 [!code-csharp[PercentGroupSeparator#1](~/samples/snippets/csharp/VS_Snippets_CLR/PercentGroupSeparator/CS/percentgroupseparator.cs#1)]
 [!code-vb[PercentGroupSeparator#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/PercentGroupSeparator/VB/percentgroupseparator.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Właściwość jest ustawiana na <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">Ustawiono właściwość i <see cref="T:System.Globalization.NumberFormatInfo" /> obiekt jest tylko do odczytu.</exception>
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentDecimalDigits" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentDecimalSeparator" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentGroupSizes" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentSymbol" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentNegativePattern" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentPositivePattern" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencyGroupSeparator" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.NumberGroupSeparator" />
      </Docs>
    </Member>
    <Member MemberName="PercentGroupSizes">
      <MemberSignature Language="C#" Value="public int[] PercentGroupSizes { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32[] PercentGroupSizes" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.NumberFormatInfo.PercentGroupSizes" />
      <MemberSignature Language="VB.NET" Value="Public Property PercentGroupSizes As Integer()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;int&gt; ^ PercentGroupSizes { cli::array &lt;int&gt; ^ get(); void set(cli::array &lt;int&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.PercentGroupSizes : int[] with get, set" Usage="System.Globalization.NumberFormatInfo.PercentGroupSizes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia liczbę cyfr w każdej grupie na lewo od separatora dziesiętnego w wartości procentowe.</summary>
        <value>Liczba cyfr w każdej grupie na lewo od separatora dziesiętnego w wartości procentowe. Wartość domyślna dla <see cref="P:System.Globalization.NumberFormatInfo.InvariantInfo" /> to Jednowymiarowa tablica tylko jeden element, który jest ustawiony na 3.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Globalization.NumberFormatInfo.PercentGroupSizes%2A> Właściwość jest używana przy użyciu ciągu formatu standardowego "P", aby zdefiniować liczbę cyfr, które pojawiają się w grup całkowitoliczbowy. Aby uzyskać więcej informacji, zobacz [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md). Każdy element w tablicy jednowymiarowej musi być liczbą całkowitą z zakresu od 1 do 9. Ostatni element może być 0.  
  
 Pierwszy element tablicy definiuje liczbę elementów w grupie najmniej znaczący cyfr od razu po lewej stronie <xref:System.Globalization.NumberFormatInfo.PercentDecimalSeparator%2A>. Każdego kolejnego elementu odnosi się do następnej grupy znaczących cyfr na lewo od poprzedniej grupy. W przypadku ostatniego elementu w tablicy nie 0, pozostałe cyfry są grupowane zależnie od ostatniego elementu w tablicy. Jeśli wartość ostatniego elementu wynosi 0, nie są zgrupowani pozostałe cyfry.  
  
 Na przykład, jeśli tablica zawiera {3, 4, 5}, liczba cyfr są grupowane podobne do "55,55555,55555,55555,4444,333.00%". Jeśli tablica zawiera {3, 4, 0}, liczba cyfr są grupowane podobne do "55555555555555555,4444,333.00%".  
  
   
  
## Examples  
 Poniższy przykład ilustruje efekt zmiany <xref:System.Globalization.NumberFormatInfo.PercentGroupSizes%2A> właściwości.  
  
 [!code-cpp[PercentGroupSizes#1](~/samples/snippets/cpp/VS_Snippets_CLR/PercentGroupSizes/CPP/percentgroupsizes.cpp#1)]
 [!code-csharp[PercentGroupSizes#1](~/samples/snippets/csharp/VS_Snippets_CLR/PercentGroupSizes/CS/percentgroupsizes.cs#1)]
 [!code-vb[PercentGroupSizes#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/PercentGroupSizes/VB/percentgroupsizes.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Właściwość jest ustawiana na <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">Ustawiono właściwość i Tablica zawiera wpis, który jest mniejszy niż 0 lub większa niż 9.  
  
—lub— 
Ustawiono właściwość i Tablica zawiera wpis, niż ostatni wpis, który jest ustawiony na 0.</exception>
        <exception cref="T:System.InvalidOperationException">Ustawiono właściwość i <see cref="T:System.Globalization.NumberFormatInfo" /> obiekt jest tylko do odczytu.</exception>
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentDecimalDigits" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentDecimalSeparator" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentGroupSeparator" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentSymbol" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentNegativePattern" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentPositivePattern" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencyGroupSizes" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.NumberGroupSizes" />
      </Docs>
    </Member>
    <Member MemberName="PercentNegativePattern">
      <MemberSignature Language="C#" Value="public int PercentNegativePattern { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 PercentNegativePattern" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.NumberFormatInfo.PercentNegativePattern" />
      <MemberSignature Language="VB.NET" Value="Public Property PercentNegativePattern As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int PercentNegativePattern { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.PercentNegativePattern : int with get, set" Usage="System.Globalization.NumberFormatInfo.PercentNegativePattern" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wzorzec formatu ujemna wartość procentowa.</summary>
        <value>Wzorzec formatu ujemna wartość procentowa. Wartość domyślna dla <see cref="P:System.Globalization.NumberFormatInfo.InvariantInfo" /> to 0, co oznacza "-n %", gdzie jest "%" <see cref="P:System.Globalization.NumberFormatInfo.PercentSymbol" /> i <paramref name="n" /> jest liczbą.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Globalization.NumberFormatInfo.PercentNegativePattern%2A> Jest używana przy użyciu ciągu formatu standardowego "P" Aby zdefiniować wzorzec wartości ujemna wartość procentowa. Aby uzyskać więcej informacji, zobacz [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md). Ta właściwość posiada jedną z wartości w tabeli poniżej. Symbol "%" jest <xref:System.Globalization.NumberFormatInfo.PercentSymbol%2A>, symbol "-" jest <xref:System.Globalization.NumberFormatInfo.NegativeSign%2A>, i `n` jest liczbą. Wartości 3-11 wprowadzono w programie .NET Framework 2.0 i nie można używać we wcześniejszych wersjach.  
  
|Wartość|Wzór skojarzony|  
|-----------|------------------------|  
|0|% - n|  
|1|-n %|  
|2|-%n|  
|3|%-n|  
|4|%n-|  
|5|n-%|  
|6|% n-|  
|7|-% n|  
|8|% n-|  
|9|% n-|  
|10|% - n|  
|11|n %|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Właściwość jest ustawiany na wartość, która jest mniejsza niż 0 lub większa od 11.</exception>
        <exception cref="T:System.InvalidOperationException">Ustawiono właściwość i <see cref="T:System.Globalization.NumberFormatInfo" /> obiekt jest tylko do odczytu.</exception>
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentDecimalDigits" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentDecimalSeparator" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentGroupSeparator" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentGroupSizes" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentSymbol" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentPositivePattern" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencyNegativePattern" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.NumberNegativePattern" />
      </Docs>
    </Member>
    <Member MemberName="PercentPositivePattern">
      <MemberSignature Language="C#" Value="public int PercentPositivePattern { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 PercentPositivePattern" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.NumberFormatInfo.PercentPositivePattern" />
      <MemberSignature Language="VB.NET" Value="Public Property PercentPositivePattern As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int PercentPositivePattern { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.PercentPositivePattern : int with get, set" Usage="System.Globalization.NumberFormatInfo.PercentPositivePattern" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wzorzec formatu dla wartości dodatnich procent.</summary>
        <value>Wzorzec formatu dla wartości dodatnich procent. Wartość domyślna dla <see cref="P:System.Globalization.NumberFormatInfo.InvariantInfo" /> jest 0, co oznacza "n %", gdzie "%" <see cref="P:System.Globalization.NumberFormatInfo.PercentSymbol" /> i <paramref name="n" /> jest liczbą.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Globalization.NumberFormatInfo.PercentPositivePattern%2A> Właściwość jest używana przy użyciu ciągu formatu standardowego "P" do definiowania wzorzec dodatnią wartość procentową wartości. Aby uzyskać więcej informacji, zobacz [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md). Ta właściwość posiada jedną z wartości w tabeli poniżej. Symbol "%" jest <xref:System.Globalization.NumberFormatInfo.PercentSymbol%2A> i `n` jest liczbą.  
  
|Wartość|Wzór skojarzony|  
|-----------|------------------------|  
|0|n %|  
|1|n%|  
|2|%n|  
|3|% n|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Właściwość jest ustawiany na wartość, która jest mniejsza niż 0 lub większy niż 3.</exception>
        <exception cref="T:System.InvalidOperationException">Ustawiono właściwość i <see cref="T:System.Globalization.NumberFormatInfo" /> obiekt jest tylko do odczytu.</exception>
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentDecimalDigits" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentDecimalSeparator" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentGroupSeparator" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentGroupSizes" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentSymbol" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentNegativePattern" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencyPositivePattern" />
      </Docs>
    </Member>
    <Member MemberName="PercentSymbol">
      <MemberSignature Language="C#" Value="public string PercentSymbol { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PercentSymbol" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.NumberFormatInfo.PercentSymbol" />
      <MemberSignature Language="VB.NET" Value="Public Property PercentSymbol As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ PercentSymbol { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.PercentSymbol : string with get, set" Usage="System.Globalization.NumberFormatInfo.PercentSymbol" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia ciąg jest do wykorzystania jako symbol procentu.</summary>
        <value>Ciąg do użycia jako symbol procentu. Wartość domyślna dla <see cref="P:System.Globalization.NumberFormatInfo.InvariantInfo" /> jest "%".</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ciąg znaków, przypisany do <xref:System.Globalization.NumberFormatInfo.PercentSymbol%2A> właściwości znajduje się w ciągu wynikowym, gdy wartość liczbowa jest formatowana z "P" lub ciąg formatu, który zawiera "%".  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Właściwość jest ustawiana na <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">Ustawiono właściwość i <see cref="T:System.Globalization.NumberFormatInfo" /> obiekt jest tylko do odczytu.</exception>
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentDecimalDigits" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentDecimalSeparator" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentGroupSeparator" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentGroupSizes" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentNegativePattern" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentPositivePattern" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencySymbol" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.NaNSymbol" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.PerMilleSymbol" />
      </Docs>
    </Member>
    <Member MemberName="PerMilleSymbol">
      <MemberSignature Language="C#" Value="public string PerMilleSymbol { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PerMilleSymbol" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.NumberFormatInfo.PerMilleSymbol" />
      <MemberSignature Language="VB.NET" Value="Public Property PerMilleSymbol As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ PerMilleSymbol { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.PerMilleSymbol : string with get, set" Usage="System.Globalization.NumberFormatInfo.PerMilleSymbol" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia ciąg do użycia jako symbol promila.</summary>
        <value>Ciąg jest do wykorzystania jako symbol promila. Wartość domyślna dla <see cref="P:System.Globalization.NumberFormatInfo.InvariantInfo" /> jest "‰", czyli Unicode znaku U + 2030 roku.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ciąg znaków, przypisany do <xref:System.Globalization.NumberFormatInfo.PerMilleSymbol%2A> właściwości znajduje się w ciągu wynikowym, gdy wartość liczbowa jest formatowana z ciągiem formatu, który zawiera "‰".  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Właściwość jest ustawiana na <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">Ustawiono właściwość i <see cref="T:System.Globalization.NumberFormatInfo" /> obiekt jest tylko do odczytu.</exception>
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencySymbol" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.NaNSymbol" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentSymbol" />
      </Docs>
    </Member>
    <Member MemberName="PositiveInfinitySymbol">
      <MemberSignature Language="C#" Value="public string PositiveInfinitySymbol { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PositiveInfinitySymbol" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.NumberFormatInfo.PositiveInfinitySymbol" />
      <MemberSignature Language="VB.NET" Value="Public Property PositiveInfinitySymbol As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ PositiveInfinitySymbol { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.PositiveInfinitySymbol : string with get, set" Usage="System.Globalization.NumberFormatInfo.PositiveInfinitySymbol" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia ciąg, który reprezentuje nieskończoności dodatniej.</summary>
        <value>Ciąg, który reprezentuje nieskończoności dodatniej. Wartość domyślna dla <see cref="P:System.Globalization.NumberFormatInfo.InvariantInfo" /> jest "Nieskończoność".</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby uzyskać więcej informacji na temat nieskończoności dodatniej, zobacz <xref:System.Double> lub <xref:System.Single>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Właściwość jest ustawiana na <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">Ustawiono właściwość i <see cref="T:System.Globalization.NumberFormatInfo" /> obiekt jest tylko do odczytu.</exception>
        <altmember cref="P:System.Globalization.NumberFormatInfo.NegativeInfinitySymbol" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.NaNSymbol" />
      </Docs>
    </Member>
    <Member MemberName="PositiveSign">
      <MemberSignature Language="C#" Value="public string PositiveSign { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PositiveSign" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.NumberFormatInfo.PositiveSign" />
      <MemberSignature Language="VB.NET" Value="Public Property PositiveSign As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ PositiveSign { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.PositiveSign : string with get, set" Usage="System.Globalization.NumberFormatInfo.PositiveSign" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia ciąg, który oznacza, że skojarzone z nimi numery jest dodatni.</summary>
        <value>Ciąg, który oznacza, że skojarzone z nimi numery jest dodatni. Wartość domyślna dla <see cref="P:System.Globalization.NumberFormatInfo.InvariantInfo" /> to "+".</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość jest używana tylko w przypadku analizowanie ciągów numerycznych, a nie do formatowania.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">W operacji zestawu, wartość do przypisania jest <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">Ustawiono właściwość i <see cref="T:System.Globalization.NumberFormatInfo" /> obiekt jest tylko do odczytu.</exception>
        <altmember cref="P:System.Globalization.NumberFormatInfo.NegativeSign" />
      </Docs>
    </Member>
    <Member MemberName="ReadOnly">
      <MemberSignature Language="C#" Value="public static System.Globalization.NumberFormatInfo ReadOnly (System.Globalization.NumberFormatInfo nfi);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Globalization.NumberFormatInfo ReadOnly(class System.Globalization.NumberFormatInfo nfi) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.NumberFormatInfo.ReadOnly(System.Globalization.NumberFormatInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ReadOnly (nfi As NumberFormatInfo) As NumberFormatInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Globalization::NumberFormatInfo ^ ReadOnly(System::Globalization::NumberFormatInfo ^ nfi);" />
      <MemberSignature Language="F#" Value="static member ReadOnly : System.Globalization.NumberFormatInfo -&gt; System.Globalization.NumberFormatInfo" Usage="System.Globalization.NumberFormatInfo.ReadOnly nfi" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Globalization.NumberFormatInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nfi" Type="System.Globalization.NumberFormatInfo" />
      </Parameters>
      <Docs>
        <param name="nfi">
          <see cref="T:System.Globalization.NumberFormatInfo" /> Do opakowania.</param>
        <summary>Zwraca tylko do odczytu <see cref="T:System.Globalization.NumberFormatInfo" /> otoki.</summary>
        <returns>Tylko do odczytu <see cref="T:System.Globalization.NumberFormatInfo" /> otokę <paramref name="nfi" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Tę otokę zapobiega wszelkie modyfikacje `nfi`.  
  
 Podjęto próbę przypisania do właściwości tylko do odczytu <xref:System.Globalization.NumberFormatInfo> powoduje, że <xref:System.InvalidOperationException>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="nfi" /> jest <see langword="null" />.</exception>
        <altmember cref="P:System.Globalization.NumberFormatInfo.IsReadOnly" />
      </Docs>
    </Member>
  </Members>
</Type>