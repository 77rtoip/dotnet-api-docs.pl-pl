<Type Name="SortKey" FullName="System.Globalization.SortKey">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="b15666ecaaf1c3a9665c2c3559b07e71e53f5316" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30455157" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class SortKey" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi serializable beforefieldinit SortKey extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Globalization.SortKey" />
  <TypeSignature Language="VB.NET" Value="Public Class SortKey" />
  <TypeSignature Language="C++ CLI" Value="public ref class SortKey" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Reprezentuje wynik mapowania ciąg na jego klucza sortowania.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Porównanie zależne od kultury dwa ciągi zależy od każdego znaku w ciągach mających różne kategorie wag sortowania, m.in. skryptu, alfabetyczne, wielkości i diakrytycznych. Klucz służy jako repozytorium te wagi dla określonego ciągu.  
  
 <xref:System.Globalization.CompareInfo.GetSortKey%2A?displayProperty=nameWithType> Metoda zwraca wystąpienie klasy <xref:System.Globalization.SortKey> klasy, która odzwierciedla mapowanie zależne od kultury znaków w określonym ciągu. Wartość <xref:System.Globalization.SortKey> obiekt jest danych klucza, który jest zwracany przez <xref:System.Globalization.SortKey.KeyData%2A> właściwości. Te dane klucza składa się z serii bajtów, które zakodować ciąg, specyficzne dla kultury reguły sortowania i opcje porównania określona przez użytkownika. Porównanie przy użyciu kluczy sortowania składa się z bitowego porównanie odpowiednich danych klucza do każdego klucza sortowania.  Na przykład, jeśli klucz jest utworzyć przez wywołanie metody <xref:System.Globalization.CompareInfo.GetSortKey%28System.String%2CSystem.Globalization.CompareOptions%29> metody o wartości <xref:System.Globalization.CompareOptions.IgnoreCase?displayProperty=nameWithType>, operacja porównywania ciągów, który używa klucza sortowania nie uwzględnia wielkości liter.  
  
 Po utworzeniu klucza sortowania dla ciągu porównać klucze sortowania, wywoływania statycznych <xref:System.Globalization.SortKey.Compare%2A?displayProperty=nameWithType> metody. Ta metoda wykonuje proste porównanie po bicie, dlatego jest znacznie szybsze niż <xref:System.String.Compare%2A?displayProperty=nameWithType> lub <xref:System.Globalization.CompareInfo.Compare%2A?displayProperty=nameWithType> metody.  
  
## <a name="performance-considerations"></a>Zagadnienia dotyczące wydajności  
 Podczas przeprowadzania porównania ciągów <xref:System.Globalization.SortKey.Compare%2A> i <xref:System.Globalization.CompareInfo.Compare%2A?displayProperty=nameWithType> metody yield takie same wyniki, ale ich elementami docelowymi różnych scenariuszy.  
  
 Na wysokim poziomie <xref:System.Globalization.CompareInfo.Compare%2A?displayProperty=nameWithType> — metoda generuje klucz sortowania dla każdego ciągu, wykonuje porównanie, a następnie spowoduje odrzucenie klucza sortowania i zwraca wynik porównania. Jednak <xref:System.Globalization.CompareInfo.Compare%2A?displayProperty=nameWithType> — metoda nie wygenerowanie klucza sortowania całego do porównania. Zamiast tego z nich metoda generuje danych klucza dla każdego elementu text (to znaczy podstawowej znak, para zastępcza lub łączenie sekwencja znaków) w każdym ciągu. Następnie metoda porównuje danych klucza dla odpowiednich elementów tekstu. Operacja kończy jak ultimate wynik porównania jest określana. Informacje o kluczu sortowania jest kolumną obliczaną, ale nie <xref:System.Globalization.SortKey> tworzony jest obiekt. Ta strategia jest ekonomiczne pod względem wydajności, jeśli oba parametry są porównywane raz, ale staje się kosztowne, jeśli ciągi są tego samego są porównywane wiele razy.  
  
 <xref:System.Globalization.SortKey.Compare%2A> Metoda wymaga Generowanie <xref:System.Globalization.SortKey> obiekt dla każdego ciągu przed wykonaniem porównania. Ta strategia jest kosztowna pod względem wydajności dla pierwszego porównania ze względu na czas i pamięci, które zainwestowały w celu wygenerowania <xref:System.Globalization.SortKey> obiektów. Staje się ekonomiczny, jeśli tych samych kluczy sortowania są porównywane wiele razy.  
  
 Na przykład załóżmy, że napisać aplikację, która wyszukuje tabeli bazy danych dla wiersza, w którym kolumny indeksu na podstawie ciągu odpowiada określonego ciągu wyszukiwania. Tabela zawiera tysiące wierszy i porównywanie ciągów wyszukiwania do indeksu w każdym wierszu zająć dużo czasu. W związku z tym jeśli aplikacja przechowuje wiersz i kolumnę indeksu, także generuje i przechowuje klucza sortowania dla indeksu w kolumnie dedykowane do zwiększania wydajności wyszukiwania. Gdy aplikacja jest szuka wiersz docelowy, porównuje klucza sortowania dla klucza sortowania dla indeksu ciągu, zamiast porównanie ciągu wyszukiwania na ciąg indeksu ciągu wyszukiwania.  
  
## <a name="security-considerations"></a>Zagadnienia dotyczące bezpieczeństwa  
 <xref:System.Globalization.CompareInfo.GetSortKey%28System.String%2CSystem.Globalization.CompareOptions%29?displayProperty=nameWithType> Metoda zwraca <xref:System.Globalization.SortKey> obiektu o wartości na podstawie określonego ciągu i <xref:System.Globalization.CompareOptions> wartość i kultury skojarzone z podstawową <xref:System.Globalization.CompareInfo> obiektu. Jeśli decyzja zabezpieczeń zależy od porównania ciągów lub zmień wielkość, należy użyć <xref:System.Globalization.CompareInfo.GetSortKey%28System.String%2CSystem.Globalization.CompareOptions%29?displayProperty=nameWithType> metody Niezmienna kultura upewnij się, że zachowanie operacji jest spójne, niezależnie od ustawienia kultury, system operacyjny.  
  
 Aby uzyskać klucz, wykonaj następujące czynności:  
  
1.  Pobrać Niezmienna kultura z <xref:System.Globalization.CultureInfo.InvariantCulture?displayProperty=nameWithType> właściwości.  
  
2.  Pobrać <xref:System.Globalization.CompareInfo> obiektu kulturą niezmienną z <xref:System.Globalization.CultureInfo.CompareInfo%2A?displayProperty=nameWithType> właściwości.  
  
3.  Wywołanie <xref:System.Globalization.CompareInfo.GetSortKey%28System.String%2CSystem.Globalization.CompareOptions%29?displayProperty=nameWithType> metody.  
  
 Praca z wartością <xref:System.Globalization.SortKey> odpowiednik wzywania systemu Windows jest obiekt `LCMapString` metodę o określonej wartości LCMAP_SORTKEY. Niemniej jednak w przypadku <xref:System.Globalization.SortKey> obiekt klucze sortowania dla angielskie znaki poprzedzać klucze sortowania znaków w języku koreańskim.  
  
 <xref:System.Globalization.SortKey> obiekty mogą być serializowane, ale tylko wtedy, dzięki czemu mogą oni cross <xref:System.AppDomain> obiektów. Jeśli aplikacja serializuje <xref:System.Globalization.SortKey> obiektu, aplikacja musi ponownie wygenerować klucze sortowania, po nowej wersji programu .NET Framework.  
  
 Aby uzyskać więcej informacji na temat kluczy sortowania, patrz Unicode techniczne standardowe #10 "Algorytm sortowania Unicode" na [witryny sieci Web konsorcjum Unicode](http://go.microsoft.com/fwlink/?linkid=37123).  
  
   
  
## Examples  
 Poniższy przykład porównuje ciąg "llama" przy użyciu "en US" i "es-ES" kultur i kultur tradycyjnych "en US" i "es-ES".  
  
 [!code-cpp[System.Globalization.SortKey.Compare#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.SortKey.Compare/CPP/sortkey_compare.cpp#1)]
 [!code-csharp[System.Globalization.SortKey.Compare#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.SortKey.Compare/CS/sortkey_compare.cs#1)]
 [!code-vb[System.Globalization.SortKey.Compare#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.SortKey.Compare/VB/sortkey_compare.vb#1)]  
  
 W poniższym przykładzie pokazano, jak używasz <xref:System.Globalization.SortKey> klasy do zwiększenia wydajności w aplikacji, która często zależy sortowanie i wyszukiwanie dużą tablicę. W przykładzie jest tworzony nieuporządkowaną tablicę nazw, w tym przypadku mającej 13 elementów. Następnie zapisuje klucz sortowania nazwy w tablica równoległa przekazaniem do <xref:System.Array.Sort%28System.Array%2CSystem.Array%29?displayProperty=nameWithType> metody. Wynik jest posortowana tablicy. Przykład wyszukuje tablicy dla trzy ciągi. Dla każdego ciągu wyszukiwania wywołuje <xref:System.Globalization.CompareInfo.GetSortKey%28System.String%2CSystem.Globalization.CompareOptions%29?displayProperty=nameWithType> metodę, aby pobrać ten ciąg klucza sortowania, a następnie wywołania <xref:System.Array.FindIndex%2A?displayProperty=nameWithType> metoda pobierania indeks tego klucza sortowania w tablicy klucze sortowania. Tablice kluczy nazwy i sortowania równoległego, zwrócony indeksu jest również indeksu o nazwie w `names` tablicy.  
  
 [!code-csharp[System.Globalization.SortKey.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.sortkey.class/cs/sortkey1.cs#1)]
 [!code-vb[System.Globalization.SortKey.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.sortkey.class/vb/sortkey1.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="M:System.Globalization.CompareInfo.GetSortKey(System.String,System.Globalization.CompareOptions)" />
    <altmember cref="P:System.Globalization.SortKey.KeyData" />
  </Docs>
  <Members>
    <Member MemberName="Compare">
      <MemberSignature Language="C#" Value="public static int Compare (System.Globalization.SortKey sortkey1, System.Globalization.SortKey sortkey2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Compare(class System.Globalization.SortKey sortkey1, class System.Globalization.SortKey sortkey2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.SortKey.Compare(System.Globalization.SortKey,System.Globalization.SortKey)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Compare (sortkey1 As SortKey, sortkey2 As SortKey) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Compare(System::Globalization::SortKey ^ sortkey1, System::Globalization::SortKey ^ sortkey2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sortkey1" Type="System.Globalization.SortKey" />
        <Parameter Name="sortkey2" Type="System.Globalization.SortKey" />
      </Parameters>
      <Docs>
        <param name="sortkey1">Pierwszy klucz sortowania do porównania.</param>
        <param name="sortkey2">Drugi klucz sortowania do porównania.</param>
        <summary>Porównuje dwa klucze sortowania.</summary>
        <returns>Liczby całkowite ze znakiem wskazuje relację między <paramref name="sortkey1" /> i <paramref name="sortkey2" />.  
  
 <list type="table"><listheader><term> Wartość  
  
 </term><description> Warunek  
  
 </description></listheader><item><term> Mniejsza od zera.  
  
 </term><description><paramref name="sortkey1" /> jest mniejsza niż <paramref name="sortkey2" />.  
  
 </description></item><item><term> Zero  
  
 </term><description><paramref name="sortkey1" /> jest równa <paramref name="sortkey2" />.  
  
 </description></item><item><term> Większa niż zero  
  
 </term><description><paramref name="sortkey1" /> jest większa niż <paramref name="sortkey2" />.  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Globalization.SortKey.Compare%2A> Metoda porównuje <xref:System.Globalization.SortKey.KeyData%2A> właściwości `sortkey1` i `sortkey2` parametrów. Metoda zwraca wyniki <xref:System.Globalization.CompareInfo.Compare%2A?displayProperty=nameWithType> metody.  
  
 Aby uzyskać więcej informacji na temat <xref:System.Globalization.SortKey.Compare%2A> — metoda i porównanie klucze sortowania, zobacz <xref:System.Globalization.SortKey> klasy tematu.  
  
   
  
## Examples  
 Poniższy przykład kodu porównuje dwa ciągi, przy użyciu <xref:System.Globalization.SortKey.Compare%2A> — metoda i odpowiednik <xref:System.Globalization.CompareInfo.Compare%28System.String%2CSystem.String%2CSystem.Globalization.CompareOptions%29?displayProperty=nameWithType> metody.  
  
 [!code-csharp[sys.glob.sortkey.compare#1](~/samples/snippets/csharp/VS_Snippets_CLR/sys.glob.sortkey.compare/cs/skcmp.cs#1)]
 [!code-vb[sys.glob.sortkey.compare#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/sys.glob.sortkey.compare/vb/skcmp.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="sortkey1" /> lub <paramref name="sortkey2" /> jest <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.SortKey.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (value As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">Obiekt do porównania z bieżącym <see cref="T:System.Globalization.SortKey" /> obiektu.</param>
        <summary>Określa, czy określony obiekt jest taki sam, jak bieżący <see cref="T:System.Globalization.SortKey" /> obiektu.</summary>
        <returns>
          <see langword="true" /> Jeśli <paramref name="value" /> parametru jest taki sam, jak bieżący <see cref="T:System.Globalization.SortKey" /> obiektu; w przeciwnym razie <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dwa <xref:System.Globalization.SortKey> obiekty są traktowane jako równe, jeśli ich <xref:System.Globalization.SortKey.KeyData%2A> właściwości są takie same.  
  
 Ta metoda zastępuje <xref:System.Object.Equals%2A?displayProperty=nameWithType>.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje wyniki <xref:System.Globalization.SortKey.Equals%2A> w porównaniu z różnymi <xref:System.Globalization.SortKey> obiektów.  
  
 [!code-cpp[System.Globalization.SortKey.Equals#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.SortKey.Equals/CPP/sortkey_equals.cpp#1)]
 [!code-csharp[System.Globalization.SortKey.Equals#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.SortKey.Equals/CS/sortkey_equals.cs#1)]
 [!code-vb[System.Globalization.SortKey.Equals#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.SortKey.Equals/VB/sortkey_equals.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="value" /> jest <see langword="null" />.</exception>
        <altmember cref="M:System.Object.Equals(System.Object)" />
        <altmember cref="P:System.Globalization.SortKey.KeyData" />
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.SortKey.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Pełni rolę funkcji skrótu dla bieżącego <see cref="T:System.Globalization.SortKey" /> obiekt, który nadaje się do tworzenia skrótów struktury algorytmów i danych, takich jak tablicy skrótów.</summary>
        <returns>Wartość skrótu dla bieżącego <see cref="T:System.Globalization.SortKey" /> obiektu.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda generuje ten sam kod skrótu dla dwóch obiektów, które są takie same, zgodnie z <xref:System.Globalization.SortKey.Equals%2A> metody.  
  
 Ta metoda zastępuje <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType>.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Object.GetHashCode" />
        <altmember cref="T:System.Collections.Hashtable" />
        <altmember cref="M:System.Globalization.SortKey.Equals(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="KeyData">
      <MemberSignature Language="C#" Value="public virtual byte[] KeyData { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8[] KeyData" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.SortKey.KeyData" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property KeyData As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property cli::array &lt;System::Byte&gt; ^ KeyData { cli::array &lt;System::Byte&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera tablicę bajtów reprezentujący bieżącą <see cref="T:System.Globalization.SortKey" /> obiektu.</summary>
        <value>Tablica bajtów reprezentujący bieżącą <see cref="T:System.Globalization.SortKey" /> obiektu.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby uzyskać więcej informacji dotyczących korzystania z danymi zwróconymi przez <xref:System.Globalization.SortKey.KeyData%2A> właściwości w porównywanie ciągów, zobacz <xref:System.Globalization.SortKey> klasy tematu.  
  
   
  
## Examples  
 Poniższy przykład kodu wyświetla oryginalnego ciągu i ciąg równoważny i danych klucza dla klucza sortowania z uwzględnieniem wielkości liter i klucza sortowania bez uwzględniania wielkości liter.  
  
 [!code-csharp[sys.glob.sortkey.tostring#1](~/samples/snippets/csharp/VS_Snippets_CLR/sys.glob.sortkey.tostring/cs/ts.cs#1)]
 [!code-vb[sys.glob.sortkey.tostring#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/sys.glob.sortkey.tostring/vb/ts.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OriginalString">
      <MemberSignature Language="C#" Value="public virtual string OriginalString { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OriginalString" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.SortKey.OriginalString" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property OriginalString As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ OriginalString { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera oryginalny ciąg znaków używany do tworzenia bieżącego <see cref="T:System.Globalization.SortKey" /> obiektu.</summary>
        <value>Oryginalny ciąg znaków używany do tworzenia bieżącego <see cref="T:System.Globalization.SortKey" /> obiektu.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład kodu wyświetla oryginalnego ciągu i ciąg równoważny i danych klucza dla klucza sortowania z uwzględnieniem wielkości liter i klucza sortowania bez uwzględniania wielkości liter.  
  
 [!code-csharp[sys.glob.sortkey.tostring#1](~/samples/snippets/csharp/VS_Snippets_CLR/sys.glob.sortkey.tostring/cs/ts.cs#1)]
 [!code-vb[sys.glob.sortkey.tostring#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/sys.glob.sortkey.tostring/vb/ts.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.SortKey.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zwraca ciąg reprezentujący bieżące <see cref="T:System.Globalization.SortKey" /> obiektu.</summary>
        <returns>Ciąg reprezentujący bieżące <see cref="T:System.Globalization.SortKey" /> obiektu.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wartość zwracana jest złączeniem ciąg "Porównywaniu -", identyfikator kultury i opcje porównania bieżącego <xref:System.Globalization.SortKey> obiektu, a wartość <xref:System.Globalization.SortKey.OriginalString%2A> właściwości.  
  
 Ta metoda zastępuje <xref:System.Object.ToString%2A?displayProperty=nameWithType>.  
  
   
  
## Examples  
 Poniższy przykładowy kod przedstawia oryginalnego ciągu ciągi przekazanej przez <xref:System.Globalization.SortKey.ToString%2A> metoda klucze sortowania z uwzględnieniem wielkości liter i bez uwzględniania wielkości liter i danych klucza dla kluczy sortowania z uwzględnieniem wielkości liter i bez uwzględniania wielkości liter.  
  
 [!code-csharp[sys.glob.sortkey.tostring#1](~/samples/snippets/csharp/VS_Snippets_CLR/sys.glob.sortkey.tostring/cs/ts.cs#1)]
 [!code-vb[sys.glob.sortkey.tostring#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/sys.glob.sortkey.tostring/vb/ts.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Object.ToString" />
      </Docs>
    </Member>
  </Members>
</Type>