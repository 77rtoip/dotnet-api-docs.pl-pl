<Type Name="IVsaEngine" FullName="Microsoft.Vsa.IVsaEngine">
  <Metadata><Meta Name="ms.openlocfilehash" Value="99cbed00cef5882880203b795c893eb98ac18318" /><Meta Name="ms.sourcegitcommit" Value="d8bd5d494445ce3fcad1321267cb87548d23a45b" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="12/15/2018" /><Meta Name="ms.locfileid" Value="53448166" /></Metadata><TypeSignature Language="C#" Value="public interface IVsaEngine" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IVsaEngine" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Vsa.IVsaEngine" />
  <TypeSignature Language="VB.NET" Value="Public Interface IVsaEngine" />
  <TypeSignature Language="C++ CLI" Value="public interface class IVsaEngine" />
  <TypeSignature Language="F#" Value="type IVsaEngine = interface" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Vsa</AssemblyName>
    <AssemblyVersion>7.0.5000.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
      <AttributeName>System.Obsolete("Use of this type is not recommended because it is being deprecated in Visual Studio 2005; there will be no replacement for this feature. Please see the ICodeCompiler documentation for additional help.")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
      <AttributeName>System.Runtime.InteropServices.Guid("E0C0FFE1-7eea-4ee2-b7e4-0080c7eb0b74")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
      <AttributeName>System.Runtime.InteropServices.InterfaceType(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="740c3-101">Definiuje metody i właściwości, że aparat skryptu musi obsługiwać i zapewnia dostęp programistyczny do aparatu skryptów.</span><span class="sxs-lookup"><span data-stu-id="740c3-101">Defines the methods and properties that a script engine must support and provides programmatic access to the script engine.</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Assembly">
      <MemberSignature Language="C#" Value="public System.Reflection.Assembly Assembly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Reflection.Assembly Assembly" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Vsa.IVsaEngine.Assembly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Assembly As Assembly" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Reflection::Assembly ^ Assembly { System::Reflection::Assembly ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Assembly : System.Reflection.Assembly" Usage="Microsoft.Vsa.IVsaEngine.Assembly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Vsa</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Assembly</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="740c3-102">Pobiera odwołanie do zestawu uruchomione, generowane przez <see cref="M:Microsoft.Vsa.IVsaEngine.Run" /> metody.</span><span class="sxs-lookup"><span data-stu-id="740c3-102">Gets a reference to the running assembly generated by the <see cref="M:Microsoft.Vsa.IVsaEngine.Run" /> method.</span></span></summary>
        <value><span data-ttu-id="740c3-103">Odwołanie do zestawu aktualnie uruchomione.</span><span class="sxs-lookup"><span data-stu-id="740c3-103">Reference to the currently running assembly.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Vsa.IVsaEngine.Close" />
      <MemberSignature Language="VB.NET" Value="Public Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Close();" />
      <MemberSignature Language="F#" Value="abstract member Close : unit -&gt; unit" Usage="iVsaEngine.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Vsa</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="740c3-104">Zamyka aparatu skryptów i zwalnia wszystkie zasoby.</span><span class="sxs-lookup"><span data-stu-id="740c3-104">Closes the script engine and releases all resources.</span></span> <span data-ttu-id="740c3-105">Jeśli aparat skryptów jest aktualnie uruchomione, <see cref="M:Microsoft.Vsa.IVsaEngine.Reset" /> najpierw jest wywoływana metoda.</span><span class="sxs-lookup"><span data-stu-id="740c3-105">If the script engine is currently running, the <see cref="M:Microsoft.Vsa.IVsaEngine.Reset" /> method is called first.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Compile">
      <MemberSignature Language="C#" Value="public bool Compile ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Compile() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Vsa.IVsaEngine.Compile" />
      <MemberSignature Language="VB.NET" Value="Public Function Compile () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Compile();" />
      <MemberSignature Language="F#" Value="abstract member Compile : unit -&gt; bool" Usage="iVsaEngine.Compile " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Vsa</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="740c3-106">Powoduje, że aparat skryptu do kompilowania istniejący stan źródła.</span><span class="sxs-lookup"><span data-stu-id="740c3-106">Causes the script engine to compile the existing source state.</span></span></summary>
        <returns><span data-ttu-id="740c3-107"><see langword="true" /> na pomyślnej kompilacji, który wskazuje, że <see cref="M:Microsoft.Vsa.IVsaEngine.Run" /> metoda może być wywoływana na nowo skompilowanym zestawie.</span><span class="sxs-lookup"><span data-stu-id="740c3-107"><see langword="true" /> on successful compilation, indicating that the <see cref="M:Microsoft.Vsa.IVsaEngine.Run" /> method can be called on the newly compiled assembly.</span></span> <span data-ttu-id="740c3-108"><see langword="false" /> Jeśli kompilacja nie powiodła się.</span><span class="sxs-lookup"><span data-stu-id="740c3-108"><see langword="false" /> if the compilation failed.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Evidence">
      <MemberSignature Language="C#" Value="public System.Security.Policy.Evidence Evidence { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Policy.Evidence Evidence" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Vsa.IVsaEngine.Evidence" />
      <MemberSignature Language="VB.NET" Value="Public Property Evidence As Evidence" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Policy::Evidence ^ Evidence { System::Security::Policy::Evidence ^ get(); void set(System::Security::Policy::Evidence ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Evidence : System.Security.Policy.Evidence with get, set" Usage="Microsoft.Vsa.IVsaEngine.Evidence" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Vsa</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Policy.Evidence</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="740c3-109">Dostarcza dowodów na potrzeby weryfikacji tożsamości bieżący obiekt.</span><span class="sxs-lookup"><span data-stu-id="740c3-109">Provides evidence for the purpose of validating the current object's identity.</span></span></summary>
        <value><span data-ttu-id="740c3-110">Odwołanie do obiektu dowodów.</span><span class="sxs-lookup"><span data-stu-id="740c3-110">A reference to an Evidence object.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GenerateDebugInfo">
      <MemberSignature Language="C#" Value="public bool GenerateDebugInfo { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool GenerateDebugInfo" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Vsa.IVsaEngine.GenerateDebugInfo" />
      <MemberSignature Language="VB.NET" Value="Public Property GenerateDebugInfo As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool GenerateDebugInfo { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.GenerateDebugInfo : bool with get, set" Usage="Microsoft.Vsa.IVsaEngine.GenerateDebugInfo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Vsa</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="740c3-111">Pobiera lub ustawia wartość logiczną, która wskazuje, czy aparat skryptów tworzy informacji o debugowaniu podczas <see cref="M:Microsoft.Vsa.IVsaEngine.Compile" /> metoda jest wywoływana.</span><span class="sxs-lookup"><span data-stu-id="740c3-111">Gets or sets a Boolean value that signifies whether the script engine produces debug information when the <see cref="M:Microsoft.Vsa.IVsaEngine.Compile" /> method is called.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetOption">
      <MemberSignature Language="C#" Value="public object GetOption (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetOption(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Vsa.IVsaEngine.GetOption(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetOption (name As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetOption(System::String ^ name);" />
      <MemberSignature Language="F#" Value="abstract member GetOption : string -&gt; obj" Usage="iVsaEngine.GetOption name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Vsa</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="740c3-112">Nazwa opcji, aby uzyskać.</span><span class="sxs-lookup"><span data-stu-id="740c3-112">The name of the option to get.</span></span></param>
        <summary><span data-ttu-id="740c3-113">Pobiera opcje specyficzne dla implementacji dla aparatu bloku skryptu.</span><span class="sxs-lookup"><span data-stu-id="740c3-113">Gets implementation-specific options for a script engine.</span></span></summary>
        <returns><span data-ttu-id="740c3-114">Wartość opcji.</span><span class="sxs-lookup"><span data-stu-id="740c3-114">The value of the option.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InitNew">
      <MemberSignature Language="C#" Value="public void InitNew ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InitNew() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Vsa.IVsaEngine.InitNew" />
      <MemberSignature Language="VB.NET" Value="Public Sub InitNew ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void InitNew();" />
      <MemberSignature Language="F#" Value="abstract member InitNew : unit -&gt; unit" Usage="iVsaEngine.InitNew " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Vsa</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="740c3-115">Zapewnia powiadomienie o ukończeniu fazy inicjowania i że aparat skryptów jest gotowy do dodawania <see cref="T:Microsoft.Vsa.IVsaItem" /> obiektów.</span><span class="sxs-lookup"><span data-stu-id="740c3-115">Provides a notification that the initialization phase is complete and that the script engine is prepared for the addition of <see cref="T:Microsoft.Vsa.IVsaItem" /> objects.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsCompiled">
      <MemberSignature Language="C#" Value="public bool IsCompiled { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsCompiled" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Vsa.IVsaEngine.IsCompiled" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsCompiled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsCompiled { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsCompiled : bool" Usage="Microsoft.Vsa.IVsaEngine.IsCompiled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Vsa</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="740c3-116">Pobiera wartość wskazującą, czy aparat skryptu jest ustawiona do uzyskania informacji debugowania podczas <see cref="M:Microsoft.Vsa.IVsaEngine.Compile" /> metoda jest wywoływana.</span><span class="sxs-lookup"><span data-stu-id="740c3-116">Gets a value that indicates whether the script engine is set to produce debug information when the <see cref="M:Microsoft.Vsa.IVsaEngine.Compile" /> method is called.</span></span></summary>
        <value><span data-ttu-id="740c3-117"><see langword="true" /> Jeśli aparat skryptów jest ustawiony do uzyskania informacji debugowania podczas <see cref="M:Microsoft.Vsa.IVsaEngine.Compile" /> metoda jest wywołana; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="740c3-117"><see langword="true" /> if the script engine is set to produce debug information when the <see cref="M:Microsoft.Vsa.IVsaEngine.Compile" /> method is called; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDirty">
      <MemberSignature Language="C#" Value="public bool IsDirty { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDirty" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Vsa.IVsaEngine.IsDirty" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsDirty As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsDirty { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsDirty : bool" Usage="Microsoft.Vsa.IVsaEngine.IsDirty" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Vsa</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="740c3-118">Pobiera wartość wskazującą, czy aparat skryptu stan źródłowy zmienił się od czasu ostatniej operacji zapisu, ponieważ aparat skryptu pierwotnie został załadowany.</span><span class="sxs-lookup"><span data-stu-id="740c3-118">Gets a value that indicates whether the script engine's source state has changed since the last save operation, or since the script engine was originally loaded.</span></span></summary>
        <value><span data-ttu-id="740c3-119"><see langword="true" /> Jeśli aparat skryptów jest oznaczona jako zmodyfikowana (to znaczy, "zakłóconych"); w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="740c3-119"><see langword="true" /> if the script engine is marked as modified (that is, "dirty"); otherwise, <see langword="false" />.</span></span> <span data-ttu-id="740c3-120">Wartość domyślna to <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="740c3-120">The default value is <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsRunning">
      <MemberSignature Language="C#" Value="public bool IsRunning { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsRunning" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Vsa.IVsaEngine.IsRunning" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsRunning As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsRunning { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsRunning : bool" Usage="Microsoft.Vsa.IVsaEngine.IsRunning" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Vsa</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="740c3-121">Pobiera wartość wskazującą, czy aparat skryptów jest obecnie w trybie uruchamiania.</span><span class="sxs-lookup"><span data-stu-id="740c3-121">Gets a value that indicates whether the script engine is currently in run mode.</span></span></summary>
        <value><span data-ttu-id="740c3-122"><see langword="true" /> Jeśli aparat skryptów jest uruchomiony; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="740c3-122"><see langword="true" /> if the script engine is running; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="740c3-123">Wartość domyślna tej właściwości to <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="740c3-123">The default value for this property is <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsValidIdentifier">
      <MemberSignature Language="C#" Value="public bool IsValidIdentifier (string identifier);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsValidIdentifier(string identifier) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Vsa.IVsaEngine.IsValidIdentifier(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsValidIdentifier (identifier As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsValidIdentifier(System::String ^ identifier);" />
      <MemberSignature Language="F#" Value="abstract member IsValidIdentifier : string -&gt; bool" Usage="iVsaEngine.IsValidIdentifier identifier" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Vsa</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="identifier" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="identifier"><span data-ttu-id="740c3-124">Wartość ciągu podana jako identyfikator.</span><span class="sxs-lookup"><span data-stu-id="740c3-124">A string value provided as identifier.</span></span></param>
        <summary><span data-ttu-id="740c3-125">Sprawdza, czy podany identyfikator jest nieprawidłowy dla aparatu skryptów.</span><span class="sxs-lookup"><span data-stu-id="740c3-125">Checks whether the supplied identifier is valid for the script engine.</span></span></summary>
        <returns><span data-ttu-id="740c3-126"><see langword="true" /> Jeśli identyfikator jest nieprawidłowy; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="740c3-126"><see langword="true" /> if the identifier is valid; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Items">
      <MemberSignature Language="C#" Value="public Microsoft.Vsa.IVsaItems Items { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Vsa.IVsaItems Items" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Vsa.IVsaEngine.Items" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Items As IVsaItems" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Vsa::IVsaItems ^ Items { Microsoft::Vsa::IVsaItems ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Items : Microsoft.Vsa.IVsaItems" Usage="Microsoft.Vsa.IVsaEngine.Items" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Vsa</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Vsa.IVsaItems</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="740c3-127">Pobiera <see cref="T:Microsoft.Vsa.IVsaItems" /> zbiór <see cref="T:Microsoft.Vsa.IVsaItem" /> obiektów, które reprezentują wszystkie elementy dodane do aparatu skryptów przy użyciu metody createitem —, w tym elementów kodu, przywoływanie elementów i globalne elementów.</span><span class="sxs-lookup"><span data-stu-id="740c3-127">Gets the <see cref="T:Microsoft.Vsa.IVsaItems" /> collection of <see cref="T:Microsoft.Vsa.IVsaItem" /> objects, which represent all items added to the script engine using the CreateItem method, including code items, reference items, and global items.</span></span></summary>
        <value><span data-ttu-id="740c3-128">Kolekcja wszystkie elementy dodane do aparatu skryptów przy użyciu metody createitem —, w tym elementów kodu, przywoływanie elementów i globalne elementów.</span><span class="sxs-lookup"><span data-stu-id="740c3-128">A collection of all items added to the script engine using the CreateItem method, including code items, reference items, and global items.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Language">
      <MemberSignature Language="C#" Value="public string Language { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Language" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Vsa.IVsaEngine.Language" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Language As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Language { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Language : string" Usage="Microsoft.Vsa.IVsaEngine.Language" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Vsa</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="740c3-129">Pobiera nazwę niezlokalizowana obsługiwane przez aparat skryptów języka programowania.</span><span class="sxs-lookup"><span data-stu-id="740c3-129">Gets the non-localized name of the programming language supported by the script engine.</span></span></summary>
        <value><span data-ttu-id="740c3-130">Nazwa język angielski, obsługiwane przez aparat skryptów języka programowania.</span><span class="sxs-lookup"><span data-stu-id="740c3-130">The English-language name of the programming language supported by the script engine.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LCID">
      <MemberSignature Language="C#" Value="public int LCID { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 LCID" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Vsa.IVsaEngine.LCID" />
      <MemberSignature Language="VB.NET" Value="Public Property LCID As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int LCID { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.LCID : int with get, set" Usage="Microsoft.Vsa.IVsaEngine.LCID" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Vsa</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="740c3-131">Pobiera lub ustawia geograficznych ustawień regionalnych i językowych w jakiej komunikaty o wyjątkach raportu.</span><span class="sxs-lookup"><span data-stu-id="740c3-131">Gets or sets the geographical locale and language in which to report exception messages.</span></span></summary>
        <value><span data-ttu-id="740c3-132">Wartość całkowitą reprezentującą ustawień regionalnych, w którym wyjątek komunikaty są podawane.</span><span class="sxs-lookup"><span data-stu-id="740c3-132">An integer value representing the locale in which exception messages are to be reported.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadSourceState">
      <MemberSignature Language="C#" Value="public void LoadSourceState (Microsoft.Vsa.IVsaPersistSite site);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void LoadSourceState(class Microsoft.Vsa.IVsaPersistSite site) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Vsa.IVsaEngine.LoadSourceState(Microsoft.Vsa.IVsaPersistSite)" />
      <MemberSignature Language="VB.NET" Value="Public Sub LoadSourceState (site As IVsaPersistSite)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void LoadSourceState(Microsoft::Vsa::IVsaPersistSite ^ site);" />
      <MemberSignature Language="F#" Value="abstract member LoadSourceState : Microsoft.Vsa.IVsaPersistSite -&gt; unit" Usage="iVsaEngine.LoadSourceState site" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Vsa</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="site" Type="Microsoft.Vsa.IVsaPersistSite" />
      </Parameters>
      <Docs>
        <param name="site"><span data-ttu-id="740c3-133">Lokacja, z której jest ładowany elementy określonego źródła.</span><span class="sxs-lookup"><span data-stu-id="740c3-133">The site from which the specified source items is loaded.</span></span></param>
        <summary><span data-ttu-id="740c3-134">Określa, że aparat skryptu można załadować źródła elementów z ich punktu trwałości, określony przez obiekt dostarczone do hosta, który implementuje <see cref="T:Microsoft.Vsa.IVsaPersistSite" /> interfejsu.</span><span class="sxs-lookup"><span data-stu-id="740c3-134">Directs the script engine to load source items from their point of persistence, as specified by the host-provided object that implements the <see cref="T:Microsoft.Vsa.IVsaPersistSite" /> interface.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Vsa.IVsaEngine.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Name : string with get, set" Usage="Microsoft.Vsa.IVsaEngine.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Vsa</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="740c3-135">Pobiera lub ustawia nazwę wyświetlaną aparat skryptu, który jest zazwyczaj używany do identyfikowania aparatów skryptów poszczególnych użytkowników w środowisku hostowanym.</span><span class="sxs-lookup"><span data-stu-id="740c3-135">Gets or sets the display name of the script engine that is used primarily for identifying individual script engines to users in a hosted environment.</span></span></summary>
        <value><span data-ttu-id="740c3-136">Wartość właściwości Name aparat skryptu, który może być pustym ciągiem.</span><span class="sxs-lookup"><span data-stu-id="740c3-136">The value of the script engine's Name property, which may be the empty string.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public void Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Reset() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Vsa.IVsaEngine.Reset" />
      <MemberSignature Language="VB.NET" Value="Public Sub Reset ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Reset();" />
      <MemberSignature Language="F#" Value="abstract member Reset : unit -&gt; unit" Usage="iVsaEngine.Reset " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Vsa</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="740c3-137">Usuwa aparat skryptu z uruchomiona i rozłączeniu połączenia procedury obsługi zdarzeń powiązanych automatycznie.</span><span class="sxs-lookup"><span data-stu-id="740c3-137">Removes the script engine from the running state and disconnects automatically bound event handlers.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RevokeCache">
      <MemberSignature Language="C#" Value="public void RevokeCache ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RevokeCache() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Vsa.IVsaEngine.RevokeCache" />
      <MemberSignature Language="VB.NET" Value="Public Sub RevokeCache ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RevokeCache();" />
      <MemberSignature Language="F#" Value="abstract member RevokeCache : unit -&gt; unit" Usage="iVsaEngine.RevokeCache " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Vsa</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="740c3-138">Unieważnia pamięci podręcznej zestawu dla aparatem obsługi skryptów, określony przez jego moniker elementu głównego.</span><span class="sxs-lookup"><span data-stu-id="740c3-138">Invalidates the cached assembly for a script engine, as specified by its root moniker.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RootMoniker">
      <MemberSignature Language="C#" Value="public string RootMoniker { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string RootMoniker" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Vsa.IVsaEngine.RootMoniker" />
      <MemberSignature Language="VB.NET" Value="Public Property RootMoniker As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ RootMoniker { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.RootMoniker : string with get, set" Usage="Microsoft.Vsa.IVsaEngine.RootMoniker" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Vsa</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="740c3-139">Pobiera lub ustawia aparat skryptów krótkiej nazwy z katalogu głównego.</span><span class="sxs-lookup"><span data-stu-id="740c3-139">Gets or sets a script engine's root moniker.</span></span></summary>
        <value><span data-ttu-id="740c3-140">Bieżąca wartość właściwości RootMoniker.</span><span class="sxs-lookup"><span data-stu-id="740c3-140">The current value of the RootMoniker property.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RootNamespace">
      <MemberSignature Language="C#" Value="public string RootNamespace { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string RootNamespace" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Vsa.IVsaEngine.RootNamespace" />
      <MemberSignature Language="VB.NET" Value="Public Property RootNamespace As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ RootNamespace { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.RootNamespace : string with get, set" Usage="Microsoft.Vsa.IVsaEngine.RootNamespace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Vsa</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="740c3-141">Pobiera lub ustawia głównej przestrzeni nazw, używanego przez aparat skryptu.</span><span class="sxs-lookup"><span data-stu-id="740c3-141">Gets or sets the root namespace used by the script engine.</span></span></summary>
        <value><span data-ttu-id="740c3-142">Wartość ciągu w głównej przestrzeni nazw.</span><span class="sxs-lookup"><span data-stu-id="740c3-142">The string value of the root namespace.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Run">
      <MemberSignature Language="C#" Value="public void Run ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Run() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Vsa.IVsaEngine.Run" />
      <MemberSignature Language="VB.NET" Value="Public Sub Run ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Run();" />
      <MemberSignature Language="F#" Value="abstract member Run : unit -&gt; unit" Usage="iVsaEngine.Run " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Vsa</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="740c3-143">Inicjuje wykonywanie kodu skompilowanego aparat skryptów i wiąże wszystkich procedur obsługi zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="740c3-143">Initiates execution of compiled code in the script engine and binds all event handlers.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveCompiledState">
      <MemberSignature Language="C#" Value="public void SaveCompiledState (out byte[] pe, out byte[] pdb);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SaveCompiledState([out] unsigned int8[]&amp; pe, [out] unsigned int8[]&amp; pdb) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Vsa.IVsaEngine.SaveCompiledState(System.Byte[]@,System.Byte[]@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SaveCompiledState (ByRef pe As Byte(), ByRef pdb As Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SaveCompiledState([Runtime::InteropServices::Out] cli::array &lt;System::Byte&gt; ^ % pe, [Runtime::InteropServices::Out] cli::array &lt;System::Byte&gt; ^ % pdb);" />
      <MemberSignature Language="F#" Value="abstract member SaveCompiledState :  *  -&gt; unit" Usage="iVsaEngine.SaveCompiledState (pe, pdb)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Vsa</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pe" Type="System.Byte[]" RefType="out" />
        <Parameter Name="pdb" Type="System.Byte[]" RefType="out" />
      </Parameters>
      <Docs>
        <param name="pe"><span data-ttu-id="740c3-144">Skompilowanej aparat skryptu.</span><span class="sxs-lookup"><span data-stu-id="740c3-144">The compiled state of the script engine.</span></span></param>
        <param name="pdb"><span data-ttu-id="740c3-145">Określa informacje debugowania w nim zawarte. Plik PDB odpowiadający PE (przenośny plik wykonywalny).</span><span class="sxs-lookup"><span data-stu-id="740c3-145">Specifies debugging information contained in the .PDB file corresponding to the PE (portable executable).</span></span></param>
        <summary><span data-ttu-id="740c3-146">Zapisuje stan kompilacji aparatu skryptów; Opcjonalnie można także zapisuje informacje o debugowaniu.</span><span class="sxs-lookup"><span data-stu-id="740c3-146">Saves the compiled state of the script engine; optionally, it also saves debugging information.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveSourceState">
      <MemberSignature Language="C#" Value="public void SaveSourceState (Microsoft.Vsa.IVsaPersistSite site);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SaveSourceState(class Microsoft.Vsa.IVsaPersistSite site) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Vsa.IVsaEngine.SaveSourceState(Microsoft.Vsa.IVsaPersistSite)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SaveSourceState (site As IVsaPersistSite)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SaveSourceState(Microsoft::Vsa::IVsaPersistSite ^ site);" />
      <MemberSignature Language="F#" Value="abstract member SaveSourceState : Microsoft.Vsa.IVsaPersistSite -&gt; unit" Usage="iVsaEngine.SaveSourceState site" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Vsa</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="site" Type="Microsoft.Vsa.IVsaPersistSite" />
      </Parameters>
      <Docs>
        <param name="site"><span data-ttu-id="740c3-147">Witryna ustanowione przez <see cref="T:Microsoft.Vsa.IVsaPersistSite" /> interfejsu, której źródłem jest zapisany stan.</span><span class="sxs-lookup"><span data-stu-id="740c3-147">The site established by the <see cref="T:Microsoft.Vsa.IVsaPersistSite" /> interface to which source state is saved.</span></span></param>
        <summary><span data-ttu-id="740c3-148">Określa, że aparat skryptu do utrwalenia stanu źródła do określonego <see cref="T:Microsoft.Vsa.IVsaPersistSite" /> obiektu.</span><span class="sxs-lookup"><span data-stu-id="740c3-148">Directs the script engine to persist its source state to the specified <see cref="T:Microsoft.Vsa.IVsaPersistSite" /> object.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetOption">
      <MemberSignature Language="C#" Value="public void SetOption (string name, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetOption(string name, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Vsa.IVsaEngine.SetOption(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetOption (name As String, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetOption(System::String ^ name, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member SetOption : string * obj -&gt; unit" Usage="iVsaEngine.SetOption (name, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Vsa</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="740c3-149">Nazwa opcji do ustawienia.</span><span class="sxs-lookup"><span data-stu-id="740c3-149">The name of the option to set.</span></span></param>
        <param name="value"><span data-ttu-id="740c3-150">Wartość opcji jest ustawiona.</span><span class="sxs-lookup"><span data-stu-id="740c3-150">The value for the option being set.</span></span></param>
        <summary><span data-ttu-id="740c3-151">Ustawia opcje specyficzne dla implementacji dla aparatu bloku skryptu.</span><span class="sxs-lookup"><span data-stu-id="740c3-151">Sets implementation-specific options for a script engine.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Site">
      <MemberSignature Language="C#" Value="public Microsoft.Vsa.IVsaSite Site { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Vsa.IVsaSite Site" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Vsa.IVsaEngine.Site" />
      <MemberSignature Language="VB.NET" Value="Public Property Site As IVsaSite" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Vsa::IVsaSite ^ Site { Microsoft::Vsa::IVsaSite ^ get(); void set(Microsoft::Vsa::IVsaSite ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Site : Microsoft.Vsa.IVsaSite with get, set" Usage="Microsoft.Vsa.IVsaEngine.Site" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Vsa</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Vsa.IVsaSite</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="740c3-152">Pobiera lub ustawia hosta zaimplementowane <see cref="T:Microsoft.Vsa.IVsaSite" /> obiekt, który jest używany przez aparat skryptów do komunikowania się z hostem.</span><span class="sxs-lookup"><span data-stu-id="740c3-152">Gets or sets the host-implemented <see cref="T:Microsoft.Vsa.IVsaSite" /> object that is used by the script engine to communicate with the host.</span></span></summary>
        <value><span data-ttu-id="740c3-153">Odwołanie do bieżącego <see cref="T:Microsoft.Vsa.IVsaSite" /> obiektu.</span><span class="sxs-lookup"><span data-stu-id="740c3-153">A reference to the current <see cref="T:Microsoft.Vsa.IVsaSite" /> object.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Version">
      <MemberSignature Language="C#" Value="public string Version { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Version" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Vsa.IVsaEngine.Version" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Version As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Version { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Version : string" Usage="Microsoft.Vsa.IVsaEngine.Version" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Vsa</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="740c3-154">Pobiera bieżącą wersję kompilatora języka, obsługiwane przez aparat skryptów w postaci Major.Minor.Revision.Build.</span><span class="sxs-lookup"><span data-stu-id="740c3-154">Gets the current version of the language compiler supported by the script engine, in the form Major.Minor.Revision.Build.</span></span></summary>
        <value><span data-ttu-id="740c3-155">Wartość bieżącą wersję, w formacie Major.Minor.Revision.Build ciągu.</span><span class="sxs-lookup"><span data-stu-id="740c3-155">String value of the current version, in the format Major.Minor.Revision.Build.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
