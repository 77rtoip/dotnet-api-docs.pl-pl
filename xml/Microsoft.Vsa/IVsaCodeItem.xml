<Type Name="IVsaCodeItem" FullName="Microsoft.Vsa.IVsaCodeItem">
  <Metadata><Meta Name="ms.openlocfilehash" Value="3c91aa7edb11191c98cf33027bcf6f18b2093fb1" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69315527" /></Metadata><TypeSignature Language="C#" Value="public interface IVsaCodeItem : Microsoft.Vsa.IVsaItem" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IVsaCodeItem implements class Microsoft.Vsa.IVsaItem" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Vsa.IVsaCodeItem" />
  <TypeSignature Language="VB.NET" Value="Public Interface IVsaCodeItem&#xA;Implements IVsaItem" />
  <TypeSignature Language="C++ CLI" Value="public interface class IVsaCodeItem : Microsoft::Vsa::IVsaItem" />
  <TypeSignature Language="F#" Value="type IVsaCodeItem = interface&#xA;    interface IVsaItem" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Vsa</AssemblyName>
    <AssemblyVersion>7.0.5000.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.Vsa.IVsaItem</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
      <AttributeName>System.Obsolete("Use of this type is not recommended because it is being deprecated in Visual Studio 2005; there will be no replacement for this feature. Please see the ICodeCompiler documentation for additional help.")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("E0C0FFE7-7eea-4ee5-b7e4-0080c7eb0b74")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.InterfaceType(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Reprezentuje element kodu do skompilowania przez aparat skryptu.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[

## Remarks  
Określony element kodu może zawierać klasy, moduły lub inny tekst źródłowy.

Żadne uprawnienia nie są wymagane do wywołania żadnych elementów członkowskich interfejsu IVsaCodeItem.

Aparat skryptów implementuje ten interfejs, aby dodać elementy kodu.

]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AddEventSource">
      <MemberSignature Language="C#" Value="public void AddEventSource (string eventSourceName, string eventSourceType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddEventSource(string eventSourceName, string eventSourceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Vsa.IVsaCodeItem.AddEventSource(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddEventSource (eventSourceName As String, eventSourceType As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddEventSource(System::String ^ eventSourceName, System::String ^ eventSourceType);" />
      <MemberSignature Language="F#" Value="abstract member AddEventSource : string * string -&gt; unit" Usage="iVsaCodeItem.AddEventSource (eventSourceName, eventSourceType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Vsa</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventSourceName" Type="System.String" />
        <Parameter Name="eventSourceType" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventSourceName">Nazwa programowa źródła zdarzeń.</param>
        <param name="eventSourceType">Nazwa typu źródła zdarzenia.</param>
        <summary>Dodaje Źródło zdarzenia do elementu kodu. Element kodu używa źródła zdarzenia do podłączania zdarzenia do nazwanego źródła zdarzeń przez wywołanie metody IVsaSite. GetEventSourceInstance, która jest implementowana przez hosta.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  
Aparat skryptów używa informacji dostarczonych przez metodę AddEventSource, aby podłączyć zdarzenia do nazwanego źródła zdarzeń. Uzyskuje źródła zdarzeń przez wywołanie metody IVsaSite. GetEventSourceInstance, która jest implementowana przez hosta. Metoda AddEventSource tworzy klasę, która obsługuje zdarzenia wywoływane przez obiekt dostarczony przez hosta.

> [!NOTE]
> Aparat skryptów JScript .NET nie obsługuje tej metody. W przypadkach, gdy aparat .NET w języku JScript musi podłączyć zdarzenie, należy to zrobić przy użyciu elementu globalnego. Zamiast źródeł zdarzeń, aparat .NET w języku JScript używa typów elementów AppGlobal. Aby uzyskać więcej informacji, zobacz VsaItemType.


W elemencie kodu można uzyskać dostęp do obiektu źródłowego zdarzenia według nazwy i, po uzyskaniu dostępu, można napisać procedury obsługi zdarzeń względem obiektu. Typ źródła zdarzenia jest przesyłany jako ciąg, a nie jako obiekt typu, aby ułatwić implementowanie źródeł zdarzeń przez niezarządzane hosty.

Kompilator używa parametru eventSourcetype, aby powiązać metody dostarczone przez typ. Jest również używany później, gdy aparat skryptu wywołuje metodę IVsaSite. GetEventSourceInstance, aby zażądać wystąpienia obiektu typu.

Aby uzyskać więcej informacji na temat mechanizmów podłączania zdarzeń dla aparatu skryptów, zobacz IVsaSite. GetEventSourceInstance.

]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AppendSourceText">
      <MemberSignature Language="C#" Value="public void AppendSourceText (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AppendSourceText(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Vsa.IVsaCodeItem.AppendSourceText(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AppendSourceText (text As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AppendSourceText(System::String ^ text);" />
      <MemberSignature Language="F#" Value="abstract member AppendSourceText : string -&gt; unit" Usage="iVsaCodeItem.AppendSourceText text" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Vsa</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">Tekst, który ma być dołączany do elementu kodu.</param>
        <summary>Dołącza określony tekst na końcu elementu kodu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  
Dołączony tekst źródłowy nie jest objęty walidacją. Z tego powodu błędy, jeśli istnieją, będą miały powierzchnię na następnym wywołaniu metody IVsaEngine. compile.

Dołączony tekst źródłowy jest dostarczany jako pojedynczy ciąg. Jeśli ciąg wymaga formatowania, należy podać to samodzielnie.

]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CodeDOM">
      <MemberSignature Language="C#" Value="public System.CodeDom.CodeObject CodeDOM { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.CodeDom.CodeObject CodeDOM" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Vsa.IVsaCodeItem.CodeDOM" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CodeDOM As CodeObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::CodeDom::CodeObject ^ CodeDOM { System::CodeDom::CodeObject ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CodeDOM : System.CodeDom.CodeObject" Usage="Microsoft.Vsa.IVsaCodeItem.CodeDOM" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Vsa</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeObject</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera model obiektu dokumentu kodu (CodeDOM) reprezentowany w elemencie kodu.</summary>
        <value>CodeDOM dla elementu kodu.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  
Właściwość CodeDOM jest zazwyczaj generowana jako część kroku kompilacji aparatu skryptu, więc nie jest dostępna do momentu wywołania metody IVsaEngine. compile. Niektóre implementacje atrybutu VSA mogą być w stanie zapewnić dynamiczny CodeDOM, bez konieczności jawnego kroku kompilacji, ale hosty nie mogą polegać na tym zachowaniu. Niektóre aparaty skryptów, na przykład aparat skryptów JScript .NET, nie obsługują tego zachowania.

]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveEventSource">
      <MemberSignature Language="C#" Value="public void RemoveEventSource (string eventSourceName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveEventSource(string eventSourceName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Vsa.IVsaCodeItem.RemoveEventSource(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveEventSource (eventSourceName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveEventSource(System::String ^ eventSourceName);" />
      <MemberSignature Language="F#" Value="abstract member RemoveEventSource : string -&gt; unit" Usage="iVsaCodeItem.RemoveEventSource eventSourceName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Vsa</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventSourceName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventSourceName">Nazwa programowa źródła zdarzeń do usunięcia.</param>
        <summary>Usuwa określone źródło zdarzenia z elementu kodu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  
Usunięcie źródła zdarzenia nie powoduje usunięcia źródłowej procedury obsługi zdarzeń ze źródłowego tekstu. Zamiast tego zdarzenia nie zgłaszają już powiadomień do programu obsługi zdarzeń. W związku z tym, po usunięciu źródła zdarzenia nie będzie można znaleźć błędu kompilatora, ale pozostawić podstawową funkcję w kodzie źródłowym.

]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SourceText">
      <MemberSignature Language="C#" Value="public string SourceText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SourceText" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Vsa.IVsaCodeItem.SourceText" />
      <MemberSignature Language="VB.NET" Value="Public Property SourceText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SourceText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SourceText : string with get, set" Usage="Microsoft.Vsa.IVsaCodeItem.SourceText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Vsa</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ustawia lub pobiera tekst określonego elementu kodu, w tym automatycznie wygenerowany kod, jeśli istnieje.</summary>
        <value>Tekst źródłowy elementu kodu.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  
Po ustawieniu tej właściwości tekst nie jest poddawany walidacji. Z tego powodu błędy, jeśli istnieją, będą miały powierzchnię na następnym wywołaniu metody IVsaEngine. compile.

Właściwość SourceText zwraca tekst źródłowy w jednym dużym ciągu, włącznie z formatowaniem znaków, takich jak znaki powrotu karetki.

Aby uzyskać tę właściwość, aparat nie może być zamknięty. Aby ustawić tę właściwość, aparat nie może być zamknięty i aparat nie może być uruchomiony.

]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
