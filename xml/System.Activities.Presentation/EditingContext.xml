<Type Name="EditingContext" FullName="System.Activities.Presentation.EditingContext">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="ebd14c994b4f61ee9fd11e673b838afb780c7dcd" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30436440" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class EditingContext : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit EditingContext extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Activities.Presentation.EditingContext" />
  <TypeSignature Language="VB.NET" Value="Public Class EditingContext&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class EditingContext : IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Activities.Presentation</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Zawiera informacje o stanie kontekstowych dla projektanta, takie jak <see cref="T:System.Activities.Presentation.WorkflowDesigner" />. W tym informacje o stanie stałe, takich jak lista usług uruchomionych w projektancie. Obejmuje on też stan przejściowy, składające się z elementów kontekstu, w tym zestawie aktualnie wybranych obiektów, a także edycji narzędzie używane do modyfikowania obiektów na powierzchni projektu.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Activities.Presentation.EditingContext> Reprezentuje granicy komunikacji współużytkowanych hostingu aplikacji i [!INCLUDE[wfd1](~/includes/wfd1-md.md)]. <xref:System.Activities.Presentation.EditingContext> Zostało zaimplementowane jako konkretną klasę łatwość użycia. Zastąpienie <xref:System.Activities.Presentation.EditingContext.CreateServiceManager%2A> i <xref:System.Activities.Presentation.EditingContext.CreateContextItemManager%2A> używać dostosowanego menedżerów pochodną <xref:System.Activities.Presentation.ServiceManager> i <xref:System.Activities.Presentation.ContextItemManager>.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EditingContext ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.EditingContext.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EditingContext();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Activities.Presentation.EditingContext" /> klasy.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateContextItemManager">
      <MemberSignature Language="C#" Value="protected virtual System.Activities.Presentation.ContextItemManager CreateContextItemManager ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Activities.Presentation.ContextItemManager CreateContextItemManager() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.EditingContext.CreateContextItemManager" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateContextItemManager () As ContextItemManager" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Activities::Presentation::ContextItemManager ^ CreateContextItemManager();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.Presentation.ContextItemManager</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Tworzy wystąpienie kontekstu Menedżera elementu, który jest zwracany przez <see cref="P:System.Activities.Presentation.EditingContext.Items" /> właściwości.</summary>
        <returns>
          <see cref="T:System.Activites.Design.ContextItemManager" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Domyślna implementacja tworzy <xref:System.Activities.Presentation.ContextItemManager> czy obsługuje opóźnioną aktywacją menedżerów Edytor projektu za pomocą deklaracji <xref:System.Activities.Presentation.SubscribeContextCallback> atrybutu Menedżer Edytor projektowania.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateServiceManager">
      <MemberSignature Language="C#" Value="protected virtual System.Activities.Presentation.ServiceManager CreateServiceManager ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Activities.Presentation.ServiceManager CreateServiceManager() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.EditingContext.CreateServiceManager" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateServiceManager () As ServiceManager" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Activities::Presentation::ServiceManager ^ CreateServiceManager();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.Presentation.ServiceManager</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Tworzy wystąpienie programu service manager mają być zwracane przez <see cref="P:System.Activities.Presentation.EditingContext.Services" /> właściwości.</summary>
        <returns>A <see cref="T:System.Activities.Presentation.ServiceManager" /> obiektu.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Domyślna implementacja tworzy <xref:System.Activities.Presentation.ServiceManager> czy obsługuje opóźnioną aktywacją menedżerów Edytor projektu za pomocą deklaracji <xref:System.Activities.Presentation.SubscribeContextCallback> atrybutu Menedżer Edytor projektowania.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Natychmiast zwalnia zasoby niezarządzane używane przez obiekt.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.EditingContext.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Natychmiast zwalnia zasoby niezarządzane używane przez obiekt.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.EditingContext.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <see langword="true" /> Jeśli ten obiekt jest usuwany z; <see langword="false" /> Jeśli obiekt jest zakończony.</param>
        <summary>Natychmiast zwalnia zasoby niezarządzane używane przez bieżące <see cref="T:System.Activities.Presentation.EditingContext" /> obiektu.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Disposing">
      <MemberSignature Language="C#" Value="public event EventHandler Disposing;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Disposing" />
      <MemberSignature Language="DocId" Value="E:System.Activities.Presentation.EditingContext.Disposing" />
      <MemberSignature Language="VB.NET" Value="Public Event Disposing As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Disposing;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, gdy <see cref="M:System.IDisposable.Dispose" /> metoda jest wywoływana lub gdy <see cref="T:System.Activities.Presentation.EditingContext" /> obiekt został sfinalizowany i zebrane przez moduł zbierający elementy bezużyteczne programu Microsoft .NET środowisko uruchomieniowe języka wspólnego.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Items">
      <MemberSignature Language="C#" Value="public System.Activities.Presentation.ContextItemManager Items { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Activities.Presentation.ContextItemManager Items" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.EditingContext.Items" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Items As ContextItemManager" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Activities::Presentation::ContextItemManager ^ Items { System::Activities::Presentation::ContextItemManager ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.Presentation.ContextItemManager</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Zwraca kolekcję lokalny kontekst elementy przechowywane w bieżącym kontekście edycji.</summary>
        <value>
          <see cref="T:System.Activities.Presentation.ContextItemManager" /> Kolekcja <see cref="T:System.Activities.Presentation.ContextItem" /> obiektów używanych w tym kontekście edytowania.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Activities.Presentation.EditingContext.Items%2A> Kolekcji dotyczy danych, które jest udostępniane między hostem i projektanta.  Te dane udostępnia mechanizm, konieczne jest utworzenie punktu zaczepienia w subskrypcji i powiadomienie o zmianie.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Services">
      <MemberSignature Language="C#" Value="public System.Activities.Presentation.ServiceManager Services { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Activities.Presentation.ServiceManager Services" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.EditingContext.Services" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Services As ServiceManager" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Activities::Presentation::ServiceManager ^ Services { System::Activities::Presentation::ServiceManager ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.Presentation.ServiceManager</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Zwraca programu service manager, używany w bieżącym kontekście edycji.</summary>
        <value>
          <see cref="T:System.Activities.Presentation.ServiceManager" /> Używane w tym kontekście edytowania.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Activities.Presentation.EditingContext.Services%2A> reprezentuje funkcji, która jest dostarczona przez hosta do projektanta do użycia lub używanego przez projektanta, aby udostępnić funkcje wszystkie projektantów w edytorze.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>