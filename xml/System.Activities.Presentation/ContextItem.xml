<Type Name="ContextItem" FullName="System.Activities.Presentation.ContextItem">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="109b5a03f3eba9da73ceb7f3c9ed8a13c729d69f" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30435975" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class ContextItem" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit ContextItem extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Activities.Presentation.ContextItem" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class ContextItem" />
  <TypeSignature Language="C++ CLI" Value="public ref class ContextItem abstract" />
  <AssemblyInfo>
    <AssemblyName>System.Activities.Presentation</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Reprezentuje klasę podstawową, z których wszystkie kontekstu musi pochodzić elementów. Ta klasa jest abstrakcyjna.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Element kontekstu reprezentuje fragment stan przejściowy w projektancie. Kontekst elementy są zarządzane przez <xref:System.Activities.Presentation.ContextItemManager>, który jest częścią <xref:System.Activities.Presentation.EditingContext> zatrudnieni przez <xref:System.Activities.Presentation.WorkflowDesigner> podczas wizualnie modelu przepływu pracy. <xref:System.Activities.Presentation.ContextItemManager> Zwróconego przez <xref:System.Activities.Presentation.EditingContext.Items%2A> właściwość, która zawiera dane, które jest udostępniane między hostem i projektanta.  Te dane udostępnia mechanizm, konieczne jest utworzenie punktu zaczepienia w subskrypcji i powiadomienie o zmianie.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ContextItem ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.ContextItem.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ContextItem();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Activities.Presentation.ContextItem" /> klasy.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemType">
      <MemberSignature Language="C#" Value="public abstract Type ItemType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ItemType" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.ContextItem.ItemType" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property ItemType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property Type ^ ItemType { Type ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Po zaimplementowaniu w klasie pochodnej pobiera typ pochodzi z klasy kontekstu do edycji elementu.</summary>
        <value>Element <see cref="T:System.Type" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 To nie jest zaimplementowana dla podstawy <xref:System.Activities.Presentation.ContextItem> klasy.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnItemChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnItemChanged (System.Activities.Presentation.EditingContext context, System.Activities.Presentation.ContextItem previousItem);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnItemChanged(class System.Activities.Presentation.EditingContext context, class System.Activities.Presentation.ContextItem previousItem) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.ContextItem.OnItemChanged(System.Activities.Presentation.EditingContext,System.Activities.Presentation.ContextItem)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnItemChanged (context As EditingContext, previousItem As ContextItem)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnItemChanged(System::Activities::Presentation::EditingContext ^ context, System::Activities::Presentation::ContextItem ^ previousItem);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Activities.Presentation.EditingContext" />
        <Parameter Name="previousItem" Type="System.Activities.Presentation.ContextItem" />
      </Parameters>
      <Docs>
        <param name="context">
          <see cref="T:System.Activities.Presentation.EditingContext" /> w ramach którego jest zmian.</param>
        <param name="previousItem">Wcześniej active <see cref="T:System.Activities.Presentation.ContextItem" />.</param>
        <summary>Reprezentuje metodę, która jest wywoływana w elemencie kontekstu przed są przechowywane w Menedżerze elementu kontekstu. Poprzedni element w Menedżerze element kontekstu jest przekazywana jako parametr.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ponieważ elementy muszą mieć konstruktory domyślne, jeśli element jest przekazywany w kontekście po raz pierwszy zostanie zbudowana element domyślny.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>