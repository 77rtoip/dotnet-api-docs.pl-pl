<Type Name="WorkflowViewElement" FullName="System.Activities.Presentation.WorkflowViewElement">
  <TypeSignature Language="C#" Value="public class WorkflowViewElement : System.Windows.Controls.ContentControl, System.Activities.Presentation.ICompositeViewEvents" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit WorkflowViewElement extends System.Windows.Controls.ContentControl implements class System.Activities.Presentation.ICompositeViewEvents" />
  <TypeSignature Language="DocId" Value="T:System.Activities.Presentation.WorkflowViewElement" />
  <TypeSignature Language="VB.NET" Value="Public Class WorkflowViewElement&#xA;Inherits ContentControl&#xA;Implements ICompositeViewEvents" />
  <TypeSignature Language="C++ CLI" Value="public ref class WorkflowViewElement : System::Windows::Controls::ContentControl, System::Activities::Presentation::ICompositeViewEvents" />
  <AssemblyInfo>
    <AssemblyName>System.Activities.Presentation</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Controls.ContentControl</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Activities.Presentation.ICompositeViewEvents</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="7d570-101">Określa klasę podstawową dla każdego elementu interfejsu użytkownika, który jest wyświetlany na kanwie projektanta Windows Workflow Foundation i wizualne reprezentujący wystąpienie niepodzielnego elementu, który może być edytowany.</span><span class="sxs-lookup"><span data-stu-id="7d570-101">Specifies the base class for any UI element that appears on the Windows Workflow Foundation designer canvas and that visually represents an instance of an atomic item that can be edited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7d570-102">Przykładowe elementy reprezentowany przez <xref:System.Activities.Presentation.WorkflowViewElement> obejmują <xref:System.Activities.Activity> i <xref:System.Activities.Statements.FlowNode>.</span><span class="sxs-lookup"><span data-stu-id="7d570-102">Examples of items represented by a <xref:System.Activities.Presentation.WorkflowViewElement> include <xref:System.Activities.Activity> and <xref:System.Activities.Statements.FlowNode>.</span></span> <span data-ttu-id="7d570-103">`WorkflowViewElement` udostępnia typowe kontraktu, który projektanta używa do renderowania elementu wizualnego na powierzchnię projektanta i korzystać z niego za pośrednictwem różnych czynności edycyjnych.</span><span class="sxs-lookup"><span data-stu-id="7d570-103">`WorkflowViewElement` provides a common contract that the designer uses to render the visual element onto the designer surface and to interact with it through the various editing actions.</span></span>  
  
 <span data-ttu-id="7d570-104">Jeśli tworzysz projektanta dla <xref:System.Activities.Activity>, należy użyć <xref:System.Activities.Presentation.ActivityDesigner> typ podstawowy.</span><span class="sxs-lookup"><span data-stu-id="7d570-104">If you are building a designer for an <xref:System.Activities.Activity>, you should use the <xref:System.Activities.Presentation.ActivityDesigner> base type.</span></span> <span data-ttu-id="7d570-105">Jeśli istnieją elementy z systemem innym niż działania, które muszą być traktowane jako pierwszej klasie elementów na kanwie projektanta, takich jak element przybornika, który musi być możliwością przeciągania, w obszarze roboczym lub w scenariuszach, kopiowania i wklejania, użyj `WorkflowViewElement` jako klasy podstawowej.</span><span class="sxs-lookup"><span data-stu-id="7d570-105">If there are non-activity elements that need to be treated as first class items on the designer canvas, such as a toolbox item that needs to be draggable throughout the canvas, or for cut-and-paste scenarios, use `WorkflowViewElement` as the base class.</span></span> <span data-ttu-id="7d570-106">Jeśli nie chcesz użyć standardowego działania chrome dla Projektant działań `WorkflowViewElement` aby zapewnić większą elastyczność można użyć jako typu podstawowego.</span><span class="sxs-lookup"><span data-stu-id="7d570-106">If you do not want to use the standard activity chrome for an activity designer, `WorkflowViewElement` should be used as the base type to provide the most flexibility.</span></span>  
  
 <span data-ttu-id="7d570-107">A <xref:System.Activities.Presentation.WorkflowViewElement> reprezentuje <xref:System.Activities.Presentation.Model.ModelItem> w interfejsie użytkownika i zapewnia dostęp do kodu dla elementu modelu i <xref:System.Activities.Presentation.EditingContext> umożliwiająca zmian.</span><span class="sxs-lookup"><span data-stu-id="7d570-107">A <xref:System.Activities.Presentation.WorkflowViewElement> represents a <xref:System.Activities.Presentation.Model.ModelItem> in the UI and provides code access to the model item and an <xref:System.Activities.Presentation.EditingContext> that allows changes to be made.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7d570-108">Przykładowy kod pokazujący sposób tworzenia nowego <xref:System.Activities.Activity> i <xref:System.Activities.Presentation.ActivityDesigner>, a następnie jak kojarzyć je, zobacz przykład w <xref:System.Activities.Presentation.ActivityDesigner> dokumentacji.</span><span class="sxs-lookup"><span data-stu-id="7d570-108">For a code sample showing how to create a new <xref:System.Activities.Activity> and an <xref:System.Activities.Presentation.ActivityDesigner>, and then how to associate them, see the sample in the <xref:System.Activities.Presentation.ActivityDesigner> documentation.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WorkflowViewElement ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.WorkflowViewElement.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WorkflowViewElement();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="7d570-109">Inicjuje nowe wystąpienie klasy <see cref="T:System.Activities.Presentation.WorkflowViewElement" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="7d570-109">Initializes a new instance of the <see cref="T:System.Activities.Presentation.WorkflowViewElement" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7d570-110"><xref:System.Activities.Presentation.WorkflowViewElement.Collapsible%2A> Właściwość jest ustawiona na `false` domyślnie.</span><span class="sxs-lookup"><span data-stu-id="7d570-110">The <xref:System.Activities.Presentation.WorkflowViewElement.Collapsible%2A> property is set to `false` by default.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Collapsible">
      <MemberSignature Language="C#" Value="public bool Collapsible { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Collapsible" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.WorkflowViewElement.Collapsible" />
      <MemberSignature Language="VB.NET" Value="Public Property Collapsible As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Collapsible { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7d570-111">Pobiera lub ustawia wartość wskazującą, czy element może zostać zwinięty.</span><span class="sxs-lookup"><span data-stu-id="7d570-111">Gets or sets a value that indicates whether the element can be collapsed.</span></span></summary>
        <value>
          <span data-ttu-id="7d570-112"><see langword="true" /> Jeśli element może zostać zwinięty; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="7d570-112"><see langword="true" /> if the element can be collapsed; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompositeViews">
      <MemberSignature Language="C#" Value="protected System.Collections.Generic.IList&lt;System.Activities.Presentation.ICompositeView&gt; CompositeViews { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;class System.Activities.Presentation.ICompositeView&gt; CompositeViews" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.WorkflowViewElement.CompositeViews" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property CompositeViews As IList(Of ICompositeView)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Collections::Generic::IList&lt;System::Activities::Presentation::ICompositeView ^&gt; ^ CompositeViews { System::Collections::Generic::IList&lt;System::Activities::Presentation::ICompositeView ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Activities.Presentation.ICompositeView&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7d570-113">Pobiera listę wszystkich widoków złożonego.</span><span class="sxs-lookup"><span data-stu-id="7d570-113">Gets the list of all composite views.</span></span></summary>
        <value><span data-ttu-id="7d570-114">Lista wszystkich widoków złożonego.</span><span class="sxs-lookup"><span data-stu-id="7d570-114">The list of all composite views.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Context">
      <MemberSignature Language="C#" Value="public System.Activities.Presentation.EditingContext Context { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Activities.Presentation.EditingContext Context" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.WorkflowViewElement.Context" />
      <MemberSignature Language="VB.NET" Value="Public Property Context As EditingContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Activities::Presentation::EditingContext ^ Context { System::Activities::Presentation::EditingContext ^ get(); void set(System::Activities::Presentation::EditingContext ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.Presentation.EditingContext</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7d570-115">Pobiera lub ustawia kontekst edycyjny, który jest współużytkowany przez wszystkie elementy zawarte w Projektancie przepływów pracy.</span><span class="sxs-lookup"><span data-stu-id="7d570-115">Gets or sets the editing context that is shared by all elements contained in a workflow designer.</span></span></summary>
        <value><span data-ttu-id="7d570-116"><see cref="T:System.Activities.Presentation.EditingContext" /> Obiektu projektanta przepływów pracy, który zawiera element Widok przepływu pracy.</span><span class="sxs-lookup"><span data-stu-id="7d570-116">The <see cref="T:System.Activities.Presentation.EditingContext" /> object for the workflow designer that contains the workflow view element.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7d570-117"><xref:System.Activities.Presentation.EditingContext> Obiekt jest kolekcja usług wspólne dla wszystkich elementów zawartych w Projektancie i służy do interakcji między hostem a projektanta.</span><span class="sxs-lookup"><span data-stu-id="7d570-117">The <xref:System.Activities.Presentation.EditingContext> object is a collection of services shared between all elements contained in the designer and used to interact between the host and the designer.</span></span> <span data-ttu-id="7d570-118">Usługi są publikowane i żądanie za pośrednictwem <xref:System.Activities.Presentation.EditingContext>.</span><span class="sxs-lookup"><span data-stu-id="7d570-118">Services are published and requested through the <xref:System.Activities.Presentation.EditingContext>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContextProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty ContextProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty ContextProperty" />
      <MemberSignature Language="DocId" Value="F:System.Activities.Presentation.WorkflowViewElement.ContextProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ContextProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ ContextProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7d570-119">Identyfikuje <see cref="P:System.Activities.Presentation.WorkflowViewElement.Context" /> właściwości zależności.</span><span class="sxs-lookup"><span data-stu-id="7d570-119">Identifies the <see cref="P:System.Activities.Presentation.WorkflowViewElement.Context" /> dependency property.</span></span> <span data-ttu-id="7d570-120">To pole tylko do odczytu.</span><span class="sxs-lookup"><span data-stu-id="7d570-120">This is a read-only field.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultCompositeView">
      <MemberSignature Language="C#" Value="protected System.Activities.Presentation.ICompositeView DefaultCompositeView { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Activities.Presentation.ICompositeView DefaultCompositeView" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.WorkflowViewElement.DefaultCompositeView" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property DefaultCompositeView As ICompositeView" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Activities::Presentation::ICompositeView ^ DefaultCompositeView { System::Activities::Presentation::ICompositeView ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.Presentation.ICompositeView</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7d570-121">Pobiera domyślny widok złożonego.</span><span class="sxs-lookup"><span data-stu-id="7d570-121">Gets the default composite view.</span></span></summary>
        <value><span data-ttu-id="7d570-122">Domyślny widok złożonego.</span><span class="sxs-lookup"><span data-stu-id="7d570-122">The default composite view.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Designer">
      <MemberSignature Language="C#" Value="protected internal System.Activities.Presentation.View.DesignerView Designer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Activities.Presentation.View.DesignerView Designer" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.WorkflowViewElement.Designer" />
      <MemberSignature Language="VB.NET" Value="Protected Friend ReadOnly Property Designer As DesignerView" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; property System::Activities::Presentation::View::DesignerView ^ Designer { System::Activities::Presentation::View::DesignerView ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.Presentation.View.DesignerView</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7d570-123">Pobiera projektanta skojarzone z elementem Widok przepływu pracy.</span><span class="sxs-lookup"><span data-stu-id="7d570-123">Gets the designer associated with the workflow view element.</span></span></summary>
        <value><span data-ttu-id="7d570-124">Projektant skojarzone z elementem Widok przepływu pracy.</span><span class="sxs-lookup"><span data-stu-id="7d570-124">The designer associated with the workflow view element.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DragHandle">
      <MemberSignature Language="C#" Value="public System.Windows.FrameworkElement DragHandle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.FrameworkElement DragHandle" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.WorkflowViewElement.DragHandle" />
      <MemberSignature Language="VB.NET" Value="Public Property DragHandle As FrameworkElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::FrameworkElement ^ DragHandle { System::Windows::FrameworkElement ^ get(); void set(System::Windows::FrameworkElement ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.FrameworkElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7d570-125">Pobiera lub ustawia uchwyt przeciągania elementu Widok przepływu pracy.</span><span class="sxs-lookup"><span data-stu-id="7d570-125">Gets or sets the drag handle for the workflow view element.</span></span></summary>
        <value><span data-ttu-id="7d570-126">Obsługa przeciągania elementu Widok przepływu pracy.</span><span class="sxs-lookup"><span data-stu-id="7d570-126">The drag handle for the workflow view element.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExpandState">
      <MemberSignature Language="C#" Value="public bool ExpandState { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ExpandState" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.WorkflowViewElement.ExpandState" />
      <MemberSignature Language="VB.NET" Value="Public Property ExpandState As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ExpandState { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7d570-127">Pobiera lub ustawia wartość wskazującą, czy stan widoku elementu jest rozwinięta.</span><span class="sxs-lookup"><span data-stu-id="7d570-127">Gets or sets a value that indicates whether the view state of the element is expanded.</span></span></summary>
        <value>
          <span data-ttu-id="7d570-128"><see langword="true" /> Jeśli stan widoku elementu jest rozwinięta; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="7d570-128"><see langword="true" /> if the view state of the element is expanded; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExpandStateProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty ExpandStateProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty ExpandStateProperty" />
      <MemberSignature Language="DocId" Value="F:System.Activities.Presentation.WorkflowViewElement.ExpandStateProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ExpandStateProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ ExpandStateProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7d570-129">Identyfikuje <see cref="P:System.Activities.Presentation.WorkflowViewElement.ExpandState" /> właściwości zależności.</span><span class="sxs-lookup"><span data-stu-id="7d570-129">Identifies the <see cref="P:System.Activities.Presentation.WorkflowViewElement.ExpandState" /> dependency property.</span></span> <span data-ttu-id="7d570-130">To pole tylko do odczytu.</span><span class="sxs-lookup"><span data-stu-id="7d570-130">This is a read-only field.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAutomationHelpText">
      <MemberSignature Language="C#" Value="protected virtual string GetAutomationHelpText ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string GetAutomationHelpText() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.WorkflowViewElement.GetAutomationHelpText" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetAutomationHelpText () As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::String ^ GetAutomationHelpText();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="7d570-131">Po zaimplementowaniu w klasie pochodnej pobiera automation tekst pomocy.</span><span class="sxs-lookup"><span data-stu-id="7d570-131">When implemented in a derived class, retrieves the automation help text.</span></span></summary>
        <returns><span data-ttu-id="7d570-132">Domyślna implementacja ma zwrócić pustą <see cref="T:System.String" />.</span><span class="sxs-lookup"><span data-stu-id="7d570-132">The default implementation is to return an empty <see cref="T:System.String" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7d570-133">Zaimplementuj tę metodę w klasie pochodnej, aby dodać własne obsługi.</span><span class="sxs-lookup"><span data-stu-id="7d570-133">Implement this method in your derived class to add your own handling.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAutomationIdMemberName">
      <MemberSignature Language="C#" Value="protected virtual string GetAutomationIdMemberName ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string GetAutomationIdMemberName() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.WorkflowViewElement.GetAutomationIdMemberName" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetAutomationIdMemberName () As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::String ^ GetAutomationIdMemberName();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="7d570-134">Po zaimplementowaniu w klasie pochodnej pobiera nazwę właściwości modelu elementu skojarzone z elementem, który jest używany jako identyfikator automatyzacji.</span><span class="sxs-lookup"><span data-stu-id="7d570-134">When implemented in a derived class, gets the name of a property of the model item associated with the element that is used as automation ID.</span></span></summary>
        <returns><span data-ttu-id="7d570-135">Nazwa do użycia jako identyfikator automatyzacji.</span><span class="sxs-lookup"><span data-stu-id="7d570-135">The name to use as automation ID.</span></span> <span data-ttu-id="7d570-136">Klasa podstawowa zawsze zwraca <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="7d570-136">The base class always returns <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7d570-137">Zaimplementuj tę metodę w klasie pochodnej, aby dodać własne obsługi, który określa właściwość Element modelu ma być używany do identyfikowania element modelu do automatyzacji.</span><span class="sxs-lookup"><span data-stu-id="7d570-137">Implement this method in your derived class to add your own handling that specifies a property of a model item to be used to identify the model item to automation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAutomationItemStatus">
      <MemberSignature Language="C#" Value="protected internal virtual string GetAutomationItemStatus ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance string GetAutomationItemStatus() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.WorkflowViewElement.GetAutomationItemStatus" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function GetAutomationItemStatus () As String" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual System::String ^ GetAutomationItemStatus();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="7d570-138">Po zaimplementowaniu w klasie pochodnej pobiera stan elementu automatyzacji.</span><span class="sxs-lookup"><span data-stu-id="7d570-138">When implemented in a derived class, retrieves the automation item status.</span></span></summary>
        <returns><span data-ttu-id="7d570-139">Domyślna implementacja ma zwrócić pustą <see cref="T:System.String" />.</span><span class="sxs-lookup"><span data-stu-id="7d570-139">The default implementation is to return an empty <see cref="T:System.String" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="protected bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.WorkflowViewElement.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property bool IsReadOnly { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7d570-140">Pobiera lub ustawia wartość wskazującą, czy element Widok przepływu pracy jest tylko do odczytu.</span><span class="sxs-lookup"><span data-stu-id="7d570-140">Gets or sets a value that indicates whether the workflow view element is read only.</span></span></summary>
        <value>
          <span data-ttu-id="7d570-141"><see langword="true" /> Jeśli element jest tylko do odczytu. w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="7d570-141"><see langword="true" /> if the element is read only; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsRootDesigner">
      <MemberSignature Language="C#" Value="public bool IsRootDesigner { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsRootDesigner" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.WorkflowViewElement.IsRootDesigner" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsRootDesigner As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsRootDesigner { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7d570-142">Pobiera lub ustawia wartość wskazującą, czy określony Projektant jest Projektant główny dla tego elementu.</span><span class="sxs-lookup"><span data-stu-id="7d570-142">Gets or sets a value that indicates whether the specified designer is the root designer for this element.</span></span></summary>
        <value>
          <span data-ttu-id="7d570-143"><see langword="true" /> Jeśli określony Projektant jest Projektant główny; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="7d570-143"><see langword="true" /> if the specified designer is the root designer; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ModelItem">
      <MemberSignature Language="C#" Value="public System.Activities.Presentation.Model.ModelItem ModelItem { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Activities.Presentation.Model.ModelItem ModelItem" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.WorkflowViewElement.ModelItem" />
      <MemberSignature Language="VB.NET" Value="Public Property ModelItem As ModelItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Activities::Presentation::Model::ModelItem ^ ModelItem { System::Activities::Presentation::Model::ModelItem ^ get(); void set(System::Activities::Presentation::Model::ModelItem ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.Presentation.Model.ModelItem</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7d570-144">Pobiera lub ustawia odpowiadającego <see cref="T:System.Activities.Presentation.Model.ModelItem" /> obiekt skojarzony z elementem Widok przepływu pracy.</span><span class="sxs-lookup"><span data-stu-id="7d570-144">Gets or sets the underlying <see cref="T:System.Activities.Presentation.Model.ModelItem" /> object associated with the workflow view element.</span></span></summary>
        <value><span data-ttu-id="7d570-145">A <see cref="T:System.Activities.Presentation.Model.ModelItem" /> obiekt, który jest otokę wystąpienie modelu lub w pamięci reprezentację podstawowy przepływ pracy.</span><span class="sxs-lookup"><span data-stu-id="7d570-145">A <see cref="T:System.Activities.Presentation.Model.ModelItem" /> object that is a wrapper around a model instance or an in-memory representation of the underlying workflow.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7d570-146"><xref:System.Activities.Presentation.Model.ModelItem> Obiektu zawiera powiadomienia o zmianach, nawet wtedy, gdy wystąpienie modelu nie zapewnia powiadomienie o zmianie.</span><span class="sxs-lookup"><span data-stu-id="7d570-146">The <xref:System.Activities.Presentation.Model.ModelItem> object provides notification of changes even if the model instance does not provide change notification.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ModelItemProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty ModelItemProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty ModelItemProperty" />
      <MemberSignature Language="DocId" Value="F:System.Activities.Presentation.WorkflowViewElement.ModelItemProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ModelItemProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ ModelItemProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7d570-147">Identyfikuje <see cref="P:System.Activities.Presentation.WorkflowViewElement.ModelItem" /> właściwości zależności.</span><span class="sxs-lookup"><span data-stu-id="7d570-147">Identifies the <see cref="P:System.Activities.Presentation.WorkflowViewElement.ModelItem" /> dependency property.</span></span> <span data-ttu-id="7d570-148">To pole tylko do odczytu.</span><span class="sxs-lookup"><span data-stu-id="7d570-148">This is a read-only field.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnContextMenuLoaded">
      <MemberSignature Language="C#" Value="protected virtual void OnContextMenuLoaded (System.Windows.Controls.ContextMenu menu);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnContextMenuLoaded(class System.Windows.Controls.ContextMenu menu) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.WorkflowViewElement.OnContextMenuLoaded(System.Windows.Controls.ContextMenu)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnContextMenuLoaded (menu As ContextMenu)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnContextMenuLoaded(System::Windows::Controls::ContextMenu ^ menu);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="menu" Type="System.Windows.Controls.ContextMenu" />
      </Parameters>
      <Docs>
        <param name="menu"><span data-ttu-id="7d570-149"><see cref="T:System.Windows.Controls.ContextMenu" /> Który został załadowany.</span><span class="sxs-lookup"><span data-stu-id="7d570-149">The <see cref="T:System.Windows.Controls.ContextMenu" /> that is loaded.</span></span></param>
        <summary><span data-ttu-id="7d570-150">Wywoływane, gdy jest ładowany menu kontekstowego.</span><span class="sxs-lookup"><span data-stu-id="7d570-150">Invoked when the context menu is loaded.</span></span> <span data-ttu-id="7d570-151">Zaimplementuj tę metodę w klasie pochodnej do obsługi tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="7d570-151">Implement this method in a derived class to handle this event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnCreateAutomationPeer">
      <MemberSignature Language="C#" Value="protected override System.Windows.Automation.Peers.AutomationPeer OnCreateAutomationPeer ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Automation.Peers.AutomationPeer OnCreateAutomationPeer() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.WorkflowViewElement.OnCreateAutomationPeer" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function OnCreateAutomationPeer () As AutomationPeer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Automation::Peers::AutomationPeer ^ OnCreateAutomationPeer();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.Peers.AutomationPeer</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="7d570-152">Zwraca <see cref="T:System.Activities.Presentation.WorkflowViewElement" />-określonych <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> implementacji dla infrastruktury systemu Windows Presentation Foundation (WPF).</span><span class="sxs-lookup"><span data-stu-id="7d570-152">Returns a <see cref="T:System.Activities.Presentation.WorkflowViewElement" />-specific <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> implementation for the Windows Presentation Foundation (WPF) infrastructure.</span></span></summary>
        <returns><span data-ttu-id="7d570-153">Określonego typu <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> implementacji.</span><span class="sxs-lookup"><span data-stu-id="7d570-153">The type-specific <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> implementation.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnDragEnter">
      <MemberSignature Language="C#" Value="protected override void OnDragEnter (System.Windows.DragEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnDragEnter(class System.Windows.DragEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.WorkflowViewElement.OnDragEnter(System.Windows.DragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnDragEnter (e As DragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnDragEnter(System::Windows::DragEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DragEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="7d570-154"><see cref="T:System.Windows.DragEventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="7d570-154">The <see cref="T:System.Windows.DragEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="7d570-155">Zgłasza <see cref="E:System.Windows.UIElement.DragEnter" /> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="7d570-155">Raises the <see cref="E:System.Windows.UIElement.DragEnter" /> event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnDragOver">
      <MemberSignature Language="C#" Value="protected override void OnDragOver (System.Windows.DragEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnDragOver(class System.Windows.DragEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.WorkflowViewElement.OnDragOver(System.Windows.DragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnDragOver (e As DragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnDragOver(System::Windows::DragEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DragEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="7d570-156"><see cref="T:System.Windows.DragEventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="7d570-156">The <see cref="T:System.Windows.DragEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="7d570-157">Zgłasza <see cref="E:System.Windows.UIElement.DragOver" /> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="7d570-157">Raises the <see cref="E:System.Windows.UIElement.DragOver" /> event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnEditAnnotation">
      <MemberSignature Language="C#" Value="protected internal virtual void OnEditAnnotation ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnEditAnnotation() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.WorkflowViewElement.OnEditAnnotation" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnEditAnnotation ()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnEditAnnotation();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="7d570-158">Występuje, gdy jest edytowany adnotacji.</span><span class="sxs-lookup"><span data-stu-id="7d570-158">Occurs when the annotation is edited.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnInitialized">
      <MemberSignature Language="C#" Value="protected override void OnInitialized (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnInitialized(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.WorkflowViewElement.OnInitialized(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnInitialized (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnInitialized(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="7d570-159"><see cref="T:System.EventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="7d570-159">The <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="7d570-160">Zgłasza <see cref="E:System.Windows.FrameworkElement.Initialized" /> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="7d570-160">Raises the <see cref="E:System.Windows.FrameworkElement.Initialized" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7d570-161">Domyślna implementacja tej metody wirtualnej zgłasza zdarzenie, zgodnie z powyższym opisem.</span><span class="sxs-lookup"><span data-stu-id="7d570-161">The default implementation of this virtual method raises the event as described above.</span></span> <span data-ttu-id="7d570-162">Zastąpienia powinny wywoływać implementację podstawową w celu zachowania tego zachowania.</span><span class="sxs-lookup"><span data-stu-id="7d570-162">Overrides should call the base implementation to preserve this behavior.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnModelItemChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnModelItemChanged (object newItem);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnModelItemChanged(object newItem) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.WorkflowViewElement.OnModelItemChanged(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnModelItemChanged (newItem As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnModelItemChanged(System::Object ^ newItem);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newItem" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="newItem"><span data-ttu-id="7d570-163"><see cref="T:System.Object" /> Reprezentujący zmienionego stanu elementu modelu.</span><span class="sxs-lookup"><span data-stu-id="7d570-163">An <see cref="T:System.Object" /> that represents the changed state of the model item.</span></span></param>
        <summary><span data-ttu-id="7d570-164">Wywoływane, gdy element modelu źródłowego zostanie zmieniona.</span><span class="sxs-lookup"><span data-stu-id="7d570-164">Invoked when the underlying model item is changed.</span></span> <span data-ttu-id="7d570-165">Zaimplementuj tę metodę w klasie pochodnej do obsługi tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="7d570-165">Implement this method in a derived class to handle this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7d570-166">Brak implementacji domyślnej.</span><span class="sxs-lookup"><span data-stu-id="7d570-166">There is no default implementation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMouseDown">
      <MemberSignature Language="C#" Value="protected override void OnMouseDown (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMouseDown(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.WorkflowViewElement.OnMouseDown(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnMouseDown (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnMouseDown(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="7d570-167"><see cref="T:System.Windows.Input.MouseButtonEventArgs" /> Wystąpienia, który zawiera dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="7d570-167">The <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> instance that contains the event data.</span></span> <span data-ttu-id="7d570-168">Te dane zdarzeń raporty szczegółowe informacje o został naciśnięty przycisk myszy, a stan obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="7d570-168">This event data reports details about the mouse button that was pressed and the state handled.</span></span></param>
        <summary><span data-ttu-id="7d570-169">Wywoływane, gdy zostanie naciśnięty przycisk myszy.</span><span class="sxs-lookup"><span data-stu-id="7d570-169">Invoked when the mouse button is pressed.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMouseMove">
      <MemberSignature Language="C#" Value="protected override void OnMouseMove (System.Windows.Input.MouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMouseMove(class System.Windows.Input.MouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.WorkflowViewElement.OnMouseMove(System.Windows.Input.MouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnMouseMove (e As MouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnMouseMove(System::Windows::Input::MouseEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="7d570-170"><see cref="T:System.Windows.Input.MouseEventArgs" /> Wystąpienia, który zawiera dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="7d570-170">The <see cref="T:System.Windows.Input.MouseEventArgs" /> instance that contains the event data.</span></span></param>
        <summary><span data-ttu-id="7d570-171">Wywoływane, gdy wskaźnik myszy zostanie przesunięty.</span><span class="sxs-lookup"><span data-stu-id="7d570-171">Invoked when the mouse is moved.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMouseUp">
      <MemberSignature Language="C#" Value="protected override void OnMouseUp (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMouseUp(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.WorkflowViewElement.OnMouseUp(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnMouseUp (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnMouseUp(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="7d570-172"><see cref="T:System.Windows.Input.MouseButtonEventArgs" /> Wystąpienia, który zawiera dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="7d570-172">The <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> instance that contains the event data.</span></span> <span data-ttu-id="7d570-173">Dane zdarzenia raporty, wydanej przycisk myszy.</span><span class="sxs-lookup"><span data-stu-id="7d570-173">The event data reports that the mouse button was released.</span></span></param>
        <summary><span data-ttu-id="7d570-174">Wywoływane, gdy przycisk myszy zostanie zwolniony.</span><span class="sxs-lookup"><span data-stu-id="7d570-174">Invoked when the mouse button is released.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPreviewDragEnter">
      <MemberSignature Language="C#" Value="protected override void OnPreviewDragEnter (System.Windows.DragEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnPreviewDragEnter(class System.Windows.DragEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.WorkflowViewElement.OnPreviewDragEnter(System.Windows.DragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnPreviewDragEnter (e As DragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnPreviewDragEnter(System::Windows::DragEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DragEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="7d570-175"><see cref="T:System.Windows.DragEventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="7d570-175">The <see cref="T:System.Windows.DragEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="7d570-176">Wywoływane, gdy nieobsługiwanego przeciąganie dołączony do określonego zdarzenia wprowadza elementu w jego trasy, który pochodzi od tej klasy.</span><span class="sxs-lookup"><span data-stu-id="7d570-176">Invoked when an unhandled drag attached to the specified event enters an element in its route that is derived from this class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPreviewDragLeave">
      <MemberSignature Language="C#" Value="protected override void OnPreviewDragLeave (System.Windows.DragEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnPreviewDragLeave(class System.Windows.DragEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.WorkflowViewElement.OnPreviewDragLeave(System.Windows.DragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnPreviewDragLeave (e As DragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnPreviewDragLeave(System::Windows::DragEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DragEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="7d570-177"><see cref="T:System.Windows.DragEventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="7d570-177">The <see cref="T:System.Windows.DragEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="7d570-178">Wywoływane, gdy nieobsługiwanego przeciąganie dołączony do określonego zdarzenia pozostawia elementu w jego trasy, który pochodzi od tej klasy.</span><span class="sxs-lookup"><span data-stu-id="7d570-178">Invoked when an unhandled drag attached to the specified event leaves an element in its route that is derived from this class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPreviewMouseUp">
      <MemberSignature Language="C#" Value="protected override void OnPreviewMouseUp (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnPreviewMouseUp(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.WorkflowViewElement.OnPreviewMouseUp(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnPreviewMouseUp (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnPreviewMouseUp(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="7d570-179"><see cref="T:System.Windows.Input.MouseButtonEventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="7d570-179">The <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> that contains the event data.</span></span> <span data-ttu-id="7d570-180">Dane zdarzenia raporty wydane jednego lub więcej przycisków myszy.</span><span class="sxs-lookup"><span data-stu-id="7d570-180">The event data reports that one or more mouse buttons were released.</span></span></param>
        <summary><span data-ttu-id="7d570-181">Wywoływane, gdy wersji nieobsługiwany myszy dołączony do określonego zdarzenia osiągnie element trasę pochodzący z tej klasy.</span><span class="sxs-lookup"><span data-stu-id="7d570-181">Invoked when an unhandled mouse release attached to the specified event reaches an element in its route that is derived from this class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnReadOnlyChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnReadOnlyChanged (bool isReadOnly);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnReadOnlyChanged(bool isReadOnly) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.WorkflowViewElement.OnReadOnlyChanged(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnReadOnlyChanged (isReadOnly As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnReadOnlyChanged(bool isReadOnly);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="isReadOnly" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="isReadOnly">
          <span data-ttu-id="7d570-182"><see langword="true" /> Aby wskazać, że element jest tylko do odczytu. w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="7d570-182"><see langword="true" /> to indicate that the element is read-only; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="7d570-183">Wywoływane, gdy zostanie zmieniona właściwość tylko do odczytu.</span><span class="sxs-lookup"><span data-stu-id="7d570-183">Invoked when the read-only property is changed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7d570-184">Brak implementacji domyślnej.</span><span class="sxs-lookup"><span data-stu-id="7d570-184">There is no default implementation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnShowExpandedChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnShowExpandedChanged (bool newValue);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnShowExpandedChanged(bool newValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.WorkflowViewElement.OnShowExpandedChanged(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnShowExpandedChanged (newValue As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnShowExpandedChanged(bool newValue);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newValue" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="newValue">
          <span data-ttu-id="7d570-185"><see langword="true" /> Aby wskazać, że wartość Pokaż rozszerzone właściwości zostanie zmieniona; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="7d570-185"><see langword="true" /> to indicate that the value of the show expanded property is changed; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="7d570-186">Wywoływane, gdy Pokaż rozszerzonych właściwości zostanie zmieniona.</span><span class="sxs-lookup"><span data-stu-id="7d570-186">Invoked when the show expanded property is changed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7d570-187">Brak implementacji domyślnej.</span><span class="sxs-lookup"><span data-stu-id="7d570-187">There is no default implementation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PinState">
      <MemberSignature Language="C#" Value="public bool PinState { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool PinState" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.WorkflowViewElement.PinState" />
      <MemberSignature Language="VB.NET" Value="Public Property PinState As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool PinState { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7d570-188">Pobiera lub ustawia wartość wskazującą, czy <see cref="P:System.Activities.Presentation.WorkflowViewElement.ExpandState" /> właściwości powinny mieć pierwszeństwo przed innych stanów, które mogą służyć do rozwiń lub Zwiń <see cref="T:System.Activities.Presentation.WorkflowViewElement" />.</span><span class="sxs-lookup"><span data-stu-id="7d570-188">Gets or sets a value that indicates whether the <see cref="P:System.Activities.Presentation.WorkflowViewElement.ExpandState" /> property should take precedence over other states that can be used to expand or collapse the <see cref="T:System.Activities.Presentation.WorkflowViewElement" />.</span></span></summary>
        <value>
          <span data-ttu-id="7d570-189"><see langword="true" /> Jeśli <see cref="P:System.Activities.Presentation.WorkflowViewElement.ExpandState" /> właściwość powinna być używana do rozwiń lub Zwiń <see cref="T:System.Activities.Presentation.WorkflowViewElement" /> obiektu; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="7d570-189"><see langword="true" /> if the <see cref="P:System.Activities.Presentation.WorkflowViewElement.ExpandState" /> property should be used to expand or collapse the <see cref="T:System.Activities.Presentation.WorkflowViewElement" /> object; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PinStateProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty PinStateProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty PinStateProperty" />
      <MemberSignature Language="DocId" Value="F:System.Activities.Presentation.WorkflowViewElement.PinStateProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PinStateProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ PinStateProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7d570-190">Identyfikuje <see cref="P:System.Activities.Presentation.WorkflowViewElement.PinState" /> właściwości zależności.</span><span class="sxs-lookup"><span data-stu-id="7d570-190">Identifies the <see cref="P:System.Activities.Presentation.WorkflowViewElement.PinState" /> dependency property.</span></span> <span data-ttu-id="7d570-191">To pole tylko do odczytu.</span><span class="sxs-lookup"><span data-stu-id="7d570-191">This is a read-only field.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RegisterCompositeView">
      <MemberSignature Language="C#" Value="public void RegisterCompositeView (System.Activities.Presentation.ICompositeView container);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RegisterCompositeView(class System.Activities.Presentation.ICompositeView container) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.WorkflowViewElement.RegisterCompositeView(System.Activities.Presentation.ICompositeView)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RegisterCompositeView (container As ICompositeView)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RegisterCompositeView(System::Activities::Presentation::ICompositeView ^ container);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Activities.Presentation.ICompositeViewEvents.RegisterCompositeView(System.Activities.Presentation.ICompositeView)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="container" Type="System.Activities.Presentation.ICompositeView" />
      </Parameters>
      <Docs>
        <param name="container"><span data-ttu-id="7d570-192">Widok złożonego do zarejestrowania.</span><span class="sxs-lookup"><span data-stu-id="7d570-192">The composite view to register.</span></span></param>
        <summary><span data-ttu-id="7d570-193">Dodaje określony widok złożonego do listy widokami złożonych.</span><span class="sxs-lookup"><span data-stu-id="7d570-193">Adds the specified composite view to the list of composite views.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RegisterDefaultCompositeView">
      <MemberSignature Language="C#" Value="public void RegisterDefaultCompositeView (System.Activities.Presentation.ICompositeView container);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RegisterDefaultCompositeView(class System.Activities.Presentation.ICompositeView container) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.WorkflowViewElement.RegisterDefaultCompositeView(System.Activities.Presentation.ICompositeView)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RegisterDefaultCompositeView (container As ICompositeView)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RegisterDefaultCompositeView(System::Activities::Presentation::ICompositeView ^ container);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Activities.Presentation.ICompositeViewEvents.RegisterDefaultCompositeView(System.Activities.Presentation.ICompositeView)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="container" Type="System.Activities.Presentation.ICompositeView" />
      </Parameters>
      <Docs>
        <param name="container"><span data-ttu-id="7d570-194">Widok złożonego.</span><span class="sxs-lookup"><span data-stu-id="7d570-194">The composite view.</span></span></param>
        <summary><span data-ttu-id="7d570-195">Dodaje określony widok złożonego jako domyślny widok złożonego.</span><span class="sxs-lookup"><span data-stu-id="7d570-195">Adds the specified composite view as the default composite view.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowExpanded">
      <MemberSignature Language="C#" Value="public bool ShowExpanded { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowExpanded" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.WorkflowViewElement.ShowExpanded" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ShowExpanded As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShowExpanded { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7d570-196">Pobiera wartość wskazującą, czy element przepływu pracy w widoku jest wyświetlane w widoku rozwiniętego.</span><span class="sxs-lookup"><span data-stu-id="7d570-196">Gets a value that indicates whether the workflow view element is shown in an expanded view.</span></span></summary>
        <value>
          <span data-ttu-id="7d570-197"><see langword="true" /> Jeśli element jest wyświetlany w widoku rozwiniętego; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="7d570-197"><see langword="true" /> if the element is shown in an expanded view; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowExpandedProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty ShowExpandedProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty ShowExpandedProperty" />
      <MemberSignature Language="DocId" Value="F:System.Activities.Presentation.WorkflowViewElement.ShowExpandedProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ShowExpandedProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ ShowExpandedProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7d570-198">Identyfikuje <see cref="P:System.Activities.Presentation.WorkflowViewElement.ShowExpanded" /> właściwości zależności.</span><span class="sxs-lookup"><span data-stu-id="7d570-198">Identifies the <see cref="P:System.Activities.Presentation.WorkflowViewElement.ShowExpanded" /> dependency property.</span></span> <span data-ttu-id="7d570-199">To pole tylko do odczytu.</span><span class="sxs-lookup"><span data-stu-id="7d570-199">This is a read-only field.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UnregisterCompositeView">
      <MemberSignature Language="C#" Value="public void UnregisterCompositeView (System.Activities.Presentation.ICompositeView container);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UnregisterCompositeView(class System.Activities.Presentation.ICompositeView container) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.WorkflowViewElement.UnregisterCompositeView(System.Activities.Presentation.ICompositeView)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UnregisterCompositeView (container As ICompositeView)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void UnregisterCompositeView(System::Activities::Presentation::ICompositeView ^ container);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Activities.Presentation.ICompositeViewEvents.UnregisterCompositeView(System.Activities.Presentation.ICompositeView)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="container" Type="System.Activities.Presentation.ICompositeView" />
      </Parameters>
      <Docs>
        <param name="container"><span data-ttu-id="7d570-200">Widok złożonego wyrejestrować.</span><span class="sxs-lookup"><span data-stu-id="7d570-200">The composite view to unregister.</span></span></param>
        <summary><span data-ttu-id="7d570-201">Usuwa określony widok złożonego z listy widoków złożonego.</span><span class="sxs-lookup"><span data-stu-id="7d570-201">Removes the specified composite view from the list of composite views.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UnregisterDefaultCompositeView">
      <MemberSignature Language="C#" Value="public void UnregisterDefaultCompositeView (System.Activities.Presentation.ICompositeView container);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UnregisterDefaultCompositeView(class System.Activities.Presentation.ICompositeView container) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.WorkflowViewElement.UnregisterDefaultCompositeView(System.Activities.Presentation.ICompositeView)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UnregisterDefaultCompositeView (container As ICompositeView)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void UnregisterDefaultCompositeView(System::Activities::Presentation::ICompositeView ^ container);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Activities.Presentation.ICompositeViewEvents.UnregisterDefaultCompositeView(System.Activities.Presentation.ICompositeView)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="container" Type="System.Activities.Presentation.ICompositeView" />
      </Parameters>
      <Docs>
        <param name="container"><span data-ttu-id="7d570-202">Widok złożonego do usunięcia.</span><span class="sxs-lookup"><span data-stu-id="7d570-202">The composite view to remove.</span></span></param>
        <summary><span data-ttu-id="7d570-203">Usuwa określony domyślny widok złożonego.</span><span class="sxs-lookup"><span data-stu-id="7d570-203">Removes the specified default composite view.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ViewService">
      <MemberSignature Language="C#" Value="protected internal System.Activities.Presentation.Services.ViewService ViewService { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Activities.Presentation.Services.ViewService ViewService" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.WorkflowViewElement.ViewService" />
      <MemberSignature Language="VB.NET" Value="Protected Friend ReadOnly Property ViewService As ViewService" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; property System::Activities::Presentation::Services::ViewService ^ ViewService { System::Activities::Presentation::Services::ViewService ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.Presentation.Services.ViewService</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7d570-204">Pobiera <see cref="T:System.Activities.Presentation.Services.ViewService" /> skojarzone z elementem Widok przepływu pracy.</span><span class="sxs-lookup"><span data-stu-id="7d570-204">Gets the <see cref="T:System.Activities.Presentation.Services.ViewService" /> associated with the workflow view element.</span></span></summary>
        <value><span data-ttu-id="7d570-205">Usługa widoku skojarzone z elementem Widok przepływu pracy.</span><span class="sxs-lookup"><span data-stu-id="7d570-205">The view service associated with the workflow view element.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7d570-206">Tej właściwości można także uzyskać dostęp z <xref:System.Activities.Presentation.EditingContext.Services%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="7d570-206">This property can also be accessed with the <xref:System.Activities.Presentation.EditingContext.Services%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ViewStateService">
      <MemberSignature Language="C#" Value="protected internal System.Activities.Presentation.View.ViewStateService ViewStateService { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Activities.Presentation.View.ViewStateService ViewStateService" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.WorkflowViewElement.ViewStateService" />
      <MemberSignature Language="VB.NET" Value="Protected Friend ReadOnly Property ViewStateService As ViewStateService" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; property System::Activities::Presentation::View::ViewStateService ^ ViewStateService { System::Activities::Presentation::View::ViewStateService ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.Presentation.View.ViewStateService</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7d570-207">Pobiera <see cref="T:System.Activities.Presentation.View.ViewStateService" /> zdefiniowane w <see cref="T:System.Activities.Presentation.EditingContext" />.</span><span class="sxs-lookup"><span data-stu-id="7d570-207">Gets the <see cref="T:System.Activities.Presentation.View.ViewStateService" /> defined in the <see cref="T:System.Activities.Presentation.EditingContext" />.</span></span> <span data-ttu-id="7d570-208">Skrót do tej właściwości jest uzyskując dostęp do <see cref="P:System.Activities.Presentation.EditingContext.Services" />.</span><span class="sxs-lookup"><span data-stu-id="7d570-208">A shortcut to this property is by accessing <see cref="P:System.Activities.Presentation.EditingContext.Services" />.</span></span></summary>
        <value><span data-ttu-id="7d570-209"><see cref="T:System.Activities.Presentation.View.ViewStateService" /> Zdefiniowane w <see cref="T:System.Activities.Presentation.EditingContext" />.</span><span class="sxs-lookup"><span data-stu-id="7d570-209">The <see cref="T:System.Activities.Presentation.View.ViewStateService" /> defined in the <see cref="T:System.Activities.Presentation.EditingContext" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>