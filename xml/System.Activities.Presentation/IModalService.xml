<Type Name="IModalService" FullName="System.Activities.Presentation.IModalService">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="0859aae16028981e0ad69c7fe873a22485375d6a" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36720176" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IModalService" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IModalService" />
  <TypeSignature Language="DocId" Value="T:System.Activities.Presentation.IModalService" />
  <TypeSignature Language="VB.NET" Value="Public Interface IModalService" />
  <TypeSignature Language="C++ CLI" Value="public interface class IModalService" />
  <TypeSignature Language="F#" Value="type IModalService = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Activities.Presentation</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>Umożliwia powiadomienie do aplikacji hosta, że modalne okno dialogowe jest wyświetlane.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Niektóre aplikacje, które projektantów hosta muszą otrzymać powiadomienie, gdy została wywołana modalne okno dialogowe. Program Visual Studio jest przykładem takiego hosta. <xref:System.Activities.Presentation.IModalService> Interfejsu zapewnia interfejs do komunikowania się z bieżącym stanem modalne.  
  
 Wywołania projektanta przepływów pracy Windows <xref:System.Activities.Presentation.IModalService.SetModalState%2A> metody. Gdy `isModal` ustawiono parametr `true`, host zostanie powiadomiony, że modalne okno dialogowe jest wyświetlane.  
  
 Jest to opcjonalne usługi. Jeśli w aplikacji hosta nie zależy Ci na zachowaniu stan modalny, nie muszą korzystać z usługi.  
  
 W bieżącej implementacji, jeśli okno komunikatu Windows Presentation Foundation (WPF) (czyli modalnego okna dialogowego) zostanie wywołany <xref:System.Activities.Presentation.IModalService.SetModalState%2A> nie jest wywoływany. Jeśli są one wymagane w aplikacji hosta, należy utworzyć innego rozwiązania.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="SetModalState">
      <MemberSignature Language="C#" Value="public void SetModalState (bool isModal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetModalState(bool isModal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.IModalService.SetModalState(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetModalState (isModal As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetModalState(bool isModal);" />
      <MemberSignature Language="F#" Value="abstract member SetModalState : bool -&gt; unit" Usage="iModalService.SetModalState isModal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="isModal" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="isModal">Jeśli ustawiono <see langword="true" />, jest wyświetlany modalnego okna dialogowego.</param>
        <summary>Powiadamia aplikację hosta, czy jest wyświetlany modalnego okna dialogowego.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>