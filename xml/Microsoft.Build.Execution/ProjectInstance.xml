<Type Name="ProjectInstance" FullName="Microsoft.Build.Execution.ProjectInstance">
  <Metadata><Meta Name="ms.openlocfilehash" Value="24dee33661935053b061760923ccaa7408319954" /><Meta Name="ms.sourcegitcommit" Value="756d085f27705e86604f1bba5f2086ee23761acf" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="01/30/2019" /><Meta Name="ms.locfileid" Value="55351390" /></Metadata><TypeSignature Language="C#" Value="public class ProjectInstance" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ProjectInstance extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Build.Execution.ProjectInstance" />
  <TypeSignature Language="VB.NET" Value="Public Class ProjectInstance" />
  <TypeSignature Language="C++ CLI" Value="public ref class ProjectInstance" />
  <TypeSignature Language="F#" Value="type ProjectInstance = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Build</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Diagnostics.DebuggerDisplay("{FullPath} #Targets={TargetsCount} DefaultTargets={(DefaultTargets == null) ? System.String.Empty : System.String.Join(";", DefaultTargets.ToArray())} ToolsVersion={Toolset.ToolsVersion} InitialTargets={(InitialTargets == null) ? System.String.Empty : System.String.Join(";", InitialTargets.ToArray())} #GlobalProperties={globalProperties.Count} #Properties={properties.Count} #ItemTypes={items.ItemTypes.Count} #Items={items.Count}")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="4d26b-101">Reprezentuje wystąpienie projektu.</span><span class="sxs-lookup"><span data-stu-id="4d26b-101">Represents a project instance.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4d26b-102">Wystąpienia tej klasy wyniku, jeśli zostanie sklonowany projektu.</span><span class="sxs-lookup"><span data-stu-id="4d26b-102">Instances of this class result when a project is cloned.</span></span> <span data-ttu-id="4d26b-103">Konstruktory są wewnętrzny, aby wymagać od użytkowników do tworzenia wystąpień projektu z istniejących projektów.</span><span class="sxs-lookup"><span data-stu-id="4d26b-103">Constructors are internal in order to require users to create project instances from existing projects.</span></span>  
  
 <span data-ttu-id="4d26b-104">Nowe wystąpienia projektu są niezmienne, z tą różnicą, że wystąpienia elementów, które można dodać do nich i dla nich ustawionych właściwości wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="4d26b-104">New project instances are immutable, except that instance items can be added to them and instance properties set on them.</span></span> <span data-ttu-id="4d26b-105">Wystąpień projektu są przydatne, ponieważ może być zmodyfikowane i wbudowane kilka razy bez naruszania oryginalnego projektu.</span><span class="sxs-lookup"><span data-stu-id="4d26b-105">Project instances are useful because they can be modified and built several times without disturbing the original project.</span></span>  
  
 <span data-ttu-id="4d26b-106">Ta klasa ani żadnego z jego składników może mieć odwołania do <xref:Microsoft.Build.Construction> lub <xref:Microsoft.Build.Evaluation> obiektów.</span><span class="sxs-lookup"><span data-stu-id="4d26b-106">Neither this class nor any of its constituents is allowed to have references to <xref:Microsoft.Build.Construction> or <xref:Microsoft.Build.Evaluation> objects.</span></span>  
  
 <span data-ttu-id="4d26b-107">Obiekty docelowe wystąpienie projektu, host usługi i rejestru zadań nie są widoczne.</span><span class="sxs-lookup"><span data-stu-id="4d26b-107">Project instance targets, host services, and the task registry are not exposed.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="4d26b-108">Tworzy nowe wystąpienie projektu.</span><span class="sxs-lookup"><span data-stu-id="4d26b-108">Creates a new project instance.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ProjectInstance (Microsoft.Build.Construction.ProjectRootElement xml);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.Build.Construction.ProjectRootElement xml) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.#ctor(Microsoft.Build.Construction.ProjectRootElement)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (xml As ProjectRootElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ProjectInstance(Microsoft::Build::Construction::ProjectRootElement ^ xml);" />
      <MemberSignature Language="F#" Value="new Microsoft.Build.Execution.ProjectInstance : Microsoft.Build.Construction.ProjectRootElement -&gt; Microsoft.Build.Execution.ProjectInstance" Usage="new Microsoft.Build.Execution.ProjectInstance xml" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="xml" Type="Microsoft.Build.Construction.ProjectRootElement" />
      </Parameters>
      <Docs>
        <param name="xml"><span data-ttu-id="4d26b-109">Element główny projektu.</span><span class="sxs-lookup"><span data-stu-id="4d26b-109">The project root element.</span></span></param>
        <summary><span data-ttu-id="4d26b-110">Tworzy nowe wystąpienie projektu i inicjuje ją z katalogu głównego danego projektu, przy użyciu domyślnej kolekcji projektu.</span><span class="sxs-lookup"><span data-stu-id="4d26b-110">Creates a new project instance and initializes it from the given project root, using the default project collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4d26b-111">Nie <xref:Microsoft.Build.Evaluation.Project> obiekt zostanie utworzony.</span><span class="sxs-lookup"><span data-stu-id="4d26b-111">No intermediate <xref:Microsoft.Build.Evaluation.Project> object is created.</span></span> <span data-ttu-id="4d26b-112">Jest to przydatne, jeśli projekt zostanie skompilowany, ale nie wyświetlony lub edytowany.</span><span class="sxs-lookup"><span data-stu-id="4d26b-112">This is useful if a project is going to be built, but not displayed or edited.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ProjectInstance (string projectFile);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string projectFile) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (projectFile As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ProjectInstance(System::String ^ projectFile);" />
      <MemberSignature Language="F#" Value="new Microsoft.Build.Execution.ProjectInstance : string -&gt; Microsoft.Build.Execution.ProjectInstance" Usage="new Microsoft.Build.Execution.ProjectInstance projectFile" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="projectFile" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="projectFile"><span data-ttu-id="4d26b-113">Nazwa pliku projektu.</span><span class="sxs-lookup"><span data-stu-id="4d26b-113">The name of the project file.</span></span></param>
        <summary><span data-ttu-id="4d26b-114">Tworzy nowe wystąpienie projektu i inicjuje ją z pliku danego projektu, przy użyciu domyślnej kolekcji projektu.</span><span class="sxs-lookup"><span data-stu-id="4d26b-114">Creates a new project instance and initializes it from the given project file, using the default project collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4d26b-115">Nie <xref:Microsoft.Build.Evaluation.Project> obiekt zostanie utworzony.</span><span class="sxs-lookup"><span data-stu-id="4d26b-115">No intermediate <xref:Microsoft.Build.Evaluation.Project> object is created.</span></span> <span data-ttu-id="4d26b-116">Jest to przydatne, jeśli projekt zostanie skompilowany, ale nie wyświetlony lub edytowany.</span><span class="sxs-lookup"><span data-stu-id="4d26b-116">This is useful if a project is going to be built, but not displayed or edited.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ProjectInstance (string projectFile, System.Collections.Generic.IDictionary&lt;string,string&gt; globalProperties, string toolsVersion);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string projectFile, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; globalProperties, string toolsVersion) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (projectFile As String, globalProperties As IDictionary(Of String, String), toolsVersion As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ProjectInstance(System::String ^ projectFile, System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ globalProperties, System::String ^ toolsVersion);" />
      <MemberSignature Language="F#" Value="new Microsoft.Build.Execution.ProjectInstance : string * System.Collections.Generic.IDictionary&lt;string, string&gt; * string -&gt; Microsoft.Build.Execution.ProjectInstance" Usage="new Microsoft.Build.Execution.ProjectInstance (projectFile, globalProperties, toolsVersion)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="projectFile" Type="System.String" />
        <Parameter Name="globalProperties" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="toolsVersion" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="projectFile"><span data-ttu-id="4d26b-117">Nazwa pliku projektu.</span><span class="sxs-lookup"><span data-stu-id="4d26b-117">The name of the project file.</span></span></param>
        <param name="globalProperties"><span data-ttu-id="4d26b-118">Właściwości globalne do użycia.</span><span class="sxs-lookup"><span data-stu-id="4d26b-118">The global properties to use.</span></span></param>
        <param name="toolsVersion"><span data-ttu-id="4d26b-119">Wersja narzędzia.</span><span class="sxs-lookup"><span data-stu-id="4d26b-119">The tools version.</span></span></param>
        <summary><span data-ttu-id="4d26b-120">Tworzy nowe wystąpienie projektu i inicjuje ją z pliku danego projektu, przy użyciu podanej właściwości globalne, wersja narzędzi i domyślnej kolekcji projektu.</span><span class="sxs-lookup"><span data-stu-id="4d26b-120">Creates a new project instance and initializes it from the given project file, using the given global properties, tools version, and the default project collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4d26b-121">Nie <xref:Microsoft.Build.Evaluation.Project> obiekt zostanie utworzony.</span><span class="sxs-lookup"><span data-stu-id="4d26b-121">No intermediate <xref:Microsoft.Build.Evaluation.Project> object is created.</span></span> <span data-ttu-id="4d26b-122">Jest to przydatne, jeśli projekt zostanie skompilowany, ale nie wyświetlony lub edytowany.</span><span class="sxs-lookup"><span data-stu-id="4d26b-122">This is useful if a project is going to be built, but not displayed or edited.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ProjectInstance (Microsoft.Build.Construction.ProjectRootElement xml, System.Collections.Generic.IDictionary&lt;string,string&gt; globalProperties, string toolsVersion, Microsoft.Build.Evaluation.ProjectCollection projectCollection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.Build.Construction.ProjectRootElement xml, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; globalProperties, string toolsVersion, class Microsoft.Build.Evaluation.ProjectCollection projectCollection) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.#ctor(Microsoft.Build.Construction.ProjectRootElement,System.Collections.Generic.IDictionary{System.String,System.String},System.String,Microsoft.Build.Evaluation.ProjectCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ProjectInstance(Microsoft::Build::Construction::ProjectRootElement ^ xml, System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ globalProperties, System::String ^ toolsVersion, Microsoft::Build::Evaluation::ProjectCollection ^ projectCollection);" />
      <MemberSignature Language="F#" Value="new Microsoft.Build.Execution.ProjectInstance : Microsoft.Build.Construction.ProjectRootElement * System.Collections.Generic.IDictionary&lt;string, string&gt; * string * Microsoft.Build.Evaluation.ProjectCollection -&gt; Microsoft.Build.Execution.ProjectInstance" Usage="new Microsoft.Build.Execution.ProjectInstance (xml, globalProperties, toolsVersion, projectCollection)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="xml" Type="Microsoft.Build.Construction.ProjectRootElement" />
        <Parameter Name="globalProperties" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="toolsVersion" Type="System.String" />
        <Parameter Name="projectCollection" Type="Microsoft.Build.Evaluation.ProjectCollection" />
      </Parameters>
      <Docs>
        <param name="xml"><span data-ttu-id="4d26b-123">Element główny projektu</span><span class="sxs-lookup"><span data-stu-id="4d26b-123">The project root element</span></span></param>
        <param name="globalProperties"><span data-ttu-id="4d26b-124">Właściwości globalne do użycia.</span><span class="sxs-lookup"><span data-stu-id="4d26b-124">The global properties to use.</span></span> <span data-ttu-id="4d26b-125">Może mieć wartość zerową.</span><span class="sxs-lookup"><span data-stu-id="4d26b-125">May be null.</span></span></param>
        <param name="toolsVersion"><span data-ttu-id="4d26b-126">Wersja narzędzia.</span><span class="sxs-lookup"><span data-stu-id="4d26b-126">The tools version.</span></span> <span data-ttu-id="4d26b-127">Może mieć wartość zerową.</span><span class="sxs-lookup"><span data-stu-id="4d26b-127">May be null.</span></span></param>
        <param name="projectCollection"><span data-ttu-id="4d26b-128">Kolekcja projektów</span><span class="sxs-lookup"><span data-stu-id="4d26b-128">Project collection</span></span></param>
        <summary><span data-ttu-id="4d26b-129">Tworzy nowe wystąpienie projektu i inicjuje ją z katalogu głównego danego projektu, przy użyciu podanej właściwości globalne, wersja narzędzi i kolekcji projektów.</span><span class="sxs-lookup"><span data-stu-id="4d26b-129">Creates a new project instance and initializes it from the given project root, using the given global properties, tools version, and project collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4d26b-130">Nie <xref:Microsoft.Build.Evaluation.Project> obiekt zostanie utworzony.</span><span class="sxs-lookup"><span data-stu-id="4d26b-130">No intermediate <xref:Microsoft.Build.Evaluation.Project> object is created.</span></span> <span data-ttu-id="4d26b-131">Jest to przydatne, jeśli projekt zostanie skompilowany, ale nie wyświetlony lub edytowany.</span><span class="sxs-lookup"><span data-stu-id="4d26b-131">This is useful if a project is going to be built, but not displayed or edited.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ProjectInstance (string projectFile, System.Collections.Generic.IDictionary&lt;string,string&gt; globalProperties, string toolsVersion, Microsoft.Build.Evaluation.ProjectCollection projectCollection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string projectFile, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; globalProperties, string toolsVersion, class Microsoft.Build.Evaluation.ProjectCollection projectCollection) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.String,Microsoft.Build.Evaluation.ProjectCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ProjectInstance(System::String ^ projectFile, System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ globalProperties, System::String ^ toolsVersion, Microsoft::Build::Evaluation::ProjectCollection ^ projectCollection);" />
      <MemberSignature Language="F#" Value="new Microsoft.Build.Execution.ProjectInstance : string * System.Collections.Generic.IDictionary&lt;string, string&gt; * string * Microsoft.Build.Evaluation.ProjectCollection -&gt; Microsoft.Build.Execution.ProjectInstance" Usage="new Microsoft.Build.Execution.ProjectInstance (projectFile, globalProperties, toolsVersion, projectCollection)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="projectFile" Type="System.String" />
        <Parameter Name="globalProperties" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="toolsVersion" Type="System.String" />
        <Parameter Name="projectCollection" Type="Microsoft.Build.Evaluation.ProjectCollection" />
      </Parameters>
      <Docs>
        <param name="projectFile"><span data-ttu-id="4d26b-132">Nazwa pliku projektu.</span><span class="sxs-lookup"><span data-stu-id="4d26b-132">The name of the project file.</span></span></param>
        <param name="globalProperties"><span data-ttu-id="4d26b-133">Właściwości globalne do użycia.</span><span class="sxs-lookup"><span data-stu-id="4d26b-133">The global properties to use.</span></span> <span data-ttu-id="4d26b-134">Może mieć wartość zerową.</span><span class="sxs-lookup"><span data-stu-id="4d26b-134">May be null.</span></span></param>
        <param name="toolsVersion"><span data-ttu-id="4d26b-135">Wersja narzędzia.</span><span class="sxs-lookup"><span data-stu-id="4d26b-135">The tools version.</span></span> <span data-ttu-id="4d26b-136">Może mieć wartość zerową.</span><span class="sxs-lookup"><span data-stu-id="4d26b-136">May be null.</span></span></param>
        <param name="projectCollection"><span data-ttu-id="4d26b-137">Kolekcja projektów</span><span class="sxs-lookup"><span data-stu-id="4d26b-137">Project collection</span></span></param>
        <summary><span data-ttu-id="4d26b-138">Tworzy nowe wystąpienie projektu i inicjuje ją z pliku danego projektu, przy użyciu podanej właściwości globalne, wersja narzędzi i kolekcji projektów.</span><span class="sxs-lookup"><span data-stu-id="4d26b-138">Creates a new project instance and initializes it from the given project file, using the given global properties, tools version, and project collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4d26b-139">Nie <xref:Microsoft.Build.Evaluation.Project> obiekt zostanie utworzony.</span><span class="sxs-lookup"><span data-stu-id="4d26b-139">No intermediate <xref:Microsoft.Build.Evaluation.Project> object is created.</span></span> <span data-ttu-id="4d26b-140">Jest to przydatne, jeśli projekt zostanie skompilowany, ale nie wyświetlony lub edytowany.</span><span class="sxs-lookup"><span data-stu-id="4d26b-140">This is useful if a project is going to be built, but not displayed or edited.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ProjectInstance (Microsoft.Build.Construction.ProjectRootElement xml, System.Collections.Generic.IDictionary&lt;string,string&gt; globalProperties, string toolsVersion, string subToolsetVersion, Microsoft.Build.Evaluation.ProjectCollection projectCollection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.Build.Construction.ProjectRootElement xml, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; globalProperties, string toolsVersion, string subToolsetVersion, class Microsoft.Build.Evaluation.ProjectCollection projectCollection) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.#ctor(Microsoft.Build.Construction.ProjectRootElement,System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.String,Microsoft.Build.Evaluation.ProjectCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ProjectInstance(Microsoft::Build::Construction::ProjectRootElement ^ xml, System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ globalProperties, System::String ^ toolsVersion, System::String ^ subToolsetVersion, Microsoft::Build::Evaluation::ProjectCollection ^ projectCollection);" />
      <MemberSignature Language="F#" Value="new Microsoft.Build.Execution.ProjectInstance : Microsoft.Build.Construction.ProjectRootElement * System.Collections.Generic.IDictionary&lt;string, string&gt; * string * string * Microsoft.Build.Evaluation.ProjectCollection -&gt; Microsoft.Build.Execution.ProjectInstance" Usage="new Microsoft.Build.Execution.ProjectInstance (xml, globalProperties, toolsVersion, subToolsetVersion, projectCollection)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="xml" Type="Microsoft.Build.Construction.ProjectRootElement" />
        <Parameter Name="globalProperties" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="toolsVersion" Type="System.String" />
        <Parameter Name="subToolsetVersion" Type="System.String" />
        <Parameter Name="projectCollection" Type="Microsoft.Build.Evaluation.ProjectCollection" />
      </Parameters>
      <Docs>
        <param name="xml"><span data-ttu-id="4d26b-141">Element główny projektu.</span><span class="sxs-lookup"><span data-stu-id="4d26b-141">The project root element.</span></span></param>
        <param name="globalProperties"><span data-ttu-id="4d26b-142">Właściwości globalne do użycia.</span><span class="sxs-lookup"><span data-stu-id="4d26b-142">The global properties to use.</span></span> <span data-ttu-id="4d26b-143">Może mieć wartość zerową.</span><span class="sxs-lookup"><span data-stu-id="4d26b-143">May be null.</span></span></param>
        <param name="toolsVersion"><span data-ttu-id="4d26b-144">Wersja narzędzia.</span><span class="sxs-lookup"><span data-stu-id="4d26b-144">The tools version.</span></span> <span data-ttu-id="4d26b-145">Może mieć wartość zerową.</span><span class="sxs-lookup"><span data-stu-id="4d26b-145">May be null.</span></span></param>
        <param name="subToolsetVersion"><span data-ttu-id="4d26b-146">Wersję podzestawu narzędzi.</span><span class="sxs-lookup"><span data-stu-id="4d26b-146">The sub toolset version.</span></span> <span data-ttu-id="4d26b-147">Może mieć wartość zerową.</span><span class="sxs-lookup"><span data-stu-id="4d26b-147">May be null.</span></span></param>
        <param name="projectCollection"><span data-ttu-id="4d26b-148">Kolekcja projektów.</span><span class="sxs-lookup"><span data-stu-id="4d26b-148">Project collection.</span></span></param>
        <summary><span data-ttu-id="4d26b-149">Tworzy nowe wystąpienie projektu i inicjuje ją z katalogu głównego danego projektu, przy użyciu podanej właściwości globalne, wersja narzędzi i kolekcji projektów</span><span class="sxs-lookup"><span data-stu-id="4d26b-149">Creates a new project instance and initializes it from the given project root, using the given global properties, tools version, and project collection</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4d26b-150">Nie <xref:Microsoft.Build.Evaluation.Project> obiekt zostanie utworzony.</span><span class="sxs-lookup"><span data-stu-id="4d26b-150">No intermediate <xref:Microsoft.Build.Evaluation.Project> object is created.</span></span> <span data-ttu-id="4d26b-151">Jest to przydatne, jeśli projekt zostanie skompilowany, ale nie wyświetlony lub edytowany.</span><span class="sxs-lookup"><span data-stu-id="4d26b-151">This is useful if a project is going to be built, but not displayed or edited.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ProjectInstance (string projectFile, System.Collections.Generic.IDictionary&lt;string,string&gt; globalProperties, string toolsVersion, string subToolsetVersion, Microsoft.Build.Evaluation.ProjectCollection projectCollection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string projectFile, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; globalProperties, string toolsVersion, string subToolsetVersion, class Microsoft.Build.Evaluation.ProjectCollection projectCollection) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.String,Microsoft.Build.Evaluation.ProjectCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ProjectInstance(System::String ^ projectFile, System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ globalProperties, System::String ^ toolsVersion, System::String ^ subToolsetVersion, Microsoft::Build::Evaluation::ProjectCollection ^ projectCollection);" />
      <MemberSignature Language="F#" Value="new Microsoft.Build.Execution.ProjectInstance : string * System.Collections.Generic.IDictionary&lt;string, string&gt; * string * string * Microsoft.Build.Evaluation.ProjectCollection -&gt; Microsoft.Build.Execution.ProjectInstance" Usage="new Microsoft.Build.Execution.ProjectInstance (projectFile, globalProperties, toolsVersion, subToolsetVersion, projectCollection)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="projectFile" Type="System.String" />
        <Parameter Name="globalProperties" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="toolsVersion" Type="System.String" />
        <Parameter Name="subToolsetVersion" Type="System.String" />
        <Parameter Name="projectCollection" Type="Microsoft.Build.Evaluation.ProjectCollection" />
      </Parameters>
      <Docs>
        <param name="projectFile"><span data-ttu-id="4d26b-152">Nazwa pliku projektu.</span><span class="sxs-lookup"><span data-stu-id="4d26b-152">The name of the project file.</span></span></param>
        <param name="globalProperties"><span data-ttu-id="4d26b-153">Właściwości globalne do użycia.</span><span class="sxs-lookup"><span data-stu-id="4d26b-153">The global properties to use.</span></span> <span data-ttu-id="4d26b-154">Może mieć wartość zerową.</span><span class="sxs-lookup"><span data-stu-id="4d26b-154">May be null.</span></span></param>
        <param name="toolsVersion"><span data-ttu-id="4d26b-155">Wersja narzędzia.</span><span class="sxs-lookup"><span data-stu-id="4d26b-155">The tools version.</span></span> <span data-ttu-id="4d26b-156">Może mieć wartość zerową.</span><span class="sxs-lookup"><span data-stu-id="4d26b-156">May be null.</span></span></param>
        <param name="subToolsetVersion"><span data-ttu-id="4d26b-157">Wersję podzestawu narzędzi.</span><span class="sxs-lookup"><span data-stu-id="4d26b-157">The sub toolset version.</span></span> <span data-ttu-id="4d26b-158">Może mieć wartość zerową.</span><span class="sxs-lookup"><span data-stu-id="4d26b-158">May be null.</span></span></param>
        <param name="projectCollection"><span data-ttu-id="4d26b-159">Kolekcja projektów.</span><span class="sxs-lookup"><span data-stu-id="4d26b-159">Project collection.</span></span></param>
        <summary><span data-ttu-id="4d26b-160">Tworzy nowe wystąpienie projektu i inicjuje ją z pliku danego projektu, przy użyciu podanej właściwości globalne, wersja narzędzi, wersję podzestawu narzędzi i kolekcji projektów.</span><span class="sxs-lookup"><span data-stu-id="4d26b-160">Creates a new project instance and initializes it from the given project file, using the given global properties, tools version, sub toolset version, and project collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4d26b-161">Nie <xref:Microsoft.Build.Evaluation.Project> obiekt zostanie utworzony.</span><span class="sxs-lookup"><span data-stu-id="4d26b-161">No intermediate <xref:Microsoft.Build.Evaluation.Project> object is created.</span></span> <span data-ttu-id="4d26b-162">Jest to przydatne, jeśli projekt zostanie skompilowany, ale nie wyświetlony lub edytowany.</span><span class="sxs-lookup"><span data-stu-id="4d26b-162">This is useful if a project is going to be built, but not displayed or edited.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddItem">
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="4d26b-163">Dodaje do projektu element bez metadanych.</span><span class="sxs-lookup"><span data-stu-id="4d26b-163">Adds an item with no metadata to the project.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddItem">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Execution.ProjectItemInstance AddItem (string itemType, string evaluatedInclude);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Build.Execution.ProjectItemInstance AddItem(string itemType, string evaluatedInclude) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.AddItem(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddItem (itemType As String, evaluatedInclude As String) As ProjectItemInstance" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Build::Execution::ProjectItemInstance ^ AddItem(System::String ^ itemType, System::String ^ evaluatedInclude);" />
      <MemberSignature Language="F#" Value="member this.AddItem : string * string -&gt; Microsoft.Build.Execution.ProjectItemInstance" Usage="projectInstance.AddItem (itemType, evaluatedInclude)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Execution.ProjectItemInstance</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="itemType" Type="System.String" />
        <Parameter Name="evaluatedInclude" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="itemType"><span data-ttu-id="4d26b-164">Typ elementu do dodania.</span><span class="sxs-lookup"><span data-stu-id="4d26b-164">The item type of the item to be added.</span></span></param>
        <param name="evaluatedInclude"><span data-ttu-id="4d26b-165">Oceniono Dołącz atrybut elementu.</span><span class="sxs-lookup"><span data-stu-id="4d26b-165">The evaluated Include attribute of the item.</span></span></param>
        <summary><span data-ttu-id="4d26b-166">Dodaje do projektu element bez metadanych.</span><span class="sxs-lookup"><span data-stu-id="4d26b-166">Adds an item with no metadata to the project.</span></span></summary>
        <returns><span data-ttu-id="4d26b-167">Nowy element.</span><span class="sxs-lookup"><span data-stu-id="4d26b-167">The new item.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4d26b-168">Firma Microsoft nie wykona ProjectItemInstance, aby upewnić się, że nie mamy jeden, który jest już używany przez inny ProjectInstance.</span><span class="sxs-lookup"><span data-stu-id="4d26b-168">We don't take a ProjectItemInstance to make sure we don't have one that's already in use by another ProjectInstance.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddItem">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Execution.ProjectItemInstance AddItem (string itemType, string evaluatedInclude, System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;string,string&gt;&gt; metadata);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Build.Execution.ProjectItemInstance AddItem(string itemType, string evaluatedInclude, class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;string, string&gt;&gt; metadata) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.AddItem(System.String,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}})" />
      <MemberSignature Language="VB.NET" Value="Public Function AddItem (itemType As String, evaluatedInclude As String, metadata As IEnumerable(Of KeyValuePair(Of String, String))) As ProjectItemInstance" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Build::Execution::ProjectItemInstance ^ AddItem(System::String ^ itemType, System::String ^ evaluatedInclude, System::Collections::Generic::IEnumerable&lt;System::Collections::Generic::KeyValuePair&lt;System::String ^, System::String ^&gt;&gt; ^ metadata);" />
      <MemberSignature Language="F#" Value="member this.AddItem : string * string * seq&lt;System.Collections.Generic.KeyValuePair&lt;string, string&gt;&gt; -&gt; Microsoft.Build.Execution.ProjectItemInstance" Usage="projectInstance.AddItem (itemType, evaluatedInclude, metadata)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Execution.ProjectItemInstance</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="itemType" Type="System.String" />
        <Parameter Name="evaluatedInclude" Type="System.String" />
        <Parameter Name="metadata" Type="System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.String&gt;&gt;" />
      </Parameters>
      <Docs>
        <param name="itemType"><span data-ttu-id="4d26b-169">Typ elementu do dodania.</span><span class="sxs-lookup"><span data-stu-id="4d26b-169">The item type of the item to be added.</span></span></param>
        <param name="evaluatedInclude"><span data-ttu-id="4d26b-170">Oceniono Dołącz atrybut elementu.</span><span class="sxs-lookup"><span data-stu-id="4d26b-170">The evaluated Include attribute of the item.</span></span></param>
        <param name="metadata"><span data-ttu-id="4d26b-171">Metadane elementu.</span><span class="sxs-lookup"><span data-stu-id="4d26b-171">The metadata of the item.</span></span></param>
        <summary><span data-ttu-id="4d26b-172">Dodaje element z określonych metadanych do projektu.</span><span class="sxs-lookup"><span data-stu-id="4d26b-172">Adds an item with the given metadata to the project.</span></span></summary>
        <returns><span data-ttu-id="4d26b-173">Zwraca nowy element.</span><span class="sxs-lookup"><span data-stu-id="4d26b-173">Return the new item.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4d26b-174">Firma Microsoft nie wykona ProjectItemInstance, aby upewnić się, że nie mamy jeden, który jest już używany przez inny ProjectInstance.</span><span class="sxs-lookup"><span data-stu-id="4d26b-174">We don't take a ProjectItemInstance to make sure we don't have one that's already in use by another ProjectInstance.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Build">
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="4d26b-175">Tworzy domyślne elementy docelowe projektu za pomocą rejestratorów dla kolekcji projektów.</span><span class="sxs-lookup"><span data-stu-id="4d26b-175">Builds the default targets of the project with loggers of the project collection.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Build">
      <MemberSignature Language="C#" Value="public bool Build ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Build() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.Build" />
      <MemberSignature Language="VB.NET" Value="Public Function Build () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Build();" />
      <MemberSignature Language="F#" Value="member this.Build : unit -&gt; bool" Usage="projectInstance.Build " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="4d26b-176">Tworzy domyślne elementy docelowe projektu za pomocą rejestratorów dla kolekcji projektów.</span><span class="sxs-lookup"><span data-stu-id="4d26b-176">Builds the default targets of the project with loggers of the project collection.</span></span></summary>
        <returns><span data-ttu-id="4d26b-177"><see langword="true" /> Jeśli kompilacja się powiedzie; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="4d26b-177"><see langword="true" /> if the build succeeds; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Build">
      <MemberSignature Language="C#" Value="public bool Build (System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Framework.ILogger&gt; loggers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Build(class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Build.Framework.ILogger&gt; loggers) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.Build(System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger})" />
      <MemberSignature Language="VB.NET" Value="Public Function Build (loggers As IEnumerable(Of ILogger)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Build(System::Collections::Generic::IEnumerable&lt;Microsoft::Build::Framework::ILogger ^&gt; ^ loggers);" />
      <MemberSignature Language="F#" Value="member this.Build : seq&lt;Microsoft.Build.Framework.ILogger&gt; -&gt; bool" Usage="projectInstance.Build loggers" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="loggers" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Framework.ILogger&gt;" />
      </Parameters>
      <Docs>
        <param name="loggers"><span data-ttu-id="4d26b-178">Rejestratory do użytku podczas kompilacji.</span><span class="sxs-lookup"><span data-stu-id="4d26b-178">The loggers to use for the build.</span></span> <span data-ttu-id="4d26b-179">Może mieć wartość zerową.</span><span class="sxs-lookup"><span data-stu-id="4d26b-179">May be null.</span></span></param>
        <summary><span data-ttu-id="4d26b-180">Tworzy domyślne elementy docelowe projektu z danym rejestratorów.</span><span class="sxs-lookup"><span data-stu-id="4d26b-180">Builds the default targets of the project with the given loggers.</span></span></summary>
        <returns><span data-ttu-id="4d26b-181"><see langword="true" /> Jeśli kompilacja się powiedzie; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="4d26b-181"><see langword="true" /> if the build succeeds; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4d26b-182">Generuje wyjątek InvalidOperationException, jeśli dowolny z dostarczonych rejestratorów jest już dołączony do usługi rejestrowania.</span><span class="sxs-lookup"><span data-stu-id="4d26b-182">Throws InvalidOperationException if any of the loggers supplied are already attached to the logging service.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Build">
      <MemberSignature Language="C#" Value="public bool Build (System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Framework.ILogger&gt; loggers, System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Logging.ForwardingLoggerRecord&gt; remoteLoggers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Build(class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Build.Framework.ILogger&gt; loggers, class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Build.Logging.ForwardingLoggerRecord&gt; remoteLoggers) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.Build(System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger},System.Collections.Generic.IEnumerable{Microsoft.Build.Logging.ForwardingLoggerRecord})" />
      <MemberSignature Language="VB.NET" Value="Public Function Build (loggers As IEnumerable(Of ILogger), remoteLoggers As IEnumerable(Of ForwardingLoggerRecord)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Build(System::Collections::Generic::IEnumerable&lt;Microsoft::Build::Framework::ILogger ^&gt; ^ loggers, System::Collections::Generic::IEnumerable&lt;Microsoft::Build::Logging::ForwardingLoggerRecord ^&gt; ^ remoteLoggers);" />
      <MemberSignature Language="F#" Value="member this.Build : seq&lt;Microsoft.Build.Framework.ILogger&gt; * seq&lt;Microsoft.Build.Logging.ForwardingLoggerRecord&gt; -&gt; bool" Usage="projectInstance.Build (loggers, remoteLoggers)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="loggers" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Framework.ILogger&gt;" />
        <Parameter Name="remoteLoggers" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Logging.ForwardingLoggerRecord&gt;" />
      </Parameters>
      <Docs>
        <param name="loggers"><span data-ttu-id="4d26b-183">Rejestratory do użytku podczas kompilacji.</span><span class="sxs-lookup"><span data-stu-id="4d26b-183">The loggers to use for the build.</span></span> <span data-ttu-id="4d26b-184">Może mieć wartość zerową.</span><span class="sxs-lookup"><span data-stu-id="4d26b-184">May be null.</span></span></param>
        <param name="remoteLoggers"><span data-ttu-id="4d26b-185">Zdalne rejestratory do użytku na rzecz kompilacji.</span><span class="sxs-lookup"><span data-stu-id="4d26b-185">The remote loggers to use for the build.</span></span> <span data-ttu-id="4d26b-186">Może mieć wartość zerową.</span><span class="sxs-lookup"><span data-stu-id="4d26b-186">May be null.</span></span></param>
        <summary><span data-ttu-id="4d26b-187">Tworzy domyślne elementy docelowe projektu z danym rejestratorów i zdalne rejestratory.</span><span class="sxs-lookup"><span data-stu-id="4d26b-187">Builds the default targets of the project with the given loggers and remote loggers.</span></span></summary>
        <returns><span data-ttu-id="4d26b-188"><see langword="true" /> Jeśli kompilacja się powiedzie; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="4d26b-188"><see langword="true" /> if the build succeeds; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4d26b-189">Generuje wyjątek InvalidOperationException, jeśli dowolny z dostarczonych rejestratorów jest już dołączony do usługi rejestrowania.</span><span class="sxs-lookup"><span data-stu-id="4d26b-189">Throws InvalidOperationException if any of the loggers supplied are already attached to the logging service.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Build">
      <MemberSignature Language="C#" Value="public bool Build (string target, System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Framework.ILogger&gt; loggers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Build(string target, class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Build.Framework.ILogger&gt; loggers) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.Build(System.String,System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger})" />
      <MemberSignature Language="VB.NET" Value="Public Function Build (target As String, loggers As IEnumerable(Of ILogger)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Build(System::String ^ target, System::Collections::Generic::IEnumerable&lt;Microsoft::Build::Framework::ILogger ^&gt; ^ loggers);" />
      <MemberSignature Language="F#" Value="member this.Build : string * seq&lt;Microsoft.Build.Framework.ILogger&gt; -&gt; bool" Usage="projectInstance.Build (target, loggers)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.String" />
        <Parameter Name="loggers" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Framework.ILogger&gt;" />
      </Parameters>
      <Docs>
        <param name="target"><span data-ttu-id="4d26b-190">Element docelowy do skompilowania.</span><span class="sxs-lookup"><span data-stu-id="4d26b-190">The target to build.</span></span> <span data-ttu-id="4d26b-191">Może mieć wartość zerową.</span><span class="sxs-lookup"><span data-stu-id="4d26b-191">May be null.</span></span></param>
        <param name="loggers"><span data-ttu-id="4d26b-192">Rejestratory do użytku podczas kompilacji.</span><span class="sxs-lookup"><span data-stu-id="4d26b-192">The loggers to use for the build.</span></span> <span data-ttu-id="4d26b-193">Może mieć wartość zerową.</span><span class="sxs-lookup"><span data-stu-id="4d26b-193">May be null.</span></span></param>
        <summary><span data-ttu-id="4d26b-194">Kompilacje docelowej projektu z danym rejestratorów.</span><span class="sxs-lookup"><span data-stu-id="4d26b-194">Builds the given target of the project with the given loggers.</span></span></summary>
        <returns><span data-ttu-id="4d26b-195"><see langword="true" /> Jeśli kompilacja się powiedzie; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="4d26b-195"><see langword="true" /> if the build succeeds; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4d26b-196">Generuje wyjątek InvalidOperationException, jeśli dowolny z dostarczonych rejestratorów jest już dołączony do usługi rejestrowania.</span><span class="sxs-lookup"><span data-stu-id="4d26b-196">Throws InvalidOperationException if any of the loggers supplied are already attached to the logging service.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Build">
      <MemberSignature Language="C#" Value="public bool Build (string[] targets, System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Framework.ILogger&gt; loggers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Build(string[] targets, class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Build.Framework.ILogger&gt; loggers) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.Build(System.String[],System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger})" />
      <MemberSignature Language="VB.NET" Value="Public Function Build (targets As String(), loggers As IEnumerable(Of ILogger)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Build(cli::array &lt;System::String ^&gt; ^ targets, System::Collections::Generic::IEnumerable&lt;Microsoft::Build::Framework::ILogger ^&gt; ^ loggers);" />
      <MemberSignature Language="F#" Value="member this.Build : string[] * seq&lt;Microsoft.Build.Framework.ILogger&gt; -&gt; bool" Usage="projectInstance.Build (targets, loggers)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targets" Type="System.String[]" />
        <Parameter Name="loggers" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Framework.ILogger&gt;" />
      </Parameters>
      <Docs>
        <param name="targets"><span data-ttu-id="4d26b-197">Cele, które mają być poddane kompilacji.</span><span class="sxs-lookup"><span data-stu-id="4d26b-197">The targets to build.</span></span> <span data-ttu-id="4d26b-198">Może mieć wartość zerową.</span><span class="sxs-lookup"><span data-stu-id="4d26b-198">May be null.</span></span></param>
        <param name="loggers"><span data-ttu-id="4d26b-199">Rejestratory do użytku podczas kompilacji.</span><span class="sxs-lookup"><span data-stu-id="4d26b-199">The loggers to use for the build.</span></span> <span data-ttu-id="4d26b-200">Może mieć wartość zerową.</span><span class="sxs-lookup"><span data-stu-id="4d26b-200">May be null.</span></span></param>
        <summary><span data-ttu-id="4d26b-201">Kompilacje wartościami docelowymi projektu z danym rejestratorów.</span><span class="sxs-lookup"><span data-stu-id="4d26b-201">Builds the given targets of the project with the given loggers.</span></span></summary>
        <returns><span data-ttu-id="4d26b-202"><see langword="true" /> Jeśli kompilacja się powiedzie; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="4d26b-202"><see langword="true" /> if the build succeeds; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4d26b-203">Generuje wyjątek InvalidOperationException, jeśli dowolny z dostarczonych rejestratorów jest już dołączony do usługi rejestrowania.</span><span class="sxs-lookup"><span data-stu-id="4d26b-203">Throws InvalidOperationException if any of the loggers supplied are already attached to the logging service.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Build">
      <MemberSignature Language="C#" Value="public bool Build (string target, System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Framework.ILogger&gt; loggers, System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Logging.ForwardingLoggerRecord&gt; remoteLoggers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Build(string target, class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Build.Framework.ILogger&gt; loggers, class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Build.Logging.ForwardingLoggerRecord&gt; remoteLoggers) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.Build(System.String,System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger},System.Collections.Generic.IEnumerable{Microsoft.Build.Logging.ForwardingLoggerRecord})" />
      <MemberSignature Language="VB.NET" Value="Public Function Build (target As String, loggers As IEnumerable(Of ILogger), remoteLoggers As IEnumerable(Of ForwardingLoggerRecord)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Build(System::String ^ target, System::Collections::Generic::IEnumerable&lt;Microsoft::Build::Framework::ILogger ^&gt; ^ loggers, System::Collections::Generic::IEnumerable&lt;Microsoft::Build::Logging::ForwardingLoggerRecord ^&gt; ^ remoteLoggers);" />
      <MemberSignature Language="F#" Value="member this.Build : string * seq&lt;Microsoft.Build.Framework.ILogger&gt; * seq&lt;Microsoft.Build.Logging.ForwardingLoggerRecord&gt; -&gt; bool" Usage="projectInstance.Build (target, loggers, remoteLoggers)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.String" />
        <Parameter Name="loggers" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Framework.ILogger&gt;" />
        <Parameter Name="remoteLoggers" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Logging.ForwardingLoggerRecord&gt;" />
      </Parameters>
      <Docs>
        <param name="target"><span data-ttu-id="4d26b-204">Element docelowy do skompilowania.</span><span class="sxs-lookup"><span data-stu-id="4d26b-204">The target to build.</span></span> <span data-ttu-id="4d26b-205">Może mieć wartość zerową.</span><span class="sxs-lookup"><span data-stu-id="4d26b-205">May be null.</span></span></param>
        <param name="loggers"><span data-ttu-id="4d26b-206">Rejestratory do użytku podczas kompilacji.</span><span class="sxs-lookup"><span data-stu-id="4d26b-206">The loggers to use for the build.</span></span> <span data-ttu-id="4d26b-207">Może mieć wartość zerową.</span><span class="sxs-lookup"><span data-stu-id="4d26b-207">May be null.</span></span></param>
        <param name="remoteLoggers"><span data-ttu-id="4d26b-208">Zdalne rejestratory do użytku na rzecz kompilacji.</span><span class="sxs-lookup"><span data-stu-id="4d26b-208">The remote loggers to use for the build.</span></span> <span data-ttu-id="4d26b-209">Może mieć wartość zerową.</span><span class="sxs-lookup"><span data-stu-id="4d26b-209">May be null.</span></span></param>
        <summary><span data-ttu-id="4d26b-210">Tworzy docelowej projektu z danym rejestratorów i zdalne rejestratory.</span><span class="sxs-lookup"><span data-stu-id="4d26b-210">Builds the given target of the project with the given loggers and remote loggers.</span></span></summary>
        <returns><span data-ttu-id="4d26b-211"><see langword="true" /> Jeśli kompilacja się powiedzie; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="4d26b-211"><see langword="true" /> if the build succeeds; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4d26b-212">Generuje wyjątek InvalidOperationException, jeśli dowolny z dostarczonych rejestratorów jest już dołączony do usługi rejestrowania.</span><span class="sxs-lookup"><span data-stu-id="4d26b-212">Throws InvalidOperationException if any of the loggers supplied are already attached to the logging service.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Build">
      <MemberSignature Language="C#" Value="public bool Build (string[] targets, System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Framework.ILogger&gt; loggers, out System.Collections.Generic.IDictionary&lt;string,Microsoft.Build.Execution.TargetResult&gt; targetOutputs);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Build(string[] targets, class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Build.Framework.ILogger&gt; loggers, [out] class System.Collections.Generic.IDictionary`2&lt;string, class Microsoft.Build.Execution.TargetResult&gt;&amp; targetOutputs) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.Build(System.String[],System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger},System.Collections.Generic.IDictionary{System.String,Microsoft.Build.Execution.TargetResult}@)" />
      <MemberSignature Language="VB.NET" Value="Public Function Build (targets As String(), loggers As IEnumerable(Of ILogger), ByRef targetOutputs As IDictionary(Of String, TargetResult)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Build(cli::array &lt;System::String ^&gt; ^ targets, System::Collections::Generic::IEnumerable&lt;Microsoft::Build::Framework::ILogger ^&gt; ^ loggers, [Runtime::InteropServices::Out] System::Collections::Generic::IDictionary&lt;System::String ^, Microsoft::Build::Execution::TargetResult ^&gt; ^ % targetOutputs);" />
      <MemberSignature Language="F#" Value="member this.Build : string[] * seq&lt;Microsoft.Build.Framework.ILogger&gt; *  -&gt; bool" Usage="projectInstance.Build (targets, loggers, targetOutputs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targets" Type="System.String[]" />
        <Parameter Name="loggers" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Framework.ILogger&gt;" />
        <Parameter Name="targetOutputs" Type="System.Collections.Generic.IDictionary&lt;System.String,Microsoft.Build.Execution.TargetResult&gt;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="targets"><span data-ttu-id="4d26b-213">Lista elementów docelowych do kompilacji.</span><span class="sxs-lookup"><span data-stu-id="4d26b-213">List of targets to build.</span></span> <span data-ttu-id="4d26b-214">Może mieć wartość zerową.</span><span class="sxs-lookup"><span data-stu-id="4d26b-214">May be null.</span></span></param>
        <param name="loggers"><span data-ttu-id="4d26b-215">Lista wyliczenia rejestratory do użytku podczas kompilowania obiektów docelowych.</span><span class="sxs-lookup"><span data-stu-id="4d26b-215">Enumerated list of loggers to use for building targets.</span></span></param>
        <param name="targetOutputs"><span data-ttu-id="4d26b-216">Dane wyjściowe kompilacji docelowej.</span><span class="sxs-lookup"><span data-stu-id="4d26b-216">Outputs of target builds.</span></span></param>
        <summary><span data-ttu-id="4d26b-217">Twórz rejestratorów określona lista elementów docelowych.</span><span class="sxs-lookup"><span data-stu-id="4d26b-217">Build a list of targets with specified loggers.</span></span> <span data-ttu-id="4d26b-218">Obiekty docelowe może mieć wartości null.</span><span class="sxs-lookup"><span data-stu-id="4d26b-218">Targets may be null.</span></span> <span data-ttu-id="4d26b-219">Rejestratory może mieć wartości null.</span><span class="sxs-lookup"><span data-stu-id="4d26b-219">Loggers may be null.</span></span></summary>
        <returns><span data-ttu-id="4d26b-220"><see langword="true" /> w przypadku powodzenia, wartość false w przypadku niepowodzenia.</span><span class="sxs-lookup"><span data-stu-id="4d26b-220"><see langword="true" /> on success, false on failure.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4d26b-221">Generuje wyjątek InvalidOperationException, jeśli dowolny z dostarczonych rejestratorów zostały już dołączone do usługi rejestrowania, które firma Microsoft przekazano.</span><span class="sxs-lookup"><span data-stu-id="4d26b-221">If any of the loggers supplied are already attached to the logging service we were passed, throws InvalidOperationException.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Build">
      <MemberSignature Language="C#" Value="public bool Build (string[] targets, System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Framework.ILogger&gt; loggers, System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Logging.ForwardingLoggerRecord&gt; remoteLoggers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Build(string[] targets, class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Build.Framework.ILogger&gt; loggers, class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Build.Logging.ForwardingLoggerRecord&gt; remoteLoggers) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.Build(System.String[],System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger},System.Collections.Generic.IEnumerable{Microsoft.Build.Logging.ForwardingLoggerRecord})" />
      <MemberSignature Language="VB.NET" Value="Public Function Build (targets As String(), loggers As IEnumerable(Of ILogger), remoteLoggers As IEnumerable(Of ForwardingLoggerRecord)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Build(cli::array &lt;System::String ^&gt; ^ targets, System::Collections::Generic::IEnumerable&lt;Microsoft::Build::Framework::ILogger ^&gt; ^ loggers, System::Collections::Generic::IEnumerable&lt;Microsoft::Build::Logging::ForwardingLoggerRecord ^&gt; ^ remoteLoggers);" />
      <MemberSignature Language="F#" Value="member this.Build : string[] * seq&lt;Microsoft.Build.Framework.ILogger&gt; * seq&lt;Microsoft.Build.Logging.ForwardingLoggerRecord&gt; -&gt; bool" Usage="projectInstance.Build (targets, loggers, remoteLoggers)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targets" Type="System.String[]" />
        <Parameter Name="loggers" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Framework.ILogger&gt;" />
        <Parameter Name="remoteLoggers" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Logging.ForwardingLoggerRecord&gt;" />
      </Parameters>
      <Docs>
        <param name="targets"><span data-ttu-id="4d26b-222">Cele, które mają być poddane kompilacji.</span><span class="sxs-lookup"><span data-stu-id="4d26b-222">The targets to build.</span></span> <span data-ttu-id="4d26b-223">Może mieć wartość zerową.</span><span class="sxs-lookup"><span data-stu-id="4d26b-223">May be null.</span></span></param>
        <param name="loggers"><span data-ttu-id="4d26b-224">Rejestratory do użytku podczas kompilacji.</span><span class="sxs-lookup"><span data-stu-id="4d26b-224">The loggers to use for the build.</span></span> <span data-ttu-id="4d26b-225">Może mieć wartość zerową.</span><span class="sxs-lookup"><span data-stu-id="4d26b-225">May be null.</span></span></param>
        <param name="remoteLoggers"><span data-ttu-id="4d26b-226">Zdalne rejestratory do użytku na rzecz kompilacji.</span><span class="sxs-lookup"><span data-stu-id="4d26b-226">The remote loggers to use for the build.</span></span> <span data-ttu-id="4d26b-227">Może mieć wartość zerową.</span><span class="sxs-lookup"><span data-stu-id="4d26b-227">May be null.</span></span></param>
        <summary><span data-ttu-id="4d26b-228">Tworzy wartościami docelowymi projektu z danym rejestratorów i zdalne rejestratory.</span><span class="sxs-lookup"><span data-stu-id="4d26b-228">Builds the given targets of the project with the given loggers and remote loggers.</span></span></summary>
        <returns><span data-ttu-id="4d26b-229"><see langword="true" /> Jeśli kompilacja się powiedzie; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="4d26b-229"><see langword="true" /> if the build succeeds; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4d26b-230">Generuje wyjątek InvalidOperationException, jeśli dowolny z dostarczonych rejestratorów jest już dołączony do usługi rejestrowania.</span><span class="sxs-lookup"><span data-stu-id="4d26b-230">Throws InvalidOperationException if any of the loggers supplied are already attached to the logging service.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Build">
      <MemberSignature Language="C#" Value="public bool Build (string[] targets, System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Framework.ILogger&gt; loggers, System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Logging.ForwardingLoggerRecord&gt; remoteLoggers, out System.Collections.Generic.IDictionary&lt;string,Microsoft.Build.Execution.TargetResult&gt; targetOutputs);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Build(string[] targets, class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Build.Framework.ILogger&gt; loggers, class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Build.Logging.ForwardingLoggerRecord&gt; remoteLoggers, [out] class System.Collections.Generic.IDictionary`2&lt;string, class Microsoft.Build.Execution.TargetResult&gt;&amp; targetOutputs) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.Build(System.String[],System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger},System.Collections.Generic.IEnumerable{Microsoft.Build.Logging.ForwardingLoggerRecord},System.Collections.Generic.IDictionary{System.String,Microsoft.Build.Execution.TargetResult}@)" />
      <MemberSignature Language="VB.NET" Value="Public Function Build (targets As String(), loggers As IEnumerable(Of ILogger), remoteLoggers As IEnumerable(Of ForwardingLoggerRecord), ByRef targetOutputs As IDictionary(Of String, TargetResult)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Build(cli::array &lt;System::String ^&gt; ^ targets, System::Collections::Generic::IEnumerable&lt;Microsoft::Build::Framework::ILogger ^&gt; ^ loggers, System::Collections::Generic::IEnumerable&lt;Microsoft::Build::Logging::ForwardingLoggerRecord ^&gt; ^ remoteLoggers, [Runtime::InteropServices::Out] System::Collections::Generic::IDictionary&lt;System::String ^, Microsoft::Build::Execution::TargetResult ^&gt; ^ % targetOutputs);" />
      <MemberSignature Language="F#" Value="member this.Build : string[] * seq&lt;Microsoft.Build.Framework.ILogger&gt; * seq&lt;Microsoft.Build.Logging.ForwardingLoggerRecord&gt; *  -&gt; bool" Usage="projectInstance.Build (targets, loggers, remoteLoggers, targetOutputs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targets" Type="System.String[]" />
        <Parameter Name="loggers" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Framework.ILogger&gt;" />
        <Parameter Name="remoteLoggers" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Logging.ForwardingLoggerRecord&gt;" />
        <Parameter Name="targetOutputs" Type="System.Collections.Generic.IDictionary&lt;System.String,Microsoft.Build.Execution.TargetResult&gt;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="targets"><span data-ttu-id="4d26b-231">Cele, które mają być poddane kompilacji.</span><span class="sxs-lookup"><span data-stu-id="4d26b-231">The targets to build.</span></span> <span data-ttu-id="4d26b-232">Może mieć wartość zerową.</span><span class="sxs-lookup"><span data-stu-id="4d26b-232">May be null.</span></span></param>
        <param name="loggers"><span data-ttu-id="4d26b-233">Rejestratory do użytku podczas kompilacji.</span><span class="sxs-lookup"><span data-stu-id="4d26b-233">The loggers to use for the build.</span></span> <span data-ttu-id="4d26b-234">Może mieć wartość zerową.</span><span class="sxs-lookup"><span data-stu-id="4d26b-234">May be null.</span></span></param>
        <param name="remoteLoggers"><span data-ttu-id="4d26b-235">Zdalne rejestratory do użytku na rzecz kompilacji.</span><span class="sxs-lookup"><span data-stu-id="4d26b-235">The remote loggers to use for the build.</span></span> <span data-ttu-id="4d26b-236">Może mieć wartość zerową.</span><span class="sxs-lookup"><span data-stu-id="4d26b-236">May be null.</span></span></param>
        <param name="targetOutputs"><span data-ttu-id="4d26b-237">Docelowe produkty wyjściowe.</span><span class="sxs-lookup"><span data-stu-id="4d26b-237">The target outputs.</span></span></param>
        <summary><span data-ttu-id="4d26b-238">Tworzy wartościami docelowymi z danym docelowe produkty wyjściowe i danym rejestratorów i zdalne rejestratory.</span><span class="sxs-lookup"><span data-stu-id="4d26b-238">Builds the given targets with the given target outputs and with the given loggers and remote loggers.</span></span></summary>
        <returns><span data-ttu-id="4d26b-239"><see langword="true" /> Jeśli kompilacja się powiedzie; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="4d26b-239"><see langword="true" /> if the build succeeds; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4d26b-240">Generuje wyjątek InvalidOperationException, jeśli dowolny z dostarczonych rejestratorów jest już dołączony do usługi rejestrowania.</span><span class="sxs-lookup"><span data-stu-id="4d26b-240">Throws InvalidOperationException if any of the loggers supplied are already attached to the logging service.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="DeepCopy">
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="4d26b-241">Tworzy niezależnych głębokiego klonu tego projektu i wszystko w niej.</span><span class="sxs-lookup"><span data-stu-id="4d26b-241">Creates an independent, deep clone of this project and everything in it.</span></span> <span data-ttu-id="4d26b-242">Przydatne do kompilowania jednego pliku lub do przechowywania wyników kompilacji między kompilacjami.</span><span class="sxs-lookup"><span data-stu-id="4d26b-242">Useful for compiling a single file or for keeping build results between builds.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DeepCopy">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Execution.ProjectInstance DeepCopy ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Build.Execution.ProjectInstance DeepCopy() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.DeepCopy" />
      <MemberSignature Language="VB.NET" Value="Public Function DeepCopy () As ProjectInstance" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Build::Execution::ProjectInstance ^ DeepCopy();" />
      <MemberSignature Language="F#" Value="member this.DeepCopy : unit -&gt; Microsoft.Build.Execution.ProjectInstance" Usage="projectInstance.DeepCopy " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Execution.ProjectInstance</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="4d26b-243">Tworzy niezależnych głębokiego klonu tego projektu i wszystko w niej.</span><span class="sxs-lookup"><span data-stu-id="4d26b-243">Creates an independent, deep clone of this project and everything in it.</span></span> <span data-ttu-id="4d26b-244">Klonowanie ma ten sam zmienność co oryginalny.</span><span class="sxs-lookup"><span data-stu-id="4d26b-244">Clone has the same mutability as the original.</span></span> <span data-ttu-id="4d26b-245">Przydatne do kompilowania jednego pliku lub do przechowywania wyników kompilacji między kompilacjami.</span><span class="sxs-lookup"><span data-stu-id="4d26b-245">Useful for compiling a single file or for keeping build results between builds.</span></span></summary>
        <returns><span data-ttu-id="4d26b-246">Tworzy niezależnego i głębokiego klonu tego projektu.</span><span class="sxs-lookup"><span data-stu-id="4d26b-246">Creates an independent, deep clone of this project.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeepCopy">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Execution.ProjectInstance DeepCopy (bool isImmutable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Build.Execution.ProjectInstance DeepCopy(bool isImmutable) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.DeepCopy(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function DeepCopy (isImmutable As Boolean) As ProjectInstance" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Build::Execution::ProjectInstance ^ DeepCopy(bool isImmutable);" />
      <MemberSignature Language="F#" Value="member this.DeepCopy : bool -&gt; Microsoft.Build.Execution.ProjectInstance" Usage="projectInstance.DeepCopy isImmutable" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Execution.ProjectInstance</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="isImmutable" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="isImmutable"><span data-ttu-id="4d26b-247">Flaga wskazująca, sklonuj zmienność.</span><span class="sxs-lookup"><span data-stu-id="4d26b-247">Flag indicating clone mutability.</span></span></param>
        <summary><span data-ttu-id="4d26b-248">Tworzy niezależnych głębokiego klonu tego projektu i wszystko, z określonym zmienność.</span><span class="sxs-lookup"><span data-stu-id="4d26b-248">Creates an independent, deep clone of this project and everything in it, with specified mutability.</span></span> <span data-ttu-id="4d26b-249">Przydatne do kompilowania jednego pliku lub do przechowywania wyników kompilacji między kompilacjami.</span><span class="sxs-lookup"><span data-stu-id="4d26b-249">Useful for compiling a single file or for keeping build results between builds.</span></span></summary>
        <returns><span data-ttu-id="4d26b-250">Niezależne, głębokiego klonowania tego projektu, przy użyciu określonego zmienność.</span><span class="sxs-lookup"><span data-stu-id="4d26b-250">An independent, deep clone of this project, with specified mutability.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultTargets">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.List&lt;string&gt; DefaultTargets { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.List`1&lt;string&gt; DefaultTargets" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Execution.ProjectInstance.DefaultTargets" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DefaultTargets As List(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::List&lt;System::String ^&gt; ^ DefaultTargets { System::Collections::Generic::List&lt;System::String ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DefaultTargets : System.Collections.Generic.List&lt;string&gt;" Usage="Microsoft.Build.Execution.ProjectInstance.DefaultTargets" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.Build.Evaluation.IEvaluatorData`4.DefaultTargets</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.List&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4d26b-251">Pobiera lub ustawia listę domyślnych elementów docelowych dla tego projektu.</span><span class="sxs-lookup"><span data-stu-id="4d26b-251">Gets or sets the list of default targets for this project.</span></span></summary>
        <value><span data-ttu-id="4d26b-252">Lista domyślnych elementów docelowych dla tego projektu.</span><span class="sxs-lookup"><span data-stu-id="4d26b-252">The list of default targets for this project.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4d26b-253">Domyślne elementy docelowe są tworzone, jeśli nie są jawnie określone.</span><span class="sxs-lookup"><span data-stu-id="4d26b-253">Default targets are built if no targets are explicitly specified.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Directory">
      <MemberSignature Language="C#" Value="public string Directory { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Directory" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Execution.ProjectInstance.Directory" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Directory As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Directory { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Directory : string" Usage="Microsoft.Build.Execution.ProjectInstance.Directory" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.Build.Evaluation.IEvaluatorData`4.Directory</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4d26b-254">Pobiera katalog główny projektu.</span><span class="sxs-lookup"><span data-stu-id="4d26b-254">Gets the project root directory.</span></span> <span data-ttu-id="4d26b-255">Używane do oceny ścieżki względne i ustawianie bieżącego katalogu podczas kompilacji.</span><span class="sxs-lookup"><span data-stu-id="4d26b-255">Used for evaluation of relative paths and setting the current directory during build.</span></span> <span data-ttu-id="4d26b-256">Nigdy nie ma wartość null: projekty, które nie został załadowany z dysku korzystały z bieżącego katalogu od czasu uruchomienia kompilacji.</span><span class="sxs-lookup"><span data-stu-id="4d26b-256">Is never null: projects not loaded from disk use the current directory from the time the build started.</span></span></summary>
        <value><span data-ttu-id="4d26b-257">Katalog główny projektu, który nigdy nie ma wartość null.</span><span class="sxs-lookup"><span data-stu-id="4d26b-257">The project root directory, which is never null.</span></span> <span data-ttu-id="4d26b-258">Projekty, które nie zostały załadowane z dysku zwraca bieżący katalog w momencie uruchomienia kompilacji.</span><span class="sxs-lookup"><span data-stu-id="4d26b-258">Projects not loaded from disk return the current directory at the time the build was started.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EvaluateCondition">
      <MemberSignature Language="C#" Value="public bool EvaluateCondition (string condition);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool EvaluateCondition(string condition) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.EvaluateCondition(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function EvaluateCondition (condition As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool EvaluateCondition(System::String ^ condition);" />
      <MemberSignature Language="F#" Value="abstract member EvaluateCondition : string -&gt; bool&#xA;override this.EvaluateCondition : string -&gt; bool" Usage="projectInstance.EvaluateCondition condition" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Build.Evaluation.IEvaluatorData`4.EvaluateCondition(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="condition" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="condition"><span data-ttu-id="4d26b-259">Ciąg do wyodrębnienia.</span><span class="sxs-lookup"><span data-stu-id="4d26b-259">The string to be expanded.</span></span></param>
        <summary><span data-ttu-id="4d26b-260">Daje w wyniku podanego ciągu jako warunek, rozwijając elementów i właściwości, za pomocą bieżących elementów i właściwości dostępne, następnie wykonując logiczne oceny.</span><span class="sxs-lookup"><span data-stu-id="4d26b-260">Evaluates the provided string as a condition by expanding items and properties, using the current items and properties available, then doing a logical evaluation.</span></span></summary>
        <returns><span data-ttu-id="4d26b-261"><see langword="true" /> Jeśli ciąg zwraca wartość true; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="4d26b-261"><see langword="true" /> if the string evaluates to true; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4d26b-262">Jest to przydatne do okna bezpośredniego.</span><span class="sxs-lookup"><span data-stu-id="4d26b-262">This is useful for the immediate window.</span></span>  
  
 <span data-ttu-id="4d26b-263">Nie jest powiększony wyrażenia bez metadanych.</span><span class="sxs-lookup"><span data-stu-id="4d26b-263">Does not expand bare metadata expressions.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExpandString">
      <MemberSignature Language="C#" Value="public string ExpandString (string unexpandedValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ExpandString(string unexpandedValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.ExpandString(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function ExpandString (unexpandedValue As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ ExpandString(System::String ^ unexpandedValue);" />
      <MemberSignature Language="F#" Value="abstract member ExpandString : string -&gt; string&#xA;override this.ExpandString : string -&gt; string" Usage="projectInstance.ExpandString unexpandedValue" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Build.Evaluation.IEvaluatorData`4.ExpandString(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="unexpandedValue" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="unexpandedValue"><span data-ttu-id="4d26b-264">Ciąg do wyodrębnienia.</span><span class="sxs-lookup"><span data-stu-id="4d26b-264">The string to be expanded.</span></span></param>
        <summary><span data-ttu-id="4d26b-265">Daje w wyniku podanego ciągu, rozwijając elementów i właściwości, za pomocą bieżących elementów i właściwości dostępne.</span><span class="sxs-lookup"><span data-stu-id="4d26b-265">Evaluates the provided string by expanding items and properties, using the current items and properties available.</span></span></summary>
        <returns><span data-ttu-id="4d26b-266">Wartość ciągu rozwinięty.</span><span class="sxs-lookup"><span data-stu-id="4d26b-266">The expanded string value.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4d26b-267">Jest to przydatne, niektóre hosty lub oknie bezpośrednim debugera.</span><span class="sxs-lookup"><span data-stu-id="4d26b-267">This is useful for some hosts, or for the debugger immediate window.</span></span>  
  
 <span data-ttu-id="4d26b-268">Nie jest powiększony wyrażenia bez metadanych.</span><span class="sxs-lookup"><span data-stu-id="4d26b-268">Does not expand bare metadata expressions.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FullPath">
      <MemberSignature Language="C#" Value="public string FullPath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FullPath" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Execution.ProjectInstance.FullPath" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FullPath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ FullPath { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FullPath : string" Usage="Microsoft.Build.Execution.ProjectInstance.FullPath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4d26b-269">Pobiera pełną ścieżkę do pliku projektu.</span><span class="sxs-lookup"><span data-stu-id="4d26b-269">Gets the full path to the project file.</span></span> <span data-ttu-id="4d26b-270">Używane do rejestrowania.</span><span class="sxs-lookup"><span data-stu-id="4d26b-270">Used for logging.</span></span></summary>
        <value><span data-ttu-id="4d26b-271">Pełna ścieżka do pliku projektu lub <see langword="null" /> Jeśli projektu nigdy nie został nazwany.</span><span class="sxs-lookup"><span data-stu-id="4d26b-271">The full path to the project file, or <see langword="null" /> if the project was never named.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetEvaluatedItemIncludeEscaped">
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="4d26b-272">Pobiera oszacowaną wartość wyjścia atrybutu Uwzględnij za pomocą podanej definicji elementu.</span><span class="sxs-lookup"><span data-stu-id="4d26b-272">Gets the evaluated, escaped value of the Include attribute of the provided item definition.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetEvaluatedItemIncludeEscaped">
      <MemberSignature Language="C#" Value="public static string GetEvaluatedItemIncludeEscaped (Microsoft.Build.Execution.ProjectItemDefinitionInstance item);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetEvaluatedItemIncludeEscaped(class Microsoft.Build.Execution.ProjectItemDefinitionInstance item) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.GetEvaluatedItemIncludeEscaped(Microsoft.Build.Execution.ProjectItemDefinitionInstance)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetEvaluatedItemIncludeEscaped (item As ProjectItemDefinitionInstance) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetEvaluatedItemIncludeEscaped(Microsoft::Build::Execution::ProjectItemDefinitionInstance ^ item);" />
      <MemberSignature Language="F#" Value="static member GetEvaluatedItemIncludeEscaped : Microsoft.Build.Execution.ProjectItemDefinitionInstance -&gt; string" Usage="Microsoft.Build.Execution.ProjectInstance.GetEvaluatedItemIncludeEscaped item" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="Microsoft.Build.Execution.ProjectItemDefinitionInstance" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="4d26b-273">Definicja elementu, który ma zostać obliczone i poprzedzone znakiem zmiany znaczenia.</span><span class="sxs-lookup"><span data-stu-id="4d26b-273">The item definition to be evaluated and escaped.</span></span></param>
        <summary><span data-ttu-id="4d26b-274">Pobiera oszacowaną wartość wyjścia atrybutu Uwzględnij za pomocą podanej definicji elementu.</span><span class="sxs-lookup"><span data-stu-id="4d26b-274">Gets the evaluated, escaped value of the Include attribute of the provided item definition.</span></span></summary>
        <returns><span data-ttu-id="4d26b-275">Oceniono, poprzedzone znakiem zmiany znaczenia wartość atrybutu Include podanej definicji elementu.</span><span class="sxs-lookup"><span data-stu-id="4d26b-275">The evaluated, escaped value of the Include attribute of the provided item definition.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEvaluatedItemIncludeEscaped">
      <MemberSignature Language="C#" Value="public static string GetEvaluatedItemIncludeEscaped (Microsoft.Build.Execution.ProjectItemInstance item);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetEvaluatedItemIncludeEscaped(class Microsoft.Build.Execution.ProjectItemInstance item) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.GetEvaluatedItemIncludeEscaped(Microsoft.Build.Execution.ProjectItemInstance)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetEvaluatedItemIncludeEscaped (item As ProjectItemInstance) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetEvaluatedItemIncludeEscaped(Microsoft::Build::Execution::ProjectItemInstance ^ item);" />
      <MemberSignature Language="F#" Value="static member GetEvaluatedItemIncludeEscaped : Microsoft.Build.Execution.ProjectItemInstance -&gt; string" Usage="Microsoft.Build.Execution.ProjectInstance.GetEvaluatedItemIncludeEscaped item" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="Microsoft.Build.Execution.ProjectItemInstance" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="4d26b-276">Element, który ma zostać obliczone i poprzedzone znakiem zmiany znaczenia.</span><span class="sxs-lookup"><span data-stu-id="4d26b-276">The item to be evaluated and escaped.</span></span></param>
        <summary><span data-ttu-id="4d26b-277">Pobiera oszacowaną wartość atrybutu Include dostarczony element.</span><span class="sxs-lookup"><span data-stu-id="4d26b-277">Gets the evaluated, escaped value of the Include attribute of the provided item.</span></span></summary>
        <returns><span data-ttu-id="4d26b-278">Oceniono, poprzedzone znakiem zmiany znaczenia wartość atrybutu Include dostarczony element.</span><span class="sxs-lookup"><span data-stu-id="4d26b-278">The evaluated, escaped value of the Include attribute of the provided item.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetItems">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.ICollection&lt;Microsoft.Build.Execution.ProjectItemInstance&gt; GetItems (string itemType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.ICollection`1&lt;class Microsoft.Build.Execution.ProjectItemInstance&gt; GetItems(string itemType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.GetItems(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetItems (itemType As String) As ICollection(Of ProjectItemInstance)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::ICollection&lt;Microsoft::Build::Execution::ProjectItemInstance ^&gt; ^ GetItems(System::String ^ itemType);" />
      <MemberSignature Language="F#" Value="member this.GetItems : string -&gt; System.Collections.Generic.ICollection&lt;Microsoft.Build.Execution.ProjectItemInstance&gt;" Usage="projectInstance.GetItems itemType" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Build.Evaluation.IItemProvider`1.GetItems(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;Microsoft.Build.Execution.ProjectItemInstance&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="itemType" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="itemType"><span data-ttu-id="4d26b-279">Typ elementów do pobrania.</span><span class="sxs-lookup"><span data-stu-id="4d26b-279">The item type of the items to be retrieved.</span></span></param>
        <summary><span data-ttu-id="4d26b-280">Pobiera wszystkie elementy w tym projekcie dla określonego typu.</span><span class="sxs-lookup"><span data-stu-id="4d26b-280">Gets all the items in this project of the specified type.</span></span> <span data-ttu-id="4d26b-281">To jest lista tylko do odczytu.</span><span class="sxs-lookup"><span data-stu-id="4d26b-281">This is a read-only list.</span></span></summary>
        <returns><span data-ttu-id="4d26b-282">Wszystkie elementy w tym projekcie określonego typu.</span><span class="sxs-lookup"><span data-stu-id="4d26b-282">All the items in this project of the specified type.</span></span> <span data-ttu-id="4d26b-283">Zwraca pustą listę, jeśli żaden nie jest.</span><span class="sxs-lookup"><span data-stu-id="4d26b-283">Returns an empty list if there are none.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetItemsByItemTypeAndEvaluatedInclude">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Execution.ProjectItemInstance&gt; GetItemsByItemTypeAndEvaluatedInclude (string itemType, string evaluatedInclude);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Build.Execution.ProjectItemInstance&gt; GetItemsByItemTypeAndEvaluatedInclude(string itemType, string evaluatedInclude) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.GetItemsByItemTypeAndEvaluatedInclude(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetItemsByItemTypeAndEvaluatedInclude (itemType As String, evaluatedInclude As String) As IEnumerable(Of ProjectItemInstance)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;Microsoft::Build::Execution::ProjectItemInstance ^&gt; ^ GetItemsByItemTypeAndEvaluatedInclude(System::String ^ itemType, System::String ^ evaluatedInclude);" />
      <MemberSignature Language="F#" Value="member this.GetItemsByItemTypeAndEvaluatedInclude : string * string -&gt; seq&lt;Microsoft.Build.Execution.ProjectItemInstance&gt;" Usage="projectInstance.GetItemsByItemTypeAndEvaluatedInclude (itemType, evaluatedInclude)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Execution.ProjectItemInstance&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="itemType" Type="System.String" />
        <Parameter Name="evaluatedInclude" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="itemType"><span data-ttu-id="4d26b-284">Typ elementów do pobrania.</span><span class="sxs-lookup"><span data-stu-id="4d26b-284">The item type of the items to be retrieved.</span></span></param>
        <param name="evaluatedInclude"><span data-ttu-id="4d26b-285">Wartość Uwzględnij ocenianą elementów do pobrania</span><span class="sxs-lookup"><span data-stu-id="4d26b-285">The evaluated include value of the items to be retrieved</span></span></param>
        <summary><span data-ttu-id="4d26b-286">Pobiera wszystkie elementy w projekcie o określonym typie i oceniać zawiera wartości.</span><span class="sxs-lookup"><span data-stu-id="4d26b-286">Gets all the items in this project of the specified type and evaluated include value.</span></span> <span data-ttu-id="4d26b-287">To jest lista tylko do odczytu.</span><span class="sxs-lookup"><span data-stu-id="4d26b-287">This is a read-only list.</span></span></summary>
        <returns><span data-ttu-id="4d26b-288">Wszystkie elementy w tym projekcie, o określonym typie i oceniać zawiera wartości.</span><span class="sxs-lookup"><span data-stu-id="4d26b-288">All the items in this project of the specified type and evaluated include value.</span></span> <span data-ttu-id="4d26b-289">Zwraca pustą kolekcję, jeśli żaden nie jest.</span><span class="sxs-lookup"><span data-stu-id="4d26b-289">Returns an empty collection if there are none.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetMetadataValueEscaped">
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="4d26b-290">Pobiera wartość wyjścia metadanej za pomocą podanej nazwy podanej definicji elementu.</span><span class="sxs-lookup"><span data-stu-id="4d26b-290">Gets the escaped value of the metadatum with the provided name of the provided item definition.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetMetadataValueEscaped">
      <MemberSignature Language="C#" Value="public static string GetMetadataValueEscaped (Microsoft.Build.Execution.ProjectMetadataInstance metadatum);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetMetadataValueEscaped(class Microsoft.Build.Execution.ProjectMetadataInstance metadatum) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.GetMetadataValueEscaped(Microsoft.Build.Execution.ProjectMetadataInstance)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetMetadataValueEscaped (metadatum As ProjectMetadataInstance) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetMetadataValueEscaped(Microsoft::Build::Execution::ProjectMetadataInstance ^ metadatum);" />
      <MemberSignature Language="F#" Value="static member GetMetadataValueEscaped : Microsoft.Build.Execution.ProjectMetadataInstance -&gt; string" Usage="Microsoft.Build.Execution.ProjectInstance.GetMetadataValueEscaped metadatum" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="metadatum" Type="Microsoft.Build.Execution.ProjectMetadataInstance" />
      </Parameters>
      <Docs>
        <param name="metadatum"><span data-ttu-id="4d26b-291">Wyjścia metadanej za konieczne można wyjściowym.</span><span class="sxs-lookup"><span data-stu-id="4d26b-291">The metadatum to be escaped.</span></span></param>
        <summary><span data-ttu-id="4d26b-292">Pobiera wartość wyjścia metadanej za podana.</span><span class="sxs-lookup"><span data-stu-id="4d26b-292">Gets the escaped value of the provided metadatum.</span></span></summary>
        <returns><span data-ttu-id="4d26b-293">Wartość podana wyjścia metadanej za.</span><span class="sxs-lookup"><span data-stu-id="4d26b-293">The escaped value of the provided metadatum.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMetadataValueEscaped">
      <MemberSignature Language="C#" Value="public static string GetMetadataValueEscaped (Microsoft.Build.Execution.ProjectItemDefinitionInstance item, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetMetadataValueEscaped(class Microsoft.Build.Execution.ProjectItemDefinitionInstance item, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.GetMetadataValueEscaped(Microsoft.Build.Execution.ProjectItemDefinitionInstance,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetMetadataValueEscaped (item As ProjectItemDefinitionInstance, name As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetMetadataValueEscaped(Microsoft::Build::Execution::ProjectItemDefinitionInstance ^ item, System::String ^ name);" />
      <MemberSignature Language="F#" Value="static member GetMetadataValueEscaped : Microsoft.Build.Execution.ProjectItemDefinitionInstance * string -&gt; string" Usage="Microsoft.Build.Execution.ProjectInstance.GetMetadataValueEscaped (item, name)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="Microsoft.Build.Execution.ProjectItemDefinitionInstance" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="4d26b-294">Definicja elementu, aby podać wartość wyjścia metadanej za.</span><span class="sxs-lookup"><span data-stu-id="4d26b-294">The item definition to provide the metadatum value.</span></span></param>
        <param name="name"><span data-ttu-id="4d26b-295">Nazwa wyjścia metadanej za.</span><span class="sxs-lookup"><span data-stu-id="4d26b-295">The name of the metadatum.</span></span></param>
        <summary><span data-ttu-id="4d26b-296">Pobiera wartość wyjścia metadanej za pomocą podanej nazwy podanej definicji elementu.</span><span class="sxs-lookup"><span data-stu-id="4d26b-296">Gets the escaped value of the metadatum with the provided name of the provided item definition.</span></span></summary>
        <returns><span data-ttu-id="4d26b-297">Wartość wyjścia metadanej za pomocą podanej nazwy podanej definicji elementu.</span><span class="sxs-lookup"><span data-stu-id="4d26b-297">The escaped value of the metadatum with the provided name of the provided item definition.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMetadataValueEscaped">
      <MemberSignature Language="C#" Value="public static string GetMetadataValueEscaped (Microsoft.Build.Execution.ProjectItemInstance item, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetMetadataValueEscaped(class Microsoft.Build.Execution.ProjectItemInstance item, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.GetMetadataValueEscaped(Microsoft.Build.Execution.ProjectItemInstance,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetMetadataValueEscaped (item As ProjectItemInstance, name As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetMetadataValueEscaped(Microsoft::Build::Execution::ProjectItemInstance ^ item, System::String ^ name);" />
      <MemberSignature Language="F#" Value="static member GetMetadataValueEscaped : Microsoft.Build.Execution.ProjectItemInstance * string -&gt; string" Usage="Microsoft.Build.Execution.ProjectInstance.GetMetadataValueEscaped (item, name)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="Microsoft.Build.Execution.ProjectItemInstance" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="4d26b-298">Element, aby podać wartość wyjścia metadanej za.</span><span class="sxs-lookup"><span data-stu-id="4d26b-298">The item to provide the metadatum value.</span></span></param>
        <param name="name"><span data-ttu-id="4d26b-299">Nazwa wyjścia metadanej za.</span><span class="sxs-lookup"><span data-stu-id="4d26b-299">The name of the metadatum.</span></span></param>
        <summary><span data-ttu-id="4d26b-300">Pobiera wartość wyjścia metadanej za pomocą podanej nazwy na podanym elemencie.</span><span class="sxs-lookup"><span data-stu-id="4d26b-300">Gets the escaped value of the metadatum with the provided name on the provided item.</span></span></summary>
        <returns><span data-ttu-id="4d26b-301">Wartość wyjścia metadanej za pomocą podanej nazwy na podanym elemencie.</span><span class="sxs-lookup"><span data-stu-id="4d26b-301">The escaped value of the metadatum with the provided name on the provided item.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetProperty">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Execution.ProjectPropertyInstance GetProperty (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Build.Execution.ProjectPropertyInstance GetProperty(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.GetProperty(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetProperty (name As String) As ProjectPropertyInstance" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Microsoft::Build::Execution::ProjectPropertyInstance ^ GetProperty(System::String ^ name);" />
      <MemberSignature Language="F#" Value="abstract member GetProperty : string -&gt; Microsoft.Build.Execution.ProjectPropertyInstance&#xA;override this.GetProperty : string -&gt; Microsoft.Build.Execution.ProjectPropertyInstance" Usage="projectInstance.GetProperty name" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Build.Evaluation.IPropertyProvider`1.GetProperty(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Execution.ProjectPropertyInstance</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="4d26b-302">Nazwa właściwości do pobrania.</span><span class="sxs-lookup"><span data-stu-id="4d26b-302">The name of the property to retrieve.</span></span></param>
        <summary><span data-ttu-id="4d26b-303">Pobiera właściwość o podanej nazwie.</span><span class="sxs-lookup"><span data-stu-id="4d26b-303">Gets the property with the given name.</span></span></summary>
        <returns><span data-ttu-id="4d26b-304">Właściwość o podanej nazwie, lub <see langword="null" /> istnienia żadnej właściwości o tej nazwie.</span><span class="sxs-lookup"><span data-stu-id="4d26b-304">The property with the given name, or <see langword="null" /> if no property exists with that name.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPropertyValue">
      <MemberSignature Language="C#" Value="public string GetPropertyValue (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetPropertyValue(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.GetPropertyValue(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPropertyValue (name As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetPropertyValue(System::String ^ name);" />
      <MemberSignature Language="F#" Value="member this.GetPropertyValue : string -&gt; string" Usage="projectInstance.GetPropertyValue name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="4d26b-305">Nazwa właściwości, którego wartość ma zostać pobrane.</span><span class="sxs-lookup"><span data-stu-id="4d26b-305">The name of the property whose value is to be retrieved.</span></span></param>
        <summary><span data-ttu-id="4d26b-306">Pobiera wartość właściwości o podanej nazwie.</span><span class="sxs-lookup"><span data-stu-id="4d26b-306">Gets the value of the property with the given name.</span></span></summary>
        <returns><span data-ttu-id="4d26b-307">Wartość właściwości o podanej nazwie lub ciąg pusty, jeśli nie ma właściwości o tej nazwie.</span><span class="sxs-lookup"><span data-stu-id="4d26b-307">The value of the property with the given name, or an empty string if no property exists with that name.</span></span> <span data-ttu-id="4d26b-308">Wartość zwracana ma nie sekwencje ucieczki znaków.</span><span class="sxs-lookup"><span data-stu-id="4d26b-308">The value returned has no escaped character sequences.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4d26b-309">Ta metoda nie rozróżnia między właściwość z wartością pustego ciągu, a nie właściwości o podanej nazwie.</span><span class="sxs-lookup"><span data-stu-id="4d26b-309">This method does not distinguish between a property with a value of empty string and no property with the given name.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPropertyValueEscaped">
      <MemberSignature Language="C#" Value="public static string GetPropertyValueEscaped (Microsoft.Build.Execution.ProjectPropertyInstance property);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetPropertyValueEscaped(class Microsoft.Build.Execution.ProjectPropertyInstance property) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.GetPropertyValueEscaped(Microsoft.Build.Execution.ProjectPropertyInstance)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetPropertyValueEscaped (property As ProjectPropertyInstance) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetPropertyValueEscaped(Microsoft::Build::Execution::ProjectPropertyInstance ^ property);" />
      <MemberSignature Language="F#" Value="static member GetPropertyValueEscaped : Microsoft.Build.Execution.ProjectPropertyInstance -&gt; string" Usage="Microsoft.Build.Execution.ProjectInstance.GetPropertyValueEscaped property" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="Microsoft.Build.Execution.ProjectPropertyInstance" />
      </Parameters>
      <Docs>
        <param name="property"><span data-ttu-id="4d26b-310">Właściwość konieczne można wyjściowym.</span><span class="sxs-lookup"><span data-stu-id="4d26b-310">The property to be escaped.</span></span></param>
        <summary><span data-ttu-id="4d26b-311">Pobiera wartość właściwości podana.</span><span class="sxs-lookup"><span data-stu-id="4d26b-311">Gets the escaped value of the provided property.</span></span></summary>
        <returns><span data-ttu-id="4d26b-312">Wartość właściwości podana.</span><span class="sxs-lookup"><span data-stu-id="4d26b-312">The escaped value of the provided property.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GlobalProperties">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IDictionary&lt;string,string&gt; GlobalProperties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IDictionary`2&lt;string, string&gt; GlobalProperties" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Execution.ProjectInstance.GlobalProperties" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property GlobalProperties As IDictionary(Of String, String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ GlobalProperties { System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.GlobalProperties : System.Collections.Generic.IDictionary&lt;string, string&gt;" Usage="Microsoft.Build.Execution.ProjectInstance.GlobalProperties" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4d26b-313">Pobiera słownik właściwości globalne, do których ten projekt został oceniony jako, jeśli istnieje.</span><span class="sxs-lookup"><span data-stu-id="4d26b-313">Gets the dictionary of global properties this project was evaluated with, if any.</span></span></summary>
        <value><span data-ttu-id="4d26b-314">Słownik właściwości globalnych, w którym obliczeniem tego projektu.</span><span class="sxs-lookup"><span data-stu-id="4d26b-314">The dictionary of global properties this project was evaluated with.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4d26b-315">Kolekcja tylko do odczytu.</span><span class="sxs-lookup"><span data-stu-id="4d26b-315">Read only collection.</span></span>  
  
 <span data-ttu-id="4d26b-316">Przechodzi przez odwołania do projektu.</span><span class="sxs-lookup"><span data-stu-id="4d26b-316">Traverses project references.</span></span>  
  
 <span data-ttu-id="4d26b-317">To zgodni metody pobierającej, która przekłada się na tylko do odczytu IDictionary martwy\<string, string >.</span><span class="sxs-lookup"><span data-stu-id="4d26b-317">This is the publicly exposed getter, that translates into a read-only dead IDictionary\<string, string>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InitialTargets">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.List&lt;string&gt; InitialTargets { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.List`1&lt;string&gt; InitialTargets" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Execution.ProjectInstance.InitialTargets" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InitialTargets As List(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::List&lt;System::String ^&gt; ^ InitialTargets { System::Collections::Generic::List&lt;System::String ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.InitialTargets : System.Collections.Generic.List&lt;string&gt;" Usage="Microsoft.Build.Execution.ProjectInstance.InitialTargets" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.Build.Evaluation.IEvaluatorData`4.InitialTargets</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.List&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4d26b-318">Pobiera listę cele początkowe dla projektu i jego importów pierwszy głębi.</span><span class="sxs-lookup"><span data-stu-id="4d26b-318">Gets the list of initial targets for the project and all its imports, depth-first.</span></span> <span data-ttu-id="4d26b-319">Te obiekty docelowe są kompilowane przed innymi celami.</span><span class="sxs-lookup"><span data-stu-id="4d26b-319">These targets are built before any other targets.</span></span></summary>
        <value><span data-ttu-id="4d26b-320">Lista celów początkowych dla projektu i wszystkie jego importów, pierwszy głębi.</span><span class="sxs-lookup"><span data-stu-id="4d26b-320">The list of initial targets for the project and all its imports, depth-first.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsImmutable">
      <MemberSignature Language="C#" Value="public bool IsImmutable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsImmutable" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Execution.ProjectInstance.IsImmutable" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsImmutable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsImmutable { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsImmutable : bool" Usage="Microsoft.Build.Execution.ProjectInstance.IsImmutable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4d26b-321">Pobiera wartość wskazującą, czy wystąpienie projektu jest niezmienny.</span><span class="sxs-lookup"><span data-stu-id="4d26b-321">Gets a value that indicates whether the project instance is immutable.</span></span> <span data-ttu-id="4d26b-322">Ta flaga jest ustawiona trwale podczas tworzenia wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="4d26b-322">This flag is set permanently when the instance is created.</span></span></summary>
        <value><span data-ttu-id="4d26b-323"><see langword="true" /> Jeśli wystąpienie projektu jest niezmienny; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="4d26b-323"><see langword="true" /> if the project instance is immutable; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemDefinitions">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IDictionary&lt;string,Microsoft.Build.Execution.ProjectItemDefinitionInstance&gt; ItemDefinitions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IDictionary`2&lt;string, class Microsoft.Build.Execution.ProjectItemDefinitionInstance&gt; ItemDefinitions" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Execution.ProjectInstance.ItemDefinitions" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ItemDefinitions As IDictionary(Of String, ProjectItemDefinitionInstance)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IDictionary&lt;System::String ^, Microsoft::Build::Execution::ProjectItemDefinitionInstance ^&gt; ^ ItemDefinitions { System::Collections::Generic::IDictionary&lt;System::String ^, Microsoft::Build::Execution::ProjectItemDefinitionInstance ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ItemDefinitions : System.Collections.Generic.IDictionary&lt;string, Microsoft.Build.Execution.ProjectItemDefinitionInstance&gt;" Usage="Microsoft.Build.Execution.ProjectInstance.ItemDefinitions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.String,Microsoft.Build.Execution.ProjectItemDefinitionInstance&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4d26b-324">Pobiera słownik tylko do odczytu definicji elementu w projekcie z kluczami przez typ elementu.</span><span class="sxs-lookup"><span data-stu-id="4d26b-324">Gets a read-only dictionary of the item definitions in the project, keyed by item type.</span></span></summary>
        <value><span data-ttu-id="4d26b-325">Słownik tylko do odczytu definicji elementu w projekcie z kluczami przez typ elementu.</span><span class="sxs-lookup"><span data-stu-id="4d26b-325">A read-only dictionary of the item definitions in the project, keyed by item type.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Items">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.ICollection&lt;Microsoft.Build.Execution.ProjectItemInstance&gt; Items { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.ICollection`1&lt;class Microsoft.Build.Execution.ProjectItemInstance&gt; Items" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Execution.ProjectInstance.Items" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Items As ICollection(Of ProjectItemInstance)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::ICollection&lt;Microsoft::Build::Execution::ProjectItemInstance ^&gt; ^ Items { System::Collections::Generic::ICollection&lt;Microsoft::Build::Execution::ProjectItemInstance ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Items : System.Collections.Generic.ICollection&lt;Microsoft.Build.Execution.ProjectItemInstance&gt;" Usage="Microsoft.Build.Execution.ProjectInstance.Items" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;Microsoft.Build.Execution.ProjectItemInstance&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4d26b-326">Pobiera wszystkie elementy w tym projekcie.</span><span class="sxs-lookup"><span data-stu-id="4d26b-326">Gets all items in this project.</span></span></summary>
        <value><span data-ttu-id="4d26b-327">Wszystkie elementy w tym projekcie.</span><span class="sxs-lookup"><span data-stu-id="4d26b-327">All items in this project.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemTypes">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.ICollection&lt;string&gt; ItemTypes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.ICollection`1&lt;string&gt; ItemTypes" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Execution.ProjectInstance.ItemTypes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ItemTypes As ICollection(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::ICollection&lt;System::String ^&gt; ^ ItemTypes { System::Collections::Generic::ICollection&lt;System::String ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ItemTypes : System.Collections.Generic.ICollection&lt;string&gt;" Usage="Microsoft.Build.Execution.ProjectInstance.ItemTypes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4d26b-328">Pobiera wszystkie typy elementów w tym projekcie.</span><span class="sxs-lookup"><span data-stu-id="4d26b-328">Gets all item types in this project.</span></span></summary>
        <value><span data-ttu-id="4d26b-329">Wszystkie typy elementów w tym projekcie.</span><span class="sxs-lookup"><span data-stu-id="4d26b-329">All item types in this project.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProjectFileLocation">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Construction.ElementLocation ProjectFileLocation { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Build.Construction.ElementLocation ProjectFileLocation" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Execution.ProjectInstance.ProjectFileLocation" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ProjectFileLocation As ElementLocation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Build::Construction::ElementLocation ^ ProjectFileLocation { Microsoft::Build::Construction::ElementLocation ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ProjectFileLocation : Microsoft.Build.Construction.ElementLocation" Usage="Microsoft.Build.Execution.ProjectInstance.ProjectFileLocation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Construction.ElementLocation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4d26b-330">Pobiera lokalizację w samym pliku źródłowym.</span><span class="sxs-lookup"><span data-stu-id="4d26b-330">Gets the location of the originating file itself.</span></span> <span data-ttu-id="4d26b-331">Nigdy nie jest null.</span><span class="sxs-lookup"><span data-stu-id="4d26b-331">Never null.</span></span></summary>
        <value><span data-ttu-id="4d26b-332">Lokalizacja pliku źródłowego.</span><span class="sxs-lookup"><span data-stu-id="4d26b-332">The location of the originating file.</span></span> <span data-ttu-id="4d26b-333">Nigdy nie zwraca <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="4d26b-333">Never returns <see langword="null" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Properties">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.ICollection&lt;Microsoft.Build.Execution.ProjectPropertyInstance&gt; Properties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.ICollection`1&lt;class Microsoft.Build.Execution.ProjectPropertyInstance&gt; Properties" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Execution.ProjectInstance.Properties" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Properties As ICollection(Of ProjectPropertyInstance)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::ICollection&lt;Microsoft::Build::Execution::ProjectPropertyInstance ^&gt; ^ Properties { System::Collections::Generic::ICollection&lt;Microsoft::Build::Execution::ProjectPropertyInstance ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Properties : System.Collections.Generic.ICollection&lt;Microsoft.Build.Execution.ProjectPropertyInstance&gt;" Usage="Microsoft.Build.Execution.ProjectInstance.Properties" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;Microsoft.Build.Execution.ProjectPropertyInstance&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4d26b-334">Pobiera wszystkie właściwości w tym projekcie.</span><span class="sxs-lookup"><span data-stu-id="4d26b-334">Gets all properties in this project.</span></span></summary>
        <value><span data-ttu-id="4d26b-335">Wszystkie właściwości w tym projekcie.</span><span class="sxs-lookup"><span data-stu-id="4d26b-335">All properties in this project.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveItem">
      <MemberSignature Language="C#" Value="public bool RemoveItem (Microsoft.Build.Execution.ProjectItemInstance item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool RemoveItem(class Microsoft.Build.Execution.ProjectItemInstance item) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.RemoveItem(Microsoft.Build.Execution.ProjectItemInstance)" />
      <MemberSignature Language="VB.NET" Value="Public Function RemoveItem (item As ProjectItemInstance) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool RemoveItem(Microsoft::Build::Execution::ProjectItemInstance ^ item);" />
      <MemberSignature Language="F#" Value="member this.RemoveItem : Microsoft.Build.Execution.ProjectItemInstance -&gt; bool" Usage="projectInstance.RemoveItem item" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="Microsoft.Build.Execution.ProjectItemInstance" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="4d26b-336">Element, który ma zostać usunięty.</span><span class="sxs-lookup"><span data-stu-id="4d26b-336">The item to be removed.</span></span></param>
        <summary><span data-ttu-id="4d26b-337">Usuwa element z projektu, jeśli jest obecny.</span><span class="sxs-lookup"><span data-stu-id="4d26b-337">Removes an item from the project, if present.</span></span> <span data-ttu-id="4d26b-338">Zwraca wartość PRAWDA, jeśli jego był obecny, wartość false w przeciwnym razie.</span><span class="sxs-lookup"><span data-stu-id="4d26b-338">Returns true if it was present, false otherwise.</span></span></summary>
        <returns><span data-ttu-id="4d26b-339"><see langword="true" /> Jeśli element był obecny przed usuwania. w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="4d26b-339"><see langword="true" /> if the item was present before removal; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveProperty">
      <MemberSignature Language="C#" Value="public bool RemoveProperty (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool RemoveProperty(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.RemoveProperty(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function RemoveProperty (name As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool RemoveProperty(System::String ^ name);" />
      <MemberSignature Language="F#" Value="member this.RemoveProperty : string -&gt; bool" Usage="projectInstance.RemoveProperty name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="4d26b-340">Nazwa właściwości do usunięcia.</span><span class="sxs-lookup"><span data-stu-id="4d26b-340">The name of the property to be removed.</span></span></param>
        <summary><span data-ttu-id="4d26b-341">Usuwa właściwość o podanej nazwie.</span><span class="sxs-lookup"><span data-stu-id="4d26b-341">Removes a property with the given name.</span></span> <span data-ttu-id="4d26b-342">Zwraca wartość PRAWDA, jeśli właściwość ma wartość (ciąg może być pusta), w przeciwnym razie wartość false.</span><span class="sxs-lookup"><span data-stu-id="4d26b-342">Returns true if the property had a value (possibly empty string), otherwise false.</span></span></summary>
        <returns><span data-ttu-id="4d26b-343"><see langword="true" /> Jeśli właściwość ma wartość (prawdopodobnie ciągiem pustym) przed usuwania. w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="4d26b-343"><see langword="true" /> if the property had a value (possibly an empty string) before removal; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetProperty">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Execution.ProjectPropertyInstance SetProperty (string name, string evaluatedValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Build.Execution.ProjectPropertyInstance SetProperty(string name, string evaluatedValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.SetProperty(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function SetProperty (name As String, evaluatedValue As String) As ProjectPropertyInstance" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Build::Execution::ProjectPropertyInstance ^ SetProperty(System::String ^ name, System::String ^ evaluatedValue);" />
      <MemberSignature Language="F#" Value="member this.SetProperty : string * string -&gt; Microsoft.Build.Execution.ProjectPropertyInstance" Usage="projectInstance.SetProperty (name, evaluatedValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Execution.ProjectPropertyInstance</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="evaluatedValue" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="4d26b-344">Nazwa właściwości do dodania.</span><span class="sxs-lookup"><span data-stu-id="4d26b-344">The name of the property to add.</span></span></param>
        <param name="evaluatedValue"><span data-ttu-id="4d26b-345">Oceniona wartość właściwości do dodania.</span><span class="sxs-lookup"><span data-stu-id="4d26b-345">The evaluated value of the property to add.</span></span></param>
        <summary><span data-ttu-id="4d26b-346">Dodaj właściwość o określonej nazwie i wartości do projektu.</span><span class="sxs-lookup"><span data-stu-id="4d26b-346">Add a property with the specified name and value to the project.</span></span> <span data-ttu-id="4d26b-347">Zastępuje żadnej właściwości o tej samej nazwie już w kolekcji właściwości.</span><span class="sxs-lookup"><span data-stu-id="4d26b-347">Overwrites any property with the same name already in the property collection.</span></span></summary>
        <returns><span data-ttu-id="4d26b-348">Nowe właściwości.</span><span class="sxs-lookup"><span data-stu-id="4d26b-348">The new property.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4d26b-349">Firma Microsoft nie wykona ProjectPropertyInstance, aby upewnić się, że nie mamy jeden, który jest już używany przez inny ProjectPropertyInstance.</span><span class="sxs-lookup"><span data-stu-id="4d26b-349">We don't take a ProjectPropertyInstance to make sure we don't have one that's already in use by another ProjectPropertyInstance.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Targets">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IDictionary&lt;string,Microsoft.Build.Execution.ProjectTargetInstance&gt; Targets { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IDictionary`2&lt;string, class Microsoft.Build.Execution.ProjectTargetInstance&gt; Targets" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Execution.ProjectInstance.Targets" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Targets As IDictionary(Of String, ProjectTargetInstance)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IDictionary&lt;System::String ^, Microsoft::Build::Execution::ProjectTargetInstance ^&gt; ^ Targets { System::Collections::Generic::IDictionary&lt;System::String ^, Microsoft::Build::Execution::ProjectTargetInstance ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Targets : System.Collections.Generic.IDictionary&lt;string, Microsoft.Build.Execution.ProjectTargetInstance&gt;" Usage="Microsoft.Build.Execution.ProjectInstance.Targets" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.String,Microsoft.Build.Execution.ProjectTargetInstance&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4d26b-350">Pobiera moduł wyliczający przez wszystkie elementy docelowe, w tym projekcie.</span><span class="sxs-lookup"><span data-stu-id="4d26b-350">Gets an enumerator over all targets in this project.</span></span> <span data-ttu-id="4d26b-351">Ta kolekcja jest tylko do odczytu.</span><span class="sxs-lookup"><span data-stu-id="4d26b-351">This collection is read-only.</span></span></summary>
        <value><span data-ttu-id="4d26b-352">Moduł wyliczający przez wszystkie elementy docelowe, w tym projekcie.</span><span class="sxs-lookup"><span data-stu-id="4d26b-352">An enumerator over all targets in this project.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToolsVersion">
      <MemberSignature Language="C#" Value="public string ToolsVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ToolsVersion" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Execution.ProjectInstance.ToolsVersion" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ToolsVersion As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ToolsVersion { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ToolsVersion : string" Usage="Microsoft.Build.Execution.ProjectInstance.ToolsVersion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4d26b-353">Pobiera wersję narzędzia, z której ten projekt został oceniony jako, jeśli istnieje.</span><span class="sxs-lookup"><span data-stu-id="4d26b-353">Gets the tools version this project was evaluated with, if any.</span></span></summary>
        <value><span data-ttu-id="4d26b-354">Wersja narzędzi ten projekt został poddany ocenie, jeśli istnieje.</span><span class="sxs-lookup"><span data-stu-id="4d26b-354">The tools version this project was evaluated with, if any.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4d26b-355">Wynik niekoniecznie jest taka sama jak wersja narzędzi w znaczniku projektu, jeśli takie istnieją; go może zewnętrznie określono, na przykład za pomocą przełącznika /tv.</span><span class="sxs-lookup"><span data-stu-id="4d26b-355">The result is not necessarily the same as the tools version on the Project tag, if any; it may have been externally specified, for example with a /tv switch.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToProjectRootElement">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Construction.ProjectRootElement ToProjectRootElement ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Build.Construction.ProjectRootElement ToProjectRootElement() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.ToProjectRootElement" />
      <MemberSignature Language="VB.NET" Value="Public Function ToProjectRootElement () As ProjectRootElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Build::Construction::ProjectRootElement ^ ToProjectRootElement();" />
      <MemberSignature Language="F#" Value="member this.ToProjectRootElement : unit -&gt; Microsoft.Build.Construction.ProjectRootElement" Usage="projectInstance.ToProjectRootElement " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Construction.ProjectRootElement</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="4d26b-356">Tworzy ProjectRootElement na podstawie zawartości tego ProjectInstance.</span><span class="sxs-lookup"><span data-stu-id="4d26b-356">Creates a ProjectRootElement from the contents of this ProjectInstance.</span></span></summary>
        <returns><span data-ttu-id="4d26b-357">ProjectRootElement, który reprezentuje to wystąpienie.</span><span class="sxs-lookup"><span data-stu-id="4d26b-357">A ProjectRootElement which represents this instance.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateStateFrom">
      <MemberSignature Language="C#" Value="public void UpdateStateFrom (Microsoft.Build.Execution.ProjectInstance projectState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UpdateStateFrom(class Microsoft.Build.Execution.ProjectInstance projectState) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.UpdateStateFrom(Microsoft.Build.Execution.ProjectInstance)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UpdateStateFrom (projectState As ProjectInstance)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UpdateStateFrom(Microsoft::Build::Execution::ProjectInstance ^ projectState);" />
      <MemberSignature Language="F#" Value="member this.UpdateStateFrom : Microsoft.Build.Execution.ProjectInstance -&gt; unit" Usage="projectInstance.UpdateStateFrom projectState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="projectState" Type="Microsoft.Build.Execution.ProjectInstance" />
      </Parameters>
      <Docs>
        <param name="projectState"><span data-ttu-id="4d26b-358"><see langword="ProjectInstance" /> Do update.</span><span class="sxs-lookup"><span data-stu-id="4d26b-358">The <see langword="ProjectInstance" /> to update from.</span></span></param>
        <summary><span data-ttu-id="4d26b-359">Zastępuje stan projektu <see cref="P:Microsoft.Build.Execution.ProjectInstance.GlobalProperties" />, <see cref="P:Microsoft.Build.Execution.ProjectInstance.Properties" /> i <see cref="P:Microsoft.Build.Execution.ProjectInstance.Items" /> osobom z określonego <see cref="T:Microsoft.Build.Execution.ProjectInstance" />.</span><span class="sxs-lookup"><span data-stu-id="4d26b-359">Replaces the project state <see cref="P:Microsoft.Build.Execution.ProjectInstance.GlobalProperties" />, <see cref="P:Microsoft.Build.Execution.ProjectInstance.Properties" /> and <see cref="P:Microsoft.Build.Execution.ProjectInstance.Items" /> with those from the specified <see cref="T:Microsoft.Build.Execution.ProjectInstance" />.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>