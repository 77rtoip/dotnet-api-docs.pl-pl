<Type Name="ProjectInstance" FullName="Microsoft.Build.Execution.ProjectInstance">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="b87719892e16ee64ada05e11bec0bea9437b387d" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30428868" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ProjectInstance" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ProjectInstance extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Build.Execution.ProjectInstance" />
  <TypeSignature Language="VB.NET" Value="Public Class ProjectInstance" />
  <TypeSignature Language="C++ CLI" Value="public ref class ProjectInstance" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Build</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Diagnostics.DebuggerDisplay("{FullPath} #Targets={TargetsCount} DefaultTargets={(DefaultTargets == null) ? System.String.Empty : System.String.Join(";", DefaultTargets.ToArray())} ToolsVersion={Toolset.ToolsVersion} InitialTargets={(InitialTargets == null) ? System.String.Empty : System.String.Join(";", InitialTargets.ToArray())} #GlobalProperties={globalProperties.Count} #Properties={properties.Count} #ItemTypes={items.ItemTypes.Count} #Items={items.Count}")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="875ef-101">Reprezentuje wystąpienie projektu.</span>
      <span class="sxs-lookup">
        <span data-stu-id="875ef-101">Represents a project instance.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="875ef-102">Projekt został sklonowany wynikiem wystąpienia tej klasy.</span><span class="sxs-lookup"><span data-stu-id="875ef-102">Instances of this class result when a project is cloned.</span></span> <span data-ttu-id="875ef-103">Konstruktory są wewnętrzne, aby wymagać od użytkowników tworzenia wystąpień projektu z istniejących projektów.</span><span class="sxs-lookup"><span data-stu-id="875ef-103">Constructors are internal in order to require users to create project instances from existing projects.</span></span>  
  
 <span data-ttu-id="875ef-104">Nowych wystąpień projektu są niezmienne, z wyjątkiem tego wystąpienia elementów można dodać do nich i ustaw właściwości wystąpienia na nich.</span><span class="sxs-lookup"><span data-stu-id="875ef-104">New project instances are immutable, except that instance items can be added to them and instance properties set on them.</span></span> <span data-ttu-id="875ef-105">Wystąpień projektu są przydatne, ponieważ może być zmodyfikowane i wbudowane kilka razy bez zakłócania oryginalnego projektu.</span><span class="sxs-lookup"><span data-stu-id="875ef-105">Project instances are useful because they can be modified and built several times without disturbing the original project.</span></span>  
  
 <span data-ttu-id="875ef-106">Ta klasa ani żadnego ze swoich składników może mieć odwołania do <xref:Microsoft.Build.Construction> lub <xref:Microsoft.Build.Evaluation> obiektów.</span><span class="sxs-lookup"><span data-stu-id="875ef-106">Neither this class nor any of its constituents is allowed to have references to <xref:Microsoft.Build.Construction> or <xref:Microsoft.Build.Evaluation> objects.</span></span>  
  
 <span data-ttu-id="875ef-107">Obiekty docelowe wystąpienie projektu, usługi hosta i rejestru zadania nie są widoczne.</span><span class="sxs-lookup"><span data-stu-id="875ef-107">Project instance targets, host services, and the task registry are not exposed.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="875ef-108">Tworzy nowe wystąpienie projektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="875ef-108">Creates a new project instance.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ProjectInstance (Microsoft.Build.Construction.ProjectRootElement xml);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.Build.Construction.ProjectRootElement xml) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.#ctor(Microsoft.Build.Construction.ProjectRootElement)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (xml As ProjectRootElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ProjectInstance(Microsoft::Build::Construction::ProjectRootElement ^ xml);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="xml" Type="Microsoft.Build.Construction.ProjectRootElement" />
      </Parameters>
      <Docs>
        <param name="xml">
          <span data-ttu-id="875ef-109">Elementem głównym projektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="875ef-109">The project root element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="875ef-110">Tworzy nowe wystąpienie projektu i inicjuje go z katalogu głównego projektu, przy użyciu domyślnej kolekcji projektów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="875ef-110">Creates a new project instance and initializes it from the given project root, using the default project collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="875ef-111">Nie pośrednich <xref:Microsoft.Build.Evaluation.Project> tworzony jest obiekt.</span><span class="sxs-lookup"><span data-stu-id="875ef-111">No intermediate <xref:Microsoft.Build.Evaluation.Project> object is created.</span></span> <span data-ttu-id="875ef-112">Jest to przydatne, jeśli projekt zostanie skompilowany, ale nie wyświetlony lub edytowany.</span><span class="sxs-lookup"><span data-stu-id="875ef-112">This is useful if a project is going to be built, but not displayed or edited.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ProjectInstance (string projectFile);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string projectFile) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (projectFile As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ProjectInstance(System::String ^ projectFile);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="projectFile" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="projectFile">
          <span data-ttu-id="875ef-113">Nazwa pliku projektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="875ef-113">The name of the project file.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="875ef-114">Tworzy nowe wystąpienie projektu i inicjuje go z pliku projektu, przy użyciu domyślnej kolekcji projektów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="875ef-114">Creates a new project instance and initializes it from the given project file, using the default project collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="875ef-115">Nie pośrednich <xref:Microsoft.Build.Evaluation.Project> tworzony jest obiekt.</span><span class="sxs-lookup"><span data-stu-id="875ef-115">No intermediate <xref:Microsoft.Build.Evaluation.Project> object is created.</span></span> <span data-ttu-id="875ef-116">Jest to przydatne, jeśli projekt zostanie skompilowany, ale nie wyświetlony lub edytowany.</span><span class="sxs-lookup"><span data-stu-id="875ef-116">This is useful if a project is going to be built, but not displayed or edited.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ProjectInstance (string projectFile, System.Collections.Generic.IDictionary&lt;string,string&gt; globalProperties, string toolsVersion);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string projectFile, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; globalProperties, string toolsVersion) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (projectFile As String, globalProperties As IDictionary(Of String, String), toolsVersion As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ProjectInstance(System::String ^ projectFile, System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ globalProperties, System::String ^ toolsVersion);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="projectFile" Type="System.String" />
        <Parameter Name="globalProperties" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="toolsVersion" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="projectFile">
          <span data-ttu-id="875ef-117">Nazwa pliku projektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="875ef-117">The name of the project file.</span>
          </span>
        </param>
        <param name="globalProperties">
          <span data-ttu-id="875ef-118">Właściwości globalne do użycia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="875ef-118">The global properties to use.</span>
          </span>
        </param>
        <param name="toolsVersion">
          <span data-ttu-id="875ef-119">Wersja narzędzia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="875ef-119">The tools version.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="875ef-120">Tworzy nowe wystąpienie projektu i inicjuje go z pliku projektu, przy użyciu danego globalnych właściwości, wersja narzędzi i domyślnej kolekcji projektów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="875ef-120">Creates a new project instance and initializes it from the given project file, using the given global properties, tools version, and the default project collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="875ef-121">Nie pośrednich <xref:Microsoft.Build.Evaluation.Project> tworzony jest obiekt.</span><span class="sxs-lookup"><span data-stu-id="875ef-121">No intermediate <xref:Microsoft.Build.Evaluation.Project> object is created.</span></span> <span data-ttu-id="875ef-122">Jest to przydatne, jeśli projekt zostanie skompilowany, ale nie wyświetlony lub edytowany.</span><span class="sxs-lookup"><span data-stu-id="875ef-122">This is useful if a project is going to be built, but not displayed or edited.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ProjectInstance (Microsoft.Build.Construction.ProjectRootElement xml, System.Collections.Generic.IDictionary&lt;string,string&gt; globalProperties, string toolsVersion, Microsoft.Build.Evaluation.ProjectCollection projectCollection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.Build.Construction.ProjectRootElement xml, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; globalProperties, string toolsVersion, class Microsoft.Build.Evaluation.ProjectCollection projectCollection) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.#ctor(Microsoft.Build.Construction.ProjectRootElement,System.Collections.Generic.IDictionary{System.String,System.String},System.String,Microsoft.Build.Evaluation.ProjectCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ProjectInstance(Microsoft::Build::Construction::ProjectRootElement ^ xml, System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ globalProperties, System::String ^ toolsVersion, Microsoft::Build::Evaluation::ProjectCollection ^ projectCollection);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="xml" Type="Microsoft.Build.Construction.ProjectRootElement" />
        <Parameter Name="globalProperties" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="toolsVersion" Type="System.String" />
        <Parameter Name="projectCollection" Type="Microsoft.Build.Evaluation.ProjectCollection" />
      </Parameters>
      <Docs>
        <param name="xml">
          <span data-ttu-id="875ef-123">Element główny projektu</span>
          <span class="sxs-lookup">
            <span data-stu-id="875ef-123">The project root element</span>
          </span>
        </param>
        <param name="globalProperties">
          <span data-ttu-id="875ef-124">Właściwości globalne do użycia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="875ef-124">The global properties to use.</span>
          </span>
          <span data-ttu-id="875ef-125">Może mieć wartość zerową.</span>
          <span class="sxs-lookup">
            <span data-stu-id="875ef-125">May be null.</span>
          </span>
        </param>
        <param name="toolsVersion">
          <span data-ttu-id="875ef-126">Wersja narzędzia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="875ef-126">The tools version.</span>
          </span>
          <span data-ttu-id="875ef-127">Może mieć wartość zerową.</span>
          <span class="sxs-lookup">
            <span data-stu-id="875ef-127">May be null.</span>
          </span>
        </param>
        <param name="projectCollection">
          <span data-ttu-id="875ef-128">Kolekcja projektów</span>
          <span class="sxs-lookup">
            <span data-stu-id="875ef-128">Project collection</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="875ef-129">Tworzy nowe wystąpienie projektu i inicjuje go z katalogu głównego projektu, przy użyciu danego globalnych właściwości, wersja narzędzi i kolekcji projektów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="875ef-129">Creates a new project instance and initializes it from the given project root, using the given global properties, tools version, and project collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="875ef-130">Nie pośrednich <xref:Microsoft.Build.Evaluation.Project> tworzony jest obiekt.</span><span class="sxs-lookup"><span data-stu-id="875ef-130">No intermediate <xref:Microsoft.Build.Evaluation.Project> object is created.</span></span> <span data-ttu-id="875ef-131">Jest to przydatne, jeśli projekt zostanie skompilowany, ale nie wyświetlony lub edytowany.</span><span class="sxs-lookup"><span data-stu-id="875ef-131">This is useful if a project is going to be built, but not displayed or edited.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ProjectInstance (string projectFile, System.Collections.Generic.IDictionary&lt;string,string&gt; globalProperties, string toolsVersion, Microsoft.Build.Evaluation.ProjectCollection projectCollection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string projectFile, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; globalProperties, string toolsVersion, class Microsoft.Build.Evaluation.ProjectCollection projectCollection) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.String,Microsoft.Build.Evaluation.ProjectCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ProjectInstance(System::String ^ projectFile, System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ globalProperties, System::String ^ toolsVersion, Microsoft::Build::Evaluation::ProjectCollection ^ projectCollection);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="projectFile" Type="System.String" />
        <Parameter Name="globalProperties" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="toolsVersion" Type="System.String" />
        <Parameter Name="projectCollection" Type="Microsoft.Build.Evaluation.ProjectCollection" />
      </Parameters>
      <Docs>
        <param name="projectFile">
          <span data-ttu-id="875ef-132">Nazwa pliku projektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="875ef-132">The name of the project file.</span>
          </span>
        </param>
        <param name="globalProperties">
          <span data-ttu-id="875ef-133">Właściwości globalne do użycia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="875ef-133">The global properties to use.</span>
          </span>
          <span data-ttu-id="875ef-134">Może mieć wartość zerową.</span>
          <span class="sxs-lookup">
            <span data-stu-id="875ef-134">May be null.</span>
          </span>
        </param>
        <param name="toolsVersion">
          <span data-ttu-id="875ef-135">Wersja narzędzia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="875ef-135">The tools version.</span>
          </span>
          <span data-ttu-id="875ef-136">Może mieć wartość zerową.</span>
          <span class="sxs-lookup">
            <span data-stu-id="875ef-136">May be null.</span>
          </span>
        </param>
        <param name="projectCollection">
          <span data-ttu-id="875ef-137">Kolekcja projektów</span>
          <span class="sxs-lookup">
            <span data-stu-id="875ef-137">Project collection</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="875ef-138">Tworzy nowe wystąpienie projektu i inicjuje go z pliku projektu, przy użyciu danego globalnych właściwości, wersja narzędzi i kolekcji projektów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="875ef-138">Creates a new project instance and initializes it from the given project file, using the given global properties, tools version, and project collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="875ef-139">Nie pośrednich <xref:Microsoft.Build.Evaluation.Project> tworzony jest obiekt.</span><span class="sxs-lookup"><span data-stu-id="875ef-139">No intermediate <xref:Microsoft.Build.Evaluation.Project> object is created.</span></span> <span data-ttu-id="875ef-140">Jest to przydatne, jeśli projekt zostanie skompilowany, ale nie wyświetlony lub edytowany.</span><span class="sxs-lookup"><span data-stu-id="875ef-140">This is useful if a project is going to be built, but not displayed or edited.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ProjectInstance (Microsoft.Build.Construction.ProjectRootElement xml, System.Collections.Generic.IDictionary&lt;string,string&gt; globalProperties, string toolsVersion, string subToolsetVersion, Microsoft.Build.Evaluation.ProjectCollection projectCollection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.Build.Construction.ProjectRootElement xml, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; globalProperties, string toolsVersion, string subToolsetVersion, class Microsoft.Build.Evaluation.ProjectCollection projectCollection) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.#ctor(Microsoft.Build.Construction.ProjectRootElement,System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.String,Microsoft.Build.Evaluation.ProjectCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ProjectInstance(Microsoft::Build::Construction::ProjectRootElement ^ xml, System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ globalProperties, System::String ^ toolsVersion, System::String ^ subToolsetVersion, Microsoft::Build::Evaluation::ProjectCollection ^ projectCollection);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="xml" Type="Microsoft.Build.Construction.ProjectRootElement" />
        <Parameter Name="globalProperties" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="toolsVersion" Type="System.String" />
        <Parameter Name="subToolsetVersion" Type="System.String" />
        <Parameter Name="projectCollection" Type="Microsoft.Build.Evaluation.ProjectCollection" />
      </Parameters>
      <Docs>
        <param name="xml">
          <span data-ttu-id="875ef-141">Elementem głównym projektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="875ef-141">The project root element.</span>
          </span>
        </param>
        <param name="globalProperties">
          <span data-ttu-id="875ef-142">Właściwości globalne do użycia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="875ef-142">The global properties to use.</span>
          </span>
          <span data-ttu-id="875ef-143">Może mieć wartość zerową.</span>
          <span class="sxs-lookup">
            <span data-stu-id="875ef-143">May be null.</span>
          </span>
        </param>
        <param name="toolsVersion">
          <span data-ttu-id="875ef-144">Wersja narzędzia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="875ef-144">The tools version.</span>
          </span>
          <span data-ttu-id="875ef-145">Może mieć wartość zerową.</span>
          <span class="sxs-lookup">
            <span data-stu-id="875ef-145">May be null.</span>
          </span>
        </param>
        <param name="subToolsetVersion">
          <span data-ttu-id="875ef-146">Wersja zestawu narzędzi sub.</span>
          <span class="sxs-lookup">
            <span data-stu-id="875ef-146">The sub toolset version.</span>
          </span>
          <span data-ttu-id="875ef-147">Może mieć wartość zerową.</span>
          <span class="sxs-lookup">
            <span data-stu-id="875ef-147">May be null.</span>
          </span>
        </param>
        <param name="projectCollection">
          <span data-ttu-id="875ef-148">Kolekcja projektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="875ef-148">Project collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="875ef-149">Tworzy nowe wystąpienie projektu i inicjuje go z katalogu głównego projektu, przy użyciu danego globalnych właściwości, wersja narzędzi i kolekcji projektów</span>
          <span class="sxs-lookup">
            <span data-stu-id="875ef-149">Creates a new project instance and initializes it from the given project root, using the given global properties, tools version, and project collection</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="875ef-150">Nie pośrednich <xref:Microsoft.Build.Evaluation.Project> tworzony jest obiekt.</span><span class="sxs-lookup"><span data-stu-id="875ef-150">No intermediate <xref:Microsoft.Build.Evaluation.Project> object is created.</span></span> <span data-ttu-id="875ef-151">Jest to przydatne, jeśli projekt zostanie skompilowany, ale nie wyświetlony lub edytowany.</span><span class="sxs-lookup"><span data-stu-id="875ef-151">This is useful if a project is going to be built, but not displayed or edited.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ProjectInstance (string projectFile, System.Collections.Generic.IDictionary&lt;string,string&gt; globalProperties, string toolsVersion, string subToolsetVersion, Microsoft.Build.Evaluation.ProjectCollection projectCollection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string projectFile, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; globalProperties, string toolsVersion, string subToolsetVersion, class Microsoft.Build.Evaluation.ProjectCollection projectCollection) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.String,Microsoft.Build.Evaluation.ProjectCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ProjectInstance(System::String ^ projectFile, System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ globalProperties, System::String ^ toolsVersion, System::String ^ subToolsetVersion, Microsoft::Build::Evaluation::ProjectCollection ^ projectCollection);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="projectFile" Type="System.String" />
        <Parameter Name="globalProperties" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="toolsVersion" Type="System.String" />
        <Parameter Name="subToolsetVersion" Type="System.String" />
        <Parameter Name="projectCollection" Type="Microsoft.Build.Evaluation.ProjectCollection" />
      </Parameters>
      <Docs>
        <param name="projectFile">
          <span data-ttu-id="875ef-152">Nazwa pliku projektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="875ef-152">The name of the project file.</span>
          </span>
        </param>
        <param name="globalProperties">
          <span data-ttu-id="875ef-153">Właściwości globalne do użycia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="875ef-153">The global properties to use.</span>
          </span>
          <span data-ttu-id="875ef-154">Może mieć wartość zerową.</span>
          <span class="sxs-lookup">
            <span data-stu-id="875ef-154">May be null.</span>
          </span>
        </param>
        <param name="toolsVersion">
          <span data-ttu-id="875ef-155">Wersja narzędzia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="875ef-155">The tools version.</span>
          </span>
          <span data-ttu-id="875ef-156">Może mieć wartość zerową.</span>
          <span class="sxs-lookup">
            <span data-stu-id="875ef-156">May be null.</span>
          </span>
        </param>
        <param name="subToolsetVersion">
          <span data-ttu-id="875ef-157">Wersja zestawu narzędzi sub.</span>
          <span class="sxs-lookup">
            <span data-stu-id="875ef-157">The sub toolset version.</span>
          </span>
          <span data-ttu-id="875ef-158">Może mieć wartość zerową.</span>
          <span class="sxs-lookup">
            <span data-stu-id="875ef-158">May be null.</span>
          </span>
        </param>
        <param name="projectCollection">
          <span data-ttu-id="875ef-159">Kolekcja projektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="875ef-159">Project collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="875ef-160">Tworzy nowe wystąpienie projektu i inicjuje go z pliku projektu, przy użyciu danego globalnych właściwości, wersja narzędzi, sub wersji zestaw narzędzi i kolekcji projektów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="875ef-160">Creates a new project instance and initializes it from the given project file, using the given global properties, tools version, sub toolset version, and project collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="875ef-161">Nie pośrednich <xref:Microsoft.Build.Evaluation.Project> tworzony jest obiekt.</span><span class="sxs-lookup"><span data-stu-id="875ef-161">No intermediate <xref:Microsoft.Build.Evaluation.Project> object is created.</span></span> <span data-ttu-id="875ef-162">Jest to przydatne, jeśli projekt zostanie skompilowany, ale nie wyświetlony lub edytowany.</span><span class="sxs-lookup"><span data-stu-id="875ef-162">This is useful if a project is going to be built, but not displayed or edited.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddItem">
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="875ef-163">Dodaje do projektu element bez metadanych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="875ef-163">Adds an item with no metadata to the project.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddItem">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Execution.ProjectItemInstance AddItem (string itemType, string evaluatedInclude);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Build.Execution.ProjectItemInstance AddItem(string itemType, string evaluatedInclude) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.AddItem(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddItem (itemType As String, evaluatedInclude As String) As ProjectItemInstance" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Build::Execution::ProjectItemInstance ^ AddItem(System::String ^ itemType, System::String ^ evaluatedInclude);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Execution.ProjectItemInstance</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="itemType" Type="System.String" />
        <Parameter Name="evaluatedInclude" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="itemType">
          <span data-ttu-id="875ef-164">Typ elementu do dodania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="875ef-164">The item type of the item to be added.</span>
          </span>
        </param>
        <param name="evaluatedInclude">
          <span data-ttu-id="875ef-165">Obliczane atrybutu Include elementu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="875ef-165">The evaluated Include attribute of the item.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="875ef-166">Dodaje do projektu element bez metadanych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="875ef-166">Adds an item with no metadata to the project.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="875ef-167">Zwraca nowy element.</span>
          <span class="sxs-lookup">
            <span data-stu-id="875ef-167">Returns the new item.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="875ef-168">Nie możemy wykonać ProjectItemInstance, aby upewnić się, że nie mamy, który jest już używany przez inny ProjectInstance.</span><span class="sxs-lookup"><span data-stu-id="875ef-168">We don't take a ProjectItemInstance to make sure we don't have one that's already in use by another ProjectInstance.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddItem">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Execution.ProjectItemInstance AddItem (string itemType, string evaluatedInclude, System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;string,string&gt;&gt; metadata);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Build.Execution.ProjectItemInstance AddItem(string itemType, string evaluatedInclude, class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;string, string&gt;&gt; metadata) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.AddItem(System.String,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}})" />
      <MemberSignature Language="VB.NET" Value="Public Function AddItem (itemType As String, evaluatedInclude As String, metadata As IEnumerable(Of KeyValuePair(Of String, String))) As ProjectItemInstance" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Build::Execution::ProjectItemInstance ^ AddItem(System::String ^ itemType, System::String ^ evaluatedInclude, System::Collections::Generic::IEnumerable&lt;System::Collections::Generic::KeyValuePair&lt;System::String ^, System::String ^&gt;&gt; ^ metadata);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Execution.ProjectItemInstance</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="itemType" Type="System.String" />
        <Parameter Name="evaluatedInclude" Type="System.String" />
        <Parameter Name="metadata" Type="System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.String&gt;&gt;" />
      </Parameters>
      <Docs>
        <param name="itemType">
          <span data-ttu-id="875ef-169">Typ elementu do dodania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="875ef-169">The item type of the item to be added.</span>
          </span>
        </param>
        <param name="evaluatedInclude">
          <span data-ttu-id="875ef-170">Obliczane atrybutu Include elementu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="875ef-170">The evaluated Include attribute of the item.</span>
          </span>
        </param>
        <param name="metadata">
          <span data-ttu-id="875ef-171">Metadane elementu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="875ef-171">The metadata of the item.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="875ef-172">Dodaje element z określonych metadanych do projektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="875ef-172">Adds an item with the given metadata to the project.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="875ef-173">Zwraca nowy element.</span>
          <span class="sxs-lookup">
            <span data-stu-id="875ef-173">Return the new item.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="875ef-174">Nie możemy wykonać ProjectItemInstance, aby upewnić się, że nie mamy, który jest już używany przez inny ProjectInstance.</span><span class="sxs-lookup"><span data-stu-id="875ef-174">We don't take a ProjectItemInstance to make sure we don't have one that's already in use by another ProjectInstance.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Build">
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="875ef-175">Tworzy domyślne elementy docelowe projektu z rejestratorów kolekcji projektów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="875ef-175">Builds the default targets of the project with loggers of the project collection.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Build">
      <MemberSignature Language="C#" Value="public bool Build ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Build() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.Build" />
      <MemberSignature Language="VB.NET" Value="Public Function Build () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Build();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="875ef-176">Tworzy domyślne elementy docelowe projektu z rejestratorów kolekcji projektów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="875ef-176">Builds the default targets of the project with loggers of the project collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="875ef-177">Zwraca wartość true, jeżeli kompilacja zakończy się pomyślnie; w przeciwnym razie zwraca wartość false.</span>
          <span class="sxs-lookup">
            <span data-stu-id="875ef-177">Returns true if the build succeeds; false otherwise.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Build">
      <MemberSignature Language="C#" Value="public bool Build (System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Framework.ILogger&gt; loggers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Build(class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Build.Framework.ILogger&gt; loggers) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.Build(System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger})" />
      <MemberSignature Language="VB.NET" Value="Public Function Build (loggers As IEnumerable(Of ILogger)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Build(System::Collections::Generic::IEnumerable&lt;Microsoft::Build::Framework::ILogger ^&gt; ^ loggers);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="loggers" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Framework.ILogger&gt;" />
      </Parameters>
      <Docs>
        <param name="loggers">
          <span data-ttu-id="875ef-178">Rejestratory do użytku podczas kompilacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="875ef-178">The loggers to use for the build.</span>
          </span>
          <span data-ttu-id="875ef-179">Może mieć wartość zerową.</span>
          <span class="sxs-lookup">
            <span data-stu-id="875ef-179">May be null.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="875ef-180">Tworzy domyślne elementy docelowe projektu z danym rejestratorów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="875ef-180">Builds the default targets of the project with the given loggers.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="875ef-181">Zwraca wartość true, jeżeli kompilacja zakończy się pomyślnie; w przeciwnym razie zwraca wartość false.</span>
          <span class="sxs-lookup">
            <span data-stu-id="875ef-181">Returns true if the build succeeds; false otherwise.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="875ef-182">Generuje wyjątek InvalidOperationException, jeśli dowolny z dostarczonych rejestratorów jest już dołączony do usługi rejestrowania.</span><span class="sxs-lookup"><span data-stu-id="875ef-182">Throws InvalidOperationException if any of the loggers supplied are already attached to the logging service.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Build">
      <MemberSignature Language="C#" Value="public bool Build (System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Framework.ILogger&gt; loggers, System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Logging.ForwardingLoggerRecord&gt; remoteLoggers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Build(class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Build.Framework.ILogger&gt; loggers, class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Build.Logging.ForwardingLoggerRecord&gt; remoteLoggers) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.Build(System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger},System.Collections.Generic.IEnumerable{Microsoft.Build.Logging.ForwardingLoggerRecord})" />
      <MemberSignature Language="VB.NET" Value="Public Function Build (loggers As IEnumerable(Of ILogger), remoteLoggers As IEnumerable(Of ForwardingLoggerRecord)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Build(System::Collections::Generic::IEnumerable&lt;Microsoft::Build::Framework::ILogger ^&gt; ^ loggers, System::Collections::Generic::IEnumerable&lt;Microsoft::Build::Logging::ForwardingLoggerRecord ^&gt; ^ remoteLoggers);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="loggers" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Framework.ILogger&gt;" />
        <Parameter Name="remoteLoggers" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Logging.ForwardingLoggerRecord&gt;" />
      </Parameters>
      <Docs>
        <param name="loggers">
          <span data-ttu-id="875ef-183">Rejestratory do użytku podczas kompilacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="875ef-183">The loggers to use for the build.</span>
          </span>
          <span data-ttu-id="875ef-184">Może mieć wartość zerową.</span>
          <span class="sxs-lookup">
            <span data-stu-id="875ef-184">May be null.</span>
          </span>
        </param>
        <param name="remoteLoggers">
          <span data-ttu-id="875ef-185">Zdalne rejestratory do użytku na rzecz kompilacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="875ef-185">The remote loggers to use for the build.</span>
          </span>
          <span data-ttu-id="875ef-186">Może mieć wartość zerową.</span>
          <span class="sxs-lookup">
            <span data-stu-id="875ef-186">May be null.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="875ef-187">Tworzy domyślne elementy docelowe projektu z danym rejestratorów i rejestratorów zdalnego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="875ef-187">Builds the default targets of the project with the given loggers and remote loggers.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="875ef-188">Zwraca wartość true, jeżeli kompilacja zakończy się pomyślnie; w przeciwnym razie zwraca wartość false.</span>
          <span class="sxs-lookup">
            <span data-stu-id="875ef-188">Returns true if the build succeeds; false otherwise.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="875ef-189">Generuje wyjątek InvalidOperationException, jeśli dowolny z dostarczonych rejestratorów jest już dołączony do usługi rejestrowania.</span><span class="sxs-lookup"><span data-stu-id="875ef-189">Throws InvalidOperationException if any of the loggers supplied are already attached to the logging service.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Build">
      <MemberSignature Language="C#" Value="public bool Build (string target, System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Framework.ILogger&gt; loggers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Build(string target, class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Build.Framework.ILogger&gt; loggers) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.Build(System.String,System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger})" />
      <MemberSignature Language="VB.NET" Value="Public Function Build (target As String, loggers As IEnumerable(Of ILogger)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Build(System::String ^ target, System::Collections::Generic::IEnumerable&lt;Microsoft::Build::Framework::ILogger ^&gt; ^ loggers);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.String" />
        <Parameter Name="loggers" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Framework.ILogger&gt;" />
      </Parameters>
      <Docs>
        <param name="target">
          <span data-ttu-id="875ef-190">Element docelowy do skompilowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="875ef-190">The target to build.</span>
          </span>
          <span data-ttu-id="875ef-191">Może mieć wartość zerową.</span>
          <span class="sxs-lookup">
            <span data-stu-id="875ef-191">May be null.</span>
          </span>
        </param>
        <param name="loggers">
          <span data-ttu-id="875ef-192">Rejestratory do użytku podczas kompilacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="875ef-192">The loggers to use for the build.</span>
          </span>
          <span data-ttu-id="875ef-193">Może mieć wartość zerową.</span>
          <span class="sxs-lookup">
            <span data-stu-id="875ef-193">May be null.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="875ef-194">Tworzy element docelowy danego projektu z danym rejestratorów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="875ef-194">Builds the given target of the project with the given loggers.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="875ef-195">Zwraca wartość true, jeżeli kompilacja zakończy się pomyślnie; w przeciwnym razie zwraca wartość false.</span>
          <span class="sxs-lookup">
            <span data-stu-id="875ef-195">Returns true if the build succeeds; false otherwise.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="875ef-196">Generuje wyjątek InvalidOperationException, jeśli dowolny z dostarczonych rejestratorów jest już dołączony do usługi rejestrowania.</span><span class="sxs-lookup"><span data-stu-id="875ef-196">Throws InvalidOperationException if any of the loggers supplied are already attached to the logging service.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Build">
      <MemberSignature Language="C#" Value="public bool Build (string[] targets, System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Framework.ILogger&gt; loggers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Build(string[] targets, class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Build.Framework.ILogger&gt; loggers) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.Build(System.String[],System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger})" />
      <MemberSignature Language="VB.NET" Value="Public Function Build (targets As String(), loggers As IEnumerable(Of ILogger)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Build(cli::array &lt;System::String ^&gt; ^ targets, System::Collections::Generic::IEnumerable&lt;Microsoft::Build::Framework::ILogger ^&gt; ^ loggers);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targets" Type="System.String[]" />
        <Parameter Name="loggers" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Framework.ILogger&gt;" />
      </Parameters>
      <Docs>
        <param name="targets">
          <span data-ttu-id="875ef-197">Cele, które mają być poddane kompilacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="875ef-197">The targets to build.</span>
          </span>
          <span data-ttu-id="875ef-198">Może mieć wartość zerową.</span>
          <span class="sxs-lookup">
            <span data-stu-id="875ef-198">May be null.</span>
          </span>
        </param>
        <param name="loggers">
          <span data-ttu-id="875ef-199">Rejestratory do użytku podczas kompilacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="875ef-199">The loggers to use for the build.</span>
          </span>
          <span data-ttu-id="875ef-200">Może mieć wartość zerową.</span>
          <span class="sxs-lookup">
            <span data-stu-id="875ef-200">May be null.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="875ef-201">Tworzy danego elementy docelowe projektu z danym rejestratorów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="875ef-201">Builds the given targets of the project with the given loggers.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="875ef-202">Zwraca wartość true, jeżeli kompilacja zakończy się pomyślnie; w przeciwnym razie zwraca wartość false.</span>
          <span class="sxs-lookup">
            <span data-stu-id="875ef-202">Returns true if the build succeeds; false otherwise.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="875ef-203">Generuje wyjątek InvalidOperationException, jeśli dowolny z dostarczonych rejestratorów jest już dołączony do usługi rejestrowania.</span><span class="sxs-lookup"><span data-stu-id="875ef-203">Throws InvalidOperationException if any of the loggers supplied are already attached to the logging service.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Build">
      <MemberSignature Language="C#" Value="public bool Build (string target, System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Framework.ILogger&gt; loggers, System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Logging.ForwardingLoggerRecord&gt; remoteLoggers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Build(string target, class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Build.Framework.ILogger&gt; loggers, class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Build.Logging.ForwardingLoggerRecord&gt; remoteLoggers) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.Build(System.String,System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger},System.Collections.Generic.IEnumerable{Microsoft.Build.Logging.ForwardingLoggerRecord})" />
      <MemberSignature Language="VB.NET" Value="Public Function Build (target As String, loggers As IEnumerable(Of ILogger), remoteLoggers As IEnumerable(Of ForwardingLoggerRecord)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Build(System::String ^ target, System::Collections::Generic::IEnumerable&lt;Microsoft::Build::Framework::ILogger ^&gt; ^ loggers, System::Collections::Generic::IEnumerable&lt;Microsoft::Build::Logging::ForwardingLoggerRecord ^&gt; ^ remoteLoggers);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.String" />
        <Parameter Name="loggers" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Framework.ILogger&gt;" />
        <Parameter Name="remoteLoggers" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Logging.ForwardingLoggerRecord&gt;" />
      </Parameters>
      <Docs>
        <param name="target">
          <span data-ttu-id="875ef-204">Element docelowy do skompilowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="875ef-204">The target to build.</span>
          </span>
          <span data-ttu-id="875ef-205">Może mieć wartość zerową.</span>
          <span class="sxs-lookup">
            <span data-stu-id="875ef-205">May be null.</span>
          </span>
        </param>
        <param name="loggers">
          <span data-ttu-id="875ef-206">Rejestratory do użytku podczas kompilacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="875ef-206">The loggers to use for the build.</span>
          </span>
          <span data-ttu-id="875ef-207">Może mieć wartość zerową.</span>
          <span class="sxs-lookup">
            <span data-stu-id="875ef-207">May be null.</span>
          </span>
        </param>
        <param name="remoteLoggers">
          <span data-ttu-id="875ef-208">Zdalne rejestratory do użytku na rzecz kompilacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="875ef-208">The remote loggers to use for the build.</span>
          </span>
          <span data-ttu-id="875ef-209">Może mieć wartość zerową.</span>
          <span class="sxs-lookup">
            <span data-stu-id="875ef-209">May be null.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="875ef-210">Tworzy element docelowy danego projektu z danym rejestratorów i rejestratorów zdalnego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="875ef-210">Builds the given target of the project with the given loggers and remote loggers.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="875ef-211">Zwraca wartość true, jeżeli kompilacja zakończy się pomyślnie; w przeciwnym razie zwraca wartość false.</span>
          <span class="sxs-lookup">
            <span data-stu-id="875ef-211">Returns true if the build succeeds; false otherwise.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="875ef-212">Generuje wyjątek InvalidOperationException, jeśli dowolny z dostarczonych rejestratorów jest już dołączony do usługi rejestrowania.</span><span class="sxs-lookup"><span data-stu-id="875ef-212">Throws InvalidOperationException if any of the loggers supplied are already attached to the logging service.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Build">
      <MemberSignature Language="C#" Value="public bool Build (string[] targets, System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Framework.ILogger&gt; loggers, out System.Collections.Generic.IDictionary&lt;string,Microsoft.Build.Execution.TargetResult&gt; targetOutputs);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Build(string[] targets, class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Build.Framework.ILogger&gt; loggers, [out] class System.Collections.Generic.IDictionary`2&lt;string, class Microsoft.Build.Execution.TargetResult&gt;&amp; targetOutputs) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.Build(System.String[],System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger},System.Collections.Generic.IDictionary{System.String,Microsoft.Build.Execution.TargetResult}@)" />
      <MemberSignature Language="VB.NET" Value="Public Function Build (targets As String(), loggers As IEnumerable(Of ILogger), ByRef targetOutputs As IDictionary(Of String, TargetResult)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Build(cli::array &lt;System::String ^&gt; ^ targets, System::Collections::Generic::IEnumerable&lt;Microsoft::Build::Framework::ILogger ^&gt; ^ loggers, [Runtime::InteropServices::Out] System::Collections::Generic::IDictionary&lt;System::String ^, Microsoft::Build::Execution::TargetResult ^&gt; ^ % targetOutputs);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targets" Type="System.String[]" />
        <Parameter Name="loggers" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Framework.ILogger&gt;" />
        <Parameter Name="targetOutputs" Type="System.Collections.Generic.IDictionary&lt;System.String,Microsoft.Build.Execution.TargetResult&gt;&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="targets">
          <span data-ttu-id="875ef-213">Lista celów do kompilacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="875ef-213">List of targets to build.</span>
          </span>
          <span data-ttu-id="875ef-214">Może mieć wartość zerową.</span>
          <span class="sxs-lookup">
            <span data-stu-id="875ef-214">May be null.</span>
          </span>
        </param>
        <param name="loggers">
          <span data-ttu-id="875ef-215">Lista wyliczany rejestratorów do użycia w celu utworzenia obiektów docelowych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="875ef-215">Enumerated list of loggers to use for building targets.</span>
          </span>
        </param>
        <param name="targetOutputs">
          <span data-ttu-id="875ef-216">Dane wyjściowe kompilacji docelowej.</span>
          <span class="sxs-lookup">
            <span data-stu-id="875ef-216">Outputs of target builds.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="875ef-217">Tworzenie listy elementów docelowych z określonym rejestratorów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="875ef-217">Build a list of targets with specified loggers.</span>
          </span>
          <span data-ttu-id="875ef-218">Obiekty docelowe może mieć wartości null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="875ef-218">Targets may be null.</span>
          </span>
          <span data-ttu-id="875ef-219">Rejestratory może mieć wartości null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="875ef-219">Loggers may be null.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="875ef-220">Zwraca wartość true w przypadku powodzenia; wartość false w razie niepowodzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="875ef-220">Returns true on success, false on failure.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="875ef-221">Zgłasza wyjątek InvalidOperationException, jeśli dowolne rejestratorów dostarczony już połączona usługa rejestrowania, który mamy zostały przekazane.</span><span class="sxs-lookup"><span data-stu-id="875ef-221">If any of the loggers supplied are already attached to the logging service we were passed, throws InvalidOperationException.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Build">
      <MemberSignature Language="C#" Value="public bool Build (string[] targets, System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Framework.ILogger&gt; loggers, System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Logging.ForwardingLoggerRecord&gt; remoteLoggers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Build(string[] targets, class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Build.Framework.ILogger&gt; loggers, class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Build.Logging.ForwardingLoggerRecord&gt; remoteLoggers) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.Build(System.String[],System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger},System.Collections.Generic.IEnumerable{Microsoft.Build.Logging.ForwardingLoggerRecord})" />
      <MemberSignature Language="VB.NET" Value="Public Function Build (targets As String(), loggers As IEnumerable(Of ILogger), remoteLoggers As IEnumerable(Of ForwardingLoggerRecord)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Build(cli::array &lt;System::String ^&gt; ^ targets, System::Collections::Generic::IEnumerable&lt;Microsoft::Build::Framework::ILogger ^&gt; ^ loggers, System::Collections::Generic::IEnumerable&lt;Microsoft::Build::Logging::ForwardingLoggerRecord ^&gt; ^ remoteLoggers);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targets" Type="System.String[]" />
        <Parameter Name="loggers" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Framework.ILogger&gt;" />
        <Parameter Name="remoteLoggers" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Logging.ForwardingLoggerRecord&gt;" />
      </Parameters>
      <Docs>
        <param name="targets">
          <span data-ttu-id="875ef-222">Cele, które mają być poddane kompilacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="875ef-222">The targets to build.</span>
          </span>
          <span data-ttu-id="875ef-223">Może mieć wartość zerową.</span>
          <span class="sxs-lookup">
            <span data-stu-id="875ef-223">May be null.</span>
          </span>
        </param>
        <param name="loggers">
          <span data-ttu-id="875ef-224">Rejestratory do użytku podczas kompilacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="875ef-224">The loggers to use for the build.</span>
          </span>
          <span data-ttu-id="875ef-225">Może mieć wartość zerową.</span>
          <span class="sxs-lookup">
            <span data-stu-id="875ef-225">May be null.</span>
          </span>
        </param>
        <param name="remoteLoggers">
          <span data-ttu-id="875ef-226">Zdalne rejestratory do użytku na rzecz kompilacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="875ef-226">The remote loggers to use for the build.</span>
          </span>
          <span data-ttu-id="875ef-227">Może mieć wartość zerową.</span>
          <span class="sxs-lookup">
            <span data-stu-id="875ef-227">May be null.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="875ef-228">Tworzy danego elementy docelowe projektu z danym rejestratorów i rejestratorów zdalnego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="875ef-228">Builds the given targets of the project with the given loggers and remote loggers.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="875ef-229">Zwraca wartość true, jeżeli kompilacja zakończy się pomyślnie; w przeciwnym razie zwraca wartość false.</span>
          <span class="sxs-lookup">
            <span data-stu-id="875ef-229">Returns true if the build succeeds; false otherwise.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="875ef-230">Generuje wyjątek InvalidOperationException, jeśli dowolny z dostarczonych rejestratorów jest już dołączony do usługi rejestrowania.</span><span class="sxs-lookup"><span data-stu-id="875ef-230">Throws InvalidOperationException if any of the loggers supplied are already attached to the logging service.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Build">
      <MemberSignature Language="C#" Value="public bool Build (string[] targets, System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Framework.ILogger&gt; loggers, System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Logging.ForwardingLoggerRecord&gt; remoteLoggers, out System.Collections.Generic.IDictionary&lt;string,Microsoft.Build.Execution.TargetResult&gt; targetOutputs);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Build(string[] targets, class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Build.Framework.ILogger&gt; loggers, class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Build.Logging.ForwardingLoggerRecord&gt; remoteLoggers, [out] class System.Collections.Generic.IDictionary`2&lt;string, class Microsoft.Build.Execution.TargetResult&gt;&amp; targetOutputs) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.Build(System.String[],System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger},System.Collections.Generic.IEnumerable{Microsoft.Build.Logging.ForwardingLoggerRecord},System.Collections.Generic.IDictionary{System.String,Microsoft.Build.Execution.TargetResult}@)" />
      <MemberSignature Language="VB.NET" Value="Public Function Build (targets As String(), loggers As IEnumerable(Of ILogger), remoteLoggers As IEnumerable(Of ForwardingLoggerRecord), ByRef targetOutputs As IDictionary(Of String, TargetResult)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Build(cli::array &lt;System::String ^&gt; ^ targets, System::Collections::Generic::IEnumerable&lt;Microsoft::Build::Framework::ILogger ^&gt; ^ loggers, System::Collections::Generic::IEnumerable&lt;Microsoft::Build::Logging::ForwardingLoggerRecord ^&gt; ^ remoteLoggers, [Runtime::InteropServices::Out] System::Collections::Generic::IDictionary&lt;System::String ^, Microsoft::Build::Execution::TargetResult ^&gt; ^ % targetOutputs);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targets" Type="System.String[]" />
        <Parameter Name="loggers" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Framework.ILogger&gt;" />
        <Parameter Name="remoteLoggers" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Logging.ForwardingLoggerRecord&gt;" />
        <Parameter Name="targetOutputs" Type="System.Collections.Generic.IDictionary&lt;System.String,Microsoft.Build.Execution.TargetResult&gt;&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="targets">
          <span data-ttu-id="875ef-231">Cele, które mają być poddane kompilacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="875ef-231">The targets to build.</span>
          </span>
          <span data-ttu-id="875ef-232">Może mieć wartość zerową.</span>
          <span class="sxs-lookup">
            <span data-stu-id="875ef-232">May be null.</span>
          </span>
        </param>
        <param name="loggers">
          <span data-ttu-id="875ef-233">Rejestratory do użytku podczas kompilacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="875ef-233">The loggers to use for the build.</span>
          </span>
          <span data-ttu-id="875ef-234">Może mieć wartość zerową.</span>
          <span class="sxs-lookup">
            <span data-stu-id="875ef-234">May be null.</span>
          </span>
        </param>
        <param name="remoteLoggers">
          <span data-ttu-id="875ef-235">Zdalne rejestratory do użytku na rzecz kompilacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="875ef-235">The remote loggers to use for the build.</span>
          </span>
          <span data-ttu-id="875ef-236">Może mieć wartość zerową.</span>
          <span class="sxs-lookup">
            <span data-stu-id="875ef-236">May be null.</span>
          </span>
        </param>
        <param name="targetOutputs">
          <span data-ttu-id="875ef-237">Docelowe produkty wyjściowe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="875ef-237">The target outputs.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="875ef-238">Tworzy wartościami docelowymi z danych wyjściowych elementu docelowego podanego i rejestratorów danego i rejestratorów zdalnego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="875ef-238">Builds the given targets with the given target outputs and with the given loggers and remote loggers.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="875ef-239">Zwraca wartość true, jeżeli kompilacja zakończy się pomyślnie; w przeciwnym razie zwraca wartość false.</span>
          <span class="sxs-lookup">
            <span data-stu-id="875ef-239">Returns true if the build succeeds; false otherwise.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="875ef-240">Generuje wyjątek InvalidOperationException, jeśli dowolny z dostarczonych rejestratorów jest już dołączony do usługi rejestrowania.</span><span class="sxs-lookup"><span data-stu-id="875ef-240">Throws InvalidOperationException if any of the loggers supplied are already attached to the logging service.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="DeepCopy">
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="875ef-241">Tworzy niezależne głębokie klonu tego projektu i wszystko w niej.</span>
          <span class="sxs-lookup">
            <span data-stu-id="875ef-241">Creates an independent, deep clone of this project and everything in it.</span>
          </span>
          <span data-ttu-id="875ef-242">Przydatne do kompilowania jednego pliku lub do przechowywania wyników kompilacji między kompilacjami.</span>
          <span class="sxs-lookup">
            <span data-stu-id="875ef-242">Useful for compiling a single file or for keeping build results between builds.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DeepCopy">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Execution.ProjectInstance DeepCopy ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Build.Execution.ProjectInstance DeepCopy() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.DeepCopy" />
      <MemberSignature Language="VB.NET" Value="Public Function DeepCopy () As ProjectInstance" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Build::Execution::ProjectInstance ^ DeepCopy();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Execution.ProjectInstance</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="875ef-243">Tworzy niezależne głębokie klonu tego projektu i wszystko w niej.</span>
          <span class="sxs-lookup">
            <span data-stu-id="875ef-243">Creates an independent, deep clone of this project and everything in it.</span>
          </span>
          <span data-ttu-id="875ef-244">Klonowanie ma tego samego zmienność co oryginalny.</span>
          <span class="sxs-lookup">
            <span data-stu-id="875ef-244">Clone has the same mutability as the original.</span>
          </span>
          <span data-ttu-id="875ef-245">Przydatne do kompilowania jednego pliku lub do przechowywania wyników kompilacji między kompilacjami.</span>
          <span class="sxs-lookup">
            <span data-stu-id="875ef-245">Useful for compiling a single file or for keeping build results between builds.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="875ef-246">Tworzy niezależne, głębokie klonu tego projektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="875ef-246">Creates an independent, deep clone of this project.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeepCopy">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Execution.ProjectInstance DeepCopy (bool isImmutable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Build.Execution.ProjectInstance DeepCopy(bool isImmutable) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.DeepCopy(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function DeepCopy (isImmutable As Boolean) As ProjectInstance" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Build::Execution::ProjectInstance ^ DeepCopy(bool isImmutable);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Execution.ProjectInstance</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="isImmutable" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="isImmutable">
          <span data-ttu-id="875ef-247">Flaga wskazująca sklonować zmienność.</span>
          <span class="sxs-lookup">
            <span data-stu-id="875ef-247">Flag indicating clone mutability.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="875ef-248">Tworzy niezależne głębokie klonu tego projektu i wszystko w ramach tego zmienność określony.</span>
          <span class="sxs-lookup">
            <span data-stu-id="875ef-248">Creates an independent, deep clone of this project and everything in it, with specified mutability.</span>
          </span>
          <span data-ttu-id="875ef-249">Przydatne do kompilowania jednego pliku lub do przechowywania wyników kompilacji między kompilacjami.</span>
          <span class="sxs-lookup">
            <span data-stu-id="875ef-249">Useful for compiling a single file or for keeping build results between builds.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="875ef-250">Zwraca zmienność określonego niezależne, głębokie klonu tego projektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="875ef-250">Returns an independent, deep clone of this project, with specified mutability.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultTargets">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.List&lt;string&gt; DefaultTargets { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.List`1&lt;string&gt; DefaultTargets" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Execution.ProjectInstance.DefaultTargets" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DefaultTargets As List(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::List&lt;System::String ^&gt; ^ DefaultTargets { System::Collections::Generic::List&lt;System::String ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.Build.Evaluation.IEvaluatorData`4.DefaultTargets</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.List&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="875ef-251">Pobiera lub ustawia listę domyślne elementy docelowe dla tego projektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="875ef-251">Gets or sets the list of default targets for this project.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="875ef-252">Zwraca listę domyślne elementy docelowe dla tego projektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="875ef-252">Returns the list of default targets for this project.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="875ef-253">Domyślne elementy docelowe są tworzone, jeśli nie zostaną jawnie określone elementów docelowych.</span><span class="sxs-lookup"><span data-stu-id="875ef-253">Default targets are built if no targets are explicitly specified.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Directory">
      <MemberSignature Language="C#" Value="public string Directory { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Directory" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Execution.ProjectInstance.Directory" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Directory As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Directory { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.Build.Evaluation.IEvaluatorData`4.Directory</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="875ef-254">Pobiera katalog główny projektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="875ef-254">Gets the project root directory.</span>
          </span>
          <span data-ttu-id="875ef-255">Używane do oceny ścieżek względnych i ustawianie bieżącego katalogu podczas kompilacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="875ef-255">Used for evaluation of relative paths and setting the current directory during build.</span>
          </span>
          <span data-ttu-id="875ef-256">Nigdy nie ma wartość null: projekty nie są ładowane z dysku, Użyj bieżącego katalogu z uruchomienia kompilacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="875ef-256">Is never null: projects not loaded from disk use the current directory from the time the build started.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="875ef-257">Zwraca katalog główny projektu, który nigdy nie ma wartość null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="875ef-257">Returns the project root directory, which is never null.</span>
          </span>
          <span data-ttu-id="875ef-258">W czasie uruchomienia kompilacji projektów nie został załadowany z dysku powrócić bieżącego katalogu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="875ef-258">Projects not loaded from disk return the current directory at the time the build was started.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EvaluateCondition">
      <MemberSignature Language="C#" Value="public bool EvaluateCondition (string condition);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool EvaluateCondition(string condition) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.EvaluateCondition(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function EvaluateCondition (condition As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool EvaluateCondition(System::String ^ condition);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Build.Evaluation.IEvaluatorData`4.EvaluateCondition(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="condition" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="condition">
          <span data-ttu-id="875ef-259">Ciąg do wyodrębnienia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="875ef-259">The string to be expanded.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="875ef-260">Oblicza podanego ciągu jako warunek, rozwijając elementów i właściwości, za pomocą bieżącego elementów i właściwości dostępne, następnie podczas oceny logiczne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="875ef-260">Evaluates the provided string as a condition by expanding items and properties, using the current items and properties available, then doing a logical evaluation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="875ef-261">Zwraca wartość true, jeśli ciąg zwraca wartość true; wartość false w przeciwnym razie wartość.</span>
          <span class="sxs-lookup">
            <span data-stu-id="875ef-261">Returns true if the string evaluates to true; false otherwise.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="875ef-262">Jest to przydatne w oknie bezpośrednim.</span><span class="sxs-lookup"><span data-stu-id="875ef-262">This is useful for the immediate window.</span></span>  
  
 <span data-ttu-id="875ef-263">Nie zwiększa wyrażenia metadanych systemu od zera.</span><span class="sxs-lookup"><span data-stu-id="875ef-263">Does not expand bare metadata expressions.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExpandString">
      <MemberSignature Language="C#" Value="public string ExpandString (string unexpandedValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ExpandString(string unexpandedValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.ExpandString(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function ExpandString (unexpandedValue As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ ExpandString(System::String ^ unexpandedValue);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Build.Evaluation.IEvaluatorData`4.ExpandString(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="unexpandedValue" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="unexpandedValue">
          <span data-ttu-id="875ef-264">Ciąg do wyodrębnienia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="875ef-264">The string to be expanded.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="875ef-265">Oblicza podanego ciągu rozwijanie elementów i właściwości, za pomocą bieżącego elementów i dostępnych właściwości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="875ef-265">Evaluates the provided string by expanding items and properties, using the current items and properties available.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="875ef-266">Zwraca wartość typu ciąg rozszerzony.</span>
          <span class="sxs-lookup">
            <span data-stu-id="875ef-266">Returns the expanded string value.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="875ef-267">Jest to przydatne w przypadku niektórych hostów lub w oknie bezpośrednim debugera.</span><span class="sxs-lookup"><span data-stu-id="875ef-267">This is useful for some hosts, or for the debugger immediate window.</span></span>  
  
 <span data-ttu-id="875ef-268">Nie zwiększa wyrażenia metadanych systemu od zera.</span><span class="sxs-lookup"><span data-stu-id="875ef-268">Does not expand bare metadata expressions.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FullPath">
      <MemberSignature Language="C#" Value="public string FullPath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FullPath" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Execution.ProjectInstance.FullPath" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FullPath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ FullPath { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="875ef-269">Pobiera pełną ścieżkę do pliku projektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="875ef-269">Gets the full path to the project file.</span>
          </span>
          <span data-ttu-id="875ef-270">Używane do rejestrowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="875ef-270">Used for logging.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="875ef-271">Zwraca pełną ścieżkę do pliku projektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="875ef-271">Returns the full path to the project file.</span>
          </span>
          <span data-ttu-id="875ef-272">Zwraca wartość null, jeśli nigdy nie miał nazwę projektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="875ef-272">Returns null if the project was never named.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetEvaluatedItemIncludeEscaped">
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="875ef-273">Pobiera oszacowaną wartość wyjścia atrybutu Uwzględnij za pomocą podanej definicji elementu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="875ef-273">Gets the evaluated, escaped value of the Include attribute of the provided item definition.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetEvaluatedItemIncludeEscaped">
      <MemberSignature Language="C#" Value="public static string GetEvaluatedItemIncludeEscaped (Microsoft.Build.Execution.ProjectItemDefinitionInstance item);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetEvaluatedItemIncludeEscaped(class Microsoft.Build.Execution.ProjectItemDefinitionInstance item) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.GetEvaluatedItemIncludeEscaped(Microsoft.Build.Execution.ProjectItemDefinitionInstance)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetEvaluatedItemIncludeEscaped (item As ProjectItemDefinitionInstance) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetEvaluatedItemIncludeEscaped(Microsoft::Build::Execution::ProjectItemDefinitionInstance ^ item);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="Microsoft.Build.Execution.ProjectItemDefinitionInstance" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="875ef-274">Definicji elementu, który ma zostać obliczone i znaki ucieczki.</span>
          <span class="sxs-lookup">
            <span data-stu-id="875ef-274">The item definition to be evaluated and escaped.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="875ef-275">Pobiera oszacowaną wartość wyjścia atrybutu Uwzględnij za pomocą podanej definicji elementu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="875ef-275">Gets the evaluated, escaped value of the Include attribute of the provided item definition.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="875ef-276">Zwraca obliczane, wyjściowym wartość atrybutu Include definicji dostarczonego elementu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="875ef-276">Returns the evaluated, escaped value of the Include attribute of the provided item definition.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEvaluatedItemIncludeEscaped">
      <MemberSignature Language="C#" Value="public static string GetEvaluatedItemIncludeEscaped (Microsoft.Build.Execution.ProjectItemInstance item);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetEvaluatedItemIncludeEscaped(class Microsoft.Build.Execution.ProjectItemInstance item) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.GetEvaluatedItemIncludeEscaped(Microsoft.Build.Execution.ProjectItemInstance)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetEvaluatedItemIncludeEscaped (item As ProjectItemInstance) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetEvaluatedItemIncludeEscaped(Microsoft::Build::Execution::ProjectItemInstance ^ item);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="Microsoft.Build.Execution.ProjectItemInstance" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="875ef-277">Element, który ma zostać obliczone i znaki ucieczki.</span>
          <span class="sxs-lookup">
            <span data-stu-id="875ef-277">The item to be evaluated and escaped.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="875ef-278">Pobiera wartość obliczane, zmienionym atrybutu Include dostarczonego elementu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="875ef-278">Gets the evaluated, escaped value of the Include attribute of the provided item.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="875ef-279">Zwraca obliczane, wyjściowym wartość atrybutu Include dostarczonego elementu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="875ef-279">Returns the evaluated, escaped value of the Include attribute of the provided item.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetItems">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.ICollection&lt;Microsoft.Build.Execution.ProjectItemInstance&gt; GetItems (string itemType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.ICollection`1&lt;class Microsoft.Build.Execution.ProjectItemInstance&gt; GetItems(string itemType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.GetItems(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetItems (itemType As String) As ICollection(Of ProjectItemInstance)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::ICollection&lt;Microsoft::Build::Execution::ProjectItemInstance ^&gt; ^ GetItems(System::String ^ itemType);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Build.Evaluation.IItemProvider`1.GetItems(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;Microsoft.Build.Execution.ProjectItemInstance&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="itemType" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="itemType">
          <span data-ttu-id="875ef-280">Typ elementu elementów, które mają zostać pobrane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="875ef-280">The item type of the items to be retrieved.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="875ef-281">Pobiera wszystkie elementy w tym projekcie dotyczącą określonego typu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="875ef-281">Gets all the items in this project of the specified type.</span>
          </span>
          <span data-ttu-id="875ef-282">To jest lista tylko do odczytu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="875ef-282">This is a read-only list.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="875ef-283">Zwraca wszystkie elementy w tym projekcie dotyczącą określonego typu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="875ef-283">Returns all the items in this project of the specified type.</span>
          </span>
          <span data-ttu-id="875ef-284">Zwraca pustą listę, jeśli nie ma żadnych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="875ef-284">Returns an empty list if there are none.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetItemsByItemTypeAndEvaluatedInclude">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Execution.ProjectItemInstance&gt; GetItemsByItemTypeAndEvaluatedInclude (string itemType, string evaluatedInclude);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Build.Execution.ProjectItemInstance&gt; GetItemsByItemTypeAndEvaluatedInclude(string itemType, string evaluatedInclude) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.GetItemsByItemTypeAndEvaluatedInclude(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetItemsByItemTypeAndEvaluatedInclude (itemType As String, evaluatedInclude As String) As IEnumerable(Of ProjectItemInstance)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;Microsoft::Build::Execution::ProjectItemInstance ^&gt; ^ GetItemsByItemTypeAndEvaluatedInclude(System::String ^ itemType, System::String ^ evaluatedInclude);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Execution.ProjectItemInstance&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="itemType" Type="System.String" />
        <Parameter Name="evaluatedInclude" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="itemType">
          <span data-ttu-id="875ef-285">Typ elementu elementów, które mają zostać pobrane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="875ef-285">The item type of the items to be retrieved.</span>
          </span>
        </param>
        <param name="evaluatedInclude">
          <span data-ttu-id="875ef-286">Wartość obliczane include elementów do pobrania</span>
          <span class="sxs-lookup">
            <span data-stu-id="875ef-286">The evaluated include value of the items to be retrieved</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="875ef-287">Pobiera wszystkie elementy w tym projekcie dotyczącą określonego typu i oceniać je dołączyć wartość.</span>
          <span class="sxs-lookup">
            <span data-stu-id="875ef-287">Gets all the items in this project of the specified type and evaluated include value.</span>
          </span>
          <span data-ttu-id="875ef-288">To jest lista tylko do odczytu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="875ef-288">This is a read-only list.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="875ef-289">Zwraca wszystkie elementy w tym projekcie dotyczącą określonego typu i oceniać je dołączyć wartość.</span>
          <span class="sxs-lookup">
            <span data-stu-id="875ef-289">Returns all the items in this project of the specified type and evaluated include value.</span>
          </span>
          <span data-ttu-id="875ef-290">Zwraca pustą kolekcję, jeśli nie ma żadnych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="875ef-290">Returns an empty collection if there are none.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetMetadataValueEscaped">
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="875ef-291">Pobiera wartość ze zmienionym znaczeniem metadatum o podanej nazwie definicji dostarczonego elementu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="875ef-291">Gets the escaped value of the metadatum with the provided name of the provided item definition.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetMetadataValueEscaped">
      <MemberSignature Language="C#" Value="public static string GetMetadataValueEscaped (Microsoft.Build.Execution.ProjectMetadataInstance metadatum);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetMetadataValueEscaped(class Microsoft.Build.Execution.ProjectMetadataInstance metadatum) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.GetMetadataValueEscaped(Microsoft.Build.Execution.ProjectMetadataInstance)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetMetadataValueEscaped (metadatum As ProjectMetadataInstance) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetMetadataValueEscaped(Microsoft::Build::Execution::ProjectMetadataInstance ^ metadatum);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="metadatum" Type="Microsoft.Build.Execution.ProjectMetadataInstance" />
      </Parameters>
      <Docs>
        <param name="metadatum">
          <span data-ttu-id="875ef-292">Metadatum, aby użyć znaków ucieczki.</span>
          <span class="sxs-lookup">
            <span data-stu-id="875ef-292">The metadatum to be escaped.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="875ef-293">Pobiera wartość ze zmienionym znaczeniem metadatum podana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="875ef-293">Gets the escaped value of the provided metadatum.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="875ef-294">Zwraca wartość zmienionym metadatum podana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="875ef-294">Returns the escaped value of the provided metadatum.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMetadataValueEscaped">
      <MemberSignature Language="C#" Value="public static string GetMetadataValueEscaped (Microsoft.Build.Execution.ProjectItemDefinitionInstance item, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetMetadataValueEscaped(class Microsoft.Build.Execution.ProjectItemDefinitionInstance item, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.GetMetadataValueEscaped(Microsoft.Build.Execution.ProjectItemDefinitionInstance,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetMetadataValueEscaped (item As ProjectItemDefinitionInstance, name As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetMetadataValueEscaped(Microsoft::Build::Execution::ProjectItemDefinitionInstance ^ item, System::String ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="Microsoft.Build.Execution.ProjectItemDefinitionInstance" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="875ef-295">Definicja elementu podania wartości metadatum.</span>
          <span class="sxs-lookup">
            <span data-stu-id="875ef-295">The item definition to provide the metadatum value.</span>
          </span>
        </param>
        <param name="name">
          <span data-ttu-id="875ef-296">Nazwa metadatum.</span>
          <span class="sxs-lookup">
            <span data-stu-id="875ef-296">The name of the metadatum.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="875ef-297">Pobiera wartość ze zmienionym znaczeniem metadatum o podanej nazwie definicji dostarczonego elementu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="875ef-297">Gets the escaped value of the metadatum with the provided name of the provided item definition.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="875ef-298">Zwraca wartość zmienionym metadatum o podanej nazwie definicji dostarczonego elementu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="875ef-298">Returns the escaped value of the metadatum with the provided name of the provided item definition.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMetadataValueEscaped">
      <MemberSignature Language="C#" Value="public static string GetMetadataValueEscaped (Microsoft.Build.Execution.ProjectItemInstance item, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetMetadataValueEscaped(class Microsoft.Build.Execution.ProjectItemInstance item, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.GetMetadataValueEscaped(Microsoft.Build.Execution.ProjectItemInstance,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetMetadataValueEscaped (item As ProjectItemInstance, name As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetMetadataValueEscaped(Microsoft::Build::Execution::ProjectItemInstance ^ item, System::String ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="Microsoft.Build.Execution.ProjectItemInstance" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="875ef-299">Element podania wartości metadatum.</span>
          <span class="sxs-lookup">
            <span data-stu-id="875ef-299">The item to provide the metadatum value.</span>
          </span>
        </param>
        <param name="name">
          <span data-ttu-id="875ef-300">Nazwa metadatum.</span>
          <span class="sxs-lookup">
            <span data-stu-id="875ef-300">The name of the metadatum.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="875ef-301">Pobiera wartość wyjścia metadanej za pomocą podanej nazwy na podanym elemencie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="875ef-301">Gets the escaped value of the metadatum with the provided name on the provided item.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="875ef-302">Zwraca wartość zmienionym metadatum o podanej nazwie podanego elementu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="875ef-302">Returns the escaped value of the metadatum with the provided name on the provided item.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetProperty">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Execution.ProjectPropertyInstance GetProperty (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Build.Execution.ProjectPropertyInstance GetProperty(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.GetProperty(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetProperty (name As String) As ProjectPropertyInstance" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Microsoft::Build::Execution::ProjectPropertyInstance ^ GetProperty(System::String ^ name);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Build.Evaluation.IPropertyProvider`1.GetProperty(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Execution.ProjectPropertyInstance</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="875ef-303">Nazwa właściwości do pobrania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="875ef-303">The name of the property to retrieve.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="875ef-304">Pobierz właściwość o podanej nazwie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="875ef-304">Get the property with the given name.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="875ef-305">Zwraca wartość właściwości o podanej nazwie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="875ef-305">Returns the property with the given name.</span>
          </span>
          <span data-ttu-id="875ef-306">Zwraca wartość null, jeśli istnieje żadnej właściwości o tej nazwie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="875ef-306">Returns null if no property exists with that name.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPropertyValue">
      <MemberSignature Language="C#" Value="public string GetPropertyValue (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetPropertyValue(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.GetPropertyValue(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPropertyValue (name As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetPropertyValue(System::String ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="875ef-307">Nazwa właściwości, których wartość ma zostać pobrane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="875ef-307">The name of the property whose value is to be retrieved.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="875ef-308">Pobiera wartość właściwości o podanej nazwie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="875ef-308">Get the value of the property with the given name.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="875ef-309">Zwraca wartość właściwości o podanej nazwie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="875ef-309">Returns the value of the property with the given name.</span>
          </span>
          <span data-ttu-id="875ef-310">Zwraca pusty ciąg, jeśli istnieje żadnej właściwości o tej nazwie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="875ef-310">Returns an empty string if no property exists with that name.</span>
          </span>
          <span data-ttu-id="875ef-311">Wartość zwracana ma nie sekwencje znaków zmienionym znaczeniu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="875ef-311">The value returned has no escaped character sequences.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="875ef-312">Ta metoda nie rozróżnia właściwość z wartością ciągu pustego i ma właściwości o podanej nazwie.</span><span class="sxs-lookup"><span data-stu-id="875ef-312">This method does not distinguish between a property with a value of empty string and no property with the given name.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPropertyValueEscaped">
      <MemberSignature Language="C#" Value="public static string GetPropertyValueEscaped (Microsoft.Build.Execution.ProjectPropertyInstance property);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetPropertyValueEscaped(class Microsoft.Build.Execution.ProjectPropertyInstance property) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.GetPropertyValueEscaped(Microsoft.Build.Execution.ProjectPropertyInstance)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetPropertyValueEscaped (property As ProjectPropertyInstance) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetPropertyValueEscaped(Microsoft::Build::Execution::ProjectPropertyInstance ^ property);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="Microsoft.Build.Execution.ProjectPropertyInstance" />
      </Parameters>
      <Docs>
        <param name="property">
          <span data-ttu-id="875ef-313">Właściwość, aby użyć znaków ucieczki.</span>
          <span class="sxs-lookup">
            <span data-stu-id="875ef-313">The property to be escaped.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="875ef-314">Pobierz wartość zmienionym podane właściwości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="875ef-314">Get the escaped value of the provided property.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="875ef-315">Zwraca wartość zmienionym podane właściwości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="875ef-315">Returns the escaped value of the provided property.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GlobalProperties">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IDictionary&lt;string,string&gt; GlobalProperties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IDictionary`2&lt;string, string&gt; GlobalProperties" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Execution.ProjectInstance.GlobalProperties" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property GlobalProperties As IDictionary(Of String, String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ GlobalProperties { System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="875ef-316">Pobiera słownik globalnych właściwości, których ten projekt został oceniony, jeśli istnieje.</span>
          <span class="sxs-lookup">
            <span data-stu-id="875ef-316">Gets the dictionary of global properties this project was evaluated with, if any.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="875ef-317">Zwraca słownik globalnych właściwości, których ten projekt został oceniony z.</span>
          <span class="sxs-lookup">
            <span data-stu-id="875ef-317">Returns the dictionary of global properties this project was evaluated with.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="875ef-318">Kolekcja tylko do odczytu.</span><span class="sxs-lookup"><span data-stu-id="875ef-318">Read only collection.</span></span>  
  
 <span data-ttu-id="875ef-319">Przechodzi przez odwołania do projektu.</span><span class="sxs-lookup"><span data-stu-id="875ef-319">Traverses project references.</span></span>  
  
 <span data-ttu-id="875ef-320">To jest publicznie ujawnionych metody pobierającej, który tłumaczy na tylko do odczytu IDictionary martwy\<ciąg, ciąg >.</span><span class="sxs-lookup"><span data-stu-id="875ef-320">This is the publicly exposed getter, that translates into a read-only dead IDictionary\<string, string>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InitialTargets">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.List&lt;string&gt; InitialTargets { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.List`1&lt;string&gt; InitialTargets" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Execution.ProjectInstance.InitialTargets" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InitialTargets As List(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::List&lt;System::String ^&gt; ^ InitialTargets { System::Collections::Generic::List&lt;System::String ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.Build.Evaluation.IEvaluatorData`4.InitialTargets</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.List&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="875ef-321">Pobiera listę celów początkowych dla projektu i jego importów głębokość pierwszej.</span>
          <span class="sxs-lookup">
            <span data-stu-id="875ef-321">Gets the list of initial targets for the project and all its imports, depth-first.</span>
          </span>
          <span data-ttu-id="875ef-322">Te cele są tworzone przed innymi celami.</span>
          <span class="sxs-lookup">
            <span data-stu-id="875ef-322">These targets are built before any other targets.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="875ef-323">Zwraca listę początkowego elementy docelowe projektu i wszystkie jego Importy, najpierw głębokość.</span>
          <span class="sxs-lookup">
            <span data-stu-id="875ef-323">Returns the list of initial targets for the project and all its imports, depth-first.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsImmutable">
      <MemberSignature Language="C#" Value="public bool IsImmutable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsImmutable" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Execution.ProjectInstance.IsImmutable" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsImmutable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsImmutable { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="875ef-324">Pobiera flagę wskazującą, czy wystąpienie projektu nie można modyfikować.</span>
          <span class="sxs-lookup">
            <span data-stu-id="875ef-324">Gets a flag indicating that the project instance is immutable.</span>
          </span>
          <span data-ttu-id="875ef-325">Ta flaga jest ustawiona trwale podczas tworzenia wystąpienia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="875ef-325">This flag is set permanently when the instance is created.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="875ef-326">Zwraca flagę.</span>
          <span class="sxs-lookup">
            <span data-stu-id="875ef-326">Returns the flag.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemDefinitions">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IDictionary&lt;string,Microsoft.Build.Execution.ProjectItemDefinitionInstance&gt; ItemDefinitions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IDictionary`2&lt;string, class Microsoft.Build.Execution.ProjectItemDefinitionInstance&gt; ItemDefinitions" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Execution.ProjectInstance.ItemDefinitions" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ItemDefinitions As IDictionary(Of String, ProjectItemDefinitionInstance)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IDictionary&lt;System::String ^, Microsoft::Build::Execution::ProjectItemDefinitionInstance ^&gt; ^ ItemDefinitions { System::Collections::Generic::IDictionary&lt;System::String ^, Microsoft::Build::Execution::ProjectItemDefinitionInstance ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.String,Microsoft.Build.Execution.ProjectItemDefinitionInstance&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="875ef-327">Pobiera słownik tylko do odczytu definicje elementów w projekcie, wyznaczaną przez typ elementu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="875ef-327">Gets a read-only dictionary of the item definitions in the project, keyed by item type.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="875ef-328">Zwraca słownik tylko do odczytu definicje elementów w projekcie, wyznaczaną przez typ elementu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="875ef-328">Returns a read-only dictionary of the item definitions in the project, keyed by item type.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Items">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.ICollection&lt;Microsoft.Build.Execution.ProjectItemInstance&gt; Items { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.ICollection`1&lt;class Microsoft.Build.Execution.ProjectItemInstance&gt; Items" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Execution.ProjectInstance.Items" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Items As ICollection(Of ProjectItemInstance)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::ICollection&lt;Microsoft::Build::Execution::ProjectItemInstance ^&gt; ^ Items { System::Collections::Generic::ICollection&lt;Microsoft::Build::Execution::ProjectItemInstance ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;Microsoft.Build.Execution.ProjectItemInstance&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="875ef-329">Pobiera wszystkie elementy w tym projekcie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="875ef-329">Gets all items in this project.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="875ef-330">Zwraca wszystkie elementy w tym projekcie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="875ef-330">Returns all items in this project.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemTypes">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.ICollection&lt;string&gt; ItemTypes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.ICollection`1&lt;string&gt; ItemTypes" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Execution.ProjectInstance.ItemTypes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ItemTypes As ICollection(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::ICollection&lt;System::String ^&gt; ^ ItemTypes { System::Collections::Generic::ICollection&lt;System::String ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="875ef-331">Pobiera wszystkie typy elementów w tym projekcie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="875ef-331">Gets all item types in this project.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="875ef-332">Zwraca wszystkie typy elementów w tym projekcie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="875ef-332">Returns all item types in this project.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProjectFileLocation">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Construction.ElementLocation ProjectFileLocation { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Build.Construction.ElementLocation ProjectFileLocation" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Execution.ProjectInstance.ProjectFileLocation" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ProjectFileLocation As ElementLocation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Build::Construction::ElementLocation ^ ProjectFileLocation { Microsoft::Build::Construction::ElementLocation ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Construction.ElementLocation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="875ef-333">Pobiera lokalizację w samym pliku źródłowego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="875ef-333">Gets the location of the originating file itself.</span>
          </span>
          <span data-ttu-id="875ef-334">Nigdy nie jest pusty.</span>
          <span class="sxs-lookup">
            <span data-stu-id="875ef-334">Never null.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="875ef-335">Zwraca lokalizację pliku źródłowego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="875ef-335">Returns the location of the originating file.</span>
          </span>
          <span data-ttu-id="875ef-336">Nigdy nie zwraca wartość null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="875ef-336">Never returns null.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Properties">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.ICollection&lt;Microsoft.Build.Execution.ProjectPropertyInstance&gt; Properties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.ICollection`1&lt;class Microsoft.Build.Execution.ProjectPropertyInstance&gt; Properties" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Execution.ProjectInstance.Properties" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Properties As ICollection(Of ProjectPropertyInstance)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::ICollection&lt;Microsoft::Build::Execution::ProjectPropertyInstance ^&gt; ^ Properties { System::Collections::Generic::ICollection&lt;Microsoft::Build::Execution::ProjectPropertyInstance ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;Microsoft.Build.Execution.ProjectPropertyInstance&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="875ef-337">Pobiera wszystkie właściwości w tym projekcie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="875ef-337">Gets all properties in this project.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="875ef-338">Zwraca wszystkie właściwości w tym projekcie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="875ef-338">Returns all properties in this project.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveItem">
      <MemberSignature Language="C#" Value="public bool RemoveItem (Microsoft.Build.Execution.ProjectItemInstance item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool RemoveItem(class Microsoft.Build.Execution.ProjectItemInstance item) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.RemoveItem(Microsoft.Build.Execution.ProjectItemInstance)" />
      <MemberSignature Language="VB.NET" Value="Public Function RemoveItem (item As ProjectItemInstance) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool RemoveItem(Microsoft::Build::Execution::ProjectItemInstance ^ item);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="Microsoft.Build.Execution.ProjectItemInstance" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="875ef-339">Element, który ma zostać usunięty.</span>
          <span class="sxs-lookup">
            <span data-stu-id="875ef-339">The item to be removed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="875ef-340">Usuwa element z projektu, jeśli jest obecny.</span>
          <span class="sxs-lookup">
            <span data-stu-id="875ef-340">Removes an item from the project, if present.</span>
          </span>
          <span data-ttu-id="875ef-341">Zwraca wartość PRAWDA, jeśli jest obecny, false w przeciwnym razie wartość.</span>
          <span class="sxs-lookup">
            <span data-stu-id="875ef-341">Returns true if it was present, false otherwise.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="875ef-342">Zwraca wartość PRAWDA, jeśli element nie występuje przed usuwania; wartość false w przeciwnym razie wartość.</span>
          <span class="sxs-lookup">
            <span data-stu-id="875ef-342">Returns true if the item was present before removal; false otherwise.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveProperty">
      <MemberSignature Language="C#" Value="public bool RemoveProperty (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool RemoveProperty(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.RemoveProperty(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function RemoveProperty (name As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool RemoveProperty(System::String ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="875ef-343">Nazwa właściwości do usunięcia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="875ef-343">The name of the property to be removed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="875ef-344">Usuwa właściwość o podanej nazwie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="875ef-344">Removes a property with the given name.</span>
          </span>
          <span data-ttu-id="875ef-345">Zwraca wartość PRAWDA, jeśli właściwość ma wartość (ciąg prawdopodobnie pusta), w przeciwnym razie wartość false.</span>
          <span class="sxs-lookup">
            <span data-stu-id="875ef-345">Returns true if the property had a value (possibly empty string), otherwise false.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="875ef-346">Zwraca wartość PRAWDA, jeśli właściwość ma wartość (prawdopodobnie ciągiem pustym) przed usuwania. wartość false w przeciwnym razie wartość.</span>
          <span class="sxs-lookup">
            <span data-stu-id="875ef-346">Returns true if the property had a value (possibly an empty string) before removal; false otherwise.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetProperty">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Execution.ProjectPropertyInstance SetProperty (string name, string evaluatedValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Build.Execution.ProjectPropertyInstance SetProperty(string name, string evaluatedValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.SetProperty(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function SetProperty (name As String, evaluatedValue As String) As ProjectPropertyInstance" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Build::Execution::ProjectPropertyInstance ^ SetProperty(System::String ^ name, System::String ^ evaluatedValue);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Execution.ProjectPropertyInstance</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="evaluatedValue" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="875ef-347">Nazwa właściwości do dodania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="875ef-347">The name of the property to add.</span>
          </span>
        </param>
        <param name="evaluatedValue">
          <span data-ttu-id="875ef-348">Obliczane wartości właściwości do dodania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="875ef-348">The evaluated value of the property to add.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="875ef-349">Dodaj właściwości o określonej nazwie i wartości do projektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="875ef-349">Add a property with the specified name and value to the project.</span>
          </span>
          <span data-ttu-id="875ef-350">Zastępuje żadnej właściwości o tej samej nazwie już w kolekcji właściwości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="875ef-350">Overwrites any property with the same name already in the property collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="875ef-351">Zwraca nową właściwość.</span>
          <span class="sxs-lookup">
            <span data-stu-id="875ef-351">Returns the new property.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="875ef-352">Nie możemy wykonać ProjectPropertyInstance, aby upewnić się, że nie mamy, który jest już używany przez inny ProjectPropertyInstance.</span><span class="sxs-lookup"><span data-stu-id="875ef-352">We don't take a ProjectPropertyInstance to make sure we don't have one that's already in use by another ProjectPropertyInstance.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Targets">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IDictionary&lt;string,Microsoft.Build.Execution.ProjectTargetInstance&gt; Targets { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IDictionary`2&lt;string, class Microsoft.Build.Execution.ProjectTargetInstance&gt; Targets" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Execution.ProjectInstance.Targets" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Targets As IDictionary(Of String, ProjectTargetInstance)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IDictionary&lt;System::String ^, Microsoft::Build::Execution::ProjectTargetInstance ^&gt; ^ Targets { System::Collections::Generic::IDictionary&lt;System::String ^, Microsoft::Build::Execution::ProjectTargetInstance ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.String,Microsoft.Build.Execution.ProjectTargetInstance&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="875ef-353">Pobiera moduł wyliczający przez wszystkie elementy docelowe w tym projekcie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="875ef-353">Gets an enumerator over all targets in this project.</span>
          </span>
          <span data-ttu-id="875ef-354">Ta kolekcja jest tylko do odczytu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="875ef-354">This collection is read-only.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="875ef-355">Zwraca moduł wyliczający przez wszystkie elementy docelowe w tym projekcie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="875ef-355">Returns an enumerator over all targets in this project.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToolsVersion">
      <MemberSignature Language="C#" Value="public string ToolsVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ToolsVersion" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Execution.ProjectInstance.ToolsVersion" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ToolsVersion As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ToolsVersion { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="875ef-356">Pobiera wersję narzędzia, z której ten projekt został oceniony, jeśli istnieje.</span>
          <span class="sxs-lookup">
            <span data-stu-id="875ef-356">Gets the tools version this project was evaluated with, if any.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="875ef-357">Zwraca wersję narzędzia, z której ten projekt został oceniony, jeśli istnieje.</span>
          <span class="sxs-lookup">
            <span data-stu-id="875ef-357">Returns the tools version this project was evaluated with, if any.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="875ef-358">Wynik nie jest zawsze taki sam, jak wersja narzędzi w tagu projektu. go może zewnętrznie określono, na przykład z przełącznikiem /tv.</span><span class="sxs-lookup"><span data-stu-id="875ef-358">The result is not necessarily the same as the tools version on the Project tag, if any; it may have been externally specified, for example with a /tv switch.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToProjectRootElement">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Construction.ProjectRootElement ToProjectRootElement ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Build.Construction.ProjectRootElement ToProjectRootElement() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.ToProjectRootElement" />
      <MemberSignature Language="VB.NET" Value="Public Function ToProjectRootElement () As ProjectRootElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Build::Construction::ProjectRootElement ^ ToProjectRootElement();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Construction.ProjectRootElement</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="875ef-359">Tworzy ProjectRootElement z zawartości tego ProjectInstance.</span>
          <span class="sxs-lookup">
            <span data-stu-id="875ef-359">Creates a ProjectRootElement from the contents of this ProjectInstance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="875ef-360">Zwraca ProjectRootElement, który reprezentuje to wystąpienie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="875ef-360">Returns a ProjectRootElement which represents this instance.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateStateFrom">
      <MemberSignature Language="C#" Value="public void UpdateStateFrom (Microsoft.Build.Execution.ProjectInstance projectState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UpdateStateFrom(class Microsoft.Build.Execution.ProjectInstance projectState) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.UpdateStateFrom(Microsoft.Build.Execution.ProjectInstance)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UpdateStateFrom (projectState As ProjectInstance)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UpdateStateFrom(Microsoft::Build::Execution::ProjectInstance ^ projectState);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="projectState" Type="Microsoft.Build.Execution.ProjectInstance" />
      </Parameters>
      <Docs>
        <param name="projectState">
          <span data-ttu-id="875ef-361">
            <see langword="ProjectInstance" /> Do aktualizacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="875ef-361">The <see langword="ProjectInstance" /> to update from.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="875ef-362">Stan projektu zastępuje <see cref="P:Microsoft.Build.Execution.ProjectInstance.GlobalProperties" />, <see cref="P:Microsoft.Build.Execution.ProjectInstance.Properties" /> i <see cref="P:Microsoft.Build.Execution.ProjectInstance.Items" /> z tymi z określonego <see cref="T:Microsoft.Build.Execution.ProjectInstance" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="875ef-362">Replaces the project state <see cref="P:Microsoft.Build.Execution.ProjectInstance.GlobalProperties" />, <see cref="P:Microsoft.Build.Execution.ProjectInstance.Properties" /> and <see cref="P:Microsoft.Build.Execution.ProjectInstance.Items" /> with those from the specified <see cref="T:Microsoft.Build.Execution.ProjectInstance" />.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>