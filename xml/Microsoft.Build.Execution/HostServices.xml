<Type Name="HostServices" FullName="Microsoft.Build.Execution.HostServices">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="79ff5e14661ed7b36ecbe10641ef1fddbd7fbefa" />
    <Meta Name="ms.sourcegitcommit" Value="0ec122ee5f3681159b8460ab15b409fd6e3d3ae0" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="10/04/2018" />
    <Meta Name="ms.locfileid" Value="48770285" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class HostServices" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit HostServices extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Build.Execution.HostServices" />
  <TypeSignature Language="VB.NET" Value="Public Class HostServices" />
  <TypeSignature Language="C++ CLI" Value="public ref class HostServices" />
  <TypeSignature Language="F#" Value="type HostServices = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Build</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Diagnostics.DebuggerDisplay("#Entries={hostObjectMap.Count}")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Implementacja usługi hosta, która pośredniczy dostęp z kompilacji do hosta.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zobacz też <xref:Microsoft.Build.Utilities.Task.HostObject%2A>.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HostServices ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.HostServices.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HostServices();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Tworzy usługę hosta.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHostObject">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Framework.ITaskHost GetHostObject (string projectFile, string targetName, string taskName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Build.Framework.ITaskHost GetHostObject(string projectFile, string targetName, string taskName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.HostServices.GetHostObject(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetHostObject (projectFile As String, targetName As String, taskName As String) As ITaskHost" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Build::Framework::ITaskHost ^ GetHostObject(System::String ^ projectFile, System::String ^ targetName, System::String ^ taskName);" />
      <MemberSignature Language="F#" Value="member this.GetHostObject : string * string * string -&gt; Microsoft.Build.Framework.ITaskHost" Usage="hostServices.GetHostObject (projectFile, targetName, taskName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Framework.ITaskHost</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="projectFile" Type="System.String" />
        <Parameter Name="targetName" Type="System.String" />
        <Parameter Name="taskName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="projectFile">Nazwa pliku projektu.</param>
        <param name="targetName">Nazwa elementu docelowego.</param>
        <param name="taskName">Nazwa zadania związane z usługą hosta.</param>
        <summary>Pobiera usługę hosta dla danego zadania, gdy zadanie pojawia się w obrębie projektu za pomocą podanej nazwy i docelowe.</summary>
        <returns>Zwraca usługi hosta dla danego zadania, gdy zadanie pojawia się w obrębie projektu za pomocą podanej nazwy i docelowe. Jeśli żadna usługa hosta istnieje, zwraca wartość null.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNodeAffinity">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Execution.NodeAffinity GetNodeAffinity (string projectFile);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype Microsoft.Build.Execution.NodeAffinity GetNodeAffinity(string projectFile) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.HostServices.GetNodeAffinity(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetNodeAffinity (projectFile As String) As NodeAffinity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Build::Execution::NodeAffinity GetNodeAffinity(System::String ^ projectFile);" />
      <MemberSignature Language="F#" Value="member this.GetNodeAffinity : string -&gt; Microsoft.Build.Execution.NodeAffinity" Usage="hostServices.GetNodeAffinity projectFile" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Execution.NodeAffinity</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="projectFile" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="projectFile">Plik projektu skojarzony z węzłem.</param>
        <summary>Pobiera koligacji węzła dla plików danego projektu.</summary>
        <returns>Zwraca koligacji węzła dla plików danego projektu.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnRenameProject">
      <MemberSignature Language="C#" Value="public void OnRenameProject (string oldFullPath, string newFullPath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void OnRenameProject(string oldFullPath, string newFullPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.HostServices.OnRenameProject(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub OnRenameProject (oldFullPath As String, newFullPath As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void OnRenameProject(System::String ^ oldFullPath, System::String ^ newFullPath);" />
      <MemberSignature Language="F#" Value="member this.OnRenameProject : string * string -&gt; unit" Usage="hostServices.OnRenameProject (oldFullPath, newFullPath)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="oldFullPath" Type="System.String" />
        <Parameter Name="newFullPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="oldFullPath">Bieżąca ścieżka do pliku projektu.</param>
        <param name="newFullPath">Nową ścieżkę do pliku projektu.</param>
        <summary>Aktualizuje tabelę usług hosta, gdy projekt jest o nazwie lub zmieniono ich nazwy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Projekt nazwano, gdy otrzymuje nowe pełną ścieżkę i starej ścieżki ma wartość null.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RegisterHostObject">
      <MemberSignature Language="C#" Value="public void RegisterHostObject (string projectFile, string targetName, string taskName, Microsoft.Build.Framework.ITaskHost hostObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RegisterHostObject(string projectFile, string targetName, string taskName, class Microsoft.Build.Framework.ITaskHost hostObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.HostServices.RegisterHostObject(System.String,System.String,System.String,Microsoft.Build.Framework.ITaskHost)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RegisterHostObject (projectFile As String, targetName As String, taskName As String, hostObject As ITaskHost)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RegisterHostObject(System::String ^ projectFile, System::String ^ targetName, System::String ^ taskName, Microsoft::Build::Framework::ITaskHost ^ hostObject);" />
      <MemberSignature Language="F#" Value="member this.RegisterHostObject : string * string * string * Microsoft.Build.Framework.ITaskHost -&gt; unit" Usage="hostServices.RegisterHostObject (projectFile, targetName, taskName, hostObject)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="projectFile" Type="System.String" />
        <Parameter Name="targetName" Type="System.String" />
        <Parameter Name="taskName" Type="System.String" />
        <Parameter Name="hostObject" Type="Microsoft.Build.Framework.ITaskHost" />
      </Parameters>
      <Docs>
        <param name="projectFile">Plik projektu zawierający pary obiektu docelowego i zadania.</param>
        <param name="targetName">Nazwa elementu docelowego.</param>
        <param name="taskName">Nazwa zadania.</param>
        <param name="hostObject">Usługa hosta.</param>
        <summary>Zarejestruj usługi hosta dla pary danego/obiekt docelowy zadania.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zastępuje wszelkie istniejące usługi hosta.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetNodeAffinity">
      <MemberSignature Language="C#" Value="public void SetNodeAffinity (string projectFile, Microsoft.Build.Execution.NodeAffinity nodeAffinity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetNodeAffinity(string projectFile, valuetype Microsoft.Build.Execution.NodeAffinity nodeAffinity) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.HostServices.SetNodeAffinity(System.String,Microsoft.Build.Execution.NodeAffinity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetNodeAffinity(System::String ^ projectFile, Microsoft::Build::Execution::NodeAffinity nodeAffinity);" />
      <MemberSignature Language="F#" Value="member this.SetNodeAffinity : string * Microsoft.Build.Execution.NodeAffinity -&gt; unit" Usage="hostServices.SetNodeAffinity (projectFile, nodeAffinity)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="projectFile" Type="System.String" />
        <Parameter Name="nodeAffinity" Type="Microsoft.Build.Execution.NodeAffinity" />
      </Parameters>
      <Docs>
        <param name="projectFile">Plik projektu. Jeśli wartość String.Empty, wszystkie projekty będą korzystały z koligacji danego węzła. Jeśli ustawiona na wartość null, wszystkie koligacji węzła zostaną wyczyszczone.</param>
        <param name="nodeAffinity">Koligacja węzła.</param>
        <summary>Ustawienie koligacji węzła dla plików danego projektu.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UnregisterProject">
      <MemberSignature Language="C#" Value="public void UnregisterProject (string projectFullPath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UnregisterProject(string projectFullPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.HostServices.UnregisterProject(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UnregisterProject (projectFullPath As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UnregisterProject(System::String ^ projectFullPath);" />
      <MemberSignature Language="F#" Value="member this.UnregisterProject : string -&gt; unit" Usage="hostServices.UnregisterProject projectFullPath" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="projectFullPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="projectFullPath">Ścieżka do projektu, aby wyrejestrować.</param>
        <summary>Wyrejestruj obiektów hosta projektu, jeśli istnieje i usuń wszelkie koligacji węzła skojarzonych z nim.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>