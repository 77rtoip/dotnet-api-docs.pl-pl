<Type Name="BuildRequestDataFlags" FullName="Microsoft.Build.Execution.BuildRequestDataFlags">
  <Metadata><Meta Name="ms.openlocfilehash" Value="48b217959ed866ec6d3bdf493b205cf838fe94b6" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69289737" /></Metadata><TypeSignature Language="C#" Value="public enum BuildRequestDataFlags" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed BuildRequestDataFlags extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Build.Execution.BuildRequestDataFlags" />
  <TypeSignature Language="VB.NET" Value="Public Enum BuildRequestDataFlags" />
  <TypeSignature Language="C++ CLI" Value="public enum class BuildRequestDataFlags" />
  <TypeSignature Language="F#" Value="type BuildRequestDataFlags = " />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Build</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Attributes>
    <Attribute>
      <AttributeName>System.Flags</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Flagi zapewniające dodatkową kontrolę nad żądaniem kompilacji.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks 

`IgnoreExistingProjectState` Flaga jest dostępna tylko dla tych przypadków, w których klient wie, że nowe żądanie kompilacji nie zależy od stanu projektu wygenerowanego przez poprzednie żądanie. Ustawienie tej flagi może zapewnić zwiększenie wydajności w przypadku niezgodnych koligacji węzłów, ponieważ w przeciwnym razie MSBuild będzie musiał serializować stan projektu z jednego węzła do innego. Serializacja stanu projektu może być kosztowna, w zależności od ilości danych, które zostały wcześniej wygenerowane przez ten projekt.  
  
`IgnoreExistingProjectState` Flaga nie ma wpływu na wyniki docelowe, więc jeśli poprzednie żądanie ma skompilowane miejsce docelowe, nowe żądanie nie spowoduje odbudowania elementu docelowego. Ponadto żadna z mutacji stanu projektu, która wystąpiła w wyniku wcześniejszego kompilowania tego obiektu docelowego, zostanie ponownie zastosowana.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="IgnoreExistingProjectState">
      <MemberSignature Language="C#" Value="IgnoreExistingProjectState" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.Build.Execution.BuildRequestDataFlags IgnoreExistingProjectState = int32(4)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.Build.Execution.BuildRequestDataFlags.IgnoreExistingProjectState" />
      <MemberSignature Language="VB.NET" Value="IgnoreExistingProjectState" />
      <MemberSignature Language="C++ CLI" Value="IgnoreExistingProjectState" />
      <MemberSignature Language="F#" Value="IgnoreExistingProjectState = 4" Usage="Microsoft.Build.Execution.BuildRequestDataFlags.IgnoreExistingProjectState" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Execution.BuildRequestDataFlags</ReturnType>
      </ReturnValue>
      <MemberValue>4</MemberValue>
      <Docs>
        <summary>Gdy ta flaga jest obecna, a projekt został wcześniej skompilowany w węźle, którego koligacja jest niezgodna z koligacją wymaganą przez to żądanie, to żądanie kompilacji ignoruje stan projektu (ale nie wyniki docelowe), które zostały wcześniej wygenerowane. Takie zachowanie nie jest zwykle wymagane; Zobacz sekcję [uwagi](#remarks) , aby uzyskać więcej informacji.</summary>
      </Docs>
    </Member>
    <Member MemberName="None">
      <MemberSignature Language="C#" Value="None" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.Build.Execution.BuildRequestDataFlags None = int32(0)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.Build.Execution.BuildRequestDataFlags.None" />
      <MemberSignature Language="VB.NET" Value="None" />
      <MemberSignature Language="C++ CLI" Value="None" />
      <MemberSignature Language="F#" Value="None = 0" Usage="Microsoft.Build.Execution.BuildRequestDataFlags.None" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Execution.BuildRequestDataFlags</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>Brak flag.</summary>
      </Docs>
    </Member>
    <Member MemberName="ProvideProjectStateAfterBuild">
      <MemberSignature Language="C#" Value="ProvideProjectStateAfterBuild" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.Build.Execution.BuildRequestDataFlags ProvideProjectStateAfterBuild = int32(2)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.Build.Execution.BuildRequestDataFlags.ProvideProjectStateAfterBuild" />
      <MemberSignature Language="VB.NET" Value="ProvideProjectStateAfterBuild" />
      <MemberSignature Language="C++ CLI" Value="ProvideProjectStateAfterBuild" />
      <MemberSignature Language="F#" Value="ProvideProjectStateAfterBuild = 2" Usage="Microsoft.Build.Execution.BuildRequestDataFlags.ProvideProjectStateAfterBuild" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Execution.BuildRequestDataFlags</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>Gdy ta flaga jest obecna <see cref="T:Microsoft.Build.Execution.BuildResult" /> , wystawiona w odpowiedzi na to <see cref="P:Microsoft.Build.Execution.BuildResult.ProjectStateAfterBuild" />żądanie będzie zawierać.</summary>
      </Docs>
    </Member>
    <Member MemberName="ReplaceExistingProjectInstance">
      <MemberSignature Language="C#" Value="ReplaceExistingProjectInstance" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.Build.Execution.BuildRequestDataFlags ReplaceExistingProjectInstance = int32(1)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.Build.Execution.BuildRequestDataFlags.ReplaceExistingProjectInstance" />
      <MemberSignature Language="VB.NET" Value="ReplaceExistingProjectInstance" />
      <MemberSignature Language="C++ CLI" Value="ReplaceExistingProjectInstance" />
      <MemberSignature Language="F#" Value="ReplaceExistingProjectInstance = 1" Usage="Microsoft.Build.Execution.BuildRequestDataFlags.ReplaceExistingProjectInstance" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Execution.BuildRequestDataFlags</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>Gdy ta flaga jest obecna, istniejący ProjectInstance w kompilacji zostanie zastąpiony przez tę flagę.</summary>
      </Docs>
    </Member>
  </Members>
</Type>
