<Type Name="VirtualPathProvider" FullName="System.Web.Hosting.VirtualPathProvider">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="e2640aa878f7b33bfcd1f27557d40bf6cedb6016" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36600290" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class VirtualPathProvider : MarshalByRefObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit VirtualPathProvider extends System.MarshalByRefObject" />
  <TypeSignature Language="DocId" Value="T:System.Web.Hosting.VirtualPathProvider" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class VirtualPathProvider&#xA;Inherits MarshalByRefObject" />
  <TypeSignature Language="C++ CLI" Value="public ref class VirtualPathProvider abstract : MarshalByRefObject" />
  <TypeSignature Language="F#" Value="type VirtualPathProvider = class&#xA;    inherit MarshalByRefObject" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.MarshalByRefObject</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Udostępnia zestaw metod, które umożliwiają aplikacji sieci Web można pobrać zasobów z system plików wirtualnych.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Hosting.VirtualPathProvider> Klasa udostępnia zestaw metod wykonania wirtualny system plików dla aplikacji sieci Web. W wirtualnym systemie plików pliki i katalogi są zarządzane przez Magazyn danych innych niż udostępniane przez system operacyjny serwera systemu plików. Na przykład umożliwia wirtualny system plików zawartość jest przechowywana w bazie danych programu SQL Server.  
  
 Dowolny plik, która została przetworzona na żądanie można przechowywać w wirtualnym systemie plików. Możliwości obejmują:  
  
-   Strony ASP.NET, stron wzorcowych kontrolek użytkownika i innych obiektów.  
  
-   Standardowe strony sieci Web z rozszerzeniami, takie jak .htm i jpg.  
  
-   Wszelkie niestandardowe rozszerzenie mapowane <xref:System.Web.Compilation.BuildProvider> wystąpienia.  
  
-   Wszelkie nazwanego motywu w `App_Theme` folderu.  
  
 Nie można zapisać folderów aplikacji ASP.NET lub pliki, które generowanie zestawów na poziomie aplikacji w wirtualnym systemie plików. Możliwości obejmują:  
  
-   Plik Global.asax.  
  
-   Plików Web.config.  
  
-   Używane przez pliki danych mapy witryny <xref:System.Web.XmlSiteMapProvider>.  
  
-   Katalogi, które zawierają zestawy aplikacji lub który generowanie zestawów aplikacji: `Bin`, `App_Code`, `App_GlobalResources`oraz `App_LocalResources`.  
  
-   Folder dane aplikacji, `App_Data`.  
  
> [!NOTE]
>  Jeśli witryna sieci Web została wstępnie skompilowana dla wdrożenia, zawartość jest dostarczana przez <xref:System.Web.Hosting.VirtualPathProvider> wystąpienia nie jest skompilowany i nie <xref:System.Web.Hosting.VirtualPathProvider> wystąpienia są używane przez wstępnie skompilowanej witryny.  
  
## <a name="registering-a-virtualpathprovider"></a>Rejestrowanie VirtualPathProvider  
 Niestandardowy <xref:System.Web.Hosting.VirtualPathProvider> wystąpienia powinien być zarejestrowany w systemie kompilacji platformy ASP.NET przy użyciu <xref:System.Web.Hosting.HostingEnvironment.RegisterVirtualPathProvider%2A?displayProperty=nameWithType> metoda przed wykonaniem analizy strony lub kompilacji przez aplikację sieci Web.  
  
 Zazwyczaj <xref:System.Web.Hosting.VirtualPathProvider> wystąpienie jest zarejestrowane w `AppInitialize` metody zdefiniowanej w `App_Code` katalogu, lub w trakcie `Application_Start` zdarzenia w `Global.asax` pliku. Przykład rejestrowania <xref:System.Web.Hosting.VirtualPathProvider> wystąpienia w `AppInitialize` metody, zobacz sekcję przykład.  
  
 Możesz zarejestrować <xref:System.Web.Hosting.VirtualPathProvider> wystąpienia podczas inne zdarzenia, ale stron skompilowany i pamięci podręcznej przed <xref:System.Web.Hosting.VirtualPathProvider> wystąpienie jest zarejestrowane nie zostaną unieważnione, nawet wtedy, gdy nowy <xref:System.Web.Hosting.VirtualPathProvider> wystąpienia teraz mógł stanowić źródło wcześniej kompilowanej stronie.  
  
   
  
## Examples  
 Poniższy przykładowy kod jest <xref:System.Web.Hosting.VirtualPathProvider> implementację klasy, która tworzy wirtualny system plików przy użyciu informacji przechowywanych w <xref:System.Data.DataSet> obiektu. Przykładowy kod działa z przykłady kodu dla <xref:System.Web.Hosting.VirtualFile> i <xref:System.Web.Hosting.VirtualDirectory> klasy przechowywania zasobami wirtualnymi danych, który jest ładowany do <xref:System.Data.DataSet> obiektu.  
  
 W tym przykładzie składa się z czterech części: <xref:System.Web.Hosting.VirtualPathProvider> implementację klasy, pliku danych XML, używany do wypełnienia <xref:System.Data.DataSet> obiektu `AppStart` obiekt, który zawiera `AppInitialize` metody używane do rejestrowania <xref:System.Web.Hosting.VirtualPathProvider> klasy z kompilacji System, a strona ASP.NET, która zawiera łącza do plików wirtualnych.  
  
 Aby użyć tego przykładu kodu w aplikacji, wykonaj następujące kroki.  
  
1.  Tworzenie przykładowej aplikacji na serwerze sieci Web.  
  
2.  Skopiuj kod źródłowy niestandardowe <xref:System.Web.Hosting.VirtualPathProvider> obiektu (patrz poniżej) do pliku w aplikacji `App_Code` katalogu.  
  
3.  Skopiuj kod źródłowy niestandardowe <xref:System.Web.Hosting.VirtualDirectory> obiektu (zobacz sekcję przykład w <xref:System.Web.Hosting.VirtualDirectory> temat klasy) do pliku w aplikacji `App_Code` katalogu.  
  
4.  Skopiuj kod źródłowy niestandardowe <xref:System.Web.Hosting.VirtualFile> obiektu (zobacz sekcję przykład w <xref:System.Web.Hosting.VirtualFile> temat klasy) do pliku w aplikacji `App_Code` katalogu.  
  
5.  Skopiuj kod źródłowy `AppStart` obiektu (patrz poniżej) do pliku w aplikacji `App_Code` katalogu.  
  
6.  Skopiuj dane XML (patrz poniżej) do pliku o nazwie `XMLData.xml` do pliku w aplikacji `App_Data` katalogu.  
  
7.  Kopiuj `default.aspx` pliku (patrz poniżej) do katalogu głównego aplikacji przykładowej. Aby otworzyć przy użyciu przeglądarki sieci Web `default.aspx` pliku, a następnie kliknij przycisk łącza na stronie, aby wyświetlić zawartość plików wirtualnych.  
  
 Niestandardowy jest pierwszym przykładzie <xref:System.Web.Hosting.VirtualPathProvider> klasy. <xref:System.Web.Hosting.VirtualPathProvider.DirectoryExists%2A> i <xref:System.Web.Hosting.VirtualPathProvider.FileExists%2A> metody są zastępowane, aby wskazać, czy żądany katalog znajduje się w wirtualnym systemie plików. <xref:System.Web.Hosting.VirtualPathProvider.GetDirectory%2A> i <xref:System.Web.Hosting.VirtualPathProvider.GetFile%2A> metody są zastępowane do zwracania niestandardowego <xref:System.Web.Hosting.VirtualDirectory> i <xref:System.Web.Hosting.VirtualFile> wystąpień zawierający informacje z wirtualnego systemu plików.  
  
 Udostępnia klasy `GetVirtualData` metodę używaną przez <xref:System.Web.Hosting.VirtualDirectory> i <xref:System.Web.Hosting.VirtualFile> klas dostępu <xref:System.Data.DataSet> obiekt zawierający dane systemowe pliku wirtualnego. W implementacji produkcyjnej ta metoda zazwyczaj są realizowane w obiekt biznesowy odpowiedzialny za interakcji z magazynem danych.  
  
 [!code-csharp[System.Web.Hosting.VirtualPathProvider#20](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.hosting.virtualpathprovider/CS/SamplePathProvider.cs#20)]
 [!code-vb[System.Web.Hosting.VirtualPathProvider#20](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.hosting.virtualpathprovider/VB/SamplePathProvider.vb#20)]  
  
 Drugi przykład jest używany do wypełnienia pliku danych XML <xref:System.Data.DataSet> obiektu zwróconego przez niestandardowego <xref:System.Web.Hosting.VirtualPathProvider> obiektu. Te dane XML są używane w celu pokazanie sposobu używania <xref:System.Web.Hosting.VirtualPathProvider>, <xref:System.Web.Hosting.VirtualDirectory>, i <xref:System.Web.Hosting.VirtualFile> obiekty do pobierania danych z danych zewnętrznych i nie jest przeznaczona do reprezentowania magazynu danych wysokiej jakości.  
  
```  
<?xml version="1.0" encoding="utf-8" ?>  
  <resource type="dir"   
    path="/vrDir"   
    parentPath=""   
    content="">  
    <resource type="file"   
      path="/vrDir/Level1FileA.vrf"  
      parentPath="/vrDir"   
      content="This is the content of file Level1FileA.">  
    </resource>  
    <resource type="file"   
      path="/vrDir/Level1FileB.vrf"  
      parentPath="/vrDir"   
      content="This is the content of file Level1FileB.">  
    </resource>  
    <resource type="dir"   
      path="/vrDir/Level2DirA"   
      parentPath="/vrDir"   
      content="">  
    <resource type="file"   
      path="/vrDir/Level2DirA/Level2FileA.vrf"   
      parentPath="/vrDir/Level2DirA"   
      content="This is the content of file Level2FileA.">  
    </resource>  
    <resource type="file"   
      path="/vrDir/Level2DirA/Level2FileB.vrf"  
      parentPath="/vrDir/Level2DirA"   
      content="This is the content of file Level2FileB.">  
    </resource>  
  </resource>  
  <resource type="dir"   
    path="/vrDir/Level2DirB"   
    parentPath="/vrDir"   
    content="">  
    <resource type="file"   
      path="/vrDir/Level2DirB/Level2FileA.vrf"   
      parentPath="/vrDir/Level2DirB"   
      content="This is the content of file Level2FileA.">  
    </resource>  
    <resource type="file"   
      path="/vrDir/Level2DirB/Level2FileB.vrf"  
      parentPath="/vrDir/Level2DirB"   
      content="This is the content of file Level2FileB.">  
    </resource>  
  </resource>  
</resource>  
```  
  
 W trzecim przykładzie przedstawiono `AppStart` obiekt, który zawiera `AppInitialize` metody. Ta metoda jest wywoływana podczas inicjowania aplikacji ASP.NET, aby wykonać wszelkie niestandardowe wymagają inicjalizacji. W takim przypadku rejestruje niestandardowego <xref:System.Web.Hosting.VirtualPathProvider> systemu kompilacji dla obiekt z platformy ASP.NET.  
  
 [!code-csharp[System.Web.Hosting.VirtualPathProvider#10](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.hosting.virtualpathprovider/CS/AppStart.cs#10)]
 [!code-vb[System.Web.Hosting.VirtualPathProvider#10](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.hosting.virtualpathprovider/VB/AppStart.vb#10)]  
  
 Ostatni przykładem jest strona ASP.NET, który zawiera łącza do wirtualnych plików zawarte w wirtualnym systemie plików.  
  
 [!code-aspx-csharp[System.Web.Hosting.VirtualPathProvider#1](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.hosting.virtualpathprovider/CS/Default.aspx#1)]
 [!code-aspx-vb[System.Web.Hosting.VirtualPathProvider#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.hosting.virtualpathprovider/VB/Default.aspx#1)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <para>Przy dziedziczeniu z <see cref="T:System.Web.Hosting.VirtualPathProvider" />, konieczne jest przesłonięcie następujących członków:- <see cref="M:System.Web.Hosting.VirtualPathProvider.FileExists(System.String)" />   
  
-    <see cref="M:System.Web.Hosting.VirtualPathProvider.GetFile(System.String)" /> Jeśli niestandardowe <see cref="T:System.Web.Hosting.VirtualPathProvider" /> klasa obsługuje katalogi w wirtualnym systemie plików, konieczne jest przesłonięcie następujących członków.  - <see cref="M:System.Web.Hosting.VirtualPathProvider.DirectoryExists(System.String)" />   
  
-    <see cref="M:System.Web.Hosting.VirtualPathProvider.GetDirectory(System.String)" /><block subset="none" type="note"><para> Jeśli system plików wirtualnego będzie zawierać motywy dla witryny sieci Web (przez utworzenie wirtualnej <c>App_Themes</c> katalogu), niestandardowe <see cref="T:System.Web.Hosting.VirtualPathProvider" /> klasy musi obsługiwać katalogów.  </para></block>  Niestandardowy <see cref="T:System.Web.Hosting.VirtualPathProvider" /> klasy współpracuje z klasy pochodzące od <see cref="T:System.Web.Hosting.VirtualFile" /> i <see cref="T:System.Web.Hosting.VirtualDirectory" /> klasy. Należy zaimplementować klasy pochodnej z tych typów, aby podać informacje plików i katalogów w systemie plików wirtualnych. Na przykład niestandardowy <see cref="T:System.Web.Hosting.VirtualFile" /> implementacji, zobacz sekcję przykład <see cref="T:System.Web.Hosting.VirtualFile" /> temat klasy. Na przykład niestandardowy <see cref="T:System.Web.Hosting.VirtualDirectory" /> implementacji, zobacz sekcję przykład <see cref="T:System.Web.Hosting.VirtualDirectory" /> temat klasy.</para>
    </block>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected VirtualPathProvider ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.VirtualPathProvider.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; VirtualPathProvider();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje klasę do użycia przez odziedziczone wystąpienie klasy. Ten konstruktor można wywołać tylko przez odziedziczoną klasę.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Podczas zastępowania <xref:System.Web.Hosting.VirtualPathProvider.%23ctor%2A> konstruktora, odroczenie inicjowanie, który musi przypadać po <xref:System.Web.Hosting.VirtualPathProvider> obiektu nie jest zarejestrowana dla <xref:System.Web.Hosting.VirtualPathProvider.Initialize%2A> metody.  
  
   
  
## Examples  
 Poniższy przykładowy kod jest implementacją <xref:System.Web.Hosting.VirtualPathProvider.%23ctor%2A> Konstruktor, który inicjuje niestandardowego <xref:System.Web.Hosting.VirtualPathProvider> klasy. Dla pełny kod wymagany do uruchamiania w przykładzie, zobacz sekcję przykład <xref:System.Web.Hosting.VirtualPathProvider> temat klasy.  
  
 [!code-csharp[System.Web.Hosting.VirtualPathProvider#25](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.hosting.virtualpathprovider/CS/SamplePathProvider.cs#25)]
 [!code-vb[System.Web.Hosting.VirtualPathProvider#25](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.hosting.virtualpathprovider/VB/SamplePathProvider.vb#25)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CombineVirtualPaths">
      <MemberSignature Language="C#" Value="public virtual string CombineVirtualPaths (string basePath, string relativePath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string CombineVirtualPaths(string basePath, string relativePath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.VirtualPathProvider.CombineVirtualPaths(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CombineVirtualPaths (basePath As String, relativePath As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ CombineVirtualPaths(System::String ^ basePath, System::String ^ relativePath);" />
      <MemberSignature Language="F#" Value="abstract member CombineVirtualPaths : string * string -&gt; string&#xA;override this.CombineVirtualPaths : string * string -&gt; string" Usage="virtualPathProvider.CombineVirtualPaths (basePath, relativePath)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="basePath" Type="System.String" />
        <Parameter Name="relativePath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="basePath">Podstawowa ścieżka aplikacji.</param>
        <param name="relativePath">Ścieżka do zasobu wirtualnego, względem ścieżki podstawowej.</param>
        <summary>Łączy ścieżki bazowej ze ścieżką względną do zwrócenia pełną ścieżkę do wirtualnego zasobu.</summary>
        <returns>Pełna ścieżka do zasobu wirtualnego.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Web.Hosting.VirtualPathProvider.CombineVirtualPaths%2A> metodę, aby sprawdzić zawartość ścieżkę względną do zasobu wirtualnego i wykonaj wszystkie wymagane modyfikacje.  
  
 Domyślna implementacja łączy `basePath` i `relativePath` parametry zgodnie ze ścieżką podczas przetwarzania standardowe ASP.NET.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Jeśli można zastąpić domyślną implementację elementu <see cref="M:System.Web.Hosting.VirtualPathProvider.CombineVirtualPaths(System.String,System.String)" /> metody, jest wymagane do konwersji wszelkie specjalne składni <paramref name="relativePath" /> parametr prawidłową ścieżką wirtualną. Jest odpowiedzialny za składni sprawdzanie poprawności ścieżki i obsługa źle skonstruowane dane wejściowe, a także przypadków krawędzi reakcję poprawnie sformułowany.  W większości przypadków nie będzie trzeba zastąpić domyślną <see cref="M:System.Web.Hosting.VirtualPathProvider.CombineVirtualPaths(System.String,System.String)" /> metody. Jednak jeśli trzeba zmodyfikować tę ścieżkę, zalecamy ograniczenie Twojej <see cref="M:System.Web.Hosting.VirtualPathProvider.CombineVirtualPaths(System.String,System.String)" /> wykonania modyfikacja tokenów specyficzne dla dostawcy ścieżki wirtualnej w <paramref name="relativeUrl" /> parametr i że można następnie wywoływać implementację podstawową do wykonywania normalnych Przetwarzanie ścieżki ASP.NET</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="DirectoryExists">
      <MemberSignature Language="C#" Value="public virtual bool DirectoryExists (string virtualDir);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool DirectoryExists(string virtualDir) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.VirtualPathProvider.DirectoryExists(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DirectoryExists (virtualDir As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool DirectoryExists(System::String ^ virtualDir);" />
      <MemberSignature Language="F#" Value="abstract member DirectoryExists : string -&gt; bool&#xA;override this.DirectoryExists : string -&gt; bool" Usage="virtualPathProvider.DirectoryExists virtualDir" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualDir" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="virtualDir">Ścieżka do katalogu wirtualnego.</param>
        <summary>Pobiera wartość wskazującą, czy katalog istnieje w wirtualnym systemie plików.</summary>
        <returns>
          <see langword="true" /> Jeśli katalog istnieje w wirtualnym systemie plików; w przeciwnym razie <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zastąpienie <xref:System.Web.Hosting.VirtualPathProvider.DirectoryExists%2A> metody, aby poinformować system kompilacji, która zasobu reprezentowanego przez `virtualDir` istnieje w wirtualnym systemie plików udostępniane przez to <xref:System.Web.Hosting.VirtualPathProvider> wystąpienia.  
  
 Jeśli niestandardowe <xref:System.Web.Hosting.VirtualPathProvider> klasa nie obsługuje katalogi, <xref:System.Web.Hosting.VirtualPathProvider.DirectoryExists%2A> metoda powinna zwrócić `false`.  
  
> [!NOTE]
>  Jeśli system plików wirtualnego będzie zawierać motywy dla witryny sieci Web (przez utworzenie wirtualnej `App_Themes` katalogu), niestandardowe <xref:System.Web.Hosting.VirtualPathProvider> klasy musi obsługiwać katalogów.  
  
   
  
## Examples  
 Poniższy przykładowy kod jest implementacją <xref:System.Web.Hosting.VirtualPathProvider.DirectoryExists%2A> w niestandardowej metody <xref:System.Web.Hosting.VirtualPathProvider> klasy. Dla pełny kod wymagany do uruchamiania w przykładzie, zobacz sekcję przykład <xref:System.Web.Hosting.VirtualPathProvider> temat klasy.  
  
 [!code-csharp[System.Web.Hosting.VirtualPathProvider#22](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.hosting.virtualpathprovider/CS/SamplePathProvider.cs#22)]
 [!code-vb[System.Web.Hosting.VirtualPathProvider#22](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.hosting.virtualpathprovider/VB/SamplePathProvider.vb#22)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FileExists">
      <MemberSignature Language="C#" Value="public virtual bool FileExists (string virtualPath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool FileExists(string virtualPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.VirtualPathProvider.FileExists(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function FileExists (virtualPath As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool FileExists(System::String ^ virtualPath);" />
      <MemberSignature Language="F#" Value="abstract member FileExists : string -&gt; bool&#xA;override this.FileExists : string -&gt; bool" Usage="virtualPathProvider.FileExists virtualPath" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="virtualPath">Ścieżka do pliku wirtualnego.</param>
        <summary>Pobiera wartość wskazującą, czy plik istnieje w wirtualnym systemie plików.</summary>
        <returns>
          <see langword="true" /> Jeśli plik istnieje w wirtualnym systemie plików; w przeciwnym razie <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zastąpienie <xref:System.Web.Hosting.VirtualPathProvider.FileExists%2A> metody, aby poinformować system kompilacji, która zasobu reprezentowanego przez `virtualPath` istnieje w wirtualnym systemie plików udostępniane przez to <xref:System.Web.Hosting.VirtualPathProvider> wystąpienia.  
  
   
  
## Examples  
 Poniższy przykładowy kod jest implementacją <xref:System.Web.Hosting.VirtualPathProvider.FileExists%2A> w niestandardowej metody <xref:System.Web.Hosting.VirtualPathProvider> klasy. Dla pełny kod wymagany do uruchamiania w przykładzie, zobacz sekcję przykład <xref:System.Web.Hosting.VirtualPathProvider> temat klasy.  
  
 [!code-csharp[System.Web.Hosting.VirtualPathProvider#21](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.hosting.virtualpathprovider/CS/SamplePathProvider.cs#21)]
 [!code-vb[System.Web.Hosting.VirtualPathProvider#21](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.hosting.virtualpathprovider/VB/SamplePathProvider.vb#21)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCacheDependency">
      <MemberSignature Language="C#" Value="public virtual System.Web.Caching.CacheDependency GetCacheDependency (string virtualPath, System.Collections.IEnumerable virtualPathDependencies, DateTime utcStart);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Web.Caching.CacheDependency GetCacheDependency(string virtualPath, class System.Collections.IEnumerable virtualPathDependencies, valuetype System.DateTime utcStart) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.VirtualPathProvider.GetCacheDependency(System.String,System.Collections.IEnumerable,System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetCacheDependency (virtualPath As String, virtualPathDependencies As IEnumerable, utcStart As DateTime) As CacheDependency" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Web::Caching::CacheDependency ^ GetCacheDependency(System::String ^ virtualPath, System::Collections::IEnumerable ^ virtualPathDependencies, DateTime utcStart);" />
      <MemberSignature Language="F#" Value="abstract member GetCacheDependency : string * System.Collections.IEnumerable * DateTime -&gt; System.Web.Caching.CacheDependency&#xA;override this.GetCacheDependency : string * System.Collections.IEnumerable * DateTime -&gt; System.Web.Caching.CacheDependency" Usage="virtualPathProvider.GetCacheDependency (virtualPath, virtualPathDependencies, utcStart)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Caching.CacheDependency</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
        <Parameter Name="virtualPathDependencies" Type="System.Collections.IEnumerable" />
        <Parameter Name="utcStart" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="virtualPath">Ścieżka do podstawowego zasobu wirtualnego.</param>
        <param name="virtualPathDependencies">Tablica ścieżki do innych zasobów wymaganych przez podstawowy wirtualny zasób.</param>
        <param name="utcStart">Czas UTC, w którym zostały odczytane zasobami wirtualnymi.</param>
        <summary>Tworzy zależność pamięci podręcznej oparte na określonej ścieżki wirtualnej.</summary>
        <returns>A <see cref="T:System.Web.Caching.CacheDependency" /> obiektu dla określonych zasobów wirtualnych.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Domyślna implementacja <xref:System.Web.Hosting.VirtualPathProvider.GetCacheDependency%2A> metoda zwraca `null`. Z zasobami wirtualnymi w pamięci podręcznej do późniejszego użycia konieczne jest przesłonięcie albo <xref:System.Web.Hosting.VirtualPathProvider.GetCacheDependency%2A> metody lub <xref:System.Web.Hosting.VirtualPathProvider.GetFileHash%2A> metody.  
  
   
  
## Examples  
 Poniższy kod przykładowy implementuje <xref:System.Web.Hosting.VirtualPathProvider.GetCacheDependency%2A> metodę dla niestandardowego <xref:System.Web.Hosting.VirtualPathProvider> klasy. Dla pełny kod wymagany do uruchamiania w przykładzie, zobacz sekcję przykład <xref:System.Web.Hosting.VirtualPathProvider> temat klasy.  
  
 [!code-csharp[System.Web.Hosting.VirtualPathProvider#28](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.hosting.virtualpathprovider/CS/SamplePathProvider.cs#28)]
 [!code-vb[System.Web.Hosting.VirtualPathProvider#28](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.hosting.virtualpathprovider/VB/SamplePathProvider.vb#28)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCacheKey">
      <MemberSignature Language="C#" Value="public virtual string GetCacheKey (string virtualPath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetCacheKey(string virtualPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.VirtualPathProvider.GetCacheKey(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetCacheKey (virtualPath As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetCacheKey(System::String ^ virtualPath);" />
      <MemberSignature Language="F#" Value="abstract member GetCacheKey : string -&gt; string&#xA;override this.GetCacheKey : string -&gt; string" Usage="virtualPathProvider.GetCacheKey virtualPath" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="virtualPath">Ścieżka do zasobu wirtualnego.</param>
        <summary>Zwraca klucz pamięci podręcznej dla określonej ścieżki wirtualnej.</summary>
        <returns>Klucz pamięci podręcznej dla określonego zasobu wirtualnego.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Web.Hosting.VirtualPathProvider.GetCacheKey%2A> metodę, aby dostarczyć klucz pamięci podręcznej niestandardowych dla zasobami wirtualnymi. Jeśli nie zastępują <xref:System.Web.Hosting.VirtualPathProvider.GetCacheKey%2A> metoda, ścieżka wirtualna jest używana dla klucza pamięci podręcznej.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Tylko zastąpić domyślną <see cref="M:System.Web.Hosting.VirtualPathProvider.GetCacheKey(System.String)" /> metodę, jeśli Tworzenie klucza pamięci podręcznej na podstawie wirtualnej ścieżki nie będzie działać dla aplikacji.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="GetDirectory">
      <MemberSignature Language="C#" Value="public virtual System.Web.Hosting.VirtualDirectory GetDirectory (string virtualDir);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Web.Hosting.VirtualDirectory GetDirectory(string virtualDir) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.VirtualPathProvider.GetDirectory(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDirectory (virtualDir As String) As VirtualDirectory" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Web::Hosting::VirtualDirectory ^ GetDirectory(System::String ^ virtualDir);" />
      <MemberSignature Language="F#" Value="abstract member GetDirectory : string -&gt; System.Web.Hosting.VirtualDirectory&#xA;override this.GetDirectory : string -&gt; System.Web.Hosting.VirtualDirectory" Usage="virtualPathProvider.GetDirectory virtualDir" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Hosting.VirtualDirectory</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualDir" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="virtualDir">Ścieżka do katalogu wirtualnego.</param>
        <summary>Pobiera katalog wirtualny z wirtualnego systemu plików.</summary>
        <returns>Element podrzędny <see cref="T:System.Web.Hosting.VirtualDirectory" /> klasa, która reprezentuje katalog w wirtualnym systemie plików.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Hosting.VirtualPathProvider.GetDirectory%2A> Metoda zwraca element podrzędny <xref:System.Web.Hosting.VirtualDirectory> klasy zawierającej plików i katalogów w katalogu określonego w `virtualDir` parametru.  
  
 Jeśli niestandardowe <xref:System.Web.Hosting.VirtualPathProvider> klasa nie obsługuje katalogi, <xref:System.Web.Hosting.VirtualPathProvider.GetDirectory%2A> metoda powinna zwrócić `null`.  
  
> [!NOTE]
>  Jeśli system plików wirtualnego będzie zawierać motywy dla witryny sieci Web (przez utworzenie wirtualnej `App_Themes` katalogu), niestandardowe <xref:System.Web.Hosting.VirtualPathProvider> klasy musi obsługiwać katalogów.  
  
   
  
## Examples  
 Poniższy przykładowy kod jest implementacją <xref:System.Web.Hosting.VirtualPathProvider.GetDirectory%2A> w niestandardowej metody <xref:System.Web.Hosting.VirtualPathProvider> klasy. Dla pełny kod wymagany do uruchamiania w przykładzie, zobacz sekcję przykład <xref:System.Web.Hosting.VirtualPathProvider> temat klasy.  
  
 [!code-csharp[System.Web.Hosting.VirtualPathProvider#24](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.hosting.virtualpathprovider/CS/SamplePathProvider.cs#24)]
 [!code-vb[System.Web.Hosting.VirtualPathProvider#24](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.hosting.virtualpathprovider/VB/SamplePathProvider.vb#24)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFile">
      <MemberSignature Language="C#" Value="public virtual System.Web.Hosting.VirtualFile GetFile (string virtualPath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Web.Hosting.VirtualFile GetFile(string virtualPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.VirtualPathProvider.GetFile(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetFile (virtualPath As String) As VirtualFile" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Web::Hosting::VirtualFile ^ GetFile(System::String ^ virtualPath);" />
      <MemberSignature Language="F#" Value="abstract member GetFile : string -&gt; System.Web.Hosting.VirtualFile&#xA;override this.GetFile : string -&gt; System.Web.Hosting.VirtualFile" Usage="virtualPathProvider.GetFile virtualPath" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Hosting.VirtualFile</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="virtualPath">Ścieżka do pliku wirtualnego.</param>
        <summary>Pobiera plik wirtualny z wirtualnego systemu plików.</summary>
        <returns>Element podrzędny <see cref="T:System.Web.Hosting.VirtualFile" /> klasy, która reprezentuje plik w wirtualnym systemie plików.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Hosting.VirtualPathProvider.GetFile%2A> Metoda zwraca element podrzędny <xref:System.Web.Hosting.VirtualFile> klasa, która reprezentuje plik określony przez `virtualPath` parametru.  
  
   
  
## Examples  
 Poniższy przykładowy kod jest implementacją <xref:System.Web.Hosting.VirtualPathProvider.GetFile%2A> w niestandardowej metody <xref:System.Web.Hosting.VirtualPathProvider> klasy. Dla pełny kod wymagany do uruchamiania w przykładzie, zobacz sekcję przykład <xref:System.Web.Hosting.VirtualPathProvider> temat klasy.  
  
 [!code-csharp[System.Web.Hosting.VirtualPathProvider#23](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.hosting.virtualpathprovider/CS/SamplePathProvider.cs#23)]
 [!code-vb[System.Web.Hosting.VirtualPathProvider#23](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.hosting.virtualpathprovider/VB/SamplePathProvider.vb#23)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFileHash">
      <MemberSignature Language="C#" Value="public virtual string GetFileHash (string virtualPath, System.Collections.IEnumerable virtualPathDependencies);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetFileHash(string virtualPath, class System.Collections.IEnumerable virtualPathDependencies) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.VirtualPathProvider.GetFileHash(System.String,System.Collections.IEnumerable)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetFileHash (virtualPath As String, virtualPathDependencies As IEnumerable) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetFileHash(System::String ^ virtualPath, System::Collections::IEnumerable ^ virtualPathDependencies);" />
      <MemberSignature Language="F#" Value="abstract member GetFileHash : string * System.Collections.IEnumerable -&gt; string&#xA;override this.GetFileHash : string * System.Collections.IEnumerable -&gt; string" Usage="virtualPathProvider.GetFileHash (virtualPath, virtualPathDependencies)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
        <Parameter Name="virtualPathDependencies" Type="System.Collections.IEnumerable" />
      </Parameters>
      <Docs>
        <param name="virtualPath">Ścieżka do podstawowego zasobu wirtualnego.</param>
        <param name="virtualPathDependencies">Tablica ścieżki do innych wirtualnych zasoby wymagane przez podstawowy wirtualny zasób.</param>
        <summary>Zwraca skrót określonej ścieżki wirtualnej.</summary>
        <returns>Skrót określonej ścieżki wirtualnej.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Web.Hosting.VirtualPathProvider.GetFileHash%2A> metodę w celu zapewnienia skrót zależności zasobu wirtualnego systemu plików.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="protected virtual void Initialize ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Initialize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.VirtualPathProvider.Initialize" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Initialize ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Initialize();" />
      <MemberSignature Language="F#" Value="abstract member Initialize : unit -&gt; unit&#xA;override this.Initialize : unit -&gt; unit" Usage="virtualPathProvider.Initialize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Inicjuje <see cref="T:System.Web.Hosting.VirtualPathProvider" /> wystąpienia.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Hosting.VirtualPathProvider.Initialize%2A> Metoda jest wywoływana po dostawca został zarejestrowany w systemie kompilacji platformy ASP.NET. <xref:System.Web.Hosting.VirtualPathProvider.Initialize%2A> Metoda służy do zapewnienia inicjowanie wymagany po <xref:System.Web.Hosting.VirtualPathProvider> wystąpienia jest umieszczany w środowisku zajmuje aplikacji.  
  
   
  
## Examples  
 Poniższy przykładowy kod jest implementacją <xref:System.Web.Hosting.VirtualPathProvider.Initialize%2A> metodę, która ustawia ścieżkę do pliku danych z aplikacji <xref:System.Web.Hosting.HostingEnvironment> wystąpienia. Dla pełny kod wymagany do uruchamiania w przykładzie, zobacz sekcję przykład <xref:System.Web.Hosting.VirtualPathProvider> temat klasy.  
  
 [!code-csharp[System.Web.Hosting.VirtualPathProvider#26](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.hosting.virtualpathprovider/CS/SamplePathProvider.cs#26)]
 [!code-vb[System.Web.Hosting.VirtualPathProvider#26](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.hosting.virtualpathprovider/VB/SamplePathProvider.vb#26)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InitializeLifetimeService">
      <MemberSignature Language="C#" Value="public override object InitializeLifetimeService ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object InitializeLifetimeService() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.VirtualPathProvider.InitializeLifetimeService" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function InitializeLifetimeService () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ InitializeLifetimeService();" />
      <MemberSignature Language="F#" Value="override this.InitializeLifetimeService : unit -&gt; obj" Usage="virtualPathProvider.InitializeLifetimeService " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zapewnia <see cref="T:System.Web.Hosting.VirtualPathProvider" /> obiekt przez cały okres istnienia zapobiegając tworzona dzierżawy.</summary>
        <returns>Zawsze <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda zastępuje <xref:System.MarshalByRefObject.InitializeLifetimeService%2A> metody w klasie podstawowej. Zawsze zwraca `null` i tym samym uniemożliwia dzierżawy z tworzona, która będzie ograniczona <xref:System.Web.Hosting.VirtualPathProvider> okres istnienia obiektu.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OpenFile">
      <MemberSignature Language="C#" Value="public static System.IO.Stream OpenFile (string virtualPath);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.Stream OpenFile(string virtualPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.VirtualPathProvider.OpenFile(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function OpenFile (virtualPath As String) As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::Stream ^ OpenFile(System::String ^ virtualPath);" />
      <MemberSignature Language="F#" Value="static member OpenFile : string -&gt; System.IO.Stream" Usage="System.Web.Hosting.VirtualPathProvider.OpenFile virtualPath" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="virtualPath">Ścieżka do pliku wirtualnego.</param>
        <summary>Zwraca strumień od pliku wirtualnego.</summary>
        <returns>Tylko do odczytu <see cref="T:System.IO.Stream" /> obiektu dla określonej wirtualnej plik lub zasób.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Hosting.VirtualPathProvider.OpenFile%2A> Metoda jest wygodne metody, która umożliwia uzyskanie strumienia pliku wirtualnego bez tworzenia <xref:System.Web.Hosting.VirtualPathProvider> wystąpienia.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Previous">
      <MemberSignature Language="C#" Value="protected internal System.Web.Hosting.VirtualPathProvider Previous { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.Hosting.VirtualPathProvider Previous" />
      <MemberSignature Language="DocId" Value="P:System.Web.Hosting.VirtualPathProvider.Previous" />
      <MemberSignature Language="VB.NET" Value="Protected Friend ReadOnly Property Previous As VirtualPathProvider" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; property System::Web::Hosting::VirtualPathProvider ^ Previous { System::Web::Hosting::VirtualPathProvider ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Previous : System.Web.Hosting.VirtualPathProvider" Usage="System.Web.Hosting.VirtualPathProvider.Previous" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Hosting.VirtualPathProvider</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera odwołanie do wcześniej zarejestrowanego <see cref="T:System.Web.Hosting.VirtualPathProvider" /> obiektu w systemie kompilacji.</summary>
        <value>Następne <see cref="T:System.Web.Hosting.VirtualPathProvider" /> obiektu w systemie kompilacji.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Gdy <xref:System.Web.Hosting.VirtualPathProvider> obiekt jest zarejestrowany w systemie kompilacji platformy ASP.NET, jest ona dodawana do łańcucha dostawców. Użyj <xref:System.Web.Hosting.VirtualPathProvider.Previous%2A> właściwości dla przetwarzania ręcznie wyłączyć do poprzedniego <xref:System.Web.Hosting.VirtualPathProvider> obiektów w łańcuchu, jeśli to nie zostanie podana żądana ścieżka <xref:System.Web.Hosting.VirtualPathProvider> wystąpienia.  
  
 Łańcuch dostawców ścieżki zawsze kończy się wyrazem domyślnego dostawcę ASP.NET, które udostępniają pliki z systemu plików.  
  
   
  
## Examples  
 Poniższy przykładowy kod jest implementacją <xref:System.Web.Hosting.VirtualPathProvider.GetFile%2A> metody. Jeśli żądanego katalogu wirtualnego nie zaczyna się od ciągu `"/vrdir"`, w metodzie <xref:System.Web.Hosting.VirtualPathProvider.Previous%2A> właściwości do przekazania żądania do następnego <xref:System.Web.Hosting.VirtualPathProvider> obiektu w łańcuchu. Dla pełny kod wymagany do uruchamiania w przykładzie, zobacz sekcję przykład <xref:System.Web.Hosting.VirtualPathProvider> temat klasy.  
  
 [!code-csharp[System.Web.Hosting.VirtualPathProvider#23](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.hosting.virtualpathprovider/CS/SamplePathProvider.cs#23)]
 [!code-vb[System.Web.Hosting.VirtualPathProvider#23](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.hosting.virtualpathprovider/VB/SamplePathProvider.vb#23)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>