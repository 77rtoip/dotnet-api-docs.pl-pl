<Type Name="VirtualPathProvider" FullName="System.Web.Hosting.VirtualPathProvider">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="27e266af779c9e51c80127f68edf282203c88fdc" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39787732" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class VirtualPathProvider : MarshalByRefObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit VirtualPathProvider extends System.MarshalByRefObject" />
  <TypeSignature Language="DocId" Value="T:System.Web.Hosting.VirtualPathProvider" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class VirtualPathProvider&#xA;Inherits MarshalByRefObject" />
  <TypeSignature Language="C++ CLI" Value="public ref class VirtualPathProvider abstract : MarshalByRefObject" />
  <TypeSignature Language="F#" Value="type VirtualPathProvider = class&#xA;    inherit MarshalByRefObject" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.MarshalByRefObject</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Udostępnia zestaw metod, które umożliwiają aplikacji sieci Web pobrać zasoby z wirtualny system plików.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Hosting.VirtualPathProvider> Klasa udostępnia zestaw metod do implementowania wirtualny system plików dla aplikacji sieci Web. W wirtualnym systemie plików pliki i katalogi są zarządzane przez Magazyn danych innych niż system plików, dostarczone przez system operacyjny serwera. Na przykład można użyć wirtualny system plików do przechowywania zawartości w bazie danych programu SQL Server.  
  
 W wirtualnym systemie plików można przechowywać dowolny plik, który jest przetwarzany na żądanie. Możliwości obejmują:  
  
-   Strony ASP.NET, strony wzorcowe, kontrolki użytkownika i innych obiektów.  
  
-   Standardowa stron sieci Web przy użyciu rozszerzeń, takich jak .htm i jpg.  
  
-   Każde rozszerzenie niestandardowych mapowane na <xref:System.Web.Compilation.BuildProvider> wystąpienia.  
  
-   Wszelkie nazwanego motywu w `App_Theme` folderu.  
  
 Nie można zapisać folderów aplikacji ASP.NET lub pliki, które generują zestawy z poziomu aplikacji w wirtualnym systemie plików. Możliwości obejmują:  
  
-   Plik Global.asax.  
  
-   Plików Web.config.  
  
-   Używane przez pliki danych mapy witryny <xref:System.Web.XmlSiteMapProvider>.  
  
-   Katalogi, które zawierają zestawy aplikacji lub generują zestawy aplikacji: `Bin`, `App_Code`, `App_GlobalResources`, any `App_LocalResources`.  
  
-   Folder dane aplikacji, `App_Data`.  
  
> [!NOTE]
>  Jeśli witryna sieci Web jest wstępnie skompilowany dla wdrożenia, zawartość dostarczana przez <xref:System.Web.Hosting.VirtualPathProvider> wystąpienia nie jest kompilowana i nie <xref:System.Web.Hosting.VirtualPathProvider> wystąpienia są używane przez wstępnie skompilowanej witryny.  
  
## <a name="registering-a-virtualpathprovider"></a>Rejestrowanie VirtualPathProvider  
 Niestandardowy <xref:System.Web.Hosting.VirtualPathProvider> wystąpienia powinien być zarejestrowany w systemie kompilacji platformy ASP.NET przy użyciu <xref:System.Web.Hosting.HostingEnvironment.RegisterVirtualPathProvider%2A?displayProperty=nameWithType> metoda przed wykonaniem dowolnej strony podczas analizowania lub kompilacji przez aplikację sieci Web.  
  
 Zazwyczaj <xref:System.Web.Hosting.VirtualPathProvider> wystąpienia jest zarejestrowany w `AppInitialize` metody zdefiniowanej w `App_Code` katalogu lub w trakcie `Application_Start` zdarzenia w `Global.asax` pliku. Na przykład rejestrowanie <xref:System.Web.Hosting.VirtualPathProvider> wystąpienia w `AppInitialize` metody, zobacz sekcję przykład.  
  
 Możesz zarejestrować <xref:System.Web.Hosting.VirtualPathProvider> wystąpienia podczas inne zdarzenia, ale stron kompilowane i pamięci podręcznej przed <xref:System.Web.Hosting.VirtualPathProvider> wystąpienia jest zarejestrowany nie zostaną unieważnione, nawet wtedy, gdy nowy <xref:System.Web.Hosting.VirtualPathProvider> wystąpienia teraz zapewni źródło wcześniej kompilowanej stronie.  
  
   
  
## Examples  
 Poniższy przykład kodu jest <xref:System.Web.Hosting.VirtualPathProvider> implementację klasy, która tworzy wirtualny system plików przy użyciu informacji przechowywanych w <xref:System.Data.DataSet> obiektu. Przykładowy kod współdziała z przykładami kodu <xref:System.Web.Hosting.VirtualFile> i <xref:System.Web.Hosting.VirtualDirectory> klasy, aby zapewnić zasoby wirtualne danych magazyn, który jest ładowany do <xref:System.Data.DataSet> obiektu.  
  
 W tym przykładzie ma cztery części: <xref:System.Web.Hosting.VirtualPathProvider> implementację klasy, pliku danych XML używanych do wypełniania <xref:System.Data.DataSet> obiektu `AppStart` obiekt, który zawiera `AppInitialize` metodę używaną do zarejestrowania <xref:System.Web.Hosting.VirtualPathProvider> klasy z kompilacji System, a strony ASP.NET, która zawiera łącza do plików wirtualnych.  
  
 Aby użyć tego przykładowego kodu w aplikacji, wykonaj następujące kroki.  
  
1.  Utwórz przykładową aplikację na serwerze sieci Web.  
  
2.  Skopiuj kod źródłowy dla niestandardowej <xref:System.Web.Hosting.VirtualPathProvider> obiektu (patrz poniżej) do pliku w aplikacji `App_Code` katalogu.  
  
3.  Skopiuj kod źródłowy dla niestandardowego <xref:System.Web.Hosting.VirtualDirectory> obiektu (w sekcji przykład <xref:System.Web.Hosting.VirtualDirectory> temat poświęcony klasie — omówienie) do pliku w aplikacji `App_Code` katalogu.  
  
4.  Skopiuj kod źródłowy dla niestandardowego <xref:System.Web.Hosting.VirtualFile> obiektu (w sekcji przykład <xref:System.Web.Hosting.VirtualFile> temat poświęcony klasie — omówienie) do pliku w aplikacji `App_Code` katalogu.  
  
5.  Skopiuj kod źródłowy dla `AppStart` obiektu (patrz poniżej) do pliku w aplikacji `App_Code` katalogu.  
  
6.  Skopiuj dane XML (patrz poniżej) do pliku o nazwie `XMLData.xml` do pliku w aplikacji `App_Data` katalogu.  
  
7.  Kopiuj `default.aspx` pliku (patrz poniżej) do katalogu głównego aplikacji przykładowej. Użyj przeglądarki sieci Web, aby otworzyć `default.aspx` pliku, a następnie kliknij linki na stronie, aby wyświetlić zawartość pliku wirtualnego.  
  
 Pierwszy przykład jest niestandardowy <xref:System.Web.Hosting.VirtualPathProvider> klasy. <xref:System.Web.Hosting.VirtualPathProvider.DirectoryExists%2A> i <xref:System.Web.Hosting.VirtualPathProvider.FileExists%2A> metody zostaną zastąpione, aby wskazać, czy żądany katalog znajduje się w wirtualnym systemie plików. <xref:System.Web.Hosting.VirtualPathProvider.GetDirectory%2A> i <xref:System.Web.Hosting.VirtualPathProvider.GetFile%2A> metody zostaną zastąpione, aby zwrócić niestandardowe <xref:System.Web.Hosting.VirtualDirectory> i <xref:System.Web.Hosting.VirtualFile> wystąpień zawierający informacje z wirtualnego systemu plików.  
  
 Ta klasa oferuje również `GetVirtualData` metodę używaną przez <xref:System.Web.Hosting.VirtualDirectory> i <xref:System.Web.Hosting.VirtualFile> klasy, aby uzyskać dostęp do <xref:System.Data.DataSet> obiekt zawierający dane systemu pliku wirtualnego. W implementacji produkcyjnej metoda ta zazwyczaj są realizowane w odpowiedzialna za interakcję z magazynem danych obiektu biznesowego.  
  
 [!code-csharp[System.Web.Hosting.VirtualPathProvider#20](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.hosting.virtualpathprovider/CS/SamplePathProvider.cs#20)]
 [!code-vb[System.Web.Hosting.VirtualPathProvider#20](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.hosting.virtualpathprovider/VB/SamplePathProvider.vb#20)]  
  
 Drugi przykład jest plikiem danych XML, które są używane do wypełnienia <xref:System.Data.DataSet> obiektu zwróconego przez niestandardowy <xref:System.Web.Hosting.VirtualPathProvider> obiektu. Te dane XML są używane w celu pokazanie sposobu używania <xref:System.Web.Hosting.VirtualPathProvider>, <xref:System.Web.Hosting.VirtualDirectory>, i <xref:System.Web.Hosting.VirtualFile> obiekty do pobierania danych z danymi zewnętrznymi i nie jest przeznaczona do reprezentowania magazynu danych o jakości produkcyjnej.  
  
```  
<?xml version="1.0" encoding="utf-8" ?>  
  <resource type="dir"   
    path="/vrDir"   
    parentPath=""   
    content="">  
    <resource type="file"   
      path="/vrDir/Level1FileA.vrf"  
      parentPath="/vrDir"   
      content="This is the content of file Level1FileA.">  
    </resource>  
    <resource type="file"   
      path="/vrDir/Level1FileB.vrf"  
      parentPath="/vrDir"   
      content="This is the content of file Level1FileB.">  
    </resource>  
    <resource type="dir"   
      path="/vrDir/Level2DirA"   
      parentPath="/vrDir"   
      content="">  
    <resource type="file"   
      path="/vrDir/Level2DirA/Level2FileA.vrf"   
      parentPath="/vrDir/Level2DirA"   
      content="This is the content of file Level2FileA.">  
    </resource>  
    <resource type="file"   
      path="/vrDir/Level2DirA/Level2FileB.vrf"  
      parentPath="/vrDir/Level2DirA"   
      content="This is the content of file Level2FileB.">  
    </resource>  
  </resource>  
  <resource type="dir"   
    path="/vrDir/Level2DirB"   
    parentPath="/vrDir"   
    content="">  
    <resource type="file"   
      path="/vrDir/Level2DirB/Level2FileA.vrf"   
      parentPath="/vrDir/Level2DirB"   
      content="This is the content of file Level2FileA.">  
    </resource>  
    <resource type="file"   
      path="/vrDir/Level2DirB/Level2FileB.vrf"  
      parentPath="/vrDir/Level2DirB"   
      content="This is the content of file Level2FileB.">  
    </resource>  
  </resource>  
</resource>  
```  
  
 Trzeci przykład zawiera `AppStart` obiekt, który zawiera `AppInitialize` metody. Ta metoda jest wywoływana podczas inicjowania aplikacji ASP.NET, aby wykonać wszelkie niestandardowe wymagają inicjalizacji. W tym przypadku rejestruje niestandardowej <xref:System.Web.Hosting.VirtualPathProvider> obiektu za pomocą platformy ASP.NET, system kompilacji.  
  
 [!code-csharp[System.Web.Hosting.VirtualPathProvider#10](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.hosting.virtualpathprovider/CS/AppStart.cs#10)]
 [!code-vb[System.Web.Hosting.VirtualPathProvider#10](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.hosting.virtualpathprovider/VB/AppStart.vb#10)]  
  
 Przykład ostatniego jest strony ASP.NET, który zawiera łącza do plików wirtualnych znajdujących się w wirtualnym systemie plików.  
  
 [!code-aspx-csharp[System.Web.Hosting.VirtualPathProvider#1](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.hosting.virtualpathprovider/CS/Default.aspx#1)]
 [!code-aspx-vb[System.Web.Hosting.VirtualPathProvider#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.hosting.virtualpathprovider/VB/Default.aspx#1)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <para>Przy dziedziczeniu z <see cref="T:System.Web.Hosting.VirtualPathProvider" />, konieczne jest przesłonięcie następujących składowych:- <see cref="M:System.Web.Hosting.VirtualPathProvider.FileExists(System.String)" />   
  
-    <see cref="M:System.Web.Hosting.VirtualPathProvider.GetFile(System.String)" /> Jeśli niestandardowe <see cref="T:System.Web.Hosting.VirtualPathProvider" /> klasy obsługuje katalogów w wirtualnym systemie plików, konieczne jest przesłonięcie następujących elementów członkowskich.  - <see cref="M:System.Web.Hosting.VirtualPathProvider.DirectoryExists(System.String)" />   
  
-    <see cref="M:System.Web.Hosting.VirtualPathProvider.GetDirectory(System.String)" /><block subset="none" type="note"><para> Jeśli system plików wirtualnych będzie zawierać motywy dla witryny sieci Web (przez utworzenie wirtualnej <c>App_Themes</c> katalogu), niestandardowe <see cref="T:System.Web.Hosting.VirtualPathProvider" /> klasy musi obsługiwać katalogów.  </para></block>  Niestandardowy <see cref="T:System.Web.Hosting.VirtualPathProvider" /> klasy współpracuje z klasy pochodne <see cref="T:System.Web.Hosting.VirtualFile" /> i <see cref="T:System.Web.Hosting.VirtualDirectory" /> klasy. Należy zaimplementować klasy pochodne z tych typów, aby podać informacje plików i katalogów w systemie plików wirtualnych. Na przykład niestandardowy <see cref="T:System.Web.Hosting.VirtualFile" /> implementacji, w sekcji przykład <see cref="T:System.Web.Hosting.VirtualFile" /> temat klasy. Na przykład niestandardowy <see cref="T:System.Web.Hosting.VirtualDirectory" /> implementacji, w sekcji przykład <see cref="T:System.Web.Hosting.VirtualDirectory" /> temat klasy.</para>
    </block>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected VirtualPathProvider ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.VirtualPathProvider.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; VirtualPathProvider();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Inicjuje klasę do użycia przez odziedziczone wystąpienie klasy. Ten konstruktor może być wywoływany tylko przez odziedziczoną klasę.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Podczas zastępowania <xref:System.Web.Hosting.VirtualPathProvider.%23ctor%2A> konstruktora, odroczone inicjowanie, który musi przypadać po <xref:System.Web.Hosting.VirtualPathProvider> obiektu jest zarejestrowana w celu <xref:System.Web.Hosting.VirtualPathProvider.Initialize%2A> metody.  
  
   
  
## Examples  
 Poniższy przykład kodu jest implementacją <xref:System.Web.Hosting.VirtualPathProvider.%23ctor%2A> Konstruktor, który inicjuje niestandardowego <xref:System.Web.Hosting.VirtualPathProvider> klasy. Pełny kod wymagany, aby uruchomić przykład, można wyświetlić w sekcji przykład <xref:System.Web.Hosting.VirtualPathProvider> temat klasy.  
  
 [!code-csharp[System.Web.Hosting.VirtualPathProvider#25](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.hosting.virtualpathprovider/CS/SamplePathProvider.cs#25)]
 [!code-vb[System.Web.Hosting.VirtualPathProvider#25](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.hosting.virtualpathprovider/VB/SamplePathProvider.vb#25)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CombineVirtualPaths">
      <MemberSignature Language="C#" Value="public virtual string CombineVirtualPaths (string basePath, string relativePath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string CombineVirtualPaths(string basePath, string relativePath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.VirtualPathProvider.CombineVirtualPaths(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CombineVirtualPaths (basePath As String, relativePath As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ CombineVirtualPaths(System::String ^ basePath, System::String ^ relativePath);" />
      <MemberSignature Language="F#" Value="abstract member CombineVirtualPaths : string * string -&gt; string&#xA;override this.CombineVirtualPaths : string * string -&gt; string" Usage="virtualPathProvider.CombineVirtualPaths (basePath, relativePath)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="basePath" Type="System.String" />
        <Parameter Name="relativePath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="basePath">Ścieżka podstawowa dla aplikacji.</param>
        <param name="relativePath">Ścieżka do wirtualnego zasobu względem ścieżki podstawowej.</param>
        <summary>Łączy ścieżki podstawowej za pomocą ścieżki względnej, aby przywrócić pełną ścieżkę do zasób wirtualny.</summary>
        <returns>Pełna ścieżka do wirtualnego zasobu.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Web.Hosting.VirtualPathProvider.CombineVirtualPaths%2A> metodę, aby sprawdzić zawartość ścieżkę względną do zasobu wirtualnego i wykonywać dowolne modyfikacje wymagane.  
  
 Domyślna implementacja łączy `basePath` i `relativePath` parametrów, zgodnie z standard przetwarzania ścieżki programu ASP.NET.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Jeśli zastąpisz domyślna Implementacja klasy <see cref="M:System.Web.Hosting.VirtualPathProvider.CombineVirtualPaths(System.String,System.String)" /> metody jest wymagane do konwersji wszelkie specjalnej składni z <paramref name="relativePath" /> parametr prawidłową ścieżką wirtualną. Odpowiedzialność za składni sprawdzanie poprawności ścieżki i obsługa źle sformułowane dane wejściowe, a także przypadki brzegowe dla danych wejściowych poprawnie sformułowany.  W większości przypadków nie będzie to konieczne zastąpić domyślne <see cref="M:System.Web.Hosting.VirtualPathProvider.CombineVirtualPaths(System.String,System.String)" /> metody. Jednak jeśli trzeba zmodyfikować tę ścieżkę, zaleca się ograniczenie usługi <see cref="M:System.Web.Hosting.VirtualPathProvider.CombineVirtualPaths(System.String,System.String)" /> implementacji do modyfikowania tokenów specyficzne dla dostawcy ścieżkę wirtualną w <paramref name="relativeUrl" /> parametru, a następnie wywołania implementację podstawową, aby wykonać normalnego Przetwarzanie ścieżki platformy ASP.NET</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="DirectoryExists">
      <MemberSignature Language="C#" Value="public virtual bool DirectoryExists (string virtualDir);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool DirectoryExists(string virtualDir) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.VirtualPathProvider.DirectoryExists(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DirectoryExists (virtualDir As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool DirectoryExists(System::String ^ virtualDir);" />
      <MemberSignature Language="F#" Value="abstract member DirectoryExists : string -&gt; bool&#xA;override this.DirectoryExists : string -&gt; bool" Usage="virtualPathProvider.DirectoryExists virtualDir" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualDir" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="virtualDir">Ścieżka do katalogu wirtualnego.</param>
        <summary>Pobiera wartość wskazującą, czy katalog istnieje w wirtualnym systemie plików.</summary>
        <returns>
          <see langword="true" /> Jeśli katalog istnieje w wirtualnym systemie plików; w przeciwnym razie <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zastąp <xref:System.Web.Hosting.VirtualPathProvider.DirectoryExists%2A> metodę w celu wskazania systemowi kompilacji, który zasób reprezentowany przez `virtualDir` istnieje w wirtualnym systemie plików udostępniane przez to <xref:System.Web.Hosting.VirtualPathProvider> wystąpienia.  
  
 Jeśli niestandardowe <xref:System.Web.Hosting.VirtualPathProvider> klasa nie obsługuje katalogów <xref:System.Web.Hosting.VirtualPathProvider.DirectoryExists%2A> metoda powinna zwrócić `false`.  
  
> [!NOTE]
>  Jeśli Twoje wirtualny system plików będzie zawierać motywy dla witryny sieci Web (przez utworzenie wirtualnej `App_Themes` katalogu), niestandardowe <xref:System.Web.Hosting.VirtualPathProvider> klasy musi obsługiwać katalogów.  
  
   
  
## Examples  
 Poniższy przykład kodu jest implementacją <xref:System.Web.Hosting.VirtualPathProvider.DirectoryExists%2A> metody w niestandardowym <xref:System.Web.Hosting.VirtualPathProvider> klasy. Pełny kod wymagany, aby uruchomić przykład, można wyświetlić w sekcji przykład <xref:System.Web.Hosting.VirtualPathProvider> temat klasy.  
  
 [!code-csharp[System.Web.Hosting.VirtualPathProvider#22](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.hosting.virtualpathprovider/CS/SamplePathProvider.cs#22)]
 [!code-vb[System.Web.Hosting.VirtualPathProvider#22](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.hosting.virtualpathprovider/VB/SamplePathProvider.vb#22)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FileExists">
      <MemberSignature Language="C#" Value="public virtual bool FileExists (string virtualPath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool FileExists(string virtualPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.VirtualPathProvider.FileExists(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function FileExists (virtualPath As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool FileExists(System::String ^ virtualPath);" />
      <MemberSignature Language="F#" Value="abstract member FileExists : string -&gt; bool&#xA;override this.FileExists : string -&gt; bool" Usage="virtualPathProvider.FileExists virtualPath" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="virtualPath">Ścieżka do pliku wirtualnego.</param>
        <summary>Pobiera wartość wskazującą, czy plik istnieje w wirtualnym systemie plików.</summary>
        <returns>
          <see langword="true" /> Jeśli plik istnieje w wirtualnym systemie plików; w przeciwnym razie <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zastąp <xref:System.Web.Hosting.VirtualPathProvider.FileExists%2A> metodę w celu wskazania systemowi kompilacji, który zasób reprezentowany przez `virtualPath` istnieje w wirtualnym systemie plików udostępniane przez to <xref:System.Web.Hosting.VirtualPathProvider> wystąpienia.  
  
   
  
## Examples  
 Poniższy przykład kodu jest implementacją <xref:System.Web.Hosting.VirtualPathProvider.FileExists%2A> metody w niestandardowym <xref:System.Web.Hosting.VirtualPathProvider> klasy. Pełny kod wymagany, aby uruchomić przykład, można wyświetlić w sekcji przykład <xref:System.Web.Hosting.VirtualPathProvider> temat klasy.  
  
 [!code-csharp[System.Web.Hosting.VirtualPathProvider#21](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.hosting.virtualpathprovider/CS/SamplePathProvider.cs#21)]
 [!code-vb[System.Web.Hosting.VirtualPathProvider#21](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.hosting.virtualpathprovider/VB/SamplePathProvider.vb#21)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCacheDependency">
      <MemberSignature Language="C#" Value="public virtual System.Web.Caching.CacheDependency GetCacheDependency (string virtualPath, System.Collections.IEnumerable virtualPathDependencies, DateTime utcStart);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Web.Caching.CacheDependency GetCacheDependency(string virtualPath, class System.Collections.IEnumerable virtualPathDependencies, valuetype System.DateTime utcStart) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.VirtualPathProvider.GetCacheDependency(System.String,System.Collections.IEnumerable,System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetCacheDependency (virtualPath As String, virtualPathDependencies As IEnumerable, utcStart As DateTime) As CacheDependency" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Web::Caching::CacheDependency ^ GetCacheDependency(System::String ^ virtualPath, System::Collections::IEnumerable ^ virtualPathDependencies, DateTime utcStart);" />
      <MemberSignature Language="F#" Value="abstract member GetCacheDependency : string * System.Collections.IEnumerable * DateTime -&gt; System.Web.Caching.CacheDependency&#xA;override this.GetCacheDependency : string * System.Collections.IEnumerable * DateTime -&gt; System.Web.Caching.CacheDependency" Usage="virtualPathProvider.GetCacheDependency (virtualPath, virtualPathDependencies, utcStart)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Caching.CacheDependency</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
        <Parameter Name="virtualPathDependencies" Type="System.Collections.IEnumerable" />
        <Parameter Name="utcStart" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="virtualPath">Ścieżka do podstawowego zasób wirtualny.</param>
        <param name="virtualPathDependencies">Tablica ścieżek do innych zasobów wymaganych przez podstawowy zasób wirtualny.</param>
        <param name="utcStart">Czas UTC, w którym zasoby wirtualne zostały odczytane.</param>
        <summary>Tworzy zależność pamięci podręcznej, w oparciu o określonej ścieżki wirtualnej.</summary>
        <returns>A <see cref="T:System.Web.Caching.CacheDependency" /> obiekt do określonych zasobów wirtualnego.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Domyślna implementacja klasy <xref:System.Web.Hosting.VirtualPathProvider.GetCacheDependency%2A> metoda zwraca `null`. Z zasobami wirtualnymi w pamięci podręcznej do późniejszego użycia konieczne jest przesłonięcie albo <xref:System.Web.Hosting.VirtualPathProvider.GetCacheDependency%2A> metody lub <xref:System.Web.Hosting.VirtualPathProvider.GetFileHash%2A> metody.  
  
   
  
## Examples  
 Poniższy kod implementuje przykład <xref:System.Web.Hosting.VirtualPathProvider.GetCacheDependency%2A> metodę dla niestandardowego <xref:System.Web.Hosting.VirtualPathProvider> klasy. Pełny kod wymagany, aby uruchomić przykład, można wyświetlić w sekcji przykład <xref:System.Web.Hosting.VirtualPathProvider> temat klasy.  
  
 [!code-csharp[System.Web.Hosting.VirtualPathProvider#28](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.hosting.virtualpathprovider/CS/SamplePathProvider.cs#28)]
 [!code-vb[System.Web.Hosting.VirtualPathProvider#28](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.hosting.virtualpathprovider/VB/SamplePathProvider.vb#28)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCacheKey">
      <MemberSignature Language="C#" Value="public virtual string GetCacheKey (string virtualPath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetCacheKey(string virtualPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.VirtualPathProvider.GetCacheKey(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetCacheKey (virtualPath As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetCacheKey(System::String ^ virtualPath);" />
      <MemberSignature Language="F#" Value="abstract member GetCacheKey : string -&gt; string&#xA;override this.GetCacheKey : string -&gt; string" Usage="virtualPathProvider.GetCacheKey virtualPath" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="virtualPath">Ścieżka do wirtualnego zasobu.</param>
        <summary>Zwraca klucz pamięci podręcznej do użycia dla określonej ścieżki wirtualnej.</summary>
        <returns>Klucz pamięci podręcznej dla określonego zasobu wirtualnej.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Web.Hosting.VirtualPathProvider.GetCacheKey%2A> metody w celu zapewnienia klucz niestandardowy pamięci podręcznej, zasobami wirtualnymi. Jeśli nie zastąpisz <xref:System.Web.Hosting.VirtualPathProvider.GetCacheKey%2A> metoda, ścieżka wirtualna jest używana dla klucza pamięci podręcznej.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Tylko zastąpić to ustawienie domyślne <see cref="M:System.Web.Hosting.VirtualPathProvider.GetCacheKey(System.String)" /> metody, jeśli Tworzenie klucza pamięci podręcznej oparte na ścieżkę wirtualną nie będzie działać dla aplikacji.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="GetDirectory">
      <MemberSignature Language="C#" Value="public virtual System.Web.Hosting.VirtualDirectory GetDirectory (string virtualDir);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Web.Hosting.VirtualDirectory GetDirectory(string virtualDir) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.VirtualPathProvider.GetDirectory(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDirectory (virtualDir As String) As VirtualDirectory" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Web::Hosting::VirtualDirectory ^ GetDirectory(System::String ^ virtualDir);" />
      <MemberSignature Language="F#" Value="abstract member GetDirectory : string -&gt; System.Web.Hosting.VirtualDirectory&#xA;override this.GetDirectory : string -&gt; System.Web.Hosting.VirtualDirectory" Usage="virtualPathProvider.GetDirectory virtualDir" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Hosting.VirtualDirectory</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualDir" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="virtualDir">Ścieżka do katalogu wirtualnego.</param>
        <summary>Pobiera katalog wirtualny z wirtualnego systemu plików.</summary>
        <returns>Element podrzędny <see cref="T:System.Web.Hosting.VirtualDirectory" /> klasę, która reprezentuje katalog w wirtualnym systemie plików.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Hosting.VirtualPathProvider.GetDirectory%2A> Metoda zwraca element podrzędny <xref:System.Web.Hosting.VirtualDirectory> klasę, która zawiera plików i katalogów znajdujących się w katalogu wskazanym na `virtualDir` parametru.  
  
 Jeśli niestandardowe <xref:System.Web.Hosting.VirtualPathProvider> klasa nie obsługuje katalogów <xref:System.Web.Hosting.VirtualPathProvider.GetDirectory%2A> metoda powinna zwrócić `null`.  
  
> [!NOTE]
>  Jeśli Twoje wirtualny system plików będzie zawierać motywy dla witryny sieci Web (przez utworzenie wirtualnej `App_Themes` katalogu), niestandardowe <xref:System.Web.Hosting.VirtualPathProvider> klasy musi obsługiwać katalogów.  
  
   
  
## Examples  
 Poniższy przykład kodu jest implementacją <xref:System.Web.Hosting.VirtualPathProvider.GetDirectory%2A> metody w niestandardowym <xref:System.Web.Hosting.VirtualPathProvider> klasy. Pełny kod wymagany, aby uruchomić przykład, można wyświetlić w sekcji przykład <xref:System.Web.Hosting.VirtualPathProvider> temat klasy.  
  
 [!code-csharp[System.Web.Hosting.VirtualPathProvider#24](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.hosting.virtualpathprovider/CS/SamplePathProvider.cs#24)]
 [!code-vb[System.Web.Hosting.VirtualPathProvider#24](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.hosting.virtualpathprovider/VB/SamplePathProvider.vb#24)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFile">
      <MemberSignature Language="C#" Value="public virtual System.Web.Hosting.VirtualFile GetFile (string virtualPath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Web.Hosting.VirtualFile GetFile(string virtualPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.VirtualPathProvider.GetFile(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetFile (virtualPath As String) As VirtualFile" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Web::Hosting::VirtualFile ^ GetFile(System::String ^ virtualPath);" />
      <MemberSignature Language="F#" Value="abstract member GetFile : string -&gt; System.Web.Hosting.VirtualFile&#xA;override this.GetFile : string -&gt; System.Web.Hosting.VirtualFile" Usage="virtualPathProvider.GetFile virtualPath" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Hosting.VirtualFile</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="virtualPath">Ścieżka do pliku wirtualnego.</param>
        <summary>Pobiera plik wirtualny z wirtualnego systemu plików.</summary>
        <returns>Element podrzędny <see cref="T:System.Web.Hosting.VirtualFile" /> klasę, która reprezentuje plik w wirtualnym systemie plików.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Hosting.VirtualPathProvider.GetFile%2A> Metoda zwraca element podrzędny <xref:System.Web.Hosting.VirtualFile> klasa, która reprezentuje plik określony przez `virtualPath` parametru.  
  
   
  
## Examples  
 Poniższy przykład kodu jest implementacją <xref:System.Web.Hosting.VirtualPathProvider.GetFile%2A> metody w niestandardowym <xref:System.Web.Hosting.VirtualPathProvider> klasy. Pełny kod wymagany, aby uruchomić przykład, można wyświetlić w sekcji przykład <xref:System.Web.Hosting.VirtualPathProvider> temat klasy.  
  
 [!code-csharp[System.Web.Hosting.VirtualPathProvider#23](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.hosting.virtualpathprovider/CS/SamplePathProvider.cs#23)]
 [!code-vb[System.Web.Hosting.VirtualPathProvider#23](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.hosting.virtualpathprovider/VB/SamplePathProvider.vb#23)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFileHash">
      <MemberSignature Language="C#" Value="public virtual string GetFileHash (string virtualPath, System.Collections.IEnumerable virtualPathDependencies);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetFileHash(string virtualPath, class System.Collections.IEnumerable virtualPathDependencies) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.VirtualPathProvider.GetFileHash(System.String,System.Collections.IEnumerable)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetFileHash (virtualPath As String, virtualPathDependencies As IEnumerable) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetFileHash(System::String ^ virtualPath, System::Collections::IEnumerable ^ virtualPathDependencies);" />
      <MemberSignature Language="F#" Value="abstract member GetFileHash : string * System.Collections.IEnumerable -&gt; string&#xA;override this.GetFileHash : string * System.Collections.IEnumerable -&gt; string" Usage="virtualPathProvider.GetFileHash (virtualPath, virtualPathDependencies)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
        <Parameter Name="virtualPathDependencies" Type="System.Collections.IEnumerable" />
      </Parameters>
      <Docs>
        <param name="virtualPath">Ścieżka do podstawowego zasób wirtualny.</param>
        <param name="virtualPathDependencies">Tablica ścieżek do innych wirtualnych zasobów wymaganych przez podstawowy zasób wirtualny.</param>
        <summary>Zwraca skrót określonej ścieżki wirtualnej.</summary>
        <returns>Skrót określonej ścieżki wirtualnej.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Web.Hosting.VirtualPathProvider.GetFileHash%2A> metody w celu zapewnienia skrót zależności zasobu wirtualny system plików.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="protected virtual void Initialize ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Initialize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.VirtualPathProvider.Initialize" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Initialize ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Initialize();" />
      <MemberSignature Language="F#" Value="abstract member Initialize : unit -&gt; unit&#xA;override this.Initialize : unit -&gt; unit" Usage="virtualPathProvider.Initialize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Inicjuje <see cref="T:System.Web.Hosting.VirtualPathProvider" /> wystąpienia.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Hosting.VirtualPathProvider.Initialize%2A> Metoda jest wywoływana po zarejestrowaniu dostawcy systemu kompilacji platformy ASP.NET. <xref:System.Web.Hosting.VirtualPathProvider.Initialize%2A> Metoda służy do zapewnienia inicjowanie wymagane po <xref:System.Web.Hosting.VirtualPathProvider> wystąpienia jest umieszczana w środowisku zajmuje aplikacji.  
  
   
  
## Examples  
 Poniższy przykład kodu jest implementacją <xref:System.Web.Hosting.VirtualPathProvider.Initialize%2A> metodę, która ustawia ścieżkę do pliku danych z aplikacji <xref:System.Web.Hosting.HostingEnvironment> wystąpienia. Pełny kod wymagany, aby uruchomić przykład, można wyświetlić w sekcji przykład <xref:System.Web.Hosting.VirtualPathProvider> temat klasy.  
  
 [!code-csharp[System.Web.Hosting.VirtualPathProvider#26](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.hosting.virtualpathprovider/CS/SamplePathProvider.cs#26)]
 [!code-vb[System.Web.Hosting.VirtualPathProvider#26](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.hosting.virtualpathprovider/VB/SamplePathProvider.vb#26)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InitializeLifetimeService">
      <MemberSignature Language="C#" Value="public override object InitializeLifetimeService ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object InitializeLifetimeService() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.VirtualPathProvider.InitializeLifetimeService" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function InitializeLifetimeService () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ InitializeLifetimeService();" />
      <MemberSignature Language="F#" Value="override this.InitializeLifetimeService : unit -&gt; obj" Usage="virtualPathProvider.InitializeLifetimeService " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zapewnia <see cref="T:System.Web.Hosting.VirtualPathProvider" /> obiektu przez cały okres istnienia, uniemożliwiając tworzonych przez dzierżawy.</summary>
        <returns>Zawsze <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda zastępuje <xref:System.MarshalByRefObject.InitializeLifetimeService%2A> metody w klasie bazowej. Zawsze zwraca `null` i tym samym uniemożliwia dzierżawy z tworzony, która będzie ograniczona <xref:System.Web.Hosting.VirtualPathProvider> istnienia obiektu.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OpenFile">
      <MemberSignature Language="C#" Value="public static System.IO.Stream OpenFile (string virtualPath);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.Stream OpenFile(string virtualPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.VirtualPathProvider.OpenFile(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function OpenFile (virtualPath As String) As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::Stream ^ OpenFile(System::String ^ virtualPath);" />
      <MemberSignature Language="F#" Value="static member OpenFile : string -&gt; System.IO.Stream" Usage="System.Web.Hosting.VirtualPathProvider.OpenFile virtualPath" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="virtualPath">Ścieżka do pliku wirtualnego.</param>
        <summary>Zwraca strumień od pliku wirtualnego.</summary>
        <returns>Tylko do odczytu <see cref="T:System.IO.Stream" /> obiektu dla określonego pliku wirtualnych lub zasobów.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Hosting.VirtualPathProvider.OpenFile%2A> Metody jest to wygodna metoda, która umożliwia uzyskanie strumienia pliku wirtualnego bez tworzenia <xref:System.Web.Hosting.VirtualPathProvider> wystąpienia.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Previous">
      <MemberSignature Language="C#" Value="protected internal System.Web.Hosting.VirtualPathProvider Previous { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.Hosting.VirtualPathProvider Previous" />
      <MemberSignature Language="DocId" Value="P:System.Web.Hosting.VirtualPathProvider.Previous" />
      <MemberSignature Language="VB.NET" Value="Protected Friend ReadOnly Property Previous As VirtualPathProvider" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; property System::Web::Hosting::VirtualPathProvider ^ Previous { System::Web::Hosting::VirtualPathProvider ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Previous : System.Web.Hosting.VirtualPathProvider" Usage="System.Web.Hosting.VirtualPathProvider.Previous" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.Hosting.VirtualPathProvider</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera odwołanie do wcześniej zarejestrowanego <see cref="T:System.Web.Hosting.VirtualPathProvider" /> obiektu w systemie kompilacji.</summary>
        <value>Następne <see cref="T:System.Web.Hosting.VirtualPathProvider" /> obiektu w systemie kompilacji.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Gdy <xref:System.Web.Hosting.VirtualPathProvider> obiekt jest zarejestrowany w systemie kompilacji platformy ASP.NET, jest ona dodawana do łańcucha dostawców. Użyj <xref:System.Web.Hosting.VirtualPathProvider.Previous%2A> właściwości przetwarzania ręcznie wyłączyć do poprzedniego <xref:System.Web.Hosting.VirtualPathProvider> obiektu w łańcuchu, jeśli żądana ścieżka nie zostanie podany to <xref:System.Web.Hosting.VirtualPathProvider> wystąpienia.  
  
 Łańcuch dostawców ścieżki zawsze kończy się przy użyciu domyślnego dostawcę ASP.NET, które udostępniają pliki z systemu plików.  
  
   
  
## Examples  
 Poniższy przykład kodu jest implementacją <xref:System.Web.Hosting.VirtualPathProvider.GetFile%2A> metody. Jeśli żądany katalog wirtualny nie zaczyna się od ciągu `"/vrdir"`, metoda używa <xref:System.Web.Hosting.VirtualPathProvider.Previous%2A> właściwości do przekazania żądania do następnej <xref:System.Web.Hosting.VirtualPathProvider> obiektu w łańcuchu. Pełny kod wymagany, aby uruchomić przykład, można wyświetlić w sekcji przykład <xref:System.Web.Hosting.VirtualPathProvider> temat klasy.  
  
 [!code-csharp[System.Web.Hosting.VirtualPathProvider#23](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.hosting.virtualpathprovider/CS/SamplePathProvider.cs#23)]
 [!code-vb[System.Web.Hosting.VirtualPathProvider#23](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.hosting.virtualpathprovider/VB/SamplePathProvider.vb#23)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>