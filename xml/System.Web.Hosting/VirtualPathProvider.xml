<Type Name="VirtualPathProvider" FullName="System.Web.Hosting.VirtualPathProvider">
  <Metadata><Meta Name="ms.openlocfilehash" Value="da63e243320d1d952dd56cd32ed2c99a746c0bdd" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69139331" /></Metadata><TypeSignature Language="C#" Value="public abstract class VirtualPathProvider : MarshalByRefObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit VirtualPathProvider extends System.MarshalByRefObject" />
  <TypeSignature Language="DocId" Value="T:System.Web.Hosting.VirtualPathProvider" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class VirtualPathProvider&#xA;Inherits MarshalByRefObject" />
  <TypeSignature Language="C++ CLI" Value="public ref class VirtualPathProvider abstract : MarshalByRefObject" />
  <TypeSignature Language="F#" Value="type VirtualPathProvider = class&#xA;    inherit MarshalByRefObject" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.MarshalByRefObject</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Zawiera zestaw metod umożliwiających aplikacji sieci Web pobieranie zasobów z wirtualnego systemu plików.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Hosting.VirtualPathProvider> Klasa zawiera zestaw metod implementowania wirtualnego systemu plików dla aplikacji sieci Web. W wirtualnym systemie plików pliki i katalogi są zarządzane przez magazyn danych inny niż system plików dostarczony przez system operacyjny serwera. Można na przykład użyć wirtualnego systemu plików do przechowywania zawartości w bazie danych SQL Server.  
  
 Można przechowywać każdy plik, który jest przetwarzany na żądanie w wirtualnym systemie plików. Możliwości obejmują:  
  
-   Strony ASP.NET, strony wzorcowe, formanty użytkownika i inne obiekty.  
  
-   Standardowe strony sieci Web z rozszerzeniami, takimi jak. htm i. jpg.  
  
-   Każde rozszerzenie niestandardowe zamapowane do <xref:System.Web.Compilation.BuildProvider> wystąpienia.  
  
-   Wszystkie nazwane motywy w `App_Theme` folderze.  
  
 Nie można przechowywać folderów lub plików aplikacji ASP.NET, które generują zestawy na poziomie aplikacji w wirtualnym systemie plików. Możliwości obejmują:  
  
-   Plik Global. asax.  
  
-   Pliki Web. config.  
  
-   Pliki danych mapy witryny używane przez <xref:System.Web.XmlSiteMapProvider>.  
  
-   Katalogi zawierające zestawy aplikacji lub generujące zestawy aplikacji `Bin`:, `App_Code`, `App_GlobalResources`, wszystkie `App_LocalResources`.  
  
-   Folder dane aplikacji `App_Data`.  
  
> [!NOTE]
>  Jeśli witryna sieci Web jest wstępnie skompilowana do wdrożenia, zawartość dostarczona przez <xref:System.Web.Hosting.VirtualPathProvider> wystąpienie nie jest skompilowana i żadne wystąpienia <xref:System.Web.Hosting.VirtualPathProvider> nie są używane przez wstępnie skompilowaną lokację.  
  
## <a name="registering-a-virtualpathprovider"></a>Rejestrowanie elementu VirtualPathProvider  
 Wystąpienie niestandardowe <xref:System.Web.Hosting.VirtualPathProvider> powinno być zarejestrowane w systemie kompilacji ASP.NET przy użyciu metody, <xref:System.Web.Hosting.HostingEnvironment.RegisterVirtualPathProvider%2A?displayProperty=nameWithType> zanim dowolna strona analizy lub kompilacja jest wykonywana przez aplikację sieci Web.  
  
 `App_Code` `Global.asax` `Application_Start` Zwykle wystąpienie jest rejestrowane `AppInitialize` w metodzie zdefiniowanej w katalogu lub w trakcie zdarzenia w pliku. <xref:System.Web.Hosting.VirtualPathProvider> Przykład rejestracji <xref:System.Web.Hosting.VirtualPathProvider> wystąpienia `AppInitialize` w metodzie znajduje się w sekcji przykład.  
  
 Można zarejestrować <xref:System.Web.Hosting.VirtualPathProvider> wystąpienie w trakcie innych zdarzeń, ale strony skompilowane i zbuforowane <xref:System.Web.Hosting.VirtualPathProvider> przed wystąpieniem zostanie zarejestrowane nie będą unieważnione, nawet jeśli nowe <xref:System.Web.Hosting.VirtualPathProvider> wystąpienie będzie teraz zawierać Źródło dla poprzednio skompilowana strona.  
  
   
  
## Examples  
 Poniższy przykład kodu jest <xref:System.Web.Hosting.VirtualPathProvider> implementacją klasy, która tworzy wirtualny system plików przy użyciu informacji przechowywanych <xref:System.Data.DataSet> w obiekcie. Przykładowy kod współdziała z przykładami kodu dla <xref:System.Web.Hosting.VirtualFile> klas i <xref:System.Web.Hosting.VirtualDirectory> , aby zapewnić zasoby wirtualne z magazynu danych <xref:System.Data.DataSet> , który jest ładowany do obiektu.  
  
 Ten przykład <xref:System.Web.Hosting.VirtualPathProvider> ma cztery części: implementację klasy, plik danych XML używany do <xref:System.Data.DataSet> wypełniania obiektu, `AppStart` obiekt, <xref:System.Web.Hosting.VirtualPathProvider> który zawiera `AppInitialize` metodę użytą do zarejestrowania klasy z kompilacją System i strona ASP.NET, które udostępniają linki do plików wirtualnych.  
  
 Aby użyć tego przykładowego kodu w aplikacji, wykonaj następujące kroki.  
  
1.  Utwórz przykładową aplikację na serwerze sieci Web.  
  
2.  Skopiuj kod źródłowy obiektu niestandardowego <xref:System.Web.Hosting.VirtualPathProvider> (patrz poniżej) do pliku w `App_Code` katalogu aplikacji.  
  
3.  Skopiuj kod źródłowy obiektu niestandardowego <xref:System.Web.Hosting.VirtualDirectory> (patrz przykład sekcji <xref:System.Web.Hosting.VirtualDirectory> w temacie Omówienie klasy) do `App_Code` pliku w katalogu aplikacji.  
  
4.  Skopiuj kod źródłowy obiektu niestandardowego <xref:System.Web.Hosting.VirtualFile> (patrz przykład sekcji <xref:System.Web.Hosting.VirtualFile> w temacie Omówienie klasy) do `App_Code` pliku w katalogu aplikacji.  
  
5.  Skopiuj kod `AppStart` źródłowy obiektu (patrz poniżej) do pliku w `App_Code` katalogu aplikacji.  
  
6.  Skopiuj dane XML (patrz poniżej) do pliku o nazwie `XMLData.xml` do pliku w `App_Data` katalogu aplikacji.  
  
7.  `default.aspx` Skopiuj plik (patrz poniżej) do katalogu głównego przykładowej aplikacji. Użyj przeglądarki sieci Web, aby otworzyć `default.aspx` plik, a następnie kliknij linki na stronie, aby zobaczyć zawartość plików wirtualnych.  
  
 Pierwszy przykład jest klasą niestandardową <xref:System.Web.Hosting.VirtualPathProvider> . Metody <xref:System.Web.Hosting.VirtualPathProvider.DirectoryExists%2A> i<xref:System.Web.Hosting.VirtualPathProvider.FileExists%2A> są zastępowane w celu wskazania, czy żądany katalog jest obecny w wirtualnym systemie plików. <xref:System.Web.Hosting.VirtualDirectory> <xref:System.Web.Hosting.VirtualFile> Metody i są<xref:System.Web.Hosting.VirtualPathProvider.GetFile%2A> nadmiarowe, aby zwracały niestandardowe i wystąpienia zawierające informacje z wirtualnego systemu plików. <xref:System.Web.Hosting.VirtualPathProvider.GetDirectory%2A>  
  
 Klasa zawiera `GetVirtualData` również metodę używaną <xref:System.Web.Hosting.VirtualDirectory> przez klasy <xref:System.Data.DataSet> i <xref:System.Web.Hosting.VirtualFile> , aby uzyskać dostęp do obiektu zawierającego dane wirtualnego systemu plików. W implementacji produkcyjnej ta metoda jest zwykle implementowana w obiekcie biznesowym odpowiedzialnym za współpracę z magazynem danych.  
  
 [!code-csharp[System.Web.Hosting.VirtualPathProvider#20](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.hosting.virtualpathprovider/CS/SamplePathProvider.cs#20)]
 [!code-vb[System.Web.Hosting.VirtualPathProvider#20](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.hosting.virtualpathprovider/VB/SamplePathProvider.vb#20)]  
  
 Drugim przykładem jest plik danych XML używany do wypełniania <xref:System.Data.DataSet> obiektu zwróconego przez obiekt <xref:System.Web.Hosting.VirtualPathProvider> niestandardowy. Dane XML są używane do zademonstrowania przy użyciu <xref:System.Web.Hosting.VirtualPathProvider>obiektów <xref:System.Web.Hosting.VirtualDirectory>, i <xref:System.Web.Hosting.VirtualFile> do pobierania danych z danych zewnętrznych i nie są przeznaczone do reprezentowania magazynu danych o jakości produkcyjnej.  
  
```  
<?xml version="1.0" encoding="utf-8" ?>  
  <resource type="dir"   
    path="/vrDir"   
    parentPath=""   
    content="">  
    <resource type="file"   
      path="/vrDir/Level1FileA.vrf"  
      parentPath="/vrDir"   
      content="This is the content of file Level1FileA.">  
    </resource>  
    <resource type="file"   
      path="/vrDir/Level1FileB.vrf"  
      parentPath="/vrDir"   
      content="This is the content of file Level1FileB.">  
    </resource>  
    <resource type="dir"   
      path="/vrDir/Level2DirA"   
      parentPath="/vrDir"   
      content="">  
    <resource type="file"   
      path="/vrDir/Level2DirA/Level2FileA.vrf"   
      parentPath="/vrDir/Level2DirA"   
      content="This is the content of file Level2FileA.">  
    </resource>  
    <resource type="file"   
      path="/vrDir/Level2DirA/Level2FileB.vrf"  
      parentPath="/vrDir/Level2DirA"   
      content="This is the content of file Level2FileB.">  
    </resource>  
  </resource>  
  <resource type="dir"   
    path="/vrDir/Level2DirB"   
    parentPath="/vrDir"   
    content="">  
    <resource type="file"   
      path="/vrDir/Level2DirB/Level2FileA.vrf"   
      parentPath="/vrDir/Level2DirB"   
      content="This is the content of file Level2FileA.">  
    </resource>  
    <resource type="file"   
      path="/vrDir/Level2DirB/Level2FileB.vrf"  
      parentPath="/vrDir/Level2DirB"   
      content="This is the content of file Level2FileB.">  
    </resource>  
  </resource>  
</resource>  
```  
  
 Trzeci przykład zawiera `AppStart` obiekt, który `AppInitialize` zawiera metodę. Ta metoda jest wywoływana podczas inicjowania aplikacji ASP.NET, aby wykonać wszelkie wymagane inicjalizacje niestandardowe. W tym przypadku rejestruje obiekt niestandardowy <xref:System.Web.Hosting.VirtualPathProvider> w systemie kompilacji ASP.NET.  
  
 [!code-csharp[System.Web.Hosting.VirtualPathProvider#10](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.hosting.virtualpathprovider/CS/AppStart.cs#10)]
 [!code-vb[System.Web.Hosting.VirtualPathProvider#10](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.hosting.virtualpathprovider/VB/AppStart.vb#10)]  
  
 Ostatnim przykładem jest strona ASP.NET, która zawiera linki do plików wirtualnych zawartych w wirtualnym systemie plików.  
  
 [!code-aspx-csharp[System.Web.Hosting.VirtualPathProvider#1](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.hosting.virtualpathprovider/CS/Default.aspx#1)]
 [!code-aspx-vb[System.Web.Hosting.VirtualPathProvider#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.hosting.virtualpathprovider/VB/Default.aspx#1)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides"><para>W przypadku dziedziczenia <see cref="T:System.Web.Hosting.VirtualPathProvider" />z należy zastąpić następujące elementy członkowskie: 
-   <see cref="M:System.Web.Hosting.VirtualPathProvider.FileExists(System.String)" />  
  
-   <see cref="M:System.Web.Hosting.VirtualPathProvider.GetFile(System.String)" />  
  
Jeśli Klasa niestandardowa <see cref="T:System.Web.Hosting.VirtualPathProvider" /> obsługuje katalogi w wirtualnym systemie plików, należy zastąpić następujące elementy członkowskie.  
  
-   <see cref="M:System.Web.Hosting.VirtualPathProvider.DirectoryExists(System.String)" />  
  
-   <see cref="M:System.Web.Hosting.VirtualPathProvider.GetDirectory(System.String)" /><block subset="none" type="note"><para>  
      Jeśli wirtualny system plików będzie zawierać motywy dla witryny sieci Web (przez utworzenie katalogu wirtualnego <c>App_Themes</c> ), Klasa niestandardowa <see cref="T:System.Web.Hosting.VirtualPathProvider" /> musi obsługiwać katalogi.
    </para></block>  
  
    Klasa niestandardowa <see cref="T:System.Web.Hosting.VirtualPathProvider" /> współpracuje z klasami pochodnymi <see cref="T:System.Web.Hosting.VirtualDirectory" /> <see cref="T:System.Web.Hosting.VirtualFile" /> klas i. Należy zaimplementować klasy pochodne z tych typów, aby dostarczyć informacje o plikach i katalogach z wirtualnego systemu plików. Przykład implementacji niestandardowej <see cref="T:System.Web.Hosting.VirtualFile" /> można znaleźć w sekcji <see cref="T:System.Web.Hosting.VirtualFile" /> przykład tematu Omówienie klasy. Przykład implementacji niestandardowej <see cref="T:System.Web.Hosting.VirtualDirectory" /> można znaleźć w sekcji <see cref="T:System.Web.Hosting.VirtualDirectory" /> przykład tematu Omówienie klasy.</para></block>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected VirtualPathProvider ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.VirtualPathProvider.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; VirtualPathProvider();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Inicjuje klasę do użycia przez wystąpienie klasy dziedziczonej. Ten konstruktor może być wywoływany tylko przez dziedziczoną klasę.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Podczas zastępowania <xref:System.Web.Hosting.VirtualPathProvider.%23ctor%2A> konstruktora Odłóż wszelkie inicjalizacje, które muszą wystąpić <xref:System.Web.Hosting.VirtualPathProvider> po zarejestrowaniu <xref:System.Web.Hosting.VirtualPathProvider.Initialize%2A> obiektu w metodzie.  
  
   
  
## Examples  
 Poniższy przykład kodu jest implementacją <xref:System.Web.Hosting.VirtualPathProvider.%23ctor%2A> konstruktora, który inicjuje klasę niestandardową. <xref:System.Web.Hosting.VirtualPathProvider> Aby uzyskać pełny kod wymagany do uruchomienia tego przykładu, zobacz sekcję <xref:System.Web.Hosting.VirtualPathProvider> przykład w temacie Omówienie klasy.  
  
 [!code-csharp[System.Web.Hosting.VirtualPathProvider#25](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.hosting.virtualpathprovider/CS/SamplePathProvider.cs#25)]
 [!code-vb[System.Web.Hosting.VirtualPathProvider#25](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.hosting.virtualpathprovider/VB/SamplePathProvider.vb#25)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CombineVirtualPaths">
      <MemberSignature Language="C#" Value="public virtual string CombineVirtualPaths (string basePath, string relativePath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string CombineVirtualPaths(string basePath, string relativePath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.VirtualPathProvider.CombineVirtualPaths(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CombineVirtualPaths (basePath As String, relativePath As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ CombineVirtualPaths(System::String ^ basePath, System::String ^ relativePath);" />
      <MemberSignature Language="F#" Value="abstract member CombineVirtualPaths : string * string -&gt; string&#xA;override this.CombineVirtualPaths : string * string -&gt; string" Usage="virtualPathProvider.CombineVirtualPaths (basePath, relativePath)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="basePath" Type="System.String" />
        <Parameter Name="relativePath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="basePath">Ścieżka podstawowa aplikacji.</param>
        <param name="relativePath">Ścieżka do zasobu wirtualnego względem ścieżki podstawowej.</param>
        <summary>Łączy ścieżkę podstawową ze ścieżką względną, aby zwrócić pełną ścieżkę do zasobu wirtualnego.</summary>
        <returns>Pełna ścieżka do zasobu wirtualnego.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj metody <xref:System.Web.Hosting.VirtualPathProvider.CombineVirtualPaths%2A> , aby sprawdzić zawartość ścieżki względnej do zasobu wirtualnego i wykonać wszelkie wymagane modyfikacje.  
  
 Domyślna implementacja łączy `basePath` parametry i `relativePath` zgodnie ze standardowym przetwarzaniem ścieżki ASP.NET.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Jeśli zastąpisz domyślną implementację <see cref="M:System.Web.Hosting.VirtualPathProvider.CombineVirtualPaths(System.String,System.String)" /> metody, wymagane jest przekonwertowanie dowolnej specjalnej składni <paramref name="relativePath" /> z parametrem do prawidłowej ścieżki wirtualnej. Użytkownik jest odpowiedzialny za sprawdzanie składni, sprawdzanie poprawności ścieżki i obsługę nieprawidłowo wprowadzonych danych wejściowych, a także przypadki brzegowe dla poprawnie sformułowanych danych wejściowych.  
  
W większości przypadków nie trzeba przesłonić metody domyślnej <see cref="M:System.Web.Hosting.VirtualPathProvider.CombineVirtualPaths(System.String,System.String)" /> . Jeśli jednak konieczna jest modyfikacja ścieżki, zalecamy ograniczenie <see cref="M:System.Web.Hosting.VirtualPathProvider.CombineVirtualPaths(System.String,System.String)" /> implementacji do modyfikacji tokenów specyficznych dla dostawcy ścieżki wirtualnej <paramref name="relativeUrl" /> w parametrze, a następnie wywołanie podstawowej implementacji w celu przeprowadzenia normalnej ASP.NET przetwarzanie ścieżki</para></block>
      </Docs>
    </Member>
    <Member MemberName="DirectoryExists">
      <MemberSignature Language="C#" Value="public virtual bool DirectoryExists (string virtualDir);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool DirectoryExists(string virtualDir) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.VirtualPathProvider.DirectoryExists(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DirectoryExists (virtualDir As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool DirectoryExists(System::String ^ virtualDir);" />
      <MemberSignature Language="F#" Value="abstract member DirectoryExists : string -&gt; bool&#xA;override this.DirectoryExists : string -&gt; bool" Usage="virtualPathProvider.DirectoryExists virtualDir" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualDir" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="virtualDir">Ścieżka do katalogu wirtualnego.</param>
        <summary>Pobiera wartość wskazującą, czy katalog istnieje w wirtualnym systemie plików.</summary>
        <returns><see langword="true" />Jeśli katalog istnieje w wirtualnym systemie plików; w przeciwnym razie. <see langword="false" /></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zastąp `virtualDir` <xref:System.Web.Hosting.VirtualPathProvider> metodę, aby wskazać system kompilacji, który zasób reprezentowany przez istnieje w wirtualnym systemie plików udostępnionym przez to wystąpienie. <xref:System.Web.Hosting.VirtualPathProvider.DirectoryExists%2A>  
  
 Jeśli Klasa niestandardowa <xref:System.Web.Hosting.VirtualPathProvider> nie obsługuje katalogów <xref:System.Web.Hosting.VirtualPathProvider.DirectoryExists%2A> , metoda powinna zwracać `false`.  
  
> [!NOTE]
>  Jeśli wirtualny system plików będzie zawierać motywy dla witryny sieci Web (przez utworzenie katalogu wirtualnego `App_Themes` ), Klasa niestandardowa <xref:System.Web.Hosting.VirtualPathProvider> musi obsługiwać katalogi.  
  
   
  
## Examples  
 Poniższy przykład kodu jest implementacją <xref:System.Web.Hosting.VirtualPathProvider.DirectoryExists%2A> metody w klasie niestandardowej. <xref:System.Web.Hosting.VirtualPathProvider> Aby uzyskać pełny kod wymagany do uruchomienia tego przykładu, zobacz sekcję <xref:System.Web.Hosting.VirtualPathProvider> przykład w temacie Omówienie klasy.  
  
 [!code-csharp[System.Web.Hosting.VirtualPathProvider#22](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.hosting.virtualpathprovider/CS/SamplePathProvider.cs#22)]
 [!code-vb[System.Web.Hosting.VirtualPathProvider#22](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.hosting.virtualpathprovider/VB/SamplePathProvider.vb#22)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FileExists">
      <MemberSignature Language="C#" Value="public virtual bool FileExists (string virtualPath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool FileExists(string virtualPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.VirtualPathProvider.FileExists(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function FileExists (virtualPath As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool FileExists(System::String ^ virtualPath);" />
      <MemberSignature Language="F#" Value="abstract member FileExists : string -&gt; bool&#xA;override this.FileExists : string -&gt; bool" Usage="virtualPathProvider.FileExists virtualPath" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="virtualPath">Ścieżka do pliku wirtualnego.</param>
        <summary>Pobiera wartość wskazującą, czy plik istnieje w wirtualnym systemie plików.</summary>
        <returns><see langword="true" />Jeśli plik istnieje w wirtualnym systemie plików; w przeciwnym razie. <see langword="false" /></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zastąp `virtualPath` <xref:System.Web.Hosting.VirtualPathProvider> metodę, aby wskazać system kompilacji, który zasób reprezentowany przez istnieje w wirtualnym systemie plików udostępnionym przez to wystąpienie. <xref:System.Web.Hosting.VirtualPathProvider.FileExists%2A>  
  
   
  
## Examples  
 Poniższy przykład kodu jest implementacją <xref:System.Web.Hosting.VirtualPathProvider.FileExists%2A> metody w klasie niestandardowej. <xref:System.Web.Hosting.VirtualPathProvider> Aby uzyskać pełny kod wymagany do uruchomienia tego przykładu, zobacz sekcję <xref:System.Web.Hosting.VirtualPathProvider> przykład w temacie Omówienie klasy.  
  
 [!code-csharp[System.Web.Hosting.VirtualPathProvider#21](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.hosting.virtualpathprovider/CS/SamplePathProvider.cs#21)]
 [!code-vb[System.Web.Hosting.VirtualPathProvider#21](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.hosting.virtualpathprovider/VB/SamplePathProvider.vb#21)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCacheDependency">
      <MemberSignature Language="C#" Value="public virtual System.Web.Caching.CacheDependency GetCacheDependency (string virtualPath, System.Collections.IEnumerable virtualPathDependencies, DateTime utcStart);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Web.Caching.CacheDependency GetCacheDependency(string virtualPath, class System.Collections.IEnumerable virtualPathDependencies, valuetype System.DateTime utcStart) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.VirtualPathProvider.GetCacheDependency(System.String,System.Collections.IEnumerable,System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetCacheDependency (virtualPath As String, virtualPathDependencies As IEnumerable, utcStart As DateTime) As CacheDependency" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Web::Caching::CacheDependency ^ GetCacheDependency(System::String ^ virtualPath, System::Collections::IEnumerable ^ virtualPathDependencies, DateTime utcStart);" />
      <MemberSignature Language="F#" Value="abstract member GetCacheDependency : string * System.Collections.IEnumerable * DateTime -&gt; System.Web.Caching.CacheDependency&#xA;override this.GetCacheDependency : string * System.Collections.IEnumerable * DateTime -&gt; System.Web.Caching.CacheDependency" Usage="virtualPathProvider.GetCacheDependency (virtualPath, virtualPathDependencies, utcStart)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Caching.CacheDependency</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
        <Parameter Name="virtualPathDependencies" Type="System.Collections.IEnumerable" />
        <Parameter Name="utcStart" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="virtualPath">Ścieżka do podstawowego zasobu wirtualnego.</param>
        <param name="virtualPathDependencies">Tablica ścieżek do innych zasobów wymaganych przez podstawowy zasób wirtualny.</param>
        <param name="utcStart">Czas UTC odczytania zasobów wirtualnych.</param>
        <summary>Tworzy zależność pamięci podręcznej na podstawie określonych ścieżek wirtualnych.</summary>
        <returns><see cref="T:System.Web.Caching.CacheDependency" /> Obiekt dla określonych zasobów wirtualnych.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Domyślna implementacja <xref:System.Web.Hosting.VirtualPathProvider.GetCacheDependency%2A> metody zwraca `null`. Aby buforować zasoby wirtualne do późniejszego użycia, należy zastąpić <xref:System.Web.Hosting.VirtualPathProvider.GetCacheDependency%2A> metodę <xref:System.Web.Hosting.VirtualPathProvider.GetFileHash%2A> lub metodę.  
  
   
  
## Examples  
 Poniższy przykład kodu implementuje <xref:System.Web.Hosting.VirtualPathProvider.GetCacheDependency%2A> metodę dla klasy niestandardowej. <xref:System.Web.Hosting.VirtualPathProvider> Aby uzyskać pełny kod wymagany do uruchomienia tego przykładu, zobacz sekcję <xref:System.Web.Hosting.VirtualPathProvider> przykład w temacie Omówienie klasy.  
  
 [!code-csharp[System.Web.Hosting.VirtualPathProvider#28](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.hosting.virtualpathprovider/CS/SamplePathProvider.cs#28)]
 [!code-vb[System.Web.Hosting.VirtualPathProvider#28](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.hosting.virtualpathprovider/VB/SamplePathProvider.vb#28)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCacheKey">
      <MemberSignature Language="C#" Value="public virtual string GetCacheKey (string virtualPath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetCacheKey(string virtualPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.VirtualPathProvider.GetCacheKey(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetCacheKey (virtualPath As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetCacheKey(System::String ^ virtualPath);" />
      <MemberSignature Language="F#" Value="abstract member GetCacheKey : string -&gt; string&#xA;override this.GetCacheKey : string -&gt; string" Usage="virtualPathProvider.GetCacheKey virtualPath" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="virtualPath">Ścieżka do zasobu wirtualnego.</param>
        <summary>Zwraca klucz pamięci podręcznej, który ma być używany dla określonej ścieżki wirtualnej.</summary>
        <returns>Klucz pamięci podręcznej dla określonego zasobu wirtualnego.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj metody <xref:System.Web.Hosting.VirtualPathProvider.GetCacheKey%2A> , aby podać niestandardowy klucz pamięci podręcznej dla zasobów wirtualnych. Jeśli nie zastąpisz <xref:System.Web.Hosting.VirtualPathProvider.GetCacheKey%2A> metody, ścieżka wirtualna zostanie użyta dla klucza pamięci podręcznej.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Zastąp metodę domyślną <see cref="M:System.Web.Hosting.VirtualPathProvider.GetCacheKey(System.String)" /> tylko wtedy, gdy tworzenie klucza pamięci podręcznej na podstawie ścieżki wirtualnej nie będzie działało dla aplikacji.</para></block>
      </Docs>
    </Member>
    <Member MemberName="GetDirectory">
      <MemberSignature Language="C#" Value="public virtual System.Web.Hosting.VirtualDirectory GetDirectory (string virtualDir);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Web.Hosting.VirtualDirectory GetDirectory(string virtualDir) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.VirtualPathProvider.GetDirectory(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDirectory (virtualDir As String) As VirtualDirectory" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Web::Hosting::VirtualDirectory ^ GetDirectory(System::String ^ virtualDir);" />
      <MemberSignature Language="F#" Value="abstract member GetDirectory : string -&gt; System.Web.Hosting.VirtualDirectory&#xA;override this.GetDirectory : string -&gt; System.Web.Hosting.VirtualDirectory" Usage="virtualPathProvider.GetDirectory virtualDir" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Hosting.VirtualDirectory</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualDir" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="virtualDir">Ścieżka do katalogu wirtualnego.</param>
        <summary>Pobiera katalog wirtualny z wirtualnego systemu plików.</summary>
        <returns>Element podrzędny <see cref="T:System.Web.Hosting.VirtualDirectory" /> klasy, która reprezentuje katalog w wirtualnym systemie plików.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metoda zwraca element podrzędny <xref:System.Web.Hosting.VirtualDirectory> klasy, która zawiera plik i katalogi zawarte w katalogu określonym w `virtualDir` parametrze. <xref:System.Web.Hosting.VirtualPathProvider.GetDirectory%2A>  
  
 Jeśli Klasa niestandardowa <xref:System.Web.Hosting.VirtualPathProvider> nie obsługuje katalogów <xref:System.Web.Hosting.VirtualPathProvider.GetDirectory%2A> , metoda powinna zwracać `null`.  
  
> [!NOTE]
>  Jeśli wirtualny system plików będzie zawierać motywy dla witryny sieci Web (przez utworzenie katalogu wirtualnego `App_Themes` ), Klasa niestandardowa <xref:System.Web.Hosting.VirtualPathProvider> musi obsługiwać katalogi.  
  
   
  
## Examples  
 Poniższy przykład kodu jest implementacją <xref:System.Web.Hosting.VirtualPathProvider.GetDirectory%2A> metody w klasie niestandardowej. <xref:System.Web.Hosting.VirtualPathProvider> Aby uzyskać pełny kod wymagany do uruchomienia tego przykładu, zobacz sekcję <xref:System.Web.Hosting.VirtualPathProvider> przykład w temacie Omówienie klasy.  
  
 [!code-csharp[System.Web.Hosting.VirtualPathProvider#24](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.hosting.virtualpathprovider/CS/SamplePathProvider.cs#24)]
 [!code-vb[System.Web.Hosting.VirtualPathProvider#24](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.hosting.virtualpathprovider/VB/SamplePathProvider.vb#24)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFile">
      <MemberSignature Language="C#" Value="public virtual System.Web.Hosting.VirtualFile GetFile (string virtualPath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Web.Hosting.VirtualFile GetFile(string virtualPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.VirtualPathProvider.GetFile(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetFile (virtualPath As String) As VirtualFile" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Web::Hosting::VirtualFile ^ GetFile(System::String ^ virtualPath);" />
      <MemberSignature Language="F#" Value="abstract member GetFile : string -&gt; System.Web.Hosting.VirtualFile&#xA;override this.GetFile : string -&gt; System.Web.Hosting.VirtualFile" Usage="virtualPathProvider.GetFile virtualPath" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Hosting.VirtualFile</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="virtualPath">Ścieżka do pliku wirtualnego.</param>
        <summary>Pobiera plik wirtualny z wirtualnego systemu plików.</summary>
        <returns>Element podrzędny <see cref="T:System.Web.Hosting.VirtualFile" /> klasy, która reprezentuje plik w wirtualnym systemie plików.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metoda zwraca element podrzędny <xref:System.Web.Hosting.VirtualFile> klasy, która reprezentuje plik określony przez `virtualPath` parametr. <xref:System.Web.Hosting.VirtualPathProvider.GetFile%2A>  
  
   
  
## Examples  
 Poniższy przykład kodu jest implementacją <xref:System.Web.Hosting.VirtualPathProvider.GetFile%2A> metody w klasie niestandardowej. <xref:System.Web.Hosting.VirtualPathProvider> Aby uzyskać pełny kod wymagany do uruchomienia tego przykładu, zobacz sekcję <xref:System.Web.Hosting.VirtualPathProvider> przykład w temacie Omówienie klasy.  
  
 [!code-csharp[System.Web.Hosting.VirtualPathProvider#23](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.hosting.virtualpathprovider/CS/SamplePathProvider.cs#23)]
 [!code-vb[System.Web.Hosting.VirtualPathProvider#23](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.hosting.virtualpathprovider/VB/SamplePathProvider.vb#23)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFileHash">
      <MemberSignature Language="C#" Value="public virtual string GetFileHash (string virtualPath, System.Collections.IEnumerable virtualPathDependencies);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetFileHash(string virtualPath, class System.Collections.IEnumerable virtualPathDependencies) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.VirtualPathProvider.GetFileHash(System.String,System.Collections.IEnumerable)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetFileHash (virtualPath As String, virtualPathDependencies As IEnumerable) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetFileHash(System::String ^ virtualPath, System::Collections::IEnumerable ^ virtualPathDependencies);" />
      <MemberSignature Language="F#" Value="abstract member GetFileHash : string * System.Collections.IEnumerable -&gt; string&#xA;override this.GetFileHash : string * System.Collections.IEnumerable -&gt; string" Usage="virtualPathProvider.GetFileHash (virtualPath, virtualPathDependencies)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
        <Parameter Name="virtualPathDependencies" Type="System.Collections.IEnumerable" />
      </Parameters>
      <Docs>
        <param name="virtualPath">Ścieżka do podstawowego zasobu wirtualnego.</param>
        <param name="virtualPathDependencies">Tablica ścieżek do innych zasobów wirtualnych wymaganych przez podstawowy zasób wirtualny.</param>
        <summary>Zwraca wartość skrótu określonych ścieżek wirtualnych.</summary>
        <returns>Skrót określonych ścieżek wirtualnych.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj metody <xref:System.Web.Hosting.VirtualPathProvider.GetFileHash%2A> , aby podać skrót zależności dla zasobu wirtualnego-systemowego.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="protected virtual void Initialize ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Initialize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.VirtualPathProvider.Initialize" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Initialize ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Initialize();" />
      <MemberSignature Language="F#" Value="abstract member Initialize : unit -&gt; unit&#xA;override this.Initialize : unit -&gt; unit" Usage="virtualPathProvider.Initialize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Web.Hosting.VirtualPathProvider" /> Inicjuje wystąpienie.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Hosting.VirtualPathProvider.Initialize%2A> Metoda jest wywoływana po zarejestrowaniu dostawcy w systemie kompilacji ASP.NET. Metoda jest używana w celu zapewnienia dowolnego inicjalizacji wymaganego <xref:System.Web.Hosting.VirtualPathProvider> po umieszczeniu wystąpienia w środowisku, w którym zajmowana jest aplikacja. <xref:System.Web.Hosting.VirtualPathProvider.Initialize%2A>  
  
   
  
## Examples  
 Poniższy przykład kodu jest implementacją <xref:System.Web.Hosting.VirtualPathProvider.Initialize%2A> metody, która ustawia ścieżkę do pliku danych z <xref:System.Web.Hosting.HostingEnvironment> wystąpienia aplikacji. Aby uzyskać pełny kod wymagany do uruchomienia tego przykładu, zobacz sekcję <xref:System.Web.Hosting.VirtualPathProvider> przykład w temacie Omówienie klasy.  
  
 [!code-csharp[System.Web.Hosting.VirtualPathProvider#26](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.hosting.virtualpathprovider/CS/SamplePathProvider.cs#26)]
 [!code-vb[System.Web.Hosting.VirtualPathProvider#26](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.hosting.virtualpathprovider/VB/SamplePathProvider.vb#26)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InitializeLifetimeService">
      <MemberSignature Language="C#" Value="public override object InitializeLifetimeService ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object InitializeLifetimeService() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.VirtualPathProvider.InitializeLifetimeService" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function InitializeLifetimeService () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ InitializeLifetimeService();" />
      <MemberSignature Language="F#" Value="override this.InitializeLifetimeService : unit -&gt; obj" Usage="virtualPathProvider.InitializeLifetimeService " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Nadaje <see cref="T:System.Web.Hosting.VirtualPathProvider" /> obiektowi nieskończony okres istnienia, uniemożliwiając utworzenie dzierżawy.</summary>
        <returns>Zawsze <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda przesłania <xref:System.MarshalByRefObject.InitializeLifetimeService%2A> metodę w klasie bazowej. Zawsze zwraca `null` i w ten sposób uniemożliwia utworzenie dzierżawy, która spowodowałaby <xref:System.Web.Hosting.VirtualPathProvider> ograniczenie okresu istnienia obiektu.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OpenFile">
      <MemberSignature Language="C#" Value="public static System.IO.Stream OpenFile (string virtualPath);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.Stream OpenFile(string virtualPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.VirtualPathProvider.OpenFile(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function OpenFile (virtualPath As String) As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::Stream ^ OpenFile(System::String ^ virtualPath);" />
      <MemberSignature Language="F#" Value="static member OpenFile : string -&gt; System.IO.Stream" Usage="System.Web.Hosting.VirtualPathProvider.OpenFile virtualPath" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="virtualPath">Ścieżka do pliku wirtualnego.</param>
        <summary>Zwraca strumień z pliku wirtualnego.</summary>
        <returns>Obiekt tylko <see cref="T:System.IO.Stream" /> do odczytu dla określonego pliku lub zasobu wirtualnego.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metoda jest wygodną metodą, która pozwala uzyskać strumień z pliku wirtualnego bez <xref:System.Web.Hosting.VirtualPathProvider> tworzenia wystąpienia. <xref:System.Web.Hosting.VirtualPathProvider.OpenFile%2A>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Previous">
      <MemberSignature Language="C#" Value="protected internal System.Web.Hosting.VirtualPathProvider Previous { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.Hosting.VirtualPathProvider Previous" />
      <MemberSignature Language="DocId" Value="P:System.Web.Hosting.VirtualPathProvider.Previous" />
      <MemberSignature Language="VB.NET" Value="Protected Friend ReadOnly Property Previous As VirtualPathProvider" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; property System::Web::Hosting::VirtualPathProvider ^ Previous { System::Web::Hosting::VirtualPathProvider ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Previous : System.Web.Hosting.VirtualPathProvider" Usage="System.Web.Hosting.VirtualPathProvider.Previous" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.Hosting.VirtualPathProvider</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera odwołanie do wcześniej zarejestrowanego <see cref="T:System.Web.Hosting.VirtualPathProvider" /> obiektu w systemie kompilacji.</summary>
        <value>Następny <see cref="T:System.Web.Hosting.VirtualPathProvider" /> obiekt w systemie kompilacji.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Hosting.VirtualPathProvider> Gdy obiekt jest zarejestrowany w systemie kompilacji ASP.NET, jest dodawany do łańcucha dostawców. Użyj właściwości <xref:System.Web.Hosting.VirtualPathProvider.Previous%2A> , aby ręcznie przetwarzać do poprzedniego <xref:System.Web.Hosting.VirtualPathProvider> obiektu w łańcuchu, jeśli żądana ścieżka nie zostanie podana przez to <xref:System.Web.Hosting.VirtualPathProvider> wystąpienie.  
  
 Łańcuch dostawców ścieżki zawsze jest zakończony domyślnym dostawcą ASP.NET, który obsługuje pliki z systemu plików.  
  
   
  
## Examples  
 Poniższy przykład kodu jest implementacją <xref:System.Web.Hosting.VirtualPathProvider.GetFile%2A> metody. Jeśli żądany katalog wirtualny nie zaczyna się od ciągu `"/vrdir"`, Metoda <xref:System.Web.Hosting.VirtualPathProvider.Previous%2A> używa właściwości, aby przekazać żądanie do następnego <xref:System.Web.Hosting.VirtualPathProvider> obiektu w łańcuchu. Aby uzyskać pełny kod wymagany do uruchomienia tego przykładu, zobacz sekcję <xref:System.Web.Hosting.VirtualPathProvider> przykład w temacie Omówienie klasy.  
  
 [!code-csharp[System.Web.Hosting.VirtualPathProvider#23](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.hosting.virtualpathprovider/CS/SamplePathProvider.cs#23)]
 [!code-vb[System.Web.Hosting.VirtualPathProvider#23](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.hosting.virtualpathprovider/VB/SamplePathProvider.vb#23)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
