<Type Name="VirtualDirectory" FullName="System.Web.Hosting.VirtualDirectory">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="4fb6bfb5f5a6da4228a1ee602397a9072b07377b" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30582463" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class VirtualDirectory : System.Web.Hosting.VirtualFileBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit VirtualDirectory extends System.Web.Hosting.VirtualFileBase" />
  <TypeSignature Language="DocId" Value="T:System.Web.Hosting.VirtualDirectory" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class VirtualDirectory&#xA;Inherits VirtualFileBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class VirtualDirectory abstract : System::Web::Hosting::VirtualFileBase" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.Hosting.VirtualFileBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Reprezentuje obiekt katalogu, w obszarze wirtualnym plik lub zasób.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Hosting.VirtualDirectory> Klasa jest klasą bazową dla obiektów, które reprezentują katalogów w wirtualnym systemie plików. Zwykle czy implementuje element podrzędny <xref:System.Web.Hosting.VirtualDirectory> klasy dla każdego <xref:System.Web.Hosting.VirtualPathProvider> klasy potomne w aplikacji sieci Web.  
  
   
  
## Examples  
 Poniższy przykładowy kod jest <xref:System.Web.Hosting.VirtualDirectory> implementację klasy, która zwraca katalog wirtualny informacji przechowywanych w <xref:System.Data.DataSet> obiektu. Ten kod działa z przykłady kodu dla <xref:System.Web.Hosting.VirtualPathProvider> i <xref:System.Web.Hosting.VirtualFile> klasy przechowywania zasobami wirtualnymi danych, który jest ładowany do <xref:System.Data.DataSet> obiektu. Pełne instrukcje dotyczące kompilowania i uruchamiania przykładzie, można znaleźć w sekcji przykład <xref:System.Web.Hosting.VirtualPathProvider> Przegląd klasy.  
  
 W tym przykładzie ma dwie części <xref:System.Web.Hosting.VirtualDirectory> implementacji klasy i plik danych XML używany do wypełnienia <xref:System.Data.DataSet> obiektu.  
  
 W pierwszym przykładzie kodu jest implementacją <xref:System.Web.Hosting.VirtualDirectory> klasy. W Konstruktorze używa metody na niestandardowego <xref:System.Web.Hosting.VirtualPathProvider> obiektu do zwrócenia <xref:System.Data.DataSet> obiektu. Wyszukuje <xref:System.Data.DataSet> obiektu można pobrać informacji o katalogu skojarzone z podanej ścieżce wirtualnej.  
  
 [!code-csharp[System.Web.Hosting.VirtualPathProvider#30](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.hosting.virtualpathprovider/CS/SampleVirtualDirectory.cs#30)]
 [!code-vb[System.Web.Hosting.VirtualPathProvider#30](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.hosting.virtualpathprovider/VB/SampleVirtualDirectory.vb#30)]  
  
 Drugi przykład jest używany do wypełnienia pliku danych XML <xref:System.Data.DataSet> obiektu zwróconego przez niestandardowego <xref:System.Web.Hosting.VirtualPathProvider> obiektu. Te dane XML są używane w celu pokazanie sposobu używania <xref:System.Web.Hosting.VirtualPathProvider>, <xref:System.Web.Hosting.VirtualFile>, i <xref:System.Web.Hosting.VirtualDirectory> klasy można pobrać danych z danych zewnętrznych i nie jest przeznaczona do reprezentowania magazynu danych wysokiej jakości.  
  
```  
<?xml version="1.0" encoding="utf-8" ?>  
  <resource type="dir"   
    path="/vrDir"   
    parentPath=""   
    content="">  
    <resource type="file"   
      path="/vrDir/Level1FileA.vrf"  
      parentPath="/vrDir"   
      content="This is the content of file Level1FileA." >  
    </resource>  
    <resource type="file"   
      path="/vrDir/Level1FileB.vrf"  
      parentPath="/vrDir"   
      content="This is the content of file Level1FileB.">  
    </resource>  
    <resource type="dir"   
      path="/vrDir/Level2DirA"   
      parentPath="/vrDir"   
      content="">  
        <resource type="file"   
          path="/vrDir/Level2DirA/Level2FileA.vrf"   
          parentPath="/vrDir/Level2DirA"   
          content="This is the content of file Level2FileA." >  
        </resource>  
        <resource type="file"   
          path="/vrDir/Level2DirA/Level2FileB.vrf"  
          parentPath="/vrDir/Level2DirA"   
          content="This is the content of file Level2FileB.">  
        </resource>  
    </resource>  
    <resource type="dir"   
      path="/vrDir/Level2DirB"   
      parentPath="/vrDir"   
      content="">  
      <resource type="file"   
        path="/vrDir/Level2DirB/Level2FileA.vrf"   
        parentPath="/vrDir/Level2DirB"   
        content="This is the content of file Level2FileA." >  
      </resource>  
      <resource type="file"   
        path="/vrDir/Level2DirB/Level2FileB.vrf"  
        parentPath="/vrDir/Level2DirB"   
        content="This is the content of file Level2FileB.">  
       </resource>  
    </resource>  
  </resource>  
```  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <para>Przy dziedziczeniu z <see cref="T:System.Web.Hosting.VirtualDirectory" /> klasy, należy zastąpić <see cref="P:System.Web.Hosting.VirtualDirectory.Children" />, <see cref="P:System.Web.Hosting.VirtualDirectory.Directories" />, i <see cref="P:System.Web.Hosting.VirtualDirectory.Files" /> właściwości, aby zwrócić implementacja obiektu <see cref="T:System.Collections.IEnumerable" /> interfejsu.  
  
 Jeśli do struktury katalogu wirtualnego umiarkowane dużych liczb zasobami wirtualnymi powinien zajmie się aby zminimalizować zasoby systemowe, używane podczas wyliczania katalogu wirtualnego, wywołując <see cref="P:System.Web.Hosting.VirtualDirectory.Children" />, <see cref="P:System.Web.Hosting.VirtualDirectory.Directories" />, lub <see cref="P:System.Web.Hosting.VirtualDirectory.Files" />właściwości.</para>
    </block>
    <altmember cref="T:System.Web.Hosting.VirtualFile" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected VirtualDirectory (string virtualPath);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(string virtualPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.VirtualDirectory.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (virtualPath As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; VirtualDirectory(System::String ^ virtualPath);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="virtualPath">Ścieżka wirtualna do zasobu reprezentowanego przez to wystąpienie.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Hosting.VirtualDirectory" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykładowy kod jest implementacją <xref:System.Web.Hosting.VirtualDirectory.%23ctor%2A> Konstruktor, który pobiera informacje o pliku wirtualnego z <xref:System.Data.DataSet> obiekt udostępniany przez niestandardowy <xref:System.Web.Hosting.VirtualPathProvider> obiektu. Obejmuje on `GetData` metodę używaną do wypełniania <xref:System.Web.Hosting.VirtualDirectory> wystąpienia. Dla pełny kod wymagany do uruchamiania w przykładzie, zobacz sekcję przykład <xref:System.Web.Hosting.VirtualDirectory> Przegląd klasy.  
  
 [!code-csharp[System.Web.Hosting.VirtualPathProvider#31](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.hosting.virtualpathprovider/CS/SampleVirtualDirectory.cs#31)]
 [!code-vb[System.Web.Hosting.VirtualPathProvider#31](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.hosting.virtualpathprovider/VB/SampleVirtualDirectory.vb#31)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Hosting.VirtualFile" />
      </Docs>
    </Member>
    <Member MemberName="Children">
      <MemberSignature Language="C#" Value="public abstract System.Collections.IEnumerable Children { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.IEnumerable Children" />
      <MemberSignature Language="DocId" Value="P:System.Web.Hosting.VirtualDirectory.Children" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Children As IEnumerable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Collections::IEnumerable ^ Children { System::Collections::IEnumerable ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera listę pliki i podkatalogi zawarte w tym katalogu wirtualnego.</summary>
        <value>Implementacja obiektu <see cref="T:System.Collections.IEnumerable" /> zawierający interfejs <see cref="T:System.Web.Hosting.VirtualFile" /> i <see cref="T:System.Web.Hosting.VirtualDirectory" /> obiektów.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Hosting.VirtualDirectory.Children%2A> Właściwość zawiera zarówno <xref:System.Web.Hosting.VirtualFile> i <xref:System.Web.Hosting.VirtualDirectory> obiektów, które reprezentują pliki i katalogi zawarte w tym katalogu wirtualnego. Aby przywrócić tylko <xref:System.Web.Hosting.VirtualFile> obiektów, użyj <xref:System.Web.Hosting.VirtualDirectory.Files%2A> właściwości. Aby przywrócić tylko <xref:System.Web.Hosting.VirtualDirectory> obiektów, użyj <xref:System.Web.Hosting.VirtualDirectory.Directories%2A> właściwości.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Jeśli do struktury katalogu wirtualnego umiarkowane dużych liczb zasobami wirtualnymi należy zwrócić uwagę, aby zminimalizować zasoby systemowe, używane przez wyliczania katalogu wirtualnego.</para>
        </block>
        <altmember cref="T:System.Web.Hosting.VirtualFile" />
      </Docs>
    </Member>
    <Member MemberName="Directories">
      <MemberSignature Language="C#" Value="public abstract System.Collections.IEnumerable Directories { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.IEnumerable Directories" />
      <MemberSignature Language="DocId" Value="P:System.Web.Hosting.VirtualDirectory.Directories" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Directories As IEnumerable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Collections::IEnumerable ^ Directories { System::Collections::IEnumerable ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera listę wszystkie podkatalogi zawarte w tym katalogu.</summary>
        <value>Implementacja obiektu <see cref="T:System.Collections.IEnumerable" /> zawierający interfejs <see cref="T:System.Web.Hosting.VirtualDirectory" /> obiektów.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Hosting.VirtualDirectory.Directories%2A> Zawiera właściwość <xref:System.Web.Hosting.VirtualDirectory> obiekty reprezentujące katalogów zawarte w tym katalogu wirtualnego. Aby przywrócić <xref:System.Web.Hosting.VirtualFile> obiektów, użyj <xref:System.Web.Hosting.VirtualDirectory.Files%2A> właściwości. Aby przywrócić zarówno <xref:System.Web.Hosting.VirtualFile> i <xref:System.Web.Hosting.VirtualDirectory> obiektów, użyj <xref:System.Web.Hosting.VirtualDirectory.Children%2A> właściwości.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Jeśli do struktury katalogu wirtualnego umiarkowane dużych liczb zasobami wirtualnymi należy zwrócić uwagę, aby zminimalizować zasoby systemowe, używane przez wyliczania katalogu wirtualnego.</para>
        </block>
        <altmember cref="T:System.Web.Hosting.VirtualFile" />
      </Docs>
    </Member>
    <Member MemberName="Files">
      <MemberSignature Language="C#" Value="public abstract System.Collections.IEnumerable Files { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.IEnumerable Files" />
      <MemberSignature Language="DocId" Value="P:System.Web.Hosting.VirtualDirectory.Files" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Files As IEnumerable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Collections::IEnumerable ^ Files { System::Collections::IEnumerable ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera listę wszystkich plików znajdujących się w tym katalogu.</summary>
        <value>Implementacja obiektu <see cref="T:System.Collections.IEnumerable" /> zawierający interfejs <see cref="T:System.Web.Hosting.VirtualFile" /> obiektów.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Hosting.VirtualDirectory.Files%2A> Zawiera właściwość <xref:System.Web.Hosting.VirtualFile> obiektów, które reprezentują pliki zawarte w tym katalogu wirtualnego. Aby przywrócić <xref:System.Web.Hosting.VirtualDirectory> obiektów, użyj <xref:System.Web.Hosting.VirtualDirectory.Directories%2A> właściwości. Aby przywrócić zarówno <xref:System.Web.Hosting.VirtualFile> i <xref:System.Web.Hosting.VirtualDirectory> obiektów, użyj <xref:System.Web.Hosting.VirtualDirectory.Children%2A> właściwości.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Jeśli do struktury katalogu wirtualnego umiarkowane dużych liczb zasobami wirtualnymi należy zwrócić uwagę, aby zminimalizować zasoby systemowe, używane przez wyliczania katalogu wirtualnego.</para>
        </block>
        <altmember cref="T:System.Web.Hosting.VirtualFile" />
      </Docs>
    </Member>
    <Member MemberName="IsDirectory">
      <MemberSignature Language="C#" Value="public override bool IsDirectory { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDirectory" />
      <MemberSignature Language="DocId" Value="P:System.Web.Hosting.VirtualDirectory.IsDirectory" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsDirectory As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsDirectory { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość wskazującą, że jest to wirtualny zasób, który powinien być traktowany jako katalog.</summary>
        <value>Zawsze <see langword="true" />.</value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Web.Hosting.VirtualFile" />
      </Docs>
    </Member>
  </Members>
</Type>