<Type Name="VirtualDirectory" FullName="System.Web.Hosting.VirtualDirectory">
  <Metadata><Meta Name="ms.openlocfilehash" Value="1002583061ed87b4df852e7c333294866e2ee7c0" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69139831" /></Metadata><TypeSignature Language="C#" Value="public abstract class VirtualDirectory : System.Web.Hosting.VirtualFileBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit VirtualDirectory extends System.Web.Hosting.VirtualFileBase" />
  <TypeSignature Language="DocId" Value="T:System.Web.Hosting.VirtualDirectory" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class VirtualDirectory&#xA;Inherits VirtualFileBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class VirtualDirectory abstract : System::Web::Hosting::VirtualFileBase" />
  <TypeSignature Language="F#" Value="type VirtualDirectory = class&#xA;    inherit VirtualFileBase" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.Hosting.VirtualFileBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Reprezentuje obiekt katalogu w pliku wirtualnym lub przestrzeni zasobów.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Hosting.VirtualDirectory> Klasa jest klasą bazową dla obiektów, które reprezentują katalogi w wirtualnym systemie plików. Zazwyczaj należy zaimplementować element potomny <xref:System.Web.Hosting.VirtualDirectory> klasy dla każdej <xref:System.Web.Hosting.VirtualPathProvider> klasy podrzędnej w aplikacji sieci Web.  
  
   
  
## Examples  
 Poniższy przykład kodu jest <xref:System.Web.Hosting.VirtualDirectory> implementacją klasy, która zwraca informacje katalogu wirtualnego przechowywane <xref:System.Data.DataSet> w obiekcie. Ten kod współdziała z przykładami kodu dla <xref:System.Web.Hosting.VirtualPathProvider> klas i <xref:System.Web.Hosting.VirtualFile> , aby zapewnić zasoby wirtualne z magazynu danych <xref:System.Data.DataSet> , który jest ładowany do obiektu. Aby uzyskać pełne instrukcje dotyczące kompilowania i uruchamiania tego przykładu, zobacz sekcję <xref:System.Web.Hosting.VirtualPathProvider> przykładową klasy Przegląd.  
  
 Ten przykład ma dwie części, <xref:System.Web.Hosting.VirtualDirectory> implementację klasy i plik danych XML służący do <xref:System.Data.DataSet> wypełniania obiektu.  
  
 Pierwszy przykład kodu jest implementacją <xref:System.Web.Hosting.VirtualDirectory> klasy. W konstruktorze używa metody na obiekcie niestandardowym <xref:System.Web.Hosting.VirtualPathProvider> w celu <xref:System.Data.DataSet> zwrócenia obiektu. Następnie przeszukuje <xref:System.Data.DataSet> obiekt w celu pobrania informacji o katalogu skojarzonych z podaną ścieżką wirtualną.  
  
 [!code-csharp[System.Web.Hosting.VirtualPathProvider#30](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.hosting.virtualpathprovider/CS/SampleVirtualDirectory.cs#30)]
 [!code-vb[System.Web.Hosting.VirtualPathProvider#30](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.hosting.virtualpathprovider/VB/SampleVirtualDirectory.vb#30)]  
  
 Drugim przykładem jest plik danych XML używany do wypełniania <xref:System.Data.DataSet> obiektu zwróconego przez obiekt <xref:System.Web.Hosting.VirtualPathProvider> niestandardowy. Dane XML są używane do zademonstrowania przy użyciu <xref:System.Web.Hosting.VirtualPathProvider>klas <xref:System.Web.Hosting.VirtualFile>,, <xref:System.Web.Hosting.VirtualDirectory> i do pobierania danych z danych zewnętrznych i nie są przeznaczone do reprezentowania magazynu danych z jakością produkcyjną.  
  
```  
<?xml version="1.0" encoding="utf-8" ?>  
  <resource type="dir"   
    path="/vrDir"   
    parentPath=""   
    content="">  
    <resource type="file"   
      path="/vrDir/Level1FileA.vrf"  
      parentPath="/vrDir"   
      content="This is the content of file Level1FileA." >  
    </resource>  
    <resource type="file"   
      path="/vrDir/Level1FileB.vrf"  
      parentPath="/vrDir"   
      content="This is the content of file Level1FileB.">  
    </resource>  
    <resource type="dir"   
      path="/vrDir/Level2DirA"   
      parentPath="/vrDir"   
      content="">  
        <resource type="file"   
          path="/vrDir/Level2DirA/Level2FileA.vrf"   
          parentPath="/vrDir/Level2DirA"   
          content="This is the content of file Level2FileA." >  
        </resource>  
        <resource type="file"   
          path="/vrDir/Level2DirA/Level2FileB.vrf"  
          parentPath="/vrDir/Level2DirA"   
          content="This is the content of file Level2FileB.">  
        </resource>  
    </resource>  
    <resource type="dir"   
      path="/vrDir/Level2DirB"   
      parentPath="/vrDir"   
      content="">  
      <resource type="file"   
        path="/vrDir/Level2DirB/Level2FileA.vrf"   
        parentPath="/vrDir/Level2DirB"   
        content="This is the content of file Level2FileA." >  
      </resource>  
      <resource type="file"   
        path="/vrDir/Level2DirB/Level2FileB.vrf"  
        parentPath="/vrDir/Level2DirB"   
        content="This is the content of file Level2FileB.">  
       </resource>  
    </resource>  
  </resource>  
```  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides"><para>W przypadku dziedziczenia z <see cref="T:System.Web.Hosting.VirtualDirectory" /> klasy należy <see cref="P:System.Web.Hosting.VirtualDirectory.Children" />zastąpić właściwości, <see cref="P:System.Web.Hosting.VirtualDirectory.Directories" /> <see cref="T:System.Collections.IEnumerable" /> i <see cref="P:System.Web.Hosting.VirtualDirectory.Files" /> , aby zwrócić obiekt implementujący interfejs.  
  
Jeśli struktura katalogów wirtualnych zawiera średnią i dużą liczbę zasobów wirtualnych, należy zadbać o zminimalizowanie zużywanych zasobów systemowych podczas wyliczania katalogu wirtualnego <see cref="P:System.Web.Hosting.VirtualDirectory.Children" />, wywołując, lub <see cref="P:System.Web.Hosting.VirtualDirectory.Directories" /> <see cref="P:System.Web.Hosting.VirtualDirectory.Files" />właściwości.</para></block>
    <altmember cref="T:System.Web.Hosting.VirtualFile" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected VirtualDirectory (string virtualPath);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(string virtualPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.VirtualDirectory.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (virtualPath As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; VirtualDirectory(System::String ^ virtualPath);" />
      <MemberSignature Language="F#" Value="new System.Web.Hosting.VirtualDirectory : string -&gt; System.Web.Hosting.VirtualDirectory" Usage="new System.Web.Hosting.VirtualDirectory virtualPath" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="virtualPath">Ścieżka wirtualna do zasobu reprezentowanego przez to wystąpienie.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Hosting.VirtualDirectory" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład kodu jest implementacją <xref:System.Web.Hosting.VirtualDirectory.%23ctor%2A> konstruktora, który pobiera informacje o pliku wirtualnym <xref:System.Data.DataSet> z obiektu dostarczonego przez obiekt niestandardowy <xref:System.Web.Hosting.VirtualPathProvider> . Obejmuje `GetData` metodę używaną do <xref:System.Web.Hosting.VirtualDirectory> wypełniania wystąpienia. Aby uzyskać pełny kod wymagany do uruchomienia tego przykładu, zobacz sekcję <xref:System.Web.Hosting.VirtualDirectory> przykład omówienia klasy.  
  
 [!code-csharp[System.Web.Hosting.VirtualPathProvider#31](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.hosting.virtualpathprovider/CS/SampleVirtualDirectory.cs#31)]
 [!code-vb[System.Web.Hosting.VirtualPathProvider#31](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.hosting.virtualpathprovider/VB/SampleVirtualDirectory.vb#31)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Hosting.VirtualFile" />
      </Docs>
    </Member>
    <Member MemberName="Children">
      <MemberSignature Language="C#" Value="public abstract System.Collections.IEnumerable Children { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.IEnumerable Children" />
      <MemberSignature Language="DocId" Value="P:System.Web.Hosting.VirtualDirectory.Children" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Children As IEnumerable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Collections::IEnumerable ^ Children { System::Collections::IEnumerable ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Children : System.Collections.IEnumerable" Usage="System.Web.Hosting.VirtualDirectory.Children" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera listę plików i podkatalogów zawartych w tym katalogu wirtualnym.</summary>
        <value>Obiekt implementujący <see cref="T:System.Collections.IEnumerable" /> interfejs zawierający <see cref="T:System.Web.Hosting.VirtualFile" /> obiekty i <see cref="T:System.Web.Hosting.VirtualDirectory" /> .</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Właściwość zawiera zarówno <xref:System.Web.Hosting.VirtualFile>obiekty,które reprezentująplikiikatalogizawartewtymkataloguwirtualnym.<xref:System.Web.Hosting.VirtualDirectory> <xref:System.Web.Hosting.VirtualDirectory.Children%2A> Aby zwrócić tylko <xref:System.Web.Hosting.VirtualFile> obiekty, <xref:System.Web.Hosting.VirtualDirectory.Files%2A> Użyj właściwości. Aby zwrócić tylko <xref:System.Web.Hosting.VirtualDirectory> obiekty, <xref:System.Web.Hosting.VirtualDirectory.Directories%2A> Użyj właściwości.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Jeśli struktura katalogów wirtualnych zawiera średnią i dużą liczbę zasobów wirtualnych, należy zachować ostrożność, aby zminimalizować zasoby systemowe używane przez Wyliczenie katalogu wirtualnego.</para></block>
        <altmember cref="T:System.Web.Hosting.VirtualFile" />
      </Docs>
    </Member>
    <Member MemberName="Directories">
      <MemberSignature Language="C#" Value="public abstract System.Collections.IEnumerable Directories { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.IEnumerable Directories" />
      <MemberSignature Language="DocId" Value="P:System.Web.Hosting.VirtualDirectory.Directories" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Directories As IEnumerable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Collections::IEnumerable ^ Directories { System::Collections::IEnumerable ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Directories : System.Collections.IEnumerable" Usage="System.Web.Hosting.VirtualDirectory.Directories" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera listę wszystkich podkatalogów zawartych w tym katalogu.</summary>
        <value>Obiekt implementujący <see cref="T:System.Collections.IEnumerable" /> interfejs zawierający <see cref="T:System.Web.Hosting.VirtualDirectory" /> obiekty.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Hosting.VirtualDirectory.Directories%2A> Właściwość zawiera<xref:System.Web.Hosting.VirtualDirectory> obiekty, które reprezentują katalogi zawarte w tym katalogu wirtualnym. Aby zwrócić <xref:System.Web.Hosting.VirtualFile> obiekty, <xref:System.Web.Hosting.VirtualDirectory.Files%2A> Użyj właściwości. Aby zwrócić oba <xref:System.Web.Hosting.VirtualFile> obiekty <xref:System.Web.Hosting.VirtualDirectory> i, użyj <xref:System.Web.Hosting.VirtualDirectory.Children%2A> właściwości.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Jeśli struktura katalogów wirtualnych zawiera średnią i dużą liczbę zasobów wirtualnych, należy zachować ostrożność, aby zminimalizować zasoby systemowe używane przez Wyliczenie katalogu wirtualnego.</para></block>
        <altmember cref="T:System.Web.Hosting.VirtualFile" />
      </Docs>
    </Member>
    <Member MemberName="Files">
      <MemberSignature Language="C#" Value="public abstract System.Collections.IEnumerable Files { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.IEnumerable Files" />
      <MemberSignature Language="DocId" Value="P:System.Web.Hosting.VirtualDirectory.Files" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Files As IEnumerable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Collections::IEnumerable ^ Files { System::Collections::IEnumerable ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Files : System.Collections.IEnumerable" Usage="System.Web.Hosting.VirtualDirectory.Files" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera listę wszystkich plików znajdujących się w tym katalogu.</summary>
        <value>Obiekt implementujący <see cref="T:System.Collections.IEnumerable" /> interfejs zawierający <see cref="T:System.Web.Hosting.VirtualFile" /> obiekty.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Hosting.VirtualDirectory.Files%2A> Właściwość zawiera<xref:System.Web.Hosting.VirtualFile> obiekty, które reprezentują pliki zawarte w tym katalogu wirtualnym. Aby zwrócić <xref:System.Web.Hosting.VirtualDirectory> obiekty, <xref:System.Web.Hosting.VirtualDirectory.Directories%2A> Użyj właściwości. Aby zwrócić oba <xref:System.Web.Hosting.VirtualFile> obiekty <xref:System.Web.Hosting.VirtualDirectory> i, użyj <xref:System.Web.Hosting.VirtualDirectory.Children%2A> właściwości.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Jeśli struktura katalogów wirtualnych zawiera średnią i dużą liczbę zasobów wirtualnych, należy zachować ostrożność, aby zminimalizować zasoby systemowe używane przez Wyliczenie katalogu wirtualnego.</para></block>
        <altmember cref="T:System.Web.Hosting.VirtualFile" />
      </Docs>
    </Member>
    <Member MemberName="IsDirectory">
      <MemberSignature Language="C#" Value="public override bool IsDirectory { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDirectory" />
      <MemberSignature Language="DocId" Value="P:System.Web.Hosting.VirtualDirectory.IsDirectory" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsDirectory As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsDirectory { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsDirectory : bool" Usage="System.Web.Hosting.VirtualDirectory.IsDirectory" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość wskazującą, że jest to zasób wirtualny, który powinien być traktowany jako katalog.</summary>
        <value>Zawsze <see langword="true" />.</value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Web.Hosting.VirtualFile" />
      </Docs>
    </Member>
  </Members>
</Type>
