<Type Name="ApplicationManager" FullName="System.Web.Hosting.ApplicationManager">
  <Metadata><Meta Name="ms.openlocfilehash" Value="b72a4288d88935d936cc6642a67cd5e4803fe19c" /><Meta Name="ms.sourcegitcommit" Value="f9e71795ba0f9c2dfaa74bec233343ed0f3ffd99" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="03/14/2019" /><Meta Name="ms.locfileid" Value="57939894" /></Metadata><TypeSignature Language="C#" Value="public sealed class ApplicationManager : MarshalByRefObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ApplicationManager extends System.MarshalByRefObject" />
  <TypeSignature Language="DocId" Value="T:System.Web.Hosting.ApplicationManager" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ApplicationManager&#xA;Inherits MarshalByRefObject" />
  <TypeSignature Language="C++ CLI" Value="public ref class ApplicationManager sealed : MarshalByRefObject" />
  <TypeSignature Language="F#" Value="type ApplicationManager = class&#xA;    inherit MarshalByRefObject" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.MarshalByRefObject</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="f3fe0-101">Zarządza domen aplikacji ASP.NET do obsługi aplikacji platformy ASP.NET.</span><span class="sxs-lookup"><span data-stu-id="f3fe0-101">Manages ASP.NET application domains for an ASP.NET hosting application.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f3fe0-102"><xref:System.Web.Hosting.ApplicationManager> Obiekt zapewnia zarządzanie okresem istnienia obiektów w środowisku macierzystym aplikacji ASP.NET.</span><span class="sxs-lookup"><span data-stu-id="f3fe0-102">The <xref:System.Web.Hosting.ApplicationManager> object provides lifetime management of objects in the hosting environment for an ASP.NET application.</span></span> <span data-ttu-id="f3fe0-103">Jest on odpowiedzialny za:</span><span class="sxs-lookup"><span data-stu-id="f3fe0-103">It is responsible for:</span></span>  
  
-   <span data-ttu-id="f3fe0-104">Aktywowanie i Inicjowanie aplikacji ASP.NET.</span><span class="sxs-lookup"><span data-stu-id="f3fe0-104">Activating and initializing ASP.NET applications.</span></span>  
  
-   <span data-ttu-id="f3fe0-105">Zarządzanie okresem istnienia aplikacji i czasu życia obiektów zarejestrowany w aplikacji.</span><span class="sxs-lookup"><span data-stu-id="f3fe0-105">Managing the application lifetime and the lifetime of objects registered in the application.</span></span>  
  
-   <span data-ttu-id="f3fe0-106">Udostępnianie obiektów używanych przez środowisko hostingu do przetwarzania żądań aplikacji ASP.NET.</span><span class="sxs-lookup"><span data-stu-id="f3fe0-106">Exposing objects used by the hosting environment to process ASP.NET application requests.</span></span>  
  
-   <span data-ttu-id="f3fe0-107">Dostarczenie listy aplikacji działających w procesu hostingu w danej chwili.</span><span class="sxs-lookup"><span data-stu-id="f3fe0-107">Providing a list of applications running in the hosting process at any given moment.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.ApplicationManager.Close" />
      <MemberSignature Language="VB.NET" Value="Public Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Close();" />
      <MemberSignature Language="F#" Value="member this.Close : unit -&gt; unit" Usage="applicationManager.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f3fe0-108">Zamyka wszystkie domeny aplikacji.</span><span class="sxs-lookup"><span data-stu-id="f3fe0-108">Shuts down all application domains.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f3fe0-109">Jeśli wywołanie <xref:System.Web.Hosting.ApplicationManager.Close%2A> metoda zmniejsza liczbę odwołań aplikacji korzystających z Menedżera aplikacji 0, <xref:System.Web.Hosting.ApplicationManager.Close%2A> wywołania metody <xref:System.Web.Hosting.ApplicationManager.ShutdownAll%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="f3fe0-109">If a call to the <xref:System.Web.Hosting.ApplicationManager.Close%2A> method reduces the reference count of applications using the application manager to 0, the <xref:System.Web.Hosting.ApplicationManager.Close%2A> method calls the <xref:System.Web.Hosting.ApplicationManager.ShutdownAll%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateObject">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="f3fe0-110">Tworzy obiekt do określonej aplikacji domeny i obiektu typu.</span><span class="sxs-lookup"><span data-stu-id="f3fe0-110">Creates an object for the specified application domain and object type.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateObject">
      <MemberSignature Language="C#" Value="public System.Web.Hosting.IRegisteredObject CreateObject (System.Web.Hosting.IApplicationHost appHost, Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.Hosting.IRegisteredObject CreateObject(class System.Web.Hosting.IApplicationHost appHost, class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.ApplicationManager.CreateObject(System.Web.Hosting.IApplicationHost,System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Web::Hosting::IRegisteredObject ^ CreateObject(System::Web::Hosting::IApplicationHost ^ appHost, Type ^ type);" />
      <MemberSignature Language="F#" Value="member this.CreateObject : System.Web.Hosting.IApplicationHost * Type -&gt; System.Web.Hosting.IRegisteredObject" Usage="applicationManager.CreateObject (appHost, type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Hosting.IRegisteredObject</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="appHost" Type="System.Web.Hosting.IApplicationHost" />
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="appHost"><span data-ttu-id="f3fe0-111"><see cref="T:System.Web.Hosting.IApplicationHost" /> Obiektu.</span><span class="sxs-lookup"><span data-stu-id="f3fe0-111">An <see cref="T:System.Web.Hosting.IApplicationHost" /> object.</span></span></param>
        <param name="type"><span data-ttu-id="f3fe0-112">Typ obiektu do utworzenia.</span><span class="sxs-lookup"><span data-stu-id="f3fe0-112">The type of the object to create.</span></span></param>
        <summary><span data-ttu-id="f3fe0-113">Tworzy obiekt do domeny określonej aplikacji, na podstawie typu.</span><span class="sxs-lookup"><span data-stu-id="f3fe0-113">Creates an object for the specified application domain, based on type.</span></span></summary>
        <returns><span data-ttu-id="f3fe0-114">Nowy obiekt o typie określonym w <paramref name="type" />.</span><span class="sxs-lookup"><span data-stu-id="f3fe0-114">A new object of the type specified in <paramref name="type" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f3fe0-115"><xref:System.Web.Hosting.ApplicationManager.CreateObject%2A> został wprowadzony w .NET Framework w wersji 3.5.</span><span class="sxs-lookup"><span data-stu-id="f3fe0-115"><xref:System.Web.Hosting.ApplicationManager.CreateObject%2A> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="f3fe0-116">Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="f3fe0-116">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="f3fe0-117">Ścieżka fizyczna aplikacji nie istnieje.</span><span class="sxs-lookup"><span data-stu-id="f3fe0-117">A physical path for the application does not exist.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="f3fe0-118"><paramref name="appHost" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="f3fe0-118"><paramref name="appHost" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="f3fe0-119">—lub—</span><span class="sxs-lookup"><span data-stu-id="f3fe0-119">-or-</span></span> 
 <span data-ttu-id="f3fe0-120"><paramref name="type" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="f3fe0-120"><paramref name="type" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CreateObject">
      <MemberSignature Language="C#" Value="public System.Web.Hosting.IRegisteredObject CreateObject (string appId, Type type, string virtualPath, string physicalPath, bool failIfExists);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.Hosting.IRegisteredObject CreateObject(string appId, class System.Type type, string virtualPath, string physicalPath, bool failIfExists) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.ApplicationManager.CreateObject(System.String,System.Type,System.String,System.String,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Web::Hosting::IRegisteredObject ^ CreateObject(System::String ^ appId, Type ^ type, System::String ^ virtualPath, System::String ^ physicalPath, bool failIfExists);" />
      <MemberSignature Language="F#" Value="member this.CreateObject : string * Type * string * string * bool -&gt; System.Web.Hosting.IRegisteredObject" Usage="applicationManager.CreateObject (appId, type, virtualPath, physicalPath, failIfExists)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.Hosting.IRegisteredObject</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="appId" Type="System.String" />
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="virtualPath" Type="System.String" />
        <Parameter Name="physicalPath" Type="System.String" />
        <Parameter Name="failIfExists" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="appId"><span data-ttu-id="f3fe0-121">Unikatowy identyfikator dla aplikacji, która jest właścicielem obiektu.</span><span class="sxs-lookup"><span data-stu-id="f3fe0-121">The unique identifier for the application that owns the object.</span></span></param>
        <param name="type"><span data-ttu-id="f3fe0-122">Typ obiektu do utworzenia.</span><span class="sxs-lookup"><span data-stu-id="f3fe0-122">The type of the object to create.</span></span></param>
        <param name="virtualPath"><span data-ttu-id="f3fe0-123">Ścieżka wirtualna do aplikacji.</span><span class="sxs-lookup"><span data-stu-id="f3fe0-123">The virtual path to the application.</span></span></param>
        <param name="physicalPath"><span data-ttu-id="f3fe0-124">Ścieżka fizyczna do aplikacji.</span><span class="sxs-lookup"><span data-stu-id="f3fe0-124">The physical path to the application.</span></span></param>
        <param name="failIfExists"><span data-ttu-id="f3fe0-125"><see langword="true" /> Aby zgłosić wyjątek, jeśli obiekt określonego typu jest obecnie zarejestrowany; <see langword="false" /> do zwrócenia istniejący obiekt zarejestrowanych dla określonego typu.</span><span class="sxs-lookup"><span data-stu-id="f3fe0-125"><see langword="true" /> to throw an exception if an object of the specified type is currently registered; <see langword="false" /> to return the existing registered object of the specified type.</span></span></param>
        <summary><span data-ttu-id="f3fe0-126">Tworzy obiekt do domeny określonej aplikacji na podstawie typu, ścieżki wirtualnej i fizycznej i wartość logiczną wskazującą niepowodzenie zachowanie, gdy istnieje już obiekt o określonym typie.</span><span class="sxs-lookup"><span data-stu-id="f3fe0-126">Creates an object for the specified application domain based on type, virtual and physical paths, and a Boolean value indicating failure behavior when an object of the specified type already exists.</span></span></summary>
        <returns><span data-ttu-id="f3fe0-127">Nowy obiekt z określonym <paramref name="type" />.</span><span class="sxs-lookup"><span data-stu-id="f3fe0-127">A new object of the specified <paramref name="type" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f3fe0-128"><xref:System.Web.Hosting.ApplicationManager.CreateObject%2A> Metoda jest używana do tworzenia i rejestrują obiekty w aplikacji.</span><span class="sxs-lookup"><span data-stu-id="f3fe0-128">The <xref:System.Web.Hosting.ApplicationManager.CreateObject%2A> method is used to create and register objects in the application.</span></span> <span data-ttu-id="f3fe0-129">Można utworzyć tylko jeden obiekt każdego typu.</span><span class="sxs-lookup"><span data-stu-id="f3fe0-129">Only one object of each type can be created.</span></span> <span data-ttu-id="f3fe0-130">Jeśli musisz utworzyć wiele obiektów tego samego typu, należy zaimplementować fabrykę obiektu.</span><span class="sxs-lookup"><span data-stu-id="f3fe0-130">If you need to create multiple objects of the same type, you must implement an object factory.</span></span> <span data-ttu-id="f3fe0-131">Aby uzyskać więcej informacji zobacz przykład kodu, w tym temacie.</span><span class="sxs-lookup"><span data-stu-id="f3fe0-131">For more information, see the code example in this topic.</span></span>  
  
 <span data-ttu-id="f3fe0-132">Każda aplikacja identyfikowane przez unikatowy identyfikator aplikacji, uruchamia się w domenie aplikacji.</span><span class="sxs-lookup"><span data-stu-id="f3fe0-132">Each application, identified by a unique application identifier, runs in its own application domain.</span></span> <span data-ttu-id="f3fe0-133"><xref:System.Web.Hosting.ApplicationManager.CreateObject%2A> Metoda tworzy obiekt określonego typu w domenie aplikacji w aplikacji określonej w `appID` parametru.</span><span class="sxs-lookup"><span data-stu-id="f3fe0-133">The <xref:System.Web.Hosting.ApplicationManager.CreateObject%2A> method creates an object of the specified type in the application domain of the application specified in the `appID` parameter.</span></span> <span data-ttu-id="f3fe0-134">Jeśli domena aplikacji nie istnieje dla określonej aplikacji, powstaje zanim obiekt zostanie utworzony.</span><span class="sxs-lookup"><span data-stu-id="f3fe0-134">If an application domain does not exist for the specified application, one is created before the object is created.</span></span>  
  
 <span data-ttu-id="f3fe0-135">`failIfExists` Parametr steruje zachowaniem <xref:System.Web.Hosting.ApplicationManager.CreateObject%2A> metody, gdy istnieje już obiekt określonego typu w aplikacji.</span><span class="sxs-lookup"><span data-stu-id="f3fe0-135">The `failIfExists` parameter controls the behavior of the <xref:System.Web.Hosting.ApplicationManager.CreateObject%2A> method when an object of the specified type already exists in the application.</span></span> <span data-ttu-id="f3fe0-136">Gdy `failIfExists` jest `true`, <xref:System.Web.Hosting.ApplicationManager.CreateObject%2A> metoda zgłasza wyjątek <xref:System.InvalidOperationException> wyjątku.</span><span class="sxs-lookup"><span data-stu-id="f3fe0-136">When `failIfExists` is `true`, the <xref:System.Web.Hosting.ApplicationManager.CreateObject%2A> method throws an <xref:System.InvalidOperationException> exception.</span></span>  
  
 <span data-ttu-id="f3fe0-137">Gdy `failIfExists` jest `false`, <xref:System.Web.Hosting.ApplicationManager.CreateObject%2A> metoda zwraca istniejący obiekt zarejestrowanych dla określonego typu.</span><span class="sxs-lookup"><span data-stu-id="f3fe0-137">When `failIfExists` is `false`, the <xref:System.Web.Hosting.ApplicationManager.CreateObject%2A> method returns the existing registered object of the specified type.</span></span>  
  
 <span data-ttu-id="f3fe0-138"><xref:System.Web.Hosting.ApplicationManager.CreateObject%2A> Metoda wywołuje przeciążenia przyjmującego dodatkowego `throwOnError` parametrem `throwOnError` równa `false`.</span><span class="sxs-lookup"><span data-stu-id="f3fe0-138">The <xref:System.Web.Hosting.ApplicationManager.CreateObject%2A> method calls the overload that takes an additional `throwOnError` parameter with `throwOnError` set to `false`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f3fe0-139">Poniższy przykład kodu jest implementacja wzorca projektowego fabryki obiektów dla obiektów zarejestrowane.</span><span class="sxs-lookup"><span data-stu-id="f3fe0-139">The following code example is an implementation of the object-factory design pattern for registered objects.</span></span> <span data-ttu-id="f3fe0-140">Przy użyciu wzorca fabryka pozwala zarejestrować wiele wystąpień obiektu.</span><span class="sxs-lookup"><span data-stu-id="f3fe0-140">Using the factory pattern enables you to register multiple instances of an object.</span></span> <span data-ttu-id="f3fe0-141">Przykład zawiera dwa obiekty: `SampleComponent`, który jest obiektem aplikacja będzie używać wielu wystąpień, i `SampleComponentFactory`, która zarządza listą `SampleComponent` wystąpień.</span><span class="sxs-lookup"><span data-stu-id="f3fe0-141">The example contains two objects: `SampleComponent`, which is the object the application will use multiple instances of, and `SampleComponentFactory`, which manages a list of `SampleComponent` instances.</span></span>  
  
 [!code-csharp[System.Web.Hosting.ApplicationManager#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Hosting.ApplicationManager/CS/appManagercs.aspx.cs#1)]
 [!code-vb[System.Web.Hosting.ApplicationManager#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Hosting.ApplicationManager/VB/appManagervb.aspx.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="f3fe0-142"><paramref name="physicalPath" /> jest <see langword="null" /></span><span class="sxs-lookup"><span data-stu-id="f3fe0-142"><paramref name="physicalPath" /> is <see langword="null" /></span></span>  
  
<span data-ttu-id="f3fe0-143">—lub—</span><span class="sxs-lookup"><span data-stu-id="f3fe0-143">-or-</span></span> 
 <span data-ttu-id="f3fe0-144"><paramref name="physicalPath" /> nie jest ścieżką prawidłową aplikację.</span><span class="sxs-lookup"><span data-stu-id="f3fe0-144"><paramref name="physicalPath" /> is not a valid application path.</span></span>  
  
<span data-ttu-id="f3fe0-145">—lub—</span><span class="sxs-lookup"><span data-stu-id="f3fe0-145">-or-</span></span> 
 <span data-ttu-id="f3fe0-146"><paramref name="type" /> nie implementuje <see cref="T:System.Web.Hosting.IRegisteredObject" /> interfejsu.</span><span class="sxs-lookup"><span data-stu-id="f3fe0-146"><paramref name="type" /> does not implement the <see cref="T:System.Web.Hosting.IRegisteredObject" /> interface.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="f3fe0-147"><paramref name="appID" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="f3fe0-147"><paramref name="appID" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="f3fe0-148">—lub—</span><span class="sxs-lookup"><span data-stu-id="f3fe0-148">-or-</span></span> 
 <span data-ttu-id="f3fe0-149"><paramref name="type" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="f3fe0-149"><paramref name="type" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="f3fe0-150"><paramref name="failIfExists" /> jest <see langword="true" /> i obiektu określonego typu jest już zarejestrowany.</span><span class="sxs-lookup"><span data-stu-id="f3fe0-150"><paramref name="failIfExists" /> is <see langword="true" /> and an object of the specified type is already registered.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CreateObject">
      <MemberSignature Language="C#" Value="public System.Web.Hosting.IRegisteredObject CreateObject (string appId, Type type, string virtualPath, string physicalPath, bool failIfExists, bool throwOnError);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.Hosting.IRegisteredObject CreateObject(string appId, class System.Type type, string virtualPath, string physicalPath, bool failIfExists, bool throwOnError) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.ApplicationManager.CreateObject(System.String,System.Type,System.String,System.String,System.Boolean,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Web::Hosting::IRegisteredObject ^ CreateObject(System::String ^ appId, Type ^ type, System::String ^ virtualPath, System::String ^ physicalPath, bool failIfExists, bool throwOnError);" />
      <MemberSignature Language="F#" Value="member this.CreateObject : string * Type * string * string * bool * bool -&gt; System.Web.Hosting.IRegisteredObject" Usage="applicationManager.CreateObject (appId, type, virtualPath, physicalPath, failIfExists, throwOnError)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Hosting.IRegisteredObject</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="appId" Type="System.String" />
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="virtualPath" Type="System.String" />
        <Parameter Name="physicalPath" Type="System.String" />
        <Parameter Name="failIfExists" Type="System.Boolean" />
        <Parameter Name="throwOnError" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="appId"><span data-ttu-id="f3fe0-151">Unikatowy identyfikator dla aplikacji, która jest właścicielem obiektu.</span><span class="sxs-lookup"><span data-stu-id="f3fe0-151">The unique identifier for the application that owns the object.</span></span></param>
        <param name="type"><span data-ttu-id="f3fe0-152">Typ obiektu do utworzenia.</span><span class="sxs-lookup"><span data-stu-id="f3fe0-152">The type of the object to create.</span></span></param>
        <param name="virtualPath"><span data-ttu-id="f3fe0-153">Ścieżka wirtualna do aplikacji.</span><span class="sxs-lookup"><span data-stu-id="f3fe0-153">The virtual path to the application.</span></span></param>
        <param name="physicalPath"><span data-ttu-id="f3fe0-154">Ścieżka fizyczna do aplikacji.</span><span class="sxs-lookup"><span data-stu-id="f3fe0-154">The physical path to the application.</span></span></param>
        <param name="failIfExists"><span data-ttu-id="f3fe0-155"><see langword="true" /> Aby zgłosić wyjątek, jeśli obiekt określonego typu jest obecnie zarejestrowany; <see langword="false" /> do zwrócenia istniejący obiekt zarejestrowanych dla określonego typu.</span><span class="sxs-lookup"><span data-stu-id="f3fe0-155"><see langword="true" /> to throw an exception if an object of the specified type is currently registered; <see langword="false" /> to return the existing registered object of the specified type.</span></span></param>
        <param name="throwOnError"><span data-ttu-id="f3fe0-156"><see langword="true" /> zgłaszają wyjątki do obsługi błędów inicjowania; <see langword="false" /> do nie zgłosi wyjątku hosting wyjątkami inicjowania.</span><span class="sxs-lookup"><span data-stu-id="f3fe0-156"><see langword="true" /> to throw exceptions for hosting initialization errors; <see langword="false" /> to not throw hosting initialization exceptions.</span></span></param>
        <summary><span data-ttu-id="f3fe0-157">Tworzy obiekt do domeny określonej aplikacji na podstawie typu, ścieżki wirtualnej i fizycznej, wartość logiczną wskazującą niepowodzenie zachowanie, gdy istnieje już obiekt o określonym typie i wartość logiczną wartość wskazującą, czy błąd podczas inicjowania obsługi są zgłaszane wyjątki.</span><span class="sxs-lookup"><span data-stu-id="f3fe0-157">Creates an object for the specified application domain based on type, virtual and physical paths, a Boolean value indicating failure behavior when an object of the specified type already exists, and a Boolean value indicating whether hosting initialization error exceptions are thrown.</span></span></summary>
        <returns><span data-ttu-id="f3fe0-158">Nowy obiekt z określonym <paramref name="type" />.</span><span class="sxs-lookup"><span data-stu-id="f3fe0-158">A new object of the specified <paramref name="type" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f3fe0-159">To przeciążenie <xref:System.Web.Hosting.ApplicationManager.CreateObject%2A> metoda zapewnia `throwOnError` parametr, który umożliwia formant czy hostingu inicjowania wyjątki zostaną zgłoszone.</span><span class="sxs-lookup"><span data-stu-id="f3fe0-159">This overload of the <xref:System.Web.Hosting.ApplicationManager.CreateObject%2A> method provides the `throwOnError` parameter, which allows you to control whether hosting initialization exceptions are thrown.</span></span> <span data-ttu-id="f3fe0-160">Przeciążenia <xref:System.Web.Hosting.ApplicationManager.CreateObject%2A> metodę, która nie zapewnia `throwOnError` wywołania tego przeciążenia z parametrem ustawionym na `false`.</span><span class="sxs-lookup"><span data-stu-id="f3fe0-160">The overload of the <xref:System.Web.Hosting.ApplicationManager.CreateObject%2A> method that does not provide `throwOnError` calls this overload with the parameter set to `false`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="f3fe0-161"><paramref name="physicalPath" /> jest <see langword="null" /></span><span class="sxs-lookup"><span data-stu-id="f3fe0-161"><paramref name="physicalPath" /> is <see langword="null" /></span></span>  
  
<span data-ttu-id="f3fe0-162">—lub—</span><span class="sxs-lookup"><span data-stu-id="f3fe0-162">-or-</span></span> 
 <span data-ttu-id="f3fe0-163"><paramref name="physicalPath" /> nie jest ścieżką prawidłową aplikację.</span><span class="sxs-lookup"><span data-stu-id="f3fe0-163"><paramref name="physicalPath" /> is not a valid application path.</span></span>  
  
<span data-ttu-id="f3fe0-164">—lub—</span><span class="sxs-lookup"><span data-stu-id="f3fe0-164">-or-</span></span> 
 <span data-ttu-id="f3fe0-165"><paramref name="type" /> nie implementuje <see cref="T:System.Web.Hosting.IRegisteredObject" /> interfejsu.</span><span class="sxs-lookup"><span data-stu-id="f3fe0-165"><paramref name="type" /> does not implement the <see cref="T:System.Web.Hosting.IRegisteredObject" /> interface.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="f3fe0-166"><paramref name="appID" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="f3fe0-166"><paramref name="appID" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="f3fe0-167">—lub—</span><span class="sxs-lookup"><span data-stu-id="f3fe0-167">-or-</span></span> 
 <span data-ttu-id="f3fe0-168"><paramref name="type" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="f3fe0-168"><paramref name="type" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="f3fe0-169"><paramref name="failIfExists" /> jest <see langword="true" /> i obiektu określonego typu jest już zarejestrowany.</span><span class="sxs-lookup"><span data-stu-id="f3fe0-169"><paramref name="failIfExists" /> is <see langword="true" /> and an object of the specified type is already registered.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetAppDomain">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="f3fe0-170">Pobiera domenę aplikacji w określonej aplikacji.</span><span class="sxs-lookup"><span data-stu-id="f3fe0-170">Gets the application domain of a specified application.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetAppDomain">
      <MemberSignature Language="C#" Value="public AppDomain GetAppDomain (string appId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.AppDomain GetAppDomain(string appId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.ApplicationManager.GetAppDomain(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAppDomain (appId As String) As AppDomain" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AppDomain ^ GetAppDomain(System::String ^ appId);" />
      <MemberSignature Language="F#" Value="member this.GetAppDomain : string -&gt; AppDomain" Usage="applicationManager.GetAppDomain appId" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.AppDomain</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="appId" Type="System.String" Index="0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="appId"><span data-ttu-id="f3fe0-171">Unikatowy identyfikator aplikacji.</span><span class="sxs-lookup"><span data-stu-id="f3fe0-171">The unique identifier for the application.</span></span></param>
        <summary><span data-ttu-id="f3fe0-172">Pobiera domeny aplikacji w określonej aplikacji.</span><span class="sxs-lookup"><span data-stu-id="f3fe0-172">Gets the application domain of the specified application.</span></span></summary>
        <returns><span data-ttu-id="f3fe0-173">Domena aplikacji w aplikacji.</span><span class="sxs-lookup"><span data-stu-id="f3fe0-173">The application domain of the application.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAppDomain">
      <MemberSignature Language="C#" Value="public AppDomain GetAppDomain (System.Web.Hosting.IApplicationHost appHost);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.AppDomain GetAppDomain(class System.Web.Hosting.IApplicationHost appHost) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.ApplicationManager.GetAppDomain(System.Web.Hosting.IApplicationHost)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAppDomain (appHost As IApplicationHost) As AppDomain" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AppDomain ^ GetAppDomain(System::Web::Hosting::IApplicationHost ^ appHost);" />
      <MemberSignature Language="F#" Value="member this.GetAppDomain : System.Web.Hosting.IApplicationHost -&gt; AppDomain" Usage="applicationManager.GetAppDomain appHost" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.AppDomain</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="appHost" Type="System.Web.Hosting.IApplicationHost" Index="0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="appHost"><span data-ttu-id="f3fe0-174">Można pobrać domeny aplikacji dla hosta.</span><span class="sxs-lookup"><span data-stu-id="f3fe0-174">The host to get the application domain for.</span></span></param>
        <summary><span data-ttu-id="f3fe0-175">Pobiera domeny aplikacji w aplikacji przy użyciu określonego hosta.</span><span class="sxs-lookup"><span data-stu-id="f3fe0-175">Gets the application domain of an application using the specified host.</span></span></summary>
        <returns><span data-ttu-id="f3fe0-176">Domena aplikacji w aplikacji.</span><span class="sxs-lookup"><span data-stu-id="f3fe0-176">The application domain of the application.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetApplicationManager">
      <MemberSignature Language="C#" Value="public static System.Web.Hosting.ApplicationManager GetApplicationManager ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Hosting.ApplicationManager GetApplicationManager() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.ApplicationManager.GetApplicationManager" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetApplicationManager () As ApplicationManager" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::Hosting::ApplicationManager ^ GetApplicationManager();" />
      <MemberSignature Language="F#" Value="static member GetApplicationManager : unit -&gt; System.Web.Hosting.ApplicationManager" Usage="System.Web.Hosting.ApplicationManager.GetApplicationManager " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Hosting.ApplicationManager</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f3fe0-177">Zwraca pojedyncze wystąpienie <see cref="T:System.Web.Hosting.ApplicationManager" /> obiekt skojarzony z tym procesem hosta ASP.NET.</span><span class="sxs-lookup"><span data-stu-id="f3fe0-177">Returns the single instance of the <see cref="T:System.Web.Hosting.ApplicationManager" /> object associated with this ASP.NET host process.</span></span></summary>
        <returns><span data-ttu-id="f3fe0-178">Pojedyncze wystąpienie <see cref="T:System.Web.Hosting.ApplicationManager" /> obiektu skojarzonego z procesem hosta ASP.NET, który jest uruchomiony.</span><span class="sxs-lookup"><span data-stu-id="f3fe0-178">The single instance of the <see cref="T:System.Web.Hosting.ApplicationManager" /> object associated with the ASP.NET host process that is running.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f3fe0-179">Tylko jedno wystąpienie <xref:System.Web.Hosting.ApplicationManager> obiekt jest tworzony przez proces hosta ASP.NET w domyślnej domeny aplikacji.</span><span class="sxs-lookup"><span data-stu-id="f3fe0-179">Only one instance of the <xref:System.Web.Hosting.ApplicationManager> object is created by an ASP.NET host process in the default application domain.</span></span> <span data-ttu-id="f3fe0-180">Jeśli wystąpienie <xref:System.Web.Hosting.ApplicationManager> klasy nie jest dostępny, <xref:System.Web.Hosting.ApplicationManager.GetApplicationManager%2A> metoda najpierw tworzy wystąpienie <xref:System.Web.Hosting.ApplicationManager> klasy, a następnie zwraca nowo utworzony obiekt.</span><span class="sxs-lookup"><span data-stu-id="f3fe0-180">If an instance of the <xref:System.Web.Hosting.ApplicationManager> class is not available, the <xref:System.Web.Hosting.ApplicationManager.GetApplicationManager%2A> method first creates an instance of the <xref:System.Web.Hosting.ApplicationManager> class and then returns the newly created object.</span></span> <span data-ttu-id="f3fe0-181">Jeśli wystąpienie <xref:System.Web.Hosting.ApplicationManager> klasa została wcześniej utworzona, <xref:System.Web.Hosting.ApplicationManager.GetApplicationManager%2A> metoda zwraca istniejący obiekt.</span><span class="sxs-lookup"><span data-stu-id="f3fe0-181">If an instance of the <xref:System.Web.Hosting.ApplicationManager> class was previously created, the <xref:System.Web.Hosting.ApplicationManager.GetApplicationManager%2A> method returns the existing object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f3fe0-182">Poniższy przykład kodu wykorzystuje <xref:System.Web.Hosting.ApplicationManager.GetApplicationManager%2A> metodę, która pobierze <xref:System.Web.Hosting.ApplicationManager> wystąpienia dla aplikacji sieci Web.</span><span class="sxs-lookup"><span data-stu-id="f3fe0-182">The following code example uses the <xref:System.Web.Hosting.ApplicationManager.GetApplicationManager%2A> method to retrieve the <xref:System.Web.Hosting.ApplicationManager> instance for a Web application.</span></span>  
  
 [!code-aspx-csharp[System.Web.Hosting.ApplicationInfo#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Hosting.ApplicationInfo/CS/applicationInfocs.aspx#1)]
 [!code-aspx-vb[System.Web.Hosting.ApplicationInfo#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Hosting.ApplicationInfo/VB/applicationInfovb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetObject">
      <MemberSignature Language="C#" Value="public System.Web.Hosting.IRegisteredObject GetObject (string appId, Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.Hosting.IRegisteredObject GetObject(string appId, class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.ApplicationManager.GetObject(System.String,System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Web::Hosting::IRegisteredObject ^ GetObject(System::String ^ appId, Type ^ type);" />
      <MemberSignature Language="F#" Value="member this.GetObject : string * Type -&gt; System.Web.Hosting.IRegisteredObject" Usage="applicationManager.GetObject (appId, type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Hosting.IRegisteredObject</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="appId" Type="System.String" />
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="appId"><span data-ttu-id="f3fe0-183">Unikatowy identyfikator dla aplikacji, która jest właścicielem obiektu.</span><span class="sxs-lookup"><span data-stu-id="f3fe0-183">The unique identifier for the application that owns the object.</span></span></param>
        <param name="type"><span data-ttu-id="f3fe0-184">Typ obiektu do zwrócenia.</span><span class="sxs-lookup"><span data-stu-id="f3fe0-184">The type of the object to return.</span></span></param>
        <summary><span data-ttu-id="f3fe0-185">Zwraca obiekt zarejestrowanych dla określonego typu z określonej aplikacji.</span><span class="sxs-lookup"><span data-stu-id="f3fe0-185">Returns the registered object of the specified type from the specified application.</span></span></summary>
        <returns><span data-ttu-id="f3fe0-186">Zarejestrowany obiekt określonego typu lub <see langword="null" /> Jeśli typ nie został zarejestrowany za pomocą wywołania <see cref="M:System.Web.Hosting.ApplicationManager.CreateObject(System.String,System.Type,System.String,System.String,System.Boolean)" /> metody.</span><span class="sxs-lookup"><span data-stu-id="f3fe0-186">The registered object of the specified type; or <see langword="null" /> if the type has not been registered through a call to the <see cref="M:System.Web.Hosting.ApplicationManager.CreateObject(System.String,System.Type,System.String,System.String,System.Boolean)" /> method.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="f3fe0-187"><paramref name="appId" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="f3fe0-187"><paramref name="appId" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="f3fe0-188">—lub—</span><span class="sxs-lookup"><span data-stu-id="f3fe0-188">-or-</span></span> 
 <span data-ttu-id="f3fe0-189"><paramref name="type" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="f3fe0-189"><paramref name="type" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetRunningApplications">
      <MemberSignature Language="C#" Value="public System.Web.Hosting.ApplicationInfo[] GetRunningApplications ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.Hosting.ApplicationInfo[] GetRunningApplications() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.ApplicationManager.GetRunningApplications" />
      <MemberSignature Language="VB.NET" Value="Public Function GetRunningApplications () As ApplicationInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Web::Hosting::ApplicationInfo ^&gt; ^ GetRunningApplications();" />
      <MemberSignature Language="F#" Value="member this.GetRunningApplications : unit -&gt; System.Web.Hosting.ApplicationInfo[]" Usage="applicationManager.GetRunningApplications " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Hosting.ApplicationInfo[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f3fe0-190">Zwraca migawki uruchomionych aplikacji.</span><span class="sxs-lookup"><span data-stu-id="f3fe0-190">Returns a snapshot of running applications.</span></span></summary>
        <returns><span data-ttu-id="f3fe0-191">Tablica <see cref="T:System.Web.Hosting.ApplicationInfo" /> obiektów, które zawierają informacje o aplikacjach zarządzanych przez to <see cref="T:System.Web.Hosting.ApplicationManager" /> wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="f3fe0-191">An array of <see cref="T:System.Web.Hosting.ApplicationInfo" /> objects that contain information about the applications managed by this <see cref="T:System.Web.Hosting.ApplicationManager" /> instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="f3fe0-192">Poniższy przykład kodu wykorzystuje <xref:System.Web.Hosting.ApplicationManager.GetRunningApplications%2A> metodę, aby wyświetlić informacje o aplikacjach zarządzanych przez <xref:System.Web.Hosting.ApplicationManager> wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="f3fe0-192">The following code example uses the <xref:System.Web.Hosting.ApplicationManager.GetRunningApplications%2A> method to display information about the applications managed by an <xref:System.Web.Hosting.ApplicationManager> instance.</span></span>  
  
 [!code-aspx-csharp[System.Web.Hosting.ApplicationInfo#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Hosting.ApplicationInfo/CS/applicationInfocs.aspx#1)]
 [!code-aspx-vb[System.Web.Hosting.ApplicationInfo#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Hosting.ApplicationInfo/VB/applicationInfovb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InitializeLifetimeService">
      <MemberSignature Language="C#" Value="public override object InitializeLifetimeService ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object InitializeLifetimeService() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.ApplicationManager.InitializeLifetimeService" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function InitializeLifetimeService () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ InitializeLifetimeService();" />
      <MemberSignature Language="F#" Value="override this.InitializeLifetimeService : unit -&gt; obj" Usage="applicationManager.InitializeLifetimeService " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f3fe0-193">Zapewnia nieograniczoną domeny aplikacji okres istnienia, uniemożliwiając tworzonych przez dzierżawy.</span><span class="sxs-lookup"><span data-stu-id="f3fe0-193">Gives the application domain an infinite lifetime by preventing a lease from being created.</span></span></summary>
        <returns><span data-ttu-id="f3fe0-194">Zawsze <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="f3fe0-194">Always <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f3fe0-195">Ta metoda zastępuje <xref:System.MarshalByRefObject.InitializeLifetimeService%2A> metody w klasie bazowej.</span><span class="sxs-lookup"><span data-stu-id="f3fe0-195">This method overrides the <xref:System.MarshalByRefObject.InitializeLifetimeService%2A> method in its base class.</span></span> <span data-ttu-id="f3fe0-196">Zawsze zwraca `null` i tym samym uniemożliwia dzierżawy z tworzonych, który może ograniczyć okres istnienia domeny aplikacji.</span><span class="sxs-lookup"><span data-stu-id="f3fe0-196">It always returns `null` and thereby prevents a lease from being created that would limit the application domain's lifetime.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsIdle">
      <MemberSignature Language="C#" Value="public bool IsIdle ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsIdle() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.ApplicationManager.IsIdle" />
      <MemberSignature Language="VB.NET" Value="Public Function IsIdle () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsIdle();" />
      <MemberSignature Language="F#" Value="member this.IsIdle : unit -&gt; bool" Usage="applicationManager.IsIdle " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f3fe0-197">Zwraca wartość wskazującą, czy wszystkie aplikacje hostowane w procesie są w stanie bezczynności, a nie przetwarzania żądań.</span><span class="sxs-lookup"><span data-stu-id="f3fe0-197">Returns a value indicating whether all applications hosted by the process are idle and not processing requests.</span></span></summary>
        <returns><span data-ttu-id="f3fe0-198"><see langword="true" /> w przypadku wszystkich aplikacji w procesie bezczynności (%); w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="f3fe0-198"><see langword="true" /> if all applications in the process are idle; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f3fe0-199"><xref:System.Web.Hosting.ApplicationManager.IsIdle%2A> Metoda zwraca `true` Jeśli wszystkie aplikacje hostowane w procesie są w stanie bezczynności.</span><span class="sxs-lookup"><span data-stu-id="f3fe0-199">The <xref:System.Web.Hosting.ApplicationManager.IsIdle%2A> method returns `true` if all applications hosted by the process are idle.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Open">
      <MemberSignature Language="C#" Value="public void Open ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Open() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.ApplicationManager.Open" />
      <MemberSignature Language="VB.NET" Value="Public Sub Open ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Open();" />
      <MemberSignature Language="F#" Value="member this.Open : unit -&gt; unit" Usage="applicationManager.Open " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f3fe0-200">Licznik odwołań użytkownika wystąpienia menedżera aplikacji zgłasza przyrostu metodą o bezpiecznych wątkach.</span><span class="sxs-lookup"><span data-stu-id="f3fe0-200">Makes a thread-safe increment to the user reference count of the application manager instance.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShutdownAll">
      <MemberSignature Language="C#" Value="public void ShutdownAll ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ShutdownAll() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.ApplicationManager.ShutdownAll" />
      <MemberSignature Language="VB.NET" Value="Public Sub ShutdownAll ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ShutdownAll();" />
      <MemberSignature Language="F#" Value="member this.ShutdownAll : unit -&gt; unit" Usage="applicationManager.ShutdownAll " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f3fe0-201">Zwalnia wszystkie zasoby aplikacji.</span><span class="sxs-lookup"><span data-stu-id="f3fe0-201">Unloads all application resources.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f3fe0-202">Wywoływanie <xref:System.Web.Hosting.ApplicationManager.ShutdownAll%2A> metodą jest równoważne z wywoływaniem <xref:System.Web.Hosting.HostingEnvironment.InitiateShutdown%2A?displayProperty=nameWithType> metoda we wszystkich domenach aplikacji zarządzanych przez to <xref:System.Web.Hosting.ApplicationManager> wystąpienia; jednak <xref:System.Web.Hosting.ApplicationManager.ShutdownAll%2A> metoda może być wywoływana z spoza domeny aplikacji zarządzanej.</span><span class="sxs-lookup"><span data-stu-id="f3fe0-202">Calling the <xref:System.Web.Hosting.ApplicationManager.ShutdownAll%2A> method is equivalent to calling the <xref:System.Web.Hosting.HostingEnvironment.InitiateShutdown%2A?displayProperty=nameWithType> method in all application domains managed by this <xref:System.Web.Hosting.ApplicationManager> instance; however, the <xref:System.Web.Hosting.ApplicationManager.ShutdownAll%2A> method can be called from outside the managed application domains.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShutdownApplication">
      <MemberSignature Language="C#" Value="public void ShutdownApplication (string appId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ShutdownApplication(string appId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.ApplicationManager.ShutdownApplication(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ShutdownApplication (appId As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ShutdownApplication(System::String ^ appId);" />
      <MemberSignature Language="F#" Value="member this.ShutdownApplication : string -&gt; unit" Usage="applicationManager.ShutdownApplication appId" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="appId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="appId"><span data-ttu-id="f3fe0-203">Unikatowy identyfikator aplikacji, aby zwolnić.</span><span class="sxs-lookup"><span data-stu-id="f3fe0-203">The unique identifier of the application to unload.</span></span></param>
        <summary><span data-ttu-id="f3fe0-204">Zwalnia określonej aplikacji.</span><span class="sxs-lookup"><span data-stu-id="f3fe0-204">Unloads the specified application.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f3fe0-205">Wywoływanie <xref:System.Web.Hosting.ApplicationManager.ShutdownApplication%2A> metodą jest równoważne z wywoływaniem <xref:System.Web.Hosting.HostingEnvironment.InitiateShutdown%2A?displayProperty=nameWithType> metodę dla określonej domenie aplikacji; jednak <xref:System.Web.Hosting.ApplicationManager.ShutdownApplication%2A> metoda może być wywoływana z domen zewnętrznych aplikacji zarządzanej.</span><span class="sxs-lookup"><span data-stu-id="f3fe0-205">Calling the <xref:System.Web.Hosting.ApplicationManager.ShutdownApplication%2A> method is equivalent to calling the <xref:System.Web.Hosting.HostingEnvironment.InitiateShutdown%2A?displayProperty=nameWithType> method for a specific application domain; however, the <xref:System.Web.Hosting.ApplicationManager.ShutdownApplication%2A> method can be called from outside managed application domains.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="f3fe0-206"><paramref name="appId" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="f3fe0-206"><paramref name="appId" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="StopObject">
      <MemberSignature Language="C#" Value="public void StopObject (string appId, Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void StopObject(string appId, class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.ApplicationManager.StopObject(System.String,System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void StopObject(System::String ^ appId, Type ^ type);" />
      <MemberSignature Language="F#" Value="member this.StopObject : string * Type -&gt; unit" Usage="applicationManager.StopObject (appId, type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="appId" Type="System.String" />
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="appId"><span data-ttu-id="f3fe0-207">Unikatowy identyfikator dla aplikacji, która jest właścicielem obiektu.</span><span class="sxs-lookup"><span data-stu-id="f3fe0-207">The unique identifier for the application that owns the object.</span></span></param>
        <param name="type"><span data-ttu-id="f3fe0-208">Typ obiektu do zwolnienia.</span><span class="sxs-lookup"><span data-stu-id="f3fe0-208">The type of the object to unload.</span></span></param>
        <summary><span data-ttu-id="f3fe0-209">Usuwa określony obiekt z listy zarejestrowane obiekty w aplikacji.</span><span class="sxs-lookup"><span data-stu-id="f3fe0-209">Removes the specified object from the list of registered objects in an application.</span></span> <span data-ttu-id="f3fe0-210">Jeśli obiekt do usunięcia jest ostatni obiekt pozostałe na liście zarejestrowane obiekty w aplikacji, aplikacja nie jest załadowany.</span><span class="sxs-lookup"><span data-stu-id="f3fe0-210">If the object to be removed is the last remaining object in the list of registered objects in an application, the application is unloaded.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="f3fe0-211"><paramref name="appId" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="f3fe0-211"><paramref name="appId" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="f3fe0-212">—lub—</span><span class="sxs-lookup"><span data-stu-id="f3fe0-212">-or-</span></span> 
 <span data-ttu-id="f3fe0-213"><paramref name="type" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="f3fe0-213"><paramref name="type" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>