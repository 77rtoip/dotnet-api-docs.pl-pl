<Type Name="ApplicationManager" FullName="System.Web.Hosting.ApplicationManager">
  <TypeSignature Language="C#" Value="public sealed class ApplicationManager : MarshalByRefObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ApplicationManager extends System.MarshalByRefObject" />
  <TypeSignature Language="DocId" Value="T:System.Web.Hosting.ApplicationManager" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ApplicationManager&#xA;Inherits MarshalByRefObject" />
  <TypeSignature Language="C++ CLI" Value="public ref class ApplicationManager sealed : MarshalByRefObject" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.MarshalByRefObject</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="fb104-101">Zarządza domen aplikacji platformy ASP.NET dla platformy ASP.NET hosting aplikacji.</span><span class="sxs-lookup"><span data-stu-id="fb104-101">Manages ASP.NET application domains for an ASP.NET hosting application.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fb104-102"><xref:System.Web.Hosting.ApplicationManager> Obiekt zapewnia zarządzanie okresem istnienia obiektów w środowisku macierzystym dla aplikacji ASP.NET.</span><span class="sxs-lookup"><span data-stu-id="fb104-102">The <xref:System.Web.Hosting.ApplicationManager> object provides lifetime management of objects in the hosting environment for an ASP.NET application.</span></span> <span data-ttu-id="fb104-103">Jest on odpowiedzialny za:</span><span class="sxs-lookup"><span data-stu-id="fb104-103">It is responsible for:</span></span>  
  
-   <span data-ttu-id="fb104-104">Aktywowanie i inicjowania aplikacji ASP.NET.</span><span class="sxs-lookup"><span data-stu-id="fb104-104">Activating and initializing ASP.NET applications.</span></span>  
  
-   <span data-ttu-id="fb104-105">Zarządzanie okresem istnienia aplikacji i okres istnienia obiektów zarejestrowany w aplikacji.</span><span class="sxs-lookup"><span data-stu-id="fb104-105">Managing the application lifetime and the lifetime of objects registered in the application.</span></span>  
  
-   <span data-ttu-id="fb104-106">Udostępnianie obiektów używanych przez środowisko macierzyste do przetwarzania żądań aplikacji ASP.NET.</span><span class="sxs-lookup"><span data-stu-id="fb104-106">Exposing objects used by the hosting environment to process ASP.NET application requests.</span></span>  
  
-   <span data-ttu-id="fb104-107">Dostarcza listę aplikacji uruchomionych w procesie hostingu w danym momencie.</span><span class="sxs-lookup"><span data-stu-id="fb104-107">Providing a list of applications running in the hosting process at any given moment.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.ApplicationManager.Close" />
      <MemberSignature Language="VB.NET" Value="Public Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Close();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="fb104-108">Zamyka wszystkie domeny aplikacji.</span><span class="sxs-lookup"><span data-stu-id="fb104-108">Shuts down all application domains.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fb104-109">Jeśli wywołanie <xref:System.Web.Hosting.ApplicationManager.Close%2A> metody zmniejsza liczbę odwołania aplikacji za pomocą Menedżera aplikacji 0 <xref:System.Web.Hosting.ApplicationManager.Close%2A> wywołania metody <xref:System.Web.Hosting.ApplicationManager.ShutdownAll%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="fb104-109">If a call to the <xref:System.Web.Hosting.ApplicationManager.Close%2A> method reduces the reference count of applications using the application manager to 0, the <xref:System.Web.Hosting.ApplicationManager.Close%2A> method calls the <xref:System.Web.Hosting.ApplicationManager.ShutdownAll%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateObject">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="fb104-110">Tworzy obiekt do domeny i obiektu typu określonej aplikacji.</span><span class="sxs-lookup"><span data-stu-id="fb104-110">Creates an object for the specified application domain and object type.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateObject">
      <MemberSignature Language="C#" Value="public System.Web.Hosting.IRegisteredObject CreateObject (System.Web.Hosting.IApplicationHost appHost, Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.Hosting.IRegisteredObject CreateObject(class System.Web.Hosting.IApplicationHost appHost, class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.ApplicationManager.CreateObject(System.Web.Hosting.IApplicationHost,System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Web::Hosting::IRegisteredObject ^ CreateObject(System::Web::Hosting::IApplicationHost ^ appHost, Type ^ type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Hosting.IRegisteredObject</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="appHost" Type="System.Web.Hosting.IApplicationHost" />
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="appHost"><span data-ttu-id="fb104-111"><see cref="T:System.Web.Hosting.IApplicationHost" /> Obiektu.</span><span class="sxs-lookup"><span data-stu-id="fb104-111">An <see cref="T:System.Web.Hosting.IApplicationHost" /> object.</span></span></param>
        <param name="type"><span data-ttu-id="fb104-112">Typ obiektu do utworzenia.</span><span class="sxs-lookup"><span data-stu-id="fb104-112">The type of the object to create.</span></span></param>
        <summary><span data-ttu-id="fb104-113">Tworzy obiekt do domeny określonej aplikacji, na podstawie typu.</span><span class="sxs-lookup"><span data-stu-id="fb104-113">Creates an object for the specified application domain, based on type.</span></span></summary>
        <returns><span data-ttu-id="fb104-114">Nowy obiekt typu określonego w <paramref name="type" />.</span><span class="sxs-lookup"><span data-stu-id="fb104-114">A new object of the type specified in <paramref name="type" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fb104-115"><xref:System.Web.Hosting.ApplicationManager.CreateObject%2A> wprowadzono w programie .NET Framework w wersji 3.5.</span><span class="sxs-lookup"><span data-stu-id="fb104-115"><xref:System.Web.Hosting.ApplicationManager.CreateObject%2A> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="fb104-116">Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="fb104-116">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="fb104-117">Ścieżka fizyczna aplikacji nie istnieje.</span><span class="sxs-lookup"><span data-stu-id="fb104-117">A physical path for the application does not exist.</span></span></exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="fb104-118"><paramref name="appHost" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="fb104-118"><paramref name="appHost" /> is <see langword="null" />.</span></span>  
  
 <span data-ttu-id="fb104-119">\- lub -</span><span class="sxs-lookup"><span data-stu-id="fb104-119">\- or -</span></span>  
  
 <span data-ttu-id="fb104-120"><paramref name="type" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="fb104-120"><paramref name="type" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CreateObject">
      <MemberSignature Language="C#" Value="public System.Web.Hosting.IRegisteredObject CreateObject (string appId, Type type, string virtualPath, string physicalPath, bool failIfExists);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.Hosting.IRegisteredObject CreateObject(string appId, class System.Type type, string virtualPath, string physicalPath, bool failIfExists) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.ApplicationManager.CreateObject(System.String,System.Type,System.String,System.String,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Web::Hosting::IRegisteredObject ^ CreateObject(System::String ^ appId, Type ^ type, System::String ^ virtualPath, System::String ^ physicalPath, bool failIfExists);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Hosting.IRegisteredObject</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="appId" Type="System.String" />
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="virtualPath" Type="System.String" />
        <Parameter Name="physicalPath" Type="System.String" />
        <Parameter Name="failIfExists" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="appId"><span data-ttu-id="fb104-121">Unikatowy identyfikator dla aplikacji, która jest właścicielem obiektu.</span><span class="sxs-lookup"><span data-stu-id="fb104-121">The unique identifier for the application that owns the object.</span></span></param>
        <param name="type"><span data-ttu-id="fb104-122">Typ obiektu do utworzenia.</span><span class="sxs-lookup"><span data-stu-id="fb104-122">The type of the object to create.</span></span></param>
        <param name="virtualPath"><span data-ttu-id="fb104-123">Ścieżka wirtualna do aplikacji.</span><span class="sxs-lookup"><span data-stu-id="fb104-123">The virtual path to the application.</span></span></param>
        <param name="physicalPath"><span data-ttu-id="fb104-124">Ścieżka fizyczna do aplikacji.</span><span class="sxs-lookup"><span data-stu-id="fb104-124">The physical path to the application.</span></span></param>
        <param name="failIfExists">
          <span data-ttu-id="fb104-125"><see langword="true" /> Aby zgłosić wyjątek, jeśli obiekt określonego typu nie jest obecnie zarejestrowany; <see langword="false" /> do zwrócenia istniejącego zarejestrowanego obiektu określonego typu.</span><span class="sxs-lookup"><span data-stu-id="fb104-125"><see langword="true" /> to throw an exception if an object of the specified type is currently registered; <see langword="false" /> to return the existing registered object of the specified type.</span></span></param>
        <summary><span data-ttu-id="fb104-126">Tworzy obiekt do domeny określonej aplikacji na podstawie typu, ścieżki wirtualne i fizyczne i wartość logiczną wskazującą zachowanie awarii, gdy istnieje już obiekt określonego typu.</span><span class="sxs-lookup"><span data-stu-id="fb104-126">Creates an object for the specified application domain based on type, virtual and physical paths, and a Boolean value indicating failure behavior when an object of the specified type already exists.</span></span></summary>
        <returns><span data-ttu-id="fb104-127">Nowy obiekt z określonym <paramref name="type" />.</span><span class="sxs-lookup"><span data-stu-id="fb104-127">A new object of the specified <paramref name="type" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fb104-128"><xref:System.Web.Hosting.ApplicationManager.CreateObject%2A> Metoda jest używana do tworzenia i zarejestrować obiektów w aplikacji.</span><span class="sxs-lookup"><span data-stu-id="fb104-128">The <xref:System.Web.Hosting.ApplicationManager.CreateObject%2A> method is used to create and register objects in the application.</span></span> <span data-ttu-id="fb104-129">Można utworzyć tylko jeden obiekt każdego typu.</span><span class="sxs-lookup"><span data-stu-id="fb104-129">Only one object of each type can be created.</span></span> <span data-ttu-id="fb104-130">Jeśli trzeba utworzyć wiele obiektów tego samego typu, musi implementować fabryka obiektu.</span><span class="sxs-lookup"><span data-stu-id="fb104-130">If you need to create multiple objects of the same type, you must implement an object factory.</span></span> <span data-ttu-id="fb104-131">Aby uzyskać więcej informacji zobacz przykład kodu, w tym temacie.</span><span class="sxs-lookup"><span data-stu-id="fb104-131">For more information, see the code example in this topic.</span></span>  
  
 <span data-ttu-id="fb104-132">Każda aplikacja, identyfikowany przez identyfikator unikatowy aplikacji działa w domenie aplikacji.</span><span class="sxs-lookup"><span data-stu-id="fb104-132">Each application, identified by a unique application identifier, runs in its own application domain.</span></span> <span data-ttu-id="fb104-133"><xref:System.Web.Hosting.ApplicationManager.CreateObject%2A> Metoda tworzy obiekt określonego typu w domenie aplikacji określonego w aplikacji `appID` parametru.</span><span class="sxs-lookup"><span data-stu-id="fb104-133">The <xref:System.Web.Hosting.ApplicationManager.CreateObject%2A> method creates an object of the specified type in the application domain of the application specified in the `appID` parameter.</span></span> <span data-ttu-id="fb104-134">Jeśli domena aplikacji nie istnieje dla określonej aplikacji, utworzono przed utworzeniem obiektu.</span><span class="sxs-lookup"><span data-stu-id="fb104-134">If an application domain does not exist for the specified application, one is created before the object is created.</span></span>  
  
 <span data-ttu-id="fb104-135">`failIfExists` Parametr steruje zachowaniem <xref:System.Web.Hosting.ApplicationManager.CreateObject%2A> metody, gdy istnieje już obiekt określonego typu w aplikacji.</span><span class="sxs-lookup"><span data-stu-id="fb104-135">The `failIfExists` parameter controls the behavior of the <xref:System.Web.Hosting.ApplicationManager.CreateObject%2A> method when an object of the specified type already exists in the application.</span></span> <span data-ttu-id="fb104-136">Gdy `failIfExists` jest `true`, <xref:System.Web.Hosting.ApplicationManager.CreateObject%2A> metoda zgłasza <xref:System.InvalidOperationException> wyjątku.</span><span class="sxs-lookup"><span data-stu-id="fb104-136">When `failIfExists` is `true`, the <xref:System.Web.Hosting.ApplicationManager.CreateObject%2A> method throws an <xref:System.InvalidOperationException> exception.</span></span>  
  
 <span data-ttu-id="fb104-137">Gdy `failIfExists` jest `false`, <xref:System.Web.Hosting.ApplicationManager.CreateObject%2A> metoda zwraca istniejącego zarejestrowanego obiektu określonego typu.</span><span class="sxs-lookup"><span data-stu-id="fb104-137">When `failIfExists` is `false`, the <xref:System.Web.Hosting.ApplicationManager.CreateObject%2A> method returns the existing registered object of the specified type.</span></span>  
  
 <span data-ttu-id="fb104-138"><xref:System.Web.Hosting.ApplicationManager.CreateObject%2A> Metoda wywołuje przeciążenia, które przyjmuje dodatkowych `throwOnError` parametr o `throwOnError` ustawioną `false`.</span><span class="sxs-lookup"><span data-stu-id="fb104-138">The <xref:System.Web.Hosting.ApplicationManager.CreateObject%2A> method calls the overload that takes an additional `throwOnError` parameter with `throwOnError` set to `false`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fb104-139">Poniższy przykładowy kod jest implementacją wzorca projektowego fabryki obiektów dla obiektów w zarejestrowany.</span><span class="sxs-lookup"><span data-stu-id="fb104-139">The following code example is an implementation of the object-factory design pattern for registered objects.</span></span> <span data-ttu-id="fb104-140">Przy użyciu wzorca fabryki można zarejestrować wiele wystąpień obiektu.</span><span class="sxs-lookup"><span data-stu-id="fb104-140">Using the factory pattern enables you to register multiple instances of an object.</span></span> <span data-ttu-id="fb104-141">Przykład zawiera dwa obiekty: `SampleComponent`, która jest obiektem aplikacja będzie używać wielu wystąpień, i `SampleComponentFactory`, który zarządza listą `SampleComponent` wystąpień.</span><span class="sxs-lookup"><span data-stu-id="fb104-141">The example contains two objects: `SampleComponent`, which is the object the application will use multiple instances of, and `SampleComponentFactory`, which manages a list of `SampleComponent` instances.</span></span>  
  
 [!code-csharp[System.Web.Hosting.ApplicationManager#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Hosting.ApplicationManager/CS/appManagercs.aspx.cs#1)]
 [!code-vb[System.Web.Hosting.ApplicationManager#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Hosting.ApplicationManager/VB/appManagervb.aspx.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="fb104-142"><paramref name="physicalPath" /> jest <see langword="null" /></span><span class="sxs-lookup"><span data-stu-id="fb104-142"><paramref name="physicalPath" /> is <see langword="null" /></span></span>  
  
 <span data-ttu-id="fb104-143">\- lub -</span><span class="sxs-lookup"><span data-stu-id="fb104-143">\- or -</span></span>  
  
 <span data-ttu-id="fb104-144"><paramref name="physicalPath" /> nie jest prawidłową ścieżkę aplikacji.</span><span class="sxs-lookup"><span data-stu-id="fb104-144"><paramref name="physicalPath" /> is not a valid application path.</span></span>  
  
 <span data-ttu-id="fb104-145">\- lub -</span><span class="sxs-lookup"><span data-stu-id="fb104-145">\- or -</span></span>  
  
 <span data-ttu-id="fb104-146"><paramref name="type" /> nie implementuje <see cref="T:System.Web.Hosting.IRegisteredObject" /> interfejsu.</span><span class="sxs-lookup"><span data-stu-id="fb104-146"><paramref name="type" /> does not implement the <see cref="T:System.Web.Hosting.IRegisteredObject" /> interface.</span></span></exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="fb104-147"><paramref name="appID" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="fb104-147"><paramref name="appID" /> is <see langword="null" />.</span></span>  
  
 <span data-ttu-id="fb104-148">\- lub -</span><span class="sxs-lookup"><span data-stu-id="fb104-148">\- or -</span></span>  
  
 <span data-ttu-id="fb104-149"><paramref name="type" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="fb104-149"><paramref name="type" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="fb104-150"><paramref name="failIfExists" /> jest <see langword="true" /> i określonego typu obiektu jest już zarejestrowany.</span><span class="sxs-lookup"><span data-stu-id="fb104-150"><paramref name="failIfExists" /> is <see langword="true" /> and an object of the specified type is already registered.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CreateObject">
      <MemberSignature Language="C#" Value="public System.Web.Hosting.IRegisteredObject CreateObject (string appId, Type type, string virtualPath, string physicalPath, bool failIfExists, bool throwOnError);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.Hosting.IRegisteredObject CreateObject(string appId, class System.Type type, string virtualPath, string physicalPath, bool failIfExists, bool throwOnError) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.ApplicationManager.CreateObject(System.String,System.Type,System.String,System.String,System.Boolean,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Web::Hosting::IRegisteredObject ^ CreateObject(System::String ^ appId, Type ^ type, System::String ^ virtualPath, System::String ^ physicalPath, bool failIfExists, bool throwOnError);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Hosting.IRegisteredObject</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="appId" Type="System.String" />
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="virtualPath" Type="System.String" />
        <Parameter Name="physicalPath" Type="System.String" />
        <Parameter Name="failIfExists" Type="System.Boolean" />
        <Parameter Name="throwOnError" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="appId"><span data-ttu-id="fb104-151">Unikatowy identyfikator dla aplikacji, która jest właścicielem obiektu.</span><span class="sxs-lookup"><span data-stu-id="fb104-151">The unique identifier for the application that owns the object.</span></span></param>
        <param name="type"><span data-ttu-id="fb104-152">Typ obiektu do utworzenia.</span><span class="sxs-lookup"><span data-stu-id="fb104-152">The type of the object to create.</span></span></param>
        <param name="virtualPath"><span data-ttu-id="fb104-153">Ścieżka wirtualna do aplikacji.</span><span class="sxs-lookup"><span data-stu-id="fb104-153">The virtual path to the application.</span></span></param>
        <param name="physicalPath"><span data-ttu-id="fb104-154">Ścieżka fizyczna do aplikacji.</span><span class="sxs-lookup"><span data-stu-id="fb104-154">The physical path to the application.</span></span></param>
        <param name="failIfExists">
          <span data-ttu-id="fb104-155"><see langword="true" /> Aby zgłosić wyjątek, jeśli obiekt określonego typu nie jest obecnie zarejestrowany; <see langword="false" /> do zwrócenia istniejącego zarejestrowanego obiektu określonego typu.</span><span class="sxs-lookup"><span data-stu-id="fb104-155"><see langword="true" /> to throw an exception if an object of the specified type is currently registered; <see langword="false" /> to return the existing registered object of the specified type.</span></span></param>
        <param name="throwOnError">
          <span data-ttu-id="fb104-156"><see langword="true" /> Aby zgłaszają wyjątki hostingu błędy inicjowania; <see langword="false" /> do nie zgłosi wyjątku inicjowania wyjątki hostingu.</span><span class="sxs-lookup"><span data-stu-id="fb104-156"><see langword="true" /> to throw exceptions for hosting initialization errors; <see langword="false" /> to not throw hosting initialization exceptions.</span></span></param>
        <summary><span data-ttu-id="fb104-157">Tworzy obiekt do domeny określonej aplikacji na podstawie typu, ścieżki wirtualnej i fizycznej, wartość logiczną wskazującą zachowanie awarii, gdy istnieje już obiekt określonego typu i wartość logiczną wartość wskazującą, czy błąd inicjowania obsługi wyjątki są zgłaszane.</span><span class="sxs-lookup"><span data-stu-id="fb104-157">Creates an object for the specified application domain based on type, virtual and physical paths, a Boolean value indicating failure behavior when an object of the specified type already exists, and a Boolean value indicating whether hosting initialization error exceptions are thrown.</span></span></summary>
        <returns><span data-ttu-id="fb104-158">Nowy obiekt z określonym <paramref name="type" />.</span><span class="sxs-lookup"><span data-stu-id="fb104-158">A new object of the specified <paramref name="type" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fb104-159">To przeciążenie metody <xref:System.Web.Hosting.ApplicationManager.CreateObject%2A> metoda zapewnia `throwOnError` parametr, który umożliwia kontrolowanie, czy są zgłaszane wyjątki inicjowania obsługi.</span><span class="sxs-lookup"><span data-stu-id="fb104-159">This overload of the <xref:System.Web.Hosting.ApplicationManager.CreateObject%2A> method provides the `throwOnError` parameter, which allows you to control whether hosting initialization exceptions are thrown.</span></span> <span data-ttu-id="fb104-160">Przeciążenia <xref:System.Web.Hosting.ApplicationManager.CreateObject%2A> metodę, która nie zapewnia `throwOnError` wywołuje tego przeciążenia z parametrem ustawioną `false`.</span><span class="sxs-lookup"><span data-stu-id="fb104-160">The overload of the <xref:System.Web.Hosting.ApplicationManager.CreateObject%2A> method that does not provide `throwOnError` calls this overload with the parameter set to `false`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="fb104-161"><paramref name="physicalPath" /> jest <see langword="null" /></span><span class="sxs-lookup"><span data-stu-id="fb104-161"><paramref name="physicalPath" /> is <see langword="null" /></span></span>  
  
 <span data-ttu-id="fb104-162">\- lub -</span><span class="sxs-lookup"><span data-stu-id="fb104-162">\- or -</span></span>  
  
 <span data-ttu-id="fb104-163"><paramref name="physicalPath" /> nie jest prawidłową ścieżkę aplikacji.</span><span class="sxs-lookup"><span data-stu-id="fb104-163"><paramref name="physicalPath" /> is not a valid application path.</span></span>  
  
 <span data-ttu-id="fb104-164">\- lub -</span><span class="sxs-lookup"><span data-stu-id="fb104-164">\- or -</span></span>  
  
 <span data-ttu-id="fb104-165"><paramref name="type" /> nie implementuje <see cref="T:System.Web.Hosting.IRegisteredObject" /> interfejsu.</span><span class="sxs-lookup"><span data-stu-id="fb104-165"><paramref name="type" /> does not implement the <see cref="T:System.Web.Hosting.IRegisteredObject" /> interface.</span></span></exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="fb104-166"><paramref name="appID" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="fb104-166"><paramref name="appID" /> is <see langword="null" />.</span></span>  
  
 <span data-ttu-id="fb104-167">\- lub -</span><span class="sxs-lookup"><span data-stu-id="fb104-167">\- or -</span></span>  
  
 <span data-ttu-id="fb104-168"><paramref name="type" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="fb104-168"><paramref name="type" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="fb104-169"><paramref name="failIfExists" /> jest <see langword="true" /> i określonego typu obiektu jest już zarejestrowany.</span><span class="sxs-lookup"><span data-stu-id="fb104-169"><paramref name="failIfExists" /> is <see langword="true" /> and an object of the specified type is already registered.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetAppDomain">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="fb104-170">Pobiera domeny aplikacji w określonej aplikacji.</span><span class="sxs-lookup"><span data-stu-id="fb104-170">Gets the application domain of a specified application.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetAppDomain">
      <MemberSignature Language="C#" Value="public AppDomain GetAppDomain (string appId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.AppDomain GetAppDomain(string appId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.ApplicationManager.GetAppDomain(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAppDomain (appId As String) As AppDomain" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AppDomain ^ GetAppDomain(System::String ^ appId);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.AppDomain</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="appId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="appId"><span data-ttu-id="fb104-171">Unikatowy identyfikator dla aplikacji.</span><span class="sxs-lookup"><span data-stu-id="fb104-171">The unique identifier for the application.</span></span></param>
        <summary><span data-ttu-id="fb104-172">Pobiera domeny aplikacji w określonej aplikacji.</span><span class="sxs-lookup"><span data-stu-id="fb104-172">Gets the application domain of the specified application.</span></span></summary>
        <returns><span data-ttu-id="fb104-173">Domena aplikacji w aplikacji.</span><span class="sxs-lookup"><span data-stu-id="fb104-173">The application domain of the application.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAppDomain">
      <MemberSignature Language="C#" Value="public AppDomain GetAppDomain (System.Web.Hosting.IApplicationHost appHost);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.AppDomain GetAppDomain(class System.Web.Hosting.IApplicationHost appHost) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.ApplicationManager.GetAppDomain(System.Web.Hosting.IApplicationHost)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAppDomain (appHost As IApplicationHost) As AppDomain" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AppDomain ^ GetAppDomain(System::Web::Hosting::IApplicationHost ^ appHost);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.AppDomain</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="appHost" Type="System.Web.Hosting.IApplicationHost" />
      </Parameters>
      <Docs>
        <param name="appHost"><span data-ttu-id="fb104-174">Host, który można uzyskać w domenie aplikacji.</span><span class="sxs-lookup"><span data-stu-id="fb104-174">The host to get the application domain for.</span></span></param>
        <summary><span data-ttu-id="fb104-175">Pobiera domeny aplikacji w aplikacji przy użyciu określonego hosta.</span><span class="sxs-lookup"><span data-stu-id="fb104-175">Gets the application domain of an application using the specified host.</span></span></summary>
        <returns><span data-ttu-id="fb104-176">Domena aplikacji w aplikacji.</span><span class="sxs-lookup"><span data-stu-id="fb104-176">The application domain of the application.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetApplicationManager">
      <MemberSignature Language="C#" Value="public static System.Web.Hosting.ApplicationManager GetApplicationManager ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Hosting.ApplicationManager GetApplicationManager() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.ApplicationManager.GetApplicationManager" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetApplicationManager () As ApplicationManager" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::Hosting::ApplicationManager ^ GetApplicationManager();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Hosting.ApplicationManager</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="fb104-177">Zwraca pojedyncze wystąpienie <see cref="T:System.Web.Hosting.ApplicationManager" /> obiekt skojarzony z tym procesem hosta platformy ASP.NET.</span><span class="sxs-lookup"><span data-stu-id="fb104-177">Returns the single instance of the <see cref="T:System.Web.Hosting.ApplicationManager" /> object associated with this ASP.NET host process.</span></span></summary>
        <returns><span data-ttu-id="fb104-178">Pojedyncze wystąpienie <see cref="T:System.Web.Hosting.ApplicationManager" /> obiekt skojarzony z procesem hosta platformy ASP.NET, który jest uruchomiony.</span><span class="sxs-lookup"><span data-stu-id="fb104-178">The single instance of the <see cref="T:System.Web.Hosting.ApplicationManager" /> object associated with the ASP.NET host process that is running.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fb104-179">Tylko jedno wystąpienie <xref:System.Web.Hosting.ApplicationManager> obiekt jest tworzony przez proces hosta platformy ASP.NET w domyślnej domeny aplikacji.</span><span class="sxs-lookup"><span data-stu-id="fb104-179">Only one instance of the <xref:System.Web.Hosting.ApplicationManager> object is created by an ASP.NET host process in the default application domain.</span></span> <span data-ttu-id="fb104-180">Jeśli wystąpienie <xref:System.Web.Hosting.ApplicationManager> klasy nie jest dostępny, <xref:System.Web.Hosting.ApplicationManager.GetApplicationManager%2A> metody najpierw tworzy wystąpienie <xref:System.Web.Hosting.ApplicationManager> klasy, a następnie zwraca nowo utworzony obiekt.</span><span class="sxs-lookup"><span data-stu-id="fb104-180">If an instance of the <xref:System.Web.Hosting.ApplicationManager> class is not available, the <xref:System.Web.Hosting.ApplicationManager.GetApplicationManager%2A> method first creates an instance of the <xref:System.Web.Hosting.ApplicationManager> class and then returns the newly created object.</span></span> <span data-ttu-id="fb104-181">Jeśli wystąpienie <xref:System.Web.Hosting.ApplicationManager> klasa została wcześniej utworzona, <xref:System.Web.Hosting.ApplicationManager.GetApplicationManager%2A> metoda zwraca obiekt istniejący.</span><span class="sxs-lookup"><span data-stu-id="fb104-181">If an instance of the <xref:System.Web.Hosting.ApplicationManager> class was previously created, the <xref:System.Web.Hosting.ApplicationManager.GetApplicationManager%2A> method returns the existing object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fb104-182">Poniższy przykład kodu wykorzystuje <xref:System.Web.Hosting.ApplicationManager.GetApplicationManager%2A> metoda pobierania <xref:System.Web.Hosting.ApplicationManager> wystąpienia dla aplikacji sieci Web.</span><span class="sxs-lookup"><span data-stu-id="fb104-182">The following code example uses the <xref:System.Web.Hosting.ApplicationManager.GetApplicationManager%2A> method to retrieve the <xref:System.Web.Hosting.ApplicationManager> instance for a Web application.</span></span>  
  
 [!code-aspx-csharp[System.Web.Hosting.ApplicationInfo#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Hosting.ApplicationInfo/CS/applicationInfocs.aspx#1)]
 [!code-aspx-vb[System.Web.Hosting.ApplicationInfo#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Hosting.ApplicationInfo/VB/applicationInfovb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetObject">
      <MemberSignature Language="C#" Value="public System.Web.Hosting.IRegisteredObject GetObject (string appId, Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.Hosting.IRegisteredObject GetObject(string appId, class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.ApplicationManager.GetObject(System.String,System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Web::Hosting::IRegisteredObject ^ GetObject(System::String ^ appId, Type ^ type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Hosting.IRegisteredObject</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="appId" Type="System.String" />
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="appId"><span data-ttu-id="fb104-183">Unikatowy identyfikator dla aplikacji, która jest właścicielem obiektu.</span><span class="sxs-lookup"><span data-stu-id="fb104-183">The unique identifier for the application that owns the object.</span></span></param>
        <param name="type"><span data-ttu-id="fb104-184">Typ obiektu do zwrócenia.</span><span class="sxs-lookup"><span data-stu-id="fb104-184">The type of the object to return.</span></span></param>
        <summary><span data-ttu-id="fb104-185">Zwraca zarejestrowanego obiektu określonego typu z określonej aplikacji.</span><span class="sxs-lookup"><span data-stu-id="fb104-185">Returns the registered object of the specified type from the specified application.</span></span></summary>
        <returns><span data-ttu-id="fb104-186">Zarejestrowany obiekt określonego typu; lub <see langword="null" /> czy typ nie został zarejestrowany za pośrednictwem wywołania <see cref="M:System.Web.Hosting.ApplicationManager.CreateObject(System.String,System.Type,System.String,System.String,System.Boolean)" /> metody.</span><span class="sxs-lookup"><span data-stu-id="fb104-186">The registered object of the specified type; or <see langword="null" /> if the type has not been registered through a call to the <see cref="M:System.Web.Hosting.ApplicationManager.CreateObject(System.String,System.Type,System.String,System.String,System.Boolean)" /> method.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="fb104-187"><paramref name="appId" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="fb104-187"><paramref name="appId" /> is <see langword="null" />.</span></span>  
  
 <span data-ttu-id="fb104-188">—lub—</span><span class="sxs-lookup"><span data-stu-id="fb104-188">—or—</span></span>  
  
 <span data-ttu-id="fb104-189"><paramref name="type" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="fb104-189"><paramref name="type" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetRunningApplications">
      <MemberSignature Language="C#" Value="public System.Web.Hosting.ApplicationInfo[] GetRunningApplications ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.Hosting.ApplicationInfo[] GetRunningApplications() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.ApplicationManager.GetRunningApplications" />
      <MemberSignature Language="VB.NET" Value="Public Function GetRunningApplications () As ApplicationInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Web::Hosting::ApplicationInfo ^&gt; ^ GetRunningApplications();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Hosting.ApplicationInfo[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="fb104-190">Zwraca migawki uruchomionych aplikacji.</span><span class="sxs-lookup"><span data-stu-id="fb104-190">Returns a snapshot of running applications.</span></span></summary>
        <returns><span data-ttu-id="fb104-191">Tablica <see cref="T:System.Web.Hosting.ApplicationInfo" /> obiektów, które zawierają informacje o aplikacjach zarządzanych przez to <see cref="T:System.Web.Hosting.ApplicationManager" /> wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="fb104-191">An array of <see cref="T:System.Web.Hosting.ApplicationInfo" /> objects that contain information about the applications managed by this <see cref="T:System.Web.Hosting.ApplicationManager" /> instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="fb104-192">Poniższy przykład kodu wykorzystuje <xref:System.Web.Hosting.ApplicationManager.GetRunningApplications%2A> metody, aby wyświetlić informacje o aplikacjach zarządzanych przez <xref:System.Web.Hosting.ApplicationManager> wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="fb104-192">The following code example uses the <xref:System.Web.Hosting.ApplicationManager.GetRunningApplications%2A> method to display information about the applications managed by an <xref:System.Web.Hosting.ApplicationManager> instance.</span></span>  
  
 [!code-aspx-csharp[System.Web.Hosting.ApplicationInfo#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Hosting.ApplicationInfo/CS/applicationInfocs.aspx#1)]
 [!code-aspx-vb[System.Web.Hosting.ApplicationInfo#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Hosting.ApplicationInfo/VB/applicationInfovb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InitializeLifetimeService">
      <MemberSignature Language="C#" Value="public override object InitializeLifetimeService ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object InitializeLifetimeService() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.ApplicationManager.InitializeLifetimeService" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function InitializeLifetimeService () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ InitializeLifetimeService();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="fb104-193">Zapewnia domeny aplikacji bez ograniczeń czasowych okres istnienia, zapobiegając tworzona dzierżawy.</span><span class="sxs-lookup"><span data-stu-id="fb104-193">Gives the application domain an infinite lifetime by preventing a lease from being created.</span></span></summary>
        <returns><span data-ttu-id="fb104-194">Zawsze <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="fb104-194">Always <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fb104-195">Ta metoda zastępuje <xref:System.MarshalByRefObject.InitializeLifetimeService%2A> metody w klasie podstawowej.</span><span class="sxs-lookup"><span data-stu-id="fb104-195">This method overrides the <xref:System.MarshalByRefObject.InitializeLifetimeService%2A> method in its base class.</span></span> <span data-ttu-id="fb104-196">Zawsze zwraca `null` i tym samym uniemożliwia dzierżawy z tworzona, która będzie ograniczona istnienia domeny aplikacji.</span><span class="sxs-lookup"><span data-stu-id="fb104-196">It always returns `null` and thereby prevents a lease from being created that would limit the application domain's lifetime.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsIdle">
      <MemberSignature Language="C#" Value="public bool IsIdle ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsIdle() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.ApplicationManager.IsIdle" />
      <MemberSignature Language="VB.NET" Value="Public Function IsIdle () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsIdle();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="fb104-197">Zwraca wartość wskazującą, czy wszystkie aplikacje należące do procesu są w stanie bezczynności i nie przetwarza żądań.</span><span class="sxs-lookup"><span data-stu-id="fb104-197">Returns a value indicating whether all applications hosted by the process are idle and not processing requests.</span></span></summary>
        <returns>
          <span data-ttu-id="fb104-198"><see langword="true" /> Jeśli wszystkie aplikacje w procesie są w stanie bezczynności; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="fb104-198"><see langword="true" /> if all applications in the process are idle; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fb104-199"><xref:System.Web.Hosting.ApplicationManager.IsIdle%2A> Metoda zwraca `true` Jeśli wszystkie aplikacje należące do procesu są w stanie bezczynności.</span><span class="sxs-lookup"><span data-stu-id="fb104-199">The <xref:System.Web.Hosting.ApplicationManager.IsIdle%2A> method returns `true` if all applications hosted by the process are idle.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Open">
      <MemberSignature Language="C#" Value="public void Open ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Open() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.ApplicationManager.Open" />
      <MemberSignature Language="VB.NET" Value="Public Sub Open ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Open();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="fb104-200">Zgłasza przyrostu wątkowo liczebności referencyjnej użytkownika wystąpienia menedżera aplikacji.</span><span class="sxs-lookup"><span data-stu-id="fb104-200">Makes a thread-safe increment to the user reference count of the application manager instance.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShutdownAll">
      <MemberSignature Language="C#" Value="public void ShutdownAll ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ShutdownAll() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.ApplicationManager.ShutdownAll" />
      <MemberSignature Language="VB.NET" Value="Public Sub ShutdownAll ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ShutdownAll();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="fb104-201">Zwalnia wszystkie zasoby aplikacji.</span><span class="sxs-lookup"><span data-stu-id="fb104-201">Unloads all application resources.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fb104-202">Wywoływanie <xref:System.Web.Hosting.ApplicationManager.ShutdownAll%2A> jest odpowiednikiem wywołania metody <xref:System.Web.Hosting.HostingEnvironment.InitiateShutdown%2A?displayProperty=nameWithType> metody we wszystkich domenach aplikacji zarządzanych przez to <xref:System.Web.Hosting.ApplicationManager> wystąpienia; jednak <xref:System.Web.Hosting.ApplicationManager.ShutdownAll%2A> metodę można wywołać z spoza domeny aplikacji zarządzanych.</span><span class="sxs-lookup"><span data-stu-id="fb104-202">Calling the <xref:System.Web.Hosting.ApplicationManager.ShutdownAll%2A> method is equivalent to calling the <xref:System.Web.Hosting.HostingEnvironment.InitiateShutdown%2A?displayProperty=nameWithType> method in all application domains managed by this <xref:System.Web.Hosting.ApplicationManager> instance; however, the <xref:System.Web.Hosting.ApplicationManager.ShutdownAll%2A> method can be called from outside the managed application domains.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShutdownApplication">
      <MemberSignature Language="C#" Value="public void ShutdownApplication (string appId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ShutdownApplication(string appId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.ApplicationManager.ShutdownApplication(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ShutdownApplication (appId As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ShutdownApplication(System::String ^ appId);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="appId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="appId"><span data-ttu-id="fb104-203">Unikatowy identyfikator aplikacji do zwolnienia.</span><span class="sxs-lookup"><span data-stu-id="fb104-203">The unique identifier of the application to unload.</span></span></param>
        <summary><span data-ttu-id="fb104-204">Zwalnia określonej aplikacji.</span><span class="sxs-lookup"><span data-stu-id="fb104-204">Unloads the specified application.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fb104-205">Wywoływanie <xref:System.Web.Hosting.ApplicationManager.ShutdownApplication%2A> jest odpowiednikiem wywołania metody <xref:System.Web.Hosting.HostingEnvironment.InitiateShutdown%2A?displayProperty=nameWithType> metodę dla określonej domenie aplikacji; jednak <xref:System.Web.Hosting.ApplicationManager.ShutdownApplication%2A> metodę można wywołać z domeny zewnętrznej zarządzanych aplikacji.</span><span class="sxs-lookup"><span data-stu-id="fb104-205">Calling the <xref:System.Web.Hosting.ApplicationManager.ShutdownApplication%2A> method is equivalent to calling the <xref:System.Web.Hosting.HostingEnvironment.InitiateShutdown%2A?displayProperty=nameWithType> method for a specific application domain; however, the <xref:System.Web.Hosting.ApplicationManager.ShutdownApplication%2A> method can be called from outside managed application domains.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="fb104-206"><paramref name="appId" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="fb104-206"><paramref name="appId" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="StopObject">
      <MemberSignature Language="C#" Value="public void StopObject (string appId, Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void StopObject(string appId, class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.ApplicationManager.StopObject(System.String,System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void StopObject(System::String ^ appId, Type ^ type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="appId" Type="System.String" />
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="appId"><span data-ttu-id="fb104-207">Unikatowy identyfikator dla aplikacji, która jest właścicielem obiektu.</span><span class="sxs-lookup"><span data-stu-id="fb104-207">The unique identifier for the application that owns the object.</span></span></param>
        <param name="type"><span data-ttu-id="fb104-208">Typ obiektu do zwolnienia.</span><span class="sxs-lookup"><span data-stu-id="fb104-208">The type of the object to unload.</span></span></param>
        <summary><span data-ttu-id="fb104-209">Usuwa określony obiekt z listy zarejestrowanych obiektów w aplikacji.</span><span class="sxs-lookup"><span data-stu-id="fb104-209">Removes the specified object from the list of registered objects in an application.</span></span> <span data-ttu-id="fb104-210">Jeśli obiekt do usunięcia jest ostatni obiekt pozostałe na liście zarejestrowanych obiektów w aplikacji, aplikacja nie jest załadowany.</span><span class="sxs-lookup"><span data-stu-id="fb104-210">If the object to be removed is the last remaining object in the list of registered objects in an application, the application is unloaded.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="fb104-211"><paramref name="appId" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="fb104-211"><paramref name="appId" /> is <see langword="null" />.</span></span>  
  
 <span data-ttu-id="fb104-212">\- lub -</span><span class="sxs-lookup"><span data-stu-id="fb104-212">\- or -</span></span>  
  
 <span data-ttu-id="fb104-213"><paramref name="type" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="fb104-213"><paramref name="type" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>