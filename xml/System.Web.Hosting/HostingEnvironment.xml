<Type Name="HostingEnvironment" FullName="System.Web.Hosting.HostingEnvironment">
  <Metadata><Meta Name="ms.openlocfilehash" Value="57dcfa6b57314578ea9df84cf1bb444054198f07" /><Meta Name="ms.sourcegitcommit" Value="3efce15f3841385ee3ba24bd71ff0c0cf9a47815" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="04/03/2019" /><Meta Name="ms.locfileid" Value="58873620" /></Metadata><TypeSignature Language="C#" Value="public sealed class HostingEnvironment : MarshalByRefObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit HostingEnvironment extends System.MarshalByRefObject" />
  <TypeSignature Language="DocId" Value="T:System.Web.Hosting.HostingEnvironment" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class HostingEnvironment&#xA;Inherits MarshalByRefObject" />
  <TypeSignature Language="C++ CLI" Value="public ref class HostingEnvironment sealed : MarshalByRefObject" />
  <TypeSignature Language="F#" Value="type HostingEnvironment = class&#xA;    inherit MarshalByRefObject" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.MarshalByRefObject</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Oferuje funkcje zarządzania aplikacjami i usług aplikacji w zarządzanej aplikacji w jego domenie aplikacji. Klasa ta nie może być dziedziczona.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Każda domena aplikacji zarządzanej zawiera wystąpienie statyczne <xref:System.Web.Hosting.HostingEnvironment> klasy, która zapewnia dostęp do funkcji zarządzania aplikacjami i usług aplikacji.  
  
   
  
## Examples  
 Poniższy przykład kodu jest stroną internetową, która wyświetla informacje o aplikacji, dostępnym <xref:System.Web.Hosting.HostingEnvironment> obiektu.  
  
 [!code-aspx-csharp[System.Web.Hosting.HostingEnvironment#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Hosting.HostingEnvironment/CS/hostingEnvironmentcs.aspx#1)]
 [!code-aspx-vb[System.Web.Hosting.HostingEnvironment#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Hosting.HostingEnvironment/VB/hostingEnvironmentvb.aspx#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HostingEnvironment ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.HostingEnvironment.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HostingEnvironment();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Hosting.HostingEnvironment" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Hosting.HostingEnvironment.%23ctor%2A> Konstruktor inicjuje <xref:System.Web.Hosting.HostingEnvironment> obiektu. <xref:System.Web.Hosting.HostingEnvironment.%23ctor%2A> Konstruktor jest wywoływany tylko raz przez aplikację <xref:System.Web.Hosting.ApplicationManager> obiektu. Wywoływanie <xref:System.Web.Hosting.HostingEnvironment.%23ctor%2A> Konstruktor więcej niż raz spowoduje <xref:System.InvalidOperationException> zgłoszenie wyjątku.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><see cref="M:System.Web.Hosting.HostingEnvironment.#ctor" /> Konstruktor jest wywoływana więcej niż jeden raz.</exception>
      </Docs>
    </Member>
    <Member MemberName="ApplicationHost">
      <MemberSignature Language="C#" Value="public static System.Web.Hosting.IApplicationHost ApplicationHost { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Web.Hosting.IApplicationHost ApplicationHost" />
      <MemberSignature Language="DocId" Value="P:System.Web.Hosting.HostingEnvironment.ApplicationHost" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ApplicationHost As IApplicationHost" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Web::Hosting::IApplicationHost ^ ApplicationHost { System::Web::Hosting::IApplicationHost ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ApplicationHost : System.Web.Hosting.IApplicationHost" Usage="System.Web.Hosting.HostingEnvironment.ApplicationHost" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Hosting.IApplicationHost</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ta właściwość obsługuje [!INCLUDE[vstecasp](~/includes/vstecasp-md.md)] infrastrukturę i nie jest przeznaczona do użycia bezpośrednio w kodzie.</summary>
        <value>Obiekt, który zawiera informacje o hoście aplikacji.</value>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/f75a72de-e2f2-4a7a-9574-3f278684ea90">Architektura .NET Framework 3.5</related>
      </Docs>
    </Member>
    <Member MemberName="ApplicationID">
      <MemberSignature Language="C#" Value="public static string ApplicationID { get; }" />
      <MemberSignature Language="ILAsm" Value=".property string ApplicationID" />
      <MemberSignature Language="DocId" Value="P:System.Web.Hosting.HostingEnvironment.ApplicationID" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ApplicationID As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::String ^ ApplicationID { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ApplicationID : string" Usage="System.Web.Hosting.HostingEnvironment.ApplicationID" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera unikatowy identyfikator aplikacji.</summary>
        <value>Unikatowy identyfikator aplikacji.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aplikacja musi być uruchomiony z <xref:System.Web.AspNetHostingPermissionLevel> równa wysokiego zaufania w celu uzyskania dostępu do <xref:System.Web.Hosting.HostingEnvironment.ApplicationID%2A> właściwości.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplicationMonitors">
      <MemberSignature Language="C#" Value="public static System.Web.Hosting.ApplicationMonitors ApplicationMonitors { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Web.Hosting.ApplicationMonitors ApplicationMonitors" />
      <MemberSignature Language="DocId" Value="P:System.Web.Hosting.HostingEnvironment.ApplicationMonitors" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ApplicationMonitors As ApplicationMonitors" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Web::Hosting::ApplicationMonitors ^ ApplicationMonitors { System::Web::Hosting::ApplicationMonitors ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ApplicationMonitors : System.Web.Hosting.ApplicationMonitors" Usage="System.Web.Hosting.HostingEnvironment.ApplicationMonitors" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Hosting.ApplicationMonitors</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera grupy wymienne monitora obiektów używanych przez podsystemów ASP.NET do utrzymania kondycji aplikacji.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplicationPhysicalPath">
      <MemberSignature Language="C#" Value="public static string ApplicationPhysicalPath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property string ApplicationPhysicalPath" />
      <MemberSignature Language="DocId" Value="P:System.Web.Hosting.HostingEnvironment.ApplicationPhysicalPath" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ApplicationPhysicalPath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::String ^ ApplicationPhysicalPath { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ApplicationPhysicalPath : string" Usage="System.Web.Hosting.HostingEnvironment.ApplicationPhysicalPath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera ścieżkę fizyczną na dysku do katalogu aplikacji.</summary>
        <value>Fizyczna ścieżka na dysku do katalogu aplikacji.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład kodu wykorzystuje <xref:System.Web.Hosting.HostingEnvironment.ApplicationPhysicalPath%2A> właściwość, aby zbudować ścieżki do pliku danych w katalogu App_Data aplikacji. Pełny kod wymagany, aby uruchomić przykład, można wyświetlić w sekcji przykład <xref:System.Web.Hosting.VirtualPathProvider> temat klasy.  
  
 [!code-csharp[System.Web.Hosting.VirtualPathProvider#27](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.hosting.virtualpathprovider/CS/SamplePathProvider.cs#27)]
 [!code-vb[System.Web.Hosting.VirtualPathProvider#27](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.hosting.virtualpathprovider/VB/SamplePathProvider.vb#27)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplicationVirtualPath">
      <MemberSignature Language="C#" Value="public static string ApplicationVirtualPath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property string ApplicationVirtualPath" />
      <MemberSignature Language="DocId" Value="P:System.Web.Hosting.HostingEnvironment.ApplicationVirtualPath" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ApplicationVirtualPath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::String ^ ApplicationVirtualPath { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ApplicationVirtualPath : string" Usage="System.Web.Hosting.HostingEnvironment.ApplicationVirtualPath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera ścieżkę wirtualną katalogu głównego aplikacji.</summary>
        <value>Ścieżka wirtualna katalogu głównego aplikacji z nie ukośnika (/).</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Hosting.HostingEnvironment.ApplicationVirtualPath%2A> Zawsze zwraca wartość właściwości "`/"` jako pierwszego znaku zwróconej wartości. Jeśli aplikacja znajduje się w katalogu głównym witryny sieci Web, wartość zwracana jest po prostu "`/"`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Cache">
      <MemberSignature Language="C#" Value="public static System.Web.Caching.Cache Cache { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Web.Caching.Cache Cache" />
      <MemberSignature Language="DocId" Value="P:System.Web.Hosting.HostingEnvironment.Cache" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Cache As Cache" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Web::Caching::Cache ^ Cache { System::Web::Caching::Cache ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Cache : System.Web.Caching.Cache" Usage="System.Web.Hosting.HostingEnvironment.Cache" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Caching.Cache</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera <see cref="T:System.Web.Caching.Cache" /> wystąpienia dla bieżącej aplikacji.</summary>
        <value>Bieżący <see cref="T:System.Web.Caching.Cache" /> wystąpienia.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DecrementBusyCount">
      <MemberSignature Language="C#" Value="public static void DecrementBusyCount ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DecrementBusyCount() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.HostingEnvironment.DecrementBusyCount" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub DecrementBusyCount ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void DecrementBusyCount();" />
      <MemberSignature Language="F#" Value="static member DecrementBusyCount : unit -&gt; unit" Usage="System.Web.Hosting.HostingEnvironment.DecrementBusyCount " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zmniejsza liczbę zajętych obiektów w środowisku hostowanym przez jeden.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Kiedy obiekt zarejestrowanych zajęty zakończy pracę, wywołuje <xref:System.Web.Hosting.HostingEnvironment.DecrementBusyCount%2A> metody w celu sygnalizowania, że <xref:System.Web.Hosting.HostingEnvironment> obiektu o zakończeniu przetwarzania i w celu zmniejszenia liczby obiektów zajęta przez jeden.  
  
 Jeśli zajęty, liczba jest większa od zera, hostingu aplikacji będzie nie przekraczają limit czasu, nawet jeśli nie ma oczekujących żądań.  
  
 Musi być wywołaniem do <xref:System.Web.Hosting.HostingEnvironment.DecrementBusyCount%2A> metody dla każdego wywołania <xref:System.Web.Hosting.HostingEnvironment.IncrementBusyCount%2A> metody.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Impersonate">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Umożliwia kodu personifikować innego użytkownika.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Impersonate">
      <MemberSignature Language="C#" Value="public static IDisposable Impersonate ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IDisposable Impersonate() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.HostingEnvironment.Impersonate" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Impersonate () As IDisposable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IDisposable ^ Impersonate();" />
      <MemberSignature Language="F#" Value="static member Impersonate : unit -&gt; IDisposable" Usage="System.Web.Hosting.HostingEnvironment.Impersonate " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IDisposable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Personifikuje użytkownika reprezentowanego przez tożsamość aplikacji.</summary>
        <returns><see cref="T:System.IDisposable" /> Obiekt, który reprezentuje użytkownika Windows przed personifikacji; może to obiekt, można użyć do przywrócenia kontekście użytkownika oryginalnego.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Web.HttpException">Nie można spersonifikować procesu.</exception>
      </Docs>
    </Member>
    <Member MemberName="Impersonate">
      <MemberSignature Language="C#" Value="public static IDisposable Impersonate (IntPtr token);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IDisposable Impersonate(native int token) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.HostingEnvironment.Impersonate(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Impersonate (token As IntPtr) As IDisposable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IDisposable ^ Impersonate(IntPtr token);" />
      <MemberSignature Language="F#" Value="static member Impersonate : nativeint -&gt; IDisposable" Usage="System.Web.Hosting.HostingEnvironment.Impersonate token" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IDisposable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="token" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="token">Uchwyt token konta Windows.</param>
        <summary>Personifikuje użytkownika reprezentowanego przez określony token użytkownika.</summary>
        <returns><see cref="T:System.IDisposable" /> Obiekt, który reprezentuje użytkownika Windows przed personifikacji; może to obiekt, można użyć do przywrócenia kontekście użytkownika oryginalnego.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Web.HttpException">Nie można spersonifikować procesu.</exception>
      </Docs>
    </Member>
    <Member MemberName="Impersonate">
      <MemberSignature Language="C#" Value="public static IDisposable Impersonate (IntPtr userToken, string virtualPath);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IDisposable Impersonate(native int userToken, string virtualPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.HostingEnvironment.Impersonate(System.IntPtr,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Impersonate (userToken As IntPtr, virtualPath As String) As IDisposable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IDisposable ^ Impersonate(IntPtr userToken, System::String ^ virtualPath);" />
      <MemberSignature Language="F#" Value="static member Impersonate : nativeint * string -&gt; IDisposable" Usage="System.Web.Hosting.HostingEnvironment.Impersonate (userToken, virtualPath)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IDisposable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="userToken" Type="System.IntPtr" />
        <Parameter Name="virtualPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="userToken">Uchwyt token konta Windows.</param>
        <param name="virtualPath">Ścieżka do żądanego zasobu.</param>
        <summary>Personifikuje użytkownika określonego przez ustawienia konfiguracji dla określonej ścieżki wirtualnej lub określony token użytkownika.</summary>
        <returns><see cref="T:System.IDisposable" /> Obiekt, który reprezentuje użytkownika Windows przed personifikacji; może to obiekt, można użyć do przywrócenia kontekście użytkownika oryginalnego.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Hosting.HostingEnvironment.Impersonate%2A> Metoda personifikuje użytkownika, które powstały po zastosowaniu wszystkich elementów w ustawieniach konfiguracji wpływających na określonej ścieżki wirtualnej. Jeśli `identity` element nie jest określony dla ścieżki wirtualnej <xref:System.Web.Hosting.HostingEnvironment.Impersonate%2A> metoda personifikuje określonego konta Windows.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">Nie można spersonifikować procesu.</exception>
      </Docs>
    </Member>
    <Member MemberName="InClientBuildManager">
      <MemberSignature Language="C#" Value="public static bool InClientBuildManager { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool InClientBuildManager" />
      <MemberSignature Language="DocId" Value="P:System.Web.Hosting.HostingEnvironment.InClientBuildManager" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property InClientBuildManager As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool InClientBuildManager { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.InClientBuildManager : bool" Usage="System.Web.Hosting.HostingEnvironment.InClientBuildManager" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość wskazującą, czy środowisko hostingu ma dostęp do platformy ASP.NET, system kompilacji.</summary>
        <value><see langword="true" /> Jeśli domena aplikacji jest domeny aplikacji ASP.NET hostowane, które są używane w <see langword="ClientBuildManager" /> scenariusze; w przeciwnym razie <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IncrementBusyCount">
      <MemberSignature Language="C#" Value="public static void IncrementBusyCount ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void IncrementBusyCount() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.HostingEnvironment.IncrementBusyCount" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub IncrementBusyCount ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void IncrementBusyCount();" />
      <MemberSignature Language="F#" Value="static member IncrementBusyCount : unit -&gt; unit" Usage="System.Web.Hosting.HostingEnvironment.IncrementBusyCount " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Liczba zajętych obiekty w środowisku hostowanym zwiększa się o jeden.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sygnał zarejestrowane obiekty <xref:System.Web.Hosting.HostingEnvironment> obiekt, który jest uruchomiony i zwiększenia liczby obiektów zajęta przez jeden.  
  
 Jeśli zajęty, liczba jest większa od zera, hostingu aplikacji będzie nie przekraczają limit czasu, nawet jeśli nie ma oczekujących żądań.  
  
 Musi być wywołaniem do <xref:System.Web.Hosting.HostingEnvironment.DecrementBusyCount%2A> metody dla każdego wywołania <xref:System.Web.Hosting.HostingEnvironment.IncrementBusyCount%2A> metody.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InitializationException">
      <MemberSignature Language="C#" Value="public static Exception InitializationException { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Exception InitializationException" />
      <MemberSignature Language="DocId" Value="P:System.Web.Hosting.HostingEnvironment.InitializationException" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property InitializationException As Exception" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property Exception ^ InitializationException { Exception ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.InitializationException : Exception" Usage="System.Web.Hosting.HostingEnvironment.InitializationException" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wyjątek podczas inicjowania <see cref="T:System.Web.Hosting.HostingEnvironment" /> obiektu.</summary>
        <value>Wyjątek podczas inicjowania <see cref="T:System.Web.Hosting.HostingEnvironment" /> obiektu. Jeśli żaden wyjątek został zgłoszony, zwraca <see langword="null" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InitializeLifetimeService">
      <MemberSignature Language="C#" Value="public override object InitializeLifetimeService ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object InitializeLifetimeService() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.HostingEnvironment.InitializeLifetimeService" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function InitializeLifetimeService () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ InitializeLifetimeService();" />
      <MemberSignature Language="F#" Value="override this.InitializeLifetimeService : unit -&gt; obj" Usage="hostingEnvironment.InitializeLifetimeService " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zapewnia <see cref="T:System.Web.Hosting.HostingEnvironment" /> obiektu przez cały okres istnienia, uniemożliwiając tworzonych przez dzierżawy.</summary>
        <returns>Zawsze <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda zastępuje <xref:System.MarshalByRefObject.InitializeLifetimeService%2A> metody w klasie bazowej. Zawsze zwraca `null` i uniemożliwia dzierżawy z tworzony, która będzie ograniczona <xref:System.Web.Hosting.HostingEnvironment> istnienia obiektu.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InitiateShutdown">
      <MemberSignature Language="C#" Value="public static void InitiateShutdown ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void InitiateShutdown() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.HostingEnvironment.InitiateShutdown" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub InitiateShutdown ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void InitiateShutdown();" />
      <MemberSignature Language="F#" Value="static member InitiateShutdown : unit -&gt; unit" Usage="System.Web.Hosting.HostingEnvironment.InitiateShutdown " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Rozpoczyna zamykanie aplikacji sieci web skojarzony z tym hostem i usuwa zarejestrowane obiekty z systemu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Web.Hosting.HostingEnvironment.InitiateShutdown%2A> metodę, aby zatrzymać domeny aplikacji sieci web i usuń wszelkie obiekty zarejestrowane w usłudze <xref:System.Web.Hosting.HostingEnvironment.RegisterObject%2A> metody. Ta metoda zwraca natychmiast, przed zakończeniem wyłączenia.  
  
 <xref:System.Web.Hosting.IRegisteredObject.Stop%2A> Metoda jest wywoływana dla każdego zarejestrowanego obiektu z parametrem przekazana wartość `false` umożliwia każdy zarejestrowany obiekt zamknięcia asynchronicznie. Po okresie oczekiwania przez czas określony w `shutdownTimeout` atrybutu `<hostingEnvironment>` element konfiguracji <xref:System.Web.Hosting.IRegisteredObject.Stop%2A> jest ponownie wywoływana metoda z parametrem przekazana wartość `true` dla każdego zarejestrowanego obiektu pozostałych.  
  
 Gdy wszystkie zarejestrowane obiekty została zakończona, zamykanie, <xref:System.Web.Hosting.HostingEnvironment> obiektów zamykania domeny aplikacji.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDevelopmentEnvironment">
      <MemberSignature Language="C#" Value="public static bool IsDevelopmentEnvironment { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool IsDevelopmentEnvironment" />
      <MemberSignature Language="DocId" Value="P:System.Web.Hosting.HostingEnvironment.IsDevelopmentEnvironment" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property IsDevelopmentEnvironment As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool IsDevelopmentEnvironment { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsDevelopmentEnvironment : bool" Usage="System.Web.Hosting.HostingEnvironment.IsDevelopmentEnvironment" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość wskazującą, czy bieżąca aplikacja znajduje się w środowisku deweloperskim.</summary>
        <value><see langword="true" /> Jeśli aplikacja znajduje się w środowisku deweloperskim; w przeciwnym razie <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsHosted">
      <MemberSignature Language="C#" Value="public static bool IsHosted { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool IsHosted" />
      <MemberSignature Language="DocId" Value="P:System.Web.Hosting.HostingEnvironment.IsHosted" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property IsHosted As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool IsHosted { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsHosted : bool" Usage="System.Web.Hosting.HostingEnvironment.IsHosted" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość wskazującą, czy bieżącej domeny aplikacji jest hostowany przez <see cref="T:System.Web.Hosting.ApplicationManager" /> obiektu.</summary>
        <value><see langword="true" /> Jeśli domena aplikacji jest hostowana przez <see cref="T:System.Web.Hosting.ApplicationManager" /> obiektu; w przeciwnym razie <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MapPath">
      <MemberSignature Language="C#" Value="public static string MapPath (string virtualPath);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string MapPath(string virtualPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.HostingEnvironment.MapPath(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function MapPath (virtualPath As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ MapPath(System::String ^ virtualPath);" />
      <MemberSignature Language="F#" Value="static member MapPath : string -&gt; string" Usage="System.Web.Hosting.HostingEnvironment.MapPath virtualPath" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="virtualPath">Ścieżka wirtualna (bezwzględny lub względny).</param>
        <summary>Mapuje ścieżkę wirtualną do ścieżki fizycznej na serwerze.</summary>
        <returns>Ścieżka fizyczna na serwerze określonym przez <paramref name="virtualPath" />.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Web.HttpServerUtility.MapPath(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="MaxConcurrentRequestsPerCPU">
      <MemberSignature Language="C#" Value="public static int MaxConcurrentRequestsPerCPU { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property int32 MaxConcurrentRequestsPerCPU" />
      <MemberSignature Language="DocId" Value="P:System.Web.Hosting.HostingEnvironment.MaxConcurrentRequestsPerCPU" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property MaxConcurrentRequestsPerCPU As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property int MaxConcurrentRequestsPerCPU { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.MaxConcurrentRequestsPerCPU : int with get, set" Usage="System.Web.Hosting.HostingEnvironment.MaxConcurrentRequestsPerCPU" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia maksymalną równoczesnych żądań dla każdego procesora CPU.</summary>
        <value>Maksymalna liczba równoczesnych żądań na CPU.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxConcurrentThreadsPerCPU">
      <MemberSignature Language="C#" Value="public static int MaxConcurrentThreadsPerCPU { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property int32 MaxConcurrentThreadsPerCPU" />
      <MemberSignature Language="DocId" Value="P:System.Web.Hosting.HostingEnvironment.MaxConcurrentThreadsPerCPU" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property MaxConcurrentThreadsPerCPU As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property int MaxConcurrentThreadsPerCPU { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.MaxConcurrentThreadsPerCPU : int with get, set" Usage="System.Web.Hosting.HostingEnvironment.MaxConcurrentThreadsPerCPU" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia maksymalną współbieżnych wątków na procesor CPU.</summary>
        <value>Maksymalna liczba współbieżnych wątków na procesor CPU.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MessageReceived">
      <MemberSignature Language="C#" Value="public static void MessageReceived ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void MessageReceived() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.HostingEnvironment.MessageReceived" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub MessageReceived ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void MessageReceived();" />
      <MemberSignature Language="F#" Value="static member MessageReceived : unit -&gt; unit" Usage="System.Web.Hosting.HostingEnvironment.MessageReceived " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Ta metoda obsługuje [!INCLUDE[vstecasp](~/includes/vstecasp-md.md)] infrastrukturę i nie jest przeznaczona do użycia bezpośrednio w kodzie.</summary>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/f75a72de-e2f2-4a7a-9574-3f278684ea90">Architektura .NET Framework 3.5</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="QueueBackgroundWorkItem">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Planuje zadania, które mogą być uruchamiane w tle, niezależnie od każdego żądania.  
  
Nie przechodzi tej przeciążonej metody <see cref="T:System.Threading.ExecutionContext" /> lub <see cref="T:System.Security.SecurityContext" /> z obiekt wywołujący, aby obiekt wywoływany. W związku z tym, elementy członkowskie z tych obiektów, takich jak <see cref="P:System.Threading.Thread.CurrentPrincipal" /> właściwości, nie będą przepływać od elementu wywołującego do obiekt wywoływany.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="QueueBackgroundWorkItem">
      <MemberSignature Language="C#" Value="public static void QueueBackgroundWorkItem (Action&lt;System.Threading.CancellationToken&gt; workItem);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void QueueBackgroundWorkItem(class System.Action`1&lt;valuetype System.Threading.CancellationToken&gt; workItem) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.HostingEnvironment.QueueBackgroundWorkItem(System.Action{System.Threading.CancellationToken})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub QueueBackgroundWorkItem (workItem As Action(Of CancellationToken))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void QueueBackgroundWorkItem(Action&lt;System::Threading::CancellationToken&gt; ^ workItem);" />
      <MemberSignature Language="F#" Value="static member QueueBackgroundWorkItem : Action&lt;System.Threading.CancellationToken&gt; -&gt; unit" Usage="System.Web.Hosting.HostingEnvironment.QueueBackgroundWorkItem workItem" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="workItem" Type="System.Action&lt;System.Threading.CancellationToken&gt;" Index="0" FrameworkAlternate="netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="workItem">Jednostka wykonania.</param>
        <summary>Planuje zadania, które mogą być uruchamiane w tle, niezależnie od każdego żądania.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Różni się od normalnych elementu roboczego dla puli wątków, w tym ASP.NET może przechowywać informacje o ile pracy elementów zarejestrowanych za pośrednictwem tego interfejsu API są aktualnie uruchomione i środowisko uruchomieniowe ASP.NET podejmie próbę opóźnienie zamknięcia, aż te elementy robocze została zakończona, wykonywanie elementu AppDomain. Nie można wywołać tego interfejsu API spoza domeny aplikacji zarządzanych przez program ASP.NET. Podany token anulowania zostanie zasygnalizowane, gdy dana aplikacja jest zamykana.  
  
 <xref:System.Web.Hosting.HostingEnvironment.QueueBackgroundWorkItem%2A> Trwa zwrotnym zwracającą zadanie; element roboczy będą uznawane za gotowe podczas wywołania zwrotnego zwraca.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="QueueBackgroundWorkItem">
      <MemberSignature Language="C#" Value="public static void QueueBackgroundWorkItem (Func&lt;System.Threading.CancellationToken,System.Threading.Tasks.Task&gt; workItem);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void QueueBackgroundWorkItem(class System.Func`2&lt;valuetype System.Threading.CancellationToken, class System.Threading.Tasks.Task&gt; workItem) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.HostingEnvironment.QueueBackgroundWorkItem(System.Func{System.Threading.CancellationToken,System.Threading.Tasks.Task})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub QueueBackgroundWorkItem (workItem As Func(Of CancellationToken, Task))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void QueueBackgroundWorkItem(Func&lt;System::Threading::CancellationToken, System::Threading::Tasks::Task ^&gt; ^ workItem);" />
      <MemberSignature Language="F#" Value="static member QueueBackgroundWorkItem : Func&lt;System.Threading.CancellationToken, System.Threading.Tasks.Task&gt; -&gt; unit" Usage="System.Web.Hosting.HostingEnvironment.QueueBackgroundWorkItem workItem" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="workItem" Type="System.Func&lt;System.Threading.CancellationToken,System.Threading.Tasks.Task&gt;" Index="0" FrameworkAlternate="netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="workItem">Jednostka wykonania.</param>
        <summary>Planuje zadania, które mogą być uruchamiane w tle, niezależnie od każdego żądania.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Różni się od normalnych elementu roboczego dla puli wątków, w tym ASP.NET może przechowywać informacje o ile pracy elementów zarejestrowanych za pośrednictwem tego interfejsu API są aktualnie uruchomione i środowisko uruchomieniowe ASP.NET podejmie próbę opóźnienie zamknięcia, aż te elementy robocze została zakończona, wykonywanie elementu AppDomain. Nie można wywołać tego interfejsu API spoza domeny aplikacji zarządzanych przez program ASP.NET. Podany token anulowania zostanie zasygnalizowane, gdy dana aplikacja jest zamykana.  
  
 <xref:System.Web.Hosting.HostingEnvironment.QueueBackgroundWorkItem%2A> Trwa zwrotnym zwracającą zadanie; element roboczy będą uznawane za gotowe podczas zwracane zadanie przechodzi w stan końcowy.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RegisterObject">
      <MemberSignature Language="C#" Value="public static void RegisterObject (System.Web.Hosting.IRegisteredObject obj);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RegisterObject(class System.Web.Hosting.IRegisteredObject obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.HostingEnvironment.RegisterObject(System.Web.Hosting.IRegisteredObject)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RegisterObject (obj As IRegisteredObject)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RegisterObject(System::Web::Hosting::IRegisteredObject ^ obj);" />
      <MemberSignature Language="F#" Value="static member RegisterObject : System.Web.Hosting.IRegisteredObject -&gt; unit" Usage="System.Web.Hosting.HostingEnvironment.RegisterObject obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Web.Hosting.IRegisteredObject" />
      </Parameters>
      <Docs>
        <param name="obj">Obiekt do rejestracji.</param>
        <summary>Umieszcza obiekt na liście zarejestrowane obiekty dla aplikacji.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Hosting.ApplicationManager> Klasa umożliwia metod spoza bieżącej domeny aplikacji do tworzenia, zarządzania i niszczy obiekty znajdujące się w bieżącej domenie aplikacji. <xref:System.Web.Hosting.HostingEnvironment.RegisterObject%2A> Metoda jest używana do rejestrowania utworzonych wcześniej obiektów przy użyciu środowiska hostowania. Obiekty zarejestrowane w usłudze <xref:System.Web.Hosting.HostingEnvironment.RegisterObject%2A> musi implementować metody <xref:System.Web.Hosting.IRegisteredObject> interfejsu.  
  
 Aby użyć obiektu zarejestrowanych, wykonaj następujące kroki:  
  
1.  Utwórz nowe wystąpienie obiektu zarejestrowanego przez wywołanie metody <xref:System.Web.Hosting.ApplicationManager.CreateObject%2A?displayProperty=nameWithType> metody.  
  
2.  Wywołaj metodę specyficznych dla typu, można zainicjować nowy obiekt. Metoda inicjująca wywołać <xref:System.Web.Hosting.HostingEnvironment.RegisterObject%2A> metodę, aby dodać obiekt do listy zarejestrowanych obiektów.  
  
3.  Wywołaj <xref:System.Web.Hosting.ApplicationManager.GetObject%2A?displayProperty=nameWithType> metodę, aby przywrócić zarejestrowanych obiektu, gdy jest to wymagane.  
  
4.  Jeśli chcesz zatrzymać obiektu, wywołaj <xref:System.Web.Hosting.ApplicationManager.StopObject%2A?displayProperty=nameWithType> metody. <xref:System.Web.Hosting.ApplicationManager.StopObject%2A?displayProperty=nameWithType> Metoda z kolei wywołuje <xref:System.Web.Hosting.IRegisteredObject.Stop%2A?displayProperty=nameWithType> metody.  
  
5.  W <xref:System.Web.Hosting.IRegisteredObject.Stop%2A?displayProperty=nameWithType> metody mają swoje wywołanie obiektu <xref:System.Web.Hosting.HostingEnvironment.UnregisterObject%2A> metody.  
  
   
  
## Examples  
 Poniższy przykład kodu jest implementacją `Start` metody dla obiektu zarejestrowane. Pełny kod wymagany, aby uruchomić przykład, można wyświetlić w sekcji przykład <xref:System.Web.Hosting.IRegisteredObject> interfejs ogólny temat.  
  
 [!code-csharp[System.Web.Hosting.ApplicationManager#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Hosting.ApplicationManager/CS/appManagercs.aspx.cs#2)]
 [!code-vb[System.Web.Hosting.ApplicationManager#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Hosting.ApplicationManager/VB/appManagervb.aspx.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.Hosting.HostingEnvironment.UnregisterObject(System.Web.Hosting.IRegisteredObject)" />
        <altmember cref="T:System.Web.Hosting.IRegisteredObject" />
        <altmember cref="M:System.Web.Hosting.ApplicationManager.CreateObject(System.String,System.Type,System.String,System.String,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="RegisterVirtualPathProvider">
      <MemberSignature Language="C#" Value="public static void RegisterVirtualPathProvider (System.Web.Hosting.VirtualPathProvider virtualPathProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RegisterVirtualPathProvider(class System.Web.Hosting.VirtualPathProvider virtualPathProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.HostingEnvironment.RegisterVirtualPathProvider(System.Web.Hosting.VirtualPathProvider)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RegisterVirtualPathProvider(System::Web::Hosting::VirtualPathProvider ^ virtualPathProvider);" />
      <MemberSignature Language="F#" Value="static member RegisterVirtualPathProvider : System.Web.Hosting.VirtualPathProvider -&gt; unit" Usage="System.Web.Hosting.HostingEnvironment.RegisterVirtualPathProvider virtualPathProvider" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualPathProvider" Type="System.Web.Hosting.VirtualPathProvider" />
      </Parameters>
      <Docs>
        <param name="virtualPathProvider">Nowy <see cref="T:System.Web.Hosting.VirtualPathProvider" /> wystąpienie do dodania do systemu kompilacji.</param>
        <summary>Rejestruje nowy <see cref="T:System.Web.Hosting.VirtualPathProvider" /> wystąpienia przy użyciu systemu kompilacji platformy ASP.NET.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Hosting.HostingEnvironment.RegisterVirtualPathProvider%2A> Metoda dodaje określony <xref:System.Web.Hosting.VirtualPathProvider> wystąpienie dostawcy ścieżkę wirtualną do listy aplikacji.  
  
 Aby uzyskać więcej informacji, zobacz <xref:System.Web.Hosting.VirtualPathProvider> klasa — Przegląd.  
  
   
  
## Examples  
 Poniższy przykład kodu jest częścią metody uruchamiania aplikacji, który rejestruje niestandardowego <xref:System.Web.Hosting.VirtualPathProvider> wystąpienia w systemie kompilacji. Pełny kod wymagany, aby uruchomić przykład, można wyświetlić w sekcji przykład <xref:System.Web.Hosting.VirtualPathProvider> temat klasy.  
  
 [!code-csharp[System.Web.Hosting.VirtualPathProvider#11](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.hosting.virtualpathprovider/CS/AppStart.cs#11)]
 [!code-vb[System.Web.Hosting.VirtualPathProvider#11](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.hosting.virtualpathprovider/VB/AppStart.vb#11)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetCultures">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Ustawia kulturze informacji dla bieżącego wątku.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetCultures">
      <MemberSignature Language="C#" Value="public static IDisposable SetCultures ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IDisposable SetCultures() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.HostingEnvironment.SetCultures" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SetCultures () As IDisposable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IDisposable ^ SetCultures();" />
      <MemberSignature Language="F#" Value="static member SetCultures : unit -&gt; IDisposable" Usage="System.Web.Hosting.HostingEnvironment.SetCultures " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IDisposable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Ustawia bieżący wątek kultury określonej w pliku konfiguracyjnym aplikacji.</summary>
        <returns><see cref="T:System.IDisposable" /> Obiekt, który reprezentuje kulturę poprzedzający zmianę; może to obiekt, można użyć, aby powrócić do poprzedniego kultury.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Hosting.HostingEnvironment.SetCultures%2A> Metody ustawia bieżący wątek kultury określonej w [globalizacji — Element (ASP.NET Settings Schema)](https://msdn.microsoft.com/library/e2dffc8e-ebd2-439b-a2fd-e3ac5e620da7) elementu w pliku konfiguracji aplikacji.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetCultures">
      <MemberSignature Language="C#" Value="public static IDisposable SetCultures (string virtualPath);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IDisposable SetCultures(string virtualPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.HostingEnvironment.SetCultures(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SetCultures (virtualPath As String) As IDisposable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IDisposable ^ SetCultures(System::String ^ virtualPath);" />
      <MemberSignature Language="F#" Value="static member SetCultures : string -&gt; IDisposable" Usage="System.Web.Hosting.HostingEnvironment.SetCultures virtualPath" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IDisposable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="virtualPath">Ścieżka, który zawiera informacje o kulturze.</param>
        <summary>Ustawia bieżący wątek kultury określonej ścieżki wirtualnej.</summary>
        <returns><see cref="T:System.IDisposable" /> Obiekt, który reprezentuje kulturę poprzedzający zmianę; może to obiekt, można użyć, aby powrócić do poprzedniego kultury.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Hosting.HostingEnvironment.SetCultures%2A> Metody ustawia bieżący wątek kultury, które powstały po zastosowaniu wszystkich elementów w plikach konfiguracji wpływających na określonej ścieżki wirtualnej.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShutdownReason">
      <MemberSignature Language="C#" Value="public static System.Web.ApplicationShutdownReason ShutdownReason { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.Web.ApplicationShutdownReason ShutdownReason" />
      <MemberSignature Language="DocId" Value="P:System.Web.Hosting.HostingEnvironment.ShutdownReason" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ShutdownReason As ApplicationShutdownReason" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Web::ApplicationShutdownReason ShutdownReason { System::Web::ApplicationShutdownReason get(); };" />
      <MemberSignature Language="F#" Value="member this.ShutdownReason : System.Web.ApplicationShutdownReason" Usage="System.Web.Hosting.HostingEnvironment.ShutdownReason" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.ApplicationShutdownReason</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Zwraca wartość wyliczana, która wskazuje, dlaczego aplikacja została zakończona.</summary>
        <value>Jedną z <see cref="T:System.Web.ApplicationShutdownReason" /> wartości.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SiteName">
      <MemberSignature Language="C#" Value="public static string SiteName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property string SiteName" />
      <MemberSignature Language="DocId" Value="P:System.Web.Hosting.HostingEnvironment.SiteName" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property SiteName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::String ^ SiteName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SiteName : string" Usage="System.Web.Hosting.HostingEnvironment.SiteName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera nazwę witryny.</summary>
        <value>Nazwa witryny.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StopListening">
      <MemberSignature Language="C#" Value="public static event EventHandler StopListening;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler StopListening" />
      <MemberSignature Language="DocId" Value="E:System.Web.Hosting.HostingEnvironment.StopListening" />
      <MemberSignature Language="VB.NET" Value="Public Shared Event StopListening As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static event EventHandler ^ StopListening;" />
      <MemberSignature Language="F#" Value="member this.StopListening : EventHandler " Usage="member this.StopListening : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>[Obsługiwane tylko w programie .NET Framework 4.5.1] 
Występuje, gdy proces roboczy lub puli aplikacji skojarzonych z tym hostem przestał nasłuchuje nowych żądań i zostanie zamknięty po pewnym czasie.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Gdy pula aplikacji i jej skojarzonych procesów roboczych jest realizowane przez usługi IIS, na przykład gdy puli aplikacji osiągnęła interwał zaplanowane odtwarzania, usługi IIS powiadamia środowiska uruchomieniowego programu ASP.NET, że dana aplikacja jest zamykana i proces roboczy dla Pula aplikacji zatrzymuje nasłuchuje nowych żądań. Aplikacje, które używają długotrwałych żądań, na przykład [SignalR](https://go.microsoft.com/fwlink/?LinkID=285432) aplikacji, może nasłuchiwać w oczekiwaniu <xref:System.Web.Hosting.HostingEnvironment.StopListening> zdarzeń i bezpiecznie zamknąć ich długotrwałych operacji po zainicjowaniu przez zamknięcie aplikacji usług IIS Pula i jego skojarzonych procesów roboczych.  
  
> [!WARNING]
>  Istnieje kilka kwestii, które Deweloper należy wziąć pod uwagę podczas implementowania <xref:System.Web.Hosting.HostingEnvironment.StopListening> zdarzeń:  
>   
>  1.  <xref:System.Web.Hosting.HostingEnvironment.StopListening> Zdarzeń jest dostępna tylko dla aplikacji, które są skonfigurowane do używania w zintegrowanym potoku usług IIS.  
> 2.  Deweloperzy nie może zgłaszać błędy z ich <xref:System.Web.Hosting.HostingEnvironment.StopListening> implementacje; zgłaszanie błędów może spowodować nieprzewidywalne skutki.  
> 3.  Ze względu na charakter współbieżnych operacji w programie ASP.NET, nie ma żadnej gwarancji, która wywoła ASP.NET <xref:System.Web.Hosting.HostingEnvironment.StopListening> zdarzenie, gdy została zaimplementowana przez dewelopera.  
> 4.  <xref:System.Web.Hosting.HostingEnvironment.StopListening> Zdarzenie można wykonać równolegle inne <xref:System.Web.Hosting.IRegisteredObject> powiadomienia.  
> 5.  Deweloperzy muszą wiedzieć, że program ASP.NET może zostać wyłączony domeny aplikacji, podczas ich <xref:System.Web.Hosting.HostingEnvironment.StopListening> zdarzenie jest wykonywanie i ich implementacji w celu obsługi tej możliwości projektowania.  
> 6.  <xref:System.Web.Hosting.HostingEnvironment.StopListening> programy obsługi zdarzeń nie muszą blokować; blokowanie implementacje spowoduje zakleszczenia i IIS zakończy proces roboczy, po osiągnięciu seriami interwał ochrony.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UnregisterObject">
      <MemberSignature Language="C#" Value="public static void UnregisterObject (System.Web.Hosting.IRegisteredObject obj);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void UnregisterObject(class System.Web.Hosting.IRegisteredObject obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.HostingEnvironment.UnregisterObject(System.Web.Hosting.IRegisteredObject)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub UnregisterObject (obj As IRegisteredObject)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void UnregisterObject(System::Web::Hosting::IRegisteredObject ^ obj);" />
      <MemberSignature Language="F#" Value="static member UnregisterObject : System.Web.Hosting.IRegisteredObject -&gt; unit" Usage="System.Web.Hosting.HostingEnvironment.UnregisterObject obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Web.Hosting.IRegisteredObject" />
      </Parameters>
      <Docs>
        <param name="obj">Obiekt do usunięcia.</param>
        <summary>Usuwa obiekt z listy zarejestrowane obiekty dla aplikacji.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Hosting.ApplicationManager> Klasa umożliwia metod spoza bieżącej domeny aplikacji do tworzenia, zarządzania i niszczy obiekty znajdujące się w bieżącej domenie aplikacji. <xref:System.Web.Hosting.HostingEnvironment.UnregisterObject%2A> Metoda służy do usuwania wcześniej zarejestrowane obiekty Środowisko hostingu.  
  
   
  
## Examples  
 Poniższy przykład kodu jest <xref:System.Web.Hosting.IRegisteredObject.Stop%2A> metody dla obiektu zarejestrowane. Pełny kod wymagany, aby uruchomić przykład, można wyświetlić w sekcji przykład <xref:System.Web.Hosting.IRegisteredObject> interfejs ogólny temat.  
  
 [!code-csharp[System.Web.Hosting.ApplicationManager#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Hosting.ApplicationManager/CS/appManagercs.aspx.cs#3)]
 [!code-vb[System.Web.Hosting.ApplicationManager#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Hosting.ApplicationManager/VB/appManagervb.aspx.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.Hosting.HostingEnvironment.RegisterObject(System.Web.Hosting.IRegisteredObject)" />
        <altmember cref="T:System.Web.Hosting.IRegisteredObject" />
        <altmember cref="M:System.Web.Hosting.ApplicationManager.CreateObject(System.String,System.Type,System.String,System.String,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="VirtualPathProvider">
      <MemberSignature Language="C#" Value="public static System.Web.Hosting.VirtualPathProvider VirtualPathProvider { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Web.Hosting.VirtualPathProvider VirtualPathProvider" />
      <MemberSignature Language="DocId" Value="P:System.Web.Hosting.HostingEnvironment.VirtualPathProvider" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property VirtualPathProvider As VirtualPathProvider" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Web::Hosting::VirtualPathProvider ^ VirtualPathProvider { System::Web::Hosting::VirtualPathProvider ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.VirtualPathProvider : System.Web.Hosting.VirtualPathProvider" Usage="System.Web.Hosting.HostingEnvironment.VirtualPathProvider" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Hosting.VirtualPathProvider</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera dostawcę ścieżek wirtualnych dla tej aplikacji.</summary>
        <value><see cref="T:System.Web.Hosting.VirtualPathProvider" /> Wystąpienie dla tej aplikacji.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli więcej niż jeden <xref:System.Web.Hosting.VirtualPathProvider> wystąpienia jest zarejestrowany, <xref:System.Web.Hosting.HostingEnvironment> zarządza obiekt z łańcuchem wywołań. Nie można kontrolować kolejność, w którym są nazywane dostawcami ścieżki wirtualnej.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>