<Type Name="VirtualFile" FullName="System.Web.Hosting.VirtualFile">
  <Metadata><Meta Name="ms.openlocfilehash" Value="1dc1490a7df51d445efca113976396a3d0fc7cb5" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69138784" /></Metadata><TypeSignature Language="C#" Value="public abstract class VirtualFile : System.Web.Hosting.VirtualFileBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit VirtualFile extends System.Web.Hosting.VirtualFileBase" />
  <TypeSignature Language="DocId" Value="T:System.Web.Hosting.VirtualFile" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class VirtualFile&#xA;Inherits VirtualFileBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class VirtualFile abstract : System::Web::Hosting::VirtualFileBase" />
  <TypeSignature Language="F#" Value="type VirtualFile = class&#xA;    inherit VirtualFileBase" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.Hosting.VirtualFileBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Reprezentuje obiekt pliku w pliku wirtualnym lub przestrzeni zasobów.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Hosting.VirtualFile> Klasa jest klasą bazową dla obiektów, które reprezentują pliki w wirtualnym systemie plików. Zazwyczaj należy zaimplementować element potomny <xref:System.Web.Hosting.VirtualFile> klasy dla każdego <xref:System.Web.Hosting.VirtualPathProvider> obiektu podrzędnego w aplikacji sieci Web.  
  
   
  
## Examples  
 Poniższy przykład kodu jest <xref:System.Web.Hosting.VirtualFile> implementacją klasy, która łączy informacje przechowywane <xref:System.Data.DataSet> w obiekcie z plikiem szablonu, aby zwrócić dane html. Ten przykład kodu współdziała z przykładami kodu dla <xref:System.Web.Hosting.VirtualPathProvider> klas i <xref:System.Web.Hosting.VirtualDirectory> , aby zapewnić zasoby wirtualne z magazynu danych <xref:System.Data.DataSet> , który jest ładowany do obiektu. Aby uzyskać pełne instrukcje dotyczące kompilowania i uruchamiania tego przykładu, zobacz sekcję <xref:System.Web.Hosting.VirtualPathProvider> przykładową klasy Przegląd.  
  
 Ten przykład ma trzy części: <xref:System.Web.Hosting.VirtualFile> implementacja klasy, plik danych XML używany do <xref:System.Data.DataSet> wypełniania obiektu i plik szablonu strony.  
  
 Pierwszy przykład kodu jest implementacją <xref:System.Web.Hosting.VirtualFile> klasy. Jego Konstruktor używa metody na obiekcie niestandardowym <xref:System.Web.Hosting.VirtualPathProvider> w celu <xref:System.Data.DataSet> zwrócenia obiektu. Następnie przeszukuje <xref:System.Data.DataSet> obiekt, aby pobrać informacje skojarzone z podaną ścieżką pliku wirtualnego. W metodzie łączy informacje <xref:System.Data.DataSet> z obiektu z plikiem szablonu i <xref:System.IO.Stream> zwraca kombinację jako obiekt. <xref:System.Web.Hosting.VirtualFile.Open%2A>  
  
 [!code-csharp[System.Web.Hosting.VirtualPathProvider#40](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.hosting.virtualpathprovider/CS/SampleVirtualFile.cs#40)]
 [!code-vb[System.Web.Hosting.VirtualPathProvider#40](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.hosting.virtualpathprovider/VB/SampleVirtualFile.vb#40)]  
  
 Drugim przykładem jest plik danych XML używany do wypełniania <xref:System.Data.DataSet> obiektu zwróconego przez obiekt <xref:System.Web.Hosting.VirtualPathProvider> niestandardowy. Dane XML są używane do zademonstrowania przy użyciu <xref:System.Web.Hosting.VirtualPathProvider>klas <xref:System.Web.Hosting.VirtualFile>,, <xref:System.Web.Hosting.VirtualDirectory> i do pobierania danych z danych zewnętrznych i nie są przeznaczone do reprezentowania magazynu danych z jakością produkcyjną.  
  
```  
<?xml version="1.0" encoding="utf-8" ?>  
<resource type="dir"   
          path="/vrDir"   
          parentPath=""   
          content="">  
  <resource type="file"   
            path="/vrDir/Level1FileA.vrf"  
            parentPath="/vrDir"   
            content="This is the content of file Level1FileA.">  
  </resource>  
  <resource type="file"   
            path="/vrDir/Level1FileB.vrf"  
            parentPath="/vrDir"   
            content="This is the content of file Level1FileB.">  
  </resource>  
  <resource type="dir"   
            path="/vrDir/Level2DirA"   
            parentPath="/vrDir"   
            content="">  
    <resource type="file"   
              path="/vrDir/Level2DirA/Level2FileA.vrf"   
              parentPath="/vrDir/Level2DirA"   
              content="This is the content of file Level2FileA.">  
    </resource>  
    <resource type="file"   
              path="/vrDir/Level2DirA/Level2FileB.vrf"  
              parentPath="/vrDir/Level2DirA"   
              content="This is the content of file Level2FileB.">  
    </resource>  
  </resource>  
  <resource type="dir"   
            path="/vrDir/Level2DirB"   
            parentPath="/vrDir"   
            content="">  
    <resource type="file"   
              path="/vrDir/Level2DirB/Level2FileA.vrf"   
              parentPath="/vrDir/Level2DirB"   
              content="This is the content of file Level2FileA.">  
    </resource>  
    <resource type="file"   
              path="/vrDir/Level2DirB/Level2FileB.vrf"  
              parentPath="/vrDir/Level2DirB"   
              content="This is the content of file Level2FileB.">  
    </resource>  
  </resource>  
</resource>  
```  
  
 Trzeci przykład to plik tekstowy używany jako szablon dla pliku wirtualnego. Symbole zastępcze w pliku są reprezentowane przez tekst między procentami (%) znaczniki, takie jak `%file%` i `%content%`. Sygnatury czasowe są używane do monitorowania zmian w buforowanych danych pliku wirtualnego.  
  
```  
<html>  
  <head>  
    <title>File name: %file%</title>  
  </head>  
  
  <body>  
    <h1>%file%</h1>  
    <p>%content%</p>  
    <p>Page timestamp: %pageTimestamp%<br>  
       Data timestamp: %dataTimestamp%<br>  
       Template timestamp: %templateTimestamp%</p>  
  </body>  
</html>  
```  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides"><para>W przypadku dziedziczenia z <see cref="T:System.Web.Hosting.VirtualFile" /> klasy należy <see cref="M:System.Web.Hosting.VirtualFile.Open" /> zastąpić metodę w celu zwrócenia strumienia tylko do odczytu do zawartości zasobu wirtualnego.</para></block>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected VirtualFile (string virtualPath);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(string virtualPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.VirtualFile.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (virtualPath As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; VirtualFile(System::String ^ virtualPath);" />
      <MemberSignature Language="F#" Value="new System.Web.Hosting.VirtualFile : string -&gt; System.Web.Hosting.VirtualFile" Usage="new System.Web.Hosting.VirtualFile virtualPath" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="virtualPath">Ścieżka wirtualna do zasobu reprezentowanego przez to wystąpienie.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Hosting.VirtualFile" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład kodu jest implementacją <xref:System.Web.Hosting.VirtualFile.%23ctor%2A> konstruktora, który pobiera informacje o pliku wirtualnym <xref:System.Data.DataSet> z obiektu dostarczonego przez obiekt niestandardowy <xref:System.Web.Hosting.VirtualPathProvider> . Aby uzyskać pełny kod wymagany do uruchomienia tego przykładu, zobacz sekcję <xref:System.Web.Hosting.VirtualFile> przykład omówienia klasy.  
  
 [!code-csharp[System.Web.Hosting.VirtualPathProvider#41](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.hosting.virtualpathprovider/CS/SampleVirtualFile.cs#41)]
 [!code-vb[System.Web.Hosting.VirtualPathProvider#41](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.hosting.virtualpathprovider/VB/SampleVirtualFile.vb#41)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDirectory">
      <MemberSignature Language="C#" Value="public override bool IsDirectory { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDirectory" />
      <MemberSignature Language="DocId" Value="P:System.Web.Hosting.VirtualFile.IsDirectory" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsDirectory As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsDirectory { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsDirectory : bool" Usage="System.Web.Hosting.VirtualFile.IsDirectory" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość wskazującą, że jest to zasób wirtualny, który powinien być traktowany jako plik.</summary>
        <value>Zawsze <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Open">
      <MemberSignature Language="C#" Value="public abstract System.IO.Stream Open ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IO.Stream Open() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.VirtualFile.Open" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Open () As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::IO::Stream ^ Open();" />
      <MemberSignature Language="F#" Value="abstract member Open : unit -&gt; System.IO.Stream" Usage="virtualFile.Open " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gdy jest zastępowany w klasie pochodnej, zwraca strumień tylko do odczytu do zasobu wirtualnego.</summary>
        <returns>Strumień tylko do odczytu do pliku wirtualnego.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metoda zwraca strumień zawierający dane traktowane jako plik <xref:System.Web.Hosting.VirtualPathProvider> przez klasę. <xref:System.Web.Hosting.VirtualFile.Open%2A> Strumień jest tylko do odczytu i jest możliwy do przeszukania <xref:System.IO.Stream.CanSeek%2A> (właściwość ma wartość true).  
  
   
  
## Examples  
 Poniższy przykład kodu jest implementacją <xref:System.Web.Hosting.VirtualFile.Open%2A> metody, która łączy informacje specyficzne dla pliku wirtualnego z plikiem szablonu, a następnie zwraca kombinację. Plik szablonu jest w pamięci podręcznej, aby zmniejszyć obciążenie odczytywania systemu plików wiele razy, aby pobrać plik szablonu. Aby uzyskać pełny kod wymagany do uruchomienia tego przykładu, zobacz sekcję <xref:System.Web.Hosting.VirtualFile> przykład omówienia klasy.  
  
 [!code-csharp[System.Web.Hosting.VirtualPathProvider#42](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.hosting.virtualpathprovider/CS/SampleVirtualFile.cs#42)]
 [!code-vb[System.Web.Hosting.VirtualPathProvider#42](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.hosting.virtualpathprovider/VB/SampleVirtualFile.vb#42)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>W klasach <see cref="M:System.Web.Hosting.VirtualFile.Open" /> pochodnych Metoda musi zwracać strumień możliwy do przeszukiwania. Jeśli metoda zwraca strumień, który nie obsługuje wyszukiwania, <see cref="T:System.NotSupportedException" /> jest zgłaszany, gdy strumień jest przesyłany <see cref="T:System.Web.HttpResponse" /> do obiektu w celu zapisania danych. Wyjątek występuje, ponieważ odpowiedź próbuje odczytać <see cref="P:System.IO.Stream.Length" /> właściwość, a w strumieniu, który nie jest możliwy do odszukania, próbuje uzyskać dostęp do właściwości powoduje wyjątek. Aby uzyskać więcej informacji, zobacz <see cref="P:System.IO.Stream.CanSeek" /> właściwość.</para></block>
      </Docs>
    </Member>
  </Members>
</Type>
