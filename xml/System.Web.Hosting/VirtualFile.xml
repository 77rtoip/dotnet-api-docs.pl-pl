<Type Name="VirtualFile" FullName="System.Web.Hosting.VirtualFile">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="33f9791a60e614665696afca84d9f5d1942faacc" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30582553" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class VirtualFile : System.Web.Hosting.VirtualFileBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit VirtualFile extends System.Web.Hosting.VirtualFileBase" />
  <TypeSignature Language="DocId" Value="T:System.Web.Hosting.VirtualFile" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class VirtualFile&#xA;Inherits VirtualFileBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class VirtualFile abstract : System::Web::Hosting::VirtualFileBase" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.Hosting.VirtualFileBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Reprezentuje obiekt pliku w obszarze wirtualnym plik lub zasób.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Hosting.VirtualFile> Klasa jest klasą bazową dla obiektów, które reprezentują pliki w wirtualnym systemie plików. Zwykle czy implementuje element podrzędny <xref:System.Web.Hosting.VirtualFile> klasy dla każdego <xref:System.Web.Hosting.VirtualPathProvider> obiekt podrzędny w aplikacji sieci Web.  
  
   
  
## Examples  
 Poniższy przykładowy kod jest <xref:System.Web.Hosting.VirtualFile> implementację klasy, która łączy informacje przechowywane w <xref:System.Data.DataSet> obiektu przy użyciu pliku szablonu, aby zwrócić dane HTML. Ten przykładowy kod działa z przykłady kodu dla <xref:System.Web.Hosting.VirtualPathProvider> i <xref:System.Web.Hosting.VirtualDirectory> klasy przechowywania zasobami wirtualnymi danych, który jest ładowany do <xref:System.Data.DataSet> obiektu. Pełne instrukcje dotyczące kompilowania i uruchamiania przykładzie, można znaleźć w sekcji przykład <xref:System.Web.Hosting.VirtualPathProvider> Przegląd klasy.  
  
 W tym przykładzie ma trzy części: <xref:System.Web.Hosting.VirtualFile> implementację klasy, pliku danych XML, używany do wypełnienia <xref:System.Data.DataSet> obiektu, a plik szablonu strony.  
  
 W pierwszym przykładzie kodu jest implementacją <xref:System.Web.Hosting.VirtualFile> klasy. Jego Konstruktor korzysta z metody na niestandardowego <xref:System.Web.Hosting.VirtualPathProvider> obiektu do zwrócenia <xref:System.Data.DataSet> obiektu. Wyszukuje <xref:System.Data.DataSet> obiekt, aby pobrać informacje skojarzone z podana ścieżka pliku wirtualnego. W <xref:System.Web.Hosting.VirtualFile.Open%2A> metody łączy informacje ze <xref:System.Data.DataSet> obiektu przy użyciu pliku szablonu i zwraca kombinację jako <xref:System.IO.Stream> obiektu.  
  
 [!code-csharp[System.Web.Hosting.VirtualPathProvider#40](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.hosting.virtualpathprovider/CS/SampleVirtualFile.cs#40)]
 [!code-vb[System.Web.Hosting.VirtualPathProvider#40](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.hosting.virtualpathprovider/VB/SampleVirtualFile.vb#40)]  
  
 Drugi przykład jest używany do wypełnienia pliku danych XML <xref:System.Data.DataSet> obiektu zwróconego przez niestandardowego <xref:System.Web.Hosting.VirtualPathProvider> obiektu. Te dane XML są używane w celu pokazanie sposobu używania <xref:System.Web.Hosting.VirtualPathProvider>, <xref:System.Web.Hosting.VirtualFile>, i <xref:System.Web.Hosting.VirtualDirectory> klasy można pobrać danych z danych zewnętrznych i nie jest przeznaczona do reprezentowania magazynu danych wysokiej jakości.  
  
```  
<?xml version="1.0" encoding="utf-8" ?>  
<resource type="dir"   
          path="/vrDir"   
          parentPath=""   
          content="">  
  <resource type="file"   
            path="/vrDir/Level1FileA.vrf"  
            parentPath="/vrDir"   
            content="This is the content of file Level1FileA.">  
  </resource>  
  <resource type="file"   
            path="/vrDir/Level1FileB.vrf"  
            parentPath="/vrDir"   
            content="This is the content of file Level1FileB.">  
  </resource>  
  <resource type="dir"   
            path="/vrDir/Level2DirA"   
            parentPath="/vrDir"   
            content="">  
    <resource type="file"   
              path="/vrDir/Level2DirA/Level2FileA.vrf"   
              parentPath="/vrDir/Level2DirA"   
              content="This is the content of file Level2FileA.">  
    </resource>  
    <resource type="file"   
              path="/vrDir/Level2DirA/Level2FileB.vrf"  
              parentPath="/vrDir/Level2DirA"   
              content="This is the content of file Level2FileB.">  
    </resource>  
  </resource>  
  <resource type="dir"   
            path="/vrDir/Level2DirB"   
            parentPath="/vrDir"   
            content="">  
    <resource type="file"   
              path="/vrDir/Level2DirB/Level2FileA.vrf"   
              parentPath="/vrDir/Level2DirB"   
              content="This is the content of file Level2FileA.">  
    </resource>  
    <resource type="file"   
              path="/vrDir/Level2DirB/Level2FileB.vrf"  
              parentPath="/vrDir/Level2DirB"   
              content="This is the content of file Level2FileB.">  
    </resource>  
  </resource>  
</resource>  
```  
  
 W trzecim przykładzie przedstawiono plik tekstowy używany jako szablon dla pliku wirtualnego. Symbole zastępcze w pliku są reprezentowane przez tekst między znakami procentu (%), takich jak `%file%` i `%content%`. Sygnatury czasowe są używane do monitorowania zmian w wirtualnych plików w pamięci podręcznej danych.  
  
```  
<html>  
  <head>  
    <title>File name: %file%</title>  
  </head>  
  
  <body>  
    <h1>%file%</h1>  
    <p>%content%</p>  
    <p>Page timestamp: %pageTimestamp%<br>  
       Data timestamp: %dataTimestamp%<br>  
       Template timestamp: %templateTimestamp%</p>  
  </body>  
</html>  
```  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <para>Przy dziedziczeniu z <see cref="T:System.Web.Hosting.VirtualFile" /> klasy, należy zastąpić <see cref="M:System.Web.Hosting.VirtualFile.Open" /> metodę, aby zwracać tylko do odczytu strumień zawartości zasobu wirtualnego.</para>
    </block>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected VirtualFile (string virtualPath);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(string virtualPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.VirtualFile.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (virtualPath As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; VirtualFile(System::String ^ virtualPath);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="virtualPath">Ścieżka wirtualna do zasobu reprezentowanego przez to wystąpienie.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Hosting.VirtualFile" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykładowy kod jest implementacją <xref:System.Web.Hosting.VirtualFile.%23ctor%2A> Konstruktor, który pobiera informacje o pliku wirtualnego z <xref:System.Data.DataSet> obiekt udostępniany przez niestandardowy <xref:System.Web.Hosting.VirtualPathProvider> obiektu. Dla pełny kod wymagany do uruchamiania w przykładzie, zobacz sekcję przykład <xref:System.Web.Hosting.VirtualFile> Przegląd klasy.  
  
 [!code-csharp[System.Web.Hosting.VirtualPathProvider#41](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.hosting.virtualpathprovider/CS/SampleVirtualFile.cs#41)]
 [!code-vb[System.Web.Hosting.VirtualPathProvider#41](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.hosting.virtualpathprovider/VB/SampleVirtualFile.vb#41)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDirectory">
      <MemberSignature Language="C#" Value="public override bool IsDirectory { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDirectory" />
      <MemberSignature Language="DocId" Value="P:System.Web.Hosting.VirtualFile.IsDirectory" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsDirectory As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsDirectory { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość wskazującą, że jest to wirtualny zasób, który powinien być traktowany jako plik.</summary>
        <value>Zawsze <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Open">
      <MemberSignature Language="C#" Value="public abstract System.IO.Stream Open ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IO.Stream Open() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.VirtualFile.Open" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Open () As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::IO::Stream ^ Open();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>W przypadku przesłonięcia w klasie pochodnej zwraca strumienia tylko do odczytu do zasobu wirtualnego.</summary>
        <returns>Strumień tylko do odczytu do pliku wirtualnego.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Hosting.VirtualFile.Open%2A> Metoda zwraca strumień zawierający dane traktowane jako plik przez <xref:System.Web.Hosting.VirtualPathProvider> klasy. Strumień jest tylko do odczytu i wyszukiwać ( <xref:System.IO.Stream.CanSeek%2A> właściwość ma wartość true).  
  
   
  
## Examples  
 Poniższy przykładowy kod jest implementacją <xref:System.Web.Hosting.VirtualFile.Open%2A> metodę, która łączy informacji na temat wirtualnej określonego pliku z pliku szablonu, a następnie zwraca połączenie. Plik szablonu jest buforowany zmniejszyć koszty odczytywania systemu plików wiele razy, aby pobrać plik szablonu. Dla pełny kod wymagany do uruchamiania w przykładzie, zobacz sekcję przykład <xref:System.Web.Hosting.VirtualFile> Przegląd klasy.  
  
 [!code-csharp[System.Web.Hosting.VirtualPathProvider#42](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.hosting.virtualpathprovider/CS/SampleVirtualFile.cs#42)]
 [!code-vb[System.Web.Hosting.VirtualPathProvider#42](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.hosting.virtualpathprovider/VB/SampleVirtualFile.vb#42)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>W klasach pochodnych <see cref="M:System.Web.Hosting.VirtualFile.Open" /> metoda musi zwracać wyszukiwać strumienia. Jeśli metoda zwraca strumień, który nie obsługuje wyszukiwania, <see cref="T:System.NotSupportedException" /> jest generowany, gdy strumień jest przekazywana do <see cref="T:System.Web.HttpResponse" /> obiekt do zapisywania danych. Wyjątek występuje, ponieważ odpowiedź próbuje odczytać <see cref="P:System.IO.Stream.Length" /> właściwości, oraz w strumieniu, który nie jest wyszukiwać, próby dostępu do właściwości powoduje, że wystąpił wyjątek. Aby uzyskać więcej informacji, zobacz <see cref="P:System.IO.Stream.CanSeek" /> właściwości.</para>
        </block>
      </Docs>
    </Member>
  </Members>
</Type>