<Type Name="ResourceManager" FullName="System.Resources.ResourceManager">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="d18e0d0b21e593733c17a8ad1b69a3fc64a6cfda" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30564955" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ResourceManager" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit ResourceManager extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Resources.ResourceManager" />
  <TypeSignature Language="VB.NET" Value="Public Class ResourceManager" />
  <TypeSignature Language="C++ CLI" Value="public ref class ResourceManager" />
  <AssemblyInfo>
    <AssemblyName>System.Resources.ResourceManager</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Reprezentuje Menedżera zasobów, który umożliwia wygodne dostęp do zasobów określonej kultury w czasie wykonywania.  
  
 **Uwaga dotycząca zabezpieczeń**: wywołanie metody tej klasy z niezaufanych danych stanowi zagrożenie bezpieczeństwa. Wywołanie metody w klasie tylko z zaufanych danych. Aby uzyskać więcej informacji, zobacz [niezaufanych zagrożenia bezpieczeństwa danych](https://docs.com/rick-anderson-1/8710/untrusted-data-security-risks).</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Resources.ResourceManager> Klasy pobiera zasobów z pliku binarnego .resources, który jest osadzony w zestawie lub autonomiczny plik .resources. Jeśli aplikacja został zlokalizowany i zlokalizowane zasoby zostały wdrożone w [zestawy satelitarne](~/docs/framework/resources/creating-satellite-assemblies-for-desktop-apps.md), on wyszukuje zasoby specyficzne dla kultury, udostępnia zasób rezerwowej, gdy zlokalizowany zasób nie istnieje i obsługuje zasobów serializacji.  
  
 Aby uzyskać więcej informacji na temat tworzenia i zarządzania zasobami w aplikacji klasycznych i [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] aplikacji, zobacz następujące sekcje:  
  
-   [Aplikacje komputerowe](#desktop)  
  
    -   [Tworzenie zasobów](#creating_resources)  
  
    -   [Utworzenie wystąpienia obiektu ResourceManager](#instantiating)  
  
    -   [ResourceManager i zasoby specyficzne dla kultury](#CultureSpecific)  
  
    -   [Pobieranie zasobów](#retrieving)  
  
    -   [Missingsatelliteassemblyexception — wyjątków i missingmanifestresourceexception — Obsługa](#exception)  
  
    -   [Wersjonowanie zasobów](#versioning)  
  
    -   [\<satelliteassemblies > węzeł pliku konfiguracji](#config)  
  
-   [Aplikacje ze Sklepu Windows](#ws)  
  
<a name="desktop"></a>   
## <a name="desktop-apps"></a>Aplikacje pulpitu  
 Dla aplikacji klasycznych <xref:System.Resources.ResourceManager> klasy pobiera zasoby z plików binarnych zasobów (.resources). Zazwyczaj kompilatora języka lub [Assembly Linker (AL.exe)](~/docs/framework/tools/al-exe-assembly-linker.md) osadza te pliki zasobów w zestawie. Można również użyć <xref:System.Resources.ResourceManager> obiektu można pobrać zasobów bezpośrednio w pliku .resources, który nie jest zagnieżdżony w zestawie, wywołując <xref:System.Resources.ResourceManager.CreateFileBasedResourceManager%2A> metody.  
  
> [!CAUTION]
>  Przy użyciu plików .resources autonomicznych w aplikacji ASP.NET spowoduje przerwanie wdrażania XCOPY, ponieważ zasoby pozostać zablokowane, dopóki nie zostaną one jawnie wydane przez <xref:System.Resources.ResourceManager.ReleaseAllResources%2A> metody. Jeśli chcesz wdrożyć zasobów przy użyciu aplikacji ASP.NET, należy skompilować plików .resources w zestawy satelickie.  
  
 W zależności od zasobów aplikacji jeden plik .resources zawiera zasoby domyślną kulturę, którego zasoby są używane w przypadku nieodnalezienia żadnych zasobów określonej kultury. Na przykład jeśli kultury domyślnej aplikacji jest angielski (en), zasobów języka angielskiego przy każdym zlokalizowanych zasobów nie można odnaleźć określonej kultury, takich jak angielski (Stany Zjednoczone) (en US) lub francuski (Francja) (fr-FR). Zazwyczaj zasobów dla kultury domyślnej są osadzone w zestawie głównym aplikacji i zasobów dla innych kultur zlokalizowane są osadzone w zestawy satelickie. Zestawy satelickie zawierają tylko zasoby. Mają one taką samą nazwę pliku głównego jak główny zestaw i rozszerzenie. resources.dll. W przypadku aplikacji, w których zestawy nie są zarejestrowane w globalnej pamięci podręcznej zestawów zestawy satelickie są przechowywane w podkatalogu aplikacji, którego nazwa odpowiada kultury zestawu.  
  
<a name="creating_resources"></a>   
### <a name="creating-resources"></a>Tworzenie zasobów  
 Podczas opracowywania aplikacji opartych na zasobach informacji o zasobach są przechowywane w pliki tekstowe (pliki z rozszerzeniem txt lub .restext) lub pliki XML (pliki z rozszerzeniem .resx). Następnie skompilować tekstu lub plików XML z [Generator pliku zasobów (Resgen.exe)](~/docs/framework/tools/resgen-exe-resource-file-generator.md) można utworzyć pliku binarnego .resources. Następnie można osadzać wynikowy plik .resources w bibliotece lub plik wykonywalny przy użyciu opcji kompilatora, takich jak `/resources` dla Kompilatory języka C# i Visual Basic, lub można osadzić go w zestawie satelickim przy użyciu. Jeśli dołączysz pliku .resx w projekcie programu Visual Studio, Visual Studio obsługuje kompilacji i osadzanie wartości domyślnych i zasoby zlokalizowane automatycznie jako część procesu kompilacji.  
  
 W idealnym przypadku należy utworzyć zasobów dla każdego języka aplikacji obsługuje, lub co najmniej przez podzbiór łatwy do rozpoznania każdego języka. Nazwy plików binarnych .resources postępuj zgodnie z konwencją nazewnictwa *nazwę bazową*.* cultureName*.resources, gdzie *nazwę bazową* to nazwa aplikacji lub nazwę klasy, w zależności od poziomu szczegółowości ma. <xref:System.Globalization.CultureInfo.Name%2A?displayProperty=nameWithType> Właściwość jest używana do określenia *cultureName*. Zasobów dla kultury domyślnej aplikacji powinno być nazwanym *nazwę bazową*.resources.  
  
 Na przykład załóżmy, że zestaw ma kilka zasobów w pliku zasobu o nazwie podstawowej MyResources. Te pliki zasobów powinny mieć nazwy takie jak MyResources.ja JP.resources dla kultury Japonii (wersja japońska), MyResources.de.resources dla kultury niemieckim, MyResources.zh-CHS.resources dla kultury chiński uproszczony, i MyResources.fr-BE.resources dla kultury francuski (Belgia). Domyślny plik zasobu powinny mieć nazwę MyResources.resources. Pliki zasobów specyficzne dla kultury często są popakowane w zestawy satelickie dla każdego kultury. Domyślnego pliku zasobów powinien być osadzony w zestawie głównym aplikacji.  
  
 Należy pamiętać, że umożliwiająca zasobów może być oznaczony jako prywatny, ale należy zawsze oznaczyć je jako public, są one dostępne przez innych zestawów. (Ponieważ zestaw satelicki nie zawiera kodu, zasobów, które są oznaczone jako prywatne są niedostępne do aplikacji przy użyciu dowolnego mechanizmu).  
  
 Aby uzyskać więcej informacji o tworzeniu opakowanie i wdrażanie zasobów, zobacz artykuły [tworzenie plików zasobów](~/docs/framework/resources/creating-resource-files-for-desktop-apps.md), [tworzenie zestawów satelickich](~/docs/framework/resources/creating-satellite-assemblies-for-desktop-apps.md), i [pakowanie i wdrażanie Zasoby](~/docs/framework/resources/packaging-and-deploying-resources-in-desktop-apps.md).  
  
<a name="instantiating"></a>   
### <a name="instantiating-a-resourcemanager-object"></a>Utworzenie wystąpienia obiektu ResourceManager  
 Można utworzyć wystąpienia <xref:System.Resources.ResourceManager> obiekt, który pobiera zasobów z pliku .resources osadzone przez wywołanie jego przeciążeń konstruktora klasy. To ściśle pozamałżeńskie <xref:System.Resources.ResourceManager> obiektów z pliku .resources określonego i wszelkie powiązane zlokalizowanych plików .resources w zestawy satelickie.  
  
 Dwa najczęściej wywoływane konstruktory są:  
  
-   <xref:System.Resources.ResourceManager.%23ctor%28System.String%2CSystem.Reflection.Assembly%29> Wyszukuje zasobów w oparciu o informacje, które można dostarczać: podstawowej nazwy pliku .resources i zestawu, w której znajduje się w pliku .resources domyślne. Nazwa podstawowa zawiera nazwę przestrzeni nazw i główny plik .resources, bez jego kultury lub rozszerzenia. Należy pamiętać, że plików .resources, które zwykle są kompilowane z wiersza polecenia nie zawierają nazwę przestrzeni nazw, należy wykonać plików .resources, które są tworzone w środowisku Visual Studio. Na przykład, jeśli plik zasobów nosi nazwę MyCompany.StringResources.resources i <xref:System.Resources.ResourceManager> Konstruktor jest wywoływany z metody statycznej o nazwie `Example.Main`, poniższy kod tworzy <xref:System.Resources.ResourceManager> obiekt, który można pobrać zasobów. Plik zasobów:  
  
     [!code-csharp[Conceptual.Resources.Retrieving#1](~/samples/snippets/csharp/VS_Snippets_CLR/conceptual.resources.retrieving/cs/ctor1.cs#1)]
     [!code-vb[Conceptual.Resources.Retrieving#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/conceptual.resources.retrieving/vb/ctor1.vb#1)]  
  
-   <xref:System.Resources.ResourceManager.%23ctor%28System.Type%29> Wyszukuje zasobów w zestawów satelickich na podstawie informacji z obiektu typu. W pełni kwalifikowana nazwa typu odpowiada podstawowa nazwa pliku .resources bez rozszerzenie nazwy pliku. W aplikacjach klasycznych, które są tworzone za pomocą projektanta zasobów programu Visual Studio Visual Studio tworzy klasy otoki, której w pełni kwalifikowana nazwa jest taka sama jak nazwa głównego pliku .resources. Na przykład plik zasobów nosi nazwę MyCompany.StringResources.resources, jeśli ma klasy otoki o nazwie `MyCompany.StringResources`, poniższy kod tworzy <xref:System.Resources.ResourceManager> obiekt, który można pobrać zasobów z pliku .resources:  
  
     [!code-csharp[Conceptual.Resources.Retrieving#2](~/samples/snippets/csharp/VS_Snippets_CLR/conceptual.resources.retrieving/cs/ctor1.cs#2)]
     [!code-vb[Conceptual.Resources.Retrieving#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/conceptual.resources.retrieving/vb/ctor1.vb#2)]  
  
 Jeśli nie można znaleźć odpowiednie zasoby, wywołanie konstruktora tworzy prawidłowy <xref:System.Resources.ResourceManager> obiektu. Jednak próba pobrania zasobu zgłasza <xref:System.Resources.MissingManifestResourceException> wyjątku. Informacje o obsłudze wyjątek, zobacz [MissingSatelliteAssembly wyjątków i obsługa missingmanifestresourceexception —](#exception) sekcji w dalszej części tego artykułu.  
  
 Poniższy przykład przedstawia sposób tworzenia wystąpienia <xref:System.Resources.ResourceManager> obiektu. Zawiera kod źródłowy dla pliku wykonywalnego o nazwie ShowTime.exe. Zawiera również Poniższy plik tekstowy o nazwie Strings.txt zawierający zasób będący pojedynczym ciągiem `TimeHeader`:  
  
```  
TimeHeader=The current time is  
```  
  
 Plik wsadowy służy do generowania pliku zasobów i osadzenie w pliku wykonywalnego. Oto plik wsadowy, aby wygenerować plik wykonywalny za pomocą kompilatora C#:  
  
```  
  
resgen strings.txt  
csc ShowTime.cs /resource:strings.resources  
  
```  
  
 Dla kompilatora języka Visual Basic można użyć następującego pliku wsadowego:  
  
```  
  
resgen strings.txt  
vbc ShowTime.vb /resource:strings.resources  
  
```  
  
 [!code-csharp[System.Resources.ResourceManager.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.resources.resourcemanager.class/cs/showtime.cs#1)]
 [!code-vb[System.Resources.ResourceManager.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.resources.resourcemanager.class/vb/showtime.vb#1)]  
  
<a name="CultureSpecific"></a>   
### <a name="resourcemanager-and-culture-specific-resources"></a>ResourceManager i zasoby specyficzne dla kultury  
 Zlokalizowane aplikacji wymaga zasobów do wdrożenia, zgodnie z opisem w artykule [pakowanie i wdrażanie zasobów](~/docs/framework/resources/packaging-and-deploying-resources-in-desktop-apps.md). Jeśli zestawy są poprawnie skonfigurowane, Menedżer zasobów określa zasoby, które można pobrać oparta na bieżącym wątku <xref:System.Threading.Thread.CurrentUICulture%2A?displayProperty=nameWithType> właściwości. (Właściwości zwraca również wartość kultury interfejsu użytkownika bieżącego wątku.) Na przykład jeśli aplikacja jest skompilowana przy użyciu domyślny język angielski zasobów w zestawie głównym, a język francuski i rosyjski zasobów w dwa zestawy satelickie i <xref:System.Threading.Thread.CurrentUICulture%2A?displayProperty=nameWithType> właściwość jest ustawiona na fr-FR, usługa resource manager pobiera francuski zasoby.  
  
 Można ustawić <xref:System.Globalization.CultureInfo.CurrentUICulture%2A> właściwości jawnie lub niejawnie. Określa sposób ustaw go jak <xref:System.Resources.ResourceManager> obiektu pobiera zasoby oparte na kultury:  
  
-   Jeśli jawnie ustawiona <xref:System.Threading.Thread.CurrentUICulture%2A?displayProperty=nameWithType> właściwości określoną kulturę, Menedżer zasobów zawsze pobiera zasoby dla tej kultury, niezależnie od języka systemu operacyjnego lub przeglądarki użytkownika. Należy rozważyć aplikację, która jest skompilowana przy użyciu domyślnych zasobów język angielski i trzy zestawy satelickie, które zawierają zasoby dla języka angielskiego (Stany Zjednoczone), francuski (Francja) i rosyjski (Rosji). Jeśli <xref:System.Globalization.CultureInfo.CurrentUICulture%2A> właściwość jest ustawiona na fr-FR, <xref:System.Resources.ResourceManager> obiektu zawsze pobiera zasoby francuski (Francja), nawet jeśli użytkownik obsługi języka systemu nie jest francuski. Upewnij się, że to jest zamierzone zachowanie przed jawnie ustaw właściwość.  
  
     W aplikacjach ASP.NET, należy ustawić <xref:System.Threading.Thread.CurrentUICulture%2A?displayProperty=nameWithType> właściwości jawnie, ponieważ jest mało prawdopodobne, że ustawienia na serwerze zostanie przychodzące żądania klientów są zgodne. Aplikacja ASP.NET można ustawić <xref:System.Threading.Thread.CurrentUICulture%2A?displayProperty=nameWithType> języka akceptować właściwości jawnie do przeglądarki użytkownika.  
  
     Jawne ustawienie <xref:System.Threading.Thread.CurrentUICulture%2A?displayProperty=nameWithType> właściwość definiuje bieżącej kultury interfejsu użytkownika dla tego wątku. Nie ma ona wpływu na bieżącej kultury interfejsu użytkownika innych wątków w aplikacji.  
  
-   Kultura interfejsu użytkownika wszystkie wątki można ustawić w domenie aplikacji, przypisując <xref:System.Globalization.CultureInfo> obiekt, który reprezentuje tej kultury do statycznego <xref:System.Globalization.CultureInfo.DefaultThreadCurrentUICulture%2A?displayProperty=nameWithType> właściwości.  
  
-   Jeśli nie zostanie jawnie ustawiona bieżącej kultury interfejsu użytkownika i nie zostanie zdefiniowana domyślną kulturę używaną do bieżącej domeny aplikacji <xref:System.Globalization.CultureInfo.CurrentUICulture%2A?displayProperty=nameWithType> właściwości jest ustawiane niejawnie przez system Windows `GetUserDefaultUILanguage` funkcji. Ta funkcja jest dostarczany przez wielojęzycznego interfejsu użytkownika (MUI), który umożliwia użytkownikowi Ustaw język domyślny. Jeśli język interfejsu użytkownika nie jest ustawiony przez użytkownika, domyślnie na język zainstalowany system, który jest językiem zasobów systemu operacyjnego.  
  
 W poniższym przykładzie prosty "Hello world" jawnie ustawia bieżącej kultury interfejsu użytkownika. Zawiera zasoby dla kultury trzy: angielski (Stany Zjednoczone) lub en US, francuski (Francja) lub fr-FR i rosyjski (Rosji) lub ru-RU. Zasoby en US znajdują się w pliku tekstowym o nazwie Greetings.txt:  
  
```  
HelloString=Hello world!  
```  
  
 Zasoby fr-FR znajdują się w pliku tekstowym o nazwie Greetings.fr-FR.txt:  
  
```  
HelloString=Salut tout le monde!  
```  
  
 Zasoby ru-RU znajdują się w pliku tekstowym o nazwie Greetings.ru-RU.txt:  
  
```  
HelloString=Всем привет!  
```  
  
 Oto kod źródłowy, na przykład (Example.vb dla używanej wersji programu Visual Basic) lub Example.cs dla wersji języka C#:  
  
 [!code-csharp[Conceptual.Resources.CurrentCulture#1](~/samples/snippets/csharp/VS_Snippets_CLR/conceptual.resources.currentculture/cs/example.cs#1)]
 [!code-vb[Conceptual.Resources.CurrentCulture#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/conceptual.resources.currentculture/vb/example.vb#1)]  
  
 Aby skompilować w tym przykładzie, Utwórz plik wsadowy (bat), który zawiera następujące polecenia i uruchom go z wiersza polecenia. Jeśli używasz programu C#, określ `csc` zamiast `vbc` i `Example.cs` zamiast `Example.vb`.  
  
```  
resgen Greetings.txt   
vbc Example.vb /resource:Greetings.resources  
  
resgen Greetings.fr-FR.txt  
Md fr-FR  
al /embed:Greetings.fr-FR.resources /culture:fr-FR /out:fr-FR\Example.resources.dll  
  
resgen Greetings.ru-RU.txt  
Md ru-RU  
al /embed:Greetings.ru-RU.resources /culture:ru-RU /out:ru-RU\Example.resources.dll  
```  
  
<a name="retrieving"></a>   
### <a name="retrieving-resources"></a>Pobieranie zasobów  
 Należy wywołać <xref:System.Resources.ResourceManager.GetObject%28System.String%29> i <xref:System.Resources.ResourceManager.GetString%28System.String%29> metod dostępu do określonego zasobu. Możesz także wywołać <xref:System.Resources.ResourceManager.GetStream%28System.String%29> metoda pobierania zasobów innych niż ciąg w postaci tablicy bajtów. Domyślnie w aplikacji, która ma zlokalizowane zasoby, te metody zwracają zasobów dla kultury ustaleniami bieżącej kultury interfejsu użytkownika w wątku, który zgłosił wywołania. Zawiera Poprzednia sekcja [ResourceManager i zasoby specyficzne dla kultury](#CultureSpecific), aby uzyskać więcej informacji na temat sposobu zdefiniowania bieżącej kultury interfejsu użytkownika w wątku. Jeśli Menedżer zasobów nie można odnaleźć zasobów dla kultury interfejsu użytkownika bieżącego wątku, używa procesu rezerwowy można pobrać określonego zasobu. Jeśli Menedżer zasobów nie może odnaleźć żadnych zasobów zlokalizowanych, używa zasobów kultury domyślnej. Aby uzyskać więcej informacji o regułach rezerwowy zasobów, zobacz sekcję "Proces rezerwowy dla zasobów" w artykule [pakowanie i wdrażanie zasobów](~/docs/framework/resources/packaging-and-deploying-resources-in-desktop-apps.md).  
  
> [!NOTE]
>  Jeśli określony plik .resources w <xref:System.Resources.ResourceManager> nie można odnaleźć konstruktora klasy, próba pobrania zasobu zgłasza <xref:System.Resources.MissingManifestResourceException> lub <xref:System.Resources.MissingSatelliteAssemblyException> wyjątku. Aby uzyskać informacje o obsłudze wyjątek, zobacz [Obsługa missingmanifestresourceexception — i wyjątków missingsatelliteassemblyexception —](#exception) później w tym temacie.  
  
 W poniższym przykładzie użyto <xref:System.Resources.ResourceManager.GetString%2A> metoda pobierania specyficzne dla kultury zasobów. Zawiera zasoby skompilowana z plików txt dla języka angielskiego (en), francuski (Francja) (fr-FR) i rosyjski (ru-RU) (Rosji) kultur. Przykład umożliwia zmianę bieżącej kultury i bieżącej kultury interfejsu użytkownika na język angielski (Stany Zjednoczone), francuski (Francja), rosyjski (Rosji) i szwedzki (Szwecja). Następnie wywołuje <xref:System.Resources.ResourceManager.GetString%2A> metoda pobierania zlokalizowanego ciągu, który wyświetla wraz z bieżącego dnia i miesiąca. Zauważ, że dane wyjściowe wyświetla odpowiedni zlokalizowany ciąg z wyjątkiem przypadków, gdy bieżąca kultura interfejsu użytkownika szwedzki (Szwecja). Ponieważ języka szwedzkiego zasoby są niedostępne, aplikacja używa zamiast niego zasoby domyślną kulturę, czyli w języku angielskim.  
  
 Przykład wymaga plików tekstowych zasobów wymienionych w poniższej tabeli. Każdy ma będący pojedynczym ciągiem zasób o nazwie `DateStart`.  
  
|Kultury|Nazwa pliku|Nazwa zasobu|Wartość zasobu|  
|-------------|---------------|-------------------|--------------------|  
|EN US|DateStrings.txt|`DateStart`|Dzisiaj jest|  
|fr-FR|DateStrings.fr-FR.txt|`DateStart`|Aujourd'hui, le, and c'est|  
|ru-RU|DateStrings.ru-RU.txt|`DateStart`|СЕГОДНЯ|  
  
 Oto kod źródłowy, na przykład (ShowDate.vb dla używanej wersji programu Visual Basic) lub ShowDate.cs dla wersji języka C# kodu.  
  
 [!code-csharp[System.Resources.ResourceManager.Class#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.resources.resourcemanager.class/cs/showdate.cs#2)]
 [!code-vb[System.Resources.ResourceManager.Class#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.resources.resourcemanager.class/vb/showdate.vb#2)]  
  
 Do kompilowania w tym przykładzie, Utwórz plik wsadowy, który zawiera następujące polecenia i uruchom go z wiersza polecenia. Jeśli używasz programu C#, określ `csc` zamiast `vbc` i `showdate.cs` zamiast `showdate.vb`.  
  
```  
  
resgen DateStrings.txt  
vbc showdate.vb /resource:DateStrings.resources  
  
md fr-FR  
resgen DateStrings.fr-FR.txt  
al /out:fr-FR\Showdate.resources.dll /culture:fr-FR /embed:DateStrings.fr-FR.resources   
  
md ru-RU  
resgen DateStrings.ru-RU.txt  
al /out:ru-RU\Showdate.resources.dll /culture:ru-RU /embed:DateStrings.ru-RU.resources  
  
```  
  
 Istnieją dwa sposoby można pobrać zasobów określonej kultury innej niż bieżąca kultura interfejsu użytkownika:  
  
-   Możesz wywołać <xref:System.Resources.ResourceManager.GetString%28System.String%2CSystem.Globalization.CultureInfo%29>, <xref:System.Resources.ResourceManager.GetObject%28System.String%2CSystem.Globalization.CultureInfo%29>, lub <xref:System.Resources.ResourceManager.GetStream%28System.String%2CSystem.Globalization.CultureInfo%29> metoda pobierania zasobów dla określonej kultury. Jeśli nie można odnaleźć zlokalizowanych zasobów, Menedżer zasobów używa proces rezerwowy zasobów można znaleźć odpowiedniego zasobu.  
  
-   Możesz wywołać <xref:System.Resources.ResourceManager.GetResourceSet%2A> metodę, aby uzyskać <xref:System.Resources.ResourceSet> obiekt, który reprezentuje zasobów dla określonej kultury. W wywołaniu metody można określić, czy Menedżera zasobów sondy dla kultury nadrzędnego, jeśli nie można odnaleźć zlokalizowanych zasobów lub czy go po prostu powraca do zasobów kultury domyślnej. Następnie można użyć <xref:System.Resources.ResourceSet> metod dostępu do zasobów (zlokalizowany dla tej kultury) według nazwy lub do wyliczenia zasobów w zestawie.  
  
<a name="exception"></a>   
### <a name="handling-missingmanifestresourceexception-and-missingsatelliteassemblyexception-exceptions"></a>Obsługa wyjątków MissingManifestResourceException i MissingSatelliteAssemblyException  
 Jeśli użytkownik próbuje pobrać określonego zasobu, ale Menedżera zasobów nie można znaleźć czy zdefiniowano zasobów i nie kultury domyślnej lub zasobów kultury domyślnej nie można znaleźć, zgłasza wyjątek, Menedżer zasobów <xref:System.Resources.MissingManifestResourceException> wyjątek Jeśli go oczekuje, że można znaleźć zasobów w zestawie głównym lub <xref:System.Resources.MissingSatelliteAssemblyException> Jeśli oczekuje znaleźć zasoby w zestawie satelickim. Należy pamiętać, że jest wyjątek podczas wywoływania metody pobierania zasobów takich jak <xref:System.Resources.ResourceManager.GetString%2A> lub <xref:System.Resources.ResourceManager.GetObject%2A>, a kiedy użytkownik tworzy wystąpienia <xref:System.Resources.ResourceManager> obiektu.  
  
 Zwykle wyjątku w następujących warunkach:  
  
-   Zestaw plików lub satelitarnej odpowiedni zasób nie istnieje. Menedżer zasobów oczekuje aplikacji domyślnych zasobów do osadzenia w zestawie głównym aplikacji, są nieobecne. Jeśli <xref:System.Resources.NeutralResourcesLanguageAttribute> atrybut wskazuje, że zasoby domyślne aplikacji znajdują się w zestawie satelickim, że nie można znaleźć zestawu. Podczas kompilowania aplikacji, upewnij się, że zasoby osadzone w zestawie głównym lub że zestawu satelickiego niezbędne jest generowany, a następnie odpowiednio nazwę. Jego nazwa powinna mieć postać *appName*. resources.dll, a powinien znajdować się w katalogu o nazwie po kultury, którego zawiera zasoby.  
  
-   Aplikacja nie ma domyślnego lub kultury neutralnej zdefiniowane. Dodaj <xref:System.Resources.NeutralResourcesLanguageAttribute> atrybut do pliku kodu źródłowego lub plik projektu informacji o pliku (AssemblyInfo.vb dla aplikacji Visual Basic) lub AssemblyInfo.cs aplikacji C#.  
  
-   `baseName` Parametru w <xref:System.Resources.ResourceManager.%23ctor%28System.String%2CSystem.Reflection.Assembly%29> Konstruktor nie określa nazwę pliku .resources. Nazwa powinna zawierać nazw FQDN pliku zasobów, ale nie rozszerzenie nazwy pliku. Zazwyczaj nazwy przestrzeni nazw dołączyć pliki zasobów, które są tworzone w programie Visual Studio, ale nie pliki zasobów, które są tworzone i skompilowany w wierszu polecenia. Nazwy plików .resources osadzonych można określić, kompilowania i uruchamiania następujących narzędzi. Jest to aplikacja konsoli, który przyjmuje nazwę zestawu głównego lub zestawu satelickiego jako parametru wiersza polecenia. Wyświetla ciągów, które należy podawać jako `baseName` parametr, aby Menedżer zasobów można poprawnie rozpoznać zasobu.  
  
     [!code-csharp[System.Resources.ResourceManager.Class#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.resources.resourcemanager.class/cs/resourcenames.cs#4)]
     [!code-vb[System.Resources.ResourceManager.Class#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.resources.resourcemanager.class/vb/resourcenames.vb#4)]  
  
 Jawnie w przypadku zmiany bieżącej kultury aplikacji, należy również pamiętać, że usługa resource manager pobiera zestaw zasobów na podstawie wartości z <xref:System.Globalization.CultureInfo.CurrentUICulture%2A?displayProperty=nameWithType> właściwości, a nie <xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=nameWithType> właściwości. Zwykle Jeśli zmienisz jedną wartość, należy również zmienić innych.  
  
<a name="versioning"></a>   
### <a name="resource-versioning"></a>Przechowywanie wersji zasobu  
 Ponieważ główny zestaw zawierający zasoby domyślne aplikacji jest oddzielony od zestawy satelickie aplikacji, można zwolnić bez ponownego wdrożenia zestawy satelickie nowej wersji zestawu głównego. Możesz użyć <xref:System.Resources.SatelliteContractVersionAttribute> atrybutu istniejące zestawy satelickie i poinstruowanie Menedżera zasobów nie można ponownie wdrożyć je przy użyciu nowej wersji programu główny zestaw  
  
 Aby uzyskać więcej informacji na temat obsługi wersjonowanie zestawów satelickich, zobacz artykuł [podczas pobierania zasobów](~/docs/framework/resources/retrieving-resources-in-desktop-apps.md).  
  
<a name="config"></a>   
### <a name="satelliteassemblies-configuration-file-node"></a>\<satelliteassemblies > węzeł pliku konfiguracji  
 Dla plików wykonywalnych, które są wdrożone i uruchom z witryny sieci Web (pliki .exe HREF) <xref:System.Resources.ResourceManager> obiektu może sondowania zestawów satelickich za pośrednictwem sieci web, która może obniżyć wydajność aplikacji. Aby wyeliminować problemy z wydajnością, można ograniczyć, to sondowanie zestawy satelickie, które zostały wdrożone z aplikacją. Aby to zrobić, należy utworzyć `<satelliteassemblies>` węzła w pliku konfiguracji aplikacji, aby określić, czy dla aplikacji, które zostały wdrożone określony zestaw kultur <xref:System.Resources.ResourceManager> obiekt nie należy próbować sondowania dla dowolnego kultury, który nie znajduje się w tym węźle.  
  
> [!NOTE]
>  Preferowany alternatywą dla tworzenia `<satelliteassemblies>` węzła jest użycie [Manifest wdrażania ClickOnce](http://msdn.microsoft.com/library/8457e615-e3b6-4990-8dcf-11bc590e4e9b) funkcji.  
  
 W pliku konfiguracji aplikacji należy utworzyć sekcję podobny do następującego:  
  
```  
<?xml version ="1.0"?>  
<configuration>  
    <satelliteassemblies>  
        <assembly name="MainAssemblyName, Version=versionNumber, Culture=neutral, PublicKeyToken=null|yourPublicKeyToken">  
            <culture>cultureName1</culture>  
            <culture>cultureName2</culture>  
            <culture>cultureName3</culture>  
        </assembly>  
    </satelliteassemblies>  
</configuration>  
```  
  
 Edytuj informacje o konfiguracji w następujący sposób:  
  
-   Określ co najmniej jedno `<assembly>` węzłów dla każdego zestawu głównego, który zostanie wdrożony, gdzie każdy węzeł określa nazwę FQDN zestawu. Określ nazwę użytkownika główny zestaw zamiast *MainAssemblyName*i określ `Version`, `PublicKeyToken`, i `Culture` atrybutu wartości, które odpowiadają do używanego zestawu głównego.  
  
     Aby uzyskać `Version` atrybutu, określ numer wersji z zestawu. Na przykład pierwsza wersja używanego zestawu może być numer wersji 1.0.0.0.  
  
     Dla `PublicKeyToken` atrybutu, należy określić słowa kluczowego `null` używanemu zestawowi silną nazwą nie jest zarejestrowany, lub Określ token klucza publicznego korzystasz z zestawu.  
  
     Dla `Culture` atrybutu, należy określić słowa kluczowego `neutral` do wyznaczenia główny zestaw i spowodować <xref:System.Resources.ResourceManager> klasy badanie tylko dla kultury, na liście `<culture>` węzłów.  
  
     Aby uzyskać więcej informacji na temat zestawu w pełni kwalifikowanej nazwy, zobacz artykuł [nazwy zestawu](~/docs/framework/app-domains/assembly-names.md). Aby uzyskać więcej informacji na temat zestawów o silnych nazwach, zobacz artykuł [tworzenie i zestawy Using Strong-Named](~/docs/framework/app-domains/create-and-use-strong-named-assemblies.md).  
  
-   Określ co najmniej jedno `<culture>` węzłów z nazwą określoną kulturę, taką jak "fr-FR" lub nazwę kultury neutralnej, na przykład "fr".  
  
 Jeśli zasoby są niezbędne w przypadku zestawu nie jest wymieniony w obszarze `<satelliteassemblies>` węzła, <xref:System.Resources.ResourceManager> klasy sondy dla kultury przy użyciu standardowych zasad sondowania.  
  
<a name="ws"></a>   
## <a name="includewin8appnamelongincludeswin8-appname-long-mdmd-apps"></a>[!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] Aplikacje  
  
> [!IMPORTANT]
>  Mimo że <xref:System.Resources.ResourceManager> klasa jest obsługiwana w [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] aplikacji, nie zaleca się jej użycia. Klasa jest używana tylko podczas opracowywania [!INCLUDE[net_portable](~/includes/net-portable-md.md)] projektów, które mogą być używane z [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] aplikacji. Można pobrać zasobów z [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] aplikacji, użyj [Windows.ApplicationModel.Resources.ResourceLoader](http://go.microsoft.com/fwlink/p/?LinkId=238182) zamiast klasy.  
  
 Aby uzyskać [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] aplikacji, <xref:System.Resources.ResourceManager> klasy pobiera zasoby z plików (PRI) indeksu zasobów pakietu. Pojedynczego pliku PRI (pliku PRI pakietu aplikacji) zawiera zasoby zarówno domyślną kulturę i zlokalizowane kultur. Narzędzie MakePRI do utworzenia pliku PRI z plików zasobów, które są w formacie XML zasobów (.resw). Dla zasobów, które znajdują się w projekcie programu Visual Studio Visual Studio obsługuje proces tworzenia i automatycznie pakowania pliku PRI. Następnie można użyć programu .NET Framework <xref:System.Resources.ResourceManager> klasę, aby uzyskać dostęp do zasobów aplikacji lub biblioteki.  
  
 Można utworzyć wystąpienia <xref:System.Resources.ResourceManager> obiekt do [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] aplikacji w taki sam sposób jak w przypadku aplikacji klasycznych.  
  
 Można następnie uzyskać dostęp do zasobów dla określonej kultury, przekazując Nazwa zasobu, które mają zostać pobrane do <xref:System.Resources.ResourceManager.GetString%28System.String%29> metody. Domyślnie ta metoda zwraca zasobów dla kultury ustaleniami bieżącej kultury interfejsu użytkownika w wątku, który zgłosił wywołania. Można również pobierać zasobów dla określonej kultury, przekazując nazwy zasobu i <xref:System.Globalization.CultureInfo> obiekt, który reprezentuje kultury, którego zasób jest pobierane w celu <xref:System.Resources.ResourceManager.GetString%28System.String%2CSystem.Globalization.CultureInfo%29> metody. Jeśli nie można odnaleźć zasobów dla bieżącej kultury interfejsu użytkownika lub określonej kultury, Menedżer zasobów używa listy rezerwowej język interfejsu użytkownika można znaleźć odpowiedniego zasobu.  
  
   
  
## Examples  
 W poniższym przykładzie pokazano sposób umożliwia uzyskanie zasobów ciągu z zestawu głównego i zestaw satelicki kultury jawne i niejawne bieżącej kultury interfejsu użytkownika. Aby uzyskać więcej informacji, zobacz sekcję "Directory lokalizacji dla satelity zestawy nie zainstalowany w globalnej pamięci podręcznej zestawów" [tworzenie zestawów satelickich](~/docs/framework/resources/creating-satellite-assemblies-for-desktop-apps.md) tematu.  
  
 Aby uruchomić ten przykład:  
  
1.  W katalogu aplikacji Utwórz plik o nazwie rmc.txt, który zawiera następujące ciągi zasobów:  
  
    ```  
  
    day=Friday  
    year=2006  
    holiday="Cinco de Mayo"  
  
    ```  
  
2.  Użyj [Generator pliku zasobów](~/docs/framework/tools/resgen-exe-resource-file-generator.md) do generowania rmc.resources pliku zasobu z pliku wejściowego rmc.txt w następujący sposób:  
  
    ```  
    resgen rmc.txt  
    ```  
  
3.  Utwórz podkatalogiem katalogu aplikacji i nazywa je "es-MX". Jest to nazwa kultury zestawu satelickiego, która zostanie utworzona w trzech kolejnych krokach.  
  
4.  Utwórz plik o nazwie rmc.es-MX.txt w katalogu es MX, który zawiera następujące ciągi zasobów:  
  
    ```  
  
    day=Viernes  
    year=2006  
    holiday="Cinco de Mayo"  
  
    ```  
  
5.  Użyj [Generator pliku zasobów](~/docs/framework/tools/resgen-exe-resource-file-generator.md) do generowania rmc.es MX.resources pliku zasobu z pliku wejściowego rmc.es MX.txt w następujący sposób:  
  
    ```  
    resgen rmc.es-MX.txt  
    ```  
  
6.  Załóżmy, że nazwa pliku w tym przykładzie jest rmc.vb lub rmc.cs. Skopiuj następujący kod źródłowy do pliku. Następnie go skompilować i osadzić pliku zasobów zestawu głównego, rmc.resources, w zestawie pliku wykonywalnego. Jeśli używasz kompilator Visual Basic składnia jest następująca:  
  
    ```  
    vbc rmc.vb /resource:rmc.resources  
    ```  
  
     Składnia odpowiednie dla kompilatora C# jest następująca:  
  
    ```  
    csc /resource:rmc.resources rmc.cs  
    ```  
  
7.  Użyj [Assembly Linker](~/docs/framework/tools/al-exe-assembly-linker.md) można utworzyć zestawu satelickiego. Jeśli podstawowa nazwa aplikacji jest rmc, nazwa zestawu satelity musi być rmc.resources.dll. Zestawu satelickiego powinny zostać utworzone w katalogu es MX. Jeśli es MX jest bieżącym katalogiem, należy użyć tego polecenia:  
  
    ```  
    al /embed:rmc.es-MX.resources /c:es-MX /out:rmc.resources.dll   
    ```  
  
8.  Uruchom rmc.exe do osadzonego zasobu ciągów wyświetlania.  
  
 [!code-csharp[ResourceManager_Class#1](~/samples/snippets/csharp/VS_Snippets_CLR/ResourceManager_Class/cs/rmc.cs#1)]
 [!code-vb[ResourceManager_Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/ResourceManager_Class/vb/rmc.vb#1)]  
  
 ]]></format>
    </remarks>
    <threadsafe>Ten typ jest bezpieczny wątkowo.</threadsafe>
    <altmember cref="T:System.Globalization.CultureInfo" />
    <altmember cref="P:System.Globalization.CultureInfo.CurrentUICulture" />
    <altmember cref="T:System.Resources.SatelliteContractVersionAttribute" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Resources.ResourceManager" /> klasy.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ResourceManager ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResourceManager.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ResourceManager();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Resources.ResourceManager</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Resources.ResourceManager" /> z domyślnymi wartościami.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten konstruktor jest przydatny tylko wtedy, gdy napisać własny klasą pochodzącą z <xref:System.Resources.ResourceManager> klasy.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ResourceManager (Type resourceSource);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type resourceSource) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResourceManager.#ctor(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (resourceSource As Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ResourceManager(Type ^ resourceSource);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Resources.ResourceManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="resourceSource" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="resourceSource">Typ, w którym Menedżer zasobów pochodzi wszystkie informacje dotyczące znajdowania plików .resources.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Resources.ResourceManager" /> klasy, która odwołuje się do zasobów w zestawów satelickich na podstawie informacji z obiektu określonego typu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="desktop-apps"></a>Aplikacje pulpitu  
 W aplikacjach klasycznych, Menedżer zasobów używa `resourceSource` parametr, aby załadować plik zasobu w następujący sposób:  
  
-   Jeśli <xref:System.Resources.NeutralResourcesLanguageAttribute> atrybut nie jest używana do wskazują, że zasoby domyślną kulturę znajdują się w zestawie satelickim, Menedżer zasobów przyjęto założenie, że plik zasobów dla kultury domyślnej znajduje się w tym samym zestawie co typ określony przez `resourceSource` parametru.  
  
-   Menedżer zasobów przyjęto założenie, że domyślnego pliku zasobów ma taką samą nazwę jak typ określony przez `resourceSource` parametru.  
  
-   Menedżer zasobów używa domyślnej <xref:System.Resources.ResourceSet> klasy do manipulowania pliku zasobu.  
  
 Na przykład danego typu o nazwie MyCompany.MyProduct.MyType, sprawdza plik .resources o nazwie MyCompany.MyProduct.MyType.resources w zestawie, który definiuje Mojtyp Menedżera zasobów.  
  
 W programie Visual Studio, Projektant zasobów automatycznie generuje kod, który definiuje `internal` (w języku C#) lub `Friend` (w języku Visual Basic) klasy, których nazwa jest taka sama jak podstawowa nazwa pliku .resources dla kultury domyślnej. Dzięki temu można utworzyć wystąpienia <xref:System.Resources.ResourceManager> obiektu i połączenie go z określonego zestawu zasobów, pobierając obiekt typu, którego nazwa odpowiada nazwie zasobu, ponieważ tak długo, jak klasa jest widoczna w kompilatorze, muszą być zasobów źródło. Na przykład, jeśli plik .resources nosi nazwę zasób1, następująca instrukcja tworzy <xref:System.Resources.ResourceManager> obiektu zarządzania o nazwie zasób1 w pliku .resources:  
  
 [!code-csharp[System.Resources.ResourceManager.ctor#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.resources.resourcemanager.ctor/cs/ctor1.cs#2)]  
  
 Jeśli nie używasz programu Visual Studio, można utworzyć klasy bez członków, których przestrzeń nazw i nazwę są takie same, jak te domyślny plik .resources. Przykład stanowi ilustrację.  
  
## <a name="includewin8appnamelongincludeswin8-appname-long-mdmd-apps"></a>[!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] Aplikacje  
  
> [!IMPORTANT]
>  Mimo że <xref:System.Resources.ResourceManager> klasa jest obsługiwana w [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] aplikacji, nie zaleca się jej użycia. Klasa jest używana tylko podczas opracowywania [!INCLUDE[net_portable](~/includes/net-portable-md.md)] projektów, które mogą być używane z [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] aplikacji. Można pobrać zasobów z [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] aplikacji, użyj [Windows.ApplicationModel.Resources.ResourceLoader](http://go.microsoft.com/fwlink/p/?LinkId=238182) zamiast klasy.  
  
 W [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] aplikacji, <xref:System.Resources.ResourceManager> używa `resourceSource` parametru do wywnioskowania zestawu, nazwę podstawową i przestrzeń nazw, gdy elementy zasobów może znajdować się w pliku (PRI) indeksu zasobów pakietu aplikacji. Na przykład, dla danego typu o nazwie MyCompany.MyProduct.MyType, który jest zdefiniowany w `MyAssembly`, Menedżer zasobów szuka zasobu Ustaw identyfikator o nazwie MyAssembly i wyszukuje zakresu MyCompany.MyProduct.MyType w ramach danego zestawu zasobów. Menedżer zasobów przeszukuje elementy zasobów w obszarze domyślny kontekst (bieżącej kultury, bieżące ustawienia Duży kontrast itd.) w tym zakresie.  
  
   
  
## Examples  
 W poniższym przykładzie użyto <xref:System.Resources.ResourceManager.%23ctor%28System.Type%29> Konstruktor do tworzenia wystąpienia <xref:System.Resources.ResourceManager> obiektu. Zawiera zasoby skompilowana z plików txt dla języka angielskiego (en), francuski (Francja) (fr-FR) i rosyjski (ru-RU) (Rosji) kultur. Przykład umożliwia zmianę bieżącej kultury i bieżącej kultury interfejsu użytkownika na język angielski (Stany Zjednoczone), francuski (Francja), rosyjski (Rosji) i szwedzki (Szwecja). Następnie wywołuje <xref:System.Resources.ResourceManager.GetString%28System.String%29> metoda pobierania zlokalizowanego ciągu, który wyświetla pozdrowienia, która zależy od porę dnia.  
  
 Przykład wymaga trzech plików tekstowych zasobów, wymienione w poniższej tabeli. Każdy plik zawiera zasoby ciągu o nazwie `Morning`, `Afternoon`, i `Evening`.  
  
|Kultury|Nazwa pliku|Nazwa zasobu|Wartość zasobu|  
|-------------|---------------|-------------------|--------------------|  
|EN US|GreetingResources.txt|`Morning`|Dzień dobry|  
|EN US|GreetingResources.txt|`Afternoon`|Dzień dobry|  
|EN US|GreetingResources.txt|`Evening`|Dobry wieczór|  
|fr-FR|GreetingResources.fr-FR.txt|`Morning`|Bonjour|  
|fr-FR|GreetingResources.fr-FR.txt|`Afternoon`|Bonjour|  
|fr-FR|GreetingResources.fr-FR.txt|`Evening`|Bonsoir|  
|ru-RU|GreetingResources.ru-RU.txt|`Morning`|Доброе утро|  
|ru-RU|GreetingResources.ru-RU.txt|`Afternoon`|Добрый день|  
|ru-RU|GreetingResources.ru-RU.txt|`Evening`|ДОБРЫЙ ВЕЧЕР|  
  
 Następujący plik wsadowy umożliwia kompilowanie przykład Visual Basic i tworzenia pliku wykonywalnego o nazwie Greet.exe. Aby skompilować w języku C#, Zmień nazwę kompilatora z `vbc` do `csc` i rozszerzenie pliku z `.vb` do `.cs`.  
  
```  
  
resgen GreetingResources.txt  
vbc Greet.vb /resource: GreetingResources.resources  
  
md fr-FR  
resgen GreetingResources.fr-FR.txt  
al /out:fr-FR\Greet.resources.dll /culture:fr-FR /embed: GreetingResources.fr-FR.resources   
  
md ru-RU  
resgen GreetingResources.ru-RU.txt  
al /out:ru-RU\Greet.resources.dll /culture:ru-RU /embed: GreetingResources.ru-RU.resources  
  
```  
  
 Oto kod źródłowy, na przykład (ShowDate.vb dla używanej wersji programu Visual Basic) lub ShowDate.cs dla wersji języka C# kodu.  
  
 [!code-csharp[System.Resources.ResourceManager.Ctor#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.resources.resourcemanager.ctor/cs/greet.cs#3)]
 [!code-vb[System.Resources.ResourceManager.Ctor#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.resources.resourcemanager.ctor/vb/greet.vb#3)]  
  
 Oprócz definiujący klasę aplikacji o nazwie `Example`, Wewnętrzna klasa definiuje kodu źródłowego, których nazwa `GreetingResources`, jest taka sama jak podstawowa nazwa plików zasobów. Dzięki temu można pomyślnie utworzyć wystąpienia <xref:System.Resources.ResourceManager> obiektu przez wywołanie metody <xref:System.Resources.ResourceManager.%23ctor%28System.Type%29> konstruktora.  
  
 Powiadomienie, że wyświetla dane wyjściowe odpowiedni zlokalizowany ciąg z wyjątkiem przypadków, gdy bieżącej kultury interfejsu użytkownika szwedzki (Szwecja), w którym to przypadku go używa zasobów języka angielskiego. Ponieważ języka szwedzkiego zasoby są niedostępne, aplikacja używa zasobów kultury domyślnej, zgodnie z definicją <xref:System.Resources.NeutralResourcesLanguageAttribute> atrybutu zamiast tego.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="resourceSource" /> Parametr jest <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ResourceManager (string baseName, System.Reflection.Assembly assembly);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string baseName, class System.Reflection.Assembly assembly) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResourceManager.#ctor(System.String,System.Reflection.Assembly)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ResourceManager(System::String ^ baseName, System::Reflection::Assembly ^ assembly);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Resources.ResourceManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="baseName" Type="System.String" />
        <Parameter Name="assembly" Type="System.Reflection.Assembly" />
      </Parameters>
      <Docs>
        <param name="baseName">Nazwa głównego pliku zasobu bez jego rozszerzenie, ale wraz ze wszystkimi pełni kwalifikowaną nazwę przestrzeni nazw. Na przykład nazwa głównego pliku zasobu o nazwie MyApplication.MyResource.en-US.resources jest MyApplication.MyResource.</param>
        <param name="assembly">Główny zestaw zasobów.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Resources.ResourceManager" /> klasy, która odwołuje się do zasobów zawartych w plikach o nazwie określonego katalogu głównego w danym zestawie.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="desktop-apps"></a>Aplikacje pulpitu  
 W aplikacjach klasycznych pliki pojedynczego zasobu specyficzne dla kultury powinny być zawarte w zestawy satelickie, a plik zasobu kultury domyślnej powinny być zawarte w zestawie głównym. Zestaw satelicki założono, że zawiera zasobów dla kultury pojedynczego określona w manifeście tego zestawu, a jest ładowany w razie potrzeby.  
  
> [!NOTE]
>  Aby pobrać zasobów z plików .resources bezpośrednio, zamiast nich pobieranie z zestawów, należy wywołać <xref:System.Resources.ResourceManager.CreateFileBasedResourceManager%2A> — metoda zamiast tego można utworzyć wystąpienia <xref:System.Resources.ResourceManager> obiektu.  
  
 Jeśli plik zasobu identyfikowany przez `baseName` nie można znaleźć w `assembly`, metoda tworzy <xref:System.Resources.ResourceManager> obiekt, ale próba pobrania określonego zasobu zgłasza wyjątek, zwykle <xref:System.Resources.MissingManifestResourceException>. Aby dowiedzieć się, jak zdiagnozowaniu przyczyny wyjątek, zobacz sekcję "Obsługa missingmanifestresourceexception — wyjątek" <xref:System.Resources.ResourceManager> klasy tematu.  
  
## <a name="includewin8appnamelongincludeswin8-appname-long-mdmd-apps"></a>[!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] Aplikacje  
  
> [!IMPORTANT]
>  Mimo że <xref:System.Resources.ResourceManager> klasa jest obsługiwana w [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] aplikacji, nie zaleca się jej użycia. Klasa jest używana tylko podczas opracowywania [!INCLUDE[net_portable](~/includes/net-portable-md.md)] projektów, które mogą być używane z [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] aplikacji. Można pobrać zasobów z [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] aplikacji, użyj [Windows.ApplicationModel.Resources.ResourceLoader](http://go.microsoft.com/fwlink/p/?LinkId=238182) zamiast klasy.  
  
 W [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] aplikacje, Menedżer zasobów używa prostą nazwę `assembly` do wyszukiwania pasującego zasobu ustawiona w pliku (PRI) indeksu zasobów pakietu aplikacji. `baseName` Parametr jest używany do wyszukiwania elementu zasobów w ramach zestawu zasobów. Na przykład nazwa główna dla PortableLibrary1.Resource1.de DE.resources jest PortableLibrary1.Resource1.  
  
   
  
## Examples  
 W poniższym przykładzie użyto prosta aplikacja "Hello World" niezlokalizowana ilustrujący <xref:System.Resources.ResourceManager.%23ctor%28System.String%2CSystem.Reflection.Assembly%29> konstruktora. Poniżej przedstawiono zawartość pliku tekstowego o nazwie ExampleResources.txt. Podczas kompilowania aplikacji zasób jest osadzony w zestawie głównym aplikacji.  
  
```  
Greeting=Hello  
```  
  
 Plik tekstowy można przekonwertować na plik binarny zasobów przy użyciu w poleceniu wierszu polecenia w następujący sposób:  
  
```  
resgen ExampleResources.txt  
```  
  
 W poniższym przykładzie przedstawiono kodu wykonywalnego, który tworzy <xref:System.Resources.ResourceManager> obiektu monituje użytkownika o wprowadzenie nazwy i wyświetla kartka z życzeniami.  
  
 [!code-csharp[System.Resources.ResourceManager.ctor#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.resources.resourcemanager.ctor/cs/example.cs#1)]
 [!code-vb[System.Resources.ResourceManager.ctor#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.resources.resourcemanager.ctor/vb/example.vb#1)]  
  
 Może być kompilowana przy użyciu następującego polecenia w języku Visual Basic:  
  
```  
vbc Example.vb /resource:ExampleResources.resources  
```  
  
 lub za pomocą następującego polecenia w języku C#:  
  
```  
csc Example.cs /resource:ExampleResources.resources  
```  
  
 Należy pamiętać, że przykład pobiera odwołanie do zestawu, który zawiera plik zasobów przez przekazanie typ zdefiniowany w tym zestawie, do `typeof` — funkcja (w języku C#) lub `GetType` funkcji (w języku Visual Basic) i pobierania wartości jego <xref:System.Type.Assembly%2A?displayProperty=nameWithType>właściwości.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="baseName" /> Lub <paramref name="assembly" /> parametr jest <see langword="null" />.</exception>
        <block subset="none" type="overrides">
          <para>Ten konstruktor korzysta dostarczane przez system <see cref="T:System.Resources.ResourceSet" /> implementacji. Aby używać formatu pliku niestandardowego zasobu, powinien pochodzić od <see cref="T:System.Resources.ResourceSet" /> klasy, Zastąp <see cref="M:System.Resources.ResourceSet.GetDefaultReader" /> i <see cref="M:System.Resources.ResourceSet.GetDefaultWriter" /> metody i przebiegu, który typ <see cref="M:System.Resources.ResourceManager.#ctor(System.String,System.Reflection.Assembly,System.Type)" /> konstruktora. Przy użyciu niestandardowego <see cref="T:System.Resources.ResourceSet" /> może być przydatne do kontrolowanie zasób zasad buforowania lub obsługujące format pliku własnych zasobów, ale zwykle nie jest konieczne.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ResourceManager (string baseName, System.Reflection.Assembly assembly, Type usingResourceSet);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string baseName, class System.Reflection.Assembly assembly, class System.Type usingResourceSet) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResourceManager.#ctor(System.String,System.Reflection.Assembly,System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ResourceManager(System::String ^ baseName, System::Reflection::Assembly ^ assembly, Type ^ usingResourceSet);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Resources.ResourceManager</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="baseName" Type="System.String" />
        <Parameter Name="assembly" Type="System.Reflection.Assembly" />
        <Parameter Name="usingResourceSet" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="baseName">Nazwa głównego pliku zasobu bez jego rozszerzenie, ale wraz ze wszystkimi pełni kwalifikowaną nazwę przestrzeni nazw. Na przykład nazwa głównego pliku zasobu o nazwie MyApplication.MyResource.en-US.resources jest MyApplication.MyResource.</param>
        <param name="assembly">Główny zestaw zasobów.</param>
        <param name="usingResourceSet">Rodzaj niestandardowego <see cref="T:System.Resources.ResourceSet" /> do użycia. Jeśli <see langword="null" />, środowisko uruchomieniowe domyślne <see cref="T:System.Resources.ResourceSet" /> obiekt jest używany.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Resources.ResourceManager" /> klasy, która używa określonej <see cref="T:System.Resources.ResourceSet" /> klasy do odszukania zasoby zawarte w plikach o nazwie określonego katalogu głównego w danym zestawie.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Pliki pojedynczego zasobu specyficzne dla kultury powinny być zawarte w zestawy satelickie, a plik zasobu kultury domyślnej powinny być zawarte w zestawie głównym. Zestaw satelicki założono, że zawiera zasobów dla kultury pojedynczego określona w manifeście tego zestawu, a jest ładowany w razie potrzeby.  
  
> [!NOTE]
>  Aby pobrać zasobów z plików .resources bezpośrednio, zamiast nich pobieranie z zestawów, należy wywołać <xref:System.Resources.ResourceManager.CreateFileBasedResourceManager%2A> — metoda zamiast tego można utworzyć wystąpienia <xref:System.Resources.ResourceManager> obiektu.  
  
 Jeśli plik zasobu identyfikowany przez `baseName` nie można znaleźć w `assembly`, metoda tworzy <xref:System.Resources.ResourceManager> obiekt, ale próba pobrania określonego zasobu zgłasza wyjątek, zwykle <xref:System.Resources.MissingManifestResourceException>. Aby dowiedzieć się, jak zdiagnozowaniu przyczyny wyjątek, zobacz sekcję "Obsługa missingmanifestresourceexception — wyjątek" <xref:System.Resources.ResourceManager> klasy tematu.  
  
> [!NOTE]
>  `usingResourceSet` Parametr jest używany do obsługi formatu zasobów i często będą `null`. To jest inny niż konstruktor, który pobiera <xref:System.Type> tylko.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="usingResourceset" /> nie jest klasy pochodnej z <see cref="T:System.Resources.ResourceSet" />.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="baseName" /> Lub <paramref name="assembly" /> parametr jest <see langword="null" />.</exception>
        <block subset="none" type="usage">
          <para>Ten konstruktor umożliwia określenie <see cref="T:System.Resources.ResourceSet" /> implementacji. Jeśli nie ma określonego <see cref="T:System.Resources.ResourceSet" /> implementacji ale czy jak można stosować format pliku niestandardowego zasobu, powinien pochodzić od <see cref="T:System.Resources.ResourceSet" /> klasy, Zastąp <see cref="M:System.Resources.ResourceSet.GetDefaultReader" /> i <see cref="M:System.Resources.ResourceSet.GetDefaultWriter" /> metody i przebiegu wpisz do tego konstruktora.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="BaseName">
      <MemberSignature Language="C#" Value="public virtual string BaseName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string BaseName" />
      <MemberSignature Language="DocId" Value="P:System.Resources.ResourceManager.BaseName" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property BaseName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ BaseName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Resources.ResourceManager</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera nazwę katalogu głównego plików zasobów, które <see cref="T:System.Resources.ResourceManager" /> wyszukuje zasobów.</summary>
        <value>Nazwa głównego zasobu pliki <see cref="T:System.Resources.ResourceManager" /> wyszukuje zasobów.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Resources.ResourceManager.BaseName%2A> Właściwość odzwierciedla nazwa FQDN przestrzeni nazw i nazwy zasobu głównego pliku zasobu, bez jego rozszerzenia nazwy pliku lub kultury. Na przykład, jeśli w nazwie pliku zasobów aplikacji w domyślnej `SampleApps.StringResources.resources`, wartość <xref:System.Resources.ResourceManager.BaseName%2A> właściwość jest "SampleApps.StringResources". Jeśli nosi nazwę pliku zasobów aplikacji w domyślnej `SampleApps.StringResources.en-US.resources` i jest osadzony w zestawie satelickim, wartość <xref:System.Resources.ResourceManager.BaseName%2A> właściwości jest nadal "SampleApps.StringResources".  
  
> [!IMPORTANT]
>  <xref:System.Resources.ResourceManager.BaseName%2A> Wartość właściwości pliku zasobu, który jest skompilowany i osadzone w wierszu polecenia nie zawiera nazwę przestrzeni nazw, chyba że użytkownik jawnie obejmują jeden podczas kompilowania pliku. Z drugiej strony <xref:System.Resources.ResourceManager.BaseName%2A> wartość właściwości pliku zasobu, który kompilacji i osadzone w środowisku Visual Studio zwykle obejmują domyślną nazwę przestrzeni nazw.  
  
 <xref:System.Resources.ResourceManager.BaseName%2A> Wartość właściwości jest taki sam, jak ciąg przekazany do <xref:System.Resources.ResourceManager.%23ctor%28System.String%2CSystem.Reflection.Assembly%29> lub <xref:System.Resources.ResourceManager.%23ctor%28System.String%2CSystem.Reflection.Assembly%2CSystem.Type%29> Konstruktor podczas tworzenia wystąpienia <xref:System.Resources.ResourceManager> wystąpienia.  
  
   
  
## Examples  
 Nazwy plików .resources osadzonych można określić, kompilowania i uruchamiania następujących narzędzi. Jest to aplikacja konsoli, który przyjmuje nazwę zestawu głównego lub zestawu satelickiego jako parametru wiersza polecenia. Wyświetla ciągów, które należy podawać jako `baseName` parametr <xref:System.Resources.ResourceManager.%23ctor%28System.String%2CSystem.Reflection.Assembly%29> lub <xref:System.Resources.ResourceManager.%23ctor%28System.String%2CSystem.Reflection.Assembly%2CSystem.Type%29> konstruktora, aby Menedżer zasobów można poprawnie rozpoznać zasobu.  
  
 [!code-csharp[System.Resources.ResourceManager.Class#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.resources.resourcemanager.class/cs/resourcenames.cs#4)]
 [!code-vb[System.Resources.ResourceManager.Class#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.resources.resourcemanager.class/vb/resourcenames.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BaseNameField">
      <MemberSignature Language="C#" Value="protected string BaseNameField;" />
      <MemberSignature Language="ILAsm" Value=".field family string BaseNameField" />
      <MemberSignature Language="DocId" Value="F:System.Resources.ResourceManager.BaseNameField" />
      <MemberSignature Language="VB.NET" Value="Protected BaseNameField As String " />
      <MemberSignature Language="C++ CLI" Value="protected: System::String ^ BaseNameField;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Określa nazwę katalogu głównego zasobu pliki <see cref="T:System.Resources.ResourceManager" /> wyszukuje zasobów.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Resources.ResourceManager.BaseNameField> Pole jest przydatny tylko wtedy, gdy napisać własny klasą pochodzącą z <xref:System.Resources.ResourceManager> klasy.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateFileBasedResourceManager">
      <MemberSignature Language="C#" Value="public static System.Resources.ResourceManager CreateFileBasedResourceManager (string baseName, string resourceDir, Type usingResourceSet);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Resources.ResourceManager CreateFileBasedResourceManager(string baseName, string resourceDir, class System.Type usingResourceSet) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResourceManager.CreateFileBasedResourceManager(System.String,System.String,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateFileBasedResourceManager (baseName As String, resourceDir As String, usingResourceSet As Type) As ResourceManager" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Resources::ResourceManager ^ CreateFileBasedResourceManager(System::String ^ baseName, System::String ^ resourceDir, Type ^ usingResourceSet);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Resources.ResourceManager</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Resources.ResourceManager</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="baseName" Type="System.String" />
        <Parameter Name="resourceDir" Type="System.String" />
        <Parameter Name="usingResourceSet" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="baseName">Nazwa głównego zasobów. Na przykład nazwa głównego pliku zasobu o nazwie "MyResource.en-US.resources" jest "MyResource".</param>
        <param name="resourceDir">Nazwa katalogu, które mają zostać wyszukane zasoby. <c>resourceDir</c> może być ścieżką bezwzględną lub ścieżką względną z katalogu aplikacji.</param>
        <param name="usingResourceSet">Rodzaj niestandardowego <see cref="T:System.Resources.ResourceSet" /> do użycia. Jeśli <see langword="null" />, środowisko uruchomieniowe domyślne <see cref="T:System.Resources.ResourceSet" /> obiekt jest używany.</param>
        <summary>Zwraca <see cref="T:System.Resources.ResourceManager" /> obiekt, który wyszukuje określonego katalogu zamiast manifest zestawu zasobów.</summary>
        <returns>Nowe wystąpienie Menedżera zasobów, która wyszukuje określony katalog zamiast manifest zestawu zasobów.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda zwraca Menedżera zasobów, która pobiera zasobów z pliku .resources, który nie jest zagnieżdżony w zestawie. Możesz użyć tej funkcji <xref:System.Resources.ResourceManager> obiekt do załadowania zasobów dla strony platformy ASP.NET lub do testowania <xref:System.Resources.ResourceSet> implementacji.  Aby uzyskać przykład pobiera zasoby z autonomiczny plik .resources, zobacz [podczas pobierania zasobów](~/docs/framework/resources/retrieving-resources-in-desktop-apps.md) artykułu.  
  
 Ta metoda umożliwia określenie <xref:System.Resources.ResourceSet> implementacji. Jeśli nie ma określonego <xref:System.Resources.ResourceSet> implementacji, ale ma być używana w formacie pliku niestandardowego zasobu powinien pochodzić od <xref:System.Resources.ResourceSet> klasy, Zastąp <xref:System.Resources.ResourceSet.GetDefaultReader%2A> i <xref:System.Resources.ResourceSet.GetDefaultWriter%2A> metody i przebiegu wpisz do tego konstruktora.  
  
> [!CAUTION]
>  Przy użyciu plików .resources autonomicznych w aplikacji ASP.NET spowoduje przerwanie wdrażania XCOPY, ponieważ zasoby pozostać zablokowane, dopóki nie zostaną one jawnie wydane przez <xref:System.Resources.ResourceManager.ReleaseAllResources%2A> metody. Jeśli chcesz wdrożyć zasobów z aplikacjami ASP.NET kompiluje plików .resources się do zestawów satelickich.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="baseName" /> Lub <paramref name="resourceDir" /> parametr jest <see langword="null" />.</exception>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">Po wywołaniu późnym wiązaniem za pomocą mechanizmów takich jak <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />. Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</permission>
      </Docs>
    </Member>
    <Member MemberName="FallbackLocation">
      <MemberSignature Language="C#" Value="protected System.Resources.UltimateResourceFallbackLocation FallbackLocation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Resources.UltimateResourceFallbackLocation FallbackLocation" />
      <MemberSignature Language="DocId" Value="P:System.Resources.ResourceManager.FallbackLocation" />
      <MemberSignature Language="VB.NET" Value="Protected Property FallbackLocation As UltimateResourceFallbackLocation" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Resources::UltimateResourceFallbackLocation FallbackLocation { System::Resources::UltimateResourceFallbackLocation get(); void set(System::Resources::UltimateResourceFallbackLocation value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Resources.ResourceManager</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Resources.UltimateResourceFallbackLocation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub Ustawia lokalizację, z której można pobrać domyślnych zasobów rezerwowego.</summary>
        <value>Jedna z wartości wyliczenia, które określa, gdzie Menedżera zasobów można wyszukać zasoby rezerwowe.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Resources.ResourceManager.FallbackLocation%2A> Właściwość przydaje się tylko wtedy, gdy napisać własny klasą pochodzącą z <xref:System.Resources.ResourceManager> klasy.  
  
 Można użyć <xref:System.Resources.NeutralResourcesLanguageAttribute> atrybutu informują Menedżera zasobów, gdzie można znaleźć domyślną kulturę dla aplikacji: w zestawie głównym (ustawienie domyślne) lub w zestawie satelickim.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Resources.UltimateResourceFallbackLocation" />
        <altmember cref="T:System.Resources.NeutralResourcesLanguageAttribute" />
      </Docs>
    </Member>
    <Member MemberName="GetNeutralResourcesLanguage">
      <MemberSignature Language="C#" Value="protected static System.Globalization.CultureInfo GetNeutralResourcesLanguage (System.Reflection.Assembly a);" />
      <MemberSignature Language="ILAsm" Value=".method familystatic hidebysig class System.Globalization.CultureInfo GetNeutralResourcesLanguage(class System.Reflection.Assembly a) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResourceManager.GetNeutralResourcesLanguage(System.Reflection.Assembly)" />
      <MemberSignature Language="VB.NET" Value="Protected Shared Function GetNeutralResourcesLanguage (a As Assembly) As CultureInfo" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; static System::Globalization::CultureInfo ^ GetNeutralResourcesLanguage(System::Reflection::Assembly ^ a);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Resources.ResourceManager</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Globalization.CultureInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Reflection.Assembly" />
      </Parameters>
      <Docs>
        <param name="a">Zestaw, dla którego zwraca informacje specyficzne dla kultury.</param>
        <summary>Zwraca informacje specyficzne dla kultury główny zestaw domyślnych zasobów pobierając zaletą <see cref="T:System.Resources.NeutralResourcesLanguageAttribute" /> atrybutu w określonym zestawie.</summary>
        <returns>Kultura z <see cref="T:System.Resources.NeutralResourcesLanguageAttribute" /> atrybut, jeśli je znaleziono; w przeciwnym razie, niezmienna kultura.</returns>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">Po wywołaniu późnym wiązaniem za pomocą mechanizmów takich jak <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />. Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetObject">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Zwraca wartość określonego zasobu-ciąg dla bieżącej kultury.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetObject">
      <MemberSignature Language="C#" Value="public virtual object GetObject (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetObject(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResourceManager.GetObject(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetObject (name As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ GetObject(System::String ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Resources.ResourceManager</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">Nazwa zasobu do pobrania.</param>
        <summary>Zwraca wartość określonego zasobu-ciąg.</summary>
        <returns>Wartość zasobu zlokalizowany dla bieżącego ustawienia kultury obiektu wywołującego. Jeśli istnieje zestaw odpowiednich zasobów, ale <paramref name="name" /> nie można znaleźć, metoda zwraca <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Resources.ResourceManager.GetObject%2A> Metoda służy do pobierania zasobów innych niż ciąg. Obejmują one wartości, które należą do typów pierwotnych danych, takich jak <xref:System.Int32> lub <xref:System.Double>, map bitowych (takie jak <xref:System.Drawing.Bitmap?displayProperty=nameWithType> obiektu), lub niestandardowy serializować obiektów. Zazwyczaj zwrócony obiekt musi być rzutowanie (C#) lub przekonwertować (w języku Visual Basic) do odpowiedniego typu obiektu.  
  
 Zlokalizowaną zwrócony zasobów dla kultury interfejsu użytkownika bieżącego wątku, który jest zdefiniowany przez <xref:System.Globalization.CultureInfo.CurrentUICulture%2A?displayProperty=nameWithType> właściwości. Jeśli zasób nie jest lokalizowany tej kultury, Menedżer zasobów używa rezerwowej reguł można załadować odpowiedniego zasobu. Jeśli nie można używać zestawu zlokalizowanych zasobów zostanie znaleziony, <xref:System.Resources.ResourceManager> powraca zasobów kultury domyślnej. Jeśli nie zostanie znaleziony zestaw zasobów dla kultury domyślnej, metoda wygeneruje <xref:System.Resources.MissingManifestResourceException> wyjątek lub, jeśli zestaw zasobów powinien znajdować się w zestawie satelickim, <xref:System.Resources.MissingSatelliteAssemblyException> wyjątku. Jeśli Menedżer zasobów można załadować odpowiedniego zasobu ustawiona, ale nie można znaleźć zasobu o nazwie `name`, metoda zwraca `null`.  
  
 <xref:System.Resources.ResourceManager.IgnoreCase%2A> Właściwość określa, czy porównanie `name` o nazwach zasobów jest rozróżniana wielkość liter (ustawienie domyślne) lub z uwzględnieniem wielkości liter.  
  
> [!CAUTION]
>  Ta metoda może zgłaszać wyjątki więcej niż podano. Jedną z przyczyn się, że taka sytuacja może wystąpić jest, jeśli ta metoda wywołuje metodę zgłasza wyjątek.  Na przykład <xref:System.IO.FileLoadException> wyjątek może zostać zgłoszony, jeśli błąd został utworzony, wdrażanie lub Instalowanie zestawu satelickiego, lub <xref:System.Runtime.Serialization.SerializationException> może zostać zgłoszony wyjątek, gdy typu zdefiniowanego przez użytkownika zgłasza wyjątek zdefiniowane przez użytkownika, gdy deserializowany jest typu.  
  
## <a name="performance-considerations"></a>Zagadnienia dotyczące wydajności  
 Jeśli należy wywołać <xref:System.Resources.ResourceManager.GetObject%2A> metody wiele razy z tym samym `name` parametru nie zależą zwracanie odwołania do tego samego obiektu przy każdym wywołaniu metody. Jest to spowodowane <xref:System.Resources.ResourceManager.GetObject%2A> metoda może zwracać odwołanie do istniejącego obiektu zasobów w pamięci podręcznej lub go ponownie załadować zasobów i zwraca odwołanie do obiektu nowych zasobów.  
  
   
  
## Examples  
 W poniższym przykładzie użyto <xref:System.Resources.ResourceManager.GetObject%28System.String%29> metodę deserializacji niestandardowych obiektów. Przykład zawiera kod źródłowy plik o nazwie UIElements.cs (UIElements.vb, jeśli używasz programu Visual Basic) definiuje następującą strukturę o nazwie `PersonTable`. Ta struktura jest przeznaczona do użycia przez Tabela ogólna procedura wyświetlania Wyświetla zlokalizowanych nazw kolumn tabeli. Należy pamiętać, że `PersonTable` struktura jest oznaczona atrybutem <xref:System.SerializableAttribute> atrybutu.  
  
 [!code-csharp[Conceptual.Resources.Retrieving#6](~/samples/snippets/csharp/VS_Snippets_CLR/conceptual.resources.retrieving/cs/example.cs#6)]
 [!code-vb[Conceptual.Resources.Retrieving#6](~/samples/snippets/visualbasic/VS_Snippets_CLR/conceptual.resources.retrieving/vb/example.vb#6)]  
  
 Następujący kod w pliku o nazwie CreateResources.cs (CreateResources.vb w języku Visual Basic) tworzy plik zasobu XML o nazwie UIResources.resx, która przechowuje tytuł tabeli i `PersonTable` obiekt, który zawiera informacje dotyczące aplikacji, który jest zlokalizowany na Język angielski.  
  
 [!code-csharp[Conceptual.Resources.Retrieving#7](~/samples/snippets/csharp/VS_Snippets_CLR/conceptual.resources.retrieving/cs/example1.cs#7)]
 [!code-vb[Conceptual.Resources.Retrieving#7](~/samples/snippets/visualbasic/VS_Snippets_CLR/conceptual.resources.retrieving/vb/example.vb#7)]  
  
 Następujący kod w pliku kodu źródłowego o nazwie GetObject.cs (GetObject.vb), a następnie pobiera zasobów i wyświetla je w konsoli.  
  
 [!code-csharp[Conceptual.Resources.Retrieving#8](~/samples/snippets/csharp/VS_Snippets_CLR/conceptual.resources.retrieving/cs/example2.cs#8)]
 [!code-vb[Conceptual.Resources.Retrieving#8](~/samples/snippets/visualbasic/VS_Snippets_CLR/conceptual.resources.retrieving/vb/example2.vb#8)]  
  
 Możesz skompilować pliku niezbędnych zasobów i zestawów i uruchom aplikację, wykonując następujący plik wsadowy. Należy użyć `/r` opcję, aby podać Resgen.exe z odwołaniem do UIElements.dll, dzięki czemu będzie miał dostęp do informacji o `PersonTable` struktury. Jeśli używasz programu C#, Zastąp `vbc` nazwę kompilatora `csc`i Zastąp `.vb` rozszerzenie o `.cs`.  
  
```  
  
vbc /t:library UIElements.vb  
vbc CreateResources.vb /r:UIElements.dll  
CreateResources  
  
resgen UIResources.resx  /r:UIElements.dll  
vbc GetObject.vb /r:UIElements.dll /resource:UIResources.resources  
  
GetObject.exe  
  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="name" /> Parametr jest <see langword="null" />.</exception>
        <exception cref="T:System.Resources.MissingManifestResourceException">Nie można używać zestawu zlokalizowanych zasobów nie znaleziono i nie ma żadnych zasobów kultury domyślnej. Aby uzyskać informacje o sposobie obsługi tego wyjątku, zobacz sekcję "Obsługa missingmanifestresourceexception — missingsatelliteassemblyexception — wyjątków i" w <see cref="T:System.Resources.ResourceManager" /> klasy tematu.</exception>
        <exception cref="T:System.Resources.MissingSatelliteAssemblyException">W zestawie satelickim, którego nie można odnaleźć znajdują się zasoby domyślną kulturę. Aby uzyskać informacje o sposobie obsługi tego wyjątku, zobacz sekcję "Obsługa missingmanifestresourceexception — missingsatelliteassemblyexception — wyjątków i" w <see cref="T:System.Resources.ResourceManager" /> klasy tematu.</exception>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">Po wywołaniu późnym wiązaniem za pomocą mechanizmów takich jak <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />. Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</permission>
        <altmember cref="M:System.Resources.ResourceManager.GetStream(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="GetObject">
      <MemberSignature Language="C#" Value="public virtual object GetObject (string name, System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetObject(string name, class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResourceManager.GetObject(System.String,System.Globalization.CultureInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetObject (name As String, culture As CultureInfo) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ GetObject(System::String ^ name, System::Globalization::CultureInfo ^ culture);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Resources.ResourceManager</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="name">Nazwa zasobu do pobrania.</param>
        <param name="culture">Kultura, dla którego jest zlokalizowana zasobu. Jeśli zasób nie jest lokalizowany tej kultury, Menedżer zasobów używa rezerwowej reguł można znaleźć odpowiedniego zasobu.  
  
 Jeśli ta wartość jest <see langword="null" />, <see cref="T:System.Globalization.CultureInfo" /> jest on uzyskiwany za pomocą <see cref="P:System.Globalization.CultureInfo.CurrentUICulture" /> właściwości.</param>
        <summary>Pobiera wartość określonego zasobu-ciąg zlokalizowany dla określonej kultury.</summary>
        <returns>Wartość zasobu zlokalizowane dla określonej kultury. Jeśli istnieje zestaw odpowiednich zasobów, ale <paramref name="name" /> nie można znaleźć, metoda zwraca <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Resources.ResourceManager.GetObject%28System.String%2CSystem.Globalization.CultureInfo%29> Metoda służy do pobierania zasobów innych niż ciąg. Obejmują one wartości, które należą do typów pierwotnych danych, takich jak <xref:System.Int32> lub <xref:System.Double>, map bitowych (takie jak <xref:System.Drawing.Bitmap?displayProperty=nameWithType> obiektu), lub niestandardowy serializować obiektów. Zazwyczaj zwrócony obiekt musi być rzutowanie (C#) lub przekonwertować (w języku Visual Basic) do odpowiedniego typu obiektu.  
  
 Zwrócony zasobów jest zlokalizowany na kultura, która jest określona przez `culture`, lub dla kultury określonej przez <xref:System.Globalization.CultureInfo.CurrentUICulture%2A?displayProperty=nameWithType> właściwości Jeśli `culture` jest `null`. Jeśli zasób nie jest lokalizowany tej kultury, Menedżer zasobów używa rezerwowej reguł można załadować odpowiedniego zasobu. Jeśli nie można używać zestawu zlokalizowanych zasobów zostanie znaleziony, Menedżer zasobów powraca zasobów kultury domyślnej. Jeśli nie zostanie znaleziony zestaw zasobów dla kultury domyślnej, metoda wygeneruje <xref:System.Resources.MissingManifestResourceException> wyjątek lub, jeśli zestaw zasobów powinien znajdować się w zestawie satelickim, <xref:System.Resources.MissingSatelliteAssemblyException> wyjątku. Jeśli Menedżer zasobów można załadować odpowiedniego zasobu ustawiona, ale nie można znaleźć zasobu o nazwie `name`, metoda zwraca `null`.  
  
 <xref:System.Resources.ResourceManager.IgnoreCase%2A> Właściwość określa, czy porównanie `name` o nazwach zasobów jest rozróżniana wielkość liter (ustawienie domyślne) lub z uwzględnieniem wielkości liter.  
  
> [!CAUTION]
>  Ta metoda może zgłaszać wyjątki więcej niż podano. Jedną z przyczyn się, że taka sytuacja może wystąpić jest, jeśli ta metoda wywołuje metodę zgłasza wyjątek.  Na przykład <xref:System.IO.FileLoadException> wyjątek może zostać zgłoszony, jeśli błąd został utworzony, wdrażanie lub Instalowanie zestawu satelickiego, lub <xref:System.Runtime.Serialization.SerializationException> może zostać zgłoszony wyjątek, gdy typu zdefiniowanego przez użytkownika zgłasza wyjątek zdefiniowane przez użytkownika, gdy deserializowany jest typu.  
  
## <a name="performance-considerations"></a>Zagadnienia dotyczące wydajności  
 Jeśli należy wywołać <xref:System.Resources.ResourceManager.GetObject%2A> metody wiele razy z tym samym `name` parametru nie zależą zwracanie odwołania do tego samego obiektu przy każdym wywołaniu metody. Jest to spowodowane <xref:System.Resources.ResourceManager.GetObject%2A> metoda może zwracać odwołanie do istniejącego obiektu zasobów w pamięci podręcznej lub go ponownie załadować zasobów i zwraca odwołanie do obiektu nowych zasobów.  
  
   
  
## Examples  
 W poniższym przykładzie użyto <xref:System.Resources.ResourceManager.GetObject%28System.String%2CSystem.Globalization.CultureInfo%29> metodę deserializacji niestandardowych obiektów. Przykład zawiera kod źródłowy plik o nazwie NumberInfo.cs (NumberInfo.vb, jeśli używasz programu Visual Basic) definiuje następującą strukturę o nazwie `Numbers`. Ta struktura jest przeznaczona do użycia przez prostej aplikacji edukacyjnych, który innej niż angielska wymowy liczby dziesięciu w języku angielskim. Należy pamiętać, że `Numbers` klasy jest oznaczony atrybutem <xref:System.SerializableAttribute> atrybutu.  
  
 [!code-csharp[System.Resources.ResourceManager.GetObject#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.resources.resourcemanager.getobject/cs/numberinfo.cs#1)]
 [!code-vb[System.Resources.ResourceManager.GetObject#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.resources.resourcemanager.getobject/vb/numberinfo.vb#1)]  
  
 Następujące kodu źródłowego z pliku o nazwie CreateResources.cs (CreateResources.vb w języku Visual Basic) tworzy XML plików zasobów dla języka angielskiego domyślne, a także dla języków, francuski, portugalski, rosyjski.  
  
 [!code-csharp[System.Resources.ResourceManager.GetObject#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.resources.resourcemanager.getobject/cs/createresources.cs#2)]
 [!code-vb[System.Resources.ResourceManager.GetObject#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.resources.resourcemanager.getobject/vb/createresources.vb#2)]  
  
 Zasoby są używane przez następujące aplikacji, która ustawia bieżącej kultury interfejsu użytkownika na francuski (Francja), portugalski (Brazylia) lub rosyjski (Rosji). Wywołuje <xref:System.Resources.ResourceManager.GetObject%28System.String%29> metodę, aby pobrać `Numbers` obiekt, który zawiera numery zlokalizowanych i <xref:System.Resources.ResourceManager.GetObject%28System.String%2CSystem.Globalization.CultureInfo%29> metody, aby uzyskać `Numbers` obiekt, który zawiera numery języka angielskiego. Wyświetla nieparzystej liczby przy użyciu bieżącej kultury interfejsu użytkownika i języka angielskiego. Pliku kodu źródłowego nosi nazwę ShowNumbers.cs (ShowNumbers.vb).  
  
 [!code-csharp[System.Resources.ResourceManager.GetObject#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.resources.resourcemanager.getobject/cs/shownumbers.cs#3)]
 [!code-vb[System.Resources.ResourceManager.GetObject#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.resources.resourcemanager.getobject/vb/shownumbers.vb#3)]  
  
 Następujący plik wsadowy umożliwia tworzenie i wykonywanie wersji Visual Basic przykładu. Jeśli używasz programu C#, Zastąp `vbc` z `csc`i Zastąp `.vb` rozszerzenie o `.cs`.  
  
```  
  
vbc /t:library NumberInfo.vb  
  
vbc CreateResources.vb /r:NumberInfo.dll  
CreateResources  
  
resgen NumberResources.resx /r:NumberInfo.dll  
  
resgen NumberResources.fr.resx /r:Numberinfo.dll  
Md fr  
al /embed:NumberResources.fr.resources /culture:fr /t:lib /out:fr\ShowNumbers.resources.dll  
  
resgen NumberResources.pt.resx  /r:Numberinfo.dll  
Md pt  
al /embed:NumberResources.pt.resources /culture:pt /t:lib /out:pt\ShowNumbers.resources.dll  
  
resgen NumberResources.ru.resx /r:Numberinfo.dll  
Md ru  
al /embed:NumberResources.ru.resources /culture:ru /t:lib /out:ru\ShowNumbers.resources.dll  
  
vbc ShowNumbers.vb /r:NumberInfo.dll /resource:NumberResources.resources  
ShowNumbers.exe  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="name" /> Parametr jest <see langword="null" />.</exception>
        <exception cref="T:System.Resources.MissingManifestResourceException">Nie można używać zestawu zasobów zostały znalezione i nie ma żadnych zasobów kultury domyślnej. Aby uzyskać informacje o sposobie obsługi tego wyjątku, zobacz sekcję "Obsługa missingmanifestresourceexception — missingsatelliteassemblyexception — wyjątków i" w <see cref="T:System.Resources.ResourceManager" /> klasy tematu.</exception>
        <exception cref="T:System.Resources.MissingSatelliteAssemblyException">W zestawie satelickim, którego nie można odnaleźć znajdują się zasoby domyślną kulturę. Aby uzyskać informacje o sposobie obsługi tego wyjątku, zobacz sekcję "Obsługa missingmanifestresourceexception — missingsatelliteassemblyexception — wyjątków i" w <see cref="T:System.Resources.ResourceManager" /> klasy tematu.</exception>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">Po wywołaniu późnym wiązaniem za pomocą mechanizmów takich jak <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />. Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</permission>
        <threadsafe>
          <see cref="M:System.Resources.ResourceManager.GetObject(System.String,System.Globalization.CultureInfo)" /> Metoda jest bezpieczne dla wątków.</threadsafe>
        <altmember cref="M:System.Resources.ResourceManager.GetStream(System.String,System.Globalization.CultureInfo)" />
        <altmember cref="T:System.Globalization.CultureInfo" />
      </Docs>
    </Member>
    <Member MemberName="GetResourceFileName">
      <MemberSignature Language="C#" Value="protected virtual string GetResourceFileName (System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string GetResourceFileName(class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResourceManager.GetResourceFileName(System.Globalization.CultureInfo)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetResourceFileName (culture As CultureInfo) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::String ^ GetResourceFileName(System::Globalization::CultureInfo ^ culture);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Resources.ResourceManager</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="culture">Obiekt kultury, dla którego jest tworzony nazwę pliku zasobu.</param>
        <summary>Generuje nazwę pliku zasobów dla danego <see cref="T:System.Globalization.CultureInfo" /> obiektu.</summary>
        <returns>Nazwę, która może służyć do pliku zasobów dla danego <see cref="T:System.Globalization.CultureInfo" /> obiektu.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Resources.ResourceManager.GetResourceFileName%2A> Metoda przydaje się tylko wtedy, gdy napisać własny klasą pochodzącą z <xref:System.Resources.ResourceManager> klasy.  
  
 Ta metoda używa <xref:System.Globalization.CultureInfo.Name%2A?displayProperty=nameWithType> właściwość jako część nazwy pliku dla wszystkich języków innych niż Niezmienna kultura. Ta metoda nie wygląda w manifeście zestawu lub touch dysku i służy tylko do konstruowania nazwy pliku zasobu (odpowiednie do przekazania do <xref:System.Resources.ResourceReader> Konstruktor) lub nazwę zasobu manifestu obiektu blob.  
  
 Klasy pochodne mogą przesłaniać tę metodę, aby wyszukać inne rozszerzenie, takich jak ". ResX"lub całkowicie inny schemat nazewnictwa plików zasobów. Należy pamiętać, że metoda mogą być używane, można dostosować nazwę pliku zasobu w zestawie satelickim i nie można dostosować nazwę zestawu satelickiego sam.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">Po wywołaniu późnym wiązaniem za pomocą mechanizmów takich jak <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />. Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</permission>
        <altmember cref="T:System.Globalization.CultureInfo" />
      </Docs>
    </Member>
    <Member MemberName="GetResourceSet">
      <MemberSignature Language="C#" Value="public virtual System.Resources.ResourceSet GetResourceSet (System.Globalization.CultureInfo culture, bool createIfNotExists, bool tryParents);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Resources.ResourceSet GetResourceSet(class System.Globalization.CultureInfo culture, bool createIfNotExists, bool tryParents) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResourceManager.GetResourceSet(System.Globalization.CultureInfo,System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetResourceSet (culture As CultureInfo, createIfNotExists As Boolean, tryParents As Boolean) As ResourceSet" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Resources::ResourceSet ^ GetResourceSet(System::Globalization::CultureInfo ^ culture, bool createIfNotExists, bool tryParents);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Resources.ResourceManager</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Resources.ResourceSet</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="createIfNotExists" Type="System.Boolean" />
        <Parameter Name="tryParents" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="culture">Kultura, do którego zasoby mają być pobierane.</param>
        <param name="createIfNotExists">
          <see langword="true" /> można załadować zasobu ustawiona, jeśli nie została jeszcze; załadowana w przeciwnym razie <see langword="false" />.</param>
        <param name="tryParents">
          <see langword="true" /> Nie można odnaleźć do używania rezerwowego zasobów można załadować odpowiedniego zasobu, jeśli zasób; <see langword="false" /> obejść proces rezerwowy zasobów.</param>
        <summary>Pobiera zestaw zasobów dla określonej kultury.</summary>
        <returns>Zestaw zasobów dla określonej kultury.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zestawu zasobów, która jest zwracana reprezentuje zasoby, które są zlokalizowane dla określonej kultury. Jeśli nie zostały zlokalizowane zasoby dla tej kultury i `tryParents` jest `true`, <xref:System.Resources.ResourceManager.GetResourceSet%2A> używa reguł rezerwowy zasobów można załadować odpowiedniego zasobu. Jeśli `tryParents` jest `false` i nie można znaleźć zestawu zasobów specyficzne dla kultury, metoda zwraca `null`. Aby uzyskać więcej informacji na temat powrotu zasobów, zobacz sekcję "Proces rezerwowy zasobów" w [pakowanie i wdrażanie zasobów](~/docs/framework/resources/packaging-and-deploying-resources-in-desktop-apps.md) artykułu.  
  
   
  
## Examples  
 Następujące przykładowe wywołania <xref:System.Resources.ResourceManager.GetResourceSet%2A> metoda pobierania specyficzne dla kultury zasobów dla kultury francuski (Francja). Go następnie wylicza wszystkie zasoby w zestawie zasobów. Zawiera kod źródłowy dla pliku wykonywalnego o nazwie ShowNumbers.exe. Zawiera również następującego pliku dwóch tekst zawiera nazwy liczb. Pierwszy NumberResources.txt, zawiera nazwy liczb od 1 do 10 w języku angielskim:  
  
```  
  
one=one  
two=two  
three=three  
four=four  
five=five  
six=six  
seven=seven  
eight=eight  
nine=nine  
ten=ten  
  
```  
  
 Druga Strona, NumberResources.fr FR.txt, zawiera nazwy liczb od 1 do 4 w języku francuskim:  
  
```  
  
one=un  
two=deux  
three=trois  
four=quatre  
  
```  
  
 Aby wygenerować plików zasobów, Osadź plik zasobu języka angielskiego do pliku wykonywalnego i utworzyć zestaw satelicki dla zasobów języka francuskiego, można użyć pliku wsadowego. Oto plik wsadowy, aby wygenerować plik wykonywalny przy użyciu kompilatora Visual Basic:  
  
```  
  
resgen NumberResources.txt  
vbc shownumbers.vb /resource:NumberResources.resources  
  
md fr-FR  
resgen NumberResources.fr-FR.txt  
al /out:fr-FR\ShowNumbers.resources.dll /culture:fr-FR /embed:NumberResources.fr-FR.resources  
```  
  
 Dla kompilatora C# można użyć następującego pliku wsadowego:  
  
```  
  
resgen NumberResources.txt  
csc shownumbers.cs /resource:NumberResources.resources  
  
md fr-FR  
resgen NumberResources.fr-FR.txt  
al /out:fr-FR\ShowNumbers.resources.dll /culture:fr-FR /embed:NumberResources.fr-FR.resources  
  
```  
  
 [!code-csharp[System.Resources.ResourceManager.GetResourceSet#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.resources.resourcemanager.getresourceset/cs/shownumbers.cs#1)]
 [!code-vb[System.Resources.ResourceManager.GetResourceSet#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.resources.resourcemanager.getresourceset/vb/shownumbers.vb#1)]  
  
 Należy pamiętać, że w przypadku zmiany wartości `createIfNotExists` argument `false`, zwraca wywołanie metody `null`, ponieważ Menedżer zasobów nie został już załadowany zasobów języka francuskiego.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="culture" /> Parametr jest <see langword="null" />.</exception>
        <exception cref="T:System.Resources.MissingManifestResourceException">
          <paramref name="tryParents" /> jest <see langword="true" />, nie można używać zestawu zasobów nie znaleziono i nie ma żadnych zasobów kultury domyślnej.</exception>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">Po wywołaniu późnym wiązaniem za pomocą mechanizmów takich jak <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />. Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</permission>
        <altmember cref="T:System.Globalization.CultureInfo" />
      </Docs>
    </Member>
    <Member MemberName="GetSatelliteContractVersion">
      <MemberSignature Language="C#" Value="protected static Version GetSatelliteContractVersion (System.Reflection.Assembly a);" />
      <MemberSignature Language="ILAsm" Value=".method familystatic hidebysig class System.Version GetSatelliteContractVersion(class System.Reflection.Assembly a) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResourceManager.GetSatelliteContractVersion(System.Reflection.Assembly)" />
      <MemberSignature Language="VB.NET" Value="Protected Shared Function GetSatelliteContractVersion (a As Assembly) As Version" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; static Version ^ GetSatelliteContractVersion(System::Reflection::Assembly ^ a);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Resources.ResourceManager</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Version</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Reflection.Assembly" />
      </Parameters>
      <Docs>
        <param name="a">Zestaw do wyszukania <see cref="T:System.Resources.SatelliteContractVersionAttribute" /> atrybutu.</param>
        <summary>Zwraca informacje o wersji określonej przez <see cref="T:System.Resources.SatelliteContractVersionAttribute" /> atrybutów w danym zestawie.</summary>
        <returns>Wersji kontraktu satelickiego dla danego zestawu, lub <see langword="null" /> , jeśli nie zostało znaleziono wersji.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby uzyskać więcej informacji o wersji zestawu satelity, zobacz <xref:System.Resources.SatelliteContractVersionAttribute> temat referencyjny.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <see cref="T:System.Version" /> Znaleziono w zestawie <paramref name="a" /> jest nieprawidłowy.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="a" /> jest <see langword="null" />.</exception>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">Po wywołaniu późnym wiązaniem za pomocą mechanizmów takich jak <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />. Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</permission>
        <altmember cref="T:System.Resources.SatelliteContractVersionAttribute" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetStream">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Zwraca obiekt strumienia niezarządzanej pamięci z określonego zasobu.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetStream">
      <MemberSignature Language="C#" Value="public System.IO.UnmanagedMemoryStream GetStream (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.UnmanagedMemoryStream GetStream(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResourceManager.GetStream(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetStream (name As String) As UnmanagedMemoryStream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::UnmanagedMemoryStream ^ GetStream(System::String ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Resources.ResourceManager</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.UnmanagedMemoryStream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">Nazwa zasobu.</param>
        <summary>Zwraca obiekt strumienia niezarządzanej pamięci z określonego zasobu.</summary>
        <returns>Obiekt stream niezarządzanej pamięci, który reprezentuje zasobu.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Resources.ResourceManager.GetStream%2A> Metoda przyjmuje nazwę zasobu, który jest przechowywany jako <xref:System.IO.MemoryStream> obiektów, pobiera wartość <xref:System.Object> zasobów i zwraca <xref:System.IO.UnmanagedMemoryStream> obiektu. Wymaga to pracę bezpośrednio z strumień bajtów, które następnie wykonać konwersję z obiektem. Ta metoda przydaje się głównie w celu zapewnienia optymalnej wydajności: Pobieranie zasobu jako strumień bajtów zamiast jawnego obiektu może poprawić wydajność.  
  
 Zlokalizowaną zwrócony zasobów dla kultury interfejsu użytkownika bieżącego wątku, który jest zdefiniowany przez <xref:System.Globalization.CultureInfo.CurrentUICulture%2A?displayProperty=nameWithType> właściwości. Jeśli zasób nie jest lokalizowany tej kultury, Menedżer zasobów używa rezerwowej reguł można załadować odpowiedniego zasobu. Jeśli nie można używać zestawu zlokalizowanych zasobów zostanie znaleziony, <xref:System.Resources.ResourceManager> powraca zasobów kultury domyślnej. Jeśli nie zostanie znaleziony zestaw zasobów dla kultury domyślnej, metoda wygeneruje <xref:System.Resources.MissingManifestResourceException> wyjątek lub, jeśli zestaw zasobów powinien znajdować się w zestawie satelickim, <xref:System.Resources.MissingSatelliteAssemblyException> wyjątku. Jeśli Menedżer zasobów można załadować odpowiedniego zasobu ustawiona, ale nie można znaleźć zasobu o nazwie `name`, metoda zwraca `null`.  
  
 <xref:System.Resources.ResourceManager.IgnoreCase%2A> Właściwość określa, czy porównanie `name` o nazwach zasobów jest rozróżniana wielkość liter (ustawienie domyślne) lub z uwzględnieniem wielkości liter.  
  
   
  
## Examples  
 W poniższym przykładzie użyto <xref:System.Resources.ResourceManager.GetStream%28System.String%29> otwarcia okna powitalny metoda pobierania mapy bitowej, który jest używany w aplikacji. Następujące źródła kodu z pliku o nazwie CreateResources.cs (dla C#) lub CreateResources.vb (w języku Visual Basic) generuje plik .resx o nazwie AppResources.resx, który zawiera seryjnych obraz. W takim przypadku załadowania obrazu z pliku o nazwie SplashScreen.jpg; można zmodyfikować nazwę pliku, aby zastąpić własnego obrazu.  
  
 [!code-csharp[Conceptual.Resources.Retrieving#4](~/samples/snippets/csharp/VS_Snippets_CLR/conceptual.resources.retrieving/cs/createresources.cs#4)]
 [!code-vb[Conceptual.Resources.Retrieving#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/conceptual.resources.retrieving/vb/createresources.vb#4)]  
  
 Poniższy kod z pliku o nazwie GetStream.cs (C#) lub GetStream.vb (w języku Visual Basic), następnie pobiera zasobu i wyświetla obraz w <xref:System.Windows.Forms.PictureBox?displayProperty=nameWithType> formantu.  
  
 [!code-csharp[Conceptual.Resources.Retrieving#5](~/samples/snippets/csharp/VS_Snippets_CLR/conceptual.resources.retrieving/cs/getstream.cs#5)]
 [!code-vb[Conceptual.Resources.Retrieving#5](~/samples/snippets/visualbasic/VS_Snippets_CLR/conceptual.resources.retrieving/vb/getstream.vb#5)]  
  
 Następujący plik wsadowy służy do tworzenia przykład C#. W języku Visual Basic, zmień `csc` do `vbc`i zmień rozszerzenie pliku kodu źródłowego z `.cs` do `.vb`...  
  
```  
  
csc CreateResources.cs  
CreateResources  
  
resgen AppResources.resx  
  
csc GetStream.cs /resource:AppResources.resources  
  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Wartość określonego zasobu nie jest <see cref="T:System.IO.MemoryStream" /> obiektu.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="name" /> jest <see langword="null" />.</exception>
        <exception cref="T:System.Resources.MissingManifestResourceException">Nie można używać zestawu zasobów zostanie znaleziony, a nie ma żadnych zasobów domyślne. Aby uzyskać informacje o sposobie obsługi tego wyjątku, zobacz sekcję "Obsługa missingmanifestresourceexception — missingsatelliteassemblyexception — wyjątków i" w <see cref="T:System.Resources.ResourceManager" /> klasy tematu.</exception>
        <exception cref="T:System.Resources.MissingSatelliteAssemblyException">W zestawie satelickim, którego nie można odnaleźć znajdują się zasoby domyślną kulturę. Aby uzyskać informacje o sposobie obsługi tego wyjątku, zobacz sekcję "Obsługa missingmanifestresourceexception — missingsatelliteassemblyexception — wyjątków i" w <see cref="T:System.Resources.ResourceManager" /> klasy tematu.</exception>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">Po wywołaniu późnym wiązaniem za pomocą mechanizmów takich jak <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />. Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</permission>
      </Docs>
    </Member>
    <Member MemberName="GetStream">
      <MemberSignature Language="C#" Value="public System.IO.UnmanagedMemoryStream GetStream (string name, System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.UnmanagedMemoryStream GetStream(string name, class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResourceManager.GetStream(System.String,System.Globalization.CultureInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetStream (name As String, culture As CultureInfo) As UnmanagedMemoryStream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::UnmanagedMemoryStream ^ GetStream(System::String ^ name, System::Globalization::CultureInfo ^ culture);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Resources.ResourceManager</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.UnmanagedMemoryStream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="name">Nazwa zasobu.</param>
        <param name="culture">Obiekt, który określa kulturę do użycia podczas wyszukiwania zasobów. Jeśli <c>kultury</c> jest <see langword="null" />, kultura bieżącego wątku jest używany.</param>
        <summary>Zwraca obiekt strumienia niezarządzanej pamięci z określonego zasobu, używając określonej kultury.</summary>
        <returns>Obiekt stream niezarządzanej pamięci, który reprezentuje zasobu.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Resources.ResourceManager.GetStream%2A> Metoda przyjmuje nazwę zasobu, który jest przechowywany jako <xref:System.IO.MemoryStream> obiektów, pobiera wartość <xref:System.Object> zasobów i zwraca <xref:System.IO.UnmanagedMemoryStream> obiektu. Wymaga to pracę bezpośrednio z strumień bajtów, które następnie wykonać konwersję z obiektem. Ta metoda przydaje się głównie w celu zapewnienia optymalnej wydajności: Pobieranie zasobu jako strumień bajtów zamiast jawnego obiektu może poprawić wydajność.  
  
 Zwrócony zasobów jest zlokalizowany na kultura, która jest określona przez `culture`, lub dla kultury określonej przez <xref:System.Globalization.CultureInfo.CurrentUICulture%2A?displayProperty=nameWithType> właściwości Jeśli `culture` jest `null`. Jeśli zasób nie jest lokalizowany tej kultury, Menedżer zasobów używa rezerwowej reguł można załadować odpowiedniego zasobu. Jeśli nie można używać zestawu zlokalizowanych zasobów zostanie znaleziony, <xref:System.Resources.ResourceManager> powraca zasobów kultury domyślnej. Jeśli nie zostanie znaleziony zestaw zasobów dla kultury domyślnej, metoda wygeneruje <xref:System.Resources.MissingManifestResourceException> wyjątek lub, jeśli zestaw zasobów powinien znajdować się w zestawie satelickim, <xref:System.Resources.MissingSatelliteAssemblyException> wyjątku. Jeśli Menedżer zasobów można załadować odpowiedniego zasobu ustawiona, ale nie można znaleźć zasobu o nazwie `name`, metoda zwraca `null`.  
  
 <xref:System.Resources.ResourceManager.IgnoreCase%2A> Właściwość określa, czy porównanie `name` o nazwach zasobów jest rozróżniana wielkość liter (ustawienie domyślne) lub z uwzględnieniem wielkości liter.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Wartość określonego zasobu nie jest <see cref="T:System.IO.MemoryStream" /> obiektu.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="name" /> jest <see langword="null" />.</exception>
        <exception cref="T:System.Resources.MissingManifestResourceException">Nie można używać zestawu zasobów zostanie znaleziony, a nie ma żadnych zasobów domyślne. Aby uzyskać informacje o sposobie obsługi tego wyjątku, zobacz sekcję "Obsługa missingmanifestresourceexception — missingsatelliteassemblyexception — wyjątków i" w <see cref="T:System.Resources.ResourceManager" /> klasy tematu.</exception>
        <exception cref="T:System.Resources.MissingSatelliteAssemblyException">W zestawie satelickim, którego nie można odnaleźć znajdują się zasoby domyślną kulturę. Aby uzyskać informacje o sposobie obsługi tego wyjątku, zobacz sekcję "Obsługa missingmanifestresourceexception — missingsatelliteassemblyexception — wyjątków i" w <see cref="T:System.Resources.ResourceManager" /> klasy tematu.</exception>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">Po wywołaniu późnym wiązaniem za pomocą mechanizmów takich jak <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />. Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetString">
      <AssemblyInfo>
        <AssemblyName>System.Resources.ResourceManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Zwraca określonego ciągu zasobu dla określonej kultury lub bieżącej kultury interfejsu użytkownika.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetString">
      <MemberSignature Language="C#" Value="public virtual string GetString (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetString(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResourceManager.GetString(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetString (name As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetString(System::String ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Resources.ResourceManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">Nazwa zasobu, aby pobrać.</param>
        <summary>Zwraca wartość określonego ciągu zasobu.</summary>
        <returns>Wartość zasobu zlokalizowaną dla bieżącej kultury interfejsu użytkownika wywołującego lub <see langword="null" /> Jeśli <paramref name="name" /> nie można znaleźć zestawu zasobów.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="desktop-apps"></a>Aplikacje pulpitu  
 W aplikacjach klasycznych zasobów, która jest zwracana jest zlokalizowana dla kultury interfejsu użytkownika bieżącego wątku, zgodnie z definicją w <xref:System.Globalization.CultureInfo.CurrentUICulture%2A?displayProperty=nameWithType> właściwości. Jeśli zasób nie został zlokalizowany dla tej kultury, Menedżer zasobów sondy zasobu, wykonując kroki opisane w sekcji "Proces rezerwowy zasobu" [pakowanie i wdrażanie zasobów](~/docs/framework/resources/packaging-and-deploying-resources-in-desktop-apps.md) artykułu. Jeśli nie można używać zestawu zlokalizowanych zasobów zostanie znaleziony, Menedżer zasobów powraca zasobów kultury domyślnej. Jeśli Menedżer zasobów nie można załadować zestawu zasobów kultury domyślnej, metoda wygeneruje <xref:System.Resources.MissingManifestResourceException> wyjątek lub, jeśli zestaw zasobów powinien znajdować się w zestawie satelickim, <xref:System.Resources.MissingSatelliteAssemblyException> wyjątku. Jeśli Menedżer zasobów można załadować odpowiedniego zasobu ustawiona, ale nie można znaleźć zasobu o nazwie `name`, metoda zwraca `null`.  
  
 <xref:System.Resources.ResourceManager.IgnoreCase%2A> Właściwość określa, czy porównanie `name` o nazwach zasobów jest rozróżniana wielkość liter (ustawienie domyślne) lub z uwzględnieniem wielkości liter.  
  
> [!CAUTION]
>  Ta metoda może zgłaszać wyjątki więcej niż podano. Jedną z przyczyn się, że taka sytuacja może wystąpić jest, jeśli ta metoda wywołuje metodę zgłasza wyjątek.  Na przykład <xref:System.IO.FileLoadException> wyjątek może zostać zgłoszony, jeśli błąd został utworzony, wdrażanie lub Instalowanie zestawu satelickiego, lub <xref:System.Runtime.Serialization.SerializationException> może zostać zgłoszony wyjątek, gdy typu zdefiniowanego przez użytkownika zgłasza wyjątek zdefiniowane przez użytkownika, gdy deserializowany jest typu.  
  
## <a name="includewin8appnamelongincludeswin8-appname-long-mdmd-apps"></a>[!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] Aplikacje  
  
> [!IMPORTANT]
>  Mimo że <xref:System.Resources.ResourceManager> klasa jest obsługiwana w [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] aplikacji, nie zaleca się jej użycia. Klasa jest używana tylko podczas opracowywania [!INCLUDE[net_portable](~/includes/net-portable-md.md)] projektów, które mogą być używane z [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] aplikacji. Można pobrać zasobów z [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] aplikacji, użyj [Windows.ApplicationModel.Resources.ResourceLoader](http://go.microsoft.com/fwlink/p/?LinkId=238182) zamiast klasy.  
  
 W [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] aplikacji, <xref:System.Resources.ResourceManager.GetString%28System.String%29> metoda zwraca wartość `name` ciągu zasobu zlokalizowany dla bieżącego ustawienia kultury interfejsu użytkownika obiektu wywołującego. Lista kultur pochodzi z systemu operacyjnego listy preferowany język interfejsu użytkownika. Jeśli Menedżer zasobów nie można dopasować `name`, metoda zwraca `null`.  
  
   
  
## Examples  
 W poniższym przykładzie użyto <xref:System.Resources.ResourceManager.GetString%2A> metoda pobierania specyficzne dla kultury zasobów. Zawiera zasoby skompilowana z plików txt dla języka angielskiego (en), francuski (Francja) (fr-FR) i rosyjski (ru-RU) (Rosji) kultur. Przykład umożliwia zmianę bieżącej kultury i bieżącej kultury interfejsu użytkownika na język angielski (Stany Zjednoczone), francuski (Francja), rosyjski (Rosji) i szwedzki (Szwecja). Następnie wywołuje <xref:System.Resources.ResourceManager.GetString%2A> metoda pobierania zlokalizowanego ciągu, który wyświetla wraz z bieżącego dnia i miesiąca. Zauważ, że dane wyjściowe wyświetla odpowiedni zlokalizowany ciąg z wyjątkiem przypadków, gdy bieżąca kultura interfejsu użytkownika szwedzki (Szwecja). Ponieważ języka szwedzkiego zasoby są niedostępne, aplikacja używa zamiast niego zasoby domyślną kulturę, czyli w języku angielskim. Przykład wymaga plików tekstowych zasobów wymienionych w poniższej tabeli. Każdy ma będący pojedynczym ciągiem zasób o nazwie `DateStart`.  
  
|Kultury|Nazwa pliku|Nazwa zasobu|Wartość zasobu|  
|-------------|---------------|-------------------|--------------------|  
|EN US|DateStrings.txt|`DateStart`|Dzisiaj jest|  
|fr-FR|DateStrings.fr-FR.txt|`DateStart`|Aujourd'hui, le, and c'est|  
|ru-RU|DateStrings.ru-RU.txt|`DateStart`|СЕГОДНЯ|  
  
 Następujący plik wsadowy służy do kompilowania przykład C#. W języku Visual Basic, zmień `csc` do `vbc`i zmień rozszerzenie pliku kodu źródłowego z `.cs` do `.vb`.  
  
```  
resgen DateStrings.txt  
csc showdate.cs /resource:DateStrings.resources  
  
md fr-FR  
resgen DateStrings.fr-FR.txt  
al /out:fr-FR\Showdate.resources.dll /culture:fr-FR /embed:DateStrings.fr-FR.resources   
  
md ru-RU  
resgen DateStrings.ru-RU.txt  
al /out:ru-RU\Showdate.resources.dll /culture:ru-RU /embed:DateStrings.ru-RU.resources  
```  
  
 Oto kod źródłowy, na przykład (ShowDate.vb dla używanej wersji programu Visual Basic) lub ShowDate.cs dla wersji języka C#.  
  
 [!code-csharp[System.Resources.ResourceManager.Class#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.resources.resourcemanager.class/cs/showdate.cs#2)]
 [!code-vb[System.Resources.ResourceManager.Class#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.resources.resourcemanager.class/vb/showdate.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="name" /> Parametr jest <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">Wartość określonego zasobu nie jest ciągiem.</exception>
        <exception cref="T:System.Resources.MissingManifestResourceException">Nie znaleziono żadnych można używać zestawu zasobów, a nie ma żadnych zasobów dla kultury domyślnej. Aby uzyskać informacje o sposobie obsługi tego wyjątku, zobacz sekcję "Obsługa missingmanifestresourceexception — missingsatelliteassemblyexception — wyjątków i" w <see cref="T:System.Resources.ResourceManager" /> klasy tematu.</exception>
        <exception cref="T:System.Resources.MissingSatelliteAssemblyException">W zestawie satelickim, którego nie można odnaleźć znajdują się zasoby domyślną kulturę. Aby uzyskać informacje o sposobie obsługi tego wyjątku, zobacz sekcję "Obsługa missingmanifestresourceexception — missingsatelliteassemblyexception — wyjątków i" w <see cref="T:System.Resources.ResourceManager" /> klasy tematu.</exception>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">Po wywołaniu późnym wiązaniem za pomocą mechanizmów takich jak <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />. Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</permission>
        <threadsafe>
          <see cref="M:System.Resources.ResourceManager.GetString(System.String)" /> Metoda jest bezpieczne dla wątków.</threadsafe>
        <altmember cref="T:System.Globalization.CultureInfo" />
      </Docs>
    </Member>
    <Member MemberName="GetString">
      <MemberSignature Language="C#" Value="public virtual string GetString (string name, System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetString(string name, class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResourceManager.GetString(System.String,System.Globalization.CultureInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetString (name As String, culture As CultureInfo) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetString(System::String ^ name, System::Globalization::CultureInfo ^ culture);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Resources.ResourceManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="name">Nazwa zasobu, aby pobrać.</param>
        <param name="culture">Obiekt, który reprezentuje kultury, dla którego jest zlokalizowana zasobu.</param>
        <summary>Zwraca wartość zasób ciągu zlokalizowanego dla określonej kultury.</summary>
        <returns>Wartość zasobu zlokalizowane dla określonej kultury lub <see langword="null" /> Jeśli <paramref name="name" /> nie można znaleźć zestawu zasobów.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="desktop-apps"></a>Aplikacje pulpitu  
 W aplikacjach klasycznych Jeśli `culture` jest `null`, <xref:System.Resources.ResourceManager.GetString%28System.String%2CSystem.Globalization.CultureInfo%29> metoda używa bieżącej kultury interfejsu użytkownika uzyskanego z <xref:System.Globalization.CultureInfo.CurrentUICulture%2A?displayProperty=nameWithType> właściwości.  
  
 Zasób, który jest zwracany jest zlokalizowana dla kultury określonej przez `culture` parametru. Jeśli zasób nie został zlokalizowany dla `culture`, Menedżer zasobów sondy zasobu, wykonując kroki opisane w sekcji "Proces rezerwowy zasobu" [pakowanie i wdrażanie zasobów](~/docs/framework/resources/packaging-and-deploying-resources-in-desktop-apps.md) tematu. Jeśli nie można używać zestawu zasobów zostanie znaleziony, Menedżer zasobów powraca zasobów kultury domyślnej. Jeśli Menedżer zasobów nie można załadować zestawu zasobów kultury domyślnej, metoda wygeneruje <xref:System.Resources.MissingManifestResourceException> wyjątek lub, jeśli zestaw zasobów powinien znajdować się w zestawie satelickim, <xref:System.Resources.MissingSatelliteAssemblyException> wyjątku. Jeśli Menedżer zasobów można załadować odpowiedniego zasobu ustawiona, ale nie można znaleźć zasobu o nazwie `name`, metoda zwraca `null`.  
  
 <xref:System.Resources.ResourceManager.IgnoreCase%2A> Właściwość określa, czy porównanie `name` o nazwach zasobów jest rozróżniana wielkość liter (ustawienie domyślne) lub z uwzględnieniem wielkości liter.  
  
> [!CAUTION]
>  Ta metoda może zgłaszać wyjątki więcej niż podano. Jedną z przyczyn się, że taka sytuacja może wystąpić jest, jeśli ta metoda wywołuje metodę zgłasza wyjątek.  Na przykład <xref:System.IO.FileLoadException> wyjątek może zostać zgłoszony, jeśli błąd został utworzony, wdrażanie lub Instalowanie zestawu satelickiego, lub <xref:System.Runtime.Serialization.SerializationException> może zostać zgłoszony wyjątek, gdy typu zdefiniowanego przez użytkownika zgłasza wyjątek zdefiniowane przez użytkownika, gdy deserializowany jest typu.  
  
## <a name="includewin8appnamelongincludeswin8-appname-long-mdmd-apps"></a>[!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] Aplikacje  
  
> [!IMPORTANT]
>  Mimo że <xref:System.Resources.ResourceManager> klasa jest obsługiwana w [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] aplikacji, nie zaleca się jej użycia. Klasa jest używana tylko podczas opracowywania [!INCLUDE[net_portable](~/includes/net-portable-md.md)] projektów, które mogą być używane z [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] aplikacji. Można pobrać zasobów z [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] aplikacji, użyj [Windows.ApplicationModel.Resources.ResourceLoader](http://go.microsoft.com/fwlink/p/?LinkId=238182) zamiast klasy.  
  
 W [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] aplikacji, <xref:System.Resources.ResourceManager.GetString%28System.String%2CSystem.Globalization.CultureInfo%29> metoda zwraca wartość `name` ciągu zasobu zlokalizowane dla kultury określonej przez `culture` parametru. Jeśli zasób nie jest zlokalizowany na `culture` kultury, wyszukiwania używa całego [!INCLUDE[win8](~/includes/win8-md.md)] rezerwowy Lista języków i kończy działanie po w domyślną kulturę. Jeśli Menedżer zasobów nie można dopasować `name`, metoda zwraca `null`.  
  
   
  
## Examples  
 W poniższym przykładzie użyto <xref:System.Resources.ResourceManager.GetString%28System.String%2CSystem.Globalization.CultureInfo%29> metoda pobierania specyficzne dla kultury zasobów. Przykład domyślną kulturę jest angielski (en) i zawiera zestawy satelickie francuski (Francja) (fr-FR) i rosyjski (ru-RU) (Rosji) kultur. W przykładzie zmieniono bieżącej kultury i bieżącej kultury interfejsu użytkownika rosyjski (Rosji) przed wywołaniem <xref:System.Resources.ResourceManager.GetString%28System.String%2CSystem.Globalization.CultureInfo%29>. Następnie wywołuje <xref:System.Resources.ResourceManager.GetString%2A> — metoda i <xref:System.DateTime.ToString%28System.String%2CSystem.IFormatProvider%29?displayProperty=nameWithType> — metoda i przekazuje <xref:System.Globalization.CultureInfo> obiekty reprezentujące francuski (Francja) i kultur szwedzki (Szwecja) do każdej metody. W danych wyjściowych, miesiąc i dzień, miesiąc, a także ciąg, który je poprzedza są wyświetlane w języku francuskim, ponieważ <xref:System.Resources.ResourceManager.GetString%2A> metoda jest w stanie pobrać zasób języka francuskiego. Jednak jeśli kultury szwedzki (Szwecja) jest używany, miesiąc i dzień w miesiącu pojawią się w szwedzki, mimo że ciągu poprzedzający je w języku angielskim. Jest to spowodowane Menedżera zasobów nie można znaleźć zasoby zlokalizowane języka szwedzkiego, tak aby zwracało zasobów dla kultury domyślnej angielskiej wersji językowej zamiast tego.  
  
 Przykład wymaga plików tekstowych zasobów wymienionych w poniższej tabeli. Każdy ma będący pojedynczym ciągiem zasób o nazwie `DateStart`.  
  
|Kultury|Nazwa pliku|Nazwa zasobu|Wartość zasobu|  
|-------------|---------------|-------------------|--------------------|  
|EN US|DateStrings.txt|`DateStart`|Dzisiaj jest|  
|fr-FR|DateStrings.fr-FR.txt|`DateStart`|Aujourd'hui, le, and c'est|  
|ru-RU|DateStrings.ru-RU.txt|`DateStart`|СЕГОДНЯ|  
  
 Następujący plik wsadowy służy do skompilowania w przykładzie w języku Visual Basic. Aby skompilować w języku C#, zmień `vbc` do `csc`i zmień rozszerzenie pliku kodu źródłowego z `.vb` do `.cs`.  
  
```  
resgen DateStrings.txt  
vbc showdate.vb /resource:DateStrings.resources  
  
md fr-FR  
resgen DateStrings.fr-FR.txt  
al /out:fr-FR\Showdate.resources.dll /culture:fr-FR /embed:DateStrings.fr-FR.resources   
  
md ru-RU  
resgen DateStrings.ru-RU.txt  
al /out:ru-RU\Showdate.resources.dll /culture:ru-RU /embed:DateStrings.ru-RU.resources  
```  
  
 Oto kod źródłowy, na przykład (ShowDate.vb dla używanej wersji programu Visual Basic) lub ShowDate.cs dla wersji języka C#.  
  
 [!code-csharp[System.Resources.ResourceManager.Class#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.resources.resourcemanager.class/cs/showdate2.cs#3)]
 [!code-vb[System.Resources.ResourceManager.Class#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.resources.resourcemanager.class/vb/showdate2.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="name" /> Parametr jest <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">Wartość określonego zasobu nie jest ciągiem.</exception>
        <exception cref="T:System.Resources.MissingManifestResourceException">Nie znaleziono żadnych można używać zestawu zasobów, a nie ma żadnych zasobów dla kultury domyślnej. Aby uzyskać informacje o sposobie obsługi tego wyjątku, zobacz sekcję "Obsługa missingmanifestresourceexception — missingsatelliteassemblyexception — wyjątków i" w <see cref="T:System.Resources.ResourceManager" /> klasy tematu.</exception>
        <exception cref="T:System.Resources.MissingSatelliteAssemblyException">W zestawie satelickim, którego nie można odnaleźć znajdują się zasoby domyślną kulturę. Aby uzyskać informacje o sposobie obsługi tego wyjątku, zobacz sekcję "Obsługa missingmanifestresourceexception — missingsatelliteassemblyexception — wyjątków i" w <see cref="T:System.Resources.ResourceManager" /> klasy tematu.</exception>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">Po wywołaniu późnym wiązaniem za pomocą mechanizmów takich jak <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />. Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</permission>
        <threadsafe>
          <see cref="M:System.Resources.ResourceManager.GetString(System.String,System.Globalization.CultureInfo)" /> Metoda jest bezpieczne dla wątków.</threadsafe>
        <altmember cref="T:System.Globalization.CultureInfo" />
      </Docs>
    </Member>
    <Member MemberName="HeaderVersionNumber">
      <MemberSignature Language="C#" Value="public static readonly int HeaderVersionNumber;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly int32 HeaderVersionNumber" />
      <MemberSignature Language="DocId" Value="F:System.Resources.ResourceManager.HeaderVersionNumber" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly HeaderVersionNumber As Integer " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly int HeaderVersionNumber;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Resources.ResourceManager</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Określa wersję nagłówki plików zasobów który bieżąca implementacja <see cref="T:System.Resources.ResourceManager" /> można zinterpretować i produkcji.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IgnoreCase">
      <MemberSignature Language="C#" Value="public virtual bool IgnoreCase { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IgnoreCase" />
      <MemberSignature Language="DocId" Value="P:System.Resources.ResourceManager.IgnoreCase" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property IgnoreCase As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IgnoreCase { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Resources.ResourceManager</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy Menedżer zasobów pozwala wyszukiwań zasobów bez uwzględniania wielkości liter w <see cref="M:System.Resources.ResourceManager.GetString(System.String)" /> i <see cref="M:System.Resources.ResourceManager.GetObject(System.String)" /> metody.</summary>
        <value>
          <see langword="true" /> ignorowanie wielkości liter podczas wyszukiwania zasobów; w przeciwnym razie <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli wartość <xref:System.Resources.ResourceManager.IgnoreCase%2A> właściwość jest `false`, zasób o nazwie "Zasobu" nie jest odpowiednikiem zasobu o nazwie "zasobu". Jeśli <xref:System.Resources.ResourceManager.IgnoreCase%2A> jest `true`, zasób o nazwie "Zasobu" jest odpowiednikiem zasobu o nazwie "zasobu". Zauważ, że w przypadku <xref:System.Resources.ResourceManager.IgnoreCase%2A> jest `true`, <xref:System.Resources.ResourceManager.GetString%2A?displayProperty=nameWithType> i <xref:System.Resources.ResourceManager.GetObject%2A?displayProperty=nameWithType> metody porównywania ciągów bez uwzględniania wielkości liter przy użyciu Niezmienna kultura. Zaletą jest to, że wyniki porównania bez uwzględniania wielkości liter ciąg wykonywane przez te metody są takie same na wszystkich komputerach niezależnie od kultury. Wadą jest to, że wyniki nie są zgodne z zasadami wielkości liter wszystkich języków.  
  
 Na przykład turecki alfabetu ma dwie wersje znaku I: jedną z kropką, a drugi bez kropki. W turecki znak (Unicode 0049) I jest uznawany za wielkie wersja innego znaku ı (Unicode 0131). Znak (Unicode 0069) i jest uznawany za małe wersji kolejnego znaku İ (Unicode 0130). Zgodnie z następującymi regułami wielkości liter, porównania bez uwzględniania wielkości liter ciągów znaków i (Unicode 0069) oraz (Unicode 0049) powinna zakończyć się niepowodzeniem dla kultury "tr-TR" (turecki w Turcja). Jednak ponieważ porównanie odbywa się za pomocą reguł wielkości liter z kulturą niezmienną, jeśli <xref:System.Resources.ResourceManager.IgnoreCase%2A> jest `true`, to porównanie zakończy się pomyślnie.  
  
> [!NOTE]
>  Ze względu na wydajność najlepiej zawsze podać poprawną wielkość dla nazwy zasobu. Ustawienie <xref:System.Resources.ResourceManager.IgnoreCase%2A> do `true` może spowodować znaczne zwiększenie w zestawie roboczym i znaczny spadek wydajności.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InternalGetResourceSet">
      <MemberSignature Language="C#" Value="protected virtual System.Resources.ResourceSet InternalGetResourceSet (System.Globalization.CultureInfo culture, bool createIfNotExists, bool tryParents);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Resources.ResourceSet InternalGetResourceSet(class System.Globalization.CultureInfo culture, bool createIfNotExists, bool tryParents) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResourceManager.InternalGetResourceSet(System.Globalization.CultureInfo,System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function InternalGetResourceSet (culture As CultureInfo, createIfNotExists As Boolean, tryParents As Boolean) As ResourceSet" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Resources::ResourceSet ^ InternalGetResourceSet(System::Globalization::CultureInfo ^ culture, bool createIfNotExists, bool tryParents);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Resources.ResourceManager</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Resources.ResourceSet</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="createIfNotExists" Type="System.Boolean" />
        <Parameter Name="tryParents" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="culture">Obiekt culture do wyszukania.</param>
        <param name="createIfNotExists">
          <see langword="true" /> można załadować zasobu ustawiona, jeśli nie została jeszcze; załadowana w przeciwnym razie <see langword="false" />.</param>
        <param name="tryParents">
          <see langword="true" /> Aby sprawdzić nadrzędnej <see cref="T:System.Globalization.CultureInfo" /> obiekty, jeśli zestaw zasobów nie można załadować; w przeciwnym razie <see langword="false" />.</param>
        <summary>Udostępnia implementację do znajdowania zestawu zasobów.</summary>
        <returns>Zestaw określonego zasobu.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Resources.MissingManifestResourceException">Główny zestaw nie zawiera plik .resources, co jest wymagane w celu wyszukania zasobu.</exception>
        <exception cref="T:System.ExecutionEngineException">Wystąpił błąd wewnętrzny w czasie wykonywania.</exception>
        <exception cref="T:System.Resources.MissingSatelliteAssemblyException">Skojarzone z zestawu satelickiego <paramref name="culture" /> nie można zlokalizować.</exception>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">Po wywołaniu późnym wiązaniem za pomocą mechanizmów takich jak <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />. Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</permission>
        <block subset="none" type="overrides">
          <para>Ta metoda zakończy pracy należy znaleźć zasobu ustawiona i można cyklicznego i współużytkowanej współbieżności. Innymi słowy, ta metoda może załadować zestawu i wyzwalacza <see cref="E:System.AppDomain.AssemblyLoad" /> zdarzenie, które następnie ponownie wywołuje <see cref="T:System.Resources.ResourceManager" /> obiekt, który nie został całkowicie zainicjowany. Aby uniknąć wykonywania dodatkowych blokad, ta metoda nie jest bezpieczne dla wątków. <see cref="M:System.Resources.ResourceManager.GetResourceSet(System.Globalization.CultureInfo,System.Boolean,System.Boolean)" />, <see cref="M:System.Resources.ResourceManager.GetString(System.String)" />, I <see cref="M:System.Resources.ResourceManager.GetObject(System.String)" /> metody wykonaj wszystkie niezbędne synchronizacji.</para>
        </block>
        <altmember cref="T:System.Globalization.CultureInfo" />
      </Docs>
    </Member>
    <Member MemberName="MagicNumber">
      <MemberSignature Language="C#" Value="public static readonly int MagicNumber;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly int32 MagicNumber" />
      <MemberSignature Language="DocId" Value="F:System.Resources.ResourceManager.MagicNumber" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MagicNumber As Integer " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly int MagicNumber;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Resources.ResourceManager</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Przechowuje numer umożliwia identyfikowanie plików zasobów.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wartość jest równa 0xBEEFCACE. Pierwsze cztery bajty domyślny format pliku system zawiera 32-bitowej podpisanej liczby całkowitej w formacie little endian (zobacz <xref:System.Text.Encoding>).  
  
 Jeśli <xref:System.Resources.ResourceManager.MagicNumber> zostanie znaleziony, następnego bajty będzie numer wersji <xref:System.Resources.ResourceManager> nagłówek, a po niej liczbę określającą liczbę bajtów ma być pomijana w celu pokonać tego nagłówka. Kolejny numer wskazuje wersję <xref:System.Resources.ResourceManager> , który utworzył nagłówka, następuje określone informacje o wersji.  
  
 Numer wersji dla bieżącej implementacji jest jednym. Następny bajtów jest prefiksem długość ciągu zawierającego nazwę <xref:System.Resources.IResourceReader>, który może odczytać ten plik.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MainAssembly">
      <MemberSignature Language="C#" Value="protected System.Reflection.Assembly MainAssembly;" />
      <MemberSignature Language="ILAsm" Value=".field family class System.Reflection.Assembly MainAssembly" />
      <MemberSignature Language="DocId" Value="F:System.Resources.ResourceManager.MainAssembly" />
      <MemberSignature Language="VB.NET" Value="Protected MainAssembly As Assembly " />
      <MemberSignature Language="C++ CLI" Value="protected: System::Reflection::Assembly ^ MainAssembly;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Resources.ResourceManager</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Assembly</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Określa główny zestaw zawierający zasoby.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Resources.ResourceManager.MainAssembly> Pole jest przydatny tylko wtedy, gdy napisać własny klasą pochodzącą z <xref:System.Resources.ResourceManager> klasy.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReleaseAllResources">
      <MemberSignature Language="C#" Value="public virtual void ReleaseAllResources ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ReleaseAllResources() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResourceManager.ReleaseAllResources" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ReleaseAllResources ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ReleaseAllResources();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Resources.ResourceManager</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Określa, że Menedżer zasobów do wywołania <see cref="M:System.Resources.ResourceSet.Close" /> metody na wszystkich <see cref="T:System.Resources.ResourceSet" /> obiekty i zwolnić wszystkie zasoby.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda będzie zmniejszyć zestaw roboczy w uruchomionej aplikacji. Wszelkie wyszukiwań przyszłych zasobów na tym <xref:System.Resources.ResourceManager> obiekt będzie jako kosztowne jako pierwszy wyszukiwania, ponieważ Menedżer zasobów do wyszukiwania i załadować zasoby ponownie. Może to być przydatne w niektórych złożonych wątkowości scenariusze, w przypadku, gdy tworzenia nowego <xref:System.Resources.ResourceManager> obiektu jest odpowiednie działanie.  
  
> [!NOTE]
>  W programie .NET Framework w wersji 2.0, <xref:System.Resources.ResourceManager.ReleaseAllResources%2A> metoda nie jest wielowątkowość w odniesieniu do <xref:System.Resources.ResourceManager.GetObject%2A>, <xref:System.Resources.ResourceManager.GetString%2A>, i <xref:System.Resources.ResourceManager.GetStream%2A> operacji. Zaletą tej zmiany jest zwiększenie wydajności, wiele wątków, które uzyskują dostęp do zasobów. Jednak jeśli wywołujesz <xref:System.Resources.ResourceManager.ReleaseAllResources%2A> metody w jeden wątek jednocześnie uzyskanie zasób w innym wątku operację pobierania może zgłosić <xref:System.ObjectDisposedException> wyjątku.  
  
 Ta metoda służy również w sytuacji, w których trzeba wydane w sposób niejednoznaczny, bez oczekiwania na Menedżera zasobów całkowicie się znaleźć poza zakresem i bezużytecznych wystąpienia zarządzane zasoby utworzone przez bieżący Menedżer zasobów.  
  
> [!NOTE]
>  Wywołanie tej metody nie zwolnienia zestawy satelickie. Aby zwolnić zestawy satelickie, użyj <xref:System.AppDomain.Unload%2A> metody.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">Po wywołaniu późnym wiązaniem za pomocą mechanizmów takich jak <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />. Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</permission>
      </Docs>
    </Member>
    <Member MemberName="ResourceSets">
      <MemberSignature Language="C#" Value="protected System.Collections.Hashtable ResourceSets;" />
      <MemberSignature Language="ILAsm" Value=".field family class System.Collections.Hashtable ResourceSets" />
      <MemberSignature Language="DocId" Value="F:System.Resources.ResourceManager.ResourceSets" />
      <MemberSignature Language="VB.NET" Value="Protected ResourceSets As Hashtable " />
      <MemberSignature Language="C++ CLI" Value="protected: System::Collections::Hashtable ^ ResourceSets;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("call InternalGetResourceSet instead")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Hashtable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Zawiera <see cref="T:System.Collections.Hashtable" /> zwracającą mapowanie z kultur do <see cref="T:System.Resources.ResourceSet" /> obiektów.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResourceSetType">
      <MemberSignature Language="C#" Value="public virtual Type ResourceSetType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ResourceSetType" />
      <MemberSignature Language="DocId" Value="P:System.Resources.ResourceManager.ResourceSetType" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property ResourceSetType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Type ^ ResourceSetType { Type ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Resources.ResourceManager</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera typ obiektu zestaw zasobów, który wykorzystuje Menedżera zasobów do utworzenia <see cref="T:System.Resources.ResourceSet" /> obiektu.</summary>
        <value>Typ zasobu zestawu obiekt, który używa Menedżera zasobów do skonstruowania <see cref="T:System.Resources.ResourceSet" /> obiektu.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>