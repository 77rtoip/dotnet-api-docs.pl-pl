<Type Name="ResourceReader" FullName="System.Resources.ResourceReader">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="727b634b4d737d3d69635f31367da77af41950e9" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36637964" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class ResourceReader : System.Resources.IResourceReader" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ResourceReader extends System.Object implements class System.Collections.IEnumerable, class System.IDisposable, class System.Resources.IResourceReader" />
  <TypeSignature Language="DocId" Value="T:System.Resources.ResourceReader" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ResourceReader&#xA;Implements IResourceReader" />
  <TypeSignature Language="C++ CLI" Value="public ref class ResourceReader sealed : System::Resources::IResourceReader" />
  <TypeSignature Language="F#" Value="type ResourceReader = class&#xA;    interface IResourceReader&#xA;    interface IEnumerable&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Resources.Reader</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Resources.ResourceManager</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Resources.IResourceReader</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="c52fc-101">Wylicza zasobów w pliku zasobów binarnych (.resources), odczytując sekwencyjnych zasobów pary nazwa/wartość.</span>
      <span class="sxs-lookup">
        <span data-stu-id="c52fc-101">Enumerates the resources in a binary resources (.resources) file by reading sequential resource name/value pairs.</span>
      </span>
      <span data-ttu-id="c52fc-102">** Zabezpieczenia Uwaga **: Wywołanie metody tej klasy z niezaufanych danych stanowi zagrożenie bezpieczeństwa.</span>
      <span class="sxs-lookup">
        <span data-stu-id="c52fc-102">**Security Note**: Calling methods in this class with untrusted data is a security risk.</span>
      </span>
      <span data-ttu-id="c52fc-103">Wywołanie metody w klasie tylko z zaufanych danych.</span>
      <span class="sxs-lookup">
        <span data-stu-id="c52fc-103">Call the methods in the class only with trusted data.</span>
      </span>
      <span data-ttu-id="c52fc-104">Aby uzyskać więcej informacji, zobacz [niezaufanych zagrożenia bezpieczeństwa danych] (https://docs.com/rick-anderson-1/8710/untrusted-data-security-risks).</span>
      <span class="sxs-lookup">
        <span data-stu-id="c52fc-104">For more information, see [Untrusted Data Security Risks](https://docs.com/rick-anderson-1/8710/untrusted-data-security-risks).</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c52fc-105"><xref:System.Resources.ResourceReader> Klasa udostępnia standardowej implementacji <xref:System.Resources.IResourceReader> interfejsu.</span><span class="sxs-lookup"><span data-stu-id="c52fc-105">The <xref:System.Resources.ResourceReader> class provides a standard implementation of the <xref:System.Resources.IResourceReader> interface.</span></span> <span data-ttu-id="c52fc-106">A <xref:System.Resources.ResourceReader> wystąpienie reprezentuje autonomiczny plik .resources lub plik .resources, który jest osadzony w zestawie.</span><span class="sxs-lookup"><span data-stu-id="c52fc-106">A <xref:System.Resources.ResourceReader> instance represents either a standalone .resources file or a .resources file that is embedded in an assembly.</span></span> <span data-ttu-id="c52fc-107">Służy do wyliczenia zasobów w pliku .resources i pobierania jej pary nazwa/wartość.</span><span class="sxs-lookup"><span data-stu-id="c52fc-107">It is used to enumerate the resources in a .resources file and retrieve its name/value pairs.</span></span> <span data-ttu-id="c52fc-108">Różni się od <xref:System.Resources.ResourceManager> klasy, która służy do pobierania zasobów o nazwie określonej w pliku .resources jest osadzony w zestawie.</span><span class="sxs-lookup"><span data-stu-id="c52fc-108">It differs from the <xref:System.Resources.ResourceManager> class, which is used to retrieve specified named resources from a .resources file that is embedded in an assembly.</span></span> <span data-ttu-id="c52fc-109"><xref:System.Resources.ResourceManager> Klasa jest używana do pobrania zasobów, których nazwy są znane z wyprzedzeniem, podczas gdy <xref:System.Resources.ResourceReader> klasy jest przydatne w przypadku pobieranie zasobów, których numer lub dokładne nazwy nie są znane w czasie kompilacji.</span><span class="sxs-lookup"><span data-stu-id="c52fc-109">The <xref:System.Resources.ResourceManager> class is used to retrieve resources whose names are known in advance, whereas the <xref:System.Resources.ResourceReader> class is useful for retrieving resources whose number or precise names are not known at compile time.</span></span> <span data-ttu-id="c52fc-110">Na przykład aplikacja może użyć pliku zasobów do przechowywania informacji o konfiguracji, który jest podzielone na sekcje i elementów w sekcji, gdzie numer sekcji lub elementów w sekcji nie jest znany wcześniej.</span><span class="sxs-lookup"><span data-stu-id="c52fc-110">For example, an application may use a resources file to store configuration information that is organized into sections and items in a section, where the number of sections or items in a section is not known in advance.</span></span> <span data-ttu-id="c52fc-111">Zasoby mogą następnie objęty nazwę (takich jak `Section1`, `Section1Item1`, `Section1Item2`i tak dalej) i odczytywane za pomocą <xref:System.Resources.ResourceReader> obiektu.</span><span class="sxs-lookup"><span data-stu-id="c52fc-111">Resources can then be named generically (such as `Section1`, `Section1Item1`, `Section1Item2`, and so on) and retrieved by using a <xref:System.Resources.ResourceReader> object.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="c52fc-112">Ten typ implementuje <xref:System.IDisposable> interfejsu.</span><span class="sxs-lookup"><span data-stu-id="c52fc-112">This type implements the <xref:System.IDisposable> interface.</span></span> <span data-ttu-id="c52fc-113">Po zakończeniu przy użyciu typu bezpośrednio lub pośrednio należy usunąć z niego.</span><span class="sxs-lookup"><span data-stu-id="c52fc-113">When you have finished using the type, you should dispose of it either directly or indirectly.</span></span> <span data-ttu-id="c52fc-114">Do usuwania tego typu, należy wywołać jej <xref:System.IDisposable.Dispose%2A> metody w `try` / `catch` bloku.</span><span class="sxs-lookup"><span data-stu-id="c52fc-114">To dispose of the type directly, call its <xref:System.IDisposable.Dispose%2A> method in a `try`/`catch` block.</span></span> <span data-ttu-id="c52fc-115">Do usunięcia ich pośrednio, użyj konstrukcji języka takiego jak `using` (w języku C#) lub `Using` (w języku Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="c52fc-115">To dispose of it indirectly, use a language construct such as `using` (in C#) or `Using` (in Visual Basic).</span></span> <span data-ttu-id="c52fc-116">Aby uzyskać więcej informacji, zobacz sekcję "Przy użyciu obiektu który implementuje interfejs IDisposable" w <xref:System.IDisposable> interfejsu tematu.</span><span class="sxs-lookup"><span data-stu-id="c52fc-116">For more information, see the "Using an Object that Implements IDisposable" section in the <xref:System.IDisposable> interface topic.</span></span>  
  
 <span data-ttu-id="c52fc-117">Aby uzyskać więcej informacji o używaniu <xref:System.Resources.ResourceReader> klasy, zobacz następujące sekcje:</span><span class="sxs-lookup"><span data-stu-id="c52fc-117">For more information about using the <xref:System.Resources.ResourceReader> class, see the following sections:</span></span>  
  
-   [<span data-ttu-id="c52fc-118">Utworzenie wystąpienia obiektu ResourceReader</span><span class="sxs-lookup"><span data-stu-id="c52fc-118">Instantiating a ResourceReader object</span></span>](#instantiate)  
  
-   [<span data-ttu-id="c52fc-119">Wyliczanie obiektu ResourceReader zasobów</span><span class="sxs-lookup"><span data-stu-id="c52fc-119">Enumerating a ResourceReader object's resources</span></span>](#enumerate)  
  
    -   [<span data-ttu-id="c52fc-120">Pobieranie zasobów za pomocą właściwości w obiekcie IDictionaryEnumerator</span><span class="sxs-lookup"><span data-stu-id="c52fc-120">Retrieving resources by using IDictionaryEnumerator properties</span></span>](#idictionaryenumerator)  
  
    -   [<span data-ttu-id="c52fc-121">Pobieranie zasobów według nazw z GetResourceData</span><span class="sxs-lookup"><span data-stu-id="c52fc-121">Retrieving resources by name with GetResourceData</span></span>](#getresourcedata)  
  
<a name="instantiate"></a>   
## <a name="instantiating-a-resourcereader-object"></a><span data-ttu-id="c52fc-122">Utworzenie wystąpienia obiektu ResourceReader</span><span class="sxs-lookup"><span data-stu-id="c52fc-122">Instantiating a ResourceReader Object</span></span>  
 <span data-ttu-id="c52fc-123">Plik .resources jest plikiem binarnym, który został skompilowany z pliku tekstowego lub pliku .resx XML przez [Resgen.exe (Generator pliku zasobów)](~/docs/framework/tools/resgen-exe-resource-file-generator.md).</span><span class="sxs-lookup"><span data-stu-id="c52fc-123">A .resources file is a binary file that has been compiled from either a text file or an XML .resx file by [Resgen.exe (Resource File Generator)](~/docs/framework/tools/resgen-exe-resource-file-generator.md).</span></span> <span data-ttu-id="c52fc-124">A <xref:System.Resources.ResourceReader> object może reprezentować autonomiczny plik .resources lub plik .resources, które zostały osadzone w zestawie.</span><span class="sxs-lookup"><span data-stu-id="c52fc-124">A <xref:System.Resources.ResourceReader> object can represent either a standalone .resources file or a .resources file that has been embedded in an assembly.</span></span>  
  
 <span data-ttu-id="c52fc-125">Można utworzyć wystąpienia <xref:System.Resources.ResourceReader> obiektów, że odczyty autonomiczny plik .resources, użyj <xref:System.Resources.ResourceReader> konstruktora klasy strumień wejściowy lub ciąg, który zawiera nazwę pliku .resources.</span><span class="sxs-lookup"><span data-stu-id="c52fc-125">To instantiate a <xref:System.Resources.ResourceReader> object that reads from a standalone .resources file, use the <xref:System.Resources.ResourceReader> class constructor with either an input stream or a string that contains the .resources file name.</span></span> <span data-ttu-id="c52fc-126">Poniższy przykład przedstawia obu podejść.</span><span class="sxs-lookup"><span data-stu-id="c52fc-126">The following example illustrates both approaches.</span></span> <span data-ttu-id="c52fc-127">Tworzy wystąpienie pierwszy <xref:System.Resources.ResourceReader> obiekt, który reprezentuje plik .resources o nazwie `Resources1.resources` przy użyciu jego nazwa pliku.</span><span class="sxs-lookup"><span data-stu-id="c52fc-127">The first instantiates a <xref:System.Resources.ResourceReader> object that represents a .resources file named `Resources1.resources` by using its file name.</span></span> <span data-ttu-id="c52fc-128">Tworzy drugi <xref:System.Resources.ResourceReader> obiekt, który reprezentuje plik .resources o nazwie `Resources2.resources` za pomocą strumienia utworzone na podstawie pliku.</span><span class="sxs-lookup"><span data-stu-id="c52fc-128">The second instantiates a <xref:System.Resources.ResourceReader> object that represents a .resources file named `Resources2.resources` by using a stream created from the file.</span></span>  
  
 [!code-csharp[System.Resources.ResourceReader.Class#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.resources.resourcereader.class/cs/ctor1.cs#2)]
 [!code-vb[System.Resources.ResourceReader.Class#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.resources.resourcereader.class/vb/ctor1.vb#2)]  
  
 <span data-ttu-id="c52fc-129">Aby utworzyć <xref:System.Resources.ResourceReader> tworzenia wystąpienia obiektu, który reprezentuje plik .resources osadzonych <xref:System.Reflection.Assembly> obiekt z zestawu, w której jest osadzony plik .resources.</span><span class="sxs-lookup"><span data-stu-id="c52fc-129">To create a <xref:System.Resources.ResourceReader> object that represents an embedded .resources file, instantiate an <xref:System.Reflection.Assembly> object from the assembly in which the .resources file is embedded.</span></span> <span data-ttu-id="c52fc-130">Jego <xref:System.Reflection.Assembly.GetManifestResourceStream%2A?displayProperty=nameWithType> metoda zwraca <xref:System.IO.Stream> obiektów, które mogą zostać przekazane do <xref:System.Resources.ResourceReader.%23ctor%28System.IO.Stream%29> konstruktora.</span><span class="sxs-lookup"><span data-stu-id="c52fc-130">Its <xref:System.Reflection.Assembly.GetManifestResourceStream%2A?displayProperty=nameWithType> method returns a <xref:System.IO.Stream> object that can be passed to the <xref:System.Resources.ResourceReader.%23ctor%28System.IO.Stream%29> constructor.</span></span> <span data-ttu-id="c52fc-131">Poniższy przykład tworzy <xref:System.Resources.ResourceReader> obiekt, który reprezentuje plik .resources osadzonych.</span><span class="sxs-lookup"><span data-stu-id="c52fc-131">The following example instantiates a <xref:System.Resources.ResourceReader> object that represents an embedded .resources file.</span></span>  
  
 [!code-csharp[System.Resources.ResourceReader.Class#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.resources.resourcereader.class/cs/ctor1.cs#3)]
 [!code-vb[System.Resources.ResourceReader.Class#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.resources.resourcereader.class/vb/ctor1.vb#3)]  
  
<a name="enumerate"></a>   
## <a name="enumerating-a-resourcereader-objects-resources"></a><span data-ttu-id="c52fc-132">Wyliczanie zasobów obiektu ResourceReader</span><span class="sxs-lookup"><span data-stu-id="c52fc-132">Enumerating a ResourceReader Object's Resources</span></span>  
 <span data-ttu-id="c52fc-133">Aby wyliczyć zasobów w pliku .resources, należy wywołać <xref:System.Resources.ResourceReader.GetEnumerator%2A> metody, która zwraca <xref:System.Collections.IDictionaryEnumerator?displayProperty=nameWithType> obiektu.</span><span class="sxs-lookup"><span data-stu-id="c52fc-133">To enumerate the resources in a .resources file, you call the <xref:System.Resources.ResourceReader.GetEnumerator%2A> method, which returns an <xref:System.Collections.IDictionaryEnumerator?displayProperty=nameWithType> object.</span></span> <span data-ttu-id="c52fc-134">Należy wywołać `IDictionaryEnumerator.MoveNext` metodę, aby przejść z jednego zasobu do drugiego.</span><span class="sxs-lookup"><span data-stu-id="c52fc-134">You call the `IDictionaryEnumerator.MoveNext` method to move from one resource to the next.</span></span> <span data-ttu-id="c52fc-135">Metoda zwraca `false` po wszystkich zasobów w pliku .resources zostały wyliczone.</span><span class="sxs-lookup"><span data-stu-id="c52fc-135">The method returns `false` when all the resources in the .resources file have been enumerated.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c52fc-136">Mimo że <xref:System.Resources.ResourceReader> klasa implementuje <xref:System.Collections.IEnumerable> interfejsu i <xref:System.Collections.IEnumerable.GetEnumerator%2A?displayProperty=nameWithType> metody <xref:System.Resources.ResourceReader.GetEnumerator%2A?displayProperty=nameWithType> nie ma metody <xref:System.Collections.IEnumerable.GetEnumerator%2A?displayProperty=nameWithType> implementacji.</span><span class="sxs-lookup"><span data-stu-id="c52fc-136">Although the <xref:System.Resources.ResourceReader> class implements the <xref:System.Collections.IEnumerable> interface and the <xref:System.Collections.IEnumerable.GetEnumerator%2A?displayProperty=nameWithType> method, the <xref:System.Resources.ResourceReader.GetEnumerator%2A?displayProperty=nameWithType> method does not provide the <xref:System.Collections.IEnumerable.GetEnumerator%2A?displayProperty=nameWithType> implementation.</span></span> <span data-ttu-id="c52fc-137">Zamiast tego <xref:System.Resources.ResourceReader.GetEnumerator%2A?displayProperty=nameWithType> metoda zwraca <xref:System.Collections.IDictionaryEnumerator> obiektu interfejsu, który zapewnia dostęp do każdego zasobu pary nazwa/wartość.</span><span class="sxs-lookup"><span data-stu-id="c52fc-137">Instead, the <xref:System.Resources.ResourceReader.GetEnumerator%2A?displayProperty=nameWithType> method  returns an <xref:System.Collections.IDictionaryEnumerator> interface object that provides access to each resource's name/value pair.</span></span>  
  
 <span data-ttu-id="c52fc-138">Można pobrać pojedynczych zasobów w kolekcji na dwa sposoby:</span><span class="sxs-lookup"><span data-stu-id="c52fc-138">You can retrieve the individual resources in the collection in two ways:</span></span>  
  
-   <span data-ttu-id="c52fc-139">Można wykonać iterację każdy zasób w <xref:System.Collections.IDictionaryEnumerator?displayProperty=nameWithType> zbierania i używania <xref:System.Collections.IDictionaryEnumerator?displayProperty=nameWithType> właściwości, aby pobrać nazwę zasobu i wartość.</span><span class="sxs-lookup"><span data-stu-id="c52fc-139">You can iterate each resource in the <xref:System.Collections.IDictionaryEnumerator?displayProperty=nameWithType> collection and use <xref:System.Collections.IDictionaryEnumerator?displayProperty=nameWithType> properties to retrieve the resource name and value.</span></span> <span data-ttu-id="c52fc-140">Ta technika firma Microsoft zaleca, gdy wszystkie zasoby są tego samego typu lub znany typ danych każdego zasobu.</span><span class="sxs-lookup"><span data-stu-id="c52fc-140">We recommend this technique when all the resources are of the same type, or you know the data type of each resource.</span></span>  
  
-   <span data-ttu-id="c52fc-141">Możesz pobrać nazwę każdego zasobu podczas możesz przejść <xref:System.Collections.IDictionaryEnumerator?displayProperty=nameWithType> kolekcji i wywołanie <xref:System.Resources.ResourceReader.GetResourceData%2A> metody do pobierania danych zasobu.</span><span class="sxs-lookup"><span data-stu-id="c52fc-141">You can retrieve the name of each resource when you iterate the <xref:System.Collections.IDictionaryEnumerator?displayProperty=nameWithType> collection and call the <xref:System.Resources.ResourceReader.GetResourceData%2A> method to retrieve the resource's data.</span></span> <span data-ttu-id="c52fc-142">Firma Microsoft zaleca takie podejście, gdy nie jest znany typ danych, każdego zasobu lub jeśli poprzednie podejście zgłasza wyjątki.</span><span class="sxs-lookup"><span data-stu-id="c52fc-142">We recommend this approach when you do not know the data type of each resource or if the previous approach throws exceptions.</span></span>  
  
<a name="idictionaryenumerator"></a>   
### <a name="retrieving-resources-by-using-idictionaryenumerator-properties"></a><span data-ttu-id="c52fc-143">Pobieranie zasobów za pomocą właściwości IDictionaryEnumerator</span><span class="sxs-lookup"><span data-stu-id="c52fc-143">Retrieving Resources by Using IDictionaryEnumerator Properties</span></span>  
 <span data-ttu-id="c52fc-144">Pierwszy metody wyliczania zasobów w pliku .resources polega na bezpośrednie pobieranie pary nazwa/wartość każdego zasobu.</span><span class="sxs-lookup"><span data-stu-id="c52fc-144">The first method of enumerating the resources in a .resources file involves directly retrieving each resource's name/value pair.</span></span> <span data-ttu-id="c52fc-145">Po wywołaniu metody `IDictionaryEnumerator.MoveNext` nazwę metody, aby przejść do każdego zasobu w kolekcji, można pobrać zasobu z <xref:System.Collections.IDictionaryEnumerator.Key%2A?displayProperty=nameWithType> właściwości i dane zasobów z <xref:System.Collections.IDictionaryEnumerator.Value%2A?displayProperty=nameWithType> właściwości.</span><span class="sxs-lookup"><span data-stu-id="c52fc-145">After you call the `IDictionaryEnumerator.MoveNext` method to move to each resource in the collection, you can retrieve the resource name from the <xref:System.Collections.IDictionaryEnumerator.Key%2A?displayProperty=nameWithType> property and the resource data from the <xref:System.Collections.IDictionaryEnumerator.Value%2A?displayProperty=nameWithType> property.</span></span>  
  
 <span data-ttu-id="c52fc-146">Poniższy przykład przedstawia sposób pobrać nazwę i wartość każdego z zasobów w pliku .resources za pomocą <xref:System.Collections.IDictionaryEnumerator.Key%2A?displayProperty=nameWithType> i <xref:System.Collections.IDictionaryEnumerator.Value%2A?displayProperty=nameWithType> właściwości.</span><span class="sxs-lookup"><span data-stu-id="c52fc-146">The following example shows how to retrieve the name and value of each resource in a .resources file by using the <xref:System.Collections.IDictionaryEnumerator.Key%2A?displayProperty=nameWithType> and <xref:System.Collections.IDictionaryEnumerator.Value%2A?displayProperty=nameWithType> properties.</span></span> <span data-ttu-id="c52fc-147">Aby uruchomić przykład, należy utworzyć poniższy plik tekstowy o nazwie ApplicationResources.txt do definiowania zasobów ciągu.</span><span class="sxs-lookup"><span data-stu-id="c52fc-147">To run the example, create the following text file named ApplicationResources.txt to define string resources.</span></span>  
  
```  
Title="Contact Information"  
Label1="First Name:"  
Label2="Middle Name:"  
Label3="Last Name:"  
Label4="SSN:"  
Label5="Street Address:"  
Label6="City:"  
Label7="State:"  
Label8="Zip Code:"  
Label9="Home Phone:"  
Label10="Business Phone:"  
Label11="Mobile Phone:"  
Label12="Other Phone:"  
Label13="Fax:"  
Label14="Email Address:"  
Label15="Alternate Email Address:"  
```  
  
 <span data-ttu-id="c52fc-148">Można następnie wykonać konwersję pliku zasobów tekstu do pliku binarnego o nazwie ApplicationResources.resources przy użyciu następującego polecenia:</span><span class="sxs-lookup"><span data-stu-id="c52fc-148">You can then convert the text resource file to a binary file named ApplicationResources.resources by using the following command:</span></span>  
  
 <span data-ttu-id="c52fc-149">**ApplicationResources.txt ResGen**</span><span class="sxs-lookup"><span data-stu-id="c52fc-149">**resgen ApplicationResources.txt**</span></span>  
  
 <span data-ttu-id="c52fc-150">W poniższym przykładzie następnie użyto <xref:System.Resources.ResourceReader> klasy wyliczyć każdego zasobu w pliku .resources binarne autonomicznych i wyświetlić jej nazwę klucza i odpowiadającej jej wartości.</span><span class="sxs-lookup"><span data-stu-id="c52fc-150">The following example then uses the <xref:System.Resources.ResourceReader> class to enumerate each resource in the standalone binary .resources file and to display its key name and corresponding value.</span></span>  
  
 [!code-csharp[System.Resources.ResourceReader.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.resources.resourcereader.class/cs/class1.cs#1)]
 [!code-vb[System.Resources.ResourceReader.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.resources.resourcereader.class/vb/class1.vb#1)]  
  
 <span data-ttu-id="c52fc-151">Próba pobrania danych zasobu ze <xref:System.Collections.IDictionaryEnumerator.Value%2A?displayProperty=nameWithType> właściwości może zgłosić następujące wyjątki:</span><span class="sxs-lookup"><span data-stu-id="c52fc-151">The attempt to retrieve resource data from the <xref:System.Collections.IDictionaryEnumerator.Value%2A?displayProperty=nameWithType> property can throw the following exceptions:</span></span>  
  
-   <span data-ttu-id="c52fc-152">A <xref:System.FormatException> Jeśli dane nie ma oczekiwanego formatu.</span><span class="sxs-lookup"><span data-stu-id="c52fc-152">A <xref:System.FormatException> if the data is not in the expected format.</span></span>  
  
-   <span data-ttu-id="c52fc-153">A <xref:System.IO.FileNotFoundException> Jeśli nie można odnaleźć zestawu zawierającego typ, do którego należy dane.</span><span class="sxs-lookup"><span data-stu-id="c52fc-153">A <xref:System.IO.FileNotFoundException> if the assembly that contains the type to which the data belongs cannot be found.</span></span>  
  
-   <span data-ttu-id="c52fc-154">A <xref:System.TypeLoadException> Jeśli nie może być typem, do którego należy danych nie można odnaleźć.</span><span class="sxs-lookup"><span data-stu-id="c52fc-154">A <xref:System.TypeLoadException> if the type to which the data belongs cannot be cannot be found.</span></span>  
  
 <span data-ttu-id="c52fc-155">Zazwyczaj te wyjątki zostaną zgłoszone, jeżeli plik .resources została zmodyfikowana ręcznie, jeśli zestawu, w którym jest zdefiniowany typ ma albo nie został dołączony do aplikacji lub został przypadkowo usunięty lub jeśli zestaw jest w starszej wersji, która poprzedza Typ.</span><span class="sxs-lookup"><span data-stu-id="c52fc-155">Typically, these exceptions are thrown if the .resources file has been modified manually, if the assembly in which a type is defined has either not been included with an application or has been inadvertently deleted, or if the assembly is an older version that predates a type.</span></span> <span data-ttu-id="c52fc-156">Jeśli generowany jest jeden z tych wyjątków, można pobrać zasobów wyliczania każdego zasobu i wywoływania <xref:System.Resources.ResourceReader.GetResourceData%2A> metody, jak przedstawiono na poniższej sekcji.</span><span class="sxs-lookup"><span data-stu-id="c52fc-156">If one of these exceptions is thrown, you can retrieve resources by enumerating each resource and calling the <xref:System.Resources.ResourceReader.GetResourceData%2A> method, as the following section shows.</span></span> <span data-ttu-id="c52fc-157">Metoda ta umożliwia niektóre informacje o danych wpisania który <xref:System.Collections.IDictionaryEnumerator.Value%2A?displayProperty=nameWithType> właściwości podjęła próbę zwrócenia.</span><span class="sxs-lookup"><span data-stu-id="c52fc-157">This approach provides you with some information about the data type that the <xref:System.Collections.IDictionaryEnumerator.Value%2A?displayProperty=nameWithType> property attempted to return.</span></span>  
  
<a name="getresourcedata"></a>   
### <a name="retrieving-resources-by-name-with-getresourcedata"></a><span data-ttu-id="c52fc-158">Pobieranie zasobów według nazw z GetResourceData</span><span class="sxs-lookup"><span data-stu-id="c52fc-158">Retrieving Resources by Name with GetResourceData</span></span>  
 <span data-ttu-id="c52fc-159">Drugim sposobem wyliczania zasobów w pliku .resources obejmuje również w nawigowaniu zasobów w pliku przez wywołanie metody `IDictionaryEnumerator.MoveNext` metody.</span><span class="sxs-lookup"><span data-stu-id="c52fc-159">The second approach to enumerating resources in a .resources file also involves navigating through the resources in the file by calling the `IDictionaryEnumerator.MoveNext` method.</span></span> <span data-ttu-id="c52fc-160">Dla każdego zasobu, można pobrać nazwy zasobu z <xref:System.Collections.IDictionaryEnumerator.Key%2A?displayProperty=nameWithType> właściwości, które są następnie przekazywane do <xref:System.Resources.ResourceReader.GetResourceData%28System.String%2CSystem.String%40%2CSystem.Byte%5B%5D%40%29> metody do pobierania danych zasobu.</span><span class="sxs-lookup"><span data-stu-id="c52fc-160">For each resource, you retrieve the resource's name from the <xref:System.Collections.IDictionaryEnumerator.Key%2A?displayProperty=nameWithType> property, which is then passed to the <xref:System.Resources.ResourceReader.GetResourceData%28System.String%2CSystem.String%40%2CSystem.Byte%5B%5D%40%29> method to retrieve the resource's data.</span></span> <span data-ttu-id="c52fc-161">Ten błąd jest zwracany jako tablicę bajtów w `resourceData` argumentu.</span><span class="sxs-lookup"><span data-stu-id="c52fc-161">This is returned as a byte array in the `resourceData` argument.</span></span>  
  
 <span data-ttu-id="c52fc-162">Takie podejście jest bardziej nieodpowiednich niż podczas pobierania nazwy zasobów i wartość z zakresu od <xref:System.Collections.IDictionaryEnumerator.Key%2A?displayProperty=nameWithType> i <xref:System.Collections.IDictionaryEnumerator.Value%2A?displayProperty=nameWithType> właściwości, ponieważ zwraca ono wartość rzeczywista liczba bajtów, które tworzą wartość zasobu.</span><span class="sxs-lookup"><span data-stu-id="c52fc-162">This approach is more awkward than retrieving the resource name and value from the <xref:System.Collections.IDictionaryEnumerator.Key%2A?displayProperty=nameWithType> and <xref:System.Collections.IDictionaryEnumerator.Value%2A?displayProperty=nameWithType> properties, because it returns the actual bytes that form the resource value.</span></span> <span data-ttu-id="c52fc-163">Jednakże, jeśli próba pobrania zasobu zgłasza wyjątek, <xref:System.Resources.ResourceReader.GetResourceData%2A> metody może ułatwić identyfikację źródło wyjątku, podając informacje o typie danych zasobu.</span><span class="sxs-lookup"><span data-stu-id="c52fc-163">However, if the attempt to retrieve the resource throws an exception, the <xref:System.Resources.ResourceReader.GetResourceData%2A> method can help identify the source of the exception by supplying information about the resource's data type.</span></span> <span data-ttu-id="c52fc-164">Aby uzyskać więcej informacji na temat ciąg, który wskazuje typ danych zasobów, zobacz <xref:System.Resources.ResourceReader.GetResourceData%2A>.</span><span class="sxs-lookup"><span data-stu-id="c52fc-164">For more information about the string that indicates the resource's data type, see <xref:System.Resources.ResourceReader.GetResourceData%2A>.</span></span>  
  
 <span data-ttu-id="c52fc-165">Poniższy przykład przedstawia sposób użycia tej metody można pobrać zasobów i wszelkie wyjątki, które są zgłaszane.</span><span class="sxs-lookup"><span data-stu-id="c52fc-165">The following example illustrates how to use this approach to retrieve resources and to handle any exceptions that are thrown.</span></span> <span data-ttu-id="c52fc-166">Programowo tworzy plik .resources binarny, który zawiera cztery parametry, Boolean co jeden argument, jeden mapy bitowej i jeden niestandardowy `DateTimeTZI` obiektu.</span><span class="sxs-lookup"><span data-stu-id="c52fc-166">It programmatically creates a binary .resources file that contains four strings, one Boolean, one integer, one bitmap, and one custom `DateTimeTZI` object.</span></span> <span data-ttu-id="c52fc-167">Aby uruchomić przykład, wykonaj następujące czynności:</span><span class="sxs-lookup"><span data-stu-id="c52fc-167">To run the example, do the following:</span></span>  
  
1.  <span data-ttu-id="c52fc-168">Utwórz zestaw o nazwie Library.dll, który zawiera `DateTimeTZI` struktury.</span><span class="sxs-lookup"><span data-stu-id="c52fc-168">Create an assembly named Library.dll that contains the `DateTimeTZI` structure.</span></span> <span data-ttu-id="c52fc-169">Poniżej znajduje się kod źródłowy zestawu.</span><span class="sxs-lookup"><span data-stu-id="c52fc-169">The following is the source code for the assembly.</span></span>  
  
     [!code-csharp[System.Resources.ResourceReader.Class#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.resources.resourcereader.class/cs/library.cs#4)]
     [!code-vb[System.Resources.ResourceReader.Class#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.resources.resourcereader.class/vb/library.vb#4)]  
  
     <span data-ttu-id="c52fc-170">Kompilowanie kodu źródłowego w języku C# za pomocą następującego polecenia:</span><span class="sxs-lookup"><span data-stu-id="c52fc-170">Compile the source code in C# by using the following command:</span></span>  
  
    ```  
    csc /t:library library.cs  
    ```  
  
     <span data-ttu-id="c52fc-171">Lub skompilować w języku Visual Basic za pomocą następującego polecenia:</span><span class="sxs-lookup"><span data-stu-id="c52fc-171">Or, you can compile it in Visual Basic by using the following command:</span></span>  
  
    ```  
    vbc library.vb /t:library  
    ```  
  
2.  <span data-ttu-id="c52fc-172">Skompiluj i wykonaj następujący kod źródłowy, który tworzy plik .resources o nazwie ContactResources.resources.</span><span class="sxs-lookup"><span data-stu-id="c52fc-172">Compile and execute the following source code, which creates a .resources file named ContactResources.resources.</span></span>  
  
     [!code-csharp[System.Resources.ResourceReader.Class#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.resources.resourcereader.class/cs/createresourceex1.cs#5)]
     [!code-vb[System.Resources.ResourceReader.Class#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.resources.resourcereader.class/vb/createresourceex1.vb#5)]  
  
     <span data-ttu-id="c52fc-173">CreateResources.cs nosi nazwę pliku kodu źródłowego.</span><span class="sxs-lookup"><span data-stu-id="c52fc-173">The source code file is named CreateResources.cs.</span></span> <span data-ttu-id="c52fc-174">Można go skompilować w języku C# za pomocą następującego polecenia:</span><span class="sxs-lookup"><span data-stu-id="c52fc-174">You can compile it in C# by using the following command:</span></span>  
  
    ```  
    csc CreateResources.cs /r:library.dll  
    ```  
  
     <span data-ttu-id="c52fc-175">Lub skompilować w języku Visual Basic za pomocą następującego polecenia:</span><span class="sxs-lookup"><span data-stu-id="c52fc-175">Or, you can compile it in Visual Basic by using the following command:</span></span>  
  
    ```  
    vbc CreateResources.vb /r:library.dll  
    ```  
  
3.  <span data-ttu-id="c52fc-176">Skompiluj i uruchom następujący kod do wyliczenia zasobów w pliku ContactResources.resources.</span><span class="sxs-lookup"><span data-stu-id="c52fc-176">Compile and run the following code to enumerate the resources in the ContactResources.resources file.</span></span>  
  
     [!code-csharp[System.Resources.ResourceReader.Class#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.resources.resourcereader.class/cs/readresourceex1.cs#6)]
     [!code-vb[System.Resources.ResourceReader.Class#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.resources.resourcereader.class/vb/readresourceex1.vb#6)]  
  
     <span data-ttu-id="c52fc-177">Po zmodyfikowaniu kodu źródłowego (np. przez zgłaszanie celowo <xref:System.FormatException> na końcu `try` blok) lub zmiana nazwy zestawu Library.dll, dzięki czemu jest niedostępne w czasie wykonywania, możesz uruchomić przykład, aby zobaczyć, jak wywołań <xref:System.Resources.ResourceReader.GetResourceData%2A> umożliwiają pobieranie lub Utwórz ponownie niektóre informacje o zasobie.</span><span class="sxs-lookup"><span data-stu-id="c52fc-177">After modifying the source code (for example, by deliberately throwing a <xref:System.FormatException> at the end of the `try` block) or renaming the Library.dll assembly so that it is unavailable at runtime, you can run the example to see how calls to <xref:System.Resources.ResourceReader.GetResourceData%2A> enable you to retrieve or recreate some resource information.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Resources.Reader</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="c52fc-178">Inicjuje nowe wystąpienie klasy <see cref="T:System.Resources.ResourceReader" /> klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c52fc-178">Initializes a new instance of the <see cref="T:System.Resources.ResourceReader" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="c52fc-179">Za pomocą wystąpienia tego obiektu z niezaufanych danych stanowi zagrożenie bezpieczeństwa.</span><span class="sxs-lookup"><span data-stu-id="c52fc-179">Using an instance of this object with untrusted data is a security risk.</span></span> <span data-ttu-id="c52fc-180">Ten obiekt jest używany tylko z zaufanych danych.</span><span class="sxs-lookup"><span data-stu-id="c52fc-180">Use this object only with trusted data.</span></span> <span data-ttu-id="c52fc-181">Aby uzyskać więcej informacji, zobacz [sprawdzanie poprawności danych](https://www.owasp.org/index.php/Data_Validation).</span><span class="sxs-lookup"><span data-stu-id="c52fc-181">For more information, see [Data Validation](https://www.owasp.org/index.php/Data_Validation).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ResourceReader (System.IO.Stream stream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream stream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResourceReader.#ctor(System.IO.Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ResourceReader(System::IO::Stream ^ stream);" />
      <MemberSignature Language="F#" Value="new System.Resources.ResourceReader : System.IO.Stream -&gt; System.Resources.ResourceReader" Usage="new System.Resources.ResourceReader stream" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Resources.Reader</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Resources.ResourceManager</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="stream">
          <span data-ttu-id="c52fc-182">Strumień wejściowy dla odczytu zasobów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c52fc-182">The input stream for reading resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c52fc-183">Inicjuje nowe wystąpienie klasy <see cref="T:System.Resources.ResourceReader" /> klasy dla określonego strumienia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c52fc-183">Initializes a new instance of the <see cref="T:System.Resources.ResourceReader" /> class for the specified stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c52fc-184"><xref:System.Resources.ResourceReader.%23ctor%28System.IO.Stream%29> Tworzy konstruktora <xref:System.Resources.ResourceReader> obiekt, który pobiera z pliku .resources autonomicznej lub .resources pliku zasoby osadzone w zestawie.</span><span class="sxs-lookup"><span data-stu-id="c52fc-184">The <xref:System.Resources.ResourceReader.%23ctor%28System.IO.Stream%29> constructor instantiates a <xref:System.Resources.ResourceReader> object that retrieves resources either from a standalone .resources file or from a .resources file that is embedded in an assembly.</span></span> <span data-ttu-id="c52fc-185">Do odczytu z pliku .resources autonomicznej, należy utworzyć wystąpienia <xref:System.IO.Stream> obiektu i przekaż go do <xref:System.Resources.ResourceReader.%23ctor%28System.IO.Stream%29> konstruktora.</span><span class="sxs-lookup"><span data-stu-id="c52fc-185">To read from a standalone .resources file, instantiate a <xref:System.IO.Stream> object and pass it to the <xref:System.Resources.ResourceReader.%23ctor%28System.IO.Stream%29> constructor.</span></span> <span data-ttu-id="c52fc-186">Aby odczytać z pliku .resources osadzone, należy wywołać <xref:System.Reflection.Assembly.GetManifestResourceStream%2A?displayProperty=nameWithType> metodę z uwzględnieniem wielkości liter nazwy plików .resources i przebiegu zwróconego <xref:System.IO.Stream> do obiektu <xref:System.Resources.ResourceReader.%23ctor%28System.IO.Stream%29> konstruktora.</span><span class="sxs-lookup"><span data-stu-id="c52fc-186">To read from an embedded .resources file, call the <xref:System.Reflection.Assembly.GetManifestResourceStream%2A?displayProperty=nameWithType> method with the case-sensitive name of the .resources file, and pass the returned <xref:System.IO.Stream> object to the <xref:System.Resources.ResourceReader.%23ctor%28System.IO.Stream%29> constructor.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="c52fc-187">Za pomocą wystąpienia tego obiektu z niezaufanych danych stanowi zagrożenie bezpieczeństwa.</span><span class="sxs-lookup"><span data-stu-id="c52fc-187">Using an instance of this object with untrusted data is a security risk.</span></span> <span data-ttu-id="c52fc-188">Ten obiekt jest używany tylko z zaufanych danych.</span><span class="sxs-lookup"><span data-stu-id="c52fc-188">Use this object only with trusted data.</span></span> <span data-ttu-id="c52fc-189">Aby uzyskać więcej informacji, zobacz [sprawdzanie poprawności danych](https://www.owasp.org/index.php/Data_Validation).</span><span class="sxs-lookup"><span data-stu-id="c52fc-189">For more information, see [Data Validation](https://www.owasp.org/index.php/Data_Validation).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c52fc-190">W przykładzie w tej sekcji użyto następującego pliku txt, o nazwie `PatientForm.txt` do definiowania zasoby używane przez aplikację.</span><span class="sxs-lookup"><span data-stu-id="c52fc-190">The example in this section uses the following .txt file named `PatientForm.txt` to define the resources used by an application.</span></span>  
  
```  
  
Title="Top Pet Animal Clinic"  
Label1="Patient Number:"  
Label2="Pet Name:"  
Label3="Species:"  
Label4="Breed:"  
Label5="Date of Birth:"  
Label6="Age:"  
Label7="Owner:"  
Label8="Address:"  
Label9="Home Phone:"  
Label10="Work Phone:"  
Label11="Mobile Phone:"  
  
```  
  
 <span data-ttu-id="c52fc-191">Plik .txt można kompilować w pliku .resources, wydając polecenie:</span><span class="sxs-lookup"><span data-stu-id="c52fc-191">You can compile the .txt file into a .resources file by issuing the following command:</span></span>  
  
 <span data-ttu-id="c52fc-192">**PatientForm.txt ResGen**</span><span class="sxs-lookup"><span data-stu-id="c52fc-192">**resgen PatientForm.txt**</span></span>  
  
 <span data-ttu-id="c52fc-193">W poniższym przykładzie założono, że plik zasobu jest osadzony w zestawie, który zawiera kod wykonywalny aplikacji.</span><span class="sxs-lookup"><span data-stu-id="c52fc-193">The following example assumes that the resource file is embedded in the assembly that contains the application's executable code.</span></span> <span data-ttu-id="c52fc-194">Pobiera on plik zasobów o nazwie `PatientForm.resources` z aktualnie wykonywane zestawów i wyświetla nazwę i wartość każdego z jego zasobów.</span><span class="sxs-lookup"><span data-stu-id="c52fc-194">It retrieves a resource file named `PatientForm.resources` from the currently executing assemblies and displays the name and value of each of its resources.</span></span>  
  
 [!code-csharp[System.Resources.ResourceReader.Ctor#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.resources.resourcereader.ctor/cs/stream1.cs#1)]
 [!code-vb[System.Resources.ResourceReader.Ctor#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.resources.resourcereader.ctor/vb/stream1.vb#1)]  
  
 <span data-ttu-id="c52fc-195">Jeśli nosi nazwę przykład C# `Example.cs`, można go skompilować przy użyciu następującego polecenia:</span><span class="sxs-lookup"><span data-stu-id="c52fc-195">If the C# example is named `Example.cs`, you can compile it by using the following command:</span></span>  
  
 <span data-ttu-id="c52fc-196">**CSC Example.cs /res:PatientForm.resources**</span><span class="sxs-lookup"><span data-stu-id="c52fc-196">**csc Example.cs /res:PatientForm.resources**</span></span>  
  
 <span data-ttu-id="c52fc-197">Jeśli nosi nazwę przykład Visual Basic `Example.vb`, można go skompilować przy użyciu następującego polecenia:</span><span class="sxs-lookup"><span data-stu-id="c52fc-197">If the Visual Basic example is named `Example.vb`, you can compile it by using the following command:</span></span>  
  
 <span data-ttu-id="c52fc-198">**vbc — Example.vb /res:PatientForm.resources**</span><span class="sxs-lookup"><span data-stu-id="c52fc-198">**vbc Example.vb /res:PatientForm.resources**</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="c52fc-199">
            <paramref name="stream" /> Parametr nie jest do odczytu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c52fc-199">The <paramref name="stream" /> parameter is not readable.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c52fc-200">
            <paramref name="stream" /> Parametr jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c52fc-200">The <paramref name="stream" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="c52fc-201">Wystąpił błąd We/Wy podczas uzyskiwania dostępu do <paramref name="stream" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c52fc-201">An I/O error has occurred while accessing <paramref name="stream" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="c52fc-202">w celu świadczenia usług serializacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c52fc-202">for providing serialization services.</span>
          </span>
          <span data-ttu-id="c52fc-203">Akcja zabezpieczeń: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c52fc-203">Security action: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />.</span>
          </span>
          <span data-ttu-id="c52fc-204">Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.SerializationFormatter" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="c52fc-204">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.SerializationFormatter" /></span>
          </span>
        </permission>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="c52fc-205">Wymaga pełnego zaufania do bezpośredniego obiektu wywołującego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c52fc-205">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="c52fc-206">Ten element członkowski nie może być używany przez częściowo zaufany lub przejrzysty kod.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c52fc-206">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Reflection.Assembly.GetManifestResourceStream(System.String)" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ResourceReader (string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResourceReader.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (fileName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ResourceReader(System::String ^ fileName);" />
      <MemberSignature Language="F#" Value="new System.Resources.ResourceReader : string -&gt; System.Resources.ResourceReader" Usage="new System.Resources.ResourceReader fileName" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Resources.ResourceManager</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="fileName">
          <span data-ttu-id="c52fc-207">Ścieżka i nazwa pliku zasobu do odczytu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c52fc-207">The path and name of the resource file to read.</span>
          </span>
          <span data-ttu-id="c52fc-208">
            <c>Nazwa pliku</c> nie jest rozróżniana wielkość liter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c52fc-208">
              <c>filename</c> is not case-sensitive.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c52fc-209">Inicjuje nowe wystąpienie klasy <see cref="T:System.Resources.ResourceReader" /> klasy dla określonego o nazwie pliku zasobów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c52fc-209">Initializes a new instance of the <see cref="T:System.Resources.ResourceReader" /> class for the specified named resource file.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c52fc-210"><xref:System.Resources.ResourceReader.%23ctor%28System.String%29> Tworzy konstruktora <xref:System.Resources.ResourceReader> obiekt, który pobiera zasoby z autonomiczny plik .resources.</span><span class="sxs-lookup"><span data-stu-id="c52fc-210">The <xref:System.Resources.ResourceReader.%23ctor%28System.String%29> constructor instantiates a <xref:System.Resources.ResourceReader> object that retrieves resources from a standalone .resources file.</span></span> <span data-ttu-id="c52fc-211">Można pobrać zasobów z pliku .resources osadzone, użyj <xref:System.Resources.ResourceReader.%23ctor%28System.IO.Stream%29> konstruktora.</span><span class="sxs-lookup"><span data-stu-id="c52fc-211">To retrieve resources from an embedded .resources file, use the <xref:System.Resources.ResourceReader.%23ctor%28System.IO.Stream%29> constructor.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="c52fc-212">Za pomocą wystąpienia tego obiektu z niezaufanych danych stanowi zagrożenie bezpieczeństwa.</span><span class="sxs-lookup"><span data-stu-id="c52fc-212">Using an instance of this object with untrusted data is a security risk.</span></span> <span data-ttu-id="c52fc-213">Ten obiekt jest używany tylko z zaufanych danych.</span><span class="sxs-lookup"><span data-stu-id="c52fc-213">Use this object only with trusted data.</span></span> <span data-ttu-id="c52fc-214">Aby uzyskać więcej informacji, zobacz [sprawdzanie poprawności danych](https://www.owasp.org/index.php/Data_Validation).</span><span class="sxs-lookup"><span data-stu-id="c52fc-214">For more information, see [Data Validation](https://www.owasp.org/index.php/Data_Validation).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c52fc-215">W przykładzie w tej sekcji użyto następującego pliku txt, o nazwie `PatientForm.txt` do definiowania zasoby używane przez aplikację.</span><span class="sxs-lookup"><span data-stu-id="c52fc-215">The example in this section uses the following .txt file named `PatientForm.txt` to define the resources used by an application.</span></span>  
  
```  
  
Title="Top Pet Animal Clinic"  
Label1="Patient Number:"  
Label2="Pet Name:"  
Label3="Species:"  
Label4="Breed:"  
Label5="Date of Birth:"  
Label6="Age:"  
Label7="Owner:"  
Label8="Address:"  
Label9="Home Phone:"  
Label10="Work Phone:"  
Label11="Mobile Phone:"  
  
```  
  
 <span data-ttu-id="c52fc-216">Ten plik .txt można kompilować w pliku .resources, wydając polecenie:</span><span class="sxs-lookup"><span data-stu-id="c52fc-216">You can compile this .txt file into a .resources file by issuing the following command:</span></span>  
  
 <span data-ttu-id="c52fc-217">**PatientForm.txt ResGen**</span><span class="sxs-lookup"><span data-stu-id="c52fc-217">**resgen PatientForm.txt**</span></span>  
  
 <span data-ttu-id="c52fc-218">Poniższy przykład wylicza zasobów w `PatientForm.resources` i wyświetla nazwę i wartość każdego z nich.</span><span class="sxs-lookup"><span data-stu-id="c52fc-218">The following example enumerates the resources in `PatientForm.resources` and displays the name and value of each.</span></span>  
  
 [!code-csharp[System.Resources.ResourceReader.Ctor#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.resources.resourcereader.ctor/cs/stream2.cs#2)]
 [!code-vb[System.Resources.ResourceReader.Ctor#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.resources.resourcereader.ctor/vb/stream2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c52fc-219">
            <paramref name="fileName" /> Parametr jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c52fc-219">The <paramref name="fileName" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="c52fc-220">Nie można odnaleźć pliku.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c52fc-220">The file cannot be found.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="c52fc-221">Wystąpił błąd we/wy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c52fc-221">An I/O error has occurred.</span>
          </span>
        </exception>
        <exception cref="T:System.BadImageFormatException">
          <span data-ttu-id="c52fc-222">Plik zasobów ma nieprawidłowy format.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c52fc-222">The resource file has an invalid format.</span>
          </span>
          <span data-ttu-id="c52fc-223">Na przykład długość pliku może wynosić zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c52fc-223">For example, the length of the file may be zero.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResourceReader.Close" />
      <MemberSignature Language="VB.NET" Value="Public Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Close();" />
      <MemberSignature Language="F#" Value="abstract member Close : unit -&gt; unit&#xA;override this.Close : unit -&gt; unit" Usage="resourceReader.Close " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Resources.IResourceReader.Close</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Resources.ResourceManager</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c52fc-224">Zwalnia wszystkie zasoby systemu operacyjnego skojarzonego z tym <see cref="T:System.Resources.ResourceReader" /> obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c52fc-224">Releases all operating system resources associated with this <see cref="T:System.Resources.ResourceReader" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c52fc-225"><xref:System.Resources.ResourceReader.Close%2A> można bezpiecznie wywoływać wielokrotnie.</span><span class="sxs-lookup"><span data-stu-id="c52fc-225"><xref:System.Resources.ResourceReader.Close%2A> can be safely called multiple times.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c52fc-226">W poniższym przykładzie przechodzi przez plik zasobów i wyświetla wszystkie znalezione pary klucz wartość.</span><span class="sxs-lookup"><span data-stu-id="c52fc-226">The following example moves through a file's resources and displays all the key/value pairs it finds.</span></span> <span data-ttu-id="c52fc-227">Następnie używa kod <xref:System.Resources.ResourceReader.Close%2A> metodę, aby zamknąć <xref:System.Resources.ResourceReader> i zwalnia wszelkie zasoby używane przez nią.</span><span class="sxs-lookup"><span data-stu-id="c52fc-227">The code then uses the <xref:System.Resources.ResourceReader.Close%2A> method to shut down the <xref:System.Resources.ResourceReader> and to release all resources used by it.</span></span>  
  
 [!code-cpp[System.Resources.ResourceReader.GetEnumerator Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Resources.ResourceReader.GetEnumerator Example/CPP/getenumerator.cpp#1)]
 [!code-csharp[System.Resources.ResourceReader.GetEnumerator Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Resources.ResourceReader.GetEnumerator Example/CS/getenumerator.cs#1)]
 [!code-vb[System.Resources.ResourceReader.GetEnumerator Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Resources.ResourceReader.GetEnumerator Example/VB/getenumerator.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResourceReader.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="resourceReader.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Resources.Reader</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Resources.ResourceManager</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c52fc-228">Zwalnia wszelkie zasoby używane przez bieżące wystąpienie klasy <see cref="T:System.Resources.ResourceReader" /> klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c52fc-228">Releases all resources used by the current instance of the <see cref="T:System.Resources.ResourceReader" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c52fc-229">Po zakończeniu korzystania z tego wystąpienia <xref:System.Resources.ResourceReader>, wywołaj <xref:System.Resources.ResourceReader.Dispose%2A> zwolnić wszystkie zasoby używane przez to wystąpienie.</span><span class="sxs-lookup"><span data-stu-id="c52fc-229">When you are finished using this instance of <xref:System.Resources.ResourceReader>, call <xref:System.Resources.ResourceReader.Dispose%2A> to release all resources used by this instance.</span></span> <span data-ttu-id="c52fc-230">Należy usunąć dalsze odwołania do tego <xref:System.Resources.ResourceReader> , aby moduł zbierający elementy bezużyteczne można odzyskać pamięci zamiast jego regularne aktywności dla finalizację wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="c52fc-230">You should eliminate further references to this <xref:System.Resources.ResourceReader> instance so that the garbage collector can reclaim the memory of the instance instead of keeping it alive for finalization.</span></span>  
  
 <span data-ttu-id="c52fc-231"><xref:System.Resources.ResourceReader.Dispose%2A> wywołuje metodę Dispose(Boolean) prywatnej, która zawiera kod, aby zwolnić zasoby zarządzane i niezarządzane.</span><span class="sxs-lookup"><span data-stu-id="c52fc-231"><xref:System.Resources.ResourceReader.Dispose%2A> calls the private Dispose(Boolean) method, which contains the code to release managed and unmanaged resources.</span></span> <span data-ttu-id="c52fc-232">Aby uzyskać więcej informacji, zobacz [implementacja metody Dispose](~/docs/standard/garbage-collection/implementing-dispose.md).</span><span class="sxs-lookup"><span data-stu-id="c52fc-232">For more information, see [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.IDictionaryEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IDictionaryEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResourceReader.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IDictionaryEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::IDictionaryEnumerator ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="abstract member GetEnumerator : unit -&gt; System.Collections.IDictionaryEnumerator&#xA;override this.GetEnumerator : unit -&gt; System.Collections.IDictionaryEnumerator" Usage="resourceReader.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Resources.IResourceReader.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Resources.Reader</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Resources.ResourceManager</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IDictionaryEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c52fc-233">Zwraca moduł wyliczający dla tego <see cref="T:System.Resources.ResourceReader" /> obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c52fc-233">Returns an enumerator for this <see cref="T:System.Resources.ResourceReader" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c52fc-234">Moduł wyliczający dla tego <see cref="T:System.Resources.ResourceReader" /> obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c52fc-234">An enumerator for this <see cref="T:System.Resources.ResourceReader" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c52fc-235">Zazwyczaj wyliczyć zasobów przez wywołanie metody <xref:System.Resources.ResourceReader.GetEnumerator%2A> — metoda i następnie wielokrotnie wywoływać metodę <xref:System.Collections.IEnumerator.MoveNext%2A> metody w zwróconym <xref:System.Collections.IDictionaryEnumerator> obiekt do momentu metoda zwraca `false`.</span><span class="sxs-lookup"><span data-stu-id="c52fc-235">Typically, you enumerate resources by calling the <xref:System.Resources.ResourceReader.GetEnumerator%2A> method and then repeatedly calling the <xref:System.Collections.IEnumerator.MoveNext%2A> method on the returned <xref:System.Collections.IDictionaryEnumerator> object until the method returns `false`.</span></span> <span data-ttu-id="c52fc-236">Nazwa zasobu jest dostępna z <xref:System.Collections.IDictionaryEnumerator.Key%2A?displayProperty=nameWithType> właściwości; jego wartość z <xref:System.Collections.IDictionaryEnumerator.Value%2A?displayProperty=nameWithType> właściwości.</span><span class="sxs-lookup"><span data-stu-id="c52fc-236">The resource name is available from the <xref:System.Collections.IDictionaryEnumerator.Key%2A?displayProperty=nameWithType> property; its value from the <xref:System.Collections.IDictionaryEnumerator.Value%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="c52fc-237">Wyliczyć zasobów w ten sposób, jak pokazano w przykładzie.</span><span class="sxs-lookup"><span data-stu-id="c52fc-237">The example illustrates how to enumerate resources in this way.</span></span>  
  
 <span data-ttu-id="c52fc-238">Implementacja <xref:System.Collections.IDictionaryEnumerator.Value%2A?displayProperty=nameWithType> właściwości przez <xref:System.Resources.ResourceReader> klasy może zgłosić następujące wyjątki:</span><span class="sxs-lookup"><span data-stu-id="c52fc-238">The implementation of the <xref:System.Collections.IDictionaryEnumerator.Value%2A?displayProperty=nameWithType> property by the <xref:System.Resources.ResourceReader> class can throw the following exceptions:</span></span>  
  
-   <xref:System.IO.FileNotFoundException>  
  
     <span data-ttu-id="c52fc-239">Nie można odnaleźć zestawu zawierającego typ, do którego należy dane.</span><span class="sxs-lookup"><span data-stu-id="c52fc-239">The assembly that contains the type to which the data belongs cannot be found.</span></span>  
  
-   <xref:System.FormatException>  
  
     <span data-ttu-id="c52fc-240">Dane nie jest w oczekiwanym formacie.</span><span class="sxs-lookup"><span data-stu-id="c52fc-240">The data is not in the expected format.</span></span>  
  
-   <xref:System.TypeLoadException>  
  
     <span data-ttu-id="c52fc-241">Nie można odnaleźć typu, do którego należy dane.</span><span class="sxs-lookup"><span data-stu-id="c52fc-241">The type to which the data belongs cannot be found.</span></span>  
  
 <span data-ttu-id="c52fc-242">Może obsłużyć wyjątek, wywołując <xref:System.Resources.ResourceReader.GetResourceData%2A> metody można pobrać informacji o typie danych i przypisane do zasobów o nazwie tablicy bajtów.</span><span class="sxs-lookup"><span data-stu-id="c52fc-242">You can handle the exception by calling the <xref:System.Resources.ResourceReader.GetResourceData%2A> method to retrieve information about the data type and the byte array assigned to the named resource.</span></span> <span data-ttu-id="c52fc-243">Aby uzyskać więcej informacji, zobacz sekcję "Pobieranie zasobów przez nazwę z GetResourceData" w <xref:System.Resources.ResourceReader> klasy tematu.</span><span class="sxs-lookup"><span data-stu-id="c52fc-243">For more information, see the "Retrieving Resources by Name with GetResourceData" section in the <xref:System.Resources.ResourceReader> class topic.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="c52fc-244"><xref:System.Resources.ResourceReader> Klasa zawiera dwie metody, które zwracają wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="c52fc-244">The <xref:System.Resources.ResourceReader> class includes two methods that return enumerators.</span></span> <span data-ttu-id="c52fc-245"><xref:System.Resources.ResourceReader.GetEnumerator%2A> Metoda zwraca <xref:System.Collections.IDictionaryEnumerator> interfejsu obiektu i jest zalecana metoda do wywołania, gdy wyliczania zasobów.</span><span class="sxs-lookup"><span data-stu-id="c52fc-245">The <xref:System.Resources.ResourceReader.GetEnumerator%2A> method returns an <xref:System.Collections.IDictionaryEnumerator> interface object and is the recommended method to call when enumerating resources.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c52fc-246">W przykładzie w tej sekcji użyto następującego pliku txt, o nazwie `PatientForm.txt` do definiowania zasoby używane przez aplikację.</span><span class="sxs-lookup"><span data-stu-id="c52fc-246">The example in this section uses the following .txt file named `PatientForm.txt` to define the resources used by an application.</span></span>  
  
```  
  
Title="Top Pet Animal Clinic"  
Label1="Patient Number:"  
Label2="Pet Name:"  
Label3="Species:"  
Label4="Breed:"  
Label5="Date of Birth:"  
Label6="Age:"  
Label7="Owner:"  
Label8="Address:"  
Label9="Home Phone:"  
Label10="Work Phone:"  
Label11="Mobile Phone:"  
  
```  
  
 <span data-ttu-id="c52fc-247">Plik .txt można kompilować w pliku .resources, wydając polecenie:</span><span class="sxs-lookup"><span data-stu-id="c52fc-247">You can compile the .txt file into a .resources file by issuing the following command:</span></span>  
  
 <span data-ttu-id="c52fc-248">**PatientForm.txt ResGen**</span><span class="sxs-lookup"><span data-stu-id="c52fc-248">**resgen PatientForm.txt**</span></span>  
  
 <span data-ttu-id="c52fc-249">Poniższy przykład wylicza zasobów w `PatientForm.resources` i wyświetla nazwę i wartość każdego z nich.</span><span class="sxs-lookup"><span data-stu-id="c52fc-249">The following example enumerates the resources in `PatientForm.resources` and displays the name and value of each.</span></span>  
  
 [!code-csharp[System.Resources.ResourceReader.Ctor#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.resources.resourcereader.ctor/cs/stream2.cs#2)]
 [!code-vb[System.Resources.ResourceReader.Ctor#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.resources.resourcereader.ctor/vb/stream2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="c52fc-250">Czytnik został zamknięty lub usunięty i jest niedostępny.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c52fc-250">The reader has been closed or disposed, and cannot be accessed.</span>
          </span>
        </exception>
        <altmember cref="T:System.Collections.IDictionary" />
        <altmember cref="T:System.Collections.IDictionaryEnumerator" />
      </Docs>
    </Member>
    <Member MemberName="GetResourceData">
      <MemberSignature Language="C#" Value="public void GetResourceData (string resourceName, out string resourceType, out byte[] resourceData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void GetResourceData(string resourceName, [out] string&amp; resourceType, [out] unsigned int8[]&amp; resourceData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResourceReader.GetResourceData(System.String,System.String@,System.Byte[]@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GetResourceData (resourceName As String, ByRef resourceType As String, ByRef resourceData As Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GetResourceData(System::String ^ resourceName, [Runtime::InteropServices::Out] System::String ^ % resourceType, [Runtime::InteropServices::Out] cli::array &lt;System::Byte&gt; ^ % resourceData);" />
      <MemberSignature Language="F#" Value="member this.GetResourceData : string *  *  -&gt; unit" Usage="resourceReader.GetResourceData (resourceName, resourceType, resourceData)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Resources.ResourceManager</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceName" Type="System.String" />
        <Parameter Name="resourceType" Type="System.String&amp;" RefType="out" />
        <Parameter Name="resourceData" Type="System.Byte[]&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="resourceName">
          <span data-ttu-id="c52fc-251">Nazwa zasobu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c52fc-251">The name of a resource.</span>
          </span>
        </param>
        <param name="resourceType">
          <span data-ttu-id="c52fc-252">Po powrocie z tej metody zawiera ciąg reprezentujący nazwę typu zasobu pobrane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c52fc-252">When this method returns, contains a string that represents the type name of the retrieved resource.</span>
          </span>
          <span data-ttu-id="c52fc-253">Ten parametr jest przekazywany niezainicjowany.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c52fc-253">This parameter is passed uninitialized.</span>
          </span>
        </param>
        <param name="resourceData">
          <span data-ttu-id="c52fc-254">Po powrocie z tej metody zawiera tablicę bajtów, który jest binarna reprezentacja typu pobrane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c52fc-254">When this method returns, contains a byte array that is the binary representation of the retrieved type.</span>
          </span>
          <span data-ttu-id="c52fc-255">Ten parametr jest przekazywany niezainicjowany.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c52fc-255">This parameter is passed uninitialized.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c52fc-256">Pobiera nazwę typu i dane zasobów o nazwie z zasobów Otwieranie pliku lub strumienia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c52fc-256">Retrieves the type name and data of a named resource from an open resource file or stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c52fc-257"><xref:System.Resources.ResourceReader.GetResourceData%2A> Metoda pobiera wartość nazwanego zasobu w postaci tablicy bajtów.</span><span class="sxs-lookup"><span data-stu-id="c52fc-257">The <xref:System.Resources.ResourceReader.GetResourceData%2A> method retrieves the value of a named resource as a byte array.</span></span> <span data-ttu-id="c52fc-258">Zwykle jest używana, gdy <xref:System.Collections.IDictionaryEnumerator.Value%2A> właściwości zgłasza wyjątek podczas próby pobrania wartości zasobu.</span><span class="sxs-lookup"><span data-stu-id="c52fc-258">It is typically used when the <xref:System.Collections.IDictionaryEnumerator.Value%2A> property throws an exception when it tries to retrieve the value of a resource.</span></span>  
  
 <span data-ttu-id="c52fc-259">`resourceType` jest ciągiem, który reprezentuje typ danych zasobu.</span><span class="sxs-lookup"><span data-stu-id="c52fc-259">`resourceType` is a string that represents the data type of the resource.</span></span> <span data-ttu-id="c52fc-260">Może być jedną z następujących wartości:</span><span class="sxs-lookup"><span data-stu-id="c52fc-260">It can be any of the following values:</span></span>  
  
-   <span data-ttu-id="c52fc-261">Reprezentacja ciągu `ResourceTypeCode` element członkowski wyliczenia wskazująca typ danych zasobu.</span><span class="sxs-lookup"><span data-stu-id="c52fc-261">The string representation of a `ResourceTypeCode` enumeration member that indicates the data type of the resource.</span></span> <span data-ttu-id="c52fc-262">`ResourceTypeCode` to wyliczenie prywatne, który jest używany przez aby wskazać, że specjalne format binarny jest używany do przechowywania jedną 19 typowe typów danych.</span><span class="sxs-lookup"><span data-stu-id="c52fc-262">`ResourceTypeCode` is a private enumeration that is used by .to indicate that a special binary format is used to store one of 19 common data types.</span></span> <span data-ttu-id="c52fc-263">Obejmują one typy pierwotne danych .NET Framework (<xref:System.Boolean>, <xref:System.Byte>, <xref:System.Char>, <xref:System.Decimal>, <xref:System.Double>, <xref:System.Int16>, <xref:System.Int32>, <xref:System.Int64>, <xref:System.Single>, <xref:System.SByte>, <xref:System.UInt16>, <xref:System.UInt32>, <xref:System.UInt64>), a także <xref:System.String>, <xref:System.DateTime>, i <xref:System.TimeSpan>, ponadto `ResourceTypeCode` wyliczenie zawiera wartości podanych w poniższej tabeli.</span><span class="sxs-lookup"><span data-stu-id="c52fc-263">These include the .NET Framework primitive data types (<xref:System.Boolean>, <xref:System.Byte>, <xref:System.Char>, <xref:System.Decimal>, <xref:System.Double>, <xref:System.Int16>, <xref:System.Int32>, <xref:System.Int64>, <xref:System.Single>, <xref:System.SByte>, <xref:System.UInt16>, <xref:System.UInt32>, <xref:System.UInt64>), as well as <xref:System.String>, <xref:System.DateTime>, and <xref:System.TimeSpan>, In addition, the `ResourceTypeCode` enumeration includes the values shown in the following table.</span></span>  
  
    |<span data-ttu-id="c52fc-264">Wartość ResourceTypeCode</span><span class="sxs-lookup"><span data-stu-id="c52fc-264">ResourceTypeCode value</span></span>|<span data-ttu-id="c52fc-265">Opis</span><span class="sxs-lookup"><span data-stu-id="c52fc-265">Description</span></span>|  
    |----------------------------|-----------------|  
    |`ResourceTypeCode.ByteArray`|<span data-ttu-id="c52fc-266">Dane są tablicy bajtów.</span><span class="sxs-lookup"><span data-stu-id="c52fc-266">The data is a byte array.</span></span> <span data-ttu-id="c52fc-267">Typ danych to powszechnie wyników z wywołania <xref:System.Resources.ResourceWriter.AddResource%28System.String%2CSystem.Byte%5B%5D%29?displayProperty=nameWithType> metody.</span><span class="sxs-lookup"><span data-stu-id="c52fc-267">This data type commonly results from the call to the <xref:System.Resources.ResourceWriter.AddResource%28System.String%2CSystem.Byte%5B%5D%29?displayProperty=nameWithType> method.</span></span>|  
    |`ResourceTypeCode.Null`|<span data-ttu-id="c52fc-268">Dane to odwołanie o wartości null.</span><span class="sxs-lookup"><span data-stu-id="c52fc-268">The data is a null reference.</span></span> <span data-ttu-id="c52fc-269">Typ danych to powszechnie wyników z wywołania <xref:System.Resources.ResourceWriter.AddResource%28System.String%2CSystem.Object%29?displayProperty=nameWithType> metody z obiektem, którego wartość jest `null`.</span><span class="sxs-lookup"><span data-stu-id="c52fc-269">This data type commonly results from the call to the <xref:System.Resources.ResourceWriter.AddResource%28System.String%2CSystem.Object%29?displayProperty=nameWithType> method with an object whose value is `null`.</span></span>|  
    |`ResourceTypeCode.Stream`|<span data-ttu-id="c52fc-270">Dane są przechowywane w strumieniu.</span><span class="sxs-lookup"><span data-stu-id="c52fc-270">The data is stored in a stream.</span></span> <span data-ttu-id="c52fc-271">Typ danych to powszechnie wyników z wywołania <xref:System.Resources.ResourceWriter.AddResource%28System.String%2CSystem.IO.Stream%29?displayProperty=nameWithType> lub <xref:System.Resources.ResourceWriter.AddResource%28System.String%2CSystem.IO.Stream%2CSystem.Boolean%29?displayProperty=nameWithType> metody.</span><span class="sxs-lookup"><span data-stu-id="c52fc-271">This data type commonly results from the call to the <xref:System.Resources.ResourceWriter.AddResource%28System.String%2CSystem.IO.Stream%29?displayProperty=nameWithType> or <xref:System.Resources.ResourceWriter.AddResource%28System.String%2CSystem.IO.Stream%2CSystem.Boolean%29?displayProperty=nameWithType> method.</span></span>|  
  
     <span data-ttu-id="c52fc-272">Przy założeniu, że `resourceData` nie został uszkodzony, jego zwykle można przekonwertować z tablicy bajtów do oryginalnej wartości przez wywołanie metody <xref:System.BitConverter> lub <xref:System.IO.BinaryReader> metody.</span><span class="sxs-lookup"><span data-stu-id="c52fc-272">Assuming that `resourceData` has not been corrupted, it can usually be converted from a byte array back to its original value by calling a <xref:System.BitConverter> or <xref:System.IO.BinaryReader> method.</span></span>  
  
-   <span data-ttu-id="c52fc-273">Ciąg, który zawiera w pełni kwalifikowaną nazwę typu, których dane serializowane jest przypisany do `resourceData` argumentu (na przykład `System.String`).</span><span class="sxs-lookup"><span data-stu-id="c52fc-273">A string that contains the fully qualified name of the type whose serialized data is assigned to the `resourceData` argument (for example, `System.String`).</span></span> <span data-ttu-id="c52fc-274">Ponadto dla typów, które nie są częścią bibliotece klas programu .NET Framework, ciąg zawiera nazwę, wersję, kulturę i klucz publiczny zestawu zawierającego typ.</span><span class="sxs-lookup"><span data-stu-id="c52fc-274">In addition, for types that are not part of the .NET Framework class library, the string includes the name, version, culture, and public key of the assembly that contains the type.</span></span> <span data-ttu-id="c52fc-275">Na przykład następujący ciąg znaków oznacza, że dane serializowane reprezentuje wystąpienie `Person` wpisz `Extensions` przestrzeni nazw, w wersji 1.0 zestawu o nazwie narzędzie, które ma żadnego klucza publicznego i nie wyznaczonego kultury.</span><span class="sxs-lookup"><span data-stu-id="c52fc-275">For example, the following string indicates that the serialized data represents an instance of the `Person` type in the `Extensions` namespace, which is found in version 1.0 of an assembly named Utility that has no public key and no designated culture.</span></span>  
  
     `Extensions.Person, Utility, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null`  
  
     <span data-ttu-id="c52fc-276">Przy założeniu, że `resourceData` nie został uszkodzony i że typ źródłowy jest dostępny, `resourceData` można przekonwertować z tablicy bajtów do oryginalnej wartości konwertując tablica bajtów do <xref:System.IO.Stream> obiekt i przekazywania strumienia do <xref:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter.Deserialize%2A?displayProperty=nameWithType>metody.</span><span class="sxs-lookup"><span data-stu-id="c52fc-276">Assuming that `resourceData` has not been corrupted and that the source type is available, `resourceData` can be converted from a byte array back to its original value by converting the byte array to a <xref:System.IO.Stream> object and passing the stream to the <xref:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter.Deserialize%2A?displayProperty=nameWithType> method.</span></span>  
  
-   <span data-ttu-id="c52fc-277">Ciąg używany do opisu typu danych w <xref:System.Resources.ResourceWriter.AddResourceData%2A?displayProperty=nameWithType> wywołania metody.</span><span class="sxs-lookup"><span data-stu-id="c52fc-277">The string used to describe the data type in the <xref:System.Resources.ResourceWriter.AddResourceData%2A?displayProperty=nameWithType> method call.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c52fc-278">
            <paramref name="resourceName" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c52fc-278">
              <paramref name="resourceName" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="c52fc-279">
            <paramref name="resourceName" /> nie istnieje.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c52fc-279">
              <paramref name="resourceName" /> does not exist.</span>
          </span>
        </exception>
        <exception cref="T:System.BadImageFormatException">
          <span data-ttu-id="c52fc-280">
            <paramref name="resourceName" /> Typ jest nieprawidłowy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c52fc-280">
              <paramref name="resourceName" /> has an invalid type.</span>
          </span>
        </exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="c52fc-281">Dane pobrane zasobów jest uszkodzony.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c52fc-281">The retrieved resource data is corrupt.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="c52fc-282">Bieżący <see cref="T:System.Resources.ResourceReader" /> obiekt nie został zainicjowany, prawdopodobnie ponieważ jest ono zamknięte.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c52fc-282">The current <see cref="T:System.Resources.ResourceReader" /> object is not initialized, probably because it is closed.</span>
          </span>
        </exception>
        <altmember cref="M:System.Resources.ResourceWriter.AddResourceData(System.String,System.String,System.Byte[])" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResourceReader.System#Collections#IEnumerable#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IEnumerator ^ System.Collections.IEnumerable.GetEnumerator() = System::Collections::IEnumerable::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Resources.ResourceManager</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c52fc-283">Zwraca moduł wyliczający dla tego <see cref="T:System.Resources.ResourceReader" /> obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c52fc-283">Returns an enumerator for this <see cref="T:System.Resources.ResourceReader" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c52fc-284">Moduł wyliczający dla tego <see cref="T:System.Resources.ResourceReader" /> obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c52fc-284">An enumerator for this <see cref="T:System.Resources.ResourceReader" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c52fc-285"><xref:System.Resources.ResourceReader.System%23Collections%23IEnumerable%23GetEnumerator%2A?displayProperty=nameWithType> jest jawnej implementacji interfejsu.</span><span class="sxs-lookup"><span data-stu-id="c52fc-285"><xref:System.Resources.ResourceReader.System%23Collections%23IEnumerable%23GetEnumerator%2A?displayProperty=nameWithType> is an explicit interface implementation.</span></span> <span data-ttu-id="c52fc-286">Można go używać tylko wtedy, gdy <xref:System.Resources.ResourceReader> wystąpienia jest rzutowane na <xref:System.Collections.IEnumerable> interfejsu.</span><span class="sxs-lookup"><span data-stu-id="c52fc-286">It can be used only when the <xref:System.Resources.ResourceReader> instance is cast to an <xref:System.Collections.IEnumerable> interface.</span></span> <span data-ttu-id="c52fc-287">Zalecane podejście do wyliczania zasobów w pliku .resources jest wywołanie <xref:System.Collections.IEnumerator.MoveNext%2A> metody <xref:System.Collections.IDictionaryEnumerator> obiektu zwróconego przez <xref:System.Resources.ResourceReader.GetEnumerator%2A?displayProperty=nameWithType> metody.</span><span class="sxs-lookup"><span data-stu-id="c52fc-287">The recommended approach to enumerating the resources in a .resources file is to call the <xref:System.Collections.IEnumerator.MoveNext%2A> method of the <xref:System.Collections.IDictionaryEnumerator> object returned by the <xref:System.Resources.ResourceReader.GetEnumerator%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="c52fc-288">Czytnik został już zamknięty i nie są dostępne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c52fc-288">The reader has already been closed and cannot be accessed.</span>
          </span>
        </exception>
        <altmember cref="T:System.Collections.IDictionary" />
        <altmember cref="T:System.Collections.IDictionaryEnumerator" />
      </Docs>
    </Member>
  </Members>
</Type>