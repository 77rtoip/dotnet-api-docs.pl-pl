<Type Name="ResourceReader" FullName="System.Resources.ResourceReader">
  <Metadata><Meta Name="ms.openlocfilehash" Value="cc2329cf6988186b9da27d48b6c8d95189893181" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69275949" /></Metadata><TypeSignature Language="C#" Value="public sealed class ResourceReader : System.Resources.IResourceReader" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ResourceReader extends System.Object implements class System.Collections.IEnumerable, class System.IDisposable, class System.Resources.IResourceReader" />
  <TypeSignature Language="DocId" Value="T:System.Resources.ResourceReader" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ResourceReader&#xA;Implements IResourceReader" />
  <TypeSignature Language="C++ CLI" Value="public ref class ResourceReader sealed : System::Resources::IResourceReader" />
  <TypeSignature Language="F#" Value="type ResourceReader = class&#xA;    interface IResourceReader&#xA;    interface IEnumerable&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Resources.Reader</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Resources.ResourceManager</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Resources.IResourceReader</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="744c7-101">Wylicza zasoby w pliku zasobów binarnych (. resources) przez odczyt sekwencyjnych par nazwa zasobu/wartość.</span><span class="sxs-lookup"><span data-stu-id="744c7-101">Enumerates the resources in a binary resources (.resources) file by reading sequential resource name/value pairs.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  

[!INCLUDE [untrusted-data-class-note](~/includes/untrusted-data-class-note.md)]

 <span data-ttu-id="744c7-102">Klasa zapewnia standardową implementację <xref:System.Resources.IResourceReader>interfejsu. <xref:System.Resources.ResourceReader></span><span class="sxs-lookup"><span data-stu-id="744c7-102">The <xref:System.Resources.ResourceReader> class provides a standard implementation of the <xref:System.Resources.IResourceReader> interface.</span></span> <span data-ttu-id="744c7-103"><xref:System.Resources.ResourceReader> Wystąpienie reprezentuje autonomiczny plik resources lub plik resources, który jest osadzony w zestawie.</span><span class="sxs-lookup"><span data-stu-id="744c7-103">A <xref:System.Resources.ResourceReader> instance represents either a standalone .resources file or a .resources file that is embedded in an assembly.</span></span> <span data-ttu-id="744c7-104">Służy do wyliczania zasobów w pliku Resources i pobierania ich par nazwa/wartość.</span><span class="sxs-lookup"><span data-stu-id="744c7-104">It is used to enumerate the resources in a .resources file and retrieve its name/value pairs.</span></span> <span data-ttu-id="744c7-105">Różni się od <xref:System.Resources.ResourceManager> klasy, która jest używana do pobierania określonych nazwanych zasobów z pliku Resources, który jest osadzony w zestawie.</span><span class="sxs-lookup"><span data-stu-id="744c7-105">It differs from the <xref:System.Resources.ResourceManager> class, which is used to retrieve specified named resources from a .resources file that is embedded in an assembly.</span></span> <span data-ttu-id="744c7-106">Klasa jest używana do pobierania zasobów, których nazwy są znane z wyprzedzeniem, <xref:System.Resources.ResourceReader> natomiast Klasa jest przydatna do pobierania zasobów, których liczba lub precyzyjne nazwy nie są znane w czasie kompilacji. <xref:System.Resources.ResourceManager></span><span class="sxs-lookup"><span data-stu-id="744c7-106">The <xref:System.Resources.ResourceManager> class is used to retrieve resources whose names are known in advance, whereas the <xref:System.Resources.ResourceReader> class is useful for retrieving resources whose number or precise names are not known at compile time.</span></span> <span data-ttu-id="744c7-107">Na przykład aplikacja może używać pliku zasobów do przechowywania informacji o konfiguracji, które są zorganizowane w sekcje i elementy w sekcji, gdzie liczba sekcji lub elementów w sekcji nie jest znana z góry.</span><span class="sxs-lookup"><span data-stu-id="744c7-107">For example, an application may use a resources file to store configuration information that is organized into sections and items in a section, where the number of sections or items in a section is not known in advance.</span></span> <span data-ttu-id="744c7-108">Zasoby mogą następnie być nazwane `Section1`ogólnie (takie jak `Section1Item1` `Section1Item2`,,, itd.) i pobierane przy użyciu <xref:System.Resources.ResourceReader> obiektu.</span><span class="sxs-lookup"><span data-stu-id="744c7-108">Resources can then be named generically (such as `Section1`, `Section1Item1`, `Section1Item2`, and so on) and retrieved by using a <xref:System.Resources.ResourceReader> object.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="744c7-109">Ten typ implementuje <xref:System.IDisposable> interfejs.</span><span class="sxs-lookup"><span data-stu-id="744c7-109">This type implements the <xref:System.IDisposable> interface.</span></span> <span data-ttu-id="744c7-110">Po zakończeniu korzystania z typu należy usunąć jego wartość bezpośrednio lub pośrednio.</span><span class="sxs-lookup"><span data-stu-id="744c7-110">When you have finished using the type, you should dispose of it either directly or indirectly.</span></span> <span data-ttu-id="744c7-111">Aby usunąć typ bezpośrednio <xref:System.IDisposable.Dispose%2A> , wywołaj jego metodę `try` / `catch` w bloku.</span><span class="sxs-lookup"><span data-stu-id="744c7-111">To dispose of the type directly, call its <xref:System.IDisposable.Dispose%2A> method in a `try`/`catch` block.</span></span> <span data-ttu-id="744c7-112">Aby usunąć go pośrednio, użyj konstrukcji języka, takiej jak `using` (in C#) lub `Using` (w Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="744c7-112">To dispose of it indirectly, use a language construct such as `using` (in C#) or `Using` (in Visual Basic).</span></span> <span data-ttu-id="744c7-113">Aby uzyskać więcej informacji, zobacz sekcję "Używanie obiektu implementującego <xref:System.IDisposable> interfejs IDisposable" w temacie dotyczącym interfejsu.</span><span class="sxs-lookup"><span data-stu-id="744c7-113">For more information, see the "Using an Object that Implements IDisposable" section in the <xref:System.IDisposable> interface topic.</span></span>  
  
 <span data-ttu-id="744c7-114">Aby uzyskać więcej informacji o korzystaniu z <xref:System.Resources.ResourceReader> klasy, zobacz następujące sekcje:</span><span class="sxs-lookup"><span data-stu-id="744c7-114">For more information about using the <xref:System.Resources.ResourceReader> class, see the following sections:</span></span>  
  
-   [<span data-ttu-id="744c7-115">Tworzenie wystąpienia obiektu ResourceReader</span><span class="sxs-lookup"><span data-stu-id="744c7-115">Instantiating a ResourceReader object</span></span>](#instantiate)  
  
-   [<span data-ttu-id="744c7-116">Wyliczanie zasobów obiektu ResourceReader</span><span class="sxs-lookup"><span data-stu-id="744c7-116">Enumerating a ResourceReader object's resources</span></span>](#enumerate)  
  
    -   [<span data-ttu-id="744c7-117">Pobieranie zasobów przy użyciu właściwości IDictionaryEnumerator</span><span class="sxs-lookup"><span data-stu-id="744c7-117">Retrieving resources by using IDictionaryEnumerator properties</span></span>](#idictionaryenumerator)  
  
    -   [<span data-ttu-id="744c7-118">Pobieranie zasobów według nazwy z GetResourceData</span><span class="sxs-lookup"><span data-stu-id="744c7-118">Retrieving resources by name with GetResourceData</span></span>](#getresourcedata)  
  
<a name="instantiate"></a>   
## <a name="instantiating-a-resourcereader-object"></a><span data-ttu-id="744c7-119">Utworzenie wystąpienia obiektu ResourceReader</span><span class="sxs-lookup"><span data-stu-id="744c7-119">Instantiating a ResourceReader Object</span></span>  
 <span data-ttu-id="744c7-120">Plik resources to plik binarny, który został skompilowany z pliku tekstowego lub pliku XML. resx przez [Resgen. exe (Generator plików zasobów)](~/docs/framework/tools/resgen-exe-resource-file-generator.md).</span><span class="sxs-lookup"><span data-stu-id="744c7-120">A .resources file is a binary file that has been compiled from either a text file or an XML .resx file by [Resgen.exe (Resource File Generator)](~/docs/framework/tools/resgen-exe-resource-file-generator.md).</span></span> <span data-ttu-id="744c7-121"><xref:System.Resources.ResourceReader> Obiekt może reprezentować autonomiczny plik resources lub plik resources, który został osadzony w zestawie.</span><span class="sxs-lookup"><span data-stu-id="744c7-121">A <xref:System.Resources.ResourceReader> object can represent either a standalone .resources file or a .resources file that has been embedded in an assembly.</span></span>  
  
 <span data-ttu-id="744c7-122">Aby utworzyć wystąpienie <xref:System.Resources.ResourceReader> obiektu, który odczytuje z autonomicznego pliku Resources, <xref:System.Resources.ResourceReader> Użyj konstruktora klasy ze strumieniem wejściowym lub ciągiem zawierającym nazwę pliku Resources.</span><span class="sxs-lookup"><span data-stu-id="744c7-122">To instantiate a <xref:System.Resources.ResourceReader> object that reads from a standalone .resources file, use the <xref:System.Resources.ResourceReader> class constructor with either an input stream or a string that contains the .resources file name.</span></span> <span data-ttu-id="744c7-123">Poniższy przykład ilustruje oba podejścia.</span><span class="sxs-lookup"><span data-stu-id="744c7-123">The following example illustrates both approaches.</span></span> <span data-ttu-id="744c7-124">Pierwsze tworzy wystąpienie <xref:System.Resources.ResourceReader> obiektu, który reprezentuje plik resources o nazwie `Resources1.resources` przy użyciu jego nazwy pliku.</span><span class="sxs-lookup"><span data-stu-id="744c7-124">The first instantiates a <xref:System.Resources.ResourceReader> object that represents a .resources file named `Resources1.resources` by using its file name.</span></span> <span data-ttu-id="744c7-125">Drugi tworzy wystąpienie <xref:System.Resources.ResourceReader> obiektu, który reprezentuje plik resources o nazwie `Resources2.resources` przy użyciu strumienia utworzonego na podstawie pliku.</span><span class="sxs-lookup"><span data-stu-id="744c7-125">The second instantiates a <xref:System.Resources.ResourceReader> object that represents a .resources file named `Resources2.resources` by using a stream created from the file.</span></span>  
  
 [!code-csharp[System.Resources.ResourceReader.Class#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.resources.resourcereader.class/cs/ctor1.cs#2)]
 [!code-vb[System.Resources.ResourceReader.Class#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.resources.resourcereader.class/vb/ctor1.vb#2)]  
  
 <span data-ttu-id="744c7-126">Aby utworzyć <xref:System.Resources.ResourceReader> obiekt, który reprezentuje osadzony plik resources, Utwórz <xref:System.Reflection.Assembly> wystąpienie obiektu z zestawu, w którym jest osadzony plik resources.</span><span class="sxs-lookup"><span data-stu-id="744c7-126">To create a <xref:System.Resources.ResourceReader> object that represents an embedded .resources file, instantiate an <xref:System.Reflection.Assembly> object from the assembly in which the .resources file is embedded.</span></span> <span data-ttu-id="744c7-127">Jego <xref:System.Reflection.Assembly.GetManifestResourceStream%2A?displayProperty=nameWithType> Metoda <xref:System.Resources.ResourceReader.%23ctor%28System.IO.Stream%29> zwraca obiekt, który może zostać przesłany do konstruktora. <xref:System.IO.Stream></span><span class="sxs-lookup"><span data-stu-id="744c7-127">Its <xref:System.Reflection.Assembly.GetManifestResourceStream%2A?displayProperty=nameWithType> method returns a <xref:System.IO.Stream> object that can be passed to the <xref:System.Resources.ResourceReader.%23ctor%28System.IO.Stream%29> constructor.</span></span> <span data-ttu-id="744c7-128">Poniższy przykład tworzy wystąpienie <xref:System.Resources.ResourceReader> obiektu, który reprezentuje osadzony plik resources.</span><span class="sxs-lookup"><span data-stu-id="744c7-128">The following example instantiates a <xref:System.Resources.ResourceReader> object that represents an embedded .resources file.</span></span>  
  
 [!code-csharp[System.Resources.ResourceReader.Class#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.resources.resourcereader.class/cs/ctor1.cs#3)]
 [!code-vb[System.Resources.ResourceReader.Class#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.resources.resourcereader.class/vb/ctor1.vb#3)]  
  
<a name="enumerate"></a>   
## <a name="enumerating-a-resourcereader-objects-resources"></a><span data-ttu-id="744c7-129">Wyliczanie zasobów obiektu ResourceReader</span><span class="sxs-lookup"><span data-stu-id="744c7-129">Enumerating a ResourceReader Object's Resources</span></span>  
 <span data-ttu-id="744c7-130">Aby wyliczyć zasoby w pliku Resources, należy wywołać <xref:System.Resources.ResourceReader.GetEnumerator%2A> metodę, która <xref:System.Collections.IDictionaryEnumerator?displayProperty=nameWithType> zwraca obiekt.</span><span class="sxs-lookup"><span data-stu-id="744c7-130">To enumerate the resources in a .resources file, you call the <xref:System.Resources.ResourceReader.GetEnumerator%2A> method, which returns an <xref:System.Collections.IDictionaryEnumerator?displayProperty=nameWithType> object.</span></span> <span data-ttu-id="744c7-131">Należy wywołać metodę `IDictionaryEnumerator.MoveNext` , aby przejść z jednego zasobu do następnego.</span><span class="sxs-lookup"><span data-stu-id="744c7-131">You call the `IDictionaryEnumerator.MoveNext` method to move from one resource to the next.</span></span> <span data-ttu-id="744c7-132">Metoda zwraca wartość `false` , gdy wszystkie zasoby w pliku Resources zostały wyliczone.</span><span class="sxs-lookup"><span data-stu-id="744c7-132">The method returns `false` when all the resources in the .resources file have been enumerated.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="744c7-133"><xref:System.Collections.IEnumerable.GetEnumerator%2A?displayProperty=nameWithType> Chociaż Klasa implementuje interfejs i metodę, Metodaniezapewniaimplementacji.<xref:System.Collections.IEnumerable.GetEnumerator%2A?displayProperty=nameWithType> <xref:System.Resources.ResourceReader.GetEnumerator%2A?displayProperty=nameWithType> <xref:System.Collections.IEnumerable> <xref:System.Resources.ResourceReader></span><span class="sxs-lookup"><span data-stu-id="744c7-133">Although the <xref:System.Resources.ResourceReader> class implements the <xref:System.Collections.IEnumerable> interface and the <xref:System.Collections.IEnumerable.GetEnumerator%2A?displayProperty=nameWithType> method, the <xref:System.Resources.ResourceReader.GetEnumerator%2A?displayProperty=nameWithType> method does not provide the <xref:System.Collections.IEnumerable.GetEnumerator%2A?displayProperty=nameWithType> implementation.</span></span> <span data-ttu-id="744c7-134">Zamiast tego <xref:System.Collections.IDictionaryEnumerator> Metoda zwraca obiekt interfejsu, który zapewnia dostęp do pary nazwa/wartość każdego zasobu. <xref:System.Resources.ResourceReader.GetEnumerator%2A?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="744c7-134">Instead, the <xref:System.Resources.ResourceReader.GetEnumerator%2A?displayProperty=nameWithType> method  returns an <xref:System.Collections.IDictionaryEnumerator> interface object that provides access to each resource's name/value pair.</span></span>  
  
 <span data-ttu-id="744c7-135">Poszczególne zasoby można pobrać na dwa sposoby:</span><span class="sxs-lookup"><span data-stu-id="744c7-135">You can retrieve the individual resources in the collection in two ways:</span></span>  
  
-   <span data-ttu-id="744c7-136">Można powtórzyć każdy zasób w <xref:System.Collections.IDictionaryEnumerator?displayProperty=nameWithType> kolekcji i użyć <xref:System.Collections.IDictionaryEnumerator?displayProperty=nameWithType> właściwości do pobrania nazwy i wartości zasobu.</span><span class="sxs-lookup"><span data-stu-id="744c7-136">You can iterate each resource in the <xref:System.Collections.IDictionaryEnumerator?displayProperty=nameWithType> collection and use <xref:System.Collections.IDictionaryEnumerator?displayProperty=nameWithType> properties to retrieve the resource name and value.</span></span> <span data-ttu-id="744c7-137">Zalecamy tę technikę, gdy wszystkie zasoby są tego samego typu lub wiesz, jaki typ danych każdego z zasobów.</span><span class="sxs-lookup"><span data-stu-id="744c7-137">We recommend this technique when all the resources are of the same type, or you know the data type of each resource.</span></span>  
  
-   <span data-ttu-id="744c7-138">Podczas iteracji <xref:System.Collections.IDictionaryEnumerator?displayProperty=nameWithType> kolekcji można pobrać nazwy poszczególnych zasobów i <xref:System.Resources.ResourceReader.GetResourceData%2A> wywołać metodę, aby pobrać dane zasobu.</span><span class="sxs-lookup"><span data-stu-id="744c7-138">You can retrieve the name of each resource when you iterate the <xref:System.Collections.IDictionaryEnumerator?displayProperty=nameWithType> collection and call the <xref:System.Resources.ResourceReader.GetResourceData%2A> method to retrieve the resource's data.</span></span> <span data-ttu-id="744c7-139">Zalecamy to podejście, jeśli nie znasz typu danych poszczególnych zasobów lub jeśli poprzednie podejście zgłasza wyjątki.</span><span class="sxs-lookup"><span data-stu-id="744c7-139">We recommend this approach when you do not know the data type of each resource or if the previous approach throws exceptions.</span></span>  
  
<a name="idictionaryenumerator"></a>   
### <a name="retrieving-resources-by-using-idictionaryenumerator-properties"></a><span data-ttu-id="744c7-140">Pobieranie zasobów za pomocą właściwości IDictionaryEnumerator</span><span class="sxs-lookup"><span data-stu-id="744c7-140">Retrieving Resources by Using IDictionaryEnumerator Properties</span></span>  
 <span data-ttu-id="744c7-141">Pierwsza metoda wyliczania zasobów w pliku Resources polega bezpośrednio na pobieraniu pary nazwa/wartość każdego zasobu.</span><span class="sxs-lookup"><span data-stu-id="744c7-141">The first method of enumerating the resources in a .resources file involves directly retrieving each resource's name/value pair.</span></span> <span data-ttu-id="744c7-142">Po wywołaniu `IDictionaryEnumerator.MoveNext` metody w celu przejścia do każdego zasobu w kolekcji można pobrać nazwę zasobu <xref:System.Collections.IDictionaryEnumerator.Key%2A?displayProperty=nameWithType> z właściwości i danych zasobu z <xref:System.Collections.IDictionaryEnumerator.Value%2A?displayProperty=nameWithType> właściwości.</span><span class="sxs-lookup"><span data-stu-id="744c7-142">After you call the `IDictionaryEnumerator.MoveNext` method to move to each resource in the collection, you can retrieve the resource name from the <xref:System.Collections.IDictionaryEnumerator.Key%2A?displayProperty=nameWithType> property and the resource data from the <xref:System.Collections.IDictionaryEnumerator.Value%2A?displayProperty=nameWithType> property.</span></span>  
  
 <span data-ttu-id="744c7-143">Poniższy przykład pokazuje, jak pobrać nazwę i wartość każdego zasobu w pliku Resources przy użyciu <xref:System.Collections.IDictionaryEnumerator.Key%2A?displayProperty=nameWithType> właściwości i. <xref:System.Collections.IDictionaryEnumerator.Value%2A?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="744c7-143">The following example shows how to retrieve the name and value of each resource in a .resources file by using the <xref:System.Collections.IDictionaryEnumerator.Key%2A?displayProperty=nameWithType> and <xref:System.Collections.IDictionaryEnumerator.Value%2A?displayProperty=nameWithType> properties.</span></span> <span data-ttu-id="744c7-144">Aby uruchomić ten przykład, Utwórz następujący plik tekstowy o nazwie ApplicationResources. txt, aby zdefiniować zasoby ciągu.</span><span class="sxs-lookup"><span data-stu-id="744c7-144">To run the example, create the following text file named ApplicationResources.txt to define string resources.</span></span>  
  
```  
Title="Contact Information"  
Label1="First Name:"  
Label2="Middle Name:"  
Label3="Last Name:"  
Label4="SSN:"  
Label5="Street Address:"  
Label6="City:"  
Label7="State:"  
Label8="Zip Code:"  
Label9="Home Phone:"  
Label10="Business Phone:"  
Label11="Mobile Phone:"  
Label12="Other Phone:"  
Label13="Fax:"  
Label14="Email Address:"  
Label15="Alternate Email Address:"  
```  
  
 <span data-ttu-id="744c7-145">Następnie można przekonwertować plik zasobów tekstowych na plik binarny o nazwie ApplicationResources. resources przy użyciu następującego polecenia:</span><span class="sxs-lookup"><span data-stu-id="744c7-145">You can then convert the text resource file to a binary file named ApplicationResources.resources by using the following command:</span></span>  
  
 <span data-ttu-id="744c7-146">**Resgen ApplicationResources. txt**</span><span class="sxs-lookup"><span data-stu-id="744c7-146">**resgen ApplicationResources.txt**</span></span>  
  
 <span data-ttu-id="744c7-147">Poniższy przykład używa <xref:System.Resources.ResourceReader> klasy, aby wyliczyć każdy zasób w autonomicznym pliku Binary. resources i wyświetlić jego nazwę klucza i odpowiednią wartość.</span><span class="sxs-lookup"><span data-stu-id="744c7-147">The following example then uses the <xref:System.Resources.ResourceReader> class to enumerate each resource in the standalone binary .resources file and to display its key name and corresponding value.</span></span>  
  
 [!code-csharp[System.Resources.ResourceReader.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.resources.resourcereader.class/cs/class1.cs#1)]
 [!code-vb[System.Resources.ResourceReader.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.resources.resourcereader.class/vb/class1.vb#1)]  
  
 <span data-ttu-id="744c7-148">Próba pobrania danych zasobu z <xref:System.Collections.IDictionaryEnumerator.Value%2A?displayProperty=nameWithType> właściwości może zgłosić następujące wyjątki:</span><span class="sxs-lookup"><span data-stu-id="744c7-148">The attempt to retrieve resource data from the <xref:System.Collections.IDictionaryEnumerator.Value%2A?displayProperty=nameWithType> property can throw the following exceptions:</span></span>  
  
-   <span data-ttu-id="744c7-149">A <xref:System.FormatException> Jeśli dane nie są w oczekiwanym formacie.</span><span class="sxs-lookup"><span data-stu-id="744c7-149">A <xref:System.FormatException> if the data is not in the expected format.</span></span>  
  
-   <span data-ttu-id="744c7-150">A <xref:System.IO.FileNotFoundException> Jeśli nie można odnaleźć zestawu, który zawiera typ, do którego należy dane.</span><span class="sxs-lookup"><span data-stu-id="744c7-150">A <xref:System.IO.FileNotFoundException> if the assembly that contains the type to which the data belongs cannot be found.</span></span>  
  
-   <span data-ttu-id="744c7-151">A <xref:System.TypeLoadException> Jeśli nie można odnaleźć typu, do którego należą dane.</span><span class="sxs-lookup"><span data-stu-id="744c7-151">A <xref:System.TypeLoadException> if the type to which the data belongs cannot be cannot be found.</span></span>  
  
 <span data-ttu-id="744c7-152">Zazwyczaj te wyjątki są generowane, jeśli plik resources został zmodyfikowany ręcznie, jeśli zestaw, w którym zdefiniowano typ, nie został dołączony do aplikacji lub został przypadkowo usunięty lub jeśli zestaw jest starszą wersją, która jest wcześniejsza Typ.</span><span class="sxs-lookup"><span data-stu-id="744c7-152">Typically, these exceptions are thrown if the .resources file has been modified manually, if the assembly in which a type is defined has either not been included with an application or has been inadvertently deleted, or if the assembly is an older version that predates a type.</span></span> <span data-ttu-id="744c7-153">W przypadku zgłoszenia jednego z tych wyjątków można pobrać zasoby przez Wyliczenie poszczególnych zasobów i wywołanie <xref:System.Resources.ResourceReader.GetResourceData%2A> metody, jak pokazano w poniższej sekcji.</span><span class="sxs-lookup"><span data-stu-id="744c7-153">If one of these exceptions is thrown, you can retrieve resources by enumerating each resource and calling the <xref:System.Resources.ResourceReader.GetResourceData%2A> method, as the following section shows.</span></span> <span data-ttu-id="744c7-154">To podejście zapewnia pewne informacje o typie danych, które <xref:System.Collections.IDictionaryEnumerator.Value%2A?displayProperty=nameWithType> próbowano zwrócić przez właściwość.</span><span class="sxs-lookup"><span data-stu-id="744c7-154">This approach provides you with some information about the data type that the <xref:System.Collections.IDictionaryEnumerator.Value%2A?displayProperty=nameWithType> property attempted to return.</span></span>  
  
<a name="getresourcedata"></a>   
### <a name="retrieving-resources-by-name-with-getresourcedata"></a><span data-ttu-id="744c7-155">Pobieranie zasobów według nazw z GetResourceData</span><span class="sxs-lookup"><span data-stu-id="744c7-155">Retrieving Resources by Name with GetResourceData</span></span>  
 <span data-ttu-id="744c7-156">Drugie podejście do wyliczania zasobów w pliku Resources również obejmuje przechodzenie przez zasoby w pliku przez wywołanie `IDictionaryEnumerator.MoveNext` metody.</span><span class="sxs-lookup"><span data-stu-id="744c7-156">The second approach to enumerating resources in a .resources file also involves navigating through the resources in the file by calling the `IDictionaryEnumerator.MoveNext` method.</span></span> <span data-ttu-id="744c7-157">Dla każdego zasobu pobierana jest nazwa zasobu z <xref:System.Collections.IDictionaryEnumerator.Key%2A?displayProperty=nameWithType> właściwości, która jest następnie przenoszona <xref:System.Resources.ResourceReader.GetResourceData%28System.String%2CSystem.String%40%2CSystem.Byte%5B%5D%40%29> do metody w celu pobrania danych zasobu.</span><span class="sxs-lookup"><span data-stu-id="744c7-157">For each resource, you retrieve the resource's name from the <xref:System.Collections.IDictionaryEnumerator.Key%2A?displayProperty=nameWithType> property, which is then passed to the <xref:System.Resources.ResourceReader.GetResourceData%28System.String%2CSystem.String%40%2CSystem.Byte%5B%5D%40%29> method to retrieve the resource's data.</span></span> <span data-ttu-id="744c7-158">Ta wartość jest zwracana jako tablica bajtów w `resourceData` argumencie.</span><span class="sxs-lookup"><span data-stu-id="744c7-158">This is returned as a byte array in the `resourceData` argument.</span></span>  
  
 <span data-ttu-id="744c7-159">Takie podejście jest bardziej niewygodna niż pobranie nazwy zasobu i wartości z <xref:System.Collections.IDictionaryEnumerator.Key%2A?displayProperty=nameWithType> właściwości i <xref:System.Collections.IDictionaryEnumerator.Value%2A?displayProperty=nameWithType> , ponieważ zwraca rzeczywiste bajty, które tworzą wartość zasobu.</span><span class="sxs-lookup"><span data-stu-id="744c7-159">This approach is more awkward than retrieving the resource name and value from the <xref:System.Collections.IDictionaryEnumerator.Key%2A?displayProperty=nameWithType> and <xref:System.Collections.IDictionaryEnumerator.Value%2A?displayProperty=nameWithType> properties, because it returns the actual bytes that form the resource value.</span></span> <span data-ttu-id="744c7-160">Jeśli jednak próba pobrania zasobu zgłosi wyjątek, <xref:System.Resources.ResourceReader.GetResourceData%2A> Metoda może ułatwić zidentyfikowanie źródła wyjątku przez dostarczenie informacji o typie danych zasobu.</span><span class="sxs-lookup"><span data-stu-id="744c7-160">However, if the attempt to retrieve the resource throws an exception, the <xref:System.Resources.ResourceReader.GetResourceData%2A> method can help identify the source of the exception by supplying information about the resource's data type.</span></span> <span data-ttu-id="744c7-161">Aby uzyskać więcej informacji na temat ciągu, który wskazuje typ danych zasobu, zobacz <xref:System.Resources.ResourceReader.GetResourceData%2A>.</span><span class="sxs-lookup"><span data-stu-id="744c7-161">For more information about the string that indicates the resource's data type, see <xref:System.Resources.ResourceReader.GetResourceData%2A>.</span></span>  
  
 <span data-ttu-id="744c7-162">Poniższy przykład ilustruje sposób użycia tej metody do pobierania zasobów i obsługi wszelkich zgłaszanych wyjątków.</span><span class="sxs-lookup"><span data-stu-id="744c7-162">The following example illustrates how to use this approach to retrieve resources and to handle any exceptions that are thrown.</span></span> <span data-ttu-id="744c7-163">Program programowo tworzy plik binarny. resources zawierający cztery ciągi, jedną wartość logiczną, jedną liczbę całkowitą, jedną mapę bitową i jeden obiekt niestandardowy `DateTimeTZI` .</span><span class="sxs-lookup"><span data-stu-id="744c7-163">It programmatically creates a binary .resources file that contains four strings, one Boolean, one integer, one bitmap, and one custom `DateTimeTZI` object.</span></span> <span data-ttu-id="744c7-164">Aby uruchomić przykład, wykonaj następujące czynności:</span><span class="sxs-lookup"><span data-stu-id="744c7-164">To run the example, do the following:</span></span>  
  
1.  <span data-ttu-id="744c7-165">Utwórz zestaw o nazwie Library. dll, który zawiera `DateTimeTZI` strukturę.</span><span class="sxs-lookup"><span data-stu-id="744c7-165">Create an assembly named Library.dll that contains the `DateTimeTZI` structure.</span></span> <span data-ttu-id="744c7-166">Poniżej znajduje się kod źródłowy zestawu.</span><span class="sxs-lookup"><span data-stu-id="744c7-166">The following is the source code for the assembly.</span></span>  
  
     [!code-csharp[System.Resources.ResourceReader.Class#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.resources.resourcereader.class/cs/library.cs#4)]
     [!code-vb[System.Resources.ResourceReader.Class#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.resources.resourcereader.class/vb/library.vb#4)]  
  
     <span data-ttu-id="744c7-167">Skompiluj kod źródłowy w programie C# przy użyciu następującego polecenia:</span><span class="sxs-lookup"><span data-stu-id="744c7-167">Compile the source code in C# by using the following command:</span></span>  
  
    ```  
    csc /t:library library.cs  
    ```  
  
     <span data-ttu-id="744c7-168">Można też skompilować ją w Visual Basic przy użyciu następującego polecenia:</span><span class="sxs-lookup"><span data-stu-id="744c7-168">Or, you can compile it in Visual Basic by using the following command:</span></span>  
  
    ```  
    vbc library.vb /t:library  
    ```  
  
2.  <span data-ttu-id="744c7-169">Skompiluj i wykonaj następujący kod źródłowy, który tworzy plik resources o nazwie ContactResources. resources.</span><span class="sxs-lookup"><span data-stu-id="744c7-169">Compile and execute the following source code, which creates a .resources file named ContactResources.resources.</span></span>  
  
     [!code-csharp[System.Resources.ResourceReader.Class#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.resources.resourcereader.class/cs/createresourceex1.cs#5)]
     [!code-vb[System.Resources.ResourceReader.Class#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.resources.resourcereader.class/vb/createresourceex1.vb#5)]  
  
     <span data-ttu-id="744c7-170">Plik kodu źródłowego ma nazwę CreateResources.cs.</span><span class="sxs-lookup"><span data-stu-id="744c7-170">The source code file is named CreateResources.cs.</span></span> <span data-ttu-id="744c7-171">Można ją C# skompilować przy użyciu następującego polecenia:</span><span class="sxs-lookup"><span data-stu-id="744c7-171">You can compile it in C# by using the following command:</span></span>  
  
    ```  
    csc CreateResources.cs /r:library.dll  
    ```  
  
     <span data-ttu-id="744c7-172">Można też skompilować ją w Visual Basic przy użyciu następującego polecenia:</span><span class="sxs-lookup"><span data-stu-id="744c7-172">Or, you can compile it in Visual Basic by using the following command:</span></span>  
  
    ```  
    vbc CreateResources.vb /r:library.dll  
    ```  
  
3.  <span data-ttu-id="744c7-173">Skompiluj i uruchom następujący kod, aby wyliczyć zasoby w pliku ContactResources. resources.</span><span class="sxs-lookup"><span data-stu-id="744c7-173">Compile and run the following code to enumerate the resources in the ContactResources.resources file.</span></span>  
  
     [!code-csharp[System.Resources.ResourceReader.Class#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.resources.resourcereader.class/cs/readresourceex1.cs#6)]
     [!code-vb[System.Resources.ResourceReader.Class#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.resources.resourcereader.class/vb/readresourceex1.vb#6)]  
  
     <span data-ttu-id="744c7-174">Po zmodyfikowaniu kodu źródłowego (na przykład przez zamierzone Przerzucanie <xref:System.FormatException> na końcu `try` bloku) lub zmiana nazwy zestawu Library. dll tak, aby był niedostępny w czasie wykonywania, można uruchomić przykład, <xref:System.Resources.ResourceReader.GetResourceData%2A> aby zobaczyć, jak wywołania umożliwia pobranie lub ponowne utworzenie niektórych informacji o zasobach.</span><span class="sxs-lookup"><span data-stu-id="744c7-174">After modifying the source code (for example, by deliberately throwing a <xref:System.FormatException> at the end of the `try` block) or renaming the Library.dll assembly so that it is unavailable at runtime, you can run the example to see how calls to <xref:System.Resources.ResourceReader.GetResourceData%2A> enable you to retrieve or recreate some resource information.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Resources.Reader</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="744c7-175">Inicjuje nowe wystąpienie klasy <see cref="T:System.Resources.ResourceReader" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="744c7-175">Initializes a new instance of the <see cref="T:System.Resources.ResourceReader" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

<span data-ttu-id="744c7-176">[!INCLUDE [untrusted-data-instance-note](~/includes/untrusted-data-instance-note.md)].</span><span class="sxs-lookup"><span data-stu-id="744c7-176">[!INCLUDE [untrusted-data-instance-note](~/includes/untrusted-data-instance-note.md)].</span></span>
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ResourceReader (System.IO.Stream stream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream stream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResourceReader.#ctor(System.IO.Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ResourceReader(System::IO::Stream ^ stream);" />
      <MemberSignature Language="F#" Value="new System.Resources.ResourceReader : System.IO.Stream -&gt; System.Resources.ResourceReader" Usage="new System.Resources.ResourceReader stream" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Resources.Reader</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Resources.ResourceManager</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="stream"><span data-ttu-id="744c7-177">Strumień wejściowy służący do odczytywania zasobów.</span><span class="sxs-lookup"><span data-stu-id="744c7-177">The input stream for reading resources.</span></span></param>
        <summary><span data-ttu-id="744c7-178">Inicjuje nowe wystąpienie <see cref="T:System.Resources.ResourceReader" /> klasy dla określonego strumienia.</span><span class="sxs-lookup"><span data-stu-id="744c7-178">Initializes a new instance of the <see cref="T:System.Resources.ResourceReader" /> class for the specified stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="744c7-179">Konstruktor tworzy wystąpienie <xref:System.Resources.ResourceReader> obiektu pobierającego zasoby z autonomicznego pliku Resources lub z pliku Resources, który jest osadzony w zestawie. <xref:System.Resources.ResourceReader.%23ctor%28System.IO.Stream%29></span><span class="sxs-lookup"><span data-stu-id="744c7-179">The <xref:System.Resources.ResourceReader.%23ctor%28System.IO.Stream%29> constructor instantiates a <xref:System.Resources.ResourceReader> object that retrieves resources either from a standalone .resources file or from a .resources file that is embedded in an assembly.</span></span> <span data-ttu-id="744c7-180">Aby odczytywać z autonomicznego pliku Resources, <xref:System.IO.Stream> Utwórz wystąpienie obiektu i przekaż go <xref:System.Resources.ResourceReader.%23ctor%28System.IO.Stream%29> do konstruktora.</span><span class="sxs-lookup"><span data-stu-id="744c7-180">To read from a standalone .resources file, instantiate a <xref:System.IO.Stream> object and pass it to the <xref:System.Resources.ResourceReader.%23ctor%28System.IO.Stream%29> constructor.</span></span> <span data-ttu-id="744c7-181">Aby odczytywać dane z osadzonego pliku Resources <xref:System.Reflection.Assembly.GetManifestResourceStream%2A?displayProperty=nameWithType> , należy wywołać metodę z nazwą uwzględniającą wielkość liter pliku Resources i przekazać zwracany <xref:System.IO.Stream> obiekt do <xref:System.Resources.ResourceReader.%23ctor%28System.IO.Stream%29> konstruktora.</span><span class="sxs-lookup"><span data-stu-id="744c7-181">To read from an embedded .resources file, call the <xref:System.Reflection.Assembly.GetManifestResourceStream%2A?displayProperty=nameWithType> method with the case-sensitive name of the .resources file, and pass the returned <xref:System.IO.Stream> object to the <xref:System.Resources.ResourceReader.%23ctor%28System.IO.Stream%29> constructor.</span></span>  
  
[!INCLUDE [untrusted-data-instance-note](~/includes/untrusted-data-instance-note.md)]
  
## Examples  
 <span data-ttu-id="744c7-182">W przykładzie w tej sekcji jest używany następujący plik txt o nazwie `PatientForm.txt` do definiowania zasobów używanych przez aplikację.</span><span class="sxs-lookup"><span data-stu-id="744c7-182">The example in this section uses the following .txt file named `PatientForm.txt` to define the resources used by an application.</span></span>  
  
```  
  
Title="Top Pet Animal Clinic"  
Label1="Patient Number:"  
Label2="Pet Name:"  
Label3="Species:"  
Label4="Breed:"  
Label5="Date of Birth:"  
Label6="Age:"  
Label7="Owner:"  
Label8="Address:"  
Label9="Home Phone:"  
Label10="Work Phone:"  
Label11="Mobile Phone:"  
  
```  
  
 <span data-ttu-id="744c7-183">Plik txt można skompilować do pliku Resources, wydając następujące polecenie:</span><span class="sxs-lookup"><span data-stu-id="744c7-183">You can compile the .txt file into a .resources file by issuing the following command:</span></span>  
  
 <span data-ttu-id="744c7-184">**Resgen PatientForm. txt**</span><span class="sxs-lookup"><span data-stu-id="744c7-184">**resgen PatientForm.txt**</span></span>  
  
 <span data-ttu-id="744c7-185">W poniższym przykładzie założono, że plik zasobów jest osadzony w zestawie, który zawiera kod wykonywalny aplikacji.</span><span class="sxs-lookup"><span data-stu-id="744c7-185">The following example assumes that the resource file is embedded in the assembly that contains the application's executable code.</span></span> <span data-ttu-id="744c7-186">Pobiera plik zasobów o nazwie `PatientForm.resources` z aktualnie wykonywanych zestawów i wyświetla nazwę i wartość każdego z zasobów.</span><span class="sxs-lookup"><span data-stu-id="744c7-186">It retrieves a resource file named `PatientForm.resources` from the currently executing assemblies and displays the name and value of each of its resources.</span></span>  
  
 [!code-csharp[System.Resources.ResourceReader.Ctor#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.resources.resourcereader.ctor/cs/stream1.cs#1)]
 [!code-vb[System.Resources.ResourceReader.Ctor#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.resources.resourcereader.ctor/vb/stream1.vb#1)]  
  
 <span data-ttu-id="744c7-187">Jeśli C# przykład ma nazwę `Example.cs`, można skompilować go za pomocą następującego polecenia:</span><span class="sxs-lookup"><span data-stu-id="744c7-187">If the C# example is named `Example.cs`, you can compile it by using the following command:</span></span>  
  
 <span data-ttu-id="744c7-188">**CSC Example.cs/res: PatientForm. resources**</span><span class="sxs-lookup"><span data-stu-id="744c7-188">**csc Example.cs /res:PatientForm.resources**</span></span>  
  
 <span data-ttu-id="744c7-189">Jeśli przykład Visual Basic ma nazwę `Example.vb`, można go skompilować przy użyciu następującego polecenia:</span><span class="sxs-lookup"><span data-stu-id="744c7-189">If the Visual Basic example is named `Example.vb`, you can compile it by using the following command:</span></span>  
  
 <span data-ttu-id="744c7-190">**Przykład VBC. vb/res: PatientForm. resources**</span><span class="sxs-lookup"><span data-stu-id="744c7-190">**vbc Example.vb /res:PatientForm.resources**</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="744c7-191">Nie można odczytać parametru. <paramref name="stream" /></span><span class="sxs-lookup"><span data-stu-id="744c7-191">The <paramref name="stream" /> parameter is not readable.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="744c7-192">Parametr ma wartość <see langword="null" />. <paramref name="stream" /></span><span class="sxs-lookup"><span data-stu-id="744c7-192">The <paramref name="stream" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="744c7-193">Wystąpił błąd we/wy podczas uzyskiwania dostępu <paramref name="stream" />do programu.</span><span class="sxs-lookup"><span data-stu-id="744c7-193">An I/O error has occurred while accessing <paramref name="stream" />.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="744c7-194">w celu świadczenia usług serializacji.</span><span class="sxs-lookup"><span data-stu-id="744c7-194">for providing serialization services.</span></span> <span data-ttu-id="744c7-195">Akcja zabezpieczeń: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />.</span><span class="sxs-lookup"><span data-stu-id="744c7-195">Security action: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />.</span></span> <span data-ttu-id="744c7-196">Skojarzone Wyliczenie:<see cref="F:System.Security.Permissions.SecurityPermissionFlag.SerializationFormatter" /></span><span class="sxs-lookup"><span data-stu-id="744c7-196">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.SerializationFormatter" /></span></span></permission>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="744c7-197">Wymaga pełnego zaufania do bezpośredniego obiektu wywołującego.</span><span class="sxs-lookup"><span data-stu-id="744c7-197">requires full trust for the immediate caller.</span></span> <span data-ttu-id="744c7-198">Ten element członkowski nie może być używany przez częściowo zaufany lub przejrzysty kod.</span><span class="sxs-lookup"><span data-stu-id="744c7-198">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="M:System.Reflection.Assembly.GetManifestResourceStream(System.String)" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ResourceReader (string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResourceReader.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (fileName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ResourceReader(System::String ^ fileName);" />
      <MemberSignature Language="F#" Value="new System.Resources.ResourceReader : string -&gt; System.Resources.ResourceReader" Usage="new System.Resources.ResourceReader fileName" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Resources.ResourceManager</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Resources.Reader</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="fileName"><span data-ttu-id="744c7-199">Ścieżka i nazwa pliku zasobów, który ma zostać odczytany.</span><span class="sxs-lookup"><span data-stu-id="744c7-199">The path and name of the resource file to read.</span></span> <span data-ttu-id="744c7-200">w <c>nazwie pliku</c> nie jest rozróżniana wielkość liter.</span><span class="sxs-lookup"><span data-stu-id="744c7-200"><c>filename</c> is not case-sensitive.</span></span></param>
        <summary><span data-ttu-id="744c7-201">Inicjuje nowe wystąpienie <see cref="T:System.Resources.ResourceReader" /> klasy dla określonego nazwanego pliku zasobu.</span><span class="sxs-lookup"><span data-stu-id="744c7-201">Initializes a new instance of the <see cref="T:System.Resources.ResourceReader" /> class for the specified named resource file.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="744c7-202">Konstruktor tworzy wystąpienie <xref:System.Resources.ResourceReader> obiektu pobierającego zasoby z autonomicznego pliku Resources. <xref:System.Resources.ResourceReader.%23ctor%28System.String%29></span><span class="sxs-lookup"><span data-stu-id="744c7-202">The <xref:System.Resources.ResourceReader.%23ctor%28System.String%29> constructor instantiates a <xref:System.Resources.ResourceReader> object that retrieves resources from a standalone .resources file.</span></span> <span data-ttu-id="744c7-203">Aby pobrać zasoby z osadzonego pliku Resources, użyj <xref:System.Resources.ResourceReader.%23ctor%28System.IO.Stream%29> konstruktora.</span><span class="sxs-lookup"><span data-stu-id="744c7-203">To retrieve resources from an embedded .resources file, use the <xref:System.Resources.ResourceReader.%23ctor%28System.IO.Stream%29> constructor.</span></span>  

[!INCLUDE [untrusted-data-instance-note](~/includes/untrusted-data-instance-note.md)]

## Examples  
 <span data-ttu-id="744c7-204">W przykładzie w tej sekcji jest używany następujący plik txt o nazwie `PatientForm.txt` do definiowania zasobów używanych przez aplikację.</span><span class="sxs-lookup"><span data-stu-id="744c7-204">The example in this section uses the following .txt file named `PatientForm.txt` to define the resources used by an application.</span></span>  
  
```  
  
Title="Top Pet Animal Clinic"  
Label1="Patient Number:"  
Label2="Pet Name:"  
Label3="Species:"  
Label4="Breed:"  
Label5="Date of Birth:"  
Label6="Age:"  
Label7="Owner:"  
Label8="Address:"  
Label9="Home Phone:"  
Label10="Work Phone:"  
Label11="Mobile Phone:"  
  
```  
  
 <span data-ttu-id="744c7-205">Plik. txt można skompilować do pliku Resources, wydając następujące polecenie:</span><span class="sxs-lookup"><span data-stu-id="744c7-205">You can compile this .txt file into a .resources file by issuing the following command:</span></span>  
  
 <span data-ttu-id="744c7-206">**Resgen PatientForm. txt**</span><span class="sxs-lookup"><span data-stu-id="744c7-206">**resgen PatientForm.txt**</span></span>  
  
 <span data-ttu-id="744c7-207">Poniższy przykład wylicza zasoby w `PatientForm.resources` i wyświetla nazwę i wartość każdego z nich.</span><span class="sxs-lookup"><span data-stu-id="744c7-207">The following example enumerates the resources in `PatientForm.resources` and displays the name and value of each.</span></span>  
  
 [!code-csharp[System.Resources.ResourceReader.Ctor#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.resources.resourcereader.ctor/cs/stream2.cs#2)]
 [!code-vb[System.Resources.ResourceReader.Ctor#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.resources.resourcereader.ctor/vb/stream2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="744c7-208">Parametr ma wartość <see langword="null" />. <paramref name="fileName" /></span><span class="sxs-lookup"><span data-stu-id="744c7-208">The <paramref name="fileName" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="744c7-209">Nie można znaleźć pliku.</span><span class="sxs-lookup"><span data-stu-id="744c7-209">The file cannot be found.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="744c7-210">Wystąpił błąd we/wy.</span><span class="sxs-lookup"><span data-stu-id="744c7-210">An I/O error has occurred.</span></span></exception>
        <exception cref="T:System.BadImageFormatException"><span data-ttu-id="744c7-211">Plik zasobu ma nieprawidłowy format.</span><span class="sxs-lookup"><span data-stu-id="744c7-211">The resource file has an invalid format.</span></span> <span data-ttu-id="744c7-212">Na przykład długość pliku może wynosić zero.</span><span class="sxs-lookup"><span data-stu-id="744c7-212">For example, the length of the file may be zero.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResourceReader.Close" />
      <MemberSignature Language="VB.NET" Value="Public Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Close();" />
      <MemberSignature Language="F#" Value="abstract member Close : unit -&gt; unit&#xA;override this.Close : unit -&gt; unit" Usage="resourceReader.Close " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Resources.IResourceReader.Close</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Resources.ResourceManager</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Resources.Reader</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="744c7-213">Zwalnia wszystkie zasoby systemu operacyjnego skojarzone z tym <see cref="T:System.Resources.ResourceReader" /> obiektem.</span><span class="sxs-lookup"><span data-stu-id="744c7-213">Releases all operating system resources associated with this <see cref="T:System.Resources.ResourceReader" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="744c7-214"><xref:System.Resources.ResourceReader.Close%2A>można bezpiecznie wywołać wiele razy.</span><span class="sxs-lookup"><span data-stu-id="744c7-214"><xref:System.Resources.ResourceReader.Close%2A> can be safely called multiple times.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="744c7-215">Poniższy przykład przechodzi przez zasoby pliku i wyświetla wszystkie znalezione pary klucz/wartość.</span><span class="sxs-lookup"><span data-stu-id="744c7-215">The following example moves through a file's resources and displays all the key/value pairs it finds.</span></span> <span data-ttu-id="744c7-216">Następnie kod używa <xref:System.Resources.ResourceReader.Close%2A> metody do wyłączania <xref:System.Resources.ResourceReader> i wydawania wszystkich używanych przez nią zasobów.</span><span class="sxs-lookup"><span data-stu-id="744c7-216">The code then uses the <xref:System.Resources.ResourceReader.Close%2A> method to shut down the <xref:System.Resources.ResourceReader> and to release all resources used by it.</span></span>  
  
 [!code-cpp[System.Resources.ResourceReader.GetEnumerator Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Resources.ResourceReader.GetEnumerator Example/CPP/getenumerator.cpp#1)]
 [!code-csharp[System.Resources.ResourceReader.GetEnumerator Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Resources.ResourceReader.GetEnumerator Example/CS/getenumerator.cs#1)]
 [!code-vb[System.Resources.ResourceReader.GetEnumerator Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Resources.ResourceReader.GetEnumerator Example/VB/getenumerator.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResourceReader.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="resourceReader.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Resources.Reader</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Resources.ResourceManager</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="744c7-217">Zwalnia wszystkie zasoby używane przez bieżące wystąpienie <see cref="T:System.Resources.ResourceReader" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="744c7-217">Releases all resources used by the current instance of the <see cref="T:System.Resources.ResourceReader" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="744c7-218">Po zakończeniu korzystania z tego wystąpienia programu <xref:System.Resources.ResourceReader>Wywołaj <xref:System.Resources.ResourceReader.Dispose%2A> wszystkie zasoby używane przez to wystąpienie.</span><span class="sxs-lookup"><span data-stu-id="744c7-218">When you are finished using this instance of <xref:System.Resources.ResourceReader>, call <xref:System.Resources.ResourceReader.Dispose%2A> to release all resources used by this instance.</span></span> <span data-ttu-id="744c7-219">Należy wyeliminować dalsze odwołania do tego <xref:System.Resources.ResourceReader> wystąpienia, tak aby moduł wyrzucania elementów bezużytecznych mógł odzyskiwać pamięć wystąpienia, zamiast utrzymać go w celu sfinalizowania.</span><span class="sxs-lookup"><span data-stu-id="744c7-219">You should eliminate further references to this <xref:System.Resources.ResourceReader> instance so that the garbage collector can reclaim the memory of the instance instead of keeping it alive for finalization.</span></span>  
  
 <span data-ttu-id="744c7-220"><xref:System.Resources.ResourceReader.Dispose%2A>wywołuje prywatną metodę Dispose (Boolean), która zawiera kod do zwolnienia zasobów zarządzanych i niezarządzanych.</span><span class="sxs-lookup"><span data-stu-id="744c7-220"><xref:System.Resources.ResourceReader.Dispose%2A> calls the private Dispose(Boolean) method, which contains the code to release managed and unmanaged resources.</span></span> <span data-ttu-id="744c7-221">Aby uzyskać więcej informacji, zobacz [implementowanie metody Dispose](~/docs/standard/garbage-collection/implementing-dispose.md).</span><span class="sxs-lookup"><span data-stu-id="744c7-221">For more information, see [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.IDictionaryEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IDictionaryEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResourceReader.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IDictionaryEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::IDictionaryEnumerator ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="abstract member GetEnumerator : unit -&gt; System.Collections.IDictionaryEnumerator&#xA;override this.GetEnumerator : unit -&gt; System.Collections.IDictionaryEnumerator" Usage="resourceReader.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Resources.IResourceReader.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Resources.Reader</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Resources.ResourceManager</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IDictionaryEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="744c7-222">Zwraca moduł wyliczający dla <see cref="T:System.Resources.ResourceReader" /> tego obiektu.</span><span class="sxs-lookup"><span data-stu-id="744c7-222">Returns an enumerator for this <see cref="T:System.Resources.ResourceReader" /> object.</span></span></summary>
        <returns><span data-ttu-id="744c7-223">Moduł wyliczający dla <see cref="T:System.Resources.ResourceReader" /> tego obiektu.</span><span class="sxs-lookup"><span data-stu-id="744c7-223">An enumerator for this <see cref="T:System.Resources.ResourceReader" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="744c7-224">Zwykle wyliczane są <xref:System.Resources.ResourceReader.GetEnumerator%2A> zasoby przez wywołanie metody, a następnie wielokrotne <xref:System.Collections.IEnumerator.MoveNext%2A> wywołanie metody na zwracanym <xref:System.Collections.IDictionaryEnumerator> obiekcie do momentu zwrócenia `false`metody.</span><span class="sxs-lookup"><span data-stu-id="744c7-224">Typically, you enumerate resources by calling the <xref:System.Resources.ResourceReader.GetEnumerator%2A> method and then repeatedly calling the <xref:System.Collections.IEnumerator.MoveNext%2A> method on the returned <xref:System.Collections.IDictionaryEnumerator> object until the method returns `false`.</span></span> <span data-ttu-id="744c7-225">Nazwa zasobu jest dostępna z <xref:System.Collections.IDictionaryEnumerator.Key%2A?displayProperty=nameWithType> właściwości; jej wartość <xref:System.Collections.IDictionaryEnumerator.Value%2A?displayProperty=nameWithType> właściwości.</span><span class="sxs-lookup"><span data-stu-id="744c7-225">The resource name is available from the <xref:System.Collections.IDictionaryEnumerator.Key%2A?displayProperty=nameWithType> property; its value from the <xref:System.Collections.IDictionaryEnumerator.Value%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="744c7-226">Przykład ilustruje sposób wyliczania zasobów w ten sposób.</span><span class="sxs-lookup"><span data-stu-id="744c7-226">The example illustrates how to enumerate resources in this way.</span></span>  
  
 <span data-ttu-id="744c7-227">Implementacja <xref:System.Collections.IDictionaryEnumerator.Value%2A?displayProperty=nameWithType> właściwości<xref:System.Resources.ResourceReader> przez klasę może zgłosić następujące wyjątki:</span><span class="sxs-lookup"><span data-stu-id="744c7-227">The implementation of the <xref:System.Collections.IDictionaryEnumerator.Value%2A?displayProperty=nameWithType> property by the <xref:System.Resources.ResourceReader> class can throw the following exceptions:</span></span>  
  
-   <xref:System.IO.FileNotFoundException>  
  
     <span data-ttu-id="744c7-228">Nie można odnaleźć zestawu, który zawiera typ, do którego należy dane.</span><span class="sxs-lookup"><span data-stu-id="744c7-228">The assembly that contains the type to which the data belongs cannot be found.</span></span>  
  
-   <xref:System.FormatException>  
  
     <span data-ttu-id="744c7-229">Dane mają nieoczekiwany format.</span><span class="sxs-lookup"><span data-stu-id="744c7-229">The data is not in the expected format.</span></span>  
  
-   <xref:System.TypeLoadException>  
  
     <span data-ttu-id="744c7-230">Typ, do którego należy dane, nie może zostać znaleziony.</span><span class="sxs-lookup"><span data-stu-id="744c7-230">The type to which the data belongs cannot be found.</span></span>  
  
 <span data-ttu-id="744c7-231">Możesz obsłużyć wyjątek, wywołując <xref:System.Resources.ResourceReader.GetResourceData%2A> metodę w celu pobrania informacji o typie danych i tablicy bajtowej przypisanej do nazwanego zasobu.</span><span class="sxs-lookup"><span data-stu-id="744c7-231">You can handle the exception by calling the <xref:System.Resources.ResourceReader.GetResourceData%2A> method to retrieve information about the data type and the byte array assigned to the named resource.</span></span> <span data-ttu-id="744c7-232">Aby uzyskać więcej informacji, zobacz sekcję "Pobieranie zasobów według nazwy z GetResourceData" w <xref:System.Resources.ResourceReader> temacie dotyczącym klas.</span><span class="sxs-lookup"><span data-stu-id="744c7-232">For more information, see the "Retrieving Resources by Name with GetResourceData" section in the <xref:System.Resources.ResourceReader> class topic.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="744c7-233"><xref:System.Resources.ResourceReader> Klasa obejmuje dwie metody, które zwracają moduł wyliczający.</span><span class="sxs-lookup"><span data-stu-id="744c7-233">The <xref:System.Resources.ResourceReader> class includes two methods that return enumerators.</span></span> <span data-ttu-id="744c7-234"><xref:System.Resources.ResourceReader.GetEnumerator%2A> Metoda zwracaobiektinterfejsuijestzalecanąmetodąwywołania<xref:System.Collections.IDictionaryEnumerator> podczas wyliczania zasobów.</span><span class="sxs-lookup"><span data-stu-id="744c7-234">The <xref:System.Resources.ResourceReader.GetEnumerator%2A> method returns an <xref:System.Collections.IDictionaryEnumerator> interface object and is the recommended method to call when enumerating resources.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="744c7-235">W przykładzie w tej sekcji jest używany następujący plik txt o nazwie `PatientForm.txt` do definiowania zasobów używanych przez aplikację.</span><span class="sxs-lookup"><span data-stu-id="744c7-235">The example in this section uses the following .txt file named `PatientForm.txt` to define the resources used by an application.</span></span>  
  
```  
  
Title="Top Pet Animal Clinic"  
Label1="Patient Number:"  
Label2="Pet Name:"  
Label3="Species:"  
Label4="Breed:"  
Label5="Date of Birth:"  
Label6="Age:"  
Label7="Owner:"  
Label8="Address:"  
Label9="Home Phone:"  
Label10="Work Phone:"  
Label11="Mobile Phone:"  
  
```  
  
 <span data-ttu-id="744c7-236">Plik txt można skompilować do pliku Resources, wydając następujące polecenie:</span><span class="sxs-lookup"><span data-stu-id="744c7-236">You can compile the .txt file into a .resources file by issuing the following command:</span></span>  
  
 <span data-ttu-id="744c7-237">**Resgen PatientForm. txt**</span><span class="sxs-lookup"><span data-stu-id="744c7-237">**resgen PatientForm.txt**</span></span>  
  
 <span data-ttu-id="744c7-238">Poniższy przykład wylicza zasoby w `PatientForm.resources` i wyświetla nazwę i wartość każdego z nich.</span><span class="sxs-lookup"><span data-stu-id="744c7-238">The following example enumerates the resources in `PatientForm.resources` and displays the name and value of each.</span></span>  
  
 [!code-csharp[System.Resources.ResourceReader.Ctor#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.resources.resourcereader.ctor/cs/stream2.cs#2)]
 [!code-vb[System.Resources.ResourceReader.Ctor#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.resources.resourcereader.ctor/vb/stream2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="744c7-239">Czytnik został zamknięty lub usunięty i nie można uzyskać do niego dostępu.</span><span class="sxs-lookup"><span data-stu-id="744c7-239">The reader has been closed or disposed, and cannot be accessed.</span></span></exception>
        <altmember cref="T:System.Collections.IDictionary" />
        <altmember cref="T:System.Collections.IDictionaryEnumerator" />
      </Docs>
    </Member>
    <Member MemberName="GetResourceData">
      <MemberSignature Language="C#" Value="public void GetResourceData (string resourceName, out string resourceType, out byte[] resourceData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void GetResourceData(string resourceName, [out] string&amp; resourceType, [out] unsigned int8[]&amp; resourceData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResourceReader.GetResourceData(System.String,System.String@,System.Byte[]@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GetResourceData (resourceName As String, ByRef resourceType As String, ByRef resourceData As Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GetResourceData(System::String ^ resourceName, [Runtime::InteropServices::Out] System::String ^ % resourceType, [Runtime::InteropServices::Out] cli::array &lt;System::Byte&gt; ^ % resourceData);" />
      <MemberSignature Language="F#" Value="member this.GetResourceData : string *  *  -&gt; unit" Usage="resourceReader.GetResourceData (resourceName, resourceType, resourceData)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Resources.ResourceManager</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Resources.Reader</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceName" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="resourceType" Type="System.String" RefType="out" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="resourceData" Type="System.Byte[]" RefType="out" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="resourceName"><span data-ttu-id="744c7-240">Nazwa zasobu.</span><span class="sxs-lookup"><span data-stu-id="744c7-240">The name of a resource.</span></span></param>
        <param name="resourceType"><span data-ttu-id="744c7-241">Gdy ta metoda zwraca, zawiera ciąg, który reprezentuje nazwę typu pobranego zasobu.</span><span class="sxs-lookup"><span data-stu-id="744c7-241">When this method returns, contains a string that represents the type name of the retrieved resource.</span></span> <span data-ttu-id="744c7-242">Ten parametr jest przekazywany niezainicjowany.</span><span class="sxs-lookup"><span data-stu-id="744c7-242">This parameter is passed uninitialized.</span></span></param>
        <param name="resourceData"><span data-ttu-id="744c7-243">Gdy ta metoda zwraca, zawiera tablicę bajtową, która jest reprezentacją binarną pobranego typu.</span><span class="sxs-lookup"><span data-stu-id="744c7-243">When this method returns, contains a byte array that is the binary representation of the retrieved type.</span></span> <span data-ttu-id="744c7-244">Ten parametr jest przekazywany niezainicjowany.</span><span class="sxs-lookup"><span data-stu-id="744c7-244">This parameter is passed uninitialized.</span></span></param>
        <summary><span data-ttu-id="744c7-245">Pobiera nazwę typu i dane nazwanego zasobu z otwartego pliku zasobów lub strumienia.</span><span class="sxs-lookup"><span data-stu-id="744c7-245">Retrieves the type name and data of a named resource from an open resource file or stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="744c7-246"><xref:System.Resources.ResourceReader.GetResourceData%2A> Metoda pobiera wartość nazwanego zasobu jako tablicę bajtów.</span><span class="sxs-lookup"><span data-stu-id="744c7-246">The <xref:System.Resources.ResourceReader.GetResourceData%2A> method retrieves the value of a named resource as a byte array.</span></span> <span data-ttu-id="744c7-247">Jest zazwyczaj używany, <xref:System.Collections.IDictionaryEnumerator.Value%2A> gdy właściwość zgłasza wyjątek podczas próby pobrania wartości zasobu.</span><span class="sxs-lookup"><span data-stu-id="744c7-247">It is typically used when the <xref:System.Collections.IDictionaryEnumerator.Value%2A> property throws an exception when it tries to retrieve the value of a resource.</span></span>  
  
 <span data-ttu-id="744c7-248">`resourceType`jest ciągiem, który reprezentuje typ danych zasobu.</span><span class="sxs-lookup"><span data-stu-id="744c7-248">`resourceType` is a string that represents the data type of the resource.</span></span> <span data-ttu-id="744c7-249">Może to być dowolna z następujących wartości:</span><span class="sxs-lookup"><span data-stu-id="744c7-249">It can be any of the following values:</span></span>  
  
-   <span data-ttu-id="744c7-250">Ciąg reprezentujący `ResourceTypeCode` element członkowski wyliczenia, który wskazuje typ danych zasobu.</span><span class="sxs-lookup"><span data-stu-id="744c7-250">The string representation of a `ResourceTypeCode` enumeration member that indicates the data type of the resource.</span></span> <span data-ttu-id="744c7-251">`ResourceTypeCode`jest wyliczeniem prywatnym używanym przez., aby wskazać, że specjalny format binarny jest używany do przechowywania jednego z 19 wspólnych typów danych.</span><span class="sxs-lookup"><span data-stu-id="744c7-251">`ResourceTypeCode` is a private enumeration that is used by .to indicate that a special binary format is used to store one of 19 common data types.</span></span> <span data-ttu-id="744c7-252">Obejmują one typy danych pierwotnych .NET Framework (<xref:System.Boolean>, <xref:System.Byte>, <xref:System.Char> <xref:System.Double> ,,<xref:System.Single>, <xref:System.Int16>, <xref:System.Int32> <xref:System.Int64> ,,,,<xref:System.SByte> <xref:System.Decimal> <xref:System.UInt16>, <xref:System.UInt32>, )<xref:System.UInt64>, <xref:System.String> aponadto`ResourceTypeCode` ,, i <xref:System.TimeSpan>, również Wyliczenie zawiera wartości pokazane w poniższej tabeli. <xref:System.DateTime></span><span class="sxs-lookup"><span data-stu-id="744c7-252">These include the .NET Framework primitive data types (<xref:System.Boolean>, <xref:System.Byte>, <xref:System.Char>, <xref:System.Decimal>, <xref:System.Double>, <xref:System.Int16>, <xref:System.Int32>, <xref:System.Int64>, <xref:System.Single>, <xref:System.SByte>, <xref:System.UInt16>, <xref:System.UInt32>, <xref:System.UInt64>), as well as <xref:System.String>, <xref:System.DateTime>, and <xref:System.TimeSpan>, In addition, the `ResourceTypeCode` enumeration includes the values shown in the following table.</span></span>  
  
    |<span data-ttu-id="744c7-253">ResourceTypeCode wartość</span><span class="sxs-lookup"><span data-stu-id="744c7-253">ResourceTypeCode value</span></span>|<span data-ttu-id="744c7-254">Opis</span><span class="sxs-lookup"><span data-stu-id="744c7-254">Description</span></span>|  
    |----------------------------|-----------------|  
    |`ResourceTypeCode.ByteArray`|<span data-ttu-id="744c7-255">Dane są tablicą bajtów.</span><span class="sxs-lookup"><span data-stu-id="744c7-255">The data is a byte array.</span></span> <span data-ttu-id="744c7-256">Ten typ danych często wynika z wywołania <xref:System.Resources.ResourceWriter.AddResource%28System.String%2CSystem.Byte%5B%5D%29?displayProperty=nameWithType> metody.</span><span class="sxs-lookup"><span data-stu-id="744c7-256">This data type commonly results from the call to the <xref:System.Resources.ResourceWriter.AddResource%28System.String%2CSystem.Byte%5B%5D%29?displayProperty=nameWithType> method.</span></span>|  
    |`ResourceTypeCode.Null`|<span data-ttu-id="744c7-257">Dane to odwołanie o wartości null.</span><span class="sxs-lookup"><span data-stu-id="744c7-257">The data is a null reference.</span></span> <span data-ttu-id="744c7-258">Ten typ danych jest często wynikiem wywołania <xref:System.Resources.ResourceWriter.AddResource%28System.String%2CSystem.Object%29?displayProperty=nameWithType> metody z obiektem, którego wartość to. `null`</span><span class="sxs-lookup"><span data-stu-id="744c7-258">This data type commonly results from the call to the <xref:System.Resources.ResourceWriter.AddResource%28System.String%2CSystem.Object%29?displayProperty=nameWithType> method with an object whose value is `null`.</span></span>|  
    |`ResourceTypeCode.Stream`|<span data-ttu-id="744c7-259">Dane są przechowywane w strumieniu.</span><span class="sxs-lookup"><span data-stu-id="744c7-259">The data is stored in a stream.</span></span> <span data-ttu-id="744c7-260">Ten typ danych jest często wynikiem wywołania <xref:System.Resources.ResourceWriter.AddResource%28System.String%2CSystem.IO.Stream%29?displayProperty=nameWithType> metody lub. <xref:System.Resources.ResourceWriter.AddResource%28System.String%2CSystem.IO.Stream%2CSystem.Boolean%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="744c7-260">This data type commonly results from the call to the <xref:System.Resources.ResourceWriter.AddResource%28System.String%2CSystem.IO.Stream%29?displayProperty=nameWithType> or <xref:System.Resources.ResourceWriter.AddResource%28System.String%2CSystem.IO.Stream%2CSystem.Boolean%29?displayProperty=nameWithType> method.</span></span>|  
  
     <span data-ttu-id="744c7-261">Przy założeniu, że `resourceData` plik nie został uszkodzony, można go zwykle przekonwertować z tablicy bajtów z powrotem na oryginalną wartość przez <xref:System.BitConverter> wywołanie metody lub. <xref:System.IO.BinaryReader></span><span class="sxs-lookup"><span data-stu-id="744c7-261">Assuming that `resourceData` has not been corrupted, it can usually be converted from a byte array back to its original value by calling a <xref:System.BitConverter> or <xref:System.IO.BinaryReader> method.</span></span>  
  
-   <span data-ttu-id="744c7-262">Ciąg, który zawiera w pełni kwalifikowaną nazwę typu, którego serializowane dane są przypisane do `resourceData` argumentu (na `System.String`przykład).</span><span class="sxs-lookup"><span data-stu-id="744c7-262">A string that contains the fully qualified name of the type whose serialized data is assigned to the `resourceData` argument (for example, `System.String`).</span></span> <span data-ttu-id="744c7-263">Ponadto dla typów, które nie są częścią biblioteki klas .NET Framework, ciąg zawiera nazwę, wersję, kulturę i klucz publiczny zestawu, który zawiera typ.</span><span class="sxs-lookup"><span data-stu-id="744c7-263">In addition, for types that are not part of the .NET Framework class library, the string includes the name, version, culture, and public key of the assembly that contains the type.</span></span> <span data-ttu-id="744c7-264">Na przykład następujący ciąg wskazuje, że zserializowane dane reprezentują wystąpienie `Person` typu `Extensions` w przestrzeni nazw, które znajduje się w wersji 1,0 zestawu o nazwie Narzędzie, które nie ma klucza publicznego i nie wykryto kultury.</span><span class="sxs-lookup"><span data-stu-id="744c7-264">For example, the following string indicates that the serialized data represents an instance of the `Person` type in the `Extensions` namespace, which is found in version 1.0 of an assembly named Utility that has no public key and no designated culture.</span></span>  
  
     `Extensions.Person, Utility, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null`  
  
     <span data-ttu-id="744c7-265">Przy założeniu, że `resourceData` nie została uszkodzona i że typ źródła jest dostępny, `resourceData` można go przekonwertować z tablicy bajtowej z powrotem na oryginalną wartość, konwertując tablicę <xref:System.IO.Stream> bajtów na obiekt i przekazując strumień do <xref:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter.Deserialize%2A?displayProperty=nameWithType>Metoda.</span><span class="sxs-lookup"><span data-stu-id="744c7-265">Assuming that `resourceData` has not been corrupted and that the source type is available, `resourceData` can be converted from a byte array back to its original value by converting the byte array to a <xref:System.IO.Stream> object and passing the stream to the <xref:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter.Deserialize%2A?displayProperty=nameWithType> method.</span></span>  
  
-   <span data-ttu-id="744c7-266">Ciąg używany do opisywania typu danych w <xref:System.Resources.ResourceWriter.AddResourceData%2A?displayProperty=nameWithType> wywołaniu metody.</span><span class="sxs-lookup"><span data-stu-id="744c7-266">The string used to describe the data type in the <xref:System.Resources.ResourceWriter.AddResourceData%2A?displayProperty=nameWithType> method call.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="744c7-267"><paramref name="resourceName" />jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="744c7-267"><paramref name="resourceName" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="744c7-268"><paramref name="resourceName" />nie istnieje.</span><span class="sxs-lookup"><span data-stu-id="744c7-268"><paramref name="resourceName" /> does not exist.</span></span></exception>
        <exception cref="T:System.BadImageFormatException"><span data-ttu-id="744c7-269"><paramref name="resourceName" />ma nieprawidłowy typ.</span><span class="sxs-lookup"><span data-stu-id="744c7-269"><paramref name="resourceName" /> has an invalid type.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="744c7-270">Pobrane dane zasobu są uszkodzone.</span><span class="sxs-lookup"><span data-stu-id="744c7-270">The retrieved resource data is corrupt.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="744c7-271">Bieżący <see cref="T:System.Resources.ResourceReader" /> obiekt nie został zainicjowany, prawdopodobnie dlatego, że jest zamknięty.</span><span class="sxs-lookup"><span data-stu-id="744c7-271">The current <see cref="T:System.Resources.ResourceReader" /> object is not initialized, probably because it is closed.</span></span></exception>
        <altmember cref="M:System.Resources.ResourceWriter.AddResourceData(System.String,System.String,System.Byte[])" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResourceReader.System#Collections#IEnumerable#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IEnumerator ^ System.Collections.IEnumerable.GetEnumerator() = System::Collections::IEnumerable::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Resources.ResourceManager</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Resources.Reader</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="744c7-272">Zwraca moduł wyliczający dla <see cref="T:System.Resources.ResourceReader" /> tego obiektu.</span><span class="sxs-lookup"><span data-stu-id="744c7-272">Returns an enumerator for this <see cref="T:System.Resources.ResourceReader" /> object.</span></span></summary>
        <returns><span data-ttu-id="744c7-273">Moduł wyliczający dla <see cref="T:System.Resources.ResourceReader" /> tego obiektu.</span><span class="sxs-lookup"><span data-stu-id="744c7-273">An enumerator for this <see cref="T:System.Resources.ResourceReader" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="744c7-274"><xref:System.Resources.ResourceReader.System%23Collections%23IEnumerable%23GetEnumerator%2A?displayProperty=nameWithType>jest jawną implementacją interfejsu.</span><span class="sxs-lookup"><span data-stu-id="744c7-274"><xref:System.Resources.ResourceReader.System%23Collections%23IEnumerable%23GetEnumerator%2A?displayProperty=nameWithType> is an explicit interface implementation.</span></span> <span data-ttu-id="744c7-275">Może być używana tylko wtedy, <xref:System.Resources.ResourceReader> gdy wystąpienie jest rzutowane <xref:System.Collections.IEnumerable> do interfejsu.</span><span class="sxs-lookup"><span data-stu-id="744c7-275">It can be used only when the <xref:System.Resources.ResourceReader> instance is cast to an <xref:System.Collections.IEnumerable> interface.</span></span> <span data-ttu-id="744c7-276">Zalecane podejście do wyliczania zasobów w pliku Resources polega na wywołaniu <xref:System.Collections.IEnumerator.MoveNext%2A> metody <xref:System.Collections.IDictionaryEnumerator> obiektu zwróconego przez <xref:System.Resources.ResourceReader.GetEnumerator%2A?displayProperty=nameWithType> metodę.</span><span class="sxs-lookup"><span data-stu-id="744c7-276">The recommended approach to enumerating the resources in a .resources file is to call the <xref:System.Collections.IEnumerator.MoveNext%2A> method of the <xref:System.Collections.IDictionaryEnumerator> object returned by the <xref:System.Resources.ResourceReader.GetEnumerator%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="744c7-277">Czytnik został już zamknięty i nie można uzyskać do niego dostępu.</span><span class="sxs-lookup"><span data-stu-id="744c7-277">The reader has already been closed and cannot be accessed.</span></span></exception>
        <altmember cref="T:System.Collections.IDictionary" />
        <altmember cref="T:System.Collections.IDictionaryEnumerator" />
      </Docs>
    </Member>
    <Member MemberName="System.IDisposable.Dispose">
      <MemberSignature Language="C#" Value="void IDisposable.Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.IDisposable.Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResourceReader.System#IDisposable#Dispose" />
      <MemberSignature Language="VB.NET" Value="Sub Dispose () Implements IDisposable.Dispose" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.IDisposable.Dispose() = IDisposable::Dispose;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Resources.ResourceManager</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Resources.Reader</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="744c7-278">Zwalnia zasoby używane przez <see cref="T:System.Resources.ResourceReader" />program.</span><span class="sxs-lookup"><span data-stu-id="744c7-278">Releases the resources used by the <see cref="T:System.Resources.ResourceReader" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  
<span data-ttu-id="744c7-279">Wywołanie metody Dispose pozwala na przydzielenie zasobów <xref:System.Resources.ResourceReader> używanych przez program do innych celów.</span><span class="sxs-lookup"><span data-stu-id="744c7-279">Calling Dispose allows the resources used by the <xref:System.Resources.ResourceReader> to be reallocated for other purposes.</span></span> <span data-ttu-id="744c7-280">Aby uzyskać więcej informacji na temat usuwania, zobacz [Oczyszczanie zasobów niezarządzanych](~/docs/standard/garbage-collection/unmanaged.md).</span><span class="sxs-lookup"><span data-stu-id="744c7-280">For more information about Dispose, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md).</span></span>

## Examples  
<span data-ttu-id="744c7-281">Poniższy przykład kodu przechodzi przez zasoby pliku i drukuje wszystkie znalezione pary klucz/wartość.</span><span class="sxs-lookup"><span data-stu-id="744c7-281">The following code example moves through a file's resources and prints out all the key/value pairs it finds.</span></span> <span data-ttu-id="744c7-282">Następnie kod używa metody theIDisposable. Dispose, aby zamknąć <xref:System.Resources.ResourceReader> i zwolnić wszystkie używane przez niego zasoby.</span><span class="sxs-lookup"><span data-stu-id="744c7-282">The code then uses theIDisposable.Dispose method to shut down the <xref:System.Resources.ResourceReader> and to release all resources used by it.</span></span>

```vb
Imports System
Imports System.Resources
Imports System.Collections

Public Class ReadResources

    Public Shared Sub Main(args() As String)
        ' Create a resource reader for items.resources 
        ' and get an enumerator to iterate through the file. 
        Dim reader As IResourceReader = New ResourceReader("items.resources")
        Dim en As IDictionaryEnumerator = reader.GetEnumerator()

        ' Iterate through the file, printing the key and value pairs. 
        While en.MoveNext()
            Console.WriteLine()
            Console.WriteLine("Name: {0}", en.Key)
            Console.WriteLine("Value: {0}", en.Value)
        End While 

        ' Clean up all resources associated with the reader. 
        ' Calling Dispose is equivalent to calling Close.
        reader.Dispose()
    End Sub 

End Class
```

```csharp
using System;
using System.Resources;
using System.Collections;

public class ReadResources 
{
    public static void Main(string[] args) 
    {
        // Create a resource reader for items.resources 
        // and get an enumerator to iterate through the file.
        IResourceReader reader = new ResourceReader("items.resources");
        IDictionaryEnumerator en = reader.GetEnumerator();

        // Iterate through the file, printing the key/value pairs. 
        while (en.MoveNext()) 
        {
            Console.WriteLine();
            Console.WriteLine("Name: {0}", en.Key);
            Console.WriteLine("Value: {0}", en.Value);
        }

        // Clean up all resources associated with the reader. 
        // Calling Dispose is equivalent to calling Close.
        reader.Dispose();
    }
}
```

```cpp
using namespace System;
using namespace System::Resources;
using namespace System::Collections;
int main()
{
   array<String^>^args = Environment::GetCommandLineArgs();

   // Create a resource reader for items.resources 
   // and get an enumerator to iterate through the file.
   IResourceReader^ reader = gcnew ResourceReader( "items.resources" );
   IDictionaryEnumerator^ en = reader->GetEnumerator();

   // Iterate through the file, printing the key/value pairs. 
   while ( en->MoveNext() )
   {
      Console::WriteLine();
      Console::WriteLine( "Name: {0}", en->Key );
      Console::WriteLine( "Value: {0}", en->Value );
   }

   // Clean up all resources associated with the reader. 
   // Calling the destructor is equivalent to calling Close.
   reader->~IResourceReader();
}
```

]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
