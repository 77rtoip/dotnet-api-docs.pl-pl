<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="MultipartContent.xml" source-language="en-US" target-language="pl-PL">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac50d1bfb4e5775f2b08068e63abd3e2bb1a8cf3ae7.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">0d1bfb4e5775f2b08068e63abd3e2bb1a8cf3ae7</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Net.Http.MultipartContent">
          <source>Provides a collection of <ph id="ph1">&lt;see cref="T:System.Net.Http.HttpContent" /&gt;</ph> objects that get serialized using the multipart/* content type specification.</source>
          <target state="translated">Udostępnia kolekcję <ph id="ph1">&lt;see cref="T:System.Net.Http.HttpContent" /&gt;</ph> obiektów, które podlegają serializacji z użyciem multipart / * zawartości specyfikacji typu.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Net.Http.MultipartContent">
          <source>Creates a new instance of the <ph id="ph1">&lt;see cref="T:System.Net.Http.MultipartContent" /&gt;</ph> class.</source>
          <target state="translated">Tworzy nowe wystąpienie klasy <ph id="ph1">&lt;see cref="T:System.Net.Http.MultipartContent" /&gt;</ph> klasy.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" uid="M:System.Net.Http.MultipartContent.#ctor">
          <source>Creates a new instance of the <ph id="ph1">&lt;see cref="T:System.Net.Http.MultipartContent" /&gt;</ph> class.</source>
          <target state="translated">Tworzy nowe wystąpienie klasy <ph id="ph1">&lt;see cref="T:System.Net.Http.MultipartContent" /&gt;</ph> klasy.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" uid="M:System.Net.Http.MultipartContent.#ctor(System.String)">
          <source>The subtype of the multipart content.</source>
          <target state="translated">Podtyp wieloczęściowej zawartości.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" uid="M:System.Net.Http.MultipartContent.#ctor(System.String)">
          <source>Creates a new instance of the <ph id="ph1">&lt;see cref="T:System.Net.Http.MultipartContent" /&gt;</ph> class.</source>
          <target state="translated">Tworzy nowe wystąpienie klasy <ph id="ph1">&lt;see cref="T:System.Net.Http.MultipartContent" /&gt;</ph> klasy.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="M:System.Net.Http.MultipartContent.#ctor(System.String)">
          <source>The <ph id="ph1">&lt;paramref name="subtype" /&gt;</ph> was <ph id="ph2">&lt;see langword="null" /&gt;</ph> or contains only white space characters.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="subtype" /&gt;</ph> Został <ph id="ph2">&lt;see langword="null" /&gt;</ph> lub zawiera tylko białe znaki.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="M:System.Net.Http.MultipartContent.#ctor(System.String,System.String)">
          <source>The subtype of the multipart content.</source>
          <target state="translated">Podtyp wieloczęściowej zawartości.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:System.Net.Http.MultipartContent.#ctor(System.String,System.String)">
          <source>The boundary string for the multipart content.</source>
          <target state="translated">Ciąg granic zawartość wieloczęściowej wiadomości.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.Net.Http.MultipartContent.#ctor(System.String,System.String)">
          <source>Creates a new instance of the <ph id="ph1">&lt;see cref="T:System.Net.Http.MultipartContent" /&gt;</ph> class.</source>
          <target state="translated">Tworzy nowe wystąpienie klasy <ph id="ph1">&lt;see cref="T:System.Net.Http.MultipartContent" /&gt;</ph> klasy.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.Net.Http.MultipartContent.#ctor(System.String,System.String)">
          <source>The <ph id="ph1">&lt;paramref name="subtype" /&gt;</ph> was <ph id="ph2">&lt;see langword="null" /&gt;</ph> or an empty string.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="subtype" /&gt;</ph> Został <ph id="ph2">&lt;see langword="null" /&gt;</ph> lub ciąg pusty.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.Net.Http.MultipartContent.#ctor(System.String,System.String)">
          <source>The <ph id="ph1">&lt;paramref name="boundary" /&gt;</ph> was <ph id="ph2">&lt;see langword="null" /&gt;</ph> or contains only white space characters.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="boundary" /&gt;</ph> Został <ph id="ph2">&lt;see langword="null" /&gt;</ph> lub zawiera tylko białe znaki.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.Net.Http.MultipartContent.#ctor(System.String,System.String)">
          <source>-or-</source>
          <target state="translated">—lub—</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.Net.Http.MultipartContent.#ctor(System.String,System.String)">
          <source>The <ph id="ph1">&lt;paramref name="boundary" /&gt;</ph> ends with a space character.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="boundary" /&gt;</ph> Kończy się spacją.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.Net.Http.MultipartContent.#ctor(System.String,System.String)">
          <source>The length of the <ph id="ph1">&lt;paramref name="boundary" /&gt;</ph> was greater than 70.</source>
          <target state="translated">Długość <ph id="ph1">&lt;paramref name="boundary" /&gt;</ph> była większa niż 70.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.Net.Http.MultipartContent.Add(System.Net.Http.HttpContent)">
          <source>The HTTP content to add to the collection.</source>
          <target state="translated">Zawartość HTTP, które chcesz dodać do kolekcji.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.Net.Http.MultipartContent.Add(System.Net.Http.HttpContent)">
          <source>Add multipart HTTP content to a collection of <ph id="ph1">&lt;see cref="T:System.Net.Http.HttpContent" /&gt;</ph> objects that get serialized using the multipart/* content type specification.</source>
          <target state="translated">Dodawanie zawartości HTTP wieloczęściowego do kolekcji <ph id="ph1">&lt;see cref="T:System.Net.Http.HttpContent" /&gt;</ph> obiektów, które podlegają serializacji z użyciem multipart / * zawartości specyfikacji typu.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Net.Http.MultipartContent.Add(System.Net.Http.HttpContent)">
          <source>The <ph id="ph1">&lt;paramref name="content" /&gt;</ph> was <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="content" /&gt;</ph> Został <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.Net.Http.MultipartContent.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to release both managed and unmanaged resources; <ph id="ph2">&lt;see langword="false" /&gt;</ph> to releases only unmanaged resources.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> Aby zwolnić zasoby zarządzane i niezarządzane; <ph id="ph2">&lt;see langword="false" /&gt;</ph> powoduje zwolnienie tylko niezarządzane zasoby.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Net.Http.MultipartContent.Dispose(System.Boolean)">
          <source>Releases the unmanaged resources used by the <ph id="ph1">&lt;see cref="T:System.Net.Http.MultipartContent" /&gt;</ph> and optionally disposes of the managed resources.</source>
          <target state="translated">Zwalnia zasoby niezarządzane używane przez <ph id="ph1">&lt;see cref="T:System.Net.Http.MultipartContent" /&gt;</ph> i opcjonalnie usuwa zarządzane zasoby.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Http.MultipartContent.Dispose(System.Boolean)">
          <source>This method is called by the public <ph id="ph1">`Dispose()`</ph> method and the <ph id="ph2">&lt;xref:System.Object.Finalize%2A&gt;</ph> method.</source>
          <target state="translated">Ta metoda jest wywoływana przez metodę publiczną <ph id="ph1">`Dispose()`</ph> — metoda i <ph id="ph2">&lt;xref:System.Object.Finalize%2A&gt;</ph> metody.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Http.MultipartContent.Dispose(System.Boolean)">
          <source><ph id="ph1">`Dispose()`</ph> invokes the protected <ph id="ph2">`Dispose(Boolean)`</ph> method with the <ph id="ph3">`disposing`</ph> parameter set to <ph id="ph4">`true`</ph>.</source>
          <target state="translated"><ph id="ph1">`Dispose()`</ph> wywołuje chronioną metodę <ph id="ph2">`Dispose(Boolean)`</ph> metody z <ph id="ph3">`disposing`</ph> ustawiono parametr <ph id="ph4">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Http.MultipartContent.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;xref:System.Object.Finalize%2A&gt;</ph> invokes <ph id="ph2">`Dispose`</ph> with <ph id="ph3">`disposing`</ph> set to <ph id="ph4">`false`</ph>.When the <ph id="ph5">`disposing`</ph> parameter is <ph id="ph6">`true`</ph>, this method releases all resources held by any managed objects that this <ph id="ph7">&lt;xref:System.Net.Http.MultipartContent&gt;</ph> references.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Object.Finalize%2A&gt;</ph> wywołuje <ph id="ph2">`Dispose`</ph> z <ph id="ph3">`disposing`</ph> ustawioną <ph id="ph4">`false`</ph>. Gdy <ph id="ph5">`disposing`</ph> parametr jest <ph id="ph6">`true`</ph>, ta metoda zwalnia wszystkie zasoby zajmowane przez wszelkie obiekty zarządzane przez to <ph id="ph7">&lt;xref:System.Net.Http.MultipartContent&gt;</ph> odwołania.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Http.MultipartContent.Dispose(System.Boolean)">
          <source>This method invokes the <ph id="ph1">`Dispose()`</ph> method of each referenced object.</source>
          <target state="translated">Ta metoda wywołuje <ph id="ph1">`Dispose()`</ph> metody każdego odwołuje się do obiektu.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Net.Http.MultipartContent.GetEnumerator">
          <source>Returns an enumerator that iterates through the collection of <ph id="ph1">&lt;see cref="T:System.Net.Http.HttpContent" /&gt;</ph> objects that get serialized using the multipart/* content type specification..</source>
          <target state="translated">Zwraca moduł wyliczający, który iteruje po kolekcji <ph id="ph1">&lt;see cref="T:System.Net.Http.HttpContent" /&gt;</ph> obiektów, które podlegają serializacji z użyciem multipart / * zawartości specyfikacji typu.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Net.Http.MultipartContent.GetEnumerator">
          <source>An object that can be used to iterate through the collection.</source>
          <target state="translated">Obiekt, który może służyć do iterowania po kolekcji.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Http.MultipartContent.GetEnumerator">
          <source>The foreach statement of the C# language (For Each in Visual Basic) hides the complexity of the enumerators.</source>
          <target state="translated">Instrukcja foreach języka C# (dla każdej z nich w Visual Basic) ukrywa złożoność wyliczenia.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Http.MultipartContent.GetEnumerator">
          <source>Therefore, using foreach is recommended, instead of directly manipulating the enumerator.</source>
          <target state="translated">W związku z tym za pomocą instrukcji foreach jest zalecane, zamiast bezpośrednie manipulowanie modułu wyliczającego.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Http.MultipartContent.GetEnumerator">
          <source>Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</source>
          <target state="translated">Moduły wyliczające mogą służyć do odczytu danych w kolekcji, ale nie można za ich pomocą modyfikować kolekcji źródłowej.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Http.MultipartContent.GetEnumerator">
          <source>Initially, the enumerator is positioned before the first element in the collection.</source>
          <target state="translated">Początkowo moduł wyliczający jest umieszczony przed pierwszym elementem w kolekcji.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Net.Http.MultipartContent.SerializeToStreamAsync(System.IO.Stream,System.Net.TransportContext)">
          <source>The target stream.</source>
          <target state="translated">Strumień docelowy.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Net.Http.MultipartContent.SerializeToStreamAsync(System.IO.Stream,System.Net.TransportContext)">
          <source>Information about the transport (channel binding token, for example).</source>
          <target state="translated">Informacje o transporcie (na przykład powiązanie tokenu, kanał).</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Net.Http.MultipartContent.SerializeToStreamAsync(System.IO.Stream,System.Net.TransportContext)">
          <source>This parameter may be <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Ten parametr może mieć <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Net.Http.MultipartContent.SerializeToStreamAsync(System.IO.Stream,System.Net.TransportContext)">
          <source>Serialize the multipart HTTP content to a stream as an asynchronous operation.</source>
          <target state="translated">Serializuje zawartość HTTP wieloczęściowego strumienia jako operację asynchroniczną.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Net.Http.MultipartContent.SerializeToStreamAsync(System.IO.Stream,System.Net.TransportContext)">
          <source>The task object representing the asynchronous operation.</source>
          <target state="translated">Obiekt zadania reprezentujący operację asynchroniczną.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Http.MultipartContent.SerializeToStreamAsync(System.IO.Stream,System.Net.TransportContext)">
          <source>This operation will not block.</source>
          <target state="translated">Ta operacja nie będzie blokować.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Http.MultipartContent.SerializeToStreamAsync(System.IO.Stream,System.Net.TransportContext)">
          <source>The returned <ph id="ph1">&lt;xref:System.Threading.Tasks.Task%601&gt;</ph> object will complete after all of the content has been serialized to the target stream.</source>
          <target state="translated">Zwrócona <ph id="ph1">&lt;xref:System.Threading.Tasks.Task%601&gt;</ph> obiektu ukończy po całej zawartości została serializowany w strumieniu docelowej.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Net.Http.MultipartContent.System#Collections#IEnumerable#GetEnumerator">
          <source>The explicit implementation of the <ph id="ph1">&lt;see cref="M:System.Net.Http.MultipartContent.GetEnumerator" /&gt;</ph> method.</source>
          <target state="translated">Jawna implementacja <ph id="ph1">&lt;see cref="M:System.Net.Http.MultipartContent.GetEnumerator" /&gt;</ph> metody.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Net.Http.MultipartContent.System#Collections#IEnumerable#GetEnumerator">
          <source>An object that can be used to iterate through the collection.</source>
          <target state="translated">Obiekt, który może służyć do iterowania po kolekcji.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Net.Http.MultipartContent.TryComputeLength(System.Int64@)">
          <source>The length in bytes of the HHTP content.</source>
          <target state="translated">Długość w bajtach zawartości HHTP.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Net.Http.MultipartContent.TryComputeLength(System.Int64@)">
          <source>Determines whether the HTTP multipart content has a valid length in bytes.</source>
          <target state="translated">Określa, czy zawartość wieloczęściowej wiadomości HTTP ma prawidłową długość w bajtach.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Net.Http.MultipartContent.TryComputeLength(System.Int64@)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="length" /&gt;</ph> is a valid length; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> Jeśli <ph id="ph2">&lt;paramref name="length" /&gt;</ph> jest prawidłowa; w przeciwnym razie <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Http.MultipartContent.TryComputeLength(System.Int64@)">
          <source>The <ph id="ph1">&lt;xref:System.Net.Http.MultipartContent.TryComputeLength%2A&gt;</ph> method gives HTTP multipart content the ability to calculate the content length.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.Http.MultipartContent.TryComputeLength%2A&gt;</ph> Metody umożliwia to zawartość wieloczęściowej wiadomości HTTP obliczania długości zawartości.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Http.MultipartContent.TryComputeLength(System.Int64@)">
          <source>This is useful for content types which are able to easily calculate the content length.</source>
          <target state="translated">Jest to przydatne dla typów zawartości, które mogą łatwo obliczania długości zawartości.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Http.MultipartContent.TryComputeLength(System.Int64@)">
          <source>If computing the content length is not possible or expensive (would require the system to buffer the whole content where the serialization would be expensive or require the system to allocate a lot of memory), this method can return <ph id="ph1">`false`</ph>.</source>
          <target state="translated">Jeśli obliczania długości zawartości nie jest możliwe lub kosztowne (wymaga systemu, aby buforować zawartość gdzie serializacji może być kosztowne lub wymagają systemu można przydzielić dużej ilości pamięci), ta metoda może zwracać <ph id="ph1">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Http.MultipartContent.TryComputeLength(System.Int64@)">
          <source>If this method returns <ph id="ph1">`false`</ph>, this implies that either chunked transfer is needed or the content must get buffered before being sent to the server.</source>
          <target state="translated">Jeśli ta metoda zwraca <ph id="ph1">`false`</ph>, oznacza to, że jest wymagana transferu pakietowego lub zawartość należy pobrać buforowane przed wysłaniem do serwera.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>