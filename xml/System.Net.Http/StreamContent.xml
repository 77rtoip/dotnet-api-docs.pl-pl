<Type Name="StreamContent" FullName="System.Net.Http.StreamContent">
  <Metadata><Meta Name="ms.openlocfilehash" Value="12f5b58e94622d12c337e0032ec9a8595b70bb03" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69114730" /></Metadata><TypeSignature Language="C#" Value="public class StreamContent : System.Net.Http.HttpContent" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit StreamContent extends System.Net.Http.HttpContent" />
  <TypeSignature Language="DocId" Value="T:System.Net.Http.StreamContent" />
  <TypeSignature Language="VB.NET" Value="Public Class StreamContent&#xA;Inherits HttpContent" />
  <TypeSignature Language="C++ CLI" Value="public ref class StreamContent : System::Net::Http::HttpContent" />
  <TypeSignature Language="F#" Value="type StreamContent = class&#xA;    inherit HttpContent" />
  <AssemblyInfo>
    <AssemblyName>System.Net.Http</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Net.Http.HttpContent</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="7d6f1-101">Udostępnia zawartość HTTP na podstawie strumienia.</span><span class="sxs-lookup"><span data-stu-id="7d6f1-101">Provides HTTP content based on a stream.</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="7d6f1-102">Tworzy nowe wystąpienie <see cref="T:System.Net.Http.StreamContent" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="7d6f1-102">Creates a new instance of the <see cref="T:System.Net.Http.StreamContent" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StreamContent (System.IO.Stream content);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream content) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.StreamContent.#ctor(System.IO.Stream)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (content As Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; StreamContent(System::IO::Stream ^ content);" />
      <MemberSignature Language="F#" Value="new System.Net.Http.StreamContent : System.IO.Stream -&gt; System.Net.Http.StreamContent" Usage="new System.Net.Http.StreamContent content" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="content" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="content"><span data-ttu-id="7d6f1-103">Zawartość użyta do zainicjowania <see cref="T:System.Net.Http.StreamContent" />.</span><span class="sxs-lookup"><span data-stu-id="7d6f1-103">The content used to initialize the <see cref="T:System.Net.Http.StreamContent" />.</span></span></param>
        <summary><span data-ttu-id="7d6f1-104">Tworzy nowe wystąpienie <see cref="T:System.Net.Http.StreamContent" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="7d6f1-104">Creates a new instance of the <see cref="T:System.Net.Http.StreamContent" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StreamContent (System.IO.Stream content, int bufferSize);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream content, int32 bufferSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.StreamContent.#ctor(System.IO.Stream,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (content As Stream, bufferSize As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; StreamContent(System::IO::Stream ^ content, int bufferSize);" />
      <MemberSignature Language="F#" Value="new System.Net.Http.StreamContent : System.IO.Stream * int -&gt; System.Net.Http.StreamContent" Usage="new System.Net.Http.StreamContent (content, bufferSize)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="content" Type="System.IO.Stream" />
        <Parameter Name="bufferSize" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="content"><span data-ttu-id="7d6f1-105">Zawartość użyta do zainicjowania <see cref="T:System.Net.Http.StreamContent" />.</span><span class="sxs-lookup"><span data-stu-id="7d6f1-105">The content used to initialize the <see cref="T:System.Net.Http.StreamContent" />.</span></span></param>
        <param name="bufferSize"><span data-ttu-id="7d6f1-106">Rozmiar (w bajtach) bufora dla <see cref="T:System.Net.Http.StreamContent" />.</span><span class="sxs-lookup"><span data-stu-id="7d6f1-106">The size, in bytes, of the buffer for the <see cref="T:System.Net.Http.StreamContent" />.</span></span></param>
        <summary><span data-ttu-id="7d6f1-107">Tworzy nowe wystąpienie <see cref="T:System.Net.Http.StreamContent" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="7d6f1-107">Creates a new instance of the <see cref="T:System.Net.Http.StreamContent" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="7d6f1-108"><paramref name="content" /> Was .<see langword="null" /></span><span class="sxs-lookup"><span data-stu-id="7d6f1-108">The <paramref name="content" /> was <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="7d6f1-109"><paramref name="bufferSize" /> Była mniejsza lub równa zero.</span><span class="sxs-lookup"><span data-stu-id="7d6f1-109">The <paramref name="bufferSize" /> was less than or equal to zero.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CreateContentReadStreamAsync">
      <MemberSignature Language="C#" Value="protected override System.Threading.Tasks.Task&lt;System.IO.Stream&gt; CreateContentReadStreamAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Threading.Tasks.Task`1&lt;class System.IO.Stream&gt; CreateContentReadStreamAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.StreamContent.CreateContentReadStreamAsync" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateContentReadStreamAsync () As Task(Of Stream)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Threading::Tasks::Task&lt;System::IO::Stream ^&gt; ^ CreateContentReadStreamAsync();" />
      <MemberSignature Language="F#" Value="override this.CreateContentReadStreamAsync : unit -&gt; System.Threading.Tasks.Task&lt;System.IO.Stream&gt;" Usage="streamContent.CreateContentReadStreamAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.IO.Stream&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="7d6f1-110">Zapisz zawartość strumienia HTTP w strumieniu pamięci w postaci operacji asynchronicznej.</span><span class="sxs-lookup"><span data-stu-id="7d6f1-110">Write the HTTP stream content to a memory stream as an asynchronous operation.</span></span></summary>
        <returns><span data-ttu-id="7d6f1-111">Obiekt zadania reprezentujący operację asynchroniczną.</span><span class="sxs-lookup"><span data-stu-id="7d6f1-111">The task object representing the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7d6f1-112">Ta operacja nie będzie blokować.</span><span class="sxs-lookup"><span data-stu-id="7d6f1-112">This operation will not block.</span></span> <span data-ttu-id="7d6f1-113">Zwrócony <xref:System.Threading.Tasks.Task%601> obiekt zostanie ukończony po zapisaniu całej zawartości w strumieniu pamięci.</span><span class="sxs-lookup"><span data-stu-id="7d6f1-113">The returned <xref:System.Threading.Tasks.Task%601> object will complete after all of the content has been written to the memory stream.</span></span>  
  
 <span data-ttu-id="7d6f1-114"><xref:System.Net.Http.StreamContent.CreateContentReadStreamAsync%2A> Metoda buforuje zawartość do strumienia pamięci.</span><span class="sxs-lookup"><span data-stu-id="7d6f1-114">The <xref:System.Net.Http.StreamContent.CreateContentReadStreamAsync%2A> method buffers the content to a memory stream.</span></span> <span data-ttu-id="7d6f1-115">Klasy pochodne mogą przesłonić to zachowanie, jeśli istnieje lepszy sposób na pobranie zawartości jako strumienia.</span><span class="sxs-lookup"><span data-stu-id="7d6f1-115">Derived classes can override this behavior if there is a better way to retrieve the content as stream.</span></span> <span data-ttu-id="7d6f1-116">Na przykład tablica bajtowa lub ciąg może korzystać z bardziej wydajnej metody, takiej jak otoka tylko <xref:System.IO.MemoryStream> do odczytu w bajtach lub ciągu.)</span><span class="sxs-lookup"><span data-stu-id="7d6f1-116">For example, a byte array or a string could use a more efficient method way such as wrapping a read-only <xref:System.IO.MemoryStream> around the bytes or string.)</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.StreamContent.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="streamContent.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing"><span data-ttu-id="7d6f1-117"><see langword="true" />Aby zwolnić zasoby zarządzane i niezarządzane; <see langword="false" /> zwalnia tylko niezarządzane zasoby.</span><span class="sxs-lookup"><span data-stu-id="7d6f1-117"><see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to releases only unmanaged resources.</span></span></param>
        <summary><span data-ttu-id="7d6f1-118">Zwalnia niezarządzane zasoby używane przez <see cref="T:System.Net.Http.StreamContent" /> i opcjonalnie usuwa zarządzane zasoby.</span><span class="sxs-lookup"><span data-stu-id="7d6f1-118">Releases the unmanaged resources used by the <see cref="T:System.Net.Http.StreamContent" /> and optionally disposes of the managed resources.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7d6f1-119">Ta metoda jest wywoływana przez metodę publiczną `Dispose()` <xref:System.Object.Finalize%2A> i metodę.</span><span class="sxs-lookup"><span data-stu-id="7d6f1-119">This method is called by the public `Dispose()` method and the <xref:System.Object.Finalize%2A> method.</span></span> <span data-ttu-id="7d6f1-120">`Dispose()`wywołuje metodę chronioną `Dispose(Boolean)` `disposing` z parametrem ustawionym `true`na.</span><span class="sxs-lookup"><span data-stu-id="7d6f1-120">`Dispose()` invokes the protected `Dispose(Boolean)` method with the `disposing` parameter set to `true`.</span></span> <span data-ttu-id="7d6f1-121"><xref:System.Object.Finalize%2A>wywołuje `Dispose` `false`z `disposing` ustawionym na. Gdy parametr ma wartość `true`, ta metoda zwalnia wszystkie zasoby przechowywane przez wszystkie obiekty zarządzane, do <xref:System.Net.Http.StreamContent> których odwołują się te odwołania. `disposing`</span><span class="sxs-lookup"><span data-stu-id="7d6f1-121"><xref:System.Object.Finalize%2A> invokes `Dispose` with `disposing` set to `false`.When the `disposing` parameter is `true`, this method releases all resources held by any managed objects that this <xref:System.Net.Http.StreamContent> references.</span></span> <span data-ttu-id="7d6f1-122">Ta metoda wywołuje `Dispose()` metodę każdego przywoływanego obiektu.</span><span class="sxs-lookup"><span data-stu-id="7d6f1-122">This method invokes the `Dispose()` method of each referenced object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SerializeToStreamAsync">
      <MemberSignature Language="C#" Value="protected internal override System.Threading.Tasks.Task SerializeToStreamAsync (System.IO.Stream stream, System.Net.TransportContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance class System.Threading.Tasks.Task SerializeToStreamAsync(class System.IO.Stream stream, class System.Net.TransportContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.StreamContent.SerializeToStreamAsync(System.IO.Stream,System.Net.TransportContext)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override System::Threading::Tasks::Task ^ SerializeToStreamAsync(System::IO::Stream ^ stream, System::Net::TransportContext ^ context);" />
      <MemberSignature Language="F#" Value="override this.SerializeToStreamAsync : System.IO.Stream * System.Net.TransportContext -&gt; System.Threading.Tasks.Task" Usage="streamContent.SerializeToStreamAsync (stream, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="context" Type="System.Net.TransportContext" />
      </Parameters>
      <Docs>
        <param name="stream"><span data-ttu-id="7d6f1-123">Strumień docelowy.</span><span class="sxs-lookup"><span data-stu-id="7d6f1-123">The target stream.</span></span></param>
        <param name="context"><span data-ttu-id="7d6f1-124">Informacje o transportie (na przykład token powiązania kanału).</span><span class="sxs-lookup"><span data-stu-id="7d6f1-124">Information about the transport (channel binding token, for example).</span></span> <span data-ttu-id="7d6f1-125">Ten parametr może być <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="7d6f1-125">This parameter may be <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="7d6f1-126">Serializacja zawartości HTTP do strumienia jako operacji asynchronicznej.</span><span class="sxs-lookup"><span data-stu-id="7d6f1-126">Serialize the HTTP content to a stream as an asynchronous operation.</span></span></summary>
        <returns><span data-ttu-id="7d6f1-127">Obiekt zadania reprezentujący operację asynchroniczną.</span><span class="sxs-lookup"><span data-stu-id="7d6f1-127">The task object representing the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7d6f1-128">Ta operacja nie będzie blokować.</span><span class="sxs-lookup"><span data-stu-id="7d6f1-128">This operation will not block.</span></span> <span data-ttu-id="7d6f1-129">Zwrócony <xref:System.Threading.Tasks.Task> obiekt zostanie ukończony po wykonaniu serializacji całej zawartości do strumienia docelowego.</span><span class="sxs-lookup"><span data-stu-id="7d6f1-129">The returned <xref:System.Threading.Tasks.Task> object will complete after all of the content has been serialized to the target stream.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryComputeLength">
      <MemberSignature Language="C#" Value="protected internal override bool TryComputeLength (out long length);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance bool TryComputeLength([out] int64&amp; length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.StreamContent.TryComputeLength(System.Int64@)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Function TryComputeLength (ByRef length As Long) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override bool TryComputeLength([Runtime::InteropServices::Out] long % length);" />
      <MemberSignature Language="F#" Value="override this.TryComputeLength :  -&gt; bool" Usage="streamContent.TryComputeLength length" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="length" Type="System.Int64" RefType="out" />
      </Parameters>
      <Docs>
        <param name="length"><span data-ttu-id="7d6f1-130">Długość w bajtach zawartości strumienia.</span><span class="sxs-lookup"><span data-stu-id="7d6f1-130">The length in bytes of the stream content.</span></span></param>
        <summary><span data-ttu-id="7d6f1-131">Określa, czy zawartość strumienia ma prawidłową długość w bajtach.</span><span class="sxs-lookup"><span data-stu-id="7d6f1-131">Determines whether the stream content has a valid length in bytes.</span></span></summary>
        <returns><span data-ttu-id="7d6f1-132"><see langword="true" />Jeśli <paramref name="length" /> jest prawidłową długością, <see langword="false" />w przeciwnym razie.</span><span class="sxs-lookup"><span data-stu-id="7d6f1-132"><see langword="true" /> if <paramref name="length" /> is a valid length; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7d6f1-133"><xref:System.Net.Http.StreamContent.TryComputeLength%2A> Metoda daje strumieniu http możliwość obliczenia długości zawartości.</span><span class="sxs-lookup"><span data-stu-id="7d6f1-133">The <xref:System.Net.Http.StreamContent.TryComputeLength%2A> method gives HTTP stream content the ability to calculate the content length.</span></span> <span data-ttu-id="7d6f1-134">Jest to przydatne w przypadku typów zawartości, które mogą łatwo obliczyć długość zawartości.</span><span class="sxs-lookup"><span data-stu-id="7d6f1-134">This is useful for content types which are able to easily calculate the content length.</span></span> <span data-ttu-id="7d6f1-135">Jeśli Obliczanie długości zawartości nie jest możliwe lub kosztowne (wymagało, aby system buforuł całą zawartość, w której Serializacja będzie kosztowna lub wymagała systemowego przydzielenia dużej ilości pamięci), ta metoda może `false`zwrócić.</span><span class="sxs-lookup"><span data-stu-id="7d6f1-135">If computing the content length is not possible or expensive (would require the system to buffer the whole content where the serialization would be expensive or require the system to allocate a lot of memory), this method can return `false`.</span></span> <span data-ttu-id="7d6f1-136">Jeśli ta metoda zostanie `false`zwrócona, oznacza to, że wymagany jest transfer fragmentaryczny lub zawartość musi zostać zbuforowana przed wysłaniem do serwera.</span><span class="sxs-lookup"><span data-stu-id="7d6f1-136">If this method returns `false`, this implies that either chunked transfer is needed or the content must get buffered before being sent to the server.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
