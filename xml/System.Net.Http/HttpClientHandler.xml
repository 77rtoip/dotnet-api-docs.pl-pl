<Type Name="HttpClientHandler" FullName="System.Net.Http.HttpClientHandler">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="b644ffc703a15a71a74d5629fc581f4e01102d9a" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36553048" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class HttpClientHandler : System.Net.Http.HttpMessageHandler" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit HttpClientHandler extends System.Net.Http.HttpMessageHandler" />
  <TypeSignature Language="DocId" Value="T:System.Net.Http.HttpClientHandler" />
  <TypeSignature Language="VB.NET" Value="Public Class HttpClientHandler&#xA;Inherits HttpMessageHandler" />
  <TypeSignature Language="C++ CLI" Value="public ref class HttpClientHandler : System::Net::Http::HttpMessageHandler" />
  <TypeSignature Language="F#" Value="type HttpClientHandler = class&#xA;    inherit HttpMessageHandler" />
  <AssemblyInfo>
    <AssemblyName>System.Net.Http</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Net.Http.HttpMessageHandler</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="ea090-101">Domyślny program obsługi komunikatów, używany przez <see cref="T:System.Net.Http.HttpClient" />.</span>
      <span class="sxs-lookup">
        <span data-stu-id="ea090-101">The default message handler used by <see cref="T:System.Net.Http.HttpClient" />.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ea090-102"><xref:System.Net.Http.HttpClientHandler> Klasa i klasy pochodne od niego umożliwia deweloperom konfigurowanie różnych opcji od serwery proxy do uwierzytelniania.</span><span class="sxs-lookup"><span data-stu-id="ea090-102">The <xref:System.Net.Http.HttpClientHandler> class and classes derived from it enable developers to configure a variety of options ranging from proxies to authentication.</span></span>  
  
### <a name="httpclienthandler-in-net-core"></a><span data-ttu-id="ea090-103">HttpClientHandler w .NET Core</span><span class="sxs-lookup"><span data-stu-id="ea090-103">HttpClientHandler in .NET Core</span></span>

<span data-ttu-id="ea090-104">Począwszy od platformy .NET Core 2.1, <xref:System.Net.Http.SocketsHttpHandler?displayProperty=nameWithType> klasy zamiast `HttpClientHandler` udostępnia implementację używane przez HTTP wyższego poziomu sieci interfejsów API.</span><span class="sxs-lookup"><span data-stu-id="ea090-104">Starting with .NET Core 2.1, the <xref:System.Net.Http.SocketsHttpHandler?displayProperty=nameWithType> class instead of `HttpClientHandler` provides the implementation used by higher-level HTTP networking APIs.</span></span> <span data-ttu-id="ea090-105">Można skonfigurować aplikację do używania `HttpClientHandler` zamiast przez wywołanie <xref:System.AppContext.SetSwitch%2A> metody w następujący sposób:</span><span class="sxs-lookup"><span data-stu-id="ea090-105">You can configure your application to use `HttpClientHandler` instead by calling the <xref:System.AppContext.SetSwitch%2A> method as follows:</span></span>

```csharp
AppContext.SetSwitch("System.Net.Http.useSocketsHttpHandler", false);
```
```vb
AppContext.SetSwitch("System.Net.Http.useSocketsHttpHandler", False)
``` 
  
## Examples  
 [!code-csharp[System.Net.Http.HttpClientHandler#1](~/samples/snippets/csharp/VS_Snippets_Misc/system.net.http.httpclienthandler/cs/source.cs#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HttpClientHandler ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpClientHandler.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HttpClientHandler();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="ea090-106">Tworzy wystąpienie <see cref="T:System.Net.Http.HttpClientHandler" /> klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ea090-106">Creates an instance of a <see cref="T:System.Net.Http.HttpClientHandler" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowAutoRedirect">
      <MemberSignature Language="C#" Value="public bool AllowAutoRedirect { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowAutoRedirect" />
      <MemberSignature Language="DocId" Value="P:System.Net.Http.HttpClientHandler.AllowAutoRedirect" />
      <MemberSignature Language="VB.NET" Value="Public Property AllowAutoRedirect As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowAutoRedirect { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AllowAutoRedirect : bool with get, set" Usage="System.Net.Http.HttpClientHandler.AllowAutoRedirect" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ea090-107">Pobiera lub ustawia wartość wskazującą, czy program obsługi ma uwzględnić odpowiedzi przekierowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ea090-107">Gets or sets a value that indicates whether the handler should follow redirection responses.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ea090-108">
            <see langword="true" /> Jeśli obszar, jeśli program obsługi ma uwzględnić odpowiedzi przekierowania; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ea090-108">
              <see langword="true" /> if the if the handler should follow redirection responses; otherwise <see langword="false" />.</span>
          </span>
          <span data-ttu-id="ea090-109">Wartość domyślna to <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ea090-109">The default value is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ea090-110">Ustaw <xref:System.Net.Http.HttpClientHandler.AllowAutoRedirect%2A> do `true` Jeśli program obsługi ma automatycznie wykonaj nagłówki przekierowania HTTP do nowej lokalizacji zasobu.</span><span class="sxs-lookup"><span data-stu-id="ea090-110">Set <xref:System.Net.Http.HttpClientHandler.AllowAutoRedirect%2A> to `true` if you want the handler to automatically follow HTTP redirection headers to the new location of the resource.</span></span> <span data-ttu-id="ea090-111">Maksymalną liczbę przekierowań, które należy wykonać, jest ustawiony przez <xref:System.Net.Http.HttpClientHandler.MaxAutomaticRedirections%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="ea090-111">The maximum number of redirections to follow is set by the <xref:System.Net.Http.HttpClientHandler.MaxAutomaticRedirections%2A> property.</span></span>  
  
 <span data-ttu-id="ea090-112">Jeśli <xref:System.Net.Http.HttpClientHandler.AllowAutoRedirect%2A> ma ustawioną wartość `false`, zwracane są wszystkie odpowiedzi HTTP z kodem stanu HTTP od 300 do 399 do aplikacji.</span><span class="sxs-lookup"><span data-stu-id="ea090-112">If <xref:System.Net.Http.HttpClientHandler.AllowAutoRedirect%2A> is set to `false`, all HTTP responses with an HTTP status code from 300 to 399 are  returned to the application.</span></span>  
  
 <span data-ttu-id="ea090-113">Nagłówek uwierzytelnienia jest wyczyszczone na automatycznych przekierowań i program obsługi automatycznie podejmie próbę ponownego uwierzytelnienia do lokalizacji przekierowywanej.</span><span class="sxs-lookup"><span data-stu-id="ea090-113">The Authorization header is cleared on auto-redirects and the handler automatically tries to re-authenticate to the redirected location.</span></span> <span data-ttu-id="ea090-114">W praktyce oznacza to, że aplikacji, nie można ustawić informacji uwierzytelniania niestandardowego w nagłówku autoryzacji można napotkać przekierowania.</span><span class="sxs-lookup"><span data-stu-id="ea090-114">In practice, this means that an application can't put custom authentication information into the Authorization header if it is possible to encounter redirection.</span></span> <span data-ttu-id="ea090-115">Zamiast tego aplikacja musi implementować i zarejestrować moduł uwierzytelniania niestandardowego.</span><span class="sxs-lookup"><span data-stu-id="ea090-115">Instead, the application must implement and register a custom authentication module.</span></span>  

> [!NOTE]
>  <span data-ttu-id="ea090-116">Z <xref:System.Net.Http.HttpClientHandler.AllowAutoRedirect%2A> ustawioną `true`, .NET Framework będzie śledzić przekierowań, nawet wtedy, gdy nastąpi przekierowanie do identyfikator URI protokołu HTTP z identyfikatora URI HTTPS.</span><span class="sxs-lookup"><span data-stu-id="ea090-116">With <xref:System.Net.Http.HttpClientHandler.AllowAutoRedirect%2A> set to `true`, the .NET Framework will follow redirections even when being redirected to an HTTP URI from an HTTPS URI.</span></span>
<span data-ttu-id="ea090-117">.NET core w wersjach 1.0, 1.1 i 2.0 nie przestrzega przekierowania HTTPS HTTP, nawet jeśli <xref:System.Net.Http.HttpClientHandler.AllowAutoRedirect%2A> ma ustawioną wartość `true`.</span><span class="sxs-lookup"><span data-stu-id="ea090-117">.NET Core versions 1.0, 1.1 and 2.0 will not follow a redirection from HTTPS to HTTP even if <xref:System.Net.Http.HttpClientHandler.AllowAutoRedirect%2A> is set to `true`.</span></span>
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AutomaticDecompression">
      <MemberSignature Language="C#" Value="public System.Net.DecompressionMethods AutomaticDecompression { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Net.DecompressionMethods AutomaticDecompression" />
      <MemberSignature Language="DocId" Value="P:System.Net.Http.HttpClientHandler.AutomaticDecompression" />
      <MemberSignature Language="VB.NET" Value="Public Property AutomaticDecompression As DecompressionMethods" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::DecompressionMethods AutomaticDecompression { System::Net::DecompressionMethods get(); void set(System::Net::DecompressionMethods value); };" />
      <MemberSignature Language="F#" Value="member this.AutomaticDecompression : System.Net.DecompressionMethods with get, set" Usage="System.Net.Http.HttpClientHandler.AutomaticDecompression" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.DecompressionMethods</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ea090-118">Pobiera lub ustawia typ metody dekompresji używanej przez program obsługi do automatycznej dekompresji zawartości odpowiedzi HTTP.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ea090-118">Gets or sets the type of decompression method used by the handler for automatic decompression of the HTTP content response.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ea090-119">Metoda automatycznej dekompresji używane przez program obsługi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ea090-119">The automatic decompression method used by the handler.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  

## Remarks  
<span data-ttu-id="ea090-120">Dla programu .NET Framework 4.x `System.Net.Http` binarne w globalnej pamięci podręcznej zestawów (GAC), wartość domyślna to <xref:System.Net.DecompressionMethods.None>.</span><span class="sxs-lookup"><span data-stu-id="ea090-120">For the .NET Framework 4.x `System.Net.Http` binary in the Global Assembly Cache (GAC), the default value is <xref:System.Net.DecompressionMethods.None>.</span></span>

<span data-ttu-id="ea090-121">Gdy [ `System.Net.Http` pakietu NuGet](https://www.nuget.org/packages/System.Net.Http/) v4.1.0 do v4.3.2 jest używany, wartość domyślna to <xref:System.Net.DecompressionMethods.GZip> i <xref:System.Net.DecompressionMethods.Deflate>.</span><span class="sxs-lookup"><span data-stu-id="ea090-121">When the [`System.Net.Http` NuGet package](https://www.nuget.org/packages/System.Net.Http/) v4.1.0 to v4.3.2 is used, the default is <xref:System.Net.DecompressionMethods.GZip> and <xref:System.Net.DecompressionMethods.Deflate>.</span></span>

<span data-ttu-id="ea090-122">Po v4.3.2 pakietu NuGet, domyślna wartość <xref:System.Net.DecompressionMethods.None> jest używany.</span><span class="sxs-lookup"><span data-stu-id="ea090-122">After NuGet package v4.3.2, the default value of <xref:System.Net.DecompressionMethods.None> is used.</span></span>
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckCertificateRevocationList">
      <MemberSignature Language="C#" Value="public bool CheckCertificateRevocationList { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CheckCertificateRevocationList" />
      <MemberSignature Language="DocId" Value="P:System.Net.Http.HttpClientHandler.CheckCertificateRevocationList" />
      <MemberSignature Language="VB.NET" Value="Public Property CheckCertificateRevocationList As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CheckCertificateRevocationList { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.CheckCertificateRevocationList : bool with get, set" Usage="System.Net.Http.HttpClientHandler.CheckCertificateRevocationList" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ea090-123">Pobiera lub ustawia wartość wskazującą, czy certyfikat jest sprawdzany względem listy odwołania certyfikatów urzędu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ea090-123">Gets or sets a value that indicates whether the certificate is checked against the certificate authority revocation list.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ea090-124">
            <see langword="true" /> Jeśli lista odwołania certyfikatów jest sprawdzana; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ea090-124">
              <see langword="true" /> if the certificate revocation list is checked; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.PlatformNotSupportedException">
          <span data-ttu-id="ea090-125">.NET framework 4.7.1 tylko: Ta właściwość nie jest zaimplementowana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ea090-125">.NET Framework 4.7.1 only: This property is not implemented.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ClientCertificateOptions">
      <MemberSignature Language="C#" Value="public System.Net.Http.ClientCertificateOption ClientCertificateOptions { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Net.Http.ClientCertificateOption ClientCertificateOptions" />
      <MemberSignature Language="DocId" Value="P:System.Net.Http.HttpClientHandler.ClientCertificateOptions" />
      <MemberSignature Language="VB.NET" Value="Public Property ClientCertificateOptions As ClientCertificateOption" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::Http::ClientCertificateOption ClientCertificateOptions { System::Net::Http::ClientCertificateOption get(); void set(System::Net::Http::ClientCertificateOption value); };" />
      <MemberSignature Language="F#" Value="member this.ClientCertificateOptions : System.Net.Http.ClientCertificateOption with get, set" Usage="System.Net.Http.HttpClientHandler.ClientCertificateOptions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Http.ClientCertificateOption</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ea090-126">Pobiera lub ustawia wartość wskazującą, jeśli certyfikat jest automatycznie pobierany z magazynu certyfikatów lub jeśli element wywołujący może przejść w określonych certyfikatów klienta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ea090-126">Gets or sets a value that indicates if the certificate is automatically picked from the certificate store or if the caller is allowed to pass in a specific client certificate.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ea090-127">Kolekcja certyfikaty zabezpieczeń skojarzony z tym programem obsługi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ea090-127">The collection of security certificates associated with this handler.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClientCertificates">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.X509Certificates.X509CertificateCollection ClientCertificates { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.X509Certificates.X509CertificateCollection ClientCertificates" />
      <MemberSignature Language="DocId" Value="P:System.Net.Http.HttpClientHandler.ClientCertificates" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ClientCertificates As X509CertificateCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Cryptography::X509Certificates::X509CertificateCollection ^ ClientCertificates { System::Security::Cryptography::X509Certificates::X509CertificateCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ClientCertificates : System.Security.Cryptography.X509Certificates.X509CertificateCollection" Usage="System.Net.Http.HttpClientHandler.ClientCertificates" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.X509Certificates.X509CertificateCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ea090-128">Pobiera kolekcję certyfikatów zabezpieczeń, które są skojarzone żądań do serwera.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ea090-128">Gets the collection of security certificates that are associated requests to the server.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ea090-129">X509CertificateCollection, który jest przedstawiony na serwerze, wykonując certyfikatu na podstawie uwierzytelniania klienta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ea090-129">The X509CertificateCollection that is presented to the server when performing certificate based client authentication.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CookieContainer">
      <MemberSignature Language="C#" Value="public System.Net.CookieContainer CookieContainer { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.CookieContainer CookieContainer" />
      <MemberSignature Language="DocId" Value="P:System.Net.Http.HttpClientHandler.CookieContainer" />
      <MemberSignature Language="VB.NET" Value="Public Property CookieContainer As CookieContainer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::CookieContainer ^ CookieContainer { System::Net::CookieContainer ^ get(); void set(System::Net::CookieContainer ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CookieContainer : System.Net.CookieContainer with get, set" Usage="System.Net.Http.HttpClientHandler.CookieContainer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.CookieContainer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ea090-130">Pobiera lub ustawia kontener plików cookie używany do przechowywania plików cookie serwera przez program obsługi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ea090-130">Gets or sets the cookie container used to store server cookies by the handler.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ea090-131">Kontener plików cookie używany do przechowywania plików cookie serwera przez program obsługi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ea090-131">The cookie container used to store server cookies by the handler.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ea090-132"><xref:System.Net.Http.HttpClientHandler.CookieContainer%2A> Wystąpienie zawiera właściwość <xref:System.Net.CookieContainer> klasy, który zawiera pliki cookie skojarzone z tym programem obsługi.</span><span class="sxs-lookup"><span data-stu-id="ea090-132">The <xref:System.Net.Http.HttpClientHandler.CookieContainer%2A> property provides an instance of the <xref:System.Net.CookieContainer> class that contains the cookies associated with this handler.</span></span>  
  
 <span data-ttu-id="ea090-133">Jeśli <xref:System.Net.Http.HttpClientHandler.UseCookies%2A> właściwość jest `true`, <xref:System.Net.Http.HttpClientHandler.CookieContainer%2A> właściwość reprezentuje kontener plików cookie używany do przechowywania plików cookie serwera.</span><span class="sxs-lookup"><span data-stu-id="ea090-133">If the <xref:System.Net.Http.HttpClientHandler.UseCookies%2A> property is `true`, the <xref:System.Net.Http.HttpClientHandler.CookieContainer%2A> property represents the cookie container used to store the server cookies.</span></span> <span data-ttu-id="ea090-134">Użytkownik może ustawić niestandardowe pliki cookie przed wysłaniem żądania za pomocą tej właściwości.</span><span class="sxs-lookup"><span data-stu-id="ea090-134">The user can set custom cookies before sending requests using this property.</span></span> <span data-ttu-id="ea090-135">Jeśli <xref:System.Net.Http.HttpClientHandler.UseCookies%2A> właściwość ma wartość false, a użytkownik dodaje pliki cookie, aby <xref:System.Net.Http.HttpClientHandler.CookieContainer%2A>, pliki cookie są ignorowane i nie są wysyłane do serwera.</span><span class="sxs-lookup"><span data-stu-id="ea090-135">If the  <xref:System.Net.Http.HttpClientHandler.UseCookies%2A> property is false and the user adds cookies to <xref:System.Net.Http.HttpClientHandler.CookieContainer%2A>, cookies are ignored and not sent to the server.</span></span> <span data-ttu-id="ea090-136">Ustawienie <xref:System.Net.Http.HttpClientHandler.CookieContainer%2A> do `null` spowoduje zgłoszenie wyjątku.</span><span class="sxs-lookup"><span data-stu-id="ea090-136">Setting the <xref:System.Net.Http.HttpClientHandler.CookieContainer%2A> to `null` will throw an exception.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Credentials">
      <MemberSignature Language="C#" Value="public System.Net.ICredentials Credentials { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.ICredentials Credentials" />
      <MemberSignature Language="DocId" Value="P:System.Net.Http.HttpClientHandler.Credentials" />
      <MemberSignature Language="VB.NET" Value="Public Property Credentials As ICredentials" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::ICredentials ^ Credentials { System::Net::ICredentials ^ get(); void set(System::Net::ICredentials ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Credentials : System.Net.ICredentials with get, set" Usage="System.Net.Http.HttpClientHandler.Credentials" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.ICredentials</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ea090-137">Pobiera lub ustawia informacje dotyczące uwierzytelniania używane przez ten program obsługi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ea090-137">Gets or sets authentication information used by this handler.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ea090-138">Poświadczenia uwierzytelnienia skojarzone z programem obsługi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ea090-138">The authentication credentials associated with the handler.</span>
          </span>
          <span data-ttu-id="ea090-139">Wartość domyślna to <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ea090-139">The default is <see langword="null" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DangerousAcceptAnyServerCertificateValidator">
      <MemberSignature Language="C#" Value="public static Func&lt;System.Net.Http.HttpRequestMessage,System.Security.Cryptography.X509Certificates.X509Certificate2,System.Security.Cryptography.X509Certificates.X509Chain,System.Net.Security.SslPolicyErrors,bool&gt; DangerousAcceptAnyServerCertificateValidator { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Func`5&lt;class System.Net.Http.HttpRequestMessage, class System.Security.Cryptography.X509Certificates.X509Certificate2, class System.Security.Cryptography.X509Certificates.X509Chain, valuetype System.Net.Security.SslPolicyErrors, bool&gt; DangerousAcceptAnyServerCertificateValidator" />
      <MemberSignature Language="DocId" Value="P:System.Net.Http.HttpClientHandler.DangerousAcceptAnyServerCertificateValidator" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property DangerousAcceptAnyServerCertificateValidator As Func(Of HttpRequestMessage, X509Certificate2, X509Chain, SslPolicyErrors, Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property Func&lt;System::Net::Http::HttpRequestMessage ^, System::Security::Cryptography::X509Certificates::X509Certificate2 ^, System::Security::Cryptography::X509Certificates::X509Chain ^, System::Net::Security::SslPolicyErrors, bool&gt; ^ DangerousAcceptAnyServerCertificateValidator { Func&lt;System::Net::Http::HttpRequestMessage ^, System::Security::Cryptography::X509Certificates::X509Certificate2 ^, System::Security::Cryptography::X509Certificates::X509Chain ^, System::Net::Security::SslPolicyErrors, bool&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DangerousAcceptAnyServerCertificateValidator : Func&lt;System.Net.Http.HttpRequestMessage, System.Security.Cryptography.X509Certificates.X509Certificate2, System.Security.Cryptography.X509Certificates.X509Chain, System.Net.Security.SslPolicyErrors, bool&gt;" Usage="System.Net.Http.HttpClientHandler.DangerousAcceptAnyServerCertificateValidator" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Func&lt;System.Net.Http.HttpRequestMessage,System.Security.Cryptography.X509Certificates.X509Certificate2,System.Security.Cryptography.X509Certificates.X509Chain,System.Net.Security.SslPolicyErrors,System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ea090-140">Pobiera metodę delegowaną, pamięci podręcznej, która zawsze zwraca <see langword="True" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ea090-140">Gets a cached delegate that always returns <see langword="True" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ea090-141">Buforowane delegata, który zawsze zwraca <see langword="True" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ea090-141">A cached delegate that always returns <see langword="True" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ea090-142">Szczególnie w przypadku scenariuszy testowania, wspólnego wzorca użycia <xref:System.Net.Http.HttpClient> do nawiązania połączenia z serwerem przy użyciu certyfikatu, który nie powinien być weryfikowane, takie jak certyfikat z podpisem własnym.</span><span class="sxs-lookup"><span data-stu-id="ea090-142">Particularly in test scenarios, a common pattern use <xref:System.Net.Http.HttpClient> to connect to a server with a certificate that shouldn't be validated, such as a self-signed certificate.</span></span> <span data-ttu-id="ea090-143">Zwykle w tym z <xref:System.Net.Http.HttpClientHandler> przez ustawienie <xref:System.Net.Http.HttpClientHandler.ServerCertificateCustomValidationCallback%2A> właściwości do delegata, który zawsze zwraca `True`; oznacza to, że certyfikat ma przeszedł sprawdzania poprawności.</span><span class="sxs-lookup"><span data-stu-id="ea090-143">You commonly do this with <xref:System.Net.Http.HttpClientHandler> by setting the <xref:System.Net.Http.HttpClientHandler.ServerCertificateCustomValidationCallback%2A> property to a delegate that always returns `True`; this indicates that the certificate has passed validation.</span></span> <span data-ttu-id="ea090-144">Jednak nie wszystkie implementacje obsługują tego wywołania zwrotnego i niektóre throw <xref:System.PlatformNotSupportedException>.</span><span class="sxs-lookup"><span data-stu-id="ea090-144">However, not all implementations support this callback, and some throw <xref:System.PlatformNotSupportedException>.</span></span>  
  
 <span data-ttu-id="ea090-145"><xref:System.Net.Http.HttpClientHandler.DangerousAcceptAnyServerCertificateValidator%2A> Właściwość dotyczy to ograniczenie.</span><span class="sxs-lookup"><span data-stu-id="ea090-145">The <xref:System.Net.Http.HttpClientHandler.DangerousAcceptAnyServerCertificateValidator%2A> property addresses this limitation.</span></span> <span data-ttu-id="ea090-146">Delegat zwrócony przez <xref:System.Net.Http.HttpClientHandler.DangerousAcceptAnyServerCertificateValidator%2A> właściwości mogą być przypisane do <xref:System.Net.Http.HttpClientHandler.ServerCertificateCustomValidationCallback%2A> właściwości, jak w poniższym przykładzie jest:</span><span class="sxs-lookup"><span data-stu-id="ea090-146">The delegate returned by the <xref:System.Net.Http.HttpClientHandler.DangerousAcceptAnyServerCertificateValidator%2A> property can be assigned to the <xref:System.Net.Http.HttpClientHandler.ServerCertificateCustomValidationCallback%2A> property, as the following example does:</span></span>  
  
```cs
handler.ServerCertificateCustomValidationCallback = httpClientHandler.DangerousAcceptAnyServerCertificateValidator;
```

 <span data-ttu-id="ea090-147">Dzięki temu <xref:System.Net.Http.HttpClientHandler> implementacje znanego obiektu tożsamości odwołania, określającym zamiar dewelopera.</span><span class="sxs-lookup"><span data-stu-id="ea090-147">This gives <xref:System.Net.Http.HttpClientHandler> implementations a known object reference identity that expresses the developer's intention.</span></span> <span data-ttu-id="ea090-148">Jeśli obiekt jest przechowywany w <xref:System.Net.Http.HttpClientHandler.DangerousAcceptAnyServerCertificateValidator%2A> właściwości jest równa odwołanie <xref:System.Net.Http.HttpClientHandler.DangerousAcceptAnyServerCertificateValidator%2A>, środowisko wykonawcze jest w stanie całkowicie wyłączyć sprawdzanie poprawności platformy, które w przeciwnym razie spowoduje zgłoszenie <xref:System.PlatformNotSupportedException>.</span><span class="sxs-lookup"><span data-stu-id="ea090-148">If the object stored in the <xref:System.Net.Http.HttpClientHandler.DangerousAcceptAnyServerCertificateValidator%2A> property is reference equals to <xref:System.Net.Http.HttpClientHandler.DangerousAcceptAnyServerCertificateValidator%2A>, the runtime is able to entirely disable validation on a platform that would otherwise throw a <xref:System.PlatformNotSupportedException>.</span></span>  
  
 <span data-ttu-id="ea090-149">Jako korzyść po stronie deweloperzy mogą używać tej właściwości w celu ułatwienia narzędzia do flagi niebezpieczeństwo wyłączenie sprawdzania poprawności certyfikatów, co ułatwia deweloperom unikać wysyłania niebezpieczne aplikacje.</span><span class="sxs-lookup"><span data-stu-id="ea090-149">As a side benefit, developers can use this property to make it easier for tools to flag the danger of disabling certificate validation, which makes it easier for developers to avoid shipping insecure applications.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultProxyCredentials">
      <MemberSignature Language="C#" Value="public System.Net.ICredentials DefaultProxyCredentials { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.ICredentials DefaultProxyCredentials" />
      <MemberSignature Language="DocId" Value="P:System.Net.Http.HttpClientHandler.DefaultProxyCredentials" />
      <MemberSignature Language="VB.NET" Value="Public Property DefaultProxyCredentials As ICredentials" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::ICredentials ^ DefaultProxyCredentials { System::Net::ICredentials ^ get(); void set(System::Net::ICredentials ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DefaultProxyCredentials : System.Net.ICredentials with get, set" Usage="System.Net.Http.HttpClientHandler.DefaultProxyCredentials" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.ICredentials</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ea090-150">Gdy jest używany domyślny (system), serwer proxy, pobiera lub ustawia poświadczenia do przesłania do domyślnego serwera proxy dla uwierzytelniania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ea090-150">When the default (system) proxy is being used, gets or sets the credentials to submit to the default proxy server for authentication.</span>
          </span>
          <span data-ttu-id="ea090-151">Domyślny serwer proxy jest używana tylko wtedy, gdy <see cref="T:System.Net.Http.HttpClientHandler.UseProxy%2A" /> ustawiono <see langword="true" /> i <see cref="T:System.Net.Http.HttpClientHandler.Proxy%2A" /> ma ustawioną wartość <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ea090-151">The default proxy is used only when <see cref="T:System.Net.Http.HttpClientHandler.UseProxy%2A" /> is set to <see langword="true" /> and <see cref="T:System.Net.Http.HttpClientHandler.Proxy%2A" /> is set to <see langword="null" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ea090-152">Poświadczenia potrzebne do uwierzytelnienia żądania do domyślnego serwera proxy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ea090-152">The credentials needed to authenticate a request to the default proxy server.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpClientHandler.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="httpClientHandler.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="ea090-153">
            <see langword="true" /> Aby zwolnić zasoby zarządzane i niezarządzane; <see langword="false" /> powoduje zwolnienie tylko niezarządzane zasoby.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ea090-153">
              <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to releases only unmanaged resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ea090-154">Zwalnia zasoby niezarządzane używane przez <see cref="T:System.Net.Http.HttpClientHandler" /> i opcjonalnie usuwa zarządzane zasoby.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ea090-154">Releases the unmanaged resources used by the <see cref="T:System.Net.Http.HttpClientHandler" /> and optionally disposes of the managed resources.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ea090-155">Ta metoda jest wywoływana przez metodę publiczną `Dispose()` — metoda i <xref:System.Object.Finalize%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="ea090-155">This method is called by the public `Dispose()` method and the <xref:System.Object.Finalize%2A> method.</span></span> <span data-ttu-id="ea090-156">`Dispose()` wywołuje chronioną metodę `Dispose(Boolean)` metody z `disposing` ustawiono parametr `true`.</span><span class="sxs-lookup"><span data-stu-id="ea090-156">`Dispose()` invokes the protected `Dispose(Boolean)` method with the `disposing` parameter set to `true`.</span></span> <span data-ttu-id="ea090-157"><xref:System.Object.Finalize%2A> wywołuje `Dispose` z `disposing` ustawioną `false`.</span><span class="sxs-lookup"><span data-stu-id="ea090-157"><xref:System.Object.Finalize%2A> invokes `Dispose` with `disposing` set to `false`.</span></span>  
  
 <span data-ttu-id="ea090-158">Gdy `disposing` parametr jest `true`, ta metoda zwalnia wszystkie zasoby zajmowane przez wszelkie obiekty zarządzane przez to <xref:System.Net.Http.HttpClientHandler> odwołania.</span><span class="sxs-lookup"><span data-stu-id="ea090-158">When the `disposing` parameter is `true`, this method releases all resources held by any managed objects that this <xref:System.Net.Http.HttpClientHandler> references.</span></span> <span data-ttu-id="ea090-159">Ta metoda wywołuje `Dispose()` metody każdego odwołuje się do obiektu.</span><span class="sxs-lookup"><span data-stu-id="ea090-159">This method invokes the `Dispose()` method of each referenced object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxAutomaticRedirections">
      <MemberSignature Language="C#" Value="public int MaxAutomaticRedirections { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxAutomaticRedirections" />
      <MemberSignature Language="DocId" Value="P:System.Net.Http.HttpClientHandler.MaxAutomaticRedirections" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxAutomaticRedirections As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaxAutomaticRedirections { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.MaxAutomaticRedirections : int with get, set" Usage="System.Net.Http.HttpClientHandler.MaxAutomaticRedirections" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ea090-160">Pobiera lub ustawia maksymalną liczbę przekierowań, które uwzględnia program obsługi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ea090-160">Gets or sets the maximum number of redirects that the handler follows.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ea090-161">Maksymalna liczba odpowiedzi przekierowania, które uwzględnia program obsługi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ea090-161">The maximum number of redirection responses that the handler follows.</span>
          </span>
          <span data-ttu-id="ea090-162">Wartością domyślną jest 50.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ea090-162">The default value is 50.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ea090-163"><xref:System.Net.Http.HttpClientHandler.MaxAutomaticRedirections%2A> Właściwość ustawia maksymalną liczbę przekierowań dla żądania, które należy wykonać, jeśli <xref:System.Net.Http.HttpClientHandler.AllowAutoRedirect%2A> jest właściwość `true`.</span><span class="sxs-lookup"><span data-stu-id="ea090-163">The <xref:System.Net.Http.HttpClientHandler.MaxAutomaticRedirections%2A> property sets the maximum number of redirections for the request to follow if the <xref:System.Net.Http.HttpClientHandler.AllowAutoRedirect%2A> property is `true`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxConnectionsPerServer">
      <MemberSignature Language="C#" Value="public int MaxConnectionsPerServer { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxConnectionsPerServer" />
      <MemberSignature Language="DocId" Value="P:System.Net.Http.HttpClientHandler.MaxConnectionsPerServer" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxConnectionsPerServer As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaxConnectionsPerServer { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.MaxConnectionsPerServer : int with get, set" Usage="System.Net.Http.HttpClientHandler.MaxConnectionsPerServer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ea090-164">Pobiera lub ustawia maksymalną liczbę równoczesnych połączeń (na serwerze punktu końcowego) dozwolone podczas wprowadzania żądań przy użyciu <see cref="T:System.Net.Http.HttpClient" /> obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ea090-164">Gets or sets the maximum number of concurrent connections (per server endpoint) allowed when making requests using an <see cref="T:System.Net.Http.HttpClient" /> object.</span>
          </span>
          <span data-ttu-id="ea090-165">Należy zauważyć, że limit na punkt końcowy serwera, aby na przykład wartość 256 może wówczas uzyskać 256 równoczesnych połączeń http://www.adatum.com/ i innym 256 do http://www.adventure-works.com/.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ea090-165">Note that the limit is per server endpoint, so for example a value of 256 would permit 256 concurrent connections to http://www.adatum.com/ and another 256 to http://www.adventure-works.com/.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ea090-166">Maksymalna liczba jednoczesnych połączeń (na punkt końcowy serwera), dozwolone przez <see cref="T:System.Net.Http.HttpClient" /> obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ea090-166">The maximum number of concurrent connections (per server endpoint) allowed by an <see cref="T:System.Net.Http.HttpClient" /> object.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxRequestContentBufferSize">
      <MemberSignature Language="C#" Value="public long MaxRequestContentBufferSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 MaxRequestContentBufferSize" />
      <MemberSignature Language="DocId" Value="P:System.Net.Http.HttpClientHandler.MaxRequestContentBufferSize" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxRequestContentBufferSize As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long MaxRequestContentBufferSize { long get(); void set(long value); };" />
      <MemberSignature Language="F#" Value="member this.MaxRequestContentBufferSize : int64 with get, set" Usage="System.Net.Http.HttpClientHandler.MaxRequestContentBufferSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ea090-167">Pobiera lub ustawia wielkość bufora zawartości żądania maksymalna, które są używane przez program obsługi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ea090-167">Gets or sets the maximum request content buffer size used by the handler.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ea090-168">Bufora zawartości żądania maksymalny rozmiar w bajtach.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ea090-168">The maximum request content buffer size in bytes.</span>
          </span>
          <span data-ttu-id="ea090-169">Wartość domyślna to 2 gigabajty.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ea090-169">The default value is 2 gigabytes.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ea090-170">Aplikację można ustawić <xref:System.Net.Http.HttpClientHandler.MaxRequestContentBufferSize%2A> właściwości niższą wartość do ograniczania rozmiaru buforu żądania.</span><span class="sxs-lookup"><span data-stu-id="ea090-170">An app can set the <xref:System.Net.Http.HttpClientHandler.MaxRequestContentBufferSize%2A> property to a lower value to limit the size of the request buffer.</span></span> <span data-ttu-id="ea090-171">Jeśli rozmiar zawartości żądania jest większa niż <xref:System.Net.Http.HttpClientHandler.MaxRequestContentBufferSize%2A> właściwości, jest zgłaszany wyjątek.</span><span class="sxs-lookup"><span data-stu-id="ea090-171">If the size of the request content is greater than the <xref:System.Net.Http.HttpClientHandler.MaxRequestContentBufferSize%2A> property, an exception is thrown.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxResponseHeadersLength">
      <MemberSignature Language="C#" Value="public int MaxResponseHeadersLength { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxResponseHeadersLength" />
      <MemberSignature Language="DocId" Value="P:System.Net.Http.HttpClientHandler.MaxResponseHeadersLength" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxResponseHeadersLength As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaxResponseHeadersLength { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.MaxResponseHeadersLength : int with get, set" Usage="System.Net.Http.HttpClientHandler.MaxResponseHeadersLength" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ea090-172">Pobiera lub ustawia maksymalną długość w kilobajtach (1024 bajty) nagłówków odpowiedzi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ea090-172">Gets or sets the maximum length, in kilobytes (1024 bytes), of the response headers.</span>
          </span>
          <span data-ttu-id="ea090-173">Na przykład jeśli wartość to 64, 65 536 bajtów są dozwolone dla nagłówki odpowiedzi maksymalną długość.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ea090-173">For example, if the value is 64, then 65536 bytes are allowed for the maximum response headers' length.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ea090-174">Maksymalna długość w kilobajtach (1024 bajty), nagłówki odpowiedzi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ea090-174">The maximum length, in kilobytes (1024 bytes), of the response headers.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PreAuthenticate">
      <MemberSignature Language="C#" Value="public bool PreAuthenticate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool PreAuthenticate" />
      <MemberSignature Language="DocId" Value="P:System.Net.Http.HttpClientHandler.PreAuthenticate" />
      <MemberSignature Language="VB.NET" Value="Public Property PreAuthenticate As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool PreAuthenticate { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.PreAuthenticate : bool with get, set" Usage="System.Net.Http.HttpClientHandler.PreAuthenticate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ea090-175">Pobiera lub ustawia wartość wskazującą, czy program obsługi przesyła z żądaniem nagłówek autoryzacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ea090-175">Gets or sets a value that indicates whether the handler sends an Authorization header with the request.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ea090-176">
            <see langword="true" /> Wysyłaj nagłówek autoryzacji HTTP z żądaniami po uwierzytelnieniu przez program obsługi miało miejsce; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ea090-176">
              <see langword="true" /> for the handler to send an HTTP Authorization header with requests after authentication has taken place; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="ea090-177">Wartość domyślna to <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ea090-177">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ea090-178">Po odebraniu żądania klienta do konkretnego <xref:System.Uri> zostanie pomyślnie uwierzytelniony, jeśli <xref:System.Net.Http.HttpClientHandler.PreAuthenticate%2A> właściwość jest `true` i podano poświadczenia <xref:System.Net.Http.HttpClientHandler> zgodny z listą poświadczenia podane w <xref:System.Net.Http.HttpClientHandler.Credentials%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="ea090-178">After a client request to a specific <xref:System.Uri> is successfully authenticated, if the <xref:System.Net.Http.HttpClientHandler.PreAuthenticate%2A> property is `true` and credentials are supplied, <xref:System.Net.Http.HttpClientHandler> matches against the credential list supplied in the  <xref:System.Net.Http.HttpClientHandler.Credentials%2A> property.</span></span> <span data-ttu-id="ea090-179">Nagłówek uwierzytelnienia są wysyłane z każdym żądaniem do dowolnego <xref:System.Uri> odpowiadającej konkretnym <xref:System.Uri> do ostatniego ukośnika.</span><span class="sxs-lookup"><span data-stu-id="ea090-179">The Authorization header is sent with each request to any <xref:System.Uri> that matches the specific <xref:System.Uri> up to the last forward slash.</span></span>  
  
 <span data-ttu-id="ea090-180">Jeśli żądanie klienta do konkretnego <xref:System.Uri> to żądanie nie zostało pomyślnie uwierzytelniony, korzysta z uwierzytelniania standardowe procedury.</span><span class="sxs-lookup"><span data-stu-id="ea090-180">If the client request to a specific <xref:System.Uri> is not successfully authenticated, the request uses standard authentication procedures.</span></span>  
  
 <span data-ttu-id="ea090-181">Z wyjątkiem pierwsze żądanie <xref:System.Net.Http.HttpClientHandler.PreAuthenticate%2A> właściwość wskazuje, czy chcą wysłać informacje o uwierzytelnianiu z kolejnych żądań wysyłanych do <xref:System.Uri> odpowiadającej konkretnym <xref:System.Uri> do ostatniego ukośnik bez oczekujących na przetworzenie wąskie przez serwer.</span><span class="sxs-lookup"><span data-stu-id="ea090-181">With the exception of the first request, the <xref:System.Net.Http.HttpClientHandler.PreAuthenticate%2A> property indicates whether to send authentication information with subsequent requests to a <xref:System.Uri> that matches the specific <xref:System.Uri> up to the last forward slash without waiting to be challenged by the server.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Properties">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IDictionary&lt;string,object&gt; Properties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IDictionary`2&lt;string, object&gt; Properties" />
      <MemberSignature Language="DocId" Value="P:System.Net.Http.HttpClientHandler.Properties" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Properties As IDictionary(Of String, Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IDictionary&lt;System::String ^, System::Object ^&gt; ^ Properties { System::Collections::Generic::IDictionary&lt;System::String ^, System::Object ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Properties : System.Collections.Generic.IDictionary&lt;string, obj&gt;" Usage="System.Net.Http.HttpClientHandler.Properties" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ea090-182">Pobiera słownik zapisu (map) właściwości niestandardowych <see cref="T:System.Net.Http.HttpClient" /> żądań.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ea090-182">Gets a writable dictionary (that is, a map) of custom properties for the <see cref="T:System.Net.Http.HttpClient" /> requests.</span>
          </span>
          <span data-ttu-id="ea090-183">Słownik jest inicjowana pusty; Możesz wstawić i pary klucz wartość dla niestandardowego programów obsługi i specjalnego przetwarzania zapytania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ea090-183">The dictionary is initialized empty; you can insert and query key-value pairs for your custom handlers and special processing.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ea090-184">zapisywalny słownik właściwości niestandardowych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ea090-184">a writable dictionary of custom properties.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Proxy">
      <MemberSignature Language="C#" Value="public System.Net.IWebProxy Proxy { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.IWebProxy Proxy" />
      <MemberSignature Language="DocId" Value="P:System.Net.Http.HttpClientHandler.Proxy" />
      <MemberSignature Language="VB.NET" Value="Public Property Proxy As IWebProxy" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::IWebProxy ^ Proxy { System::Net::IWebProxy ^ get(); void set(System::Net::IWebProxy ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Proxy : System.Net.IWebProxy with get, set" Usage="System.Net.Http.HttpClientHandler.Proxy" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.IWebProxy</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ea090-185">Pobiera lub ustawia informacje o serwerze proxy używane prze program obsługi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ea090-185">Gets or sets proxy information used by the handler.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ea090-186">Informacje o serwerze proxy używane prze program obsługi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ea090-186">The proxy information used by the handler.</span>
          </span>
          <span data-ttu-id="ea090-187">Wartość domyślna to <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ea090-187">The default value is <see langword="null" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ea090-188"><xref:System.Net.Http.HttpClientHandler.Proxy%2A> Właściwość identyfikuje <xref:System.Net.WebProxy> obiektu do przetwarzania żądań do zasobów Internetu.</span><span class="sxs-lookup"><span data-stu-id="ea090-188">The <xref:System.Net.Http.HttpClientHandler.Proxy%2A> property identifies the <xref:System.Net.WebProxy> object to use to process requests to Internet resources.</span></span> <span data-ttu-id="ea090-189">Aby określić, że należy używać żadnego serwera proxy, należy ustawić <xref:System.Net.Http.HttpClientHandler.Proxy%2A> właściwość w wystąpieniu serwera proxy zwrócony przez <xref:System.Net.GlobalProxySelection.GetEmptyWebProxy%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="ea090-189">To specify that no proxy should be used, set the <xref:System.Net.Http.HttpClientHandler.Proxy%2A> property to the proxy instance returned by the <xref:System.Net.GlobalProxySelection.GetEmptyWebProxy%2A> method.</span></span>  
  
 <span data-ttu-id="ea090-190">Komputer lokalny lub pliku konfiguracji aplikacji może określić, że używane domyślny serwer proxy.</span><span class="sxs-lookup"><span data-stu-id="ea090-190">The local computer or application config file may specify that a default proxy be used.</span></span> <span data-ttu-id="ea090-191">Jeśli <xref:System.Net.Http.HttpClientHandler.Proxy%2A> właściwość jest określona, następnie ustawienia serwera proxy z <xref:System.Net.Http.HttpClientHandler.Proxy%2A> właściwości zastąpić komputera lokalnego lub pliku konfiguracyjnym aplikacji i program obsługi użyje określić ustawienia serwera proxy.</span><span class="sxs-lookup"><span data-stu-id="ea090-191">If the <xref:System.Net.Http.HttpClientHandler.Proxy%2A> property is specified, then the proxy settings from the <xref:System.Net.Http.HttpClientHandler.Proxy%2A> property override the local computer or application config file and the handler will use the proxy settings specified.</span></span> <span data-ttu-id="ea090-192">Jeśli w pliku konfiguracji określono żadnego serwera proxy i <xref:System.Net.Http.HttpClientHandler.Proxy%2A> właściwość nie jest określona, program obsługi używa ustawień serwera proxy dziedziczone z programu Internet Explorer na komputerze lokalnym.</span><span class="sxs-lookup"><span data-stu-id="ea090-192">If no proxy is specified in a config file and the <xref:System.Net.Http.HttpClientHandler.Proxy%2A> property is unspecified, the handler uses the proxy settings inherited from Internet Explorer on the local computer.</span></span> <span data-ttu-id="ea090-193">Jeśli nie ma żadnych ustawień serwera proxy w programie Internet Explorer, żądanie jest wysyłane bezpośrednio do serwera.</span><span class="sxs-lookup"><span data-stu-id="ea090-193">If there are no proxy settings in Internet Explorer, the request is sent directly to the server.</span></span>  
  
 <span data-ttu-id="ea090-194"><xref:System.Net.Http.HttpClientHandler> Analizuje klasy Lista obejść serwerów proxy, z symbolami wieloznacznymi dziedziczone z programu Internet Explorer taka sama jak lista obejść jest analizowana bezpośrednio przez Internet Explorer.</span><span class="sxs-lookup"><span data-stu-id="ea090-194">The <xref:System.Net.Http.HttpClientHandler> class parses a proxy bypass list with wildcard characters inherited from Internet Explorer the same as the bypass list is parsed directly by Internet Explorer.</span></span> <span data-ttu-id="ea090-195">Na przykład <xref:System.Net.Http.HttpClientHandler> klasy będzie analizować obejścia listę "nt *" w programie Internet Explorer jako wyrażenie regularne "nt.\*".</span><span class="sxs-lookup"><span data-stu-id="ea090-195">For example, the <xref:System.Net.Http.HttpClientHandler> class will parse a bypass list of "nt*" from Internet Explorer as a regular expression of "nt.\*".</span></span> <span data-ttu-id="ea090-196">Dlatego adresu URL " http://nt.com" czy pominąć serwer proxy przy użyciu <xref:System.Net.Http.HttpClientHandler> klasy i przy użyciu programu Internet Explorer.</span><span class="sxs-lookup"><span data-stu-id="ea090-196">So a URL of " http://nt.com" would bypass the proxy using the <xref:System.Net.Http.HttpClientHandler> class and using Internet Explorer.</span></span>  
  
 <span data-ttu-id="ea090-197"><xref:System.Net.Http.HttpClientHandler> Klasa obsługuje obejście lokalnego serwera proxy.</span><span class="sxs-lookup"><span data-stu-id="ea090-197">The <xref:System.Net.Http.HttpClientHandler> class supports local proxy bypass.</span></span> <span data-ttu-id="ea090-198">Klasa uwzględnia lokalizację docelową, aby być kontem lokalnym, jeśli spełnione są następujące warunki:</span><span class="sxs-lookup"><span data-stu-id="ea090-198">The class considers a destination to be local if any of the following conditions are met:</span></span>  
  
1.  <span data-ttu-id="ea090-199">Lokalizacja docelowa zawiera płaskiej nazwy (nie kropki w adresie URL).</span><span class="sxs-lookup"><span data-stu-id="ea090-199">The destination contains a flat name (no dots in the URL).</span></span>  
  
2.  <span data-ttu-id="ea090-200">Lokalizacja docelowa zawiera adres sprzężenia zwrotnego (<xref:System.Net.IPAddress.Loopback> lub <xref:System.Net.IPAddress.IPv6Loopback>) lub lokalizacja docelowa zawiera <xref:System.Net.IPAddress> przypisane do komputera lokalnego.</span><span class="sxs-lookup"><span data-stu-id="ea090-200">The destination contains a loopback address (<xref:System.Net.IPAddress.Loopback> or <xref:System.Net.IPAddress.IPv6Loopback>) or the destination contains an <xref:System.Net.IPAddress> assigned to the local computer.</span></span>  
  
3.  <span data-ttu-id="ea090-201">Sufiks domeny docelowego odpowiada sufiks domeny komputera lokalnego (<xref:System.Net.NetworkInformation.IPGlobalProperties.DomainName%2A>).</span><span class="sxs-lookup"><span data-stu-id="ea090-201">The domain suffix of the destination matches the local computer's domain suffix (<xref:System.Net.NetworkInformation.IPGlobalProperties.DomainName%2A>).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SendAsync">
      <MemberSignature Language="C#" Value="protected internal override System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt; SendAsync (System.Net.Http.HttpRequestMessage request, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance class System.Threading.Tasks.Task`1&lt;class System.Net.Http.HttpResponseMessage&gt; SendAsync(class System.Net.Http.HttpRequestMessage request, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpClientHandler.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override System::Threading::Tasks::Task&lt;System::Net::Http::HttpResponseMessage ^&gt; ^ SendAsync(System::Net::Http::HttpRequestMessage ^ request, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="override this.SendAsync : System.Net.Http.HttpRequestMessage * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt;" Usage="httpClientHandler.SendAsync (request, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(System.Net.Http.HttpClientHandler/&lt;SendAsync&gt;c__async0))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="System.Net.Http.HttpRequestMessage" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="request">
          <span data-ttu-id="ea090-202">Komunikat żądania HTTP.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ea090-202">The HTTP request message.</span>
          </span>
        </param>
        <param name="cancellationToken">
          <span data-ttu-id="ea090-203">Token anulowania do anulowania operacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ea090-203">A cancellation token to cancel the operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ea090-204">Tworzy wystąpienie <see cref="T:System.Net.Http.HttpResponseMessage" /> na podstawie informacji dostępnych w <see cref="T:System.Net.Http.HttpRequestMessage" /> jako operacja nie powoduje blokowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ea090-204">Creates an instance of  <see cref="T:System.Net.Http.HttpResponseMessage" /> based on the information provided in the <see cref="T:System.Net.Http.HttpRequestMessage" /> as an operation that will not block.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ea090-205">Obiekt zadania reprezentujący operację asynchroniczną.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ea090-205">The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ea090-206">Ta operacja jest nie są blokowane.</span><span class="sxs-lookup"><span data-stu-id="ea090-206">This operation is does not block.</span></span> <span data-ttu-id="ea090-207">Zwraca wystąpienie <xref:System.Threading.Tasks.Task%601> reprezentujący operację asynchroniczną.</span><span class="sxs-lookup"><span data-stu-id="ea090-207">It returns an instance of <xref:System.Threading.Tasks.Task%601> to represent the asynchronous operation.</span></span> <span data-ttu-id="ea090-208">Po zakończeniu operacji <xref:System.Threading.Tasks.Task%601.Result%2A> zawiera komunikat odpowiedzi.</span><span class="sxs-lookup"><span data-stu-id="ea090-208">When the operation completes, <xref:System.Threading.Tasks.Task%601.Result%2A> contains the response message.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="ea090-209">
            <paramref name="request" /> Został <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ea090-209">The <paramref name="request" /> was <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ServerCertificateCustomValidationCallback">
      <MemberSignature Language="C#" Value="public Func&lt;System.Net.Http.HttpRequestMessage,System.Security.Cryptography.X509Certificates.X509Certificate2,System.Security.Cryptography.X509Certificates.X509Chain,System.Net.Security.SslPolicyErrors,bool&gt; ServerCertificateCustomValidationCallback { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Func`5&lt;class System.Net.Http.HttpRequestMessage, class System.Security.Cryptography.X509Certificates.X509Certificate2, class System.Security.Cryptography.X509Certificates.X509Chain, valuetype System.Net.Security.SslPolicyErrors, bool&gt; ServerCertificateCustomValidationCallback" />
      <MemberSignature Language="DocId" Value="P:System.Net.Http.HttpClientHandler.ServerCertificateCustomValidationCallback" />
      <MemberSignature Language="VB.NET" Value="Public Property ServerCertificateCustomValidationCallback As Func(Of HttpRequestMessage, X509Certificate2, X509Chain, SslPolicyErrors, Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Func&lt;System::Net::Http::HttpRequestMessage ^, System::Security::Cryptography::X509Certificates::X509Certificate2 ^, System::Security::Cryptography::X509Certificates::X509Chain ^, System::Net::Security::SslPolicyErrors, bool&gt; ^ ServerCertificateCustomValidationCallback { Func&lt;System::Net::Http::HttpRequestMessage ^, System::Security::Cryptography::X509Certificates::X509Certificate2 ^, System::Security::Cryptography::X509Certificates::X509Chain ^, System::Net::Security::SslPolicyErrors, bool&gt; ^ get(); void set(Func&lt;System::Net::Http::HttpRequestMessage ^, System::Security::Cryptography::X509Certificates::X509Certificate2 ^, System::Security::Cryptography::X509Certificates::X509Chain ^, System::Net::Security::SslPolicyErrors, bool&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ServerCertificateCustomValidationCallback : Func&lt;System.Net.Http.HttpRequestMessage, System.Security.Cryptography.X509Certificates.X509Certificate2, System.Security.Cryptography.X509Certificates.X509Chain, System.Net.Security.SslPolicyErrors, bool&gt; with get, set" Usage="System.Net.Http.HttpClientHandler.ServerCertificateCustomValidationCallback" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Func&lt;System.Net.Http.HttpRequestMessage,System.Security.Cryptography.X509Certificates.X509Certificate2,System.Security.Cryptography.X509Certificates.X509Chain,System.Net.Security.SslPolicyErrors,System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ea090-210">Pobiera lub Ustawia metodę wywołania zwrotnego można sprawdzić poprawności certyfikatu serwera.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ea090-210">Gets or sets a callback method to validate the server certificate.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ea090-211">Metoda wywołania zwrotnego można sprawdzić poprawności certyfikatu serwera.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ea090-211">A callback method to validate the server certificate.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SslProtocols">
      <MemberSignature Language="C#" Value="public System.Security.Authentication.SslProtocols SslProtocols { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Security.Authentication.SslProtocols SslProtocols" />
      <MemberSignature Language="DocId" Value="P:System.Net.Http.HttpClientHandler.SslProtocols" />
      <MemberSignature Language="VB.NET" Value="Public Property SslProtocols As SslProtocols" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Authentication::SslProtocols SslProtocols { System::Security::Authentication::SslProtocols get(); void set(System::Security::Authentication::SslProtocols value); };" />
      <MemberSignature Language="F#" Value="member this.SslProtocols : System.Security.Authentication.SslProtocols with get, set" Usage="System.Net.Http.HttpClientHandler.SslProtocols" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Authentication.SslProtocols</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ea090-212">Pobiera lub ustawia protokół TLS/SSL używany przez <see cref="T:System.Net.Http.HttpClient" /> obiekty zarządzane przez obiekt HttpClientHandler.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ea090-212">Gets or sets the TLS/SSL protocol used by the <see cref="T:System.Net.Http.HttpClient" /> objects managed by the HttpClientHandler object.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ea090-213">Jedna z wartości zdefiniowanych w <see cref="T:System.Security.Authentication.SslProtocols" /> wyliczenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ea090-213">One of the values defined in the <see cref="T:System.Security.Authentication.SslProtocols" /> enumeration.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.PlatformNotSupportedException">
          <span data-ttu-id="ea090-214">.NET framework 4.7.1 tylko: Ta właściwość nie jest zaimplementowana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ea090-214">.NET Framework 4.7.1 only: This property is not implemented.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="SupportsAutomaticDecompression">
      <MemberSignature Language="C#" Value="public virtual bool SupportsAutomaticDecompression { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsAutomaticDecompression" />
      <MemberSignature Language="DocId" Value="P:System.Net.Http.HttpClientHandler.SupportsAutomaticDecompression" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SupportsAutomaticDecompression As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SupportsAutomaticDecompression { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.SupportsAutomaticDecompression : bool" Usage="System.Net.Http.HttpClientHandler.SupportsAutomaticDecompression" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ea090-215">Pobiera wartość wskazującą, czy program obsługi wspiera automatyczną dekompresję zawartości odpowiedzi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ea090-215">Gets a value that indicates whether the handler supports automatic response content decompression.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ea090-216">
            <see langword="true" /> Jeśli obszar, jeśli program obsługi wspiera automatyczną dekompresję zawartości odpowiedzi; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ea090-216">
              <see langword="true" /> if the if the handler supports automatic response content decompression; otherwise <see langword="false" />.</span>
          </span>
          <span data-ttu-id="ea090-217">Wartość domyślna to <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ea090-217">The default value is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportsProxy">
      <MemberSignature Language="C#" Value="public virtual bool SupportsProxy { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsProxy" />
      <MemberSignature Language="DocId" Value="P:System.Net.Http.HttpClientHandler.SupportsProxy" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SupportsProxy As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SupportsProxy { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.SupportsProxy : bool" Usage="System.Net.Http.HttpClientHandler.SupportsProxy" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ea090-218">Pobiera wartość wskazującą, czy program obsługi wspiera ustawienia serwera proxy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ea090-218">Gets a value that indicates whether the handler supports proxy settings.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ea090-219">
            <see langword="true" /> Jeśli obszar, jeśli program obsługi wspiera ustawienia serwera proxy; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ea090-219">
              <see langword="true" /> if the if the handler supports proxy settings; otherwise <see langword="false" />.</span>
          </span>
          <span data-ttu-id="ea090-220">Wartość domyślna to <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ea090-220">The default value is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportsRedirectConfiguration">
      <MemberSignature Language="C#" Value="public virtual bool SupportsRedirectConfiguration { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsRedirectConfiguration" />
      <MemberSignature Language="DocId" Value="P:System.Net.Http.HttpClientHandler.SupportsRedirectConfiguration" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SupportsRedirectConfiguration As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SupportsRedirectConfiguration { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.SupportsRedirectConfiguration : bool" Usage="System.Net.Http.HttpClientHandler.SupportsRedirectConfiguration" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ea090-221">Pobiera wartość wskazującą, czy program obsługi wspiera konfigurację ustawień dla <see cref="P:System.Net.Http.HttpClientHandler.AllowAutoRedirect" /> i <see cref="P:System.Net.Http.HttpClientHandler.MaxAutomaticRedirections" /> właściwości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ea090-221">Gets a value that indicates whether the handler supports configuration settings for the <see cref="P:System.Net.Http.HttpClientHandler.AllowAutoRedirect" /> and <see cref="P:System.Net.Http.HttpClientHandler.MaxAutomaticRedirections" /> properties.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ea090-222">
            <see langword="true" /> Jeśli obszar, jeśli program obsługi wspiera konfigurację ustawień dla <see cref="P:System.Net.Http.HttpClientHandler.AllowAutoRedirect" /> i <see cref="P:System.Net.Http.HttpClientHandler.MaxAutomaticRedirections" /> właściwości; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ea090-222">
              <see langword="true" /> if the if the handler supports configuration settings for the <see cref="P:System.Net.Http.HttpClientHandler.AllowAutoRedirect" /> and <see cref="P:System.Net.Http.HttpClientHandler.MaxAutomaticRedirections" /> properties; otherwise <see langword="false" />.</span>
          </span>
          <span data-ttu-id="ea090-223">Wartość domyślna to <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ea090-223">The default value is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UseCookies">
      <MemberSignature Language="C#" Value="public bool UseCookies { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseCookies" />
      <MemberSignature Language="DocId" Value="P:System.Net.Http.HttpClientHandler.UseCookies" />
      <MemberSignature Language="VB.NET" Value="Public Property UseCookies As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseCookies { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.UseCookies : bool with get, set" Usage="System.Net.Http.HttpClientHandler.UseCookies" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ea090-224">Pobiera lub ustawia wartość wskazującą, czy program obsługi używa <see cref="P:System.Net.Http.HttpClientHandler.CookieContainer" /> właściwości do przechowywania plików cookie serwera i używa tych plików, podczas wysyłania żądań.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ea090-224">Gets or sets a value that indicates whether the handler uses the  <see cref="P:System.Net.Http.HttpClientHandler.CookieContainer" /> property  to store server cookies and uses these cookies when sending requests.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ea090-225">
            <see langword="true" /> Jeśli obszar, jeśli program obsługi wspiera używa <see cref="P:System.Net.Http.HttpClientHandler.CookieContainer" /> właściwości do przechowywania plików cookie serwera i używa tych plików, podczas wysyłania żądań; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ea090-225">
              <see langword="true" /> if the if the handler supports uses the  <see cref="P:System.Net.Http.HttpClientHandler.CookieContainer" /> property  to store server cookies and uses these cookies when sending requests; otherwise <see langword="false" />.</span>
          </span>
          <span data-ttu-id="ea090-226">Wartość domyślna to <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ea090-226">The default value is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UseDefaultCredentials">
      <MemberSignature Language="C#" Value="public bool UseDefaultCredentials { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseDefaultCredentials" />
      <MemberSignature Language="DocId" Value="P:System.Net.Http.HttpClientHandler.UseDefaultCredentials" />
      <MemberSignature Language="VB.NET" Value="Public Property UseDefaultCredentials As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseDefaultCredentials { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.UseDefaultCredentials : bool with get, set" Usage="System.Net.Http.HttpClientHandler.UseDefaultCredentials" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ea090-227">Pobiera lub ustawia wartość, która określa, czy domyślne poświadczenia są wysyłane z żądania przez program obsługi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ea090-227">Gets or sets a value that controls whether default credentials are sent with requests by the handler.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ea090-228">
            <see langword="true" /> Jeśli są używane domyślne poświadczenia; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ea090-228">
              <see langword="true" /> if the default credentials are used; otherwise <see langword="false" />.</span>
          </span>
          <span data-ttu-id="ea090-229">Wartość domyślna to <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ea090-229">The default value is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ea090-230">Ta właściwość jest ustawiana `true` nawiązaniem żądań przez <xref:System.Net.Http.HttpClientHandler> obiektu Jeśli jest to wymagane przez serwer, uwierzytelniania przy użyciu poświadczeń aktualnie zalogowanego użytkownika.</span><span class="sxs-lookup"><span data-stu-id="ea090-230">Set this property to `true` when requests made by the <xref:System.Net.Http.HttpClientHandler> object should, if requested by the server, be authenticated using the credentials of the currently logged on user.</span></span> <span data-ttu-id="ea090-231">Aplikacje klienckie jest to zachowanie w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="ea090-231">For client applications, this is the desired behavior in most scenarios.</span></span> <span data-ttu-id="ea090-232">Dla aplikacji warstwy środkowej, takich jak aplikacje ASP.NET, zamiast używać tej właściwości można zwykle ustawić <xref:System.Net.Http.HttpClientHandler.Credentials%2A> właściwości do poświadczeń w imieniu którego żądań klienta.</span><span class="sxs-lookup"><span data-stu-id="ea090-232">For middle-tier applications, such as ASP.NET applications, instead of using this property, you would typically set the <xref:System.Net.Http.HttpClientHandler.Credentials%2A> property to the credentials of the client on whose behalf the request is made.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UseProxy">
      <MemberSignature Language="C#" Value="public bool UseProxy { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseProxy" />
      <MemberSignature Language="DocId" Value="P:System.Net.Http.HttpClientHandler.UseProxy" />
      <MemberSignature Language="VB.NET" Value="Public Property UseProxy As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseProxy { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.UseProxy : bool with get, set" Usage="System.Net.Http.HttpClientHandler.UseProxy" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ea090-233">Pobiera lub ustawia wartość wskazującą, czy program obsługi używa serwera proxy dla żądania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ea090-233">Gets or sets a value that indicates whether the handler uses a proxy for requests.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ea090-234">
            <see langword="true" /> Jeśli program obsługi należy użyć serwera proxy dla żądań; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ea090-234">
              <see langword="true" /> if the handler should use a proxy for requests; otherwise <see langword="false" />.</span>
          </span>
          <span data-ttu-id="ea090-235">Wartość domyślna to <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ea090-235">The default value is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>